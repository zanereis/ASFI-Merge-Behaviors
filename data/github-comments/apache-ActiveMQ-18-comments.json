[{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2332324771","html_url":"https://github.com/apache/activemq/pull/1291#issuecomment-2332324771","issue_url":"https://api.github.com/repos/apache/activemq/issues/1291","id":2332324771,"node_id":"IC_kwDOAAMmM86LBHOj","user":{"login":"cshannon","id":123009,"node_id":"MDQ6VXNlcjEyMzAwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/123009?v=4","gravatar_id":"","url":"https://api.github.com/users/cshannon","html_url":"https://github.com/cshannon","followers_url":"https://api.github.com/users/cshannon/followers","following_url":"https://api.github.com/users/cshannon/following{/other_user}","gists_url":"https://api.github.com/users/cshannon/gists{/gist_id}","starred_url":"https://api.github.com/users/cshannon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cshannon/subscriptions","organizations_url":"https://api.github.com/users/cshannon/orgs","repos_url":"https://api.github.com/users/cshannon/repos","events_url":"https://api.github.com/users/cshannon/events{/privacy}","received_events_url":"https://api.github.com/users/cshannon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-09-05T17:54:39Z","updated_at":"2024-09-05T17:54:39Z","author_association":"CONTRIBUTOR","body":"The extra tests here will be nice to have","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2332324771/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2336520825","html_url":"https://github.com/apache/activemq/pull/1291#issuecomment-2336520825","issue_url":"https://api.github.com/repos/apache/activemq/issues/1291","id":2336520825,"node_id":"IC_kwDOAAMmM86LRHp5","user":{"login":"azotcsit","id":20664654,"node_id":"MDQ6VXNlcjIwNjY0NjU0","avatar_url":"https://avatars.githubusercontent.com/u/20664654?v=4","gravatar_id":"","url":"https://api.github.com/users/azotcsit","html_url":"https://github.com/azotcsit","followers_url":"https://api.github.com/users/azotcsit/followers","following_url":"https://api.github.com/users/azotcsit/following{/other_user}","gists_url":"https://api.github.com/users/azotcsit/gists{/gist_id}","starred_url":"https://api.github.com/users/azotcsit/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/azotcsit/subscriptions","organizations_url":"https://api.github.com/users/azotcsit/orgs","repos_url":"https://api.github.com/users/azotcsit/repos","events_url":"https://api.github.com/users/azotcsit/events{/privacy}","received_events_url":"https://api.github.com/users/azotcsit/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-09-08T02:35:57Z","updated_at":"2024-09-08T02:35:57Z","author_association":"CONTRIBUTOR","body":"@mattrpav @cshannon \r\nI tried adding tests for a negative scenario, however, it does not seem to be possible for this particular test/functionality.\r\n\r\nBasically, the idea is to generate an invalid String and pass it to `doMarshallUnMarshallValidation` method, so writeUTF/readUTF fails somewhere. However, after quite a bit of trying, I realized that Java itself does not allow you to create a string with invalid UTF characters. Any invalid sequence of bytes is getting replaced or removed (or an exception thrown) based on https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/nio/charset/CodingErrorAction.html (default is REPLACE). \r\n\r\nHere are two more links with details:\r\n- https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/nio/charset/CharsetEncoder.html\r\n- https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/nio/charset/CharsetDecoder.html\r\n\r\nHere are a few examples where I had created an invalid string which was automatically corrected by Java:\r\n1. out of range character (0X110000)\r\n```\r\nnew String(new byte[]{-12, -112, -128, -128}).getBytes()\r\n[-17, -65, -67, -17, -65, -67, -17, -65, -67, -17, -65, -67]\r\n```\r\n\r\n_* every byte replaced by [-17, -65, -67]_\r\n\r\n2. invalid character (0xC3 0x28 which is out of range for 2-bytes characters, hence invalid)\r\n```\r\nnew String(new byte[]{-61, 40}).getBytes()\r\n[-17, -65, -67, 40]\r\n```\r\n\r\n_* -61 was replaced by [-17, -65, -67], 40 remained as is_\r\n\r\n3. single high surrogate\r\n```\r\n\"\\uD83D\".getBytes()\r\n[63]\r\n```\r\n\r\n_* supplementary characters should be coming as surrogates (pairs of characters called high surrogate [U+D800 - U+DBFF] and low surrogate [U+DC00 to U+DFFF]; single surrogate character is invalid, it was replaced by 63_\r\n\r\n4. double high surrogate\r\n```\r\n\"\\uD83D\\uD83D\".getBytes()\r\n[63, 63]\r\n```\r\n\r\n_* every surrogate character was replaced by 63_\r\n\r\nNotes:\r\n- [-17, -65, -67] represent a replacement character U+FFFD. \r\n- 63 represents another replacement character \"?\".\r\n\r\n\r\nBoth U+FFFD and \"?\" are properly handled by the current logic. So, if it is impossible to trigger an exception using `writeUTF` and `readUTF` on `DataByteArrayOutputStream`/`DataByteArrayInputStream` while working with `String` objects. The only way to trigger an exception is to write invalid bytes manually and then try to read them, but I do not feel this test is the right place for doing that. `MarshallingSupportTest`seems to be a better place for covering such a scenario. I can write a test there. Could you please share your thoughts on this?\r\n\r\n\r\n\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2336520825/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2336524002","html_url":"https://github.com/apache/activemq/pull/1292#issuecomment-2336524002","issue_url":"https://api.github.com/repos/apache/activemq/issues/1292","id":2336524002,"node_id":"IC_kwDOAAMmM86LRIbi","user":{"login":"azotcsit","id":20664654,"node_id":"MDQ6VXNlcjIwNjY0NjU0","avatar_url":"https://avatars.githubusercontent.com/u/20664654?v=4","gravatar_id":"","url":"https://api.github.com/users/azotcsit","html_url":"https://github.com/azotcsit","followers_url":"https://api.github.com/users/azotcsit/followers","following_url":"https://api.github.com/users/azotcsit/following{/other_user}","gists_url":"https://api.github.com/users/azotcsit/gists{/gist_id}","starred_url":"https://api.github.com/users/azotcsit/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/azotcsit/subscriptions","organizations_url":"https://api.github.com/users/azotcsit/orgs","repos_url":"https://api.github.com/users/azotcsit/repos","events_url":"https://api.github.com/users/azotcsit/events{/privacy}","received_events_url":"https://api.github.com/users/azotcsit/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-09-08T02:54:09Z","updated_at":"2024-09-08T02:54:09Z","author_association":"CONTRIBUTOR","body":"@cshannon \r\nI updated this PR, so it has the aforementioned change only. Please, take a look when you have a chance.","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2336524002/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2338074966","html_url":"https://github.com/apache/activemq/pull/1292#issuecomment-2338074966","issue_url":"https://api.github.com/repos/apache/activemq/issues/1292","id":2338074966,"node_id":"IC_kwDOAAMmM86LXDFW","user":{"login":"jbonofre","id":158903,"node_id":"MDQ6VXNlcjE1ODkwMw==","avatar_url":"https://avatars.githubusercontent.com/u/158903?v=4","gravatar_id":"","url":"https://api.github.com/users/jbonofre","html_url":"https://github.com/jbonofre","followers_url":"https://api.github.com/users/jbonofre/followers","following_url":"https://api.github.com/users/jbonofre/following{/other_user}","gists_url":"https://api.github.com/users/jbonofre/gists{/gist_id}","starred_url":"https://api.github.com/users/jbonofre/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jbonofre/subscriptions","organizations_url":"https://api.github.com/users/jbonofre/orgs","repos_url":"https://api.github.com/users/jbonofre/repos","events_url":"https://api.github.com/users/jbonofre/events{/privacy}","received_events_url":"https://api.github.com/users/jbonofre/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-09-09T13:05:19Z","updated_at":"2024-09-09T13:05:19Z","author_association":"MEMBER","body":"It looks good to me now that @cshannon fixed it.","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2338074966/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2338081906","html_url":"https://github.com/apache/activemq/pull/1292#issuecomment-2338081906","issue_url":"https://api.github.com/repos/apache/activemq/issues/1292","id":2338081906,"node_id":"IC_kwDOAAMmM86LXExy","user":{"login":"cshannon","id":123009,"node_id":"MDQ6VXNlcjEyMzAwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/123009?v=4","gravatar_id":"","url":"https://api.github.com/users/cshannon","html_url":"https://github.com/cshannon","followers_url":"https://api.github.com/users/cshannon/followers","following_url":"https://api.github.com/users/cshannon/following{/other_user}","gists_url":"https://api.github.com/users/cshannon/gists{/gist_id}","starred_url":"https://api.github.com/users/cshannon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cshannon/subscriptions","organizations_url":"https://api.github.com/users/cshannon/orgs","repos_url":"https://api.github.com/users/cshannon/repos","events_url":"https://api.github.com/users/cshannon/events{/privacy}","received_events_url":"https://api.github.com/users/cshannon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-09-09T13:08:26Z","updated_at":"2024-09-09T13:08:26Z","author_association":"CONTRIBUTOR","body":"Yeah, the PR is fine, thanks for mergin @jbonofre ","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2338081906/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2341018910","html_url":"https://github.com/apache/activemq/pull/1291#issuecomment-2341018910","issue_url":"https://api.github.com/repos/apache/activemq/issues/1291","id":2341018910,"node_id":"IC_kwDOAAMmM86LiR0e","user":{"login":"cshannon","id":123009,"node_id":"MDQ6VXNlcjEyMzAwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/123009?v=4","gravatar_id":"","url":"https://api.github.com/users/cshannon","html_url":"https://github.com/cshannon","followers_url":"https://api.github.com/users/cshannon/followers","following_url":"https://api.github.com/users/cshannon/following{/other_user}","gists_url":"https://api.github.com/users/cshannon/gists{/gist_id}","starred_url":"https://api.github.com/users/cshannon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cshannon/subscriptions","organizations_url":"https://api.github.com/users/cshannon/orgs","repos_url":"https://api.github.com/users/cshannon/repos","events_url":"https://api.github.com/users/cshannon/events{/privacy}","received_events_url":"https://api.github.com/users/cshannon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-09-10T14:33:54Z","updated_at":"2024-09-10T14:33:54Z","author_association":"CONTRIBUTOR","body":"I think adding a test to MarshallingSupportTest seems ok but I will let @mattrpav since he was the one that requested changes here.","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2341018910/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2341105712","html_url":"https://github.com/apache/activemq/pull/1291#issuecomment-2341105712","issue_url":"https://api.github.com/repos/apache/activemq/issues/1291","id":2341105712,"node_id":"IC_kwDOAAMmM86LinAw","user":{"login":"mattrpav","id":512119,"node_id":"MDQ6VXNlcjUxMjExOQ==","avatar_url":"https://avatars.githubusercontent.com/u/512119?v=4","gravatar_id":"","url":"https://api.github.com/users/mattrpav","html_url":"https://github.com/mattrpav","followers_url":"https://api.github.com/users/mattrpav/followers","following_url":"https://api.github.com/users/mattrpav/following{/other_user}","gists_url":"https://api.github.com/users/mattrpav/gists{/gist_id}","starred_url":"https://api.github.com/users/mattrpav/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mattrpav/subscriptions","organizations_url":"https://api.github.com/users/mattrpav/orgs","repos_url":"https://api.github.com/users/mattrpav/repos","events_url":"https://api.github.com/users/mattrpav/events{/privacy}","received_events_url":"https://api.github.com/users/mattrpav/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-09-10T14:50:26Z","updated_at":"2024-09-10T14:57:54Z","author_association":"CONTRIBUTOR","body":"@azotcsit I think having the incorrect UTF-8 and show how _Java_ auto-corrects it is a good test and serves as a good point to document in a test.\r\n\r\nSince non-Java applications can send things over the wire, the test I'm thinking we need is something like.. bad UTF-8 characters as byte array coming along the wire.. attempt to read in as UTF-8 and failing on the readUTF8() call.\r\n\r\nRough untested..\r\n\r\n```\r\n    @Test\r\n    public void testReadInvalidUT8() throws Exception {\r\n        byte[] badUTF8 = new byte[]{-61, 40};\r\n\r\n        try(DataByteArrayOutputStream dataByteArrayOutputStream = new DataByteArrayOutputStream()) {\r\n            dataByteArrayOutputStream.writeShort(2);\r\n            dataByteArrayOutputStream.write(badUTF8);\r\n            \r\n            DataByteArrayInputStream dataByteArrayInputStream = new DataByteArrayInputStream(dataByteArrayOutputStream.getData());\r\n            System.out.println(dataByteArrayInputStream.readUTF()); <-- expect exception here\r\n        }\r\n    }\r\n```","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2341105712/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2341209503","html_url":"https://github.com/apache/activemq/pull/1286#issuecomment-2341209503","issue_url":"https://api.github.com/repos/apache/activemq/issues/1286","id":2341209503,"node_id":"IC_kwDOAAMmM86LjAWf","user":{"login":"mattrpav","id":512119,"node_id":"MDQ6VXNlcjUxMjExOQ==","avatar_url":"https://avatars.githubusercontent.com/u/512119?v=4","gravatar_id":"","url":"https://api.github.com/users/mattrpav","html_url":"https://github.com/mattrpav","followers_url":"https://api.github.com/users/mattrpav/followers","following_url":"https://api.github.com/users/mattrpav/following{/other_user}","gists_url":"https://api.github.com/users/mattrpav/gists{/gist_id}","starred_url":"https://api.github.com/users/mattrpav/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mattrpav/subscriptions","organizations_url":"https://api.github.com/users/mattrpav/orgs","repos_url":"https://api.github.com/users/mattrpav/repos","events_url":"https://api.github.com/users/mattrpav/events{/privacy}","received_events_url":"https://api.github.com/users/mattrpav/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-09-10T15:12:31Z","updated_at":"2024-09-10T15:12:31Z","author_association":"CONTRIBUTOR","body":"Planned fix path forward:\r\n\r\n1. Apply a new redeliveryPolicy option: queueBrowserIgnored = false (default behavior today)\r\n2. In 7.x set queueBrowserIgnored = true (more consistent behavior for out-of-the-box JMS browse tools)","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2341209503/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2344713471","html_url":"https://github.com/apache/activemq/pull/1291#issuecomment-2344713471","issue_url":"https://api.github.com/repos/apache/activemq/issues/1291","id":2344713471,"node_id":"IC_kwDOAAMmM86LwXz_","user":{"login":"azotcsit","id":20664654,"node_id":"MDQ6VXNlcjIwNjY0NjU0","avatar_url":"https://avatars.githubusercontent.com/u/20664654?v=4","gravatar_id":"","url":"https://api.github.com/users/azotcsit","html_url":"https://github.com/azotcsit","followers_url":"https://api.github.com/users/azotcsit/followers","following_url":"https://api.github.com/users/azotcsit/following{/other_user}","gists_url":"https://api.github.com/users/azotcsit/gists{/gist_id}","starred_url":"https://api.github.com/users/azotcsit/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/azotcsit/subscriptions","organizations_url":"https://api.github.com/users/azotcsit/orgs","repos_url":"https://api.github.com/users/azotcsit/repos","events_url":"https://api.github.com/users/azotcsit/events{/privacy}","received_events_url":"https://api.github.com/users/azotcsit/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-09-11T21:13:52Z","updated_at":"2024-09-11T21:13:52Z","author_association":"CONTRIBUTOR","body":"@mattrpav \r\n\r\nI gave a though to \"non-Java applications can send things over the wire\" scenario that you had pointed out. I think you're right, and we need to have corresponding tests as a part of `DataByteArrayInputStreamTest`. Could you please take a look at the latest changes.\r\n","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2344713471/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2348914803","html_url":"https://github.com/apache/activemq/pull/1267#issuecomment-2348914803","issue_url":"https://api.github.com/repos/apache/activemq/issues/1267","id":2348914803,"node_id":"IC_kwDOAAMmM86MAZhz","user":{"login":"jbonofre","id":158903,"node_id":"MDQ6VXNlcjE1ODkwMw==","avatar_url":"https://avatars.githubusercontent.com/u/158903?v=4","gravatar_id":"","url":"https://api.github.com/users/jbonofre","html_url":"https://github.com/jbonofre","followers_url":"https://api.github.com/users/jbonofre/followers","following_url":"https://api.github.com/users/jbonofre/following{/other_user}","gists_url":"https://api.github.com/users/jbonofre/gists{/gist_id}","starred_url":"https://api.github.com/users/jbonofre/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jbonofre/subscriptions","organizations_url":"https://api.github.com/users/jbonofre/orgs","repos_url":"https://api.github.com/users/jbonofre/repos","events_url":"https://api.github.com/users/jbonofre/events{/privacy}","received_events_url":"https://api.github.com/users/jbonofre/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-09-13T13:03:49Z","updated_at":"2024-09-13T13:03:49Z","author_association":"MEMBER","body":"Superseeded by #1301 ","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2348914803/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2349917446","html_url":"https://github.com/apache/activemq/pull/1045#issuecomment-2349917446","issue_url":"https://api.github.com/repos/apache/activemq/issues/1045","id":2349917446,"node_id":"IC_kwDOAAMmM86MEOUG","user":{"login":"kenliao94","id":6269022,"node_id":"MDQ6VXNlcjYyNjkwMjI=","avatar_url":"https://avatars.githubusercontent.com/u/6269022?v=4","gravatar_id":"","url":"https://api.github.com/users/kenliao94","html_url":"https://github.com/kenliao94","followers_url":"https://api.github.com/users/kenliao94/followers","following_url":"https://api.github.com/users/kenliao94/following{/other_user}","gists_url":"https://api.github.com/users/kenliao94/gists{/gist_id}","starred_url":"https://api.github.com/users/kenliao94/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kenliao94/subscriptions","organizations_url":"https://api.github.com/users/kenliao94/orgs","repos_url":"https://api.github.com/users/kenliao94/repos","events_url":"https://api.github.com/users/kenliao94/events{/privacy}","received_events_url":"https://api.github.com/users/kenliao94/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-09-13T18:57:27Z","updated_at":"2024-09-13T18:57:27Z","author_association":"CONTRIBUTOR","body":"@mattrpav I have a draft PR that did exactly what you suggested \"mostly piggy back on that approach in terms of where and when to invoke the callback\" I will raise it and get back to this thread with link to the pull request.","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2349917446/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2352151871","html_url":"https://github.com/apache/activemq/pull/1045#issuecomment-2352151871","issue_url":"https://api.github.com/repos/apache/activemq/issues/1045","id":2352151871,"node_id":"IC_kwDOAAMmM86MMv0_","user":{"login":"kenliao94","id":6269022,"node_id":"MDQ6VXNlcjYyNjkwMjI=","avatar_url":"https://avatars.githubusercontent.com/u/6269022?v=4","gravatar_id":"","url":"https://api.github.com/users/kenliao94","html_url":"https://github.com/kenliao94","followers_url":"https://api.github.com/users/kenliao94/followers","following_url":"https://api.github.com/users/kenliao94/following{/other_user}","gists_url":"https://api.github.com/users/kenliao94/gists{/gist_id}","starred_url":"https://api.github.com/users/kenliao94/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kenliao94/subscriptions","organizations_url":"https://api.github.com/users/kenliao94/orgs","repos_url":"https://api.github.com/users/kenliao94/repos","events_url":"https://api.github.com/users/kenliao94/events{/privacy}","received_events_url":"https://api.github.com/users/kenliao94/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-09-16T07:04:31Z","updated_at":"2024-09-16T07:04:31Z","author_association":"CONTRIBUTOR","body":"^ https://github.com/apache/activemq/pull/1303\r\n\r\nWDYT?","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2352151871/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2352249231","html_url":"https://github.com/apache/activemq/pull/1302#issuecomment-2352249231","issue_url":"https://api.github.com/repos/apache/activemq/issues/1302","id":2352249231,"node_id":"IC_kwDOAAMmM86MNHmP","user":{"login":"dependabot[bot]","id":49699333,"node_id":"MDM6Qm90NDk2OTkzMzM=","avatar_url":"https://avatars.githubusercontent.com/in/29110?v=4","gravatar_id":"","url":"https://api.github.com/users/dependabot%5Bbot%5D","html_url":"https://github.com/apps/dependabot","followers_url":"https://api.github.com/users/dependabot%5Bbot%5D/followers","following_url":"https://api.github.com/users/dependabot%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/dependabot%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/dependabot%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dependabot%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/dependabot%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/dependabot%5Bbot%5D/repos","events_url":"https://api.github.com/users/dependabot%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/dependabot%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2024-09-16T08:02:25Z","updated_at":"2024-09-16T08:02:25Z","author_association":"NONE","body":"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`.\n\nIf you change your mind, just re-open this PR and I'll resolve any conflicts on it.","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2352249231/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":{"id":29110,"client_id":"Iv1.4f9a6346434f815e","slug":"dependabot","node_id":"MDM6QXBwMjkxMTA=","owner":{"login":"github","id":9919,"node_id":"MDEyOk9yZ2FuaXphdGlvbjk5MTk=","avatar_url":"https://avatars.githubusercontent.com/u/9919?v=4","gravatar_id":"","url":"https://api.github.com/users/github","html_url":"https://github.com/github","followers_url":"https://api.github.com/users/github/followers","following_url":"https://api.github.com/users/github/following{/other_user}","gists_url":"https://api.github.com/users/github/gists{/gist_id}","starred_url":"https://api.github.com/users/github/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github/subscriptions","organizations_url":"https://api.github.com/users/github/orgs","repos_url":"https://api.github.com/users/github/repos","events_url":"https://api.github.com/users/github/events{/privacy}","received_events_url":"https://api.github.com/users/github/received_events","type":"Organization","user_view_type":"public","site_admin":false},"name":"Dependabot","description":"","external_url":"https://dependabot-api.githubapp.com","html_url":"https://github.com/apps/dependabot","created_at":"2019-04-16T22:34:25Z","updated_at":"2024-03-20T21:06:35Z","permissions":{"actions":"read","checks":"write","contents":"write","issues":"write","members":"read","metadata":"read","pull_requests":"write","statuses":"read","vulnerability_alerts":"read","workflows":"write"},"events":["check_suite","issues","issue_comment","label","pull_request","pull_request_review","pull_request_review_comment","repository"]}},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2352287876","html_url":"https://github.com/apache/activemq/pull/1156#issuecomment-2352287876","issue_url":"https://api.github.com/repos/apache/activemq/issues/1156","id":2352287876,"node_id":"IC_kwDOAAMmM86MNRCE","user":{"login":"jbonofre","id":158903,"node_id":"MDQ6VXNlcjE1ODkwMw==","avatar_url":"https://avatars.githubusercontent.com/u/158903?v=4","gravatar_id":"","url":"https://api.github.com/users/jbonofre","html_url":"https://github.com/jbonofre","followers_url":"https://api.github.com/users/jbonofre/followers","following_url":"https://api.github.com/users/jbonofre/following{/other_user}","gists_url":"https://api.github.com/users/jbonofre/gists{/gist_id}","starred_url":"https://api.github.com/users/jbonofre/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jbonofre/subscriptions","organizations_url":"https://api.github.com/users/jbonofre/orgs","repos_url":"https://api.github.com/users/jbonofre/repos","events_url":"https://api.github.com/users/jbonofre/events{/privacy}","received_events_url":"https://api.github.com/users/jbonofre/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-09-16T08:23:48Z","updated_at":"2024-09-16T08:23:48Z","author_association":"MEMBER","body":"This change is breaking `activemq-broker` tests:\r\n\r\n```\r\nCaused by: java.lang.NullPointerException: Cannot invoke \"org.apache.activemq.broker.Connection.isNetworkConnection()\" because the return value of \"org.apache.activemq.broker.ConnectionContext.getConnection()\" is null\r\n        at org.apache.activemq.broker.region.Queue.messageSent(Queue.java:1978)\r\n        at org.apache.activemq.broker.region.Queue.doPendingCursorAdditions(Queue.java:843)\r\n        at org.apache.activemq.broker.region.Queue$CursorAddSync.afterCommit(Queue.java:861)\r\n        at org.apache.activemq.transaction.Transaction.fireAfterCommit(Transaction.java:140)\r\n        at org.apache.activemq.transaction.Transaction.doPostCommit(Transaction.java:211)\r\n```\r\n\r\nI'm fixing.","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2352287876/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2353211058","html_url":"https://github.com/apache/activemq/pull/1156#issuecomment-2353211058","issue_url":"https://api.github.com/repos/apache/activemq/issues/1156","id":2353211058,"node_id":"IC_kwDOAAMmM86MQyay","user":{"login":"mattrpav","id":512119,"node_id":"MDQ6VXNlcjUxMjExOQ==","avatar_url":"https://avatars.githubusercontent.com/u/512119?v=4","gravatar_id":"","url":"https://api.github.com/users/mattrpav","html_url":"https://github.com/mattrpav","followers_url":"https://api.github.com/users/mattrpav/followers","following_url":"https://api.github.com/users/mattrpav/following{/other_user}","gists_url":"https://api.github.com/users/mattrpav/gists{/gist_id}","starred_url":"https://api.github.com/users/mattrpav/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mattrpav/subscriptions","organizations_url":"https://api.github.com/users/mattrpav/orgs","repos_url":"https://api.github.com/users/mattrpav/repos","events_url":"https://api.github.com/users/mattrpav/events{/privacy}","received_events_url":"https://api.github.com/users/mattrpav/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-09-16T15:14:46Z","updated_at":"2024-09-16T15:19:46Z","author_association":"CONTRIBUTOR","body":"> This change is breaking `activemq-broker` tests:\r\n> \r\n> ```\r\n> Caused by: java.lang.NullPointerException: Cannot invoke \"org.apache.activemq.broker.Connection.isNetworkConnection()\" because the return value of \"org.apache.activemq.broker.ConnectionContext.getConnection()\" is null\r\n>         at org.apache.activemq.broker.region.Queue.messageSent(Queue.java:1978)\r\n>         at org.apache.activemq.broker.region.Queue.doPendingCursorAdditions(Queue.java:843)\r\n>         at org.apache.activemq.broker.region.Queue$CursorAddSync.afterCommit(Queue.java:861)\r\n>         at org.apache.activemq.transaction.Transaction.fireAfterCommit(Transaction.java:140)\r\n>         at org.apache.activemq.transaction.Transaction.doPostCommit(Transaction.java:211)\r\n> ```\r\n> \r\n> I'm fixing.\r\n\r\nNull guard added in latest commit [1e94832](https://github.com/apache/activemq/pull/1156/commits/1e948323464d5f22f225eb79c020723abe771080)","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2353211058/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2353212562","html_url":"https://github.com/apache/activemq/pull/1156#issuecomment-2353212562","issue_url":"https://api.github.com/repos/apache/activemq/issues/1156","id":2353212562,"node_id":"IC_kwDOAAMmM86MQyyS","user":{"login":"mattrpav","id":512119,"node_id":"MDQ6VXNlcjUxMjExOQ==","avatar_url":"https://avatars.githubusercontent.com/u/512119?v=4","gravatar_id":"","url":"https://api.github.com/users/mattrpav","html_url":"https://github.com/mattrpav","followers_url":"https://api.github.com/users/mattrpav/followers","following_url":"https://api.github.com/users/mattrpav/following{/other_user}","gists_url":"https://api.github.com/users/mattrpav/gists{/gist_id}","starred_url":"https://api.github.com/users/mattrpav/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mattrpav/subscriptions","organizations_url":"https://api.github.com/users/mattrpav/orgs","repos_url":"https://api.github.com/users/mattrpav/repos","events_url":"https://api.github.com/users/mattrpav/events{/privacy}","received_events_url":"https://api.github.com/users/mattrpav/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-09-16T15:15:24Z","updated_at":"2024-09-16T15:19:35Z","author_association":"CONTRIBUTOR","body":"> The problem I have with this is creating a single flag for all of these extra metrics, and also the name is just very generic with no specifics. If I'm a user and i see \"advancedStatistics\" I have no idea what that means. Also there's nothing that really makes this advanced per se, it's just more stats.\r\n\r\nParameter renamed in latest commit [1e948432](https://github.com/apache/activemq/pull/1156/commits/1e948323464d5f22f225eb79c020723abe771080)","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2353212562/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2353465737","html_url":"https://github.com/apache/activemq/pull/1303#issuecomment-2353465737","issue_url":"https://api.github.com/repos/apache/activemq/issues/1303","id":2353465737,"node_id":"IC_kwDOAAMmM86MRwmJ","user":{"login":"kenliao94","id":6269022,"node_id":"MDQ6VXNlcjYyNjkwMjI=","avatar_url":"https://avatars.githubusercontent.com/u/6269022?v=4","gravatar_id":"","url":"https://api.github.com/users/kenliao94","html_url":"https://github.com/kenliao94","followers_url":"https://api.github.com/users/kenliao94/followers","following_url":"https://api.github.com/users/kenliao94/following{/other_user}","gists_url":"https://api.github.com/users/kenliao94/gists{/gist_id}","starred_url":"https://api.github.com/users/kenliao94/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kenliao94/subscriptions","organizations_url":"https://api.github.com/users/kenliao94/orgs","repos_url":"https://api.github.com/users/kenliao94/repos","events_url":"https://api.github.com/users/kenliao94/events{/privacy}","received_events_url":"https://api.github.com/users/kenliao94/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-09-16T17:07:22Z","updated_at":"2024-09-16T17:07:22Z","author_association":"CONTRIBUTOR","body":"> Although this is only a first iteration (or second, if counting the earlier PR), it feels like you didnt actually read the spec when implementing the methods, or the feedback on the previous PR (i.e. [#1045 (comment)](https://github.com/apache/activemq/pull/1045#issuecomment-1699645592)) as you commented on it. There are multiple places this is obviously not implementing required behaviours.\r\n> \r\n\r\nHi @gemmellr, thank you so much for the feedback, really appreciate you highlighting the problems of this PR. I was reading the specs and looking into that comment after reviewing Matt's closed PR.I did realize it has more nuances (as said tabish121's comment that you linked). The reason why I wanted to raise this draft pr (not meant to be reviewed) is to link it and showed that I have tried it and likely it's missing things too. In hindsight, I should make it more explicit on the title. I will address your comments in a follow up PR.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2353465737/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2354892331","html_url":"https://github.com/apache/activemq/pull/1303#issuecomment-2354892331","issue_url":"https://api.github.com/repos/apache/activemq/issues/1303","id":2354892331,"node_id":"IC_kwDOAAMmM86MXM4r","user":{"login":"gemmellr","id":5106823,"node_id":"MDQ6VXNlcjUxMDY4MjM=","avatar_url":"https://avatars.githubusercontent.com/u/5106823?v=4","gravatar_id":"","url":"https://api.github.com/users/gemmellr","html_url":"https://github.com/gemmellr","followers_url":"https://api.github.com/users/gemmellr/followers","following_url":"https://api.github.com/users/gemmellr/following{/other_user}","gists_url":"https://api.github.com/users/gemmellr/gists{/gist_id}","starred_url":"https://api.github.com/users/gemmellr/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gemmellr/subscriptions","organizations_url":"https://api.github.com/users/gemmellr/orgs","repos_url":"https://api.github.com/users/gemmellr/repos","events_url":"https://api.github.com/users/gemmellr/events{/privacy}","received_events_url":"https://api.github.com/users/gemmellr/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-09-17T08:36:12Z","updated_at":"2024-09-17T08:36:12Z","author_association":"MEMBER","body":"Fair enough. I only looked it over because you had linked to it and asked \"WDYT?\" on the earlier PR, so it seemed like you did want feedback.\r\n\r\nYou dont need to close PRs and open new ones generally, especially drafts, you can just update the existing PR and iterate it until completion.","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2354892331/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2357559073","html_url":"https://github.com/apache/activemq/pull/1303#issuecomment-2357559073","issue_url":"https://api.github.com/repos/apache/activemq/issues/1303","id":2357559073,"node_id":"IC_kwDOAAMmM86MhX8h","user":{"login":"kenliao94","id":6269022,"node_id":"MDQ6VXNlcjYyNjkwMjI=","avatar_url":"https://avatars.githubusercontent.com/u/6269022?v=4","gravatar_id":"","url":"https://api.github.com/users/kenliao94","html_url":"https://github.com/kenliao94","followers_url":"https://api.github.com/users/kenliao94/followers","following_url":"https://api.github.com/users/kenliao94/following{/other_user}","gists_url":"https://api.github.com/users/kenliao94/gists{/gist_id}","starred_url":"https://api.github.com/users/kenliao94/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kenliao94/subscriptions","organizations_url":"https://api.github.com/users/kenliao94/orgs","repos_url":"https://api.github.com/users/kenliao94/repos","events_url":"https://api.github.com/users/kenliao94/events{/privacy}","received_events_url":"https://api.github.com/users/kenliao94/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-09-18T05:49:17Z","updated_at":"2024-09-18T05:49:17Z","author_association":"CONTRIBUTOR","body":"Gotcha, really appreciate your review anyways and I am working to address those.","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2357559073/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2369038246","html_url":"https://github.com/apache/activemq/pull/1296#issuecomment-2369038246","issue_url":"https://api.github.com/repos/apache/activemq/issues/1296","id":2369038246,"node_id":"IC_kwDOAAMmM86NNKem","user":{"login":"mattrpav","id":512119,"node_id":"MDQ6VXNlcjUxMjExOQ==","avatar_url":"https://avatars.githubusercontent.com/u/512119?v=4","gravatar_id":"","url":"https://api.github.com/users/mattrpav","html_url":"https://github.com/mattrpav","followers_url":"https://api.github.com/users/mattrpav/followers","following_url":"https://api.github.com/users/mattrpav/following{/other_user}","gists_url":"https://api.github.com/users/mattrpav/gists{/gist_id}","starred_url":"https://api.github.com/users/mattrpav/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mattrpav/subscriptions","organizations_url":"https://api.github.com/users/mattrpav/orgs","repos_url":"https://api.github.com/users/mattrpav/repos","events_url":"https://api.github.com/users/mattrpav/events{/privacy}","received_events_url":"https://api.github.com/users/mattrpav/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-09-23T18:20:18Z","updated_at":"2024-09-23T18:20:32Z","author_association":"CONTRIBUTOR","body":"@cshannon Good point. I had opted to leave the logging level alone. If there were an exception, it would be a SecurityException (in future JDKs this will cease to be a code path), NPE, or some fatal RuntimeException like OOM, interrupted, etc.\r\n\r\nI'd be in favor of changing the level here to a WARN or ERROR. Perhaps best as a follow-on for 7.x to not break any existing log capture?","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2369038246/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2369052745","html_url":"https://github.com/apache/activemq/pull/1296#issuecomment-2369052745","issue_url":"https://api.github.com/repos/apache/activemq/issues/1296","id":2369052745,"node_id":"IC_kwDOAAMmM86NNOBJ","user":{"login":"cshannon","id":123009,"node_id":"MDQ6VXNlcjEyMzAwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/123009?v=4","gravatar_id":"","url":"https://api.github.com/users/cshannon","html_url":"https://github.com/cshannon","followers_url":"https://api.github.com/users/cshannon/followers","following_url":"https://api.github.com/users/cshannon/following{/other_user}","gists_url":"https://api.github.com/users/cshannon/gists{/gist_id}","starred_url":"https://api.github.com/users/cshannon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cshannon/subscriptions","organizations_url":"https://api.github.com/users/cshannon/orgs","repos_url":"https://api.github.com/users/cshannon/repos","events_url":"https://api.github.com/users/cshannon/events{/privacy}","received_events_url":"https://api.github.com/users/cshannon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-09-23T18:27:02Z","updated_at":"2024-09-23T18:27:02Z","author_association":"CONTRIBUTOR","body":"> I'd be in favor of changing the level here to a WARN or ERROR. Perhaps best as a follow-on for 7.x to not break any existing log capture?\r\n\r\nWe should probably just change it in 6.2.0 or 6.3.0 etc, because with removing the security check it's pretty unlikely to fail. And without the security check if it does fail there's probably something much more serious going on if you can't check a system roperty, so I would think logging it as a WARN level would make sense and maybe in 7.x actually throw an exception.","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2369052745/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2369093740","html_url":"https://github.com/apache/activemq/pull/1296#issuecomment-2369093740","issue_url":"https://api.github.com/repos/apache/activemq/issues/1296","id":2369093740,"node_id":"IC_kwDOAAMmM86NNYBs","user":{"login":"mattrpav","id":512119,"node_id":"MDQ6VXNlcjUxMjExOQ==","avatar_url":"https://avatars.githubusercontent.com/u/512119?v=4","gravatar_id":"","url":"https://api.github.com/users/mattrpav","html_url":"https://github.com/mattrpav","followers_url":"https://api.github.com/users/mattrpav/followers","following_url":"https://api.github.com/users/mattrpav/following{/other_user}","gists_url":"https://api.github.com/users/mattrpav/gists{/gist_id}","starred_url":"https://api.github.com/users/mattrpav/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mattrpav/subscriptions","organizations_url":"https://api.github.com/users/mattrpav/orgs","repos_url":"https://api.github.com/users/mattrpav/repos","events_url":"https://api.github.com/users/mattrpav/events{/privacy}","received_events_url":"https://api.github.com/users/mattrpav/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-09-23T18:46:46Z","updated_at":"2024-09-24T01:07:08Z","author_association":"CONTRIBUTOR","body":"> > I'd be in favor of changing the level here to a WARN or ERROR. Perhaps best as a follow-on for 7.x to not break any existing log capture?\r\n> \r\n> We should probably just change it in 6.2.0 or 6.3.0 etc, because with removing the security check it's pretty unlikely to fail. And without the security check if it does fail there's probably something much more serious going on if you can't check a system roperty, so I would think logging it as a WARN level would make sense and maybe in 7.x actually throw an exception.\r\n\r\nA quick check confirmed that the logger only exists for these two log messages, it may be better to get rid of the logger completely in 7.x and throw an exception?\r\n\r\n1. Merge this as-is in 6.2.0 (Leave log level alone)\r\n2. Remove logger in 7.x and throw an exception\r\n\r\nref: [AMQ-9586](https://issues.apache.org/jira/browse/AMQ-9586)","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2369093740/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2386667112","html_url":"https://github.com/apache/activemq/pull/1286#issuecomment-2386667112","issue_url":"https://api.github.com/repos/apache/activemq/issues/1286","id":2386667112,"node_id":"IC_kwDOAAMmM86OQaZo","user":{"login":"mattrpav","id":512119,"node_id":"MDQ6VXNlcjUxMjExOQ==","avatar_url":"https://avatars.githubusercontent.com/u/512119?v=4","gravatar_id":"","url":"https://api.github.com/users/mattrpav","html_url":"https://github.com/mattrpav","followers_url":"https://api.github.com/users/mattrpav/followers","following_url":"https://api.github.com/users/mattrpav/following{/other_user}","gists_url":"https://api.github.com/users/mattrpav/gists{/gist_id}","starred_url":"https://api.github.com/users/mattrpav/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mattrpav/subscriptions","organizations_url":"https://api.github.com/users/mattrpav/orgs","repos_url":"https://api.github.com/users/mattrpav/repos","events_url":"https://api.github.com/users/mattrpav/events{/privacy}","received_events_url":"https://api.github.com/users/mattrpav/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-10-01T18:16:29Z","updated_at":"2024-10-01T18:16:29Z","author_association":"CONTRIBUTOR","body":"> Is the actual problem that browsing is incrementing the counter when dispatched to a browser and shouldn't be?\r\n\r\nYes! With the caveat that it is *only* when browsing in a transacted session. In AUTO_ACK mode this behavior does not occur.\r\n","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2386667112/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2400218892","html_url":"https://github.com/apache/activemq/pull/1321#issuecomment-2400218892","issue_url":"https://api.github.com/repos/apache/activemq/issues/1321","id":2400218892,"node_id":"IC_kwDOAAMmM86PEG8M","user":{"login":"mattrpav","id":512119,"node_id":"MDQ6VXNlcjUxMjExOQ==","avatar_url":"https://avatars.githubusercontent.com/u/512119?v=4","gravatar_id":"","url":"https://api.github.com/users/mattrpav","html_url":"https://github.com/mattrpav","followers_url":"https://api.github.com/users/mattrpav/followers","following_url":"https://api.github.com/users/mattrpav/following{/other_user}","gists_url":"https://api.github.com/users/mattrpav/gists{/gist_id}","starred_url":"https://api.github.com/users/mattrpav/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mattrpav/subscriptions","organizations_url":"https://api.github.com/users/mattrpav/orgs","repos_url":"https://api.github.com/users/mattrpav/repos","events_url":"https://api.github.com/users/mattrpav/events{/privacy}","received_events_url":"https://api.github.com/users/mattrpav/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-10-08T15:49:45Z","updated_at":"2024-10-08T15:49:45Z","author_association":"CONTRIBUTOR","body":"Hi @kana-dowjones-  Thank you for the PR. Please rebase your branch, so only your commit is present in the PR.\r\n\r\nWould you please elaborate on the use case for this change? Could this change be implemented with _new_ method overloads vs modifying the existing methods (SPI-breaking change).\r\n\r\nThanks!","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2400218892/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2421644706","html_url":"https://github.com/apache/activemq/pull/1322#issuecomment-2421644706","issue_url":"https://api.github.com/repos/apache/activemq/issues/1322","id":2421644706,"node_id":"IC_kwDOAAMmM86QV12i","user":{"login":"kenliao94","id":6269022,"node_id":"MDQ6VXNlcjYyNjkwMjI=","avatar_url":"https://avatars.githubusercontent.com/u/6269022?v=4","gravatar_id":"","url":"https://api.github.com/users/kenliao94","html_url":"https://github.com/kenliao94","followers_url":"https://api.github.com/users/kenliao94/followers","following_url":"https://api.github.com/users/kenliao94/following{/other_user}","gists_url":"https://api.github.com/users/kenliao94/gists{/gist_id}","starred_url":"https://api.github.com/users/kenliao94/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kenliao94/subscriptions","organizations_url":"https://api.github.com/users/kenliao94/orgs","repos_url":"https://api.github.com/users/kenliao94/repos","events_url":"https://api.github.com/users/kenliao94/events{/privacy}","received_events_url":"https://api.github.com/users/kenliao94/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-10-18T07:27:41Z","updated_at":"2024-10-18T07:29:27Z","author_association":"CONTRIBUTOR","body":"Hi @kana-dowjones why do we need those attributes? Could you elaborate on the benefit of this usecase?\r\n\r\nAnd it would be great to capture this in a Jira ticket as well https://issues.apache.org/jira/projects/AMQ","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2421644706/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2422474864","html_url":"https://github.com/apache/activemq/pull/1322#issuecomment-2422474864","issue_url":"https://api.github.com/repos/apache/activemq/issues/1322","id":2422474864,"node_id":"IC_kwDOAAMmM86QZAhw","user":{"login":"kana-dowjones","id":54372484,"node_id":"MDQ6VXNlcjU0MzcyNDg0","avatar_url":"https://avatars.githubusercontent.com/u/54372484?v=4","gravatar_id":"","url":"https://api.github.com/users/kana-dowjones","html_url":"https://github.com/kana-dowjones","followers_url":"https://api.github.com/users/kana-dowjones/followers","following_url":"https://api.github.com/users/kana-dowjones/following{/other_user}","gists_url":"https://api.github.com/users/kana-dowjones/gists{/gist_id}","starred_url":"https://api.github.com/users/kana-dowjones/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kana-dowjones/subscriptions","organizations_url":"https://api.github.com/users/kana-dowjones/orgs","repos_url":"https://api.github.com/users/kana-dowjones/repos","events_url":"https://api.github.com/users/kana-dowjones/events{/privacy}","received_events_url":"https://api.github.com/users/kana-dowjones/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-10-18T13:25:48Z","updated_at":"2024-10-18T13:25:48Z","author_association":"NONE","body":"When I said `We need those attributes` I meant this is our company system-specific case. We have a listener to send notifications about unscheduled messages to interested parties and naturally we need to include some attributes from the original message. Currently, when we delete messages from the scheduler all we have is jobId. \r\n\r\nDo you want me to create a Jira ticket?","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2422474864/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2423431432","html_url":"https://github.com/apache/activemq/pull/1325#issuecomment-2423431432","issue_url":"https://api.github.com/repos/apache/activemq/issues/1325","id":2423431432,"node_id":"IC_kwDOAAMmM86QcqEI","user":{"login":"mattrpav","id":512119,"node_id":"MDQ6VXNlcjUxMjExOQ==","avatar_url":"https://avatars.githubusercontent.com/u/512119?v=4","gravatar_id":"","url":"https://api.github.com/users/mattrpav","html_url":"https://github.com/mattrpav","followers_url":"https://api.github.com/users/mattrpav/followers","following_url":"https://api.github.com/users/mattrpav/following{/other_user}","gists_url":"https://api.github.com/users/mattrpav/gists{/gist_id}","starred_url":"https://api.github.com/users/mattrpav/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mattrpav/subscriptions","organizations_url":"https://api.github.com/users/mattrpav/orgs","repos_url":"https://api.github.com/users/mattrpav/repos","events_url":"https://api.github.com/users/mattrpav/events{/privacy}","received_events_url":"https://api.github.com/users/mattrpav/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-10-19T01:34:04Z","updated_at":"2024-10-19T01:34:32Z","author_association":"CONTRIBUTOR","body":"This PR is not properly re-based and the approach appears to be incorrect.\r\n\r\nWhat is the error stacktrace of the error? \r\n\r\nnote: ActiveMQ 6.x uses a combined JAAS realm, which is different from 5.x where Jetty had its own JAAS realm and user+password+group file. If there is an issue with the demo, the demo jetty.xml file should be updated, and not a reference to the jetty-5.x-realm.properties which is only provided for historical purposes.","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2423431432/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2423432364","html_url":"https://github.com/apache/activemq/pull/1324#issuecomment-2423432364","issue_url":"https://api.github.com/repos/apache/activemq/issues/1324","id":2423432364,"node_id":"IC_kwDOAAMmM86QcqSs","user":{"login":"mattrpav","id":512119,"node_id":"MDQ6VXNlcjUxMjExOQ==","avatar_url":"https://avatars.githubusercontent.com/u/512119?v=4","gravatar_id":"","url":"https://api.github.com/users/mattrpav","html_url":"https://github.com/mattrpav","followers_url":"https://api.github.com/users/mattrpav/followers","following_url":"https://api.github.com/users/mattrpav/following{/other_user}","gists_url":"https://api.github.com/users/mattrpav/gists{/gist_id}","starred_url":"https://api.github.com/users/mattrpav/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mattrpav/subscriptions","organizations_url":"https://api.github.com/users/mattrpav/orgs","repos_url":"https://api.github.com/users/mattrpav/repos","events_url":"https://api.github.com/users/mattrpav/events{/privacy}","received_events_url":"https://api.github.com/users/mattrpav/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-10-19T01:36:40Z","updated_at":"2024-10-19T01:36:40Z","author_association":"CONTRIBUTOR","body":"Do you have a unit test the reproduces the issue?","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2423432364/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2423435959","html_url":"https://github.com/apache/activemq/pull/1324#issuecomment-2423435959","issue_url":"https://api.github.com/repos/apache/activemq/issues/1324","id":2423435959,"node_id":"IC_kwDOAAMmM86QcrK3","user":{"login":"Nikita-Shupletsov","id":175163279,"node_id":"U_kgDOCnDHjw","avatar_url":"https://avatars.githubusercontent.com/u/175163279?v=4","gravatar_id":"","url":"https://api.github.com/users/Nikita-Shupletsov","html_url":"https://github.com/Nikita-Shupletsov","followers_url":"https://api.github.com/users/Nikita-Shupletsov/followers","following_url":"https://api.github.com/users/Nikita-Shupletsov/following{/other_user}","gists_url":"https://api.github.com/users/Nikita-Shupletsov/gists{/gist_id}","starred_url":"https://api.github.com/users/Nikita-Shupletsov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Nikita-Shupletsov/subscriptions","organizations_url":"https://api.github.com/users/Nikita-Shupletsov/orgs","repos_url":"https://api.github.com/users/Nikita-Shupletsov/repos","events_url":"https://api.github.com/users/Nikita-Shupletsov/events{/privacy}","received_events_url":"https://api.github.com/users/Nikita-Shupletsov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-10-19T01:43:33Z","updated_at":"2024-10-19T01:43:33Z","author_association":"NONE","body":"> Do you have a unit test the reproduces the issue?\r\n\r\nthe test I added reproduces the issue. without the fix the test will fail","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2423435959/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2427167582","html_url":"https://github.com/apache/activemq/pull/1326#issuecomment-2427167582","issue_url":"https://api.github.com/repos/apache/activemq/issues/1326","id":2427167582,"node_id":"IC_kwDOAAMmM86Qq6Ne","user":{"login":"pa-deasy","id":83254994,"node_id":"MDQ6VXNlcjgzMjU0OTk0","avatar_url":"https://avatars.githubusercontent.com/u/83254994?v=4","gravatar_id":"","url":"https://api.github.com/users/pa-deasy","html_url":"https://github.com/pa-deasy","followers_url":"https://api.github.com/users/pa-deasy/followers","following_url":"https://api.github.com/users/pa-deasy/following{/other_user}","gists_url":"https://api.github.com/users/pa-deasy/gists{/gist_id}","starred_url":"https://api.github.com/users/pa-deasy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pa-deasy/subscriptions","organizations_url":"https://api.github.com/users/pa-deasy/orgs","repos_url":"https://api.github.com/users/pa-deasy/repos","events_url":"https://api.github.com/users/pa-deasy/events{/privacy}","received_events_url":"https://api.github.com/users/pa-deasy/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-10-21T16:33:05Z","updated_at":"2024-10-21T16:33:05Z","author_association":"CONTRIBUTOR","body":"Change LGTM. Thanks Ken.","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2427167582/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2429366349","html_url":"https://github.com/apache/activemq/pull/1323#issuecomment-2429366349","issue_url":"https://api.github.com/repos/apache/activemq/issues/1323","id":2429366349,"node_id":"IC_kwDOAAMmM86QzTBN","user":{"login":"dependabot[bot]","id":49699333,"node_id":"MDM6Qm90NDk2OTkzMzM=","avatar_url":"https://avatars.githubusercontent.com/in/29110?v=4","gravatar_id":"","url":"https://api.github.com/users/dependabot%5Bbot%5D","html_url":"https://github.com/apps/dependabot","followers_url":"https://api.github.com/users/dependabot%5Bbot%5D/followers","following_url":"https://api.github.com/users/dependabot%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/dependabot%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/dependabot%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dependabot%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/dependabot%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/dependabot%5Bbot%5D/repos","events_url":"https://api.github.com/users/dependabot%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/dependabot%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2024-10-22T13:57:31Z","updated_at":"2024-10-22T13:57:31Z","author_association":"NONE","body":"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`.\n\nIf you change your mind, just re-open this PR and I'll resolve any conflicts on it.","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2429366349/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":{"id":29110,"client_id":"Iv1.4f9a6346434f815e","slug":"dependabot","node_id":"MDM6QXBwMjkxMTA=","owner":{"login":"github","id":9919,"node_id":"MDEyOk9yZ2FuaXphdGlvbjk5MTk=","avatar_url":"https://avatars.githubusercontent.com/u/9919?v=4","gravatar_id":"","url":"https://api.github.com/users/github","html_url":"https://github.com/github","followers_url":"https://api.github.com/users/github/followers","following_url":"https://api.github.com/users/github/following{/other_user}","gists_url":"https://api.github.com/users/github/gists{/gist_id}","starred_url":"https://api.github.com/users/github/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github/subscriptions","organizations_url":"https://api.github.com/users/github/orgs","repos_url":"https://api.github.com/users/github/repos","events_url":"https://api.github.com/users/github/events{/privacy}","received_events_url":"https://api.github.com/users/github/received_events","type":"Organization","user_view_type":"public","site_admin":false},"name":"Dependabot","description":"","external_url":"https://dependabot-api.githubapp.com","html_url":"https://github.com/apps/dependabot","created_at":"2019-04-16T22:34:25Z","updated_at":"2024-03-20T21:06:35Z","permissions":{"actions":"read","checks":"write","contents":"write","issues":"write","members":"read","metadata":"read","pull_requests":"write","statuses":"read","vulnerability_alerts":"read","workflows":"write"},"events":["check_suite","issues","issue_comment","label","pull_request","pull_request_review","pull_request_review_comment","repository"]}},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2433250908","html_url":"https://github.com/apache/activemq/pull/1288#issuecomment-2433250908","issue_url":"https://api.github.com/repos/apache/activemq/issues/1288","id":2433250908,"node_id":"IC_kwDOAAMmM86RCHZc","user":{"login":"cshannon","id":123009,"node_id":"MDQ6VXNlcjEyMzAwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/123009?v=4","gravatar_id":"","url":"https://api.github.com/users/cshannon","html_url":"https://github.com/cshannon","followers_url":"https://api.github.com/users/cshannon/followers","following_url":"https://api.github.com/users/cshannon/following{/other_user}","gists_url":"https://api.github.com/users/cshannon/gists{/gist_id}","starred_url":"https://api.github.com/users/cshannon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cshannon/subscriptions","organizations_url":"https://api.github.com/users/cshannon/orgs","repos_url":"https://api.github.com/users/cshannon/repos","events_url":"https://api.github.com/users/cshannon/events{/privacy}","received_events_url":"https://api.github.com/users/cshannon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-10-23T19:21:19Z","updated_at":"2024-10-23T19:23:20Z","author_association":"CONTRIBUTOR","body":"@jbonofre and @mattrpav -\r\n\r\nI took a look at this and I agree with Matt for all the points he made. The suppression configuration here is because of performance reasons. You are suppressing the returned queue metrics over JMX to not overload things. That doesn't mean the queues don't exist or are not valid so I don't think it makes sense to hide suppressed queues from the metrics. On the other hand I get JB's point about it could be a little confusing if getQueues() is returning a different number because of the suppression.\r\n\r\nSo if I had to pick one I would agree with @mattrpav and say we should return total queues. However, why not just provide both and call it a day? Just provide both a total count for the broker of the over all queue count and also an un-suppressed count metric.\r\n\r\nWe could have something like getTotalQueueCount() and getUnsupressedQueueCount() or something like that. The total queues just can just use the map size with is a fast constant operation as @mattrpav pointed out. For suppressed queues you could iterate over the queues in the map and count them to avoid object allocation on the broker side, or we could just keep a counter that keeps a running total on queue adds/deletes.\r\n","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2433250908/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2433258837","html_url":"https://github.com/apache/activemq/pull/1288#issuecomment-2433258837","issue_url":"https://api.github.com/repos/apache/activemq/issues/1288","id":2433258837,"node_id":"IC_kwDOAAMmM86RCJVV","user":{"login":"cshannon","id":123009,"node_id":"MDQ6VXNlcjEyMzAwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/123009?v=4","gravatar_id":"","url":"https://api.github.com/users/cshannon","html_url":"https://github.com/cshannon","followers_url":"https://api.github.com/users/cshannon/followers","following_url":"https://api.github.com/users/cshannon/following{/other_user}","gists_url":"https://api.github.com/users/cshannon/gists{/gist_id}","starred_url":"https://api.github.com/users/cshannon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cshannon/subscriptions","organizations_url":"https://api.github.com/users/cshannon/orgs","repos_url":"https://api.github.com/users/cshannon/repos","events_url":"https://api.github.com/users/cshannon/events{/privacy}","received_events_url":"https://api.github.com/users/cshannon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-10-23T19:25:40Z","updated_at":"2024-10-23T19:25:40Z","author_association":"CONTRIBUTOR","body":"Also the naming doesn't matter, can pick whatever makes sense. The point is just provide both metrics as they could both be useful but make sure we compute them without a bunch of memory allocation","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2433258837/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2433297342","html_url":"https://github.com/apache/activemq/pull/1288#issuecomment-2433297342","issue_url":"https://api.github.com/repos/apache/activemq/issues/1288","id":2433297342,"node_id":"IC_kwDOAAMmM86RCSu-","user":{"login":"jbonofre","id":158903,"node_id":"MDQ6VXNlcjE1ODkwMw==","avatar_url":"https://avatars.githubusercontent.com/u/158903?v=4","gravatar_id":"","url":"https://api.github.com/users/jbonofre","html_url":"https://github.com/jbonofre","followers_url":"https://api.github.com/users/jbonofre/followers","following_url":"https://api.github.com/users/jbonofre/following{/other_user}","gists_url":"https://api.github.com/users/jbonofre/gists{/gist_id}","starred_url":"https://api.github.com/users/jbonofre/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jbonofre/subscriptions","organizations_url":"https://api.github.com/users/jbonofre/orgs","repos_url":"https://api.github.com/users/jbonofre/repos","events_url":"https://api.github.com/users/jbonofre/events{/privacy}","received_events_url":"https://api.github.com/users/jbonofre/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-10-23T19:47:23Z","updated_at":"2024-10-23T19:47:23Z","author_association":"MEMBER","body":"Ok fair enough. I propose to add the two operations as I'm sure users will need both. ","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2433297342/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2438628150","html_url":"https://github.com/apache/activemq/pull/1322#issuecomment-2438628150","issue_url":"https://api.github.com/repos/apache/activemq/issues/1322","id":2438628150,"node_id":"IC_kwDOAAMmM86RWoM2","user":{"login":"kenliao94","id":6269022,"node_id":"MDQ6VXNlcjYyNjkwMjI=","avatar_url":"https://avatars.githubusercontent.com/u/6269022?v=4","gravatar_id":"","url":"https://api.github.com/users/kenliao94","html_url":"https://github.com/kenliao94","followers_url":"https://api.github.com/users/kenliao94/followers","following_url":"https://api.github.com/users/kenliao94/following{/other_user}","gists_url":"https://api.github.com/users/kenliao94/gists{/gist_id}","starred_url":"https://api.github.com/users/kenliao94/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kenliao94/subscriptions","organizations_url":"https://api.github.com/users/kenliao94/orgs","repos_url":"https://api.github.com/users/kenliao94/repos","events_url":"https://api.github.com/users/kenliao94/events{/privacy}","received_events_url":"https://api.github.com/users/kenliao94/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-10-25T19:17:35Z","updated_at":"2024-10-25T19:17:35Z","author_association":"CONTRIBUTOR","body":"@kana-dowjones yes please create a Jira ticket for further triage.\r\n\r\nPersonally I don't mind the change, but the change itself should benefit the whole community and not specific to a company requirement. So I am curious about what other people think.","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2438628150/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2438629829","html_url":"https://github.com/apache/activemq/pull/1282#issuecomment-2438629829","issue_url":"https://api.github.com/repos/apache/activemq/issues/1282","id":2438629829,"node_id":"IC_kwDOAAMmM86RWonF","user":{"login":"kenliao94","id":6269022,"node_id":"MDQ6VXNlcjYyNjkwMjI=","avatar_url":"https://avatars.githubusercontent.com/u/6269022?v=4","gravatar_id":"","url":"https://api.github.com/users/kenliao94","html_url":"https://github.com/kenliao94","followers_url":"https://api.github.com/users/kenliao94/followers","following_url":"https://api.github.com/users/kenliao94/following{/other_user}","gists_url":"https://api.github.com/users/kenliao94/gists{/gist_id}","starred_url":"https://api.github.com/users/kenliao94/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kenliao94/subscriptions","organizations_url":"https://api.github.com/users/kenliao94/orgs","repos_url":"https://api.github.com/users/kenliao94/repos","events_url":"https://api.github.com/users/kenliao94/events{/privacy}","received_events_url":"https://api.github.com/users/kenliao94/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-10-25T19:18:49Z","updated_at":"2024-10-25T19:18:49Z","author_association":"CONTRIBUTOR","body":"@jbonofre Hey JB, could you take a quick look at this PR? Thanks.","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2438629829/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2438637557","html_url":"https://github.com/apache/activemq/pull/1282#issuecomment-2438637557","issue_url":"https://api.github.com/repos/apache/activemq/issues/1282","id":2438637557,"node_id":"IC_kwDOAAMmM86RWqf1","user":{"login":"mattrpav","id":512119,"node_id":"MDQ6VXNlcjUxMjExOQ==","avatar_url":"https://avatars.githubusercontent.com/u/512119?v=4","gravatar_id":"","url":"https://api.github.com/users/mattrpav","html_url":"https://github.com/mattrpav","followers_url":"https://api.github.com/users/mattrpav/followers","following_url":"https://api.github.com/users/mattrpav/following{/other_user}","gists_url":"https://api.github.com/users/mattrpav/gists{/gist_id}","starred_url":"https://api.github.com/users/mattrpav/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mattrpav/subscriptions","organizations_url":"https://api.github.com/users/mattrpav/orgs","repos_url":"https://api.github.com/users/mattrpav/repos","events_url":"https://api.github.com/users/mattrpav/events{/privacy}","received_events_url":"https://api.github.com/users/mattrpav/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-10-25T19:23:59Z","updated_at":"2024-10-25T19:24:43Z","author_association":"CONTRIBUTOR","body":"The code change is fine -- I think the ticket description and commit message could be clarified/simplified as this is just a simple modernization and not a fundamental change in loop algorithm.\r\n\r\nSomething like:\r\nactivemq-ra: modernize loops to remove iterator","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2438637557/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2438645572","html_url":"https://github.com/apache/activemq/pull/1322#issuecomment-2438645572","issue_url":"https://api.github.com/repos/apache/activemq/issues/1322","id":2438645572,"node_id":"IC_kwDOAAMmM86RWsdE","user":{"login":"mattrpav","id":512119,"node_id":"MDQ6VXNlcjUxMjExOQ==","avatar_url":"https://avatars.githubusercontent.com/u/512119?v=4","gravatar_id":"","url":"https://api.github.com/users/mattrpav","html_url":"https://github.com/mattrpav","followers_url":"https://api.github.com/users/mattrpav/followers","following_url":"https://api.github.com/users/mattrpav/following{/other_user}","gists_url":"https://api.github.com/users/mattrpav/gists{/gist_id}","starred_url":"https://api.github.com/users/mattrpav/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mattrpav/subscriptions","organizations_url":"https://api.github.com/users/mattrpav/orgs","repos_url":"https://api.github.com/users/mattrpav/repos","events_url":"https://api.github.com/users/mattrpav/events{/privacy}","received_events_url":"https://api.github.com/users/mattrpav/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-10-25T19:29:19Z","updated_at":"2024-10-25T19:29:19Z","author_association":"CONTRIBUTOR","body":"Since this is for managing scheduled messages via the messaging API, I think the new methods can be additive, vs a refactor of existing methods which is a SPI breaking change. Management via JMX or other entry point would not have an associated message or messageId to use.","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2438645572/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2438654541","html_url":"https://github.com/apache/activemq/pull/1322#issuecomment-2438654541","issue_url":"https://api.github.com/repos/apache/activemq/issues/1322","id":2438654541,"node_id":"IC_kwDOAAMmM86RWupN","user":{"login":"tabish121","id":146346,"node_id":"MDQ6VXNlcjE0NjM0Ng==","avatar_url":"https://avatars.githubusercontent.com/u/146346?v=4","gravatar_id":"","url":"https://api.github.com/users/tabish121","html_url":"https://github.com/tabish121","followers_url":"https://api.github.com/users/tabish121/followers","following_url":"https://api.github.com/users/tabish121/following{/other_user}","gists_url":"https://api.github.com/users/tabish121/gists{/gist_id}","starred_url":"https://api.github.com/users/tabish121/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tabish121/subscriptions","organizations_url":"https://api.github.com/users/tabish121/orgs","repos_url":"https://api.github.com/users/tabish121/repos","events_url":"https://api.github.com/users/tabish121/events{/privacy}","received_events_url":"https://api.github.com/users/tabish121/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-10-25T19:35:28Z","updated_at":"2024-10-25T19:35:28Z","author_association":"CONTRIBUTOR","body":"The original intention was to define this API as disjoint from the Messages as that is not really necessary at this level, and given the changes are adding Message only to remove class, why would the other APIs not also take a Message as you create a scheduled message from an inbound Message.  Overall the change fells like bad API design, but do as you will.  ","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2438654541/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2456473108","html_url":"https://github.com/apache/activemq/pull/1344#issuecomment-2456473108","issue_url":"https://api.github.com/repos/apache/activemq/issues/1344","id":2456473108,"node_id":"IC_kwDOAAMmM86Sas4U","user":{"login":"jbonofre","id":158903,"node_id":"MDQ6VXNlcjE1ODkwMw==","avatar_url":"https://avatars.githubusercontent.com/u/158903?v=4","gravatar_id":"","url":"https://api.github.com/users/jbonofre","html_url":"https://github.com/jbonofre","followers_url":"https://api.github.com/users/jbonofre/followers","following_url":"https://api.github.com/users/jbonofre/following{/other_user}","gists_url":"https://api.github.com/users/jbonofre/gists{/gist_id}","starred_url":"https://api.github.com/users/jbonofre/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jbonofre/subscriptions","organizations_url":"https://api.github.com/users/jbonofre/orgs","repos_url":"https://api.github.com/users/jbonofre/repos","events_url":"https://api.github.com/users/jbonofre/events{/privacy}","received_events_url":"https://api.github.com/users/jbonofre/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-11-05T07:57:17Z","updated_at":"2024-11-05T07:57:17Z","author_association":"MEMBER","body":"I'm already working on this for 6.2./6.3.x.","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2456473108/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2464305109","html_url":"https://github.com/apache/activemq/pull/1247#issuecomment-2464305109","issue_url":"https://api.github.com/repos/apache/activemq/issues/1247","id":2464305109,"node_id":"IC_kwDOAAMmM86S4k_V","user":{"login":"jbonofre","id":158903,"node_id":"MDQ6VXNlcjE1ODkwMw==","avatar_url":"https://avatars.githubusercontent.com/u/158903?v=4","gravatar_id":"","url":"https://api.github.com/users/jbonofre","html_url":"https://github.com/jbonofre","followers_url":"https://api.github.com/users/jbonofre/followers","following_url":"https://api.github.com/users/jbonofre/following{/other_user}","gists_url":"https://api.github.com/users/jbonofre/gists{/gist_id}","starred_url":"https://api.github.com/users/jbonofre/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jbonofre/subscriptions","organizations_url":"https://api.github.com/users/jbonofre/orgs","repos_url":"https://api.github.com/users/jbonofre/repos","events_url":"https://api.github.com/users/jbonofre/events{/privacy}","received_events_url":"https://api.github.com/users/jbonofre/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-11-08T10:09:00Z","updated_at":"2024-11-08T10:09:00Z","author_association":"MEMBER","body":"FYI, in some contexts, the `VirtualConsumerDemandTest` can be stuck. It's not related to this PR (known issue).","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2464305109/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2464780174","html_url":"https://github.com/apache/activemq/pull/1247#issuecomment-2464780174","issue_url":"https://api.github.com/repos/apache/activemq/issues/1247","id":2464780174,"node_id":"IC_kwDOAAMmM86S6Y-O","user":{"login":"mattrpav","id":512119,"node_id":"MDQ6VXNlcjUxMjExOQ==","avatar_url":"https://avatars.githubusercontent.com/u/512119?v=4","gravatar_id":"","url":"https://api.github.com/users/mattrpav","html_url":"https://github.com/mattrpav","followers_url":"https://api.github.com/users/mattrpav/followers","following_url":"https://api.github.com/users/mattrpav/following{/other_user}","gists_url":"https://api.github.com/users/mattrpav/gists{/gist_id}","starred_url":"https://api.github.com/users/mattrpav/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mattrpav/subscriptions","organizations_url":"https://api.github.com/users/mattrpav/orgs","repos_url":"https://api.github.com/users/mattrpav/repos","events_url":"https://api.github.com/users/mattrpav/events{/privacy}","received_events_url":"https://api.github.com/users/mattrpav/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-11-08T13:33:09Z","updated_at":"2024-11-08T13:35:35Z","author_association":"CONTRIBUTOR","body":"This type of internal broker plugin and extension points (API/SPI) change should happen in a minor release 6.2.x and not a minor release like v6.1.4.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2464780174/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2464801303","html_url":"https://github.com/apache/activemq/pull/1247#issuecomment-2464801303","issue_url":"https://api.github.com/repos/apache/activemq/issues/1247","id":2464801303,"node_id":"IC_kwDOAAMmM86S6eIX","user":{"login":"jbonofre","id":158903,"node_id":"MDQ6VXNlcjE1ODkwMw==","avatar_url":"https://avatars.githubusercontent.com/u/158903?v=4","gravatar_id":"","url":"https://api.github.com/users/jbonofre","html_url":"https://github.com/jbonofre","followers_url":"https://api.github.com/users/jbonofre/followers","following_url":"https://api.github.com/users/jbonofre/following{/other_user}","gists_url":"https://api.github.com/users/jbonofre/gists{/gist_id}","starred_url":"https://api.github.com/users/jbonofre/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jbonofre/subscriptions","organizations_url":"https://api.github.com/users/jbonofre/orgs","repos_url":"https://api.github.com/users/jbonofre/repos","events_url":"https://api.github.com/users/jbonofre/events{/privacy}","received_events_url":"https://api.github.com/users/jbonofre/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-11-08T13:44:04Z","updated_at":"2024-11-08T13:44:04Z","author_association":"MEMBER","body":"@mattrpav as it's a bug fix, I think it's ok for have it on all active branches.","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2464801303/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2465445888","html_url":"https://github.com/apache/activemq/pull/1288#issuecomment-2465445888","issue_url":"https://api.github.com/repos/apache/activemq/issues/1288","id":2465445888,"node_id":"IC_kwDOAAMmM86S87gA","user":{"login":"kenliao94","id":6269022,"node_id":"MDQ6VXNlcjYyNjkwMjI=","avatar_url":"https://avatars.githubusercontent.com/u/6269022?v=4","gravatar_id":"","url":"https://api.github.com/users/kenliao94","html_url":"https://github.com/kenliao94","followers_url":"https://api.github.com/users/kenliao94/followers","following_url":"https://api.github.com/users/kenliao94/following{/other_user}","gists_url":"https://api.github.com/users/kenliao94/gists{/gist_id}","starred_url":"https://api.github.com/users/kenliao94/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kenliao94/subscriptions","organizations_url":"https://api.github.com/users/kenliao94/orgs","repos_url":"https://api.github.com/users/kenliao94/repos","events_url":"https://api.github.com/users/kenliao94/events{/privacy}","received_events_url":"https://api.github.com/users/kenliao94/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-11-08T18:00:18Z","updated_at":"2024-11-08T18:00:18Z","author_association":"CONTRIBUTOR","body":"> New MBean operation names look good to me. @mattrpav do you mind to take a new look and approve the PR ?\r\n\r\nHi @mattrpav, do you have any more concerns about this PR?","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2465445888/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2465460146","html_url":"https://github.com/apache/activemq/pull/1282#issuecomment-2465460146","issue_url":"https://api.github.com/repos/apache/activemq/issues/1282","id":2465460146,"node_id":"IC_kwDOAAMmM86S8--y","user":{"login":"kenliao94","id":6269022,"node_id":"MDQ6VXNlcjYyNjkwMjI=","avatar_url":"https://avatars.githubusercontent.com/u/6269022?v=4","gravatar_id":"","url":"https://api.github.com/users/kenliao94","html_url":"https://github.com/kenliao94","followers_url":"https://api.github.com/users/kenliao94/followers","following_url":"https://api.github.com/users/kenliao94/following{/other_user}","gists_url":"https://api.github.com/users/kenliao94/gists{/gist_id}","starred_url":"https://api.github.com/users/kenliao94/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kenliao94/subscriptions","organizations_url":"https://api.github.com/users/kenliao94/orgs","repos_url":"https://api.github.com/users/kenliao94/repos","events_url":"https://api.github.com/users/kenliao94/events{/privacy}","received_events_url":"https://api.github.com/users/kenliao94/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-11-08T18:06:48Z","updated_at":"2024-11-08T18:06:48Z","author_association":"CONTRIBUTOR","body":"@mattrpav  Good call out. ","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2465460146/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2465482314","html_url":"https://github.com/apache/activemq/pull/1281#issuecomment-2465482314","issue_url":"https://api.github.com/repos/apache/activemq/issues/1281","id":2465482314,"node_id":"IC_kwDOAAMmM86S9EZK","user":{"login":"kenliao94","id":6269022,"node_id":"MDQ6VXNlcjYyNjkwMjI=","avatar_url":"https://avatars.githubusercontent.com/u/6269022?v=4","gravatar_id":"","url":"https://api.github.com/users/kenliao94","html_url":"https://github.com/kenliao94","followers_url":"https://api.github.com/users/kenliao94/followers","following_url":"https://api.github.com/users/kenliao94/following{/other_user}","gists_url":"https://api.github.com/users/kenliao94/gists{/gist_id}","starred_url":"https://api.github.com/users/kenliao94/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kenliao94/subscriptions","organizations_url":"https://api.github.com/users/kenliao94/orgs","repos_url":"https://api.github.com/users/kenliao94/repos","events_url":"https://api.github.com/users/kenliao94/events{/privacy}","received_events_url":"https://api.github.com/users/kenliao94/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-11-08T18:20:23Z","updated_at":"2024-11-08T18:20:23Z","author_association":"CONTRIBUTOR","body":"@mattrpav and @jbonofre, could you take a look at this PR when you have a chance? Thanks.","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2465482314/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2469692421","html_url":"https://github.com/apache/activemq/pull/956#issuecomment-2469692421","issue_url":"https://api.github.com/repos/apache/activemq/issues/956","id":2469692421,"node_id":"IC_kwDOAAMmM86TNIQF","user":{"login":"namrata-ibm","id":21953668,"node_id":"MDQ6VXNlcjIxOTUzNjY4","avatar_url":"https://avatars.githubusercontent.com/u/21953668?v=4","gravatar_id":"","url":"https://api.github.com/users/namrata-ibm","html_url":"https://github.com/namrata-ibm","followers_url":"https://api.github.com/users/namrata-ibm/followers","following_url":"https://api.github.com/users/namrata-ibm/following{/other_user}","gists_url":"https://api.github.com/users/namrata-ibm/gists{/gist_id}","starred_url":"https://api.github.com/users/namrata-ibm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/namrata-ibm/subscriptions","organizations_url":"https://api.github.com/users/namrata-ibm/orgs","repos_url":"https://api.github.com/users/namrata-ibm/repos","events_url":"https://api.github.com/users/namrata-ibm/events{/privacy}","received_events_url":"https://api.github.com/users/namrata-ibm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-11-12T06:15:13Z","updated_at":"2024-11-12T06:15:13Z","author_association":"NONE","body":"@mattrpav can we please consider running s390x builds on every commit similar to amd64?","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2469692421/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2477392936","html_url":"https://github.com/apache/activemq/pull/1352#issuecomment-2477392936","issue_url":"https://api.github.com/repos/apache/activemq/issues/1352","id":2477392936,"node_id":"IC_kwDOAAMmM86TqgQo","user":{"login":"kenliao94","id":6269022,"node_id":"MDQ6VXNlcjYyNjkwMjI=","avatar_url":"https://avatars.githubusercontent.com/u/6269022?v=4","gravatar_id":"","url":"https://api.github.com/users/kenliao94","html_url":"https://github.com/kenliao94","followers_url":"https://api.github.com/users/kenliao94/followers","following_url":"https://api.github.com/users/kenliao94/following{/other_user}","gists_url":"https://api.github.com/users/kenliao94/gists{/gist_id}","starred_url":"https://api.github.com/users/kenliao94/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kenliao94/subscriptions","organizations_url":"https://api.github.com/users/kenliao94/orgs","repos_url":"https://api.github.com/users/kenliao94/repos","events_url":"https://api.github.com/users/kenliao94/events{/privacy}","received_events_url":"https://api.github.com/users/kenliao94/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-11-14T20:55:48Z","updated_at":"2024-11-14T20:55:48Z","author_association":"CONTRIBUTOR","body":"Hey @mattrpav and @jbonofre I am curious on what you think about the approach here and want to clarify a few things:\r\n\r\n1. I was debating between adding this logic to the job scheduler or the persistence layer (following the approach of deleteAllMessages). However, I noticed that `SchedulerBroker` doesn't expose their internal scheduler, and it has public methods that deal directly with `Message` (initially I thought SchedulerBroker is not \"message aware\" but only \"job aware\". So I decided to add the logic in SB. What do you think?\r\n\r\n2. I wasn't able to find any other non-message jobs (even job in `ByteSequence` type is assumed to be unmarshal into `Message`) scheduled on \"JMS\" scheduler so I assume that remove all jobs are safe. However, do you know any pitfull for simply remove all jobs?","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2477392936/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2486011141","html_url":"https://github.com/apache/activemq/pull/1329#issuecomment-2486011141","issue_url":"https://api.github.com/repos/apache/activemq/issues/1329","id":2486011141,"node_id":"IC_kwDOAAMmM86ULYUF","user":{"login":"cshannon","id":123009,"node_id":"MDQ6VXNlcjEyMzAwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/123009?v=4","gravatar_id":"","url":"https://api.github.com/users/cshannon","html_url":"https://github.com/cshannon","followers_url":"https://api.github.com/users/cshannon/followers","following_url":"https://api.github.com/users/cshannon/following{/other_user}","gists_url":"https://api.github.com/users/cshannon/gists{/gist_id}","starred_url":"https://api.github.com/users/cshannon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cshannon/subscriptions","organizations_url":"https://api.github.com/users/cshannon/orgs","repos_url":"https://api.github.com/users/cshannon/repos","events_url":"https://api.github.com/users/cshannon/events{/privacy}","received_events_url":"https://api.github.com/users/cshannon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-11-19T15:20:13Z","updated_at":"2024-11-19T15:20:13Z","author_association":"CONTRIBUTOR","body":"I know this would be a much bigger effort but if we intend to keep adding more and more metrics, from a performance and maintainability standpoint, we should really look into moving everything to Micrometer which adds more more flexibility and should be better performance. That kind of change would likely end up being a major version, ie AMQ 7.0 if we wanted to do that.","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2486011141/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2489346307","html_url":"https://github.com/apache/activemq/pull/1355#issuecomment-2489346307","issue_url":"https://api.github.com/repos/apache/activemq/issues/1355","id":2489346307,"node_id":"IC_kwDOAAMmM86UYGkD","user":{"login":"cshannon","id":123009,"node_id":"MDQ6VXNlcjEyMzAwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/123009?v=4","gravatar_id":"","url":"https://api.github.com/users/cshannon","html_url":"https://github.com/cshannon","followers_url":"https://api.github.com/users/cshannon/followers","following_url":"https://api.github.com/users/cshannon/following{/other_user}","gists_url":"https://api.github.com/users/cshannon/gists{/gist_id}","starred_url":"https://api.github.com/users/cshannon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cshannon/subscriptions","organizations_url":"https://api.github.com/users/cshannon/orgs","repos_url":"https://api.github.com/users/cshannon/repos","events_url":"https://api.github.com/users/cshannon/events{/privacy}","received_events_url":"https://api.github.com/users/cshannon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-11-20T19:06:51Z","updated_at":"2024-11-20T19:06:51Z","author_association":"CONTRIBUTOR","body":"I updated the PR slightly as we needed the check/wait for the async to be done not only when the store is being synced, but also for any outstanding in flight async messages that were in progress by other threads when the mode switched.","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2489346307/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2489541102","html_url":"https://github.com/apache/activemq/pull/1356#issuecomment-2489541102","issue_url":"https://api.github.com/repos/apache/activemq/issues/1356","id":2489541102,"node_id":"IC_kwDOAAMmM86UY2Hu","user":{"login":"mattrpav","id":512119,"node_id":"MDQ6VXNlcjUxMjExOQ==","avatar_url":"https://avatars.githubusercontent.com/u/512119?v=4","gravatar_id":"","url":"https://api.github.com/users/mattrpav","html_url":"https://github.com/mattrpav","followers_url":"https://api.github.com/users/mattrpav/followers","following_url":"https://api.github.com/users/mattrpav/following{/other_user}","gists_url":"https://api.github.com/users/mattrpav/gists{/gist_id}","starred_url":"https://api.github.com/users/mattrpav/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mattrpav/subscriptions","organizations_url":"https://api.github.com/users/mattrpav/orgs","repos_url":"https://api.github.com/users/mattrpav/repos","events_url":"https://api.github.com/users/mattrpav/events{/privacy}","received_events_url":"https://api.github.com/users/mattrpav/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-11-20T21:05:48Z","updated_at":"2024-11-20T21:05:48Z","author_association":"CONTRIBUTOR","body":"Is json-simple no longer needed?","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2489541102/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2489550212","html_url":"https://github.com/apache/activemq/pull/1356#issuecomment-2489550212","issue_url":"https://api.github.com/repos/apache/activemq/issues/1356","id":2489550212,"node_id":"IC_kwDOAAMmM86UY4WE","user":{"login":"PaulGale","id":74167,"node_id":"MDQ6VXNlcjc0MTY3","avatar_url":"https://avatars.githubusercontent.com/u/74167?v=4","gravatar_id":"","url":"https://api.github.com/users/PaulGale","html_url":"https://github.com/PaulGale","followers_url":"https://api.github.com/users/PaulGale/followers","following_url":"https://api.github.com/users/PaulGale/following{/other_user}","gists_url":"https://api.github.com/users/PaulGale/gists{/gist_id}","starred_url":"https://api.github.com/users/PaulGale/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/PaulGale/subscriptions","organizations_url":"https://api.github.com/users/PaulGale/orgs","repos_url":"https://api.github.com/users/PaulGale/repos","events_url":"https://api.github.com/users/PaulGale/events{/privacy}","received_events_url":"https://api.github.com/users/PaulGale/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-11-20T21:11:47Z","updated_at":"2024-11-20T21:11:47Z","author_association":"NONE","body":"Jolokia no longer depends on json-simple. \r\n\r\njson-simple is no longer maintained. It was last updated in 2012. \r\n\r\nJolokia 2.1.1 now includes builtin JSON functionality which ships in `jolokia-json.jar`. The assembly packaging has been updated accordingly.\r\n\r\nSee here for the details of the Jolokia change: https://github.com/jolokia/jolokia/issues/686\r\n","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2489550212/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2489570521","html_url":"https://github.com/apache/activemq/pull/1356#issuecomment-2489570521","issue_url":"https://api.github.com/repos/apache/activemq/issues/1356","id":2489570521,"node_id":"IC_kwDOAAMmM86UY9TZ","user":{"login":"jbonofre","id":158903,"node_id":"MDQ6VXNlcjE1ODkwMw==","avatar_url":"https://avatars.githubusercontent.com/u/158903?v=4","gravatar_id":"","url":"https://api.github.com/users/jbonofre","html_url":"https://github.com/jbonofre","followers_url":"https://api.github.com/users/jbonofre/followers","following_url":"https://api.github.com/users/jbonofre/following{/other_user}","gists_url":"https://api.github.com/users/jbonofre/gists{/gist_id}","starred_url":"https://api.github.com/users/jbonofre/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jbonofre/subscriptions","organizations_url":"https://api.github.com/users/jbonofre/orgs","repos_url":"https://api.github.com/users/jbonofre/repos","events_url":"https://api.github.com/users/jbonofre/events{/privacy}","received_events_url":"https://api.github.com/users/jbonofre/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-11-20T21:24:43Z","updated_at":"2024-11-20T21:24:43Z","author_association":"MEMBER","body":"@mattrpav jolokia 2.1 now uses it's own json lib (json-simple is useless now with Jolokia 2.1).","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2489570521/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2491438121","html_url":"https://github.com/apache/activemq/pull/1355#issuecomment-2491438121","issue_url":"https://api.github.com/repos/apache/activemq/issues/1355","id":2491438121,"node_id":"IC_kwDOAAMmM86UgFQp","user":{"login":"cshannon","id":123009,"node_id":"MDQ6VXNlcjEyMzAwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/123009?v=4","gravatar_id":"","url":"https://api.github.com/users/cshannon","html_url":"https://github.com/cshannon","followers_url":"https://api.github.com/users/cshannon/followers","following_url":"https://api.github.com/users/cshannon/following{/other_user}","gists_url":"https://api.github.com/users/cshannon/gists{/gist_id}","starred_url":"https://api.github.com/users/cshannon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cshannon/subscriptions","organizations_url":"https://api.github.com/users/cshannon/orgs","repos_url":"https://api.github.com/users/cshannon/repos","events_url":"https://api.github.com/users/cshannon/events{/privacy}","received_events_url":"https://api.github.com/users/cshannon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-11-21T14:50:50Z","updated_at":"2024-11-21T14:50:50Z","author_association":"CONTRIBUTOR","body":"I'm going to go ahead and merge this as it is low risk (we are just waiting on the pending writes so messages become sync) and it's nearly impossible to write a test case for it. In my testing it has shown some promising results but if the issue re-occurs another Jira can be opened as a follow up.","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2491438121/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2495772471","html_url":"https://github.com/apache/activemq/pull/1354#issuecomment-2495772471","issue_url":"https://api.github.com/repos/apache/activemq/issues/1354","id":2495772471,"node_id":"IC_kwDOAAMmM86Uwnc3","user":{"login":"kenliao94","id":6269022,"node_id":"MDQ6VXNlcjYyNjkwMjI=","avatar_url":"https://avatars.githubusercontent.com/u/6269022?v=4","gravatar_id":"","url":"https://api.github.com/users/kenliao94","html_url":"https://github.com/kenliao94","followers_url":"https://api.github.com/users/kenliao94/followers","following_url":"https://api.github.com/users/kenliao94/following{/other_user}","gists_url":"https://api.github.com/users/kenliao94/gists{/gist_id}","starred_url":"https://api.github.com/users/kenliao94/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kenliao94/subscriptions","organizations_url":"https://api.github.com/users/kenliao94/orgs","repos_url":"https://api.github.com/users/kenliao94/repos","events_url":"https://api.github.com/users/kenliao94/events{/privacy}","received_events_url":"https://api.github.com/users/kenliao94/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-11-24T03:03:41Z","updated_at":"2024-11-24T03:03:41Z","author_association":"CONTRIBUTOR","body":"@pa-deasy I assume the code that actually calls \"setPreserveDeliveryMode\" which is read from destination configuration will come later?","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2495772471/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2495775763","html_url":"https://github.com/apache/activemq/pull/1354#issuecomment-2495775763","issue_url":"https://api.github.com/repos/apache/activemq/issues/1354","id":2495775763,"node_id":"IC_kwDOAAMmM86UwoQT","user":{"login":"kenliao94","id":6269022,"node_id":"MDQ6VXNlcjYyNjkwMjI=","avatar_url":"https://avatars.githubusercontent.com/u/6269022?v=4","gravatar_id":"","url":"https://api.github.com/users/kenliao94","html_url":"https://github.com/kenliao94","followers_url":"https://api.github.com/users/kenliao94/followers","following_url":"https://api.github.com/users/kenliao94/following{/other_user}","gists_url":"https://api.github.com/users/kenliao94/gists{/gist_id}","starred_url":"https://api.github.com/users/kenliao94/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kenliao94/subscriptions","organizations_url":"https://api.github.com/users/kenliao94/orgs","repos_url":"https://api.github.com/users/kenliao94/repos","events_url":"https://api.github.com/users/kenliao94/events{/privacy}","received_events_url":"https://api.github.com/users/kenliao94/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-11-24T03:15:38Z","updated_at":"2024-11-24T03:16:22Z","author_association":"CONTRIBUTOR","body":"I sort of see the points of moving the code to `AbstractDeadLetterStrategy#prepareMessageForDeadLetterQueue`for readability in the chunky `RegionBroker`. My concern of that approach is that it effectively shifts the responsibility of preparing the message (setting correct attributes of the message object) to the this abstract class, which imo shouldn't need to be concern of it. This preparation is necessary before you send the message, but by moving to the strategy class, it feels like it's more a \"util\" then a necessary step.  Furthermore, `DeadLetterStrategy` should have logic that only perform mutable action on the policy itself and shouldn't perform mutable actions on the `Message` object. \r\n\r\nHence I vote -1  on \"move dead letter queue message preparation logic to the AbstractDeadLetterStrategy class\" part of this PR. The getter and setter of perserveDeliveryMode on the `Strategy` class makes sense to me.","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2495775763/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2496009953","html_url":"https://github.com/apache/activemq/pull/1354#issuecomment-2496009953","issue_url":"https://api.github.com/repos/apache/activemq/issues/1354","id":2496009953,"node_id":"IC_kwDOAAMmM86Uxhbh","user":{"login":"mattrpav","id":512119,"node_id":"MDQ6VXNlcjUxMjExOQ==","avatar_url":"https://avatars.githubusercontent.com/u/512119?v=4","gravatar_id":"","url":"https://api.github.com/users/mattrpav","html_url":"https://github.com/mattrpav","followers_url":"https://api.github.com/users/mattrpav/followers","following_url":"https://api.github.com/users/mattrpav/following{/other_user}","gists_url":"https://api.github.com/users/mattrpav/gists{/gist_id}","starred_url":"https://api.github.com/users/mattrpav/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mattrpav/subscriptions","organizations_url":"https://api.github.com/users/mattrpav/orgs","repos_url":"https://api.github.com/users/mattrpav/repos","events_url":"https://api.github.com/users/mattrpav/events{/privacy}","received_events_url":"https://api.github.com/users/mattrpav/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-11-24T13:41:18Z","updated_at":"2024-11-24T13:41:18Z","author_association":"CONTRIBUTOR","body":"I'm not in favor of refactoring RegionBroker in a point release. Ultimately, the DeadLetterStrategy should re-use the MessageInterceptorStrategy interface to it so admins can configure or change anything about the message on the way to the DLQ. All these one-off config params and methods creates bloat and all this logic should be pushed off into a handler.\r\n","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2496009953/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2499298548","html_url":"https://github.com/apache/activemq/pull/1354#issuecomment-2499298548","issue_url":"https://api.github.com/repos/apache/activemq/issues/1354","id":2499298548,"node_id":"IC_kwDOAAMmM86U-ET0","user":{"login":"pa-deasy","id":83254994,"node_id":"MDQ6VXNlcjgzMjU0OTk0","avatar_url":"https://avatars.githubusercontent.com/u/83254994?v=4","gravatar_id":"","url":"https://api.github.com/users/pa-deasy","html_url":"https://github.com/pa-deasy","followers_url":"https://api.github.com/users/pa-deasy/followers","following_url":"https://api.github.com/users/pa-deasy/following{/other_user}","gists_url":"https://api.github.com/users/pa-deasy/gists{/gist_id}","starred_url":"https://api.github.com/users/pa-deasy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pa-deasy/subscriptions","organizations_url":"https://api.github.com/users/pa-deasy/orgs","repos_url":"https://api.github.com/users/pa-deasy/repos","events_url":"https://api.github.com/users/pa-deasy/events{/privacy}","received_events_url":"https://api.github.com/users/pa-deasy/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-11-26T00:19:48Z","updated_at":"2024-11-26T00:19:48Z","author_association":"CONTRIBUTOR","body":"> @pa-deasy I assume the code that actually calls \"setPreserveDeliveryMode\" which is read from destination configuration will come later?\r\nYes that should be straightforward. I just wanted feedback on the `RegionBroker` and DeadLetterStrategy` for the draft.\r\n\r\nThanks folks for your feedback on \"move dead letter queue message preparation logic to the AbstractDeadLetterStrategy class\". Those are great points. I will update my PR appropriately and add tests. \r\n\r\nThank you.","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2499298548/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2502015949","html_url":"https://github.com/apache/activemq/pull/1352#issuecomment-2502015949","issue_url":"https://api.github.com/repos/apache/activemq/issues/1352","id":2502015949,"node_id":"IC_kwDOAAMmM86VIbvN","user":{"login":"kenliao94","id":6269022,"node_id":"MDQ6VXNlcjYyNjkwMjI=","avatar_url":"https://avatars.githubusercontent.com/u/6269022?v=4","gravatar_id":"","url":"https://api.github.com/users/kenliao94","html_url":"https://github.com/kenliao94","followers_url":"https://api.github.com/users/kenliao94/followers","following_url":"https://api.github.com/users/kenliao94/following{/other_user}","gists_url":"https://api.github.com/users/kenliao94/gists{/gist_id}","starred_url":"https://api.github.com/users/kenliao94/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kenliao94/subscriptions","organizations_url":"https://api.github.com/users/kenliao94/orgs","repos_url":"https://api.github.com/users/kenliao94/repos","events_url":"https://api.github.com/users/kenliao94/events{/privacy}","received_events_url":"https://api.github.com/users/kenliao94/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-11-26T21:56:00Z","updated_at":"2024-11-26T21:56:00Z","author_association":"CONTRIBUTOR","body":"The PR is now ready for review.","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2502015949/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2502143585","html_url":"https://github.com/apache/activemq/pull/1352#issuecomment-2502143585","issue_url":"https://api.github.com/repos/apache/activemq/issues/1352","id":2502143585,"node_id":"IC_kwDOAAMmM86VI65h","user":{"login":"cshannon","id":123009,"node_id":"MDQ6VXNlcjEyMzAwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/123009?v=4","gravatar_id":"","url":"https://api.github.com/users/cshannon","html_url":"https://github.com/cshannon","followers_url":"https://api.github.com/users/cshannon/followers","following_url":"https://api.github.com/users/cshannon/following{/other_user}","gists_url":"https://api.github.com/users/cshannon/gists{/gist_id}","starred_url":"https://api.github.com/users/cshannon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cshannon/subscriptions","organizations_url":"https://api.github.com/users/cshannon/orgs","repos_url":"https://api.github.com/users/cshannon/repos","events_url":"https://api.github.com/users/cshannon/events{/privacy}","received_events_url":"https://api.github.com/users/cshannon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-11-26T23:06:47Z","updated_at":"2024-11-26T23:06:47Z","author_association":"CONTRIBUTOR","body":"It might be be better to move the cleanup to the persistence layer just because that's how KahaDB handles clearing messages (as was pointed out). But I don't really care too much either way because the flag on the BrokerService is consistent with the other flag so for users it's still a consistent way to configure it. I'll let @mattrpav and @jbonofre  comment to see if they have an opinion.","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2502143585/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2502884101","html_url":"https://github.com/apache/activemq/pull/1352#issuecomment-2502884101","issue_url":"https://api.github.com/repos/apache/activemq/issues/1352","id":2502884101,"node_id":"IC_kwDOAAMmM86VLvsF","user":{"login":"kenliao94","id":6269022,"node_id":"MDQ6VXNlcjYyNjkwMjI=","avatar_url":"https://avatars.githubusercontent.com/u/6269022?v=4","gravatar_id":"","url":"https://api.github.com/users/kenliao94","html_url":"https://github.com/kenliao94","followers_url":"https://api.github.com/users/kenliao94/followers","following_url":"https://api.github.com/users/kenliao94/following{/other_user}","gists_url":"https://api.github.com/users/kenliao94/gists{/gist_id}","starred_url":"https://api.github.com/users/kenliao94/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kenliao94/subscriptions","organizations_url":"https://api.github.com/users/kenliao94/orgs","repos_url":"https://api.github.com/users/kenliao94/repos","events_url":"https://api.github.com/users/kenliao94/events{/privacy}","received_events_url":"https://api.github.com/users/kenliao94/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-11-27T05:35:18Z","updated_at":"2024-11-27T05:35:18Z","author_association":"CONTRIBUTOR","body":"@cshannon yeah I was doing that as my first approach. But then I realize I need to somehow expose (by changing the visibility of the field) the name of the scheduler (\"JMS\") used by `SchedulerBroker`. I didn't like that approach because it creates some sort of coupling. So I decided to handle it where no visibility needed to change. ","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2502884101/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2503661475","html_url":"https://github.com/apache/activemq/pull/1352#issuecomment-2503661475","issue_url":"https://api.github.com/repos/apache/activemq/issues/1352","id":2503661475,"node_id":"IC_kwDOAAMmM86VOtej","user":{"login":"cshannon","id":123009,"node_id":"MDQ6VXNlcjEyMzAwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/123009?v=4","gravatar_id":"","url":"https://api.github.com/users/cshannon","html_url":"https://github.com/cshannon","followers_url":"https://api.github.com/users/cshannon/followers","following_url":"https://api.github.com/users/cshannon/following{/other_user}","gists_url":"https://api.github.com/users/cshannon/gists{/gist_id}","starred_url":"https://api.github.com/users/cshannon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cshannon/subscriptions","organizations_url":"https://api.github.com/users/cshannon/orgs","repos_url":"https://api.github.com/users/cshannon/repos","events_url":"https://api.github.com/users/cshannon/events{/privacy}","received_events_url":"https://api.github.com/users/cshannon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-11-27T11:43:07Z","updated_at":"2024-11-27T11:43:07Z","author_association":"CONTRIBUTOR","body":"Yeah that's fine, the most important thing is it's consistent for the config (which it is)","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2503661475/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2504621193","html_url":"https://github.com/apache/activemq/pull/1352#issuecomment-2504621193","issue_url":"https://api.github.com/repos/apache/activemq/issues/1352","id":2504621193,"node_id":"IC_kwDOAAMmM86VSXyJ","user":{"login":"kenliao94","id":6269022,"node_id":"MDQ6VXNlcjYyNjkwMjI=","avatar_url":"https://avatars.githubusercontent.com/u/6269022?v=4","gravatar_id":"","url":"https://api.github.com/users/kenliao94","html_url":"https://github.com/kenliao94","followers_url":"https://api.github.com/users/kenliao94/followers","following_url":"https://api.github.com/users/kenliao94/following{/other_user}","gists_url":"https://api.github.com/users/kenliao94/gists{/gist_id}","starred_url":"https://api.github.com/users/kenliao94/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kenliao94/subscriptions","organizations_url":"https://api.github.com/users/kenliao94/orgs","repos_url":"https://api.github.com/users/kenliao94/repos","events_url":"https://api.github.com/users/kenliao94/events{/privacy}","received_events_url":"https://api.github.com/users/kenliao94/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-11-27T19:16:00Z","updated_at":"2024-11-27T19:16:00Z","author_association":"CONTRIBUTOR","body":"Thanks for the feedback. I will add a unit test. ","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2504621193/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2510610923","html_url":"https://github.com/apache/activemq/pull/1358#issuecomment-2510610923","issue_url":"https://api.github.com/repos/apache/activemq/issues/1358","id":2510610923,"node_id":"IC_kwDOAAMmM86VpOHr","user":{"login":"kenliao94","id":6269022,"node_id":"MDQ6VXNlcjYyNjkwMjI=","avatar_url":"https://avatars.githubusercontent.com/u/6269022?v=4","gravatar_id":"","url":"https://api.github.com/users/kenliao94","html_url":"https://github.com/kenliao94","followers_url":"https://api.github.com/users/kenliao94/followers","following_url":"https://api.github.com/users/kenliao94/following{/other_user}","gists_url":"https://api.github.com/users/kenliao94/gists{/gist_id}","starred_url":"https://api.github.com/users/kenliao94/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kenliao94/subscriptions","organizations_url":"https://api.github.com/users/kenliao94/orgs","repos_url":"https://api.github.com/users/kenliao94/repos","events_url":"https://api.github.com/users/kenliao94/events{/privacy}","received_events_url":"https://api.github.com/users/kenliao94/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-12-02T05:26:53Z","updated_at":"2024-12-02T05:26:53Z","author_association":"CONTRIBUTOR","body":"Question @Nikita-Shupletsov, once the user fixed the issue with the configuration or their LDAP server, does the user need to restart the server? In another word, is this code part of the code path that get triggered everytime the broker performs AuthN/AuthZ?\r\n\r\nIf that latter case is true, the activemq.log be flooded with error message. How do we make it less noisy? ","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2510610923/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2510617536","html_url":"https://github.com/apache/activemq/pull/1275#issuecomment-2510617536","issue_url":"https://api.github.com/repos/apache/activemq/issues/1275","id":2510617536,"node_id":"IC_kwDOAAMmM86VpPvA","user":{"login":"kenliao94","id":6269022,"node_id":"MDQ6VXNlcjYyNjkwMjI=","avatar_url":"https://avatars.githubusercontent.com/u/6269022?v=4","gravatar_id":"","url":"https://api.github.com/users/kenliao94","html_url":"https://github.com/kenliao94","followers_url":"https://api.github.com/users/kenliao94/followers","following_url":"https://api.github.com/users/kenliao94/following{/other_user}","gists_url":"https://api.github.com/users/kenliao94/gists{/gist_id}","starred_url":"https://api.github.com/users/kenliao94/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kenliao94/subscriptions","organizations_url":"https://api.github.com/users/kenliao94/orgs","repos_url":"https://api.github.com/users/kenliao94/repos","events_url":"https://api.github.com/users/kenliao94/events{/privacy}","received_events_url":"https://api.github.com/users/kenliao94/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-12-02T05:32:58Z","updated_at":"2024-12-02T05:35:24Z","author_association":"CONTRIBUTOR","body":"@jeanouii i Sorry, not following this logic here. Isn't this.limitQuery a no-ops? It just returns the original query (line 1188)\r\n\r\n^ Ah I guess this is the default. It will be over-written in the class that extends it.\r\n","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2510617536/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2510621214","html_url":"https://github.com/apache/activemq/pull/1275#issuecomment-2510621214","issue_url":"https://api.github.com/repos/apache/activemq/issues/1275","id":2510621214,"node_id":"IC_kwDOAAMmM86VpQoe","user":{"login":"kenliao94","id":6269022,"node_id":"MDQ6VXNlcjYyNjkwMjI=","avatar_url":"https://avatars.githubusercontent.com/u/6269022?v=4","gravatar_id":"","url":"https://api.github.com/users/kenliao94","html_url":"https://github.com/kenliao94","followers_url":"https://api.github.com/users/kenliao94/followers","following_url":"https://api.github.com/users/kenliao94/following{/other_user}","gists_url":"https://api.github.com/users/kenliao94/gists{/gist_id}","starred_url":"https://api.github.com/users/kenliao94/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kenliao94/subscriptions","organizations_url":"https://api.github.com/users/kenliao94/orgs","repos_url":"https://api.github.com/users/kenliao94/repos","events_url":"https://api.github.com/users/kenliao94/events{/privacy}","received_events_url":"https://api.github.com/users/kenliao94/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-12-02T05:36:26Z","updated_at":"2024-12-02T05:37:08Z","author_association":"CONTRIBUTOR","body":"@jeanouii LGTM. However, this PR should be open against the main branch not a release branch. If you want the fix to only be in a release branch, it can be backported later.","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2510621214/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2520401523","html_url":"https://github.com/apache/activemq/pull/1344#issuecomment-2520401523","issue_url":"https://api.github.com/repos/apache/activemq/issues/1344","id":2520401523,"node_id":"IC_kwDOAAMmM86WOkZz","user":{"login":"cshannon","id":123009,"node_id":"MDQ6VXNlcjEyMzAwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/123009?v=4","gravatar_id":"","url":"https://api.github.com/users/cshannon","html_url":"https://github.com/cshannon","followers_url":"https://api.github.com/users/cshannon/followers","following_url":"https://api.github.com/users/cshannon/following{/other_user}","gists_url":"https://api.github.com/users/cshannon/gists{/gist_id}","starred_url":"https://api.github.com/users/cshannon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cshannon/subscriptions","organizations_url":"https://api.github.com/users/cshannon/orgs","repos_url":"https://api.github.com/users/cshannon/repos","events_url":"https://api.github.com/users/cshannon/events{/privacy}","received_events_url":"https://api.github.com/users/cshannon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-12-05T13:58:04Z","updated_at":"2024-12-05T13:58:04Z","author_association":"CONTRIBUTOR","body":"Is there any reason not to bump to Java EE 10? Jetty 12.x can run multiple EE versions simultaneously so there's not really a reason to not just go to Servlet 6.0 and Jakarta EE 10 that I can think of.  A user that depends on embedded Jetty and AMQ wants to use EE9 for other servlets could still include those jars and be compatible.","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2520401523/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2520487348","html_url":"https://github.com/apache/activemq/pull/1344#issuecomment-2520487348","issue_url":"https://api.github.com/repos/apache/activemq/issues/1344","id":2520487348,"node_id":"IC_kwDOAAMmM86WO5W0","user":{"login":"mattrpav","id":512119,"node_id":"MDQ6VXNlcjUxMjExOQ==","avatar_url":"https://avatars.githubusercontent.com/u/512119?v=4","gravatar_id":"","url":"https://api.github.com/users/mattrpav","html_url":"https://github.com/mattrpav","followers_url":"https://api.github.com/users/mattrpav/followers","following_url":"https://api.github.com/users/mattrpav/following{/other_user}","gists_url":"https://api.github.com/users/mattrpav/gists{/gist_id}","starred_url":"https://api.github.com/users/mattrpav/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mattrpav/subscriptions","organizations_url":"https://api.github.com/users/mattrpav/orgs","repos_url":"https://api.github.com/users/mattrpav/repos","events_url":"https://api.github.com/users/mattrpav/events{/privacy}","received_events_url":"https://api.github.com/users/mattrpav/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-12-05T14:32:14Z","updated_at":"2024-12-05T14:32:37Z","author_association":"CONTRIBUTOR","body":"I think EE10 makes more sense. However, if we jump straight to EE10, I think  we’d need to rev to 7.x. \r\n\r\nStaying with EE9 would allow us to get to Jetty 12 in 6.x minor release","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2520487348/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2520607472","html_url":"https://github.com/apache/activemq/pull/1344#issuecomment-2520607472","issue_url":"https://api.github.com/repos/apache/activemq/issues/1344","id":2520607472,"node_id":"IC_kwDOAAMmM86WPWrw","user":{"login":"cshannon","id":123009,"node_id":"MDQ6VXNlcjEyMzAwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/123009?v=4","gravatar_id":"","url":"https://api.github.com/users/cshannon","html_url":"https://github.com/cshannon","followers_url":"https://api.github.com/users/cshannon/followers","following_url":"https://api.github.com/users/cshannon/following{/other_user}","gists_url":"https://api.github.com/users/cshannon/gists{/gist_id}","starred_url":"https://api.github.com/users/cshannon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cshannon/subscriptions","organizations_url":"https://api.github.com/users/cshannon/orgs","repos_url":"https://api.github.com/users/cshannon/repos","events_url":"https://api.github.com/users/cshannon/events{/privacy}","received_events_url":"https://api.github.com/users/cshannon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-12-05T15:19:25Z","updated_at":"2024-12-05T15:19:25Z","author_association":"CONTRIBUTOR","body":"> I think EE10 makes more sense. However, if we jump straight to EE10, I think we’d need to rev to 7.x.\r\n> \r\n> Staying with EE9 would allow us to get to Jetty 12 in 6.x minor release\r\n\r\nLooking at it in more detail and reading https://jetty.org/docs/jetty/12/operations-guide/deploy/index.html , I don't think it's compatible after all for EE9 and EE10 when embedded.\r\n\r\nEE10 removes some stuff from the API and i took a look at the Jetty 12 download and they actually package all 3 versions of both the API and modules separately (EE8, EE9, EE10) and each war file is isolated for deployment so you can run independently. This of course does not work for something embedded.\r\n\r\nSo we can probably stick with EE9 until 7.x. I guess if someone wants to use EE10 and with an embedded version of AMQ they could probably still do so as long as they were not using anything that relied on the EE9 stuff (any of the AMQ websockets or servlets, etc) and they would have to exclude the EE9 transitive dependencies from AMQ","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2520607472/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2521592941","html_url":"https://github.com/apache/activemq/pull/1360#issuecomment-2521592941","issue_url":"https://api.github.com/repos/apache/activemq/issues/1360","id":2521592941,"node_id":"IC_kwDOAAMmM86WTHRt","user":{"login":"cshannon","id":123009,"node_id":"MDQ6VXNlcjEyMzAwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/123009?v=4","gravatar_id":"","url":"https://api.github.com/users/cshannon","html_url":"https://github.com/cshannon","followers_url":"https://api.github.com/users/cshannon/followers","following_url":"https://api.github.com/users/cshannon/following{/other_user}","gists_url":"https://api.github.com/users/cshannon/gists{/gist_id}","starred_url":"https://api.github.com/users/cshannon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cshannon/subscriptions","organizations_url":"https://api.github.com/users/cshannon/orgs","repos_url":"https://api.github.com/users/cshannon/repos","events_url":"https://api.github.com/users/cshannon/events{/privacy}","received_events_url":"https://api.github.com/users/cshannon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-12-05T22:25:07Z","updated_at":"2024-12-05T22:25:07Z","author_association":"CONTRIBUTOR","body":"This is a good start but I think the tests could be improved. The tests show there is no more exception on connection creation which is good, but it would be nice to try setting more than one parameter and also if it's possible to access it would be good to verify the settings worked. For example, the one test sets the the ssl enabled protocols to TLSv1.3 so it would be best to assert that it did in fact apply that setting.","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2521592941/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2523848783","html_url":"https://github.com/apache/activemq/pull/1360#issuecomment-2523848783","issue_url":"https://api.github.com/repos/apache/activemq/issues/1360","id":2523848783,"node_id":"IC_kwDOAAMmM86WbuBP","user":{"login":"pa-deasy","id":83254994,"node_id":"MDQ6VXNlcjgzMjU0OTk0","avatar_url":"https://avatars.githubusercontent.com/u/83254994?v=4","gravatar_id":"","url":"https://api.github.com/users/pa-deasy","html_url":"https://github.com/pa-deasy","followers_url":"https://api.github.com/users/pa-deasy/followers","following_url":"https://api.github.com/users/pa-deasy/following{/other_user}","gists_url":"https://api.github.com/users/pa-deasy/gists{/gist_id}","starred_url":"https://api.github.com/users/pa-deasy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pa-deasy/subscriptions","organizations_url":"https://api.github.com/users/pa-deasy/orgs","repos_url":"https://api.github.com/users/pa-deasy/repos","events_url":"https://api.github.com/users/pa-deasy/events{/privacy}","received_events_url":"https://api.github.com/users/pa-deasy/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-12-06T17:50:12Z","updated_at":"2024-12-06T17:50:12Z","author_association":"CONTRIBUTOR","body":"> This is a good start but I think the tests could be improved. The tests show there is no more exception on connection creation which is good, but it would be nice to try setting more than one parameter and also if it's possible to access it would be good to verify the settings worked. For example, the one test sets the the ssl enabled protocols to TLSv1.3 so it would be best to assert that it did in fact apply that setting.\r\n\r\n\r\nThat's a good suggestion, I've added more parameters to the unit tests. I tried verifying the parameters are in effect but it's a little difficult without exposing the `protected` `Socket` on the `TcpTransport`. I tried researching a bunch of libraries that might check the TLS version on a TCP capture but it didn't really work and would also have introduced an extra dependency. Do you have any suggestions on a better approach for verifying the socket changes? A lot of the logic resides in the JVM so it's difficult to verify.","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2523848783/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2523855943","html_url":"https://github.com/apache/activemq/pull/1360#issuecomment-2523855943","issue_url":"https://api.github.com/repos/apache/activemq/issues/1360","id":2523855943,"node_id":"IC_kwDOAAMmM86WbvxH","user":{"login":"cshannon","id":123009,"node_id":"MDQ6VXNlcjEyMzAwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/123009?v=4","gravatar_id":"","url":"https://api.github.com/users/cshannon","html_url":"https://github.com/cshannon","followers_url":"https://api.github.com/users/cshannon/followers","following_url":"https://api.github.com/users/cshannon/following{/other_user}","gists_url":"https://api.github.com/users/cshannon/gists{/gist_id}","starred_url":"https://api.github.com/users/cshannon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cshannon/subscriptions","organizations_url":"https://api.github.com/users/cshannon/orgs","repos_url":"https://api.github.com/users/cshannon/repos","events_url":"https://api.github.com/users/cshannon/events{/privacy}","received_events_url":"https://api.github.com/users/cshannon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-12-06T17:54:59Z","updated_at":"2024-12-06T17:54:59Z","author_association":"CONTRIBUTOR","body":"> That's a good suggestion, I've added more parameters to the unit tests. I tried verifying the parameters are in effect but it's a little difficult without exposing the `protected` `Socket` on the `TcpTransport`. I tried researching a bunch of libraries that might check the TLS version on a TCP capture but it didn't really work and would also have introduced an extra dependency. Do you have any suggestions on a better approach for verifying the socket changes? A lot of the logic resides in the JVM so it's difficult to verify.\r\n\r\nYeah, I wasn't sure if it would be possible to easily verify for that reason. You could try and use reflection to get access to the private/protected socket and make it accessible. I can also take a look next week as well...if it's not really possible that's ok but it would certainly be nice if we could do it.","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2523855943/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2524125127","html_url":"https://github.com/apache/activemq/pull/1360#issuecomment-2524125127","issue_url":"https://api.github.com/repos/apache/activemq/issues/1360","id":2524125127,"node_id":"IC_kwDOAAMmM86WcxfH","user":{"login":"pa-deasy","id":83254994,"node_id":"MDQ6VXNlcjgzMjU0OTk0","avatar_url":"https://avatars.githubusercontent.com/u/83254994?v=4","gravatar_id":"","url":"https://api.github.com/users/pa-deasy","html_url":"https://github.com/pa-deasy","followers_url":"https://api.github.com/users/pa-deasy/followers","following_url":"https://api.github.com/users/pa-deasy/following{/other_user}","gists_url":"https://api.github.com/users/pa-deasy/gists{/gist_id}","starred_url":"https://api.github.com/users/pa-deasy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pa-deasy/subscriptions","organizations_url":"https://api.github.com/users/pa-deasy/orgs","repos_url":"https://api.github.com/users/pa-deasy/repos","events_url":"https://api.github.com/users/pa-deasy/events{/privacy}","received_events_url":"https://api.github.com/users/pa-deasy/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-12-06T20:33:49Z","updated_at":"2024-12-06T20:33:49Z","author_association":"CONTRIBUTOR","body":"> Yeah, I wasn't sure if it would be possible to easily verify for that reason. You could try and use reflection to get access to the private/protected socket and make it accessible. I can also take a look next week as well...if it's not really possible that's ok but it would certainly be nice if we could do it.\r\n\r\nI managed to gain access to the `Socket` by iterating through the transports and a little reflection magic as you suggested.\r\nIt's a little verbose but it provides the ability to verify changes to the `Socket`.","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2524125127/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2527278760","html_url":"https://github.com/apache/activemq/pull/1359#issuecomment-2527278760","issue_url":"https://api.github.com/repos/apache/activemq/issues/1359","id":2527278760,"node_id":"IC_kwDOAAMmM86Wozao","user":{"login":"jbonofre","id":158903,"node_id":"MDQ6VXNlcjE1ODkwMw==","avatar_url":"https://avatars.githubusercontent.com/u/158903?v=4","gravatar_id":"","url":"https://api.github.com/users/jbonofre","html_url":"https://github.com/jbonofre","followers_url":"https://api.github.com/users/jbonofre/followers","following_url":"https://api.github.com/users/jbonofre/following{/other_user}","gists_url":"https://api.github.com/users/jbonofre/gists{/gist_id}","starred_url":"https://api.github.com/users/jbonofre/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jbonofre/subscriptions","organizations_url":"https://api.github.com/users/jbonofre/orgs","repos_url":"https://api.github.com/users/jbonofre/repos","events_url":"https://api.github.com/users/jbonofre/events{/privacy}","received_events_url":"https://api.github.com/users/jbonofre/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-12-09T08:41:51Z","updated_at":"2024-12-09T08:41:51Z","author_association":"MEMBER","body":"Tests failure is related to time-out, not directly this update.","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2527278760/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2527474413","html_url":"https://github.com/apache/activemq/pull/1359#issuecomment-2527474413","issue_url":"https://api.github.com/repos/apache/activemq/issues/1359","id":2527474413,"node_id":"IC_kwDOAAMmM86WpjLt","user":{"login":"coheigea","id":472162,"node_id":"MDQ6VXNlcjQ3MjE2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/472162?v=4","gravatar_id":"","url":"https://api.github.com/users/coheigea","html_url":"https://github.com/coheigea","followers_url":"https://api.github.com/users/coheigea/followers","following_url":"https://api.github.com/users/coheigea/following{/other_user}","gists_url":"https://api.github.com/users/coheigea/gists{/gist_id}","starred_url":"https://api.github.com/users/coheigea/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coheigea/subscriptions","organizations_url":"https://api.github.com/users/coheigea/orgs","repos_url":"https://api.github.com/users/coheigea/repos","events_url":"https://api.github.com/users/coheigea/events{/privacy}","received_events_url":"https://api.github.com/users/coheigea/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-12-09T10:06:09Z","updated_at":"2024-12-09T10:06:09Z","author_association":"CONTRIBUTOR","body":"Thanks JB!","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2527474413/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2527832249","html_url":"https://github.com/apache/activemq/pull/1354#issuecomment-2527832249","issue_url":"https://api.github.com/repos/apache/activemq/issues/1354","id":2527832249,"node_id":"IC_kwDOAAMmM86Wq6i5","user":{"login":"cshannon","id":123009,"node_id":"MDQ6VXNlcjEyMzAwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/123009?v=4","gravatar_id":"","url":"https://api.github.com/users/cshannon","html_url":"https://github.com/cshannon","followers_url":"https://api.github.com/users/cshannon/followers","following_url":"https://api.github.com/users/cshannon/following{/other_user}","gists_url":"https://api.github.com/users/cshannon/gists{/gist_id}","starred_url":"https://api.github.com/users/cshannon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cshannon/subscriptions","organizations_url":"https://api.github.com/users/cshannon/orgs","repos_url":"https://api.github.com/users/cshannon/repos","events_url":"https://api.github.com/users/cshannon/events{/privacy}","received_events_url":"https://api.github.com/users/cshannon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-12-09T12:46:21Z","updated_at":"2024-12-09T12:46:21Z","author_association":"CONTRIBUTOR","body":"@mattrpav - Do you have any issues with the changes here? It seems ok to me, it preserves the previous behavior by default and I could see a use case for this.","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2527832249/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2528238257","html_url":"https://github.com/apache/activemq/pull/1363#issuecomment-2528238257","issue_url":"https://api.github.com/repos/apache/activemq/issues/1363","id":2528238257,"node_id":"IC_kwDOAAMmM86Wsdqx","user":{"login":"jbonofre","id":158903,"node_id":"MDQ6VXNlcjE1ODkwMw==","avatar_url":"https://avatars.githubusercontent.com/u/158903?v=4","gravatar_id":"","url":"https://api.github.com/users/jbonofre","html_url":"https://github.com/jbonofre","followers_url":"https://api.github.com/users/jbonofre/followers","following_url":"https://api.github.com/users/jbonofre/following{/other_user}","gists_url":"https://api.github.com/users/jbonofre/gists{/gist_id}","starred_url":"https://api.github.com/users/jbonofre/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jbonofre/subscriptions","organizations_url":"https://api.github.com/users/jbonofre/orgs","repos_url":"https://api.github.com/users/jbonofre/repos","events_url":"https://api.github.com/users/jbonofre/events{/privacy}","received_events_url":"https://api.github.com/users/jbonofre/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-12-09T14:54:56Z","updated_at":"2024-12-09T14:54:56Z","author_association":"MEMBER","body":"@kenliao94 as discussed on the mailing list 😄 ","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2528238257/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2529410128","html_url":"https://github.com/apache/activemq/pull/1363#issuecomment-2529410128","issue_url":"https://api.github.com/repos/apache/activemq/issues/1363","id":2529410128,"node_id":"IC_kwDOAAMmM86Ww7xQ","user":{"login":"kenliao94","id":6269022,"node_id":"MDQ6VXNlcjYyNjkwMjI=","avatar_url":"https://avatars.githubusercontent.com/u/6269022?v=4","gravatar_id":"","url":"https://api.github.com/users/kenliao94","html_url":"https://github.com/kenliao94","followers_url":"https://api.github.com/users/kenliao94/followers","following_url":"https://api.github.com/users/kenliao94/following{/other_user}","gists_url":"https://api.github.com/users/kenliao94/gists{/gist_id}","starred_url":"https://api.github.com/users/kenliao94/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kenliao94/subscriptions","organizations_url":"https://api.github.com/users/kenliao94/orgs","repos_url":"https://api.github.com/users/kenliao94/repos","events_url":"https://api.github.com/users/kenliao94/events{/privacy}","received_events_url":"https://api.github.com/users/kenliao94/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-12-09T20:45:32Z","updated_at":"2024-12-09T20:45:32Z","author_association":"CONTRIBUTOR","body":"Thanks JB :) ","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2529410128/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2531953091","html_url":"https://github.com/apache/activemq/pull/1364#issuecomment-2531953091","issue_url":"https://api.github.com/repos/apache/activemq/issues/1364","id":2531953091,"node_id":"IC_kwDOAAMmM86W6onD","user":{"login":"cshannon","id":123009,"node_id":"MDQ6VXNlcjEyMzAwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/123009?v=4","gravatar_id":"","url":"https://api.github.com/users/cshannon","html_url":"https://github.com/cshannon","followers_url":"https://api.github.com/users/cshannon/followers","following_url":"https://api.github.com/users/cshannon/following{/other_user}","gists_url":"https://api.github.com/users/cshannon/gists{/gist_id}","starred_url":"https://api.github.com/users/cshannon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cshannon/subscriptions","organizations_url":"https://api.github.com/users/cshannon/orgs","repos_url":"https://api.github.com/users/cshannon/repos","events_url":"https://api.github.com/users/cshannon/events{/privacy}","received_events_url":"https://api.github.com/users/cshannon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-12-10T15:09:08Z","updated_at":"2024-12-10T15:09:08Z","author_association":"CONTRIBUTOR","body":"I don't think the changes here are going to be nearly as simple as you think, it's been a while since I've looked at this and have to review the spec again but I've talked to @tabish121 about there are a lot of things you have to take into consideration and it's not just as simple as being able to copy and paste the existing async code. Speaking of which, we should be trying to re-use code where possible and not simply copying and pasting.","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2531953091/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2531993249","html_url":"https://github.com/apache/activemq/pull/1364#issuecomment-2531993249","issue_url":"https://api.github.com/repos/apache/activemq/issues/1364","id":2531993249,"node_id":"IC_kwDOAAMmM86W6yah","user":{"login":"cshannon","id":123009,"node_id":"MDQ6VXNlcjEyMzAwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/123009?v=4","gravatar_id":"","url":"https://api.github.com/users/cshannon","html_url":"https://github.com/cshannon","followers_url":"https://api.github.com/users/cshannon/followers","following_url":"https://api.github.com/users/cshannon/following{/other_user}","gists_url":"https://api.github.com/users/cshannon/gists{/gist_id}","starred_url":"https://api.github.com/users/cshannon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cshannon/subscriptions","organizations_url":"https://api.github.com/users/cshannon/orgs","repos_url":"https://api.github.com/users/cshannon/repos","events_url":"https://api.github.com/users/cshannon/events{/privacy}","received_events_url":"https://api.github.com/users/cshannon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-12-10T15:17:42Z","updated_at":"2024-12-10T15:17:42Z","author_association":"CONTRIBUTOR","body":"It looks like @tabish121 already commented on another PR about the issues with things like ordering that need to be taken into consideration here: https://github.com/apache/activemq/pull/1045#issuecomment-1699645592\r\n\r\nFurthermore, @gemmellr commented here https://github.com/apache/activemq/pull/1303#pullrequestreview-2306317779\r\n\r\nSo all of this was already discussed and I don't see how this PR addresses any of those concerns","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2531993249/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2532020179","html_url":"https://github.com/apache/activemq/pull/1364#issuecomment-2532020179","issue_url":"https://api.github.com/repos/apache/activemq/issues/1364","id":2532020179,"node_id":"IC_kwDOAAMmM86W64_T","user":{"login":"tabish121","id":146346,"node_id":"MDQ6VXNlcjE0NjM0Ng==","avatar_url":"https://avatars.githubusercontent.com/u/146346?v=4","gravatar_id":"","url":"https://api.github.com/users/tabish121","html_url":"https://github.com/tabish121","followers_url":"https://api.github.com/users/tabish121/followers","following_url":"https://api.github.com/users/tabish121/following{/other_user}","gists_url":"https://api.github.com/users/tabish121/gists{/gist_id}","starred_url":"https://api.github.com/users/tabish121/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tabish121/subscriptions","organizations_url":"https://api.github.com/users/tabish121/orgs","repos_url":"https://api.github.com/users/tabish121/repos","events_url":"https://api.github.com/users/tabish121/events{/privacy}","received_events_url":"https://api.github.com/users/tabish121/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-12-10T15:22:42Z","updated_at":"2024-12-10T15:22:42Z","author_association":"CONTRIBUTOR","body":"> So all of this was already discussed and I don't see how this PR addresses any of those concerns\r\n\r\nIt does not.","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2532020179/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2532189918","html_url":"https://github.com/apache/activemq/pull/1364#issuecomment-2532189918","issue_url":"https://api.github.com/repos/apache/activemq/issues/1364","id":2532189918,"node_id":"IC_kwDOAAMmM86W7ibe","user":{"login":"cshannon","id":123009,"node_id":"MDQ6VXNlcjEyMzAwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/123009?v=4","gravatar_id":"","url":"https://api.github.com/users/cshannon","html_url":"https://github.com/cshannon","followers_url":"https://api.github.com/users/cshannon/followers","following_url":"https://api.github.com/users/cshannon/following{/other_user}","gists_url":"https://api.github.com/users/cshannon/gists{/gist_id}","starred_url":"https://api.github.com/users/cshannon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cshannon/subscriptions","organizations_url":"https://api.github.com/users/cshannon/orgs","repos_url":"https://api.github.com/users/cshannon/repos","events_url":"https://api.github.com/users/cshannon/events{/privacy}","received_events_url":"https://api.github.com/users/cshannon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-12-10T16:17:24Z","updated_at":"2024-12-10T16:17:24Z","author_association":"CONTRIBUTOR","body":"I need to look more into it later when I have more time but I started looking at the spec details and also the previous comments of concerns to try and figure out what the issues are. There's a few things but it looked like one of the biggest concerns was whether or not the ordering requirements are being met.\r\n\r\nThe PR mentions that ordering is handled by the broker so I was trying to figure out if it's true for all the cases we need to care about. Specifically, things like persistent vs non-persistent messages being intermixed and also anonymous producers across destinations, etc.\r\n\r\nLooking at the spec in detail, I think the current async behavior might be good enough but not sure yet. It says the async behavior must follow the sync and is described at: https://jakarta.ee/specifications/messaging/3.1/jakarta-messaging-spec-3.1#order-of-message-sends. Specifically I noticed it says:\r\n\r\n1. The spec talks about ordering only being guaranteed for the same delivery mode (persistent or non persistent) so we may be ok: ` If both PERSISTENT and NON_PERSISTENT messages are sent to a destination, order is only guaranteed within delivery mode.`\r\n2. The spec mentions `The only ordering that is visible to receiving clients is the order of messages a session sends to a particular destination. `so I think as long as we can make sure the broker/client guarantee the ordering per destination it might be ok as well.\r\n\r\nAll of this needs to be looked at closely and well tested of course. There's a lot of other nuances that need to be considered like session close: https://jakarta.ee/specifications/messaging/3.1/jakarta-messaging-spec-3.1#close-commit-or-rollback\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2532189918/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2533379072","html_url":"https://github.com/apache/activemq/pull/1364#issuecomment-2533379072","issue_url":"https://api.github.com/repos/apache/activemq/issues/1364","id":2533379072,"node_id":"IC_kwDOAAMmM86XAEwA","user":{"login":"kenliao94","id":6269022,"node_id":"MDQ6VXNlcjYyNjkwMjI=","avatar_url":"https://avatars.githubusercontent.com/u/6269022?v=4","gravatar_id":"","url":"https://api.github.com/users/kenliao94","html_url":"https://github.com/kenliao94","followers_url":"https://api.github.com/users/kenliao94/followers","following_url":"https://api.github.com/users/kenliao94/following{/other_user}","gists_url":"https://api.github.com/users/kenliao94/gists{/gist_id}","starred_url":"https://api.github.com/users/kenliao94/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kenliao94/subscriptions","organizations_url":"https://api.github.com/users/kenliao94/orgs","repos_url":"https://api.github.com/users/kenliao94/repos","events_url":"https://api.github.com/users/kenliao94/events{/privacy}","received_events_url":"https://api.github.com/users/kenliao94/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-12-11T01:02:18Z","updated_at":"2024-12-11T01:29:33Z","author_association":"CONTRIBUTOR","body":"Thanks for the feedback @cshannon, @tabish121 and @mattrpav . So I didn't exactly copied and pasted the AsyncCallback code, I did a few manual testing to make sure the ordering is honor. I added one testcase in the unit test that sends 100 message asynchronously, and make sure the CompletionListener is executed at the correct order. I will add a few more about intermixing between sync and async send. One challenge I had with unit testing is it doesn't simulate delayed in Ack. I built a hacked broker to simulate ack delayed for certain messages (if the message content contains a secret command) and it did honor the ordering. I will make sure I add more unit testcases, perform more  manual tests and come up with edge cases, put it in a doc and present it here.\r\n\r\nFrom what I observed in my testing, the broker will not send out acknowledge of the send request out of order. It can dispatch to the consumer in different order due to message priority, but for same destination, the order of message ack is honored. I will go back and poke around it even more to see if I miss other edge cases and push the number of messages sent to see if I can break it. That being said, I didn't implement the logic of making sure the order is honored on the client side. If we feel that we need to enforce it on the client side (as a safeguard) then I can see what I can do on the client code.\r\n\r\nRegarding session close: yes 100%. That's why I would love feedback on that on what testcases I miss. Especially I needed to add a concurrent data structure to block until all async sends have completed (maybe there is one that does what I want supported natively, I have looked into phaser). That one I can add unit tests coverage more easily.\r\n ","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2533379072/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2535866454","html_url":"https://github.com/apache/activemq/pull/1364#issuecomment-2535866454","issue_url":"https://api.github.com/repos/apache/activemq/issues/1364","id":2535866454,"node_id":"IC_kwDOAAMmM86XJkBW","user":{"login":"cshannon","id":123009,"node_id":"MDQ6VXNlcjEyMzAwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/123009?v=4","gravatar_id":"","url":"https://api.github.com/users/cshannon","html_url":"https://github.com/cshannon","followers_url":"https://api.github.com/users/cshannon/followers","following_url":"https://api.github.com/users/cshannon/following{/other_user}","gists_url":"https://api.github.com/users/cshannon/gists{/gist_id}","starred_url":"https://api.github.com/users/cshannon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cshannon/subscriptions","organizations_url":"https://api.github.com/users/cshannon/orgs","repos_url":"https://api.github.com/users/cshannon/repos","events_url":"https://api.github.com/users/cshannon/events{/privacy}","received_events_url":"https://api.github.com/users/cshannon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-12-11T12:32:05Z","updated_at":"2024-12-11T12:33:24Z","author_association":"CONTRIBUTOR","body":"@kenliao94 - In talking with @tabish121 there is one more wrinkle that I think also makes this more challenging if we are sticking strictly to the spec regarding the completion listener: https://jakarta.ee/specifications/messaging/3.1/jakarta-messaging-spec-3.1#use-of-the-completionlistener-by-the-jakarta-messaging-provider\r\n\r\n> 7.3.8. Use of the CompletionListener by the Jakarta Messaging provider\r\n> A session will only invoke one CompletionListener callback method at a time. For a given MessageProducer or JMSContext, callbacks (both onCompletion and onException) will be performed in the same order as the corresponding calls to the asynchronous send method.\r\n\r\nThe issue here is that if a producer is sending messages to different destinations and/or with different modes (persistent/non persistent) then while the broker will handle the ordering correctly for each destination, it's possible and likely that the client will receive the responses out of order and end up completing the callbacks out of order. This is because the ActiveMQ client tracks the async requests in a [map](https://github.com/apache/activemq/blob/645dd999644c49a0b28b3dbda3b04c7098fafc54/activemq-client/src/main/java/org/apache/activemq/transport/ResponseCorrelator.java#L42) and just completes them as it receives them.\r\n\r\nIn order to honor the spec for this section you would have to modify things to hold responses and not invoke those callbacks immediately if there were previous outstanding calls that had not been completed which is of course different than what the current behavior of the client is. There is a good example of the complexity in handling this in the Qpid JMS JmsSession class where they track all their async request completions in a [queue](https://github.com/apache/qpid-jms/blob/2d799c153a6b51f07a4c9ccec4a8751598183733/qpid-jms-client/src/main/java/org/apache/qpid/jms/JmsSession.java#L139) so that things are processed in order.\r\n\r\nI suppose there could be a discussion on whether this requirement really needs to be met or not for the client but if the intention is to implement the spec then it should probably be followed 100%. The other issue of course is that this behavior is a bit different than the existing async behavior that the client supports so then we'd have to decide if we also need to preserve the old way for the existing API.","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2535866454/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2535973736","html_url":"https://github.com/apache/activemq/pull/1364#issuecomment-2535973736","issue_url":"https://api.github.com/repos/apache/activemq/issues/1364","id":2535973736,"node_id":"IC_kwDOAAMmM86XJ-No","user":{"login":"cshannon","id":123009,"node_id":"MDQ6VXNlcjEyMzAwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/123009?v=4","gravatar_id":"","url":"https://api.github.com/users/cshannon","html_url":"https://github.com/cshannon","followers_url":"https://api.github.com/users/cshannon/followers","following_url":"https://api.github.com/users/cshannon/following{/other_user}","gists_url":"https://api.github.com/users/cshannon/gists{/gist_id}","starred_url":"https://api.github.com/users/cshannon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cshannon/subscriptions","organizations_url":"https://api.github.com/users/cshannon/orgs","repos_url":"https://api.github.com/users/cshannon/repos","events_url":"https://api.github.com/users/cshannon/events{/privacy}","received_events_url":"https://api.github.com/users/cshannon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-12-11T13:19:30Z","updated_at":"2024-12-11T13:19:46Z","author_association":"CONTRIBUTOR","body":"As a follow up to my comment about following the spec 100% and whether we really need to meet the requirement etc...\r\n\r\nUser's have been using the existing async client behavior for a very long time so I think you could also make an argument to actually just make the new Jakarta 3.1 completion listener behavior to be in line with the old behavior even even if it doesn't match the spec 100% as it preserves existing behavior and obviously is significantly less work to implement.\r\n\r\nOn one hand, i think the goal should be to be 100% compliance but on the other hand it's also not like the broker has ever been fully compliant and certainly isn't compliant today with not implementing much of the spec. And there are times where I don't know how much it really matters if the spec is fully met.\r\n\r\nAnyways, I'm not sure what we should do as I'm sure there are uses cases and client code that would now break if the code expects an exact match to the spec and it deviates. Thinking about it, I don't really know how much it matters or doesn't matter that clause [7.3.8](https://jakarta.ee/specifications/messaging/3.1/jakarta-messaging-spec-3.1#use-of-the-completionlistener-by-the-jakarta-messaging-provider) is honored as it depends on what a client is trying to do, but if it wasn't honored we'd certainly need to disclose that somewhere for awareness.","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2535973736/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2536180353","html_url":"https://github.com/apache/activemq/pull/1364#issuecomment-2536180353","issue_url":"https://api.github.com/repos/apache/activemq/issues/1364","id":2536180353,"node_id":"IC_kwDOAAMmM86XKwqB","user":{"login":"jbonofre","id":158903,"node_id":"MDQ6VXNlcjE1ODkwMw==","avatar_url":"https://avatars.githubusercontent.com/u/158903?v=4","gravatar_id":"","url":"https://api.github.com/users/jbonofre","html_url":"https://github.com/jbonofre","followers_url":"https://api.github.com/users/jbonofre/followers","following_url":"https://api.github.com/users/jbonofre/following{/other_user}","gists_url":"https://api.github.com/users/jbonofre/gists{/gist_id}","starred_url":"https://api.github.com/users/jbonofre/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jbonofre/subscriptions","organizations_url":"https://api.github.com/users/jbonofre/orgs","repos_url":"https://api.github.com/users/jbonofre/repos","events_url":"https://api.github.com/users/jbonofre/events{/privacy}","received_events_url":"https://api.github.com/users/jbonofre/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-12-11T14:38:02Z","updated_at":"2024-12-11T14:38:02Z","author_association":"MEMBER","body":"I agree with Chris. I think it makes more sense to close to the ActiveMQ async behavior (that exists for a while) more than trying to implement the spec at 100%. It would not surprise users imho ;)","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2536180353/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2536251567","html_url":"https://github.com/apache/activemq/pull/1364#issuecomment-2536251567","issue_url":"https://api.github.com/repos/apache/activemq/issues/1364","id":2536251567,"node_id":"IC_kwDOAAMmM86XLCCv","user":{"login":"cshannon","id":123009,"node_id":"MDQ6VXNlcjEyMzAwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/123009?v=4","gravatar_id":"","url":"https://api.github.com/users/cshannon","html_url":"https://github.com/cshannon","followers_url":"https://api.github.com/users/cshannon/followers","following_url":"https://api.github.com/users/cshannon/following{/other_user}","gists_url":"https://api.github.com/users/cshannon/gists{/gist_id}","starred_url":"https://api.github.com/users/cshannon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cshannon/subscriptions","organizations_url":"https://api.github.com/users/cshannon/orgs","repos_url":"https://api.github.com/users/cshannon/repos","events_url":"https://api.github.com/users/cshannon/events{/privacy}","received_events_url":"https://api.github.com/users/cshannon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-12-11T15:03:49Z","updated_at":"2024-12-11T15:04:21Z","author_association":"CONTRIBUTOR","body":"> I agree with Chris. I think it makes more sense to close to the ActiveMQ async behavior (that exists for a while) more than trying to implement the spec at 100%. It would not surprise users imho ;)\r\n\r\nWell, I'm not really advocating one way or the other at the moment, and I still think there's a very good argument to be made that the work needs to be done to implement the spec correctly.\r\n\r\nI'm just saying we could have the conversation about it. Normally I would say if we are implementing the JMS spec then obviously it should be done 100%, this is just a little interesting because there's an existing async API that users have been using that is similar but slightly different.\r\n\r\nIt's hard to say how surprised users will be as it depends on if they are a new user or legacy user probably. I would think that if a user is migrating from the existing async custom API to the Jakarta API they may be fine with the change and be expecting it to be the same.\r\n\r\nBut there are going to be other users who are not migrating or read the spec and expect a different behavior and that the callbacks are completed in order so I could see someone relying on that (maybe the callback increments something, who knows) that could now break if they complete out of order.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2536251567/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2536272913","html_url":"https://github.com/apache/activemq/pull/1364#issuecomment-2536272913","issue_url":"https://api.github.com/repos/apache/activemq/issues/1364","id":2536272913,"node_id":"IC_kwDOAAMmM86XLHQR","user":{"login":"jbonofre","id":158903,"node_id":"MDQ6VXNlcjE1ODkwMw==","avatar_url":"https://avatars.githubusercontent.com/u/158903?v=4","gravatar_id":"","url":"https://api.github.com/users/jbonofre","html_url":"https://github.com/jbonofre","followers_url":"https://api.github.com/users/jbonofre/followers","following_url":"https://api.github.com/users/jbonofre/following{/other_user}","gists_url":"https://api.github.com/users/jbonofre/gists{/gist_id}","starred_url":"https://api.github.com/users/jbonofre/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jbonofre/subscriptions","organizations_url":"https://api.github.com/users/jbonofre/orgs","repos_url":"https://api.github.com/users/jbonofre/repos","events_url":"https://api.github.com/users/jbonofre/events{/privacy}","received_events_url":"https://api.github.com/users/jbonofre/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-12-11T15:12:20Z","updated_at":"2024-12-11T15:12:20Z","author_association":"MEMBER","body":"My point is that async exists for a while in ActiveMQ. So, it makes sense to use this for spec impl. That's especially true for async send. For message listener/callback, I think it depends if the user is an existing ActiveMQ user or a new one.\r\n\r\nI would advocate that as a first shot, it makes sense to start from our ActiveMQ experience.","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2536272913/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2536480372","html_url":"https://github.com/apache/activemq/pull/1364#issuecomment-2536480372","issue_url":"https://api.github.com/repos/apache/activemq/issues/1364","id":2536480372,"node_id":"IC_kwDOAAMmM86XL550","user":{"login":"cshannon","id":123009,"node_id":"MDQ6VXNlcjEyMzAwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/123009?v=4","gravatar_id":"","url":"https://api.github.com/users/cshannon","html_url":"https://github.com/cshannon","followers_url":"https://api.github.com/users/cshannon/followers","following_url":"https://api.github.com/users/cshannon/following{/other_user}","gists_url":"https://api.github.com/users/cshannon/gists{/gist_id}","starred_url":"https://api.github.com/users/cshannon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cshannon/subscriptions","organizations_url":"https://api.github.com/users/cshannon/orgs","repos_url":"https://api.github.com/users/cshannon/repos","events_url":"https://api.github.com/users/cshannon/events{/privacy}","received_events_url":"https://api.github.com/users/cshannon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-12-11T16:27:23Z","updated_at":"2024-12-11T16:27:23Z","author_association":"CONTRIBUTOR","body":"I took a look at the existing Async API and it's not actually documented anywhere that I can see of how it is supposed to work. So I actually don't think it would be a problem to just have the old API follow the same behavior as the spec, the order of completion callback isn't defined anywhere and there is no spec for the AMQ api so if we made it process in order it would be fine.\r\n\r\nI think it's always going to be better to implement the spec 100% if possible. My primary hesitation was about unexpected behavior changes from the existing async API but since it isn't documented (as I mentioned) I don't think it's a problem if we complete the callbacks in order.\r\n\r\nSo I am leaning towards the idea that we should try and figure out if we can add a way to actually do that so we are spec compliant. Right now the callbacks/requests are only tracked in a map in the response correlator, I think we'd need to add something extra to track the order of submission as well and make sure to only execute the callback on a completed request once there are no previous requests. We'd need to make sure we didn't have too much queued up at once so that means timeouts or even blocking the send if there is outstanding stuff. \r\n\r\nOnly simple way I think to meet the requirement is to only send one message at a time and wait for the response before sending the next one. This would make the behavior similar to a normal sync send but it would still complete async and is spec compliant.  The only requirement is the callback is not executed in the same thread but you could in theory just only allow one to be submitted at a time (wait for each send to complete before sending the next one). \r\n\r\nI don't know that it's a good idea to simply use the existing async code and then say we will fix it later as that just establishes newly expected behavior that will either change which could cause users problems or more likely it will just be ignored and never fixed for real like ti should be.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2536480372/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2536928048","html_url":"https://github.com/apache/activemq/pull/1364#issuecomment-2536928048","issue_url":"https://api.github.com/repos/apache/activemq/issues/1364","id":2536928048,"node_id":"IC_kwDOAAMmM86XNnMw","user":{"login":"kenliao94","id":6269022,"node_id":"MDQ6VXNlcjYyNjkwMjI=","avatar_url":"https://avatars.githubusercontent.com/u/6269022?v=4","gravatar_id":"","url":"https://api.github.com/users/kenliao94","html_url":"https://github.com/kenliao94","followers_url":"https://api.github.com/users/kenliao94/followers","following_url":"https://api.github.com/users/kenliao94/following{/other_user}","gists_url":"https://api.github.com/users/kenliao94/gists{/gist_id}","starred_url":"https://api.github.com/users/kenliao94/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kenliao94/subscriptions","organizations_url":"https://api.github.com/users/kenliao94/orgs","repos_url":"https://api.github.com/users/kenliao94/repos","events_url":"https://api.github.com/users/kenliao94/events{/privacy}","received_events_url":"https://api.github.com/users/kenliao94/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-12-11T19:26:08Z","updated_at":"2024-12-11T22:08:57Z","author_association":"CONTRIBUTOR","body":"Hi @cshannon and @jbonofre the initial goal of this particular PR is to implement the behavior as close to the spec as possible. That being said, I am not against using the existing AsyncCallback behavior as CompletionListener because it has been proven effective. \r\n\r\nThere are 9 items in the spec, so are we saying that only 7.3.3 message orders is not met? \r\nIn another words:\r\n7.3.1 - met\r\n7.3.2 - met\r\n7.3.3 - not met\r\n7.3.4 - met \r\n7.3.5 - no going to support it, met\r\n7.3.6 - not going to throw exception, it is application responsibility, met\r\n7.3.7 - met\r\n7.3.8 - I thought this is already met, but it seems like it hasn't\r\n7.3.9 - not going to throw exception, it is application responsibility, met\r\n\r\nThe first iteration of this PR is to just wrap AsyncCallback into CompletionListener and have the CompletionListener implemented the same way as the original AsyncCallback. But as @tabish121 pointed out, that version didn't implement the spec, and from the mailing list discussion https://lists.apache.org/thread/y2pz4y1p9c5l1cdm6lyd5spc810mk6kq we want to keep both behavior in ActiveMQ 6. Hence I created this PR that referenced the current async design but added additional logic (such as wrapping user completion listener to perform check and add a blocking call to close, commit and rollback)\r\n\r\nI will do more testing and add more logic to try and meet 7.3.3 and 7.3.8. But would like to get clarity on whether this is the only one not meeting the spec or there are more. Thanks.","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2536928048/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2537400365","html_url":"https://github.com/apache/activemq/pull/1364#issuecomment-2537400365","issue_url":"https://api.github.com/repos/apache/activemq/issues/1364","id":2537400365,"node_id":"IC_kwDOAAMmM86XPagt","user":{"login":"cshannon","id":123009,"node_id":"MDQ6VXNlcjEyMzAwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/123009?v=4","gravatar_id":"","url":"https://api.github.com/users/cshannon","html_url":"https://github.com/cshannon","followers_url":"https://api.github.com/users/cshannon/followers","following_url":"https://api.github.com/users/cshannon/following{/other_user}","gists_url":"https://api.github.com/users/cshannon/gists{/gist_id}","starred_url":"https://api.github.com/users/cshannon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cshannon/subscriptions","organizations_url":"https://api.github.com/users/cshannon/orgs","repos_url":"https://api.github.com/users/cshannon/repos","events_url":"https://api.github.com/users/cshannon/events{/privacy}","received_events_url":"https://api.github.com/users/cshannon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-12-11T23:19:40Z","updated_at":"2024-12-11T23:19:40Z","author_association":"CONTRIBUTOR","body":"@kenliao94 - I think 7.3.3 is already handled by the broker as it should enforce the order across each destination and between mode (persistent/non persistent) but we can test. \r\n\r\nMy concern the last few comments has to do with 7.3.8 which refers to the order that the completion listeners complete and that is the thing that would not be handled right now. The listeners would complete as the requests to the broker complete, so there is no guarantee the client will complete them in the order as 7.3.8 requires across different destinations.\r\n\r\nFor example, let's say a producer sends 5 messages to 5 different destinations async (anonymous producer).  I believe the current behavior of the client is that the completion callback would be executed for each of the 5 sent messages whenever they are received back from the broker. Because you are publishing to 5 different destinations, and because the broker does not enforce any kind of order across destinations, it's possible the producer will receive back the acks for the sent messages in a different order then they were sent. So this could lead to something like the callback for the 3rd published message being executed before the first one. We would need some way for the client to keep track of the order and hold off completing.\r\n\r\nThe caveat is I _think_ this is the current behavior. I would need to double check it but I don't think there's anything preventing the broker from responding back in a different order if the messages are published to different destinations.\r\n\r\nRegarding 7.3.5 it sounds like @mattrpav asked a question about it so I'm not sure if it can be skipped.\r\n\r\nRegarding 7.3.6 I missed this when originally reviewing the PR and I read into the spec more and your explanation and I'm not sure I agree. The spec says that you \"may\" throw an exception so that part is optional but I would argue it's preferred.  What I'm reading is that you still would need to prevent the fields/properties from being accessed even if you didn't. I do not agree with your assessment that it is somehow messy code or the applications job. The simplest thing to do is the thing you didn't do, and that is just have a flag that is set that sets the mode and if the setter is allowed to be accessed and if it isn't because the competition is pending you throw an exception. Here is where Qpid JMS enforces this: https://github.com/apache/qpid-jms/blob/2d799c153a6b51f07a4c9ccec4a8751598183733/qpid-jms-client/src/main/java/org/apache/qpid/jms/message/JmsMessage.java#L461-L481\r\n\r\nQpid JMS is a pretty good open source reference point in general to refer to. While it's AMQP, it's a good starting point for tips on how to handle the spec.","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2537400365/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2537496438","html_url":"https://github.com/apache/activemq/pull/1364#issuecomment-2537496438","issue_url":"https://api.github.com/repos/apache/activemq/issues/1364","id":2537496438,"node_id":"IC_kwDOAAMmM86XPx92","user":{"login":"cshannon","id":123009,"node_id":"MDQ6VXNlcjEyMzAwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/123009?v=4","gravatar_id":"","url":"https://api.github.com/users/cshannon","html_url":"https://github.com/cshannon","followers_url":"https://api.github.com/users/cshannon/followers","following_url":"https://api.github.com/users/cshannon/following{/other_user}","gists_url":"https://api.github.com/users/cshannon/gists{/gist_id}","starred_url":"https://api.github.com/users/cshannon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cshannon/subscriptions","organizations_url":"https://api.github.com/users/cshannon/orgs","repos_url":"https://api.github.com/users/cshannon/repos","events_url":"https://api.github.com/users/cshannon/events{/privacy}","received_events_url":"https://api.github.com/users/cshannon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-12-12T00:42:34Z","updated_at":"2024-12-12T00:42:34Z","author_association":"CONTRIBUTOR","body":"One idea I had as another option for 7.3.8 is to only process one message a time. Well technically, this was @tabish121 idea.\r\n\r\nThe spec says that the callback must be processed in a new thread for the async send but it doesn't say that multiple concurrent sends must be allowed. So the sending thread could block and wait for the send to finish and execute the callback before continuing. This of course is similar behavior to the normal sync send that just sends a message at a time and blocks. This is the simplest way to meet the spec (turning it into sync essentially) but the downside is not allowing the throughput of multiple sends at once. \r\n\r\nWe could do something like make the mode configurable with legacy vs compliant mode. If it's legacy it could fall back to the existing async behavior that doesn't meet the spec, and if it's compliant it goes into the mode where it just sends one a time. A future update could be done to make the \"compliant\" mode better and allow it to handle multiple sends at one by tracking the order.\r\n\r\nAgain, _potential_ option, I'm not sure this is a good idea either but another idea I had.","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2537496438/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2537555045","html_url":"https://github.com/apache/activemq/pull/1364#issuecomment-2537555045","issue_url":"https://api.github.com/repos/apache/activemq/issues/1364","id":2537555045,"node_id":"IC_kwDOAAMmM86XQARl","user":{"login":"kenliao94","id":6269022,"node_id":"MDQ6VXNlcjYyNjkwMjI=","avatar_url":"https://avatars.githubusercontent.com/u/6269022?v=4","gravatar_id":"","url":"https://api.github.com/users/kenliao94","html_url":"https://github.com/kenliao94","followers_url":"https://api.github.com/users/kenliao94/followers","following_url":"https://api.github.com/users/kenliao94/following{/other_user}","gists_url":"https://api.github.com/users/kenliao94/gists{/gist_id}","starred_url":"https://api.github.com/users/kenliao94/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kenliao94/subscriptions","organizations_url":"https://api.github.com/users/kenliao94/orgs","repos_url":"https://api.github.com/users/kenliao94/repos","events_url":"https://api.github.com/users/kenliao94/events{/privacy}","received_events_url":"https://api.github.com/users/kenliao94/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-12-12T01:36:33Z","updated_at":"2024-12-12T01:50:45Z","author_association":"CONTRIBUTOR","body":"@cshannon makes sense. Thank you for your through review!\r\n\r\nRegarding 7.3.6 and 7.3.9: I will bring back the flag idea I mentioned in the description. During my exploration, I used the exact approach as Qpid JMS, add a setter method and an attribute to ActiveMQMessage. If that attribute is true. It will throw exception. As stated in the `jakarta.jms.Message` interface, message header getters can throw `JMSException`. The caveat is the implementation `ActiveMQMessage` those methods don't throw exception. As a result, when I declared throw in the implementation, it propagates out and caused many compilation failure in even the MQTT packages. That being said, I agree with your assessment that we need to prevent message headers and properties being accessed so I need more work on that.\r\n\r\nRegarding 7.3.3 and 7.3.8: I think I see your points now. Basically ordering within same destination and same delivery mode is already honored by the broker. So we are on the same page that 7.3.3 is already met as is. However, when it comes to 7.3.8, across destination from the same producer, the message order is not honored and I think you are right with the example you provided. When I looked at it initially, it is a map and there's no mechanism in the transport layer that make sure it is honored but I forgot about that case. I will push a new revision ASAP.\r\n\r\nRegarding legacy vs compliant mode, in this PR, it is differentiated by what API the client application uses. If the application uses the Jakarta Messaging API, async send with CompletionListener, it will get the behavior as described in the spec, I.E compliant mode. If the client application decides to cast the `MessageProducer` to `ActiveMQMessageProducer` and uses the AsyncCallback API, then it will get the legacy mode. However, what about async send without using CompletionListener or AsyncCallback at all? I think in this case, we should stick with existing behavior which is legacy mode because users are used to it and we probably don't need to provide a configuration for it. In JMS 1.1, there's no requirement on whether a `send` needs to be done sync or async (implementation detail). As long as it is completed with the same confidence that a persistent message will persist in the broker engine, ensuring reliable delivery (behavior). In existing implementation, a message is only sync if it is a persistent message sent outside of a transaction boundary AFAIK. Otherwise it's default async. In Jakarta Messaging 3.1, from the user perspective, it is only \"async\" when CompletionListener is used, so we only need to make that API compliant, but not existing behavior compliant.","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2537555045/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2537556693","html_url":"https://github.com/apache/activemq/pull/1364#issuecomment-2537556693","issue_url":"https://api.github.com/repos/apache/activemq/issues/1364","id":2537556693,"node_id":"IC_kwDOAAMmM86XQArV","user":{"login":"kenliao94","id":6269022,"node_id":"MDQ6VXNlcjYyNjkwMjI=","avatar_url":"https://avatars.githubusercontent.com/u/6269022?v=4","gravatar_id":"","url":"https://api.github.com/users/kenliao94","html_url":"https://github.com/kenliao94","followers_url":"https://api.github.com/users/kenliao94/followers","following_url":"https://api.github.com/users/kenliao94/following{/other_user}","gists_url":"https://api.github.com/users/kenliao94/gists{/gist_id}","starred_url":"https://api.github.com/users/kenliao94/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kenliao94/subscriptions","organizations_url":"https://api.github.com/users/kenliao94/orgs","repos_url":"https://api.github.com/users/kenliao94/repos","events_url":"https://api.github.com/users/kenliao94/events{/privacy}","received_events_url":"https://api.github.com/users/kenliao94/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-12-12T01:38:08Z","updated_at":"2024-12-12T01:38:16Z","author_association":"CONTRIBUTOR","body":"And follow up on your idea of one async send at a time. It is a viable option. We can go with it for now and not worry about the performance aspect. Since optimizing the throughput won't change behavior so it is not a breaking change.  We can always improve the performance through another PR if that makes this PR smaller to review.","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2537556693/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2539117174","html_url":"https://github.com/apache/activemq/pull/1364#issuecomment-2539117174","issue_url":"https://api.github.com/repos/apache/activemq/issues/1364","id":2539117174,"node_id":"IC_kwDOAAMmM86XV9p2","user":{"login":"mattrpav","id":512119,"node_id":"MDQ6VXNlcjUxMjExOQ==","avatar_url":"https://avatars.githubusercontent.com/u/512119?v=4","gravatar_id":"","url":"https://api.github.com/users/mattrpav","html_url":"https://github.com/mattrpav","followers_url":"https://api.github.com/users/mattrpav/followers","following_url":"https://api.github.com/users/mattrpav/following{/other_user}","gists_url":"https://api.github.com/users/mattrpav/gists{/gist_id}","starred_url":"https://api.github.com/users/mattrpav/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mattrpav/subscriptions","organizations_url":"https://api.github.com/users/mattrpav/orgs","repos_url":"https://api.github.com/users/mattrpav/repos","events_url":"https://api.github.com/users/mattrpav/events{/privacy}","received_events_url":"https://api.github.com/users/mattrpav/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-12-12T14:30:58Z","updated_at":"2024-12-12T14:30:58Z","author_association":"CONTRIBUTOR","body":"+1 on spec compliance\r\n+1 on retaining previous functionality\r\n\r\nI have come to learn (the hard way) that if there is a feature in ActiveMQ, someone is using it in production.","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2539117174/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2539125674","html_url":"https://github.com/apache/activemq/pull/1364#issuecomment-2539125674","issue_url":"https://api.github.com/repos/apache/activemq/issues/1364","id":2539125674,"node_id":"IC_kwDOAAMmM86XV_uq","user":{"login":"jbonofre","id":158903,"node_id":"MDQ6VXNlcjE1ODkwMw==","avatar_url":"https://avatars.githubusercontent.com/u/158903?v=4","gravatar_id":"","url":"https://api.github.com/users/jbonofre","html_url":"https://github.com/jbonofre","followers_url":"https://api.github.com/users/jbonofre/followers","following_url":"https://api.github.com/users/jbonofre/following{/other_user}","gists_url":"https://api.github.com/users/jbonofre/gists{/gist_id}","starred_url":"https://api.github.com/users/jbonofre/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jbonofre/subscriptions","organizations_url":"https://api.github.com/users/jbonofre/orgs","repos_url":"https://api.github.com/users/jbonofre/repos","events_url":"https://api.github.com/users/jbonofre/events{/privacy}","received_events_url":"https://api.github.com/users/jbonofre/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-12-12T14:34:11Z","updated_at":"2024-12-12T14:34:11Z","author_association":"MEMBER","body":"On the same page as @mattrpav and @cshannon 😄 ","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2539125674/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2539155655","html_url":"https://github.com/apache/activemq/pull/1364#issuecomment-2539155655","issue_url":"https://api.github.com/repos/apache/activemq/issues/1364","id":2539155655,"node_id":"IC_kwDOAAMmM86XWHDH","user":{"login":"cshannon","id":123009,"node_id":"MDQ6VXNlcjEyMzAwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/123009?v=4","gravatar_id":"","url":"https://api.github.com/users/cshannon","html_url":"https://github.com/cshannon","followers_url":"https://api.github.com/users/cshannon/followers","following_url":"https://api.github.com/users/cshannon/following{/other_user}","gists_url":"https://api.github.com/users/cshannon/gists{/gist_id}","starred_url":"https://api.github.com/users/cshannon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cshannon/subscriptions","organizations_url":"https://api.github.com/users/cshannon/orgs","repos_url":"https://api.github.com/users/cshannon/repos","events_url":"https://api.github.com/users/cshannon/events{/privacy}","received_events_url":"https://api.github.com/users/cshannon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-12-12T14:45:22Z","updated_at":"2024-12-12T14:47:18Z","author_association":"CONTRIBUTOR","body":"@kenliao94 - Yeah I think it's probably simplest to just do the one message at a time thing (don't even have an option to turn it off). The new method should be spec compliant so if we just go with blocking until the callback completes should work. The main thing is to make sure the completion callback still runs in a new thread (so use an executor, etc).\r\n\r\nThis is still not going to be slow, it will be as fast as the normal sync API which is still quite fast, it just limits the concurrent sends until we can handle ordering. It ends up just being similar to sync but allows using the callback to handle which can be nice for some use cases.\r\n\r\nAs you said, we can just keep the existing API with current async behavior so users can retain that if they want multiple concurrent sends and a future update could handle ordering if we want to support multiple concurrent sends for the new API.","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2539155655/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2542000010","html_url":"https://github.com/apache/activemq/pull/1329#issuecomment-2542000010","issue_url":"https://api.github.com/repos/apache/activemq/issues/1329","id":2542000010,"node_id":"IC_kwDOAAMmM86Xg9eK","user":{"login":"mattrpav","id":512119,"node_id":"MDQ6VXNlcjUxMjExOQ==","avatar_url":"https://avatars.githubusercontent.com/u/512119?v=4","gravatar_id":"","url":"https://api.github.com/users/mattrpav","html_url":"https://github.com/mattrpav","followers_url":"https://api.github.com/users/mattrpav/followers","following_url":"https://api.github.com/users/mattrpav/following{/other_user}","gists_url":"https://api.github.com/users/mattrpav/gists{/gist_id}","starred_url":"https://api.github.com/users/mattrpav/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mattrpav/subscriptions","organizations_url":"https://api.github.com/users/mattrpav/orgs","repos_url":"https://api.github.com/users/mattrpav/repos","events_url":"https://api.github.com/users/mattrpav/events{/privacy}","received_events_url":"https://api.github.com/users/mattrpav/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-12-13T18:14:31Z","updated_at":"2024-12-13T18:20:07Z","author_association":"CONTRIBUTOR","body":"Local performance testing showed no degradation in performance\r\n\r\n64x producers sending in async to a single topic sent 1M messages ea in ~24s on a 2023 14\" Apple M3 Pro (2.6M messages/sec)","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2542000010/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2542092016","html_url":"https://github.com/apache/activemq/pull/1358#issuecomment-2542092016","issue_url":"https://api.github.com/repos/apache/activemq/issues/1358","id":2542092016,"node_id":"IC_kwDOAAMmM86XhT7w","user":{"login":"Nikita-Shupletsov","id":175163279,"node_id":"U_kgDOCnDHjw","avatar_url":"https://avatars.githubusercontent.com/u/175163279?v=4","gravatar_id":"","url":"https://api.github.com/users/Nikita-Shupletsov","html_url":"https://github.com/Nikita-Shupletsov","followers_url":"https://api.github.com/users/Nikita-Shupletsov/followers","following_url":"https://api.github.com/users/Nikita-Shupletsov/following{/other_user}","gists_url":"https://api.github.com/users/Nikita-Shupletsov/gists{/gist_id}","starred_url":"https://api.github.com/users/Nikita-Shupletsov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Nikita-Shupletsov/subscriptions","organizations_url":"https://api.github.com/users/Nikita-Shupletsov/orgs","repos_url":"https://api.github.com/users/Nikita-Shupletsov/repos","events_url":"https://api.github.com/users/Nikita-Shupletsov/events{/privacy}","received_events_url":"https://api.github.com/users/Nikita-Shupletsov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-12-13T19:16:13Z","updated_at":"2024-12-13T19:16:13Z","author_association":"NONE","body":"> Question @Nikita-Shupletsov, once the user fixed the issue with the configuration or their LDAP server, does the user need to restart the server? In another word, is this code part of the code path that get triggered everytime the broker performs AuthN/AuthZ?\r\n> \r\n> If that latter case is true, the activemq.log be flooded with error message. How do we make it less noisy?\r\n\r\nNo, they will not need to. afaik, that's the whole idea of this Cached Map is to be able to withstand connection failures. it will try to fetch data on every request until is succeeds","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2542092016/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2542271211","html_url":"https://github.com/apache/activemq/pull/1369#issuecomment-2542271211","issue_url":"https://api.github.com/repos/apache/activemq/issues/1369","id":2542271211,"node_id":"IC_kwDOAAMmM86Xh_rr","user":{"login":"mattrpav","id":512119,"node_id":"MDQ6VXNlcjUxMjExOQ==","avatar_url":"https://avatars.githubusercontent.com/u/512119?v=4","gravatar_id":"","url":"https://api.github.com/users/mattrpav","html_url":"https://github.com/mattrpav","followers_url":"https://api.github.com/users/mattrpav/followers","following_url":"https://api.github.com/users/mattrpav/following{/other_user}","gists_url":"https://api.github.com/users/mattrpav/gists{/gist_id}","starred_url":"https://api.github.com/users/mattrpav/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mattrpav/subscriptions","organizations_url":"https://api.github.com/users/mattrpav/orgs","repos_url":"https://api.github.com/users/mattrpav/repos","events_url":"https://api.github.com/users/mattrpav/events{/privacy}","received_events_url":"https://api.github.com/users/mattrpav/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-12-13T20:32:39Z","updated_at":"2024-12-13T20:32:39Z","author_association":"CONTRIBUTOR","body":"On the surface, this looks like it might be a couple of commits-- ws socket handling clean-up and then the limit added. \r\n\r\nTODO: Determine if this is done before or after the Jetty 12 update","reactions":{"url":"https://api.github.com/repos/apache/activemq/issues/comments/2542271211/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]