[{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/928250867","html_url":"https://github.com/apache/daffodil/pull/645#issuecomment-928250867","issue_url":"https://api.github.com/repos/apache/daffodil/issues/645","id":928250867,"node_id":"IC_kwDOBhBG1s43U_vz","user":{"login":"mbeckerle","id":1524099,"node_id":"MDQ6VXNlcjE1MjQwOTk=","avatar_url":"https://avatars.githubusercontent.com/u/1524099?v=4","gravatar_id":"","url":"https://api.github.com/users/mbeckerle","html_url":"https://github.com/mbeckerle","followers_url":"https://api.github.com/users/mbeckerle/followers","following_url":"https://api.github.com/users/mbeckerle/following{/other_user}","gists_url":"https://api.github.com/users/mbeckerle/gists{/gist_id}","starred_url":"https://api.github.com/users/mbeckerle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbeckerle/subscriptions","organizations_url":"https://api.github.com/users/mbeckerle/orgs","repos_url":"https://api.github.com/users/mbeckerle/repos","events_url":"https://api.github.com/users/mbeckerle/events{/privacy}","received_events_url":"https://api.github.com/users/mbeckerle/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-09-27T20:31:57Z","updated_at":"2021-09-27T20:31:57Z","author_association":"CONTRIBUTOR","body":"I actually believe the \"fix\" in this PR is wrong. The code was correct before. Just a little confusing.\r\nPState contains the changedVariablesStack, which must be maintained whenever variables are set or read or newInstances created.\r\n\r\nThe variableMap.readVariable method was doing a callback to PState to maintain this changedVariablesStack. That means all uses of readVariable, including from DPath VRef, were doing this maintenance.\r\n\r\nHowever, variableMap.setVariable does no such callback.\r\n\r\nInstead, code that is setting variables is supposed to call the PState.setVariable method. which does this changedVariablesStack maintenance.\r\n\r\nThe reality: There's more state to maintain having to do with variables than just the variableMap, so all manipulation of variables SHOULD go by way of PState/UState methods, and those should delegate things to the VariableMap object, and maintain other things like changedVariablesStack. \r\n\r\nSo the change so that nobody uses variableMap directly, and instead uses variables by way of PState/UState is the way to go, and the uses of variableMap directly need to go away, and the callback from variableMap to PState also should go away. \r\n","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/928250867/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/928282866","html_url":"https://github.com/apache/daffodil/pull/645#issuecomment-928282866","issue_url":"https://api.github.com/repos/apache/daffodil/issues/645","id":928282866,"node_id":"IC_kwDOBhBG1s43VHjy","user":{"login":"mbeckerle","id":1524099,"node_id":"MDQ6VXNlcjE1MjQwOTk=","avatar_url":"https://avatars.githubusercontent.com/u/1524099?v=4","gravatar_id":"","url":"https://api.github.com/users/mbeckerle","html_url":"https://github.com/mbeckerle","followers_url":"https://api.github.com/users/mbeckerle/followers","following_url":"https://api.github.com/users/mbeckerle/following{/other_user}","gists_url":"https://api.github.com/users/mbeckerle/gists{/gist_id}","starred_url":"https://api.github.com/users/mbeckerle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbeckerle/subscriptions","organizations_url":"https://api.github.com/users/mbeckerle/orgs","repos_url":"https://api.github.com/users/mbeckerle/repos","events_url":"https://api.github.com/users/mbeckerle/events{/privacy}","received_events_url":"https://api.github.com/users/mbeckerle/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-09-27T21:09:11Z","updated_at":"2021-09-27T21:09:11Z","author_association":"CONTRIBUTOR","body":"So at this point, the only thing which directly uses the VariableMap object is the debugger, and that's because it wants to display the state transitions of the variables. So variableMap can't be a private member of ParseOrUnparseState, but it's better isolated. ","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/928282866/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/929331431","html_url":"https://github.com/apache/daffodil/pull/646#issuecomment-929331431","issue_url":"https://api.github.com/repos/apache/daffodil/issues/646","id":929331431,"node_id":"IC_kwDOBhBG1s43ZHjn","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-09-28T15:20:06Z","updated_at":"2021-09-28T15:21:29Z","author_association":"MEMBER","body":"+1, does it make sense to add a label like \"deprecation\" or \"backwards compatibility\" to the Jira issue so we can easily search for this kinds of changes when building the release notes?","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/929331431/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/929548823","html_url":"https://github.com/apache/daffodil/pull/646#issuecomment-929548823","issue_url":"https://api.github.com/repos/apache/daffodil/issues/646","id":929548823,"node_id":"IC_kwDOBhBG1s43Z8oX","user":{"login":"mbeckerle","id":1524099,"node_id":"MDQ6VXNlcjE1MjQwOTk=","avatar_url":"https://avatars.githubusercontent.com/u/1524099?v=4","gravatar_id":"","url":"https://api.github.com/users/mbeckerle","html_url":"https://github.com/mbeckerle","followers_url":"https://api.github.com/users/mbeckerle/followers","following_url":"https://api.github.com/users/mbeckerle/following{/other_user}","gists_url":"https://api.github.com/users/mbeckerle/gists{/gist_id}","starred_url":"https://api.github.com/users/mbeckerle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbeckerle/subscriptions","organizations_url":"https://api.github.com/users/mbeckerle/orgs","repos_url":"https://api.github.com/users/mbeckerle/repos","events_url":"https://api.github.com/users/mbeckerle/events{/privacy}","received_events_url":"https://api.github.com/users/mbeckerle/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-09-28T19:14:16Z","updated_at":"2021-09-28T19:14:16Z","author_association":"CONTRIBUTOR","body":"> +1, does it make sense to add a label like \"deprecation\" or \"backwards compatibility\" to the Jira issue so we can easily search for this kinds of changes when building the release notes?\r\n\r\nDone. Added deprecation and backward-compatibility labels. ","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/929548823/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/932189880","html_url":"https://github.com/apache/daffodil/pull/649#issuecomment-932189880","issue_url":"https://api.github.com/repos/apache/daffodil/issues/649","id":932189880,"node_id":"IC_kwDOBhBG1s43kBa4","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-10-01T12:38:05Z","updated_at":"2021-10-01T12:39:00Z","author_association":"MEMBER","body":" +1\r\n   \r\n- [X] **Do all automated continuous integration checks pass?**\r\nYes\r\n- [X] **Is the update a patch, minor, or major update?**\r\nMinor update, changelog [here](https://github.com/FasterXML/jackson-core/blob/2.13/release-notes/VERSION-2.x). No changes seem to affect Daffodil\r\n- [X] **Is the license still compatible with ASF License Policy?**\r\nYes, still ALv2\r\n- [X] **Have any changes been made to LICENSE/NOTICE files that need to be incorporated?**\r\nNo changes\r\n- [X] **Have any transitive dependencies been added or changed?**\r\nNo changes","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/932189880/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/936757817","html_url":"https://github.com/apache/daffodil/pull/651#issuecomment-936757817","issue_url":"https://api.github.com/repos/apache/daffodil/issues/651","id":936757817,"node_id":"IC_kwDOBhBG1s431co5","user":{"login":"mbeckerle","id":1524099,"node_id":"MDQ6VXNlcjE1MjQwOTk=","avatar_url":"https://avatars.githubusercontent.com/u/1524099?v=4","gravatar_id":"","url":"https://api.github.com/users/mbeckerle","html_url":"https://github.com/mbeckerle","followers_url":"https://api.github.com/users/mbeckerle/followers","following_url":"https://api.github.com/users/mbeckerle/following{/other_user}","gists_url":"https://api.github.com/users/mbeckerle/gists{/gist_id}","starred_url":"https://api.github.com/users/mbeckerle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbeckerle/subscriptions","organizations_url":"https://api.github.com/users/mbeckerle/orgs","repos_url":"https://api.github.com/users/mbeckerle/repos","events_url":"https://api.github.com/users/mbeckerle/events{/privacy}","received_events_url":"https://api.github.com/users/mbeckerle/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-10-06T17:35:10Z","updated_at":"2021-10-06T17:35:10Z","author_association":"CONTRIBUTOR","body":"I have split DAFFODIL-1927 into two tickets. One is for ability to define layers in jars that are external to Daffodil.\r\nThe other is DAFFODIL-2567 which is about Java-API for layers, and dynamic service loading for these jars. \r\n\r\nThis PR does not include the latter. Only the former. ","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/936757817/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/940998942","html_url":"https://github.com/apache/daffodil/pull/651#issuecomment-940998942","issue_url":"https://api.github.com/repos/apache/daffodil/issues/651","id":940998942,"node_id":"IC_kwDOBhBG1s44FoEe","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-10-12T13:10:58Z","updated_at":"2021-10-12T13:10:58Z","author_association":"MEMBER","body":"There was a comment about the LICENSE file that I can't respond to now because it's \"outdated\". That's an annoying github feature, but with regards to removing passera from the META-INF/LICENSE file:\r\n\r\n> Why would we think runtime1-unparser doesn't need passera?\r\n>\r\n> Anyway for runtime1-layers I copied LICENSE and NOTICES from runtime1-unparser\r\n\r\nThe LICENSE file in META-INF directory is the license information specific to that jar and covers only what is in that jar. Even though the jar depends on passera, that doesn't change the license of the jar because nothing in it is passera. On the other hand, the META-INF/LICENSE for daffodil-lib does need to mention passera and other things, because that jar actually contains the compiled code of passera and other things.\r\n\r\nLICENSE files only need to cover what is distributed in that bundle. That's why our root LICENSE file include licenses of things in our source code, the daffodil-cli/bin.LICENSE file covers all that plus the licenses of all our dependencies (since dependencies end up in the distributed tar/zip/rpm), and most jar LICENSE files don't have anything extra.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/940998942/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/941004912","html_url":"https://github.com/apache/daffodil/pull/651#issuecomment-941004912","issue_url":"https://api.github.com/repos/apache/daffodil/issues/651","id":941004912,"node_id":"IC_kwDOBhBG1s44Fphw","user":{"login":"mbeckerle","id":1524099,"node_id":"MDQ6VXNlcjE1MjQwOTk=","avatar_url":"https://avatars.githubusercontent.com/u/1524099?v=4","gravatar_id":"","url":"https://api.github.com/users/mbeckerle","html_url":"https://github.com/mbeckerle","followers_url":"https://api.github.com/users/mbeckerle/followers","following_url":"https://api.github.com/users/mbeckerle/following{/other_user}","gists_url":"https://api.github.com/users/mbeckerle/gists{/gist_id}","starred_url":"https://api.github.com/users/mbeckerle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbeckerle/subscriptions","organizations_url":"https://api.github.com/users/mbeckerle/orgs","repos_url":"https://api.github.com/users/mbeckerle/repos","events_url":"https://api.github.com/users/mbeckerle/events{/privacy}","received_events_url":"https://api.github.com/users/mbeckerle/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-10-12T13:17:47Z","updated_at":"2021-10-12T13:17:47Z","author_association":"CONTRIBUTOR","body":"> There was a comment about the LICENSE file that I can't respond to now because it's \"outdated\". That's an annoying github feature, but with regards to removing passera from the META-INF/LICENSE file:\r\n> \r\n> > Why would we think runtime1-unparser doesn't need passera?\r\n> > Anyway for runtime1-layers I copied LICENSE and NOTICES from runtime1-unparser\r\n> \r\n> The LICENSE file in META-INF directory is the license information specific to that jar and covers only what is in that jar. Even though the jar depends on passera, that doesn't change the license of the jar because nothing in it is passera. On the other hand, the META-INF/LICENSE for daffodil-lib does need to mention passera and other things, because that jar actually contains the compiled code of passera and other things.\r\n> \r\n> LICENSE files only need to cover what is distributed in that bundle. That's why our root LICENSE file include licenses of things in our source code, the daffodil-cli/bin.LICENSE file covers all that plus the licenses of all our dependencies (since dependencies end up in the distributed tar/zip/rpm), and most jar LICENSE files don't have anything extra.\r\n\r\nSo this meta knowledge about what goes in LICENSES and NOTICES files of components is actually really useful. Is it written down anywhere? Perhaps we should create a wiki page about the LICENSES and NOTICES files maintenance?\r\n","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/941004912/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/941010331","html_url":"https://github.com/apache/daffodil/pull/651#issuecomment-941010331","issue_url":"https://api.github.com/repos/apache/daffodil/issues/651","id":941010331,"node_id":"IC_kwDOBhBG1s44Fq2b","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-10-12T13:24:15Z","updated_at":"2021-10-12T13:24:15Z","author_association":"MEMBER","body":"> So this meta knowledge about what goes in LICENSES and NOTICES files of components is actually really useful. Is it written down anywhere? Perhaps we should create a wiki page about the LICENSES and NOTICES files maintenance?\r\n\r\nI don't think this information is anywhere, not even really on Apache documentation. I've most just picked this all up during the many incubator votes. A wiki page would definitely be useful. I'll add a page that talks about all the different LICENSE/NOTICE files and what I believe should go in them.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/941010331/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/942683584","html_url":"https://github.com/apache/daffodil/pull/657#issuecomment-942683584","issue_url":"https://api.github.com/repos/apache/daffodil/issues/657","id":942683584,"node_id":"IC_kwDOBhBG1s44MDXA","user":{"login":"tuxji","id":5915561,"node_id":"MDQ6VXNlcjU5MTU1NjE=","avatar_url":"https://avatars.githubusercontent.com/u/5915561?v=4","gravatar_id":"","url":"https://api.github.com/users/tuxji","html_url":"https://github.com/tuxji","followers_url":"https://api.github.com/users/tuxji/followers","following_url":"https://api.github.com/users/tuxji/following{/other_user}","gists_url":"https://api.github.com/users/tuxji/gists{/gist_id}","starred_url":"https://api.github.com/users/tuxji/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tuxji/subscriptions","organizations_url":"https://api.github.com/users/tuxji/orgs","repos_url":"https://api.github.com/users/tuxji/repos","events_url":"https://api.github.com/users/tuxji/events{/privacy}","received_events_url":"https://api.github.com/users/tuxji/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-10-13T20:13:12Z","updated_at":"2021-10-13T20:13:12Z","author_association":"CONTRIBUTOR","body":"I've simplified and clarified the instructions in KEYS.  Please give another +1 if you like the final version better.  We have to verify our email address so we can revoke our keys later if necessary (unpatched or older GnuPG programs will not process updates from keys.openpgp.org for keys without verified email addresses (<https://keys.openpgp.org/about/faq#older-gnupg>).  Also, as I thought, keys.openpgp.org's privacy statement (<https://keys.openpgp.org/about/privacy>) says email addresses are not harvestable.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/942683584/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/943372641","html_url":"https://github.com/apache/daffodil/pull/659#issuecomment-943372641","issue_url":"https://api.github.com/repos/apache/daffodil/issues/659","id":943372641,"node_id":"IC_kwDOBhBG1s44Orlh","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-10-14T13:44:27Z","updated_at":"2021-10-14T13:44:27Z","author_association":"MEMBER","body":"The changes since jansi-2.3.4 all seem reasonable--mostly adding support for additional architectures and some cleanup:\r\n\r\nhttps://github.com/fusesource/jansi/compare/jansi-2.3.4...HEAD\r\n\r\nHowever, there is no tag for 2.4.0, there is never a change in the repo that sets the version to 2.4.0, and I can't find any mention of this release anywhere. The only evidence of this release is a new 2.4.0 jar showing up on maven central.\r\n\r\nIt's probably fine and maybe the author published without commit the 2.4.0 change/tag, but I wonder if we should hold until there's a tag or release somewhere, just to be on the safe side? There's definitely nothing critical since 2.3.4 that we need.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/943372641/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/943379746","html_url":"https://github.com/apache/daffodil/pull/659#issuecomment-943379746","issue_url":"https://api.github.com/repos/apache/daffodil/issues/659","id":943379746,"node_id":"IC_kwDOBhBG1s44OtUi","user":{"login":"tuxji","id":5915561,"node_id":"MDQ6VXNlcjU5MTU1NjE=","avatar_url":"https://avatars.githubusercontent.com/u/5915561?v=4","gravatar_id":"","url":"https://api.github.com/users/tuxji","html_url":"https://github.com/tuxji","followers_url":"https://api.github.com/users/tuxji/followers","following_url":"https://api.github.com/users/tuxji/following{/other_user}","gists_url":"https://api.github.com/users/tuxji/gists{/gist_id}","starred_url":"https://api.github.com/users/tuxji/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tuxji/subscriptions","organizations_url":"https://api.github.com/users/tuxji/orgs","repos_url":"https://api.github.com/users/tuxji/repos","events_url":"https://api.github.com/users/tuxji/events{/privacy}","received_events_url":"https://api.github.com/users/tuxji/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-10-14T13:52:49Z","updated_at":"2021-10-14T13:52:49Z","author_association":"CONTRIBUTOR","body":"I took a look too.  The git diff looks harmless enough, but I agree that the jansi maintainer not following the normal release process (no changelog, no tag) concerns me.  Let's skip this version (all we need to do is close the PR) and wait for the next version which should be more \"normal\".","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/943379746/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/944398369","html_url":"https://github.com/apache/daffodil/pull/660#issuecomment-944398369","issue_url":"https://api.github.com/repos/apache/daffodil/issues/660","id":944398369,"node_id":"IC_kwDOBhBG1s44SmAh","user":{"login":"mbeckerle","id":1524099,"node_id":"MDQ6VXNlcjE1MjQwOTk=","avatar_url":"https://avatars.githubusercontent.com/u/1524099?v=4","gravatar_id":"","url":"https://api.github.com/users/mbeckerle","html_url":"https://github.com/mbeckerle","followers_url":"https://api.github.com/users/mbeckerle/followers","following_url":"https://api.github.com/users/mbeckerle/following{/other_user}","gists_url":"https://api.github.com/users/mbeckerle/gists{/gist_id}","starred_url":"https://api.github.com/users/mbeckerle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbeckerle/subscriptions","organizations_url":"https://api.github.com/users/mbeckerle/orgs","repos_url":"https://api.github.com/users/mbeckerle/repos","events_url":"https://api.github.com/users/mbeckerle/events{/privacy}","received_events_url":"https://api.github.com/users/mbeckerle/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-10-15T15:35:48Z","updated_at":"2021-10-15T15:35:48Z","author_association":"CONTRIBUTOR","body":"Closing as I don't need an \"open\" PR to refer to this. ","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/944398369/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/945744641","html_url":"https://github.com/apache/daffodil/pull/659#issuecomment-945744641","issue_url":"https://api.github.com/repos/apache/daffodil/issues/659","id":945744641,"node_id":"IC_kwDOBhBG1s44XusB","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-10-18T13:03:59Z","updated_at":"2021-10-18T13:03:59Z","author_association":"MEMBER","body":"Looks like they pushed the missing commits/tags. Seems reasonable to merge now.\r\n\r\n+1\r\n\r\n- [X] **Do all automated continuous integration checks pass?**\r\nYes\r\n- [X] **Is the update a patch, minor, or major update?**\r\nMinor update, support for more architectures and cleanup\r\n- [X] **Is the license still compatible with ASF License Policy?**\r\nYes, still ALv2\r\n- [X] **Have any changes been made to LICENSE/NOTICE files that need to be incorporated?**\r\nNo changes\r\n- [X] **Have any transitive dependencies been added or changed?**\r\nNo changes","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/945744641/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/946916165","html_url":"https://github.com/apache/daffodil/pull/664#issuecomment-946916165","issue_url":"https://api.github.com/repos/apache/daffodil/issues/664","id":946916165,"node_id":"IC_kwDOBhBG1s44cMtF","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-10-19T16:54:58Z","updated_at":"2021-10-19T16:54:58Z","author_association":"MEMBER","body":"+1\r\n\r\n- [X] **Do all automated continuous integration checks pass?**\r\nYes\r\n- [X] **Is the update a patch, minor, or major update?**\r\nMinor update, numerous bugs fixed, mentions support for jansi 2.4.0 which we just upgraded. And a quick test with Daffodil debugger had no issues. \r\n- [X] **Is the license still compatible with ASF License Policy?**\r\nYes, still BSD-3\r\n- [X] **Have any changes been made to LICENSE/NOTICE files that need to be incorporated?**\r\nNo changes to LICENSE, no NOTICE file\r\n- [X] **Have any transitive dependencies been added or changed?**\r\nNo changes","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/946916165/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/947699748","html_url":"https://github.com/apache/daffodil/pull/654#issuecomment-947699748","issue_url":"https://api.github.com/repos/apache/daffodil/issues/654","id":947699748,"node_id":"IC_kwDOBhBG1s44fMAk","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-10-20T14:03:39Z","updated_at":"2021-10-20T14:03:39Z","author_association":"MEMBER","body":"Sorry, I never addressed this comment:\r\n\r\n> The new test cases (complexIncludesNamespaces_01 and complexIncludesNamespaces_02) don't have any comments. I don't quite understand what they're supposed to demonstrate. Are they supposed to demonstrate that the SAX outputter no longer adds an unnecessary (that is, redundant) xmlns attribute, e.g., <raw xmlns:tns=\"urn:redundant-namespace\">1</raw>?\r\n\r\nYep, those schemas are heavily minimized/anonyized version of a much more complicated schema with lots of complex includes and namespace mappings. It's kindof a worse case of someone not following what we now know to be best practices when defining xml namespaces. This complexity, and how we output prefix mappings in SAX, led to an edge case where we added redundant namespace mappings, as you mention. Normally this wouldn't matter since they are redundant, but it meant that SAX infosets and non-SAX infosets weren't exactly the same, and the TDML runner currently enforces that, which caused a failure.\r\n\r\nI'll add a comment to the tdml file as Mike suggests to clarify things.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/947699748/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/951338877","html_url":"https://github.com/apache/daffodil/pull/667#issuecomment-951338877","issue_url":"https://api.github.com/repos/apache/daffodil/issues/667","id":951338877,"node_id":"IC_kwDOBhBG1s44tEd9","user":{"login":"mbeckerle","id":1524099,"node_id":"MDQ6VXNlcjE1MjQwOTk=","avatar_url":"https://avatars.githubusercontent.com/u/1524099?v=4","gravatar_id":"","url":"https://api.github.com/users/mbeckerle","html_url":"https://github.com/mbeckerle","followers_url":"https://api.github.com/users/mbeckerle/followers","following_url":"https://api.github.com/users/mbeckerle/following{/other_user}","gists_url":"https://api.github.com/users/mbeckerle/gists{/gist_id}","starred_url":"https://api.github.com/users/mbeckerle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbeckerle/subscriptions","organizations_url":"https://api.github.com/users/mbeckerle/orgs","repos_url":"https://api.github.com/users/mbeckerle/repos","events_url":"https://api.github.com/users/mbeckerle/events{/privacy}","received_events_url":"https://api.github.com/users/mbeckerle/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-10-25T21:16:57Z","updated_at":"2021-10-25T21:16:57Z","author_association":"CONTRIBUTOR","body":"Verified there are no occurrences of \"ByType\" anymore. ","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/951338877/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/952069463","html_url":"https://github.com/apache/daffodil/pull/665#issuecomment-952069463","issue_url":"https://api.github.com/repos/apache/daffodil/issues/665","id":952069463,"node_id":"IC_kwDOBhBG1s44v21X","user":{"login":"tuxji","id":5915561,"node_id":"MDQ6VXNlcjU5MTU1NjE=","avatar_url":"https://avatars.githubusercontent.com/u/5915561?v=4","gravatar_id":"","url":"https://api.github.com/users/tuxji","html_url":"https://github.com/tuxji","followers_url":"https://api.github.com/users/tuxji/followers","following_url":"https://api.github.com/users/tuxji/following{/other_user}","gists_url":"https://api.github.com/users/tuxji/gists{/gist_id}","starred_url":"https://api.github.com/users/tuxji/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tuxji/subscriptions","organizations_url":"https://api.github.com/users/tuxji/orgs","repos_url":"https://api.github.com/users/tuxji/repos","events_url":"https://api.github.com/users/tuxji/events{/privacy}","received_events_url":"https://api.github.com/users/tuxji/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-10-26T15:44:13Z","updated_at":"2021-10-26T15:44:13Z","author_association":"CONTRIBUTOR","body":"I found the previous PR where we discussed using `-std`: [last comment](https://github.com/apache/daffodil/pull/553#discussion_r626592946).  In short, `-pedantic -std=gnu99` would accept the original for loop as-is (even on CentOS 7 since it came out in 2014).  However, I said some C compilers might not understand `-pedantic -std=gnu99` so we should play it conservative with build.sbt's compiler flags, reserving the additional `-Wall -Wextra -pedantic -std=gnu99` flags for c/Makefile.  I didn't see any warning or error messages when compiling the original for loop with c/Makefile and our continuous integration C compilers are modern enough to make gnu99 their default level, but CentOS 7's compiler was just old enough that its default level was even earlier than gnu99.  If we want to play it a little less conservative, we probably could add `-std=gnu99` to both build.sbt and CodeGenerator.scala but I'll content myself with fixing the for loop instead.  If there's enough request on this PR, I can add the flag in a future runtime2 PR.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/952069463/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/954676908","html_url":"https://github.com/apache/daffodil/pull/669#issuecomment-954676908","issue_url":"https://api.github.com/repos/apache/daffodil/issues/669","id":954676908,"node_id":"IC_kwDOBhBG1s445zas","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-10-29T11:45:12Z","updated_at":"2021-10-29T11:45:12Z","author_association":"MEMBER","body":"+1","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/954676908/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/957399394","html_url":"https://github.com/apache/daffodil/pull/670#issuecomment-957399394","issue_url":"https://api.github.com/repos/apache/daffodil/issues/670","id":957399394,"node_id":"IC_kwDOBhBG1s45EMFi","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-11-02T12:05:00Z","updated_at":"2021-11-02T12:05:00Z","author_association":"MEMBER","body":"Unfortunately, much more than a version bump is needed to get 2.13.x working with Daffodil.\r\n\r\nSee [DAFFODIL-2152](https://issues.apache.org/jira/browse/DAFFODIL-2152) and stalled work in progress PR #246\r\n\r\nClosing.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/957399394/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/961299783","html_url":"https://github.com/apache/daffodil/pull/675#issuecomment-961299783","issue_url":"https://api.github.com/repos/apache/daffodil/issues/675","id":961299783,"node_id":"IC_kwDOBhBG1s45TEVH","user":{"login":"mbeckerle","id":1524099,"node_id":"MDQ6VXNlcjE1MjQwOTk=","avatar_url":"https://avatars.githubusercontent.com/u/1524099?v=4","gravatar_id":"","url":"https://api.github.com/users/mbeckerle","html_url":"https://github.com/mbeckerle","followers_url":"https://api.github.com/users/mbeckerle/followers","following_url":"https://api.github.com/users/mbeckerle/following{/other_user}","gists_url":"https://api.github.com/users/mbeckerle/gists{/gist_id}","starred_url":"https://api.github.com/users/mbeckerle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbeckerle/subscriptions","organizations_url":"https://api.github.com/users/mbeckerle/orgs","repos_url":"https://api.github.com/users/mbeckerle/repos","events_url":"https://api.github.com/users/mbeckerle/events{/privacy}","received_events_url":"https://api.github.com/users/mbeckerle/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-11-04T18:16:43Z","updated_at":"2021-11-04T18:16:43Z","author_association":"CONTRIBUTOR","body":"I made a new JIRA ticket about the 100ms test timeout failure. DAFFODIL-2582","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/961299783/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/963111712","html_url":"https://github.com/apache/daffodil/pull/677#issuecomment-963111712","issue_url":"https://api.github.com/repos/apache/daffodil/issues/677","id":963111712,"node_id":"IC_kwDOBhBG1s45Z-sg","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-11-08T12:40:27Z","updated_at":"2021-11-08T12:40:27Z","author_association":"MEMBER","body":"+1","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/963111712/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/963521595","html_url":"https://github.com/apache/daffodil/pull/679#issuecomment-963521595","issue_url":"https://api.github.com/repos/apache/daffodil/issues/679","id":963521595,"node_id":"IC_kwDOBhBG1s45biw7","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-11-08T19:58:50Z","updated_at":"2021-11-08T19:58:50Z","author_association":"MEMBER","body":"I tried building the release candidate with this update to F35, an it failed to build the MSI. I then tried with F34 and it failed the same way. I've opened [DAFFODIL-2584](https://issues.apache.org/jira/browse/DAFFODIL-2584)","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/963521595/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/964232997","html_url":"https://github.com/apache/daffodil/pull/679#issuecomment-964232997","issue_url":"https://api.github.com/repos/apache/daffodil/issues/679","id":964232997,"node_id":"IC_kwDOBhBG1s45eQcl","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-11-09T15:01:38Z","updated_at":"2021-11-09T15:01:38Z","author_association":"MEMBER","body":"I've confirmed that F35 has no issues with the fixes in PR #680.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/964232997/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/964290796","html_url":"https://github.com/apache/daffodil/pull/679#issuecomment-964290796","issue_url":"https://api.github.com/repos/apache/daffodil/issues/679","id":964290796,"node_id":"IC_kwDOBhBG1s45eejs","user":{"login":"tuxji","id":5915561,"node_id":"MDQ6VXNlcjU5MTU1NjE=","avatar_url":"https://avatars.githubusercontent.com/u/5915561?v=4","gravatar_id":"","url":"https://api.github.com/users/tuxji","html_url":"https://github.com/tuxji","followers_url":"https://api.github.com/users/tuxji/followers","following_url":"https://api.github.com/users/tuxji/following{/other_user}","gists_url":"https://api.github.com/users/tuxji/gists{/gist_id}","starred_url":"https://api.github.com/users/tuxji/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tuxji/subscriptions","organizations_url":"https://api.github.com/users/tuxji/orgs","repos_url":"https://api.github.com/users/tuxji/repos","events_url":"https://api.github.com/users/tuxji/events{/privacy}","received_events_url":"https://api.github.com/users/tuxji/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-11-09T16:01:21Z","updated_at":"2021-11-09T16:01:21Z","author_association":"CONTRIBUTOR","body":"OK, I'll wait for your formal +1 and second it (when you're ready).","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/964290796/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/965217149","html_url":"https://github.com/apache/daffodil/pull/678#issuecomment-965217149","issue_url":"https://api.github.com/repos/apache/daffodil/issues/678","id":965217149,"node_id":"IC_kwDOBhBG1s45iAt9","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-11-10T14:03:49Z","updated_at":"2021-11-10T14:03:49Z","author_association":"MEMBER","body":"All looks good :+1:  please squash into a single commit and this can be merged","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/965217149/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/967322823","html_url":"https://github.com/apache/daffodil/pull/674#issuecomment-967322823","issue_url":"https://api.github.com/repos/apache/daffodil/issues/674","id":967322823,"node_id":"IC_kwDOBhBG1s45qCzH","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-11-12T18:21:38Z","updated_at":"2021-11-12T18:21:38Z","author_association":"MEMBER","body":"I dug into this issue a bit and think I've track down the cause, still not sure of the best fix. Here's a pretty minimal schema that reproduces the issue:\r\n\r\n```xml\r\n<xs:schema\r\n  xmlns:dfdl=\"http://www.ogf.org/dfdl/dfdl-1.0/\"\r\n  xmlns:xs=\"http://www.w3.org/2001/XMLSchema\">\r\n\r\n  <xs:include schemaLocation=\"org/apache/daffodil/xsd/DFDLGeneralFormat.dfdl.xsd\" />\r\n\r\n  <xs:annotation>\r\n    <xs:appinfo source=\"http://www.ogf.org/dfdl/\">\r\n      <dfdl:defineVariable defaultValue=\"x\" name=\"var1\" type=\"xs:string\"/> \r\n      <dfdl:format ref=\"GeneralFormat\" />\r\n    </xs:appinfo>\r\n  </xs:annotation>\r\n  \r\n  <xs:element name=\"root\">\r\n    <xs:complexType>\r\n      <xs:sequence>\r\n        <xs:element name=\"opt\" minOccurs=\"0\">\r\n          <xs:complexType>\r\n            <xs:sequence>\r\n              <xs:sequence>\r\n                <xs:annotation>\r\n                  <xs:appinfo source=\"http://www.ogf.org/dfdl/\">\r\n                    <dfdl:assert test=\"{ $var1 eq 'x' }\" />\r\n                  </xs:appinfo>\r\n                </xs:annotation>\r\n              </xs:sequence>\r\n              <xs:sequence>\r\n                <xs:annotation>\r\n                  <xs:appinfo source=\"http://www.ogf.org/dfdl/\">\r\n                    <dfdl:assert test=\"{ $var1 eq 'y' }\" />\r\n                  </xs:appinfo>\r\n                </xs:annotation>\r\n              </xs:sequence>\r\n            </xs:sequence>\r\n          </xs:complexType>\r\n        </xs:element>\r\n      </xs:sequence>\r\n    </xs:complexType>\r\n  </xs:element>\r\n  \r\n</xs:schema>\r\n```\r\nSo we define a variable with a default value, in this case `x`. We have an optional element which creates a point of uncertainty. Within this PoU we read the variable twice, once in the first assert (which passes) and again in the second assert (which fails). The second assert fails and so we need to back track to the PoU and undo the changes to the variable state.\r\n\r\nHow we undo this state is broken. For our variables, the variables themselves keep track of the current state and the prior state. When we need to reset back to the PoU, sometimes we use this prior state, but sometimes we just make assumptions about what the prior state should have been. These assumptions aren't always correct. This test finds a case where this isn't correct.\r\n\r\nWhat happens here is we read a variable twice, so we mark it as needing to be reset to the prior states twice to get back to the correct state. But the second read didn't actually change the state. So when we reset once we reset to VariableDefined. And when we reset again we hit this case. Note that in some cases we do actually need to reset twice, so it's not just a matter of ignoring duplicate resets.\r\n\r\nI think the core issue here is that variables are trying to keep track of their own state, and only really keep track of their prior state, and then we make assumptions from there. I think the *right* fix is probably to handle variables like we do other state and PoU's and just take a snapshot. When we reset back to the PoU we just restore that snapshot. Unfortunately, variables are a bit more complicated and are mutable, so taking a snapshot may add some complication and overhead.\r\n\r\nMaybe another option is instead of PState snapshotting the entire variable map, we instead just snapshot the state of each individual value prior to the change. So it's a sort of copy-on-write behavior. Then when we reset back to the PoU, we just need to reset back to the state of things that were changed. That might be a better approach with less overhead.\r\n\r\nNote that both EDIFACT and NACHA hit this double-read issue but in different ways. NACHA reads an `encoding` variable multiple times in a PoU, and EDIFACT reads variables related to escape schemas multiple times in a PoU.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/967322823/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/967395784","html_url":"https://github.com/apache/daffodil/pull/674#issuecomment-967395784","issue_url":"https://api.github.com/repos/apache/daffodil/issues/674","id":967395784,"node_id":"IC_kwDOBhBG1s45qUnI","user":{"login":"tuxji","id":5915561,"node_id":"MDQ6VXNlcjU5MTU1NjE=","avatar_url":"https://avatars.githubusercontent.com/u/5915561?v=4","gravatar_id":"","url":"https://api.github.com/users/tuxji","html_url":"https://github.com/tuxji","followers_url":"https://api.github.com/users/tuxji/followers","following_url":"https://api.github.com/users/tuxji/following{/other_user}","gists_url":"https://api.github.com/users/tuxji/gists{/gist_id}","starred_url":"https://api.github.com/users/tuxji/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tuxji/subscriptions","organizations_url":"https://api.github.com/users/tuxji/orgs","repos_url":"https://api.github.com/users/tuxji/repos","events_url":"https://api.github.com/users/tuxji/events{/privacy}","received_events_url":"https://api.github.com/users/tuxji/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-11-12T19:34:15Z","updated_at":"2021-11-12T19:34:15Z","author_association":"CONTRIBUTOR","body":"Some questions for clarification:\r\n\r\n1.\tWhat is the pitfall of just taking a snapshot of variables’ values like other state and restoring the snapshot when resetting back to the PoU?  A snapshot copies variables’ values at a certain point in time and restoring the snapshot resets variables back to their snapshotted values.  What does a variable’s mutability have to do with that, that is, why would snapshotting variables be more complicated than snapshotting other state?  I do understand the overhead of copying all variables’ values in every snapshot and resetting them (likely back to the same values) when restoring snapshots. \r\n2.\tAdding copy-on-write behavior to variables sounds like an attempt to optimize away some of the overhead on the assumption that variables change values infrequently.  Do you have any range of numbers (even ballpark guesses) for how many variables might exist during a parse (from zero to 20?) and how many times variables really change values during a parse (from zero to 1000 times)?\r\n\r\nMy suggestion is to replace the broken code (which makes assumption) with simple code that is obviously correct in behavior while measuring performance before and after.  When you are satisfied the code works correctly, then you can look for ways to use copy-on-write, caches, etc., to speed up performance.\r\n","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/967395784/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/967454410","html_url":"https://github.com/apache/daffodil/pull/674#issuecomment-967454410","issue_url":"https://api.github.com/repos/apache/daffodil/issues/674","id":967454410,"node_id":"IC_kwDOBhBG1s45qi7K","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-11-12T20:06:19Z","updated_at":"2021-11-12T20:06:19Z","author_association":"MEMBER","body":"1. I think its really just about potential overhead. Variables really don't change all that often, and so copying the entire variable state every time we enter a point of uncertainty might have some noticeable overhead. I'm not sure if that's why we have this prior state stuff or not, but I would guess that the reason for being different than the rest of the PoU stuff.\r\n\r\n2. Most schemas don't define variables at all, but there are four predefined variables that will always exist: [7.7.1.2 Predefined Variabls](https://daffodil.apache.org/docs/dfdl/#_Toc349042676). So there is a minimum of four variables. Though I imagine max used is still fairly small, probably in the range of a dozen or so. So a fully copy every PoU might not be terrible. That said, we recently added `newVarialbeInstance`, which makes variables much more useful--I think I've already seen in increase in variables since this was added. That said, I'd gust most variables change pretty rarely. They're set once, read a few times, and then that's it. But that's just a guess.\r\n\r\nI've actually already implemented the copy-on-write approach, we were kindof already doing something similar, it was just a matter change storeing copies in separately from the variable instances. Though I am interested if there is a performance benefit. It would be much simpler to just copy the whole thing, and it shouldn't be too much effort to change it to the simpler copy-everything-on-PoU and see the difference.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/967454410/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/969063293","html_url":"https://github.com/apache/daffodil/pull/674#issuecomment-969063293","issue_url":"https://api.github.com/repos/apache/daffodil/issues/674","id":969063293,"node_id":"IC_kwDOBhBG1s45wrt9","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-11-15T16:07:36Z","updated_at":"2021-11-15T16:07:36Z","author_association":"MEMBER","body":"I did some testing on three different approaches with the PCAP schema, which I think is good representation of fairly complex schema with a decent amount of PoUs and some variables stuff. Note that this version does not use any of the layering stuff, which does rely on variables quite a bit more.\r\n\r\nThe three approaches were:\r\n1. Deep copy the variable map every time we enter a PoU\r\n2. Deep copy the variable map the first time a variable is modified inside a PoU\r\n3. Copy instance information the first time a variable instance is modified inside  PoU\r\n\r\nEach one is a bit more complex than the previous. The first one is simple to implement, but potentially adds a lot of overhead. The second one is a bit more complex, but only has overhead if a variable is modified. But if the variable map grows large, the deep copy might be noticable. The last one is yet again more complex, but minimizes copying if there are lots of variables or new variable instances.\r\n\r\nThe numbers below are for parsing 20,000 PCAP files. The null infoset outputter was used to avoid the overhead of writing the infoset.\r\n\r\nThe three stats gathered are total time (smaller is better) and maximum and average rate in files/second (larger is better). The numbers are also compared against the current 3.1.0 release, with percent change in parenthesis.\r\n\r\n|                        |3.1.0    |Deep Copy Every PoU|Deep Copy On Write|Copy Instance On Write|\r\n|:---                    | ---:    | ---:              | ---:             | ---:                 |\r\n|Total time (seconds)     |39.97    |41.42 (3.62%)      |36.59 (-8.45%)    |36.55 (-8.55%)        |\r\n|Max rate (files/second) |637.72   |570.15 -10.60%)    |628.87 (-1.39%)   |639.01 (0.20%)        |\r\n|Avg rage (files/second) |500.40   |483.79 (-3.32%)    |546.65 (9.24%)    |547.21 (9.35%)        |\r\n\r\nSo deep copy on write and copy instance on write are virtually the same, with maybe a slight advantage to the copy instance on write, but the differences could easily be in the noise of JVM. Deep copying every PoU is definitely a bad idea.\r\n\r\nAlso, note that I think copy on write's are faster than 3.1.0 because we currently allocate an empty `Map` every time we enter a PoU just in case we have to do variable tracking stuff. In the copy on write changes, it only creates that `Map` if variable change. Creating an Empty map can be expensive, if if it's never used.\r\n\r\nSo I think this is a clear win for the copy-on-write stuff. Whether or not we add extra complexity to handle per-instance copy on write or entire map copy-on-write doesn't seem to matter, at least not with this format. I think if a schema had lots of variables or lots of nested new variable instances, then maybe the variable map could grow pretty big and make the deep copy expensive, but I'm not sure how likely that is.\r\n\r\nI think I'm leaning towards the deep copy on write. It's definitely simpler than the copy instance on write, and seems to have comparable performance. ","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/969063293/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/971976115","html_url":"https://github.com/apache/daffodil/pull/681#issuecomment-971976115","issue_url":"https://api.github.com/repos/apache/daffodil/issues/681","id":971976115,"node_id":"IC_kwDOBhBG1s457y2z","user":{"login":"tuxji","id":5915561,"node_id":"MDQ6VXNlcjU5MTU1NjE=","avatar_url":"https://avatars.githubusercontent.com/u/5915561?v=4","gravatar_id":"","url":"https://api.github.com/users/tuxji","html_url":"https://github.com/tuxji","followers_url":"https://api.github.com/users/tuxji/followers","following_url":"https://api.github.com/users/tuxji/following{/other_user}","gists_url":"https://api.github.com/users/tuxji/gists{/gist_id}","starred_url":"https://api.github.com/users/tuxji/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tuxji/subscriptions","organizations_url":"https://api.github.com/users/tuxji/orgs","repos_url":"https://api.github.com/users/tuxji/repos","events_url":"https://api.github.com/users/tuxji/events{/privacy}","received_events_url":"https://api.github.com/users/tuxji/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-11-17T20:35:35Z","updated_at":"2021-11-17T20:35:35Z","author_association":"CONTRIBUTOR","body":"Latest push should fix failure running test_updateGeneratedCodeExamples in GitHubs Actions because test_updateGeneratedCodeExamples was previously run from the IDE, not from sbt, and the example generated_code files got their daffodil_program_version set to \"null null\" instead of \"daffodil-runtime2 3.2.0-SNAPSHOT\".  The IDE run tests directly from classes, not from jars, which results in these two lines in CodeGeneratorState.generateCodeFile producing \"null\":\r\n\r\n```\r\n    val program = this.getClass.getPackage.getImplementationTitle\r\n    val version = this.getClass.getPackage.getImplementationVersion\r\n\r\n         const char *daffodil_program_version = \"$program $version\";\r\n```\r\n\r\nIf anyone knows how to ensure these two lines produce the same output no matter whether code contributors run \"sbt test\" or run test_updateGeneratedCodeExamples from their IDE, then that would make test_updateGeneratedCodeExamples more robust.  Any ideas?\r\n","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/971976115/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/972915240","html_url":"https://github.com/apache/daffodil/pull/681#issuecomment-972915240","issue_url":"https://api.github.com/repos/apache/daffodil/issues/681","id":972915240,"node_id":"IC_kwDOBhBG1s45_YIo","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-11-18T14:27:19Z","updated_at":"2021-11-22T19:31:03Z","author_association":"MEMBER","body":"Regarding the version issue, I'm not sure of a way around that, but I'm not too familar with IDE's. Might be some IDE setting.\r\n\r\nI was curious to see if modifying build.sbt to add a new `sbt genExamples` would be complicated or messy, and I think it actually turned out not too bad:\r\n\r\n```scala\r\nlazy val genExamples = taskKey[Unit](\"Generate runtime2 example files\")\r\n\r\nlazy val daffodil = project.in(file(\".\"))...\r\n                               .settings(..., genExamplesSettings)\r\n\r\n...\r\n\r\nlazy val genExamplesSettings = Seq(\r\n  Compile / genExamples := {\r\n    val tests = Seq(\r\n      \"ex_nums.dfdl.xsd\" -> \"ex_nums\",\r\n      \"nested.dfdl.xsd\" -> \"NestedUnion\",\r\n    )\r\n\r\n    val rootDir = (runtime2 / Test / resourceDirectory).value / \"org\" / \"apache\" / \"daffodil\" / \"runtime2\"\r\n    val cp = (cli / Runtime / dependencyClasspath).value\r\n    val stream = streams.value\r\n    val mainClass = \"org.apache.daffodil.Main\"\r\n    val forkOpts = ForkOptions()\r\n                   .withBootJars(cp.files.toVector)\r\n    tests.foreach { test =>\r\n      IO.withTemporaryDirectory { tmpDir =>\r\n        val args = Seq(mainClass, \"generate\", \"c\", \"-s\", (rootDir / test._1).toString, tmpDir.toString)\r\n        val ret = Fork.java(forkOpts, args)\r\n        if (ret != 0) {\r\n          stream.log.error(s\"failed to generate example: ${test._1}\")\r\n        }\r\n        val srcDir = tmpDir / \"c\" / \"libruntime\"\r\n        val tgtDir = rootDir / \"examples\" / test._2\r\n        IO.copyFile(srcDir / \"generated_code.c\", tgtDir / \"generated_code.c\")\r\n        IO.copyFile(srcDir / \"generated_code.h\", tgtDir / \"generated_code.h\")\r\n      }\r\n    }\r\n  },\r\n)\r\n```\r\n\r\nThis depends on the Daffodil jars being built, and then fors java with the correct arguments to the run the CLI C generator to generate code to a temp directory and copy the generated files to the example directory.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/972915240/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/973196593","html_url":"https://github.com/apache/daffodil/pull/683#issuecomment-973196593","issue_url":"https://api.github.com/repos/apache/daffodil/issues/683","id":973196593,"node_id":"IC_kwDOBhBG1s46Ac0x","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-11-18T19:37:57Z","updated_at":"2021-11-18T19:37:57Z","author_association":"MEMBER","body":"Good question. I questions that might help figure out when to drop support?\r\n\r\n* Is Java 8 supported?\r\n\r\nDepending on which distro of Java you're using, LTS support ranges from 2026 to 2030, so it's going be be supported for a while still. Once LTS is over, we certainly don't need to support it, but I imagine we'll drop support before that.\r\n\r\n* Is there a maintenance burden to supporting Java 8?\r\n\r\nI don't personally think so, since it's all automated with GitHub actions. I can't recall a time where something failed on Java 8 and so we had to change how we did something\r\n\r\n* Are there benefits to requiring Java 11+?\r\n\r\nI'm not familiar enough with Java 11+ to say one way or another, but being Scala based I imagine we benefit less than Java projects might. I know back when we supported Java 7 there were some Java 8 only classes we needed (e.g. java.util.Base64), which in part led to dropping Java7 support, but I don't know of any Java 11+ classes or features that we need/use. \r\n \r\n* Do we exclude anyone by dropping Java 8?\r\n\r\nI'm not sure on this either. I do know of systems that are stuck on RHEL7, but I believe Java 11 is available on those systems. I suspect we don't exclude anyone, but I'm not really sure.\r\n\r\n\r\nI guess to me, I'd rather err on the side of caution and continue to support Java 8, at least until it becomes a hassle to support or there's some really nice feature that we need.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/973196593/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/974080646","html_url":"https://github.com/apache/daffodil/pull/674#issuecomment-974080646","issue_url":"https://api.github.com/repos/apache/daffodil/issues/674","id":974080646,"node_id":"IC_kwDOBhBG1s46D0qG","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-11-19T13:38:19Z","updated_at":"2021-11-19T13:38:19Z","author_association":"MEMBER","body":"Fixed by PR #682, closing this PR","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/974080646/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/975980179","html_url":"https://github.com/apache/daffodil/pull/681#issuecomment-975980179","issue_url":"https://api.github.com/repos/apache/daffodil/issues/681","id":975980179,"node_id":"IC_kwDOBhBG1s46LEaT","user":{"login":"tuxji","id":5915561,"node_id":"MDQ6VXNlcjU5MTU1NjE=","avatar_url":"https://avatars.githubusercontent.com/u/5915561?v=4","gravatar_id":"","url":"https://api.github.com/users/tuxji","html_url":"https://github.com/tuxji","followers_url":"https://api.github.com/users/tuxji/followers","following_url":"https://api.github.com/users/tuxji/following{/other_user}","gists_url":"https://api.github.com/users/tuxji/gists{/gist_id}","starred_url":"https://api.github.com/users/tuxji/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tuxji/subscriptions","organizations_url":"https://api.github.com/users/tuxji/orgs","repos_url":"https://api.github.com/users/tuxji/repos","events_url":"https://api.github.com/users/tuxji/events{/privacy}","received_events_url":"https://api.github.com/users/tuxji/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-11-22T22:40:15Z","updated_at":"2021-11-22T22:40:15Z","author_association":"CONTRIBUTOR","body":"Almost there now.  Still need to make two more changes:\r\n\r\n1. Make \"sbt compile\" call genExamples automatically, otherwise we\r\nhave to type genExamples at sbt prompt\r\n\r\n2. Add log4j-core to genExamples' classpath so we don't get \"ERROR\r\nStatusLogger Log4j2 could not find a logging implementation. Please\r\nadd log4j-core to the classpath. Using SimpleLogger to log to the\r\nconsole...\"\r\n\r\nSteve, how can we modify build.sbt to do 1) and 2)?","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/975980179/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/976461723","html_url":"https://github.com/apache/daffodil/pull/681#issuecomment-976461723","issue_url":"https://api.github.com/repos/apache/daffodil/issues/681","id":976461723,"node_id":"IC_kwDOBhBG1s46M5-b","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-11-23T12:25:21Z","updated_at":"2021-11-23T12:25:21Z","author_association":"MEMBER","body":"> Even better, let's stop comparing the old example files to the new example files and just update them unconditionally during \"sbt compile\" like we update all the other automatically generated files.\r\n\r\nEven if we autocompile, it still doesn't guarantee that those files are committed. Devs still need to `git add` those files. If they use `git add .` or something similar that will happen, but it's dev workflow dependent. I personally use `git add -p` or manually add files I know I've modified--I don't think it would even cross my mind to commit changes I didn't personally make if I was new to this. Since it's still possible that a PR is made without actually updating these files depending on a dev's workflow, I'd prefer that we still have a test somewhere, even if we unconditionally rebuild these when compiling. A one line github action could do this.\r\n\r\n> Make \"sbt compile\" call genExamples automatically, otherwise we have to type genExamples at sbt prompt\r\n\r\nThis is fine with me. Note that this is a bit different than the existing auto generators. Ideally this would be a `sourceGenerator` or a `resourceGenerator`. But the output of a `sourceGenerator` I think needs to be compilable Scala or Java. And `resourceGenerators` aren't run with sbt compile, they are run some other time during the packaging prcoess. So things are a bit different.\r\n\r\nHowever, things get a bit tricky. We can still trigger a task to run during compilation without using a generator, but we have to be careful about task dependency cycles. The way the genExample needs to work is it essentially just forks a java process and executes the CLI with the right arguments. But this task depends on the CLI (and all of its dependencies being compiled), so this task really can't live in the CLI or any of its dependent subprojects (e.g. `daffodil-runtime2` or the root `daffodil` project), or we'll get circularity issues. That probably also means that what this task generates probably shouldn't be in any of those projects either--even if it works, generating a file inside another subproject feels dangerous and might confuse sbt, or create subtle issues.\r\n\r\nSo, what if we moved the runtime2 generated example files into the tutorials subproject? The genExamples task would also live in the `tutorials` project, and then the example files are just resources that get generated and committed in the tutorials subproject? \r\n\r\n> Add log4j-core to genExamples' classpath so we don't get \"ERROR StatusLogger Log4j2 could not find a logging implementation. Please add log4j-core to the classpath. Using SimpleLogger to log to the console...\"\r\n\r\nI've got some changes that I think should fix this.\r\n\r\nDo you mind if I push the changes to your PR once I get things working?\r\n","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/976461723/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/976578694","html_url":"https://github.com/apache/daffodil/pull/681#issuecomment-976578694","issue_url":"https://api.github.com/repos/apache/daffodil/issues/681","id":976578694,"node_id":"IC_kwDOBhBG1s46NWiG","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-11-23T14:01:25Z","updated_at":"2021-11-23T14:01:25Z","author_association":"MEMBER","body":"I've added a branch to my fork that implements what I mentioned above. Take a look and let me know what you think:\r\n\r\nhttps://github.com/stevedlawrence/daffodil/commit/fb4d4d153b530a11ca0d34b8aab6416dd34e1e48\r\n\r\nWhat this does:\r\n\r\n* Move the generated files to the `tutorials/src/main/examples/` directory to avoid any potential cyclic dependency/modification issues\r\n* Modify build.sbt to fork the CLI to run the generator for the two examples. Some things worth pointing out:\r\n  * To deal with the log4j messages I just used `ForkOptions` and a `CustomOutput` to output the fork stdout/stderr to a buffer and then just ignore that buffer. So the log4j warnings still exist, this just doesn't show them.\r\n  * This is the magic sbt incantation to run `genExamples` when `sbt compile` is run:\r\n    ```\r\n    Compile / compile := {\r\n      val res = (Compile / compile).value\r\n      (Compile / genExamples).value\r\n      res\r\n    }\r\n    ```\r\n    Note that this technically only runs if you run `sbt daffodil-tutorials/compile` but `sbt compile` runs that because the tutorials subproject is part of the subproject aggregation, so it's essentially the same\r\n  * This also includes `FileFunction.cached` so that we only regenerate files if either the schemas or the classpath jars change. Avoids unnecessarily regenerating things \r\n* Add a github action to ensure the examples are updated by generating the examples and running git diff. I intentionally didn't commit the changes to the nested generated files (which I can imagine some people might unknowingly o), so you can see what the failure looks like here\r\n  https://github.com/stevedlawrence/daffodil/runs/4299971721?check_suite_focus=true\r\n* Update the other generators to be consistent and less verbose about logging, similar to the rest of sbt compilation messages\r\n* Update `genManaged` to list the files, so you if you run `sbt 'show genManaged'` it will actually show the files that are generated\r\n\r\nI didn't see your latest changes, so this is slightly different (e.g. running the CLI vs your new CodeGenerator class). Feel free to pick and choose from that what you like.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/976578694/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/976606602","html_url":"https://github.com/apache/daffodil/pull/681#issuecomment-976606602","issue_url":"https://api.github.com/repos/apache/daffodil/issues/681","id":976606602,"node_id":"IC_kwDOBhBG1s46NdWK","user":{"login":"tuxji","id":5915561,"node_id":"MDQ6VXNlcjU5MTU1NjE=","avatar_url":"https://avatars.githubusercontent.com/u/5915561?v=4","gravatar_id":"","url":"https://api.github.com/users/tuxji","html_url":"https://github.com/tuxji","followers_url":"https://api.github.com/users/tuxji/followers","following_url":"https://api.github.com/users/tuxji/following{/other_user}","gists_url":"https://api.github.com/users/tuxji/gists{/gist_id}","starred_url":"https://api.github.com/users/tuxji/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tuxji/subscriptions","organizations_url":"https://api.github.com/users/tuxji/orgs","repos_url":"https://api.github.com/users/tuxji/repos","events_url":"https://api.github.com/users/tuxji/events{/privacy}","received_events_url":"https://api.github.com/users/tuxji/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-11-23T14:22:20Z","updated_at":"2021-11-23T14:22:20Z","author_association":"CONTRIBUTOR","body":"> Even if we autocompile, it still doesn't guarantee that those files are committed. Devs still need to `git add` those files. If they use `git add .` or something similar that will happen, but it's dev workflow dependent. I personally use `git add -p` or manually add files I know I've modified--I don't think it would even cross my mind to commit changes I didn't personally make if I was new to this. Since it's still possible that a PR is made without actually updating these files depending on a dev's workflow, I'd prefer that we still have a test somewhere, even if we unconditionally rebuild these when compiling. A one line github action could do this.\r\n\r\nYes, dev workflows aren't identical.  I don't leave any modified files lying around in my checkout after a push unless I have a very, very good reason for deliberately not committing them.  My own workflow is to run `git diff`, write the commit message in a file while looking at every difference carefully, and then run `git commit -a -F ~/f`.  I use `git add` only if I need to add new files not already in git, and that forces me to `git add .`  everything so `git diff --staged` will show me all the differences. In practice, the generated files will be updates to files already in git and I don't think anyone would deliberately hold back from committing the modified example files since they must have been making a change to the code generation backend anyway.  If we do see contributors leaving out changes to the example files, we can take some action (otherwise, YAGNI).\r\n\r\nDo note that incrementing the version number could have to commit the example files too depending on how sbt constructs the classpath.  If it's doable, you could tell sbt to construct the classpath using classes instead of jars so the version number doesn't appear in the example files, but I wouldn't worry about it.\r\n\r\n> However, things get a bit tricky. We can still trigger a task to run during compilation without using a generator, but we have to be careful about task dependency cycles. The way the genExample needs to work is it essentially just forks a java process and executes the CLI with the right arguments. But this task depends on the CLI (and all of its dependencies being compiled), so this task really can't live in the CLI or any of its dependent subprojects (e.g. `daffodil-runtime2` or the root `daffodil` project), or we'll get circularity issues. That probably also means that what this task generates probably shouldn't be in any of those projects either--even if it works, generating a file inside another subproject feels dangerous and might confuse sbt, or create subtle issues.\r\n\r\nWhen I was testing object CodeGenerator.main, I had no problem running it manually from IDEA with the runtime configuration offering a dropdown allowing me to use either daffodil-runtime2's classpath (I got the log4j warning) or daffodil-core's classpath (I didn't get the log4j warning but I did get another odd warning).  The dropdown offered me the option of using every daffodil module's classpath including daffodil-cli, but I know for sure that nothing in the runtime2 code generator backend needs anything from daffodil-cli.  Even the version number comes from daffodil-runtime2's own jar.  \r\n\r\n> Do you mind if I push the changes to your PR once I get things working?\r\n\r\nFYI, I wouldn't have minded, but I've just seen your next comment saying that you've already added a branch to your fork.  I'll pull it, thanks.  I still don't think we need to worry about circular class dependencies, so I might try to keep things contained inside daffodil-runtime2.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/976606602/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/976697702","html_url":"https://github.com/apache/daffodil/pull/681#issuecomment-976697702","issue_url":"https://api.github.com/repos/apache/daffodil/issues/681","id":976697702,"node_id":"IC_kwDOBhBG1s46Nzlm","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-11-23T15:16:58Z","updated_at":"2021-11-23T15:16:58Z","author_association":"MEMBER","body":"> I don't think anyone would deliberately hold back from committing the modified example files since they must have been making a change to the code generation backend anyway\r\n\r\nMaybe not deliberately, but I can definitely imagine accidentally leaving out files. Or someone using an IDE that doesn't use SBT (e.g. eclipse) and so the generator is never even run. If our goal is to have the examples always match what the generator will generate at each commit (which I like from a review perspective), adding a check somewhere to enforce that seems important, especially since there's not other way to know if it was updated or not.\r\n\r\n> Do note that incrementing the version number could have to commit the example files too depending on how sbt constructs the classpath.\r\n\r\nThat's fine with me, it's pretty easy to manually bump version numbers in a couple files, and if we add a check, it will ensure that happens.\r\n\r\nThough, another option might be for the generator to generate something like `libcli/version.h` file which defines the `daffodil_program_version` variable. That way the version number is never in a file that is actually committed, so it doesn't matter if things can't find a version or if the version changes.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/976697702/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/976980753","html_url":"https://github.com/apache/daffodil/pull/681#issuecomment-976980753","issue_url":"https://api.github.com/repos/apache/daffodil/issues/681","id":976980753,"node_id":"IC_kwDOBhBG1s46O4sR","user":{"login":"tuxji","id":5915561,"node_id":"MDQ6VXNlcjU5MTU1NjE=","avatar_url":"https://avatars.githubusercontent.com/u/5915561?v=4","gravatar_id":"","url":"https://api.github.com/users/tuxji","html_url":"https://github.com/tuxji","followers_url":"https://api.github.com/users/tuxji/followers","following_url":"https://api.github.com/users/tuxji/following{/other_user}","gists_url":"https://api.github.com/users/tuxji/gists{/gist_id}","starred_url":"https://api.github.com/users/tuxji/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tuxji/subscriptions","organizations_url":"https://api.github.com/users/tuxji/orgs","repos_url":"https://api.github.com/users/tuxji/repos","events_url":"https://api.github.com/users/tuxji/events{/privacy}","received_events_url":"https://api.github.com/users/tuxji/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-11-23T18:28:49Z","updated_at":"2021-11-23T18:29:37Z","author_association":"CONTRIBUTOR","body":"Steve, I've integrated all the changes from your branch.  I found one last bug (the caching doesn't work), but I just realized what's causing the example files to be generated every time.  `genExamples` watches all the runtime2 files for changes and calls FileFunction.cached, but the example files are located in a subdirectory under the example schemas, so we need to separate the example files from the example schemas to avoid the example files being watched for changes too.  I think I will move the example c files to `daffodil-runtime2/src/test/c/examples`.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/976980753/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/978066543","html_url":"https://github.com/apache/daffodil/pull/681#issuecomment-978066543","issue_url":"https://api.github.com/repos/apache/daffodil/issues/681","id":978066543,"node_id":"IC_kwDOBhBG1s46TBxv","user":{"login":"tuxji","id":5915561,"node_id":"MDQ6VXNlcjU5MTU1NjE=","avatar_url":"https://avatars.githubusercontent.com/u/5915561?v=4","gravatar_id":"","url":"https://api.github.com/users/tuxji","html_url":"https://github.com/tuxji","followers_url":"https://api.github.com/users/tuxji/followers","following_url":"https://api.github.com/users/tuxji/following{/other_user}","gists_url":"https://api.github.com/users/tuxji/gists{/gist_id}","starred_url":"https://api.github.com/users/tuxji/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tuxji/subscriptions","organizations_url":"https://api.github.com/users/tuxji/orgs","repos_url":"https://api.github.com/users/tuxji/repos","events_url":"https://api.github.com/users/tuxji/events{/privacy}","received_events_url":"https://api.github.com/users/tuxji/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-11-24T17:06:14Z","updated_at":"2021-11-24T17:07:51Z","author_association":"CONTRIBUTOR","body":"I've moved the example files.  Now genExamples won't generate the example files over and over but only when changes are made to the runtime2 Scala sources or example schemas.  This completes my pull request.  Thanks for the second +1!  I'll rebase and merge the PR later today.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/978066543/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/984788945","html_url":"https://github.com/apache/daffodil/pull/694#issuecomment-984788945","issue_url":"https://api.github.com/repos/apache/daffodil/issues/694","id":984788945,"node_id":"IC_kwDOBhBG1s46sq_R","user":{"login":"mbeckerle","id":1524099,"node_id":"MDQ6VXNlcjE1MjQwOTk=","avatar_url":"https://avatars.githubusercontent.com/u/1524099?v=4","gravatar_id":"","url":"https://api.github.com/users/mbeckerle","html_url":"https://github.com/mbeckerle","followers_url":"https://api.github.com/users/mbeckerle/followers","following_url":"https://api.github.com/users/mbeckerle/following{/other_user}","gists_url":"https://api.github.com/users/mbeckerle/gists{/gist_id}","starred_url":"https://api.github.com/users/mbeckerle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbeckerle/subscriptions","organizations_url":"https://api.github.com/users/mbeckerle/orgs","repos_url":"https://api.github.com/users/mbeckerle/repos","events_url":"https://api.github.com/users/mbeckerle/events{/privacy}","received_events_url":"https://api.github.com/users/mbeckerle/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-12-02T16:28:20Z","updated_at":"2021-12-02T16:28:20Z","author_association":"CONTRIBUTOR","body":"re: comment by @stevedlawrence on proliferating conditionals, the alternative is some object-oriented refactoring, where things that have repType get a different class than things without repType. This would actually require delegation I think to another object since we don't/can't analyze the repType property when the original DSOM object is created. I.e., we create the ElementBase instance as part of core parsing of the DFDL schema. Then, based on combining of element with its type, we eventually find out that it has a repType or not, and we'd have to construct a distinct object for the repType vs. Not case, and delegate the fixedLengthValue and elementLengthInBitsEv methods on that object. This is do-able, and may in fact be the right approach vs. proliferating conditionals of repType or not. ","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/984788945/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/987162527","html_url":"https://github.com/apache/daffodil/pull/695#issuecomment-987162527","issue_url":"https://api.github.com/repos/apache/daffodil/issues/695","id":987162527,"node_id":"IC_kwDOBhBG1s461uef","user":{"login":"mbeckerle","id":1524099,"node_id":"MDQ6VXNlcjE1MjQwOTk=","avatar_url":"https://avatars.githubusercontent.com/u/1524099?v=4","gravatar_id":"","url":"https://api.github.com/users/mbeckerle","html_url":"https://github.com/mbeckerle","followers_url":"https://api.github.com/users/mbeckerle/followers","following_url":"https://api.github.com/users/mbeckerle/following{/other_user}","gists_url":"https://api.github.com/users/mbeckerle/gists{/gist_id}","starred_url":"https://api.github.com/users/mbeckerle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbeckerle/subscriptions","organizations_url":"https://api.github.com/users/mbeckerle/orgs","repos_url":"https://api.github.com/users/mbeckerle/repos","events_url":"https://api.github.com/users/mbeckerle/events{/privacy}","received_events_url":"https://api.github.com/users/mbeckerle/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-12-06T20:17:01Z","updated_at":"2021-12-06T20:17:01Z","author_association":"CONTRIBUTOR","body":"The checks are going to fail, as this needs to be rebased on top of an earlier commit. ","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/987162527/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/988884401","html_url":"https://github.com/apache/daffodil/pull/699#issuecomment-988884401","issue_url":"https://api.github.com/repos/apache/daffodil/issues/699","id":988884401,"node_id":"IC_kwDOBhBG1s468S2x","user":{"login":"tuxji","id":5915561,"node_id":"MDQ6VXNlcjU5MTU1NjE=","avatar_url":"https://avatars.githubusercontent.com/u/5915561?v=4","gravatar_id":"","url":"https://api.github.com/users/tuxji","html_url":"https://github.com/tuxji","followers_url":"https://api.github.com/users/tuxji/followers","following_url":"https://api.github.com/users/tuxji/following{/other_user}","gists_url":"https://api.github.com/users/tuxji/gists{/gist_id}","starred_url":"https://api.github.com/users/tuxji/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tuxji/subscriptions","organizations_url":"https://api.github.com/users/tuxji/orgs","repos_url":"https://api.github.com/users/tuxji/repos","events_url":"https://api.github.com/users/tuxji/events{/privacy}","received_events_url":"https://api.github.com/users/tuxji/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-12-08T14:54:02Z","updated_at":"2021-12-08T14:54:02Z","author_association":"CONTRIBUTOR","body":"Found more information:\r\n\r\nGot security warning on JDom2 2.0.6: CVE-2021-33813 [Issue #189](https://github.com/hunterhacker/jdom/issues/189)\r\nfix setFeature bug and add test case [PR #188](https://github.com/hunterhacker/jdom/pull/188)\r\n\r\nLooks like the maintainer just got approval from Sonatype to upload the 2.0.6.1 release, but did not create a tagged release on GitHub (yet?).  Still would prefer more traceability of what exactly went into the 2.0.6.1 release back to source tag.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/988884401/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/988897856","html_url":"https://github.com/apache/daffodil/pull/699#issuecomment-988897856","issue_url":"https://api.github.com/repos/apache/daffodil/issues/699","id":988897856,"node_id":"IC_kwDOBhBG1s468WJA","user":{"login":"tuxji","id":5915561,"node_id":"MDQ6VXNlcjU5MTU1NjE=","avatar_url":"https://avatars.githubusercontent.com/u/5915561?v=4","gravatar_id":"","url":"https://api.github.com/users/tuxji","html_url":"https://github.com/tuxji","followers_url":"https://api.github.com/users/tuxji/followers","following_url":"https://api.github.com/users/tuxji/following{/other_user}","gists_url":"https://api.github.com/users/tuxji/gists{/gist_id}","starred_url":"https://api.github.com/users/tuxji/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tuxji/subscriptions","organizations_url":"https://api.github.com/users/tuxji/orgs","repos_url":"https://api.github.com/users/tuxji/repos","events_url":"https://api.github.com/users/tuxji/events{/privacy}","received_events_url":"https://api.github.com/users/tuxji/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-12-08T15:08:53Z","updated_at":"2021-12-08T15:08:53Z","author_association":"CONTRIBUTOR","body":"Found more traceability info.  Someone forked the repo, made a branch \"2.0.6.1\" from the 2.0.6 tag, cherry picked some fixes, and built a jar for Java 1.5 and higher (building a jar for that old Java version had been what took a long time).  Then someone else tested the jar, and the maintainer uploaded the jar to Maven Central.  \r\n\r\n<https://github.com/hunterhacker/jdom/issues/189#issuecomment-955682820>\r\n<https://github.com/eneklo/jdom/commits/jdom-2.0.6.1>","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/988897856/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/988931651","html_url":"https://github.com/apache/daffodil/pull/699#issuecomment-988931651","issue_url":"https://api.github.com/repos/apache/daffodil/issues/699","id":988931651,"node_id":"IC_kwDOBhBG1s468eZD","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-12-08T15:46:55Z","updated_at":"2021-12-08T15:46:55Z","author_association":"MEMBER","body":"Hmm, I'm not sure how comfortable I am depending on jar from a random fork that wasn't built by a maintainer. It's probably fine, and a build.log and additional details are included in that issue, so it shouldn't be too hard to verify that there is nothing malicious added to this jar.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/988931651/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/988935596","html_url":"https://github.com/apache/daffodil/pull/699#issuecomment-988935596","issue_url":"https://api.github.com/repos/apache/daffodil/issues/699","id":988935596,"node_id":"IC_kwDOBhBG1s468fWs","user":{"login":"tuxji","id":5915561,"node_id":"MDQ6VXNlcjU5MTU1NjE=","avatar_url":"https://avatars.githubusercontent.com/u/5915561?v=4","gravatar_id":"","url":"https://api.github.com/users/tuxji","html_url":"https://github.com/tuxji","followers_url":"https://api.github.com/users/tuxji/followers","following_url":"https://api.github.com/users/tuxji/following{/other_user}","gists_url":"https://api.github.com/users/tuxji/gists{/gist_id}","starred_url":"https://api.github.com/users/tuxji/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tuxji/subscriptions","organizations_url":"https://api.github.com/users/tuxji/orgs","repos_url":"https://api.github.com/users/tuxji/repos","events_url":"https://api.github.com/users/tuxji/events{/privacy}","received_events_url":"https://api.github.com/users/tuxji/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-12-08T15:51:13Z","updated_at":"2021-12-08T15:51:13Z","author_association":"CONTRIBUTOR","body":"Do we even need the fix?  The fix applied only to callers bypassing JDOM's normal API method and calling SAX's setFeature method directly to turn on expansion.  However, we do the opposite in Daffodil - we turn expansion off, not on.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/988935596/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/988947653","html_url":"https://github.com/apache/daffodil/pull/699#issuecomment-988947653","issue_url":"https://api.github.com/repos/apache/daffodil/issues/699","id":988947653,"node_id":"IC_kwDOBhBG1s468iTF","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-12-08T16:04:20Z","updated_at":"2021-12-08T16:04:20Z","author_association":"MEMBER","body":"Yeah, I think this technically doesn't affect us.\r\n\r\nThough, it would be nice to include this just so that if anyone checks our dependencies a flag won't get raised about us depending on a version of JDOM with open CVE's, even if we aren't affected.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/988947653/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/988980482","html_url":"https://github.com/apache/daffodil/pull/699#issuecomment-988980482","issue_url":"https://api.github.com/repos/apache/daffodil/issues/699","id":988980482,"node_id":"IC_kwDOBhBG1s468qUC","user":{"login":"mbeckerle","id":1524099,"node_id":"MDQ6VXNlcjE1MjQwOTk=","avatar_url":"https://avatars.githubusercontent.com/u/1524099?v=4","gravatar_id":"","url":"https://api.github.com/users/mbeckerle","html_url":"https://github.com/mbeckerle","followers_url":"https://api.github.com/users/mbeckerle/followers","following_url":"https://api.github.com/users/mbeckerle/following{/other_user}","gists_url":"https://api.github.com/users/mbeckerle/gists{/gist_id}","starred_url":"https://api.github.com/users/mbeckerle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbeckerle/subscriptions","organizations_url":"https://api.github.com/users/mbeckerle/orgs","repos_url":"https://api.github.com/users/mbeckerle/repos","events_url":"https://api.github.com/users/mbeckerle/events{/privacy}","received_events_url":"https://api.github.com/users/mbeckerle/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-12-08T16:41:20Z","updated_at":"2021-12-08T16:41:20Z","author_association":"CONTRIBUTOR","body":"So given your observations @tuxji, what triggers scala-steward to provide this as an update. \r\n\r\nFeels like there is a substantial secuirty risk if people don't give scala-steward PRs significant scrutiny. \r\n\r\nWhy would some contributor's fork cause scala-steward to notice?","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/988980482/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/988986834","html_url":"https://github.com/apache/daffodil/pull/699#issuecomment-988986834","issue_url":"https://api.github.com/repos/apache/daffodil/issues/699","id":988986834,"node_id":"IC_kwDOBhBG1s468r3S","user":{"login":"tuxji","id":5915561,"node_id":"MDQ6VXNlcjU5MTU1NjE=","avatar_url":"https://avatars.githubusercontent.com/u/5915561?v=4","gravatar_id":"","url":"https://api.github.com/users/tuxji","html_url":"https://github.com/tuxji","followers_url":"https://api.github.com/users/tuxji/followers","following_url":"https://api.github.com/users/tuxji/following{/other_user}","gists_url":"https://api.github.com/users/tuxji/gists{/gist_id}","starred_url":"https://api.github.com/users/tuxji/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tuxji/subscriptions","organizations_url":"https://api.github.com/users/tuxji/orgs","repos_url":"https://api.github.com/users/tuxji/repos","events_url":"https://api.github.com/users/tuxji/events{/privacy}","received_events_url":"https://api.github.com/users/tuxji/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-12-08T16:48:56Z","updated_at":"2021-12-09T15:17:55Z","author_association":"CONTRIBUTOR","body":"In <https://github.com/hunterhacker/jdom/issues/189#issuecomment-955682820>, the guy who built the jar said:\r\n\r\n> I built using Apache Ant 1.9.16 and Oracle JDK 1.7.0_75 that is the same version used to build v2.0.6 which is on Maven Central; then I compared the resulting JAR with the one of v2.0.6: there is only one class file changed: SAXBuilder.class; I also compared SAXBuilder.java source with master and there are no code differences (only some fixed typos on master).\r\n\r\nHowever, I downloaded both jdom2-2.0.6.jar and jdom2-2.0.6.1.jar from <https://repo1.maven.org/maven2/org/jdom/jdom2/2.0.6/jdom2-2.0.6.jar> and <https://repo1.maven.org/maven2/org/jdom/jdom2/2.0.6.1/jdom2-2.0.6.1.jar> respectively, unpacked them in separate empty directories with \"jar xf\", and compared them with \"diff -rU2\".  Every class is different and there are 12 new classes in 2.0.6.1.  Furthermore, 2.0.6.1 wasn't built with Oracle JDK 1.7.0_75, it was built with Oracle JDK 1.8.0_151.  I would have liked the new jar to have the same classes as the original jar (byte-for-byte) except for the class being fixed (SAXBuilder.class).  \r\n\r\nLet's wait for both the JDOM website and GitHub repository to be updated before bumping the jar. I have left a comment on their issue asking them to announce the 2.0.6.1 release on the JDOM website and upload the jar to their GitHub Release page so that no one else has to spend a lot of additional time checking the jar's validity.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/988986834/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/988991167","html_url":"https://github.com/apache/daffodil/pull/699#issuecomment-988991167","issue_url":"https://api.github.com/repos/apache/daffodil/issues/699","id":988991167,"node_id":"IC_kwDOBhBG1s468s6_","user":{"login":"tuxji","id":5915561,"node_id":"MDQ6VXNlcjU5MTU1NjE=","avatar_url":"https://avatars.githubusercontent.com/u/5915561?v=4","gravatar_id":"","url":"https://api.github.com/users/tuxji","html_url":"https://github.com/tuxji","followers_url":"https://api.github.com/users/tuxji/followers","following_url":"https://api.github.com/users/tuxji/following{/other_user}","gists_url":"https://api.github.com/users/tuxji/gists{/gist_id}","starred_url":"https://api.github.com/users/tuxji/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tuxji/subscriptions","organizations_url":"https://api.github.com/users/tuxji/orgs","repos_url":"https://api.github.com/users/tuxji/repos","events_url":"https://api.github.com/users/tuxji/events{/privacy}","received_events_url":"https://api.github.com/users/tuxji/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-12-08T16:54:12Z","updated_at":"2021-12-08T16:54:12Z","author_association":"CONTRIBUTOR","body":"> So given your observations @tuxji, what triggers scala-steward to provide this as an update.\r\n> \r\n> Feels like there is a substantial secuirty risk if people don't give scala-steward PRs significant scrutiny.\r\n> \r\n> Why would some contributor's fork cause scala-steward to notice?\r\n\r\nNo, scala-steward didn't notice the contributor's fork.  What happened is that JDOM had an old maintainer (Rolf) who held the Sonatype account credentials.  The new maintainer (Jason) had to get Sonatype account credentials by adding a TXT record to the JDOM website's DNS records, and then uploaded this jar to Sonatype.  Scala-steward then noticed the new jar had appeared in Maven Central and sent us a PR.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/988991167/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/995023806","html_url":"https://github.com/apache/daffodil/pull/699#issuecomment-995023806","issue_url":"https://api.github.com/repos/apache/daffodil/issues/699","id":995023806,"node_id":"IC_kwDOBhBG1s47Ttu-","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-12-15T17:49:13Z","updated_at":"2021-12-15T17:49:13Z","author_association":"MEMBER","body":"I'm still confused. I thought 2.6.0.1 was supposed to have just a single change for the CVE. But according to the tag on github, there's a bunch of changes:\r\n\r\nhttps://github.com/hunterhacker/jdom/compare/JDOM-2.0.6...JDOM-2.0.6.1\r\n\r\nMaybe this is fine, but the history of this release still not clear to me.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/995023806/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/995089953","html_url":"https://github.com/apache/daffodil/pull/699#issuecomment-995089953","issue_url":"https://api.github.com/repos/apache/daffodil/issues/699","id":995089953,"node_id":"IC_kwDOBhBG1s47T94h","user":{"login":"tuxji","id":5915561,"node_id":"MDQ6VXNlcjU5MTU1NjE=","avatar_url":"https://avatars.githubusercontent.com/u/5915561?v=4","gravatar_id":"","url":"https://api.github.com/users/tuxji","html_url":"https://github.com/tuxji","followers_url":"https://api.github.com/users/tuxji/followers","following_url":"https://api.github.com/users/tuxji/following{/other_user}","gists_url":"https://api.github.com/users/tuxji/gists{/gist_id}","starred_url":"https://api.github.com/users/tuxji/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tuxji/subscriptions","organizations_url":"https://api.github.com/users/tuxji/orgs","repos_url":"https://api.github.com/users/tuxji/repos","events_url":"https://api.github.com/users/tuxji/events{/privacy}","received_events_url":"https://api.github.com/users/tuxji/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-12-15T18:55:56Z","updated_at":"2021-12-15T18:57:09Z","author_association":"CONTRIBUTOR","body":"> I'm still confused. I thought 2.6.0.1 was supposed to have just a single change for the CVE. But according to the tag on github, there's a bunch of changes:\r\n> \r\n> [hunterhacker/jdom@JDOM-2.0.6...JDOM-2.0.6.1](https://github.com/hunterhacker/jdom/compare/JDOM-2.0.6...JDOM-2.0.6.1)\r\n> \r\n> Maybe this is fine, but the history of this release still not clear to me.\r\n\r\nJason Hunter (the current JDOM maintainer) built this jdom-2.0.6.1 jar himself rather than using the jdom-2.0.6.1 jar built by someone who forked the repository.  He asked JDOM users to test the jar and also figured out how to upload the jar to Sonatype so that it would be picked up by Maven Central.  The jar and its tagged branch are legitimate, even though the tagged branch has more changes than just the single change for the CVE.  I agree that the release's contents and history isn't very clear.  Let's go ahead and merge this change in, though, so Daffodil won't have an open CVE.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/995089953/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/998013322","html_url":"https://github.com/apache/daffodil/pull/709#issuecomment-998013322","issue_url":"https://api.github.com/repos/apache/daffodil/issues/709","id":998013322,"node_id":"IC_kwDOBhBG1s47fHmK","user":{"login":"mbeckerle","id":1524099,"node_id":"MDQ6VXNlcjE1MjQwOTk=","avatar_url":"https://avatars.githubusercontent.com/u/1524099?v=4","gravatar_id":"","url":"https://api.github.com/users/mbeckerle","html_url":"https://github.com/mbeckerle","followers_url":"https://api.github.com/users/mbeckerle/followers","following_url":"https://api.github.com/users/mbeckerle/following{/other_user}","gists_url":"https://api.github.com/users/mbeckerle/gists{/gist_id}","starred_url":"https://api.github.com/users/mbeckerle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbeckerle/subscriptions","organizations_url":"https://api.github.com/users/mbeckerle/orgs","repos_url":"https://api.github.com/users/mbeckerle/repos","events_url":"https://api.github.com/users/mbeckerle/events{/privacy}","received_events_url":"https://api.github.com/users/mbeckerle/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-12-20T15:14:10Z","updated_at":"2021-12-20T15:14:10Z","author_association":"CONTRIBUTOR","body":"Let's not merge this quite yet. We have to decide if it goes into 3.2.1, requires a 3.2.2, or just goes into 3.3.0-SNAPSHOT. ","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/998013322/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1005075916","html_url":"https://github.com/apache/daffodil/pull/720#issuecomment-1005075916","issue_url":"https://api.github.com/repos/apache/daffodil/issues/720","id":1005075916,"node_id":"IC_kwDOBhBG1s476D3M","user":{"login":"tuxji","id":5915561,"node_id":"MDQ6VXNlcjU5MTU1NjE=","avatar_url":"https://avatars.githubusercontent.com/u/5915561?v=4","gravatar_id":"","url":"https://api.github.com/users/tuxji","html_url":"https://github.com/tuxji","followers_url":"https://api.github.com/users/tuxji/followers","following_url":"https://api.github.com/users/tuxji/following{/other_user}","gists_url":"https://api.github.com/users/tuxji/gists{/gist_id}","starred_url":"https://api.github.com/users/tuxji/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tuxji/subscriptions","organizations_url":"https://api.github.com/users/tuxji/orgs","repos_url":"https://api.github.com/users/tuxji/repos","events_url":"https://api.github.com/users/tuxji/events{/privacy}","received_events_url":"https://api.github.com/users/tuxji/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-01-04T18:41:53Z","updated_at":"2022-01-04T18:41:53Z","author_association":"CONTRIBUTOR","body":"Looks OK, but tests fail when generating example files so will wait until that's fixed before reviewing.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1005075916/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1005081550","html_url":"https://github.com/apache/daffodil/pull/720#issuecomment-1005081550","issue_url":"https://api.github.com/repos/apache/daffodil/issues/720","id":1005081550,"node_id":"IC_kwDOBhBG1s476FPO","user":{"login":"mbeckerle","id":1524099,"node_id":"MDQ6VXNlcjE1MjQwOTk=","avatar_url":"https://avatars.githubusercontent.com/u/1524099?v=4","gravatar_id":"","url":"https://api.github.com/users/mbeckerle","html_url":"https://github.com/mbeckerle","followers_url":"https://api.github.com/users/mbeckerle/followers","following_url":"https://api.github.com/users/mbeckerle/following{/other_user}","gists_url":"https://api.github.com/users/mbeckerle/gists{/gist_id}","starred_url":"https://api.github.com/users/mbeckerle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbeckerle/subscriptions","organizations_url":"https://api.github.com/users/mbeckerle/orgs","repos_url":"https://api.github.com/users/mbeckerle/repos","events_url":"https://api.github.com/users/mbeckerle/events{/privacy}","received_events_url":"https://api.github.com/users/mbeckerle/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-01-04T18:50:12Z","updated_at":"2022-01-04T18:50:12Z","author_association":"CONTRIBUTOR","body":"I didn't even want to create PRs for these, but github won't shut up about\nvarious of my \"parked\" things pushed to my fork, which are really just\npushed there for backup.\n\nOn Tue, Jan 4, 2022 at 1:42 PM John Interrante ***@***.***>\nwrote:\n\n> Looks OK, but tests fail when generating example files so will wait until\n> that's fixed before reviewing.\n>\n> —\n> Reply to this email directly, view it on GitHub\n> <https://github.com/apache/daffodil/pull/720#issuecomment-1005075916>, or\n> unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AALUDA2FZXQ32F76RS4TG7DUUM5PXANCNFSM5LIBYVDA>\n> .\n> Triage notifications on the go with GitHub Mobile for iOS\n> <https://apps.apple.com/app/apple-store/id1477376905?ct=notification-email&mt=8&pt=524675>\n> or Android\n> <https://play.google.com/store/apps/details?id=com.github.android&referrer=utm_campaign%3Dnotification-email%26utm_medium%3Demail%26utm_source%3Dgithub>.\n>\n> You are receiving this because you authored the thread.Message ID:\n> ***@***.***>\n>\n","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1005081550/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1011175981","html_url":"https://github.com/apache/daffodil/pull/725#issuecomment-1011175981","issue_url":"https://api.github.com/repos/apache/daffodil/issues/725","id":1011175981,"node_id":"IC_kwDOBhBG1s48RVIt","user":{"login":"mbeckerle","id":1524099,"node_id":"MDQ6VXNlcjE1MjQwOTk=","avatar_url":"https://avatars.githubusercontent.com/u/1524099?v=4","gravatar_id":"","url":"https://api.github.com/users/mbeckerle","html_url":"https://github.com/mbeckerle","followers_url":"https://api.github.com/users/mbeckerle/followers","following_url":"https://api.github.com/users/mbeckerle/following{/other_user}","gists_url":"https://api.github.com/users/mbeckerle/gists{/gist_id}","starred_url":"https://api.github.com/users/mbeckerle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbeckerle/subscriptions","organizations_url":"https://api.github.com/users/mbeckerle/orgs","repos_url":"https://api.github.com/users/mbeckerle/repos","events_url":"https://api.github.com/users/mbeckerle/events{/privacy}","received_events_url":"https://api.github.com/users/mbeckerle/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-01-12T15:41:41Z","updated_at":"2022-01-12T15:41:41Z","author_association":"CONTRIBUTOR","body":"Interesting. Sonarcloud told me a local var was unused.\r\n\r\nBut it isn't unused. When I deleted it, daffodil now fails to compile. \r\n\r\nSo this is a sonarcloud error. ","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1011175981/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1012188921","html_url":"https://github.com/apache/daffodil/pull/727#issuecomment-1012188921","issue_url":"https://api.github.com/repos/apache/daffodil/issues/727","id":1012188921,"node_id":"IC_kwDOBhBG1s48VMb5","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-01-13T14:30:23Z","updated_at":"2022-01-13T14:30:23Z","author_association":"MEMBER","body":"Scala 2.13.x needs lots of manual work beyond just a version bump. [DAFFODIL-2152](https://issues.apache.org/jira/browse/DAFFODIL-2152) is the issue for that. Closing.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1012188921/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1012661380","html_url":"https://github.com/apache/daffodil/pull/726#issuecomment-1012661380","issue_url":"https://api.github.com/repos/apache/daffodil/issues/726","id":1012661380,"node_id":"IC_kwDOBhBG1s48W_yE","user":{"login":"tuxji","id":5915561,"node_id":"MDQ6VXNlcjU5MTU1NjE=","avatar_url":"https://avatars.githubusercontent.com/u/5915561?v=4","gravatar_id":"","url":"https://api.github.com/users/tuxji","html_url":"https://github.com/tuxji","followers_url":"https://api.github.com/users/tuxji/followers","following_url":"https://api.github.com/users/tuxji/following{/other_user}","gists_url":"https://api.github.com/users/tuxji/gists{/gist_id}","starred_url":"https://api.github.com/users/tuxji/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tuxji/subscriptions","organizations_url":"https://api.github.com/users/tuxji/orgs","repos_url":"https://api.github.com/users/tuxji/repos","events_url":"https://api.github.com/users/tuxji/events{/privacy}","received_events_url":"https://api.github.com/users/tuxji/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-01-14T01:15:50Z","updated_at":"2022-01-14T01:15:50Z","author_association":"CONTRIBUTOR","body":"> +1 The changes are fine, though I am concerned that we'll need namespace support eventually and this rips it out entirely.\r\n\r\nI hope your comment is just a misapprehension.  I don't believe the changes rip out any namespace support.\r\n\r\n> That said, the right way to fix that is by making the QName classes (e.g., NamedQName) support creation of useful identifiers directly. Given a schema set, a QName should be able to determine the best prefix mapped to a namespace, and construct names for a QName that use the prefix characters to represent the namespace. E.g., if xmlns:ex=\"http://example.com\" and a given element named \"foo\" at top level in a schema has that target namespace, then foo_ex should be the name used for those global elements.\r\n\r\nIdentifier construction (the cStructName method) actually constructs nested struct identifiers' names starting with the outermost structs' names and appending the nested structs' local names, rather than using only one local name (the nested struct's name) like it did before (the original localName method).  I think I tried appending prefix and local name to create foo_ex for a struct name, but it must not have been sufficient to prevent problems (there were several reasons for the C compilation or runtime errors including duplicate definitions, missing definitions, name collisions with functions in C headers, etc.).  I believe we need to build nested elements' struct names using outer structs' names to avoid the problems I found, although I agree we might need to disambiguate two global non-nested elements' struct names by prepending their prefixes to their local names too if we find that case causes a name collision later.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1012661380/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1012662963","html_url":"https://github.com/apache/daffodil/pull/715#issuecomment-1012662963","issue_url":"https://api.github.com/repos/apache/daffodil/issues/715","id":1012662963,"node_id":"IC_kwDOBhBG1s48XAKz","user":{"login":"tuxji","id":5915561,"node_id":"MDQ6VXNlcjU5MTU1NjE=","avatar_url":"https://avatars.githubusercontent.com/u/5915561?v=4","gravatar_id":"","url":"https://api.github.com/users/tuxji","html_url":"https://github.com/tuxji","followers_url":"https://api.github.com/users/tuxji/followers","following_url":"https://api.github.com/users/tuxji/following{/other_user}","gists_url":"https://api.github.com/users/tuxji/gists{/gist_id}","starred_url":"https://api.github.com/users/tuxji/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tuxji/subscriptions","organizations_url":"https://api.github.com/users/tuxji/orgs","repos_url":"https://api.github.com/users/tuxji/repos","events_url":"https://api.github.com/users/tuxji/events{/privacy}","received_events_url":"https://api.github.com/users/tuxji/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-01-14T01:19:18Z","updated_at":"2022-01-14T01:19:18Z","author_association":"CONTRIBUTOR","body":"This PR needs a second +1.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1012662963/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1013046332","html_url":"https://github.com/apache/daffodil/pull/726#issuecomment-1013046332","issue_url":"https://api.github.com/repos/apache/daffodil/issues/726","id":1013046332,"node_id":"IC_kwDOBhBG1s48Ydw8","user":{"login":"mbeckerle","id":1524099,"node_id":"MDQ6VXNlcjE1MjQwOTk=","avatar_url":"https://avatars.githubusercontent.com/u/1524099?v=4","gravatar_id":"","url":"https://api.github.com/users/mbeckerle","html_url":"https://github.com/mbeckerle","followers_url":"https://api.github.com/users/mbeckerle/followers","following_url":"https://api.github.com/users/mbeckerle/following{/other_user}","gists_url":"https://api.github.com/users/mbeckerle/gists{/gist_id}","starred_url":"https://api.github.com/users/mbeckerle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbeckerle/subscriptions","organizations_url":"https://api.github.com/users/mbeckerle/orgs","repos_url":"https://api.github.com/users/mbeckerle/repos","events_url":"https://api.github.com/users/mbeckerle/events{/privacy}","received_events_url":"https://api.github.com/users/mbeckerle/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-01-14T11:39:50Z","updated_at":"2022-01-14T11:39:50Z","author_association":"CONTRIBUTOR","body":"I agree you need to use the nest to avoid local name clashes. \r\nThe global names will also clash without the namespaces being somehow represented. \r\n\r\nI think the Daffodil schema compiler should take all the namespace bindings from all files, and produce a set of good unique namespace to identifier-suffix mapping, based on reusing the prefixes selected by schema authors wherever possible. ","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1013046332/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1017599348","html_url":"https://github.com/apache/daffodil/pull/728#issuecomment-1017599348","issue_url":"https://api.github.com/repos/apache/daffodil/issues/728","id":1017599348,"node_id":"IC_kwDOBhBG1s48p1V0","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-01-20T15:03:28Z","updated_at":"2022-01-20T15:03:28Z","author_association":"MEMBER","body":"+1","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1017599348/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1020033716","html_url":"https://github.com/apache/daffodil/pull/732#issuecomment-1020033716","issue_url":"https://api.github.com/repos/apache/daffodil/issues/732","id":1020033716,"node_id":"IC_kwDOBhBG1s48zHq0","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-01-24T12:10:51Z","updated_at":"2022-01-24T12:10:51Z","author_association":"MEMBER","body":"@jadams-tresys, can you test this to make sure this fixes the performance issues you are seeing?","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1020033716/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1020126477","html_url":"https://github.com/apache/daffodil/pull/732#issuecomment-1020126477","issue_url":"https://api.github.com/repos/apache/daffodil/issues/732","id":1020126477,"node_id":"IC_kwDOBhBG1s48zeUN","user":{"login":"jadams-tresys","id":30659277,"node_id":"MDQ6VXNlcjMwNjU5Mjc3","avatar_url":"https://avatars.githubusercontent.com/u/30659277?v=4","gravatar_id":"","url":"https://api.github.com/users/jadams-tresys","html_url":"https://github.com/jadams-tresys","followers_url":"https://api.github.com/users/jadams-tresys/followers","following_url":"https://api.github.com/users/jadams-tresys/following{/other_user}","gists_url":"https://api.github.com/users/jadams-tresys/gists{/gist_id}","starred_url":"https://api.github.com/users/jadams-tresys/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jadams-tresys/subscriptions","organizations_url":"https://api.github.com/users/jadams-tresys/orgs","repos_url":"https://api.github.com/users/jadams-tresys/repos","events_url":"https://api.github.com/users/jadams-tresys/events{/privacy}","received_events_url":"https://api.github.com/users/jadams-tresys/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-01-24T13:56:31Z","updated_at":"2022-01-24T13:56:31Z","author_association":"CONTRIBUTOR","body":"Yes, this fixes the performance issues I was seeing.  Haven't run enough tests to make sure that it is back to the same levels before the changes to the TDML cache, but it seems pretty close.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1020126477/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1020129679","html_url":"https://github.com/apache/daffodil/pull/732#issuecomment-1020129679","issue_url":"https://api.github.com/repos/apache/daffodil/issues/732","id":1020129679,"node_id":"IC_kwDOBhBG1s48zfGP","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-01-24T14:00:10Z","updated_at":"2022-01-24T14:00:10Z","author_association":"MEMBER","body":"Sounds good. I'll merge, we can reopen and reinvestigate if we find there are still some issues.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1020129679/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1020439014","html_url":"https://github.com/apache/daffodil/pull/733#issuecomment-1020439014","issue_url":"https://api.github.com/repos/apache/daffodil/issues/733","id":1020439014,"node_id":"IC_kwDOBhBG1s480qnm","user":{"login":"tuxji","id":5915561,"node_id":"MDQ6VXNlcjU5MTU1NjE=","avatar_url":"https://avatars.githubusercontent.com/u/5915561?v=4","gravatar_id":"","url":"https://api.github.com/users/tuxji","html_url":"https://github.com/tuxji","followers_url":"https://api.github.com/users/tuxji/followers","following_url":"https://api.github.com/users/tuxji/following{/other_user}","gists_url":"https://api.github.com/users/tuxji/gists{/gist_id}","starred_url":"https://api.github.com/users/tuxji/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tuxji/subscriptions","organizations_url":"https://api.github.com/users/tuxji/orgs","repos_url":"https://api.github.com/users/tuxji/repos","events_url":"https://api.github.com/users/tuxji/events{/privacy}","received_events_url":"https://api.github.com/users/tuxji/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-01-24T19:01:32Z","updated_at":"2022-01-24T19:01:32Z","author_association":"CONTRIBUTOR","body":"I just did a git pull / git log ORIG_HEAD..HEAD and I noticed too late that two commits have the same JIRA number.  This PR's commit should have had the JIRA number [DAFFODIL-2630](https://issues.apache.org/jira/browse/DAFFODIL-2630) instead of [DAFFODIL-2627](https://issues.apache.org/jira/browse/DAFFODIL-2627).  Not sure whether it's feasible or worth it to amend the JIRA number since the commit is now HEAD~1 instead of HEAD, but letting you know.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1020439014/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1020453662","html_url":"https://github.com/apache/daffodil/pull/733#issuecomment-1020453662","issue_url":"https://api.github.com/repos/apache/daffodil/issues/733","id":1020453662,"node_id":"IC_kwDOBhBG1s480uMe","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-01-24T19:16:49Z","updated_at":"2022-01-24T19:16:49Z","author_association":"MEMBER","body":"Yeah, we could rebase it, but I'm not sure it's worth it now that a handful of other commits have been pushed. I'll add a comment to DAFFODIL-2627 that the commit references the wrong bug number, so there's still a trail, it's just not as easy to follow.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1020453662/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1025830495","html_url":"https://github.com/apache/daffodil/pull/737#issuecomment-1025830495","issue_url":"https://api.github.com/repos/apache/daffodil/issues/737","id":1025830495,"node_id":"IC_kwDOBhBG1s49JO5f","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-01-31T14:51:39Z","updated_at":"2022-01-31T14:51:39Z","author_association":"MEMBER","body":"+1","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1025830495/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1027927377","html_url":"https://github.com/apache/daffodil/pull/745#issuecomment-1027927377","issue_url":"https://api.github.com/repos/apache/daffodil/issues/745","id":1027927377,"node_id":"IC_kwDOBhBG1s49RO1R","user":{"login":"mbeckerle","id":1524099,"node_id":"MDQ6VXNlcjE1MjQwOTk=","avatar_url":"https://avatars.githubusercontent.com/u/1524099?v=4","gravatar_id":"","url":"https://api.github.com/users/mbeckerle","html_url":"https://github.com/mbeckerle","followers_url":"https://api.github.com/users/mbeckerle/followers","following_url":"https://api.github.com/users/mbeckerle/following{/other_user}","gists_url":"https://api.github.com/users/mbeckerle/gists{/gist_id}","starred_url":"https://api.github.com/users/mbeckerle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbeckerle/subscriptions","organizations_url":"https://api.github.com/users/mbeckerle/orgs","repos_url":"https://api.github.com/users/mbeckerle/repos","events_url":"https://api.github.com/users/mbeckerle/events{/privacy}","received_events_url":"https://api.github.com/users/mbeckerle/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-02-02T13:12:31Z","updated_at":"2022-02-02T13:12:31Z","author_association":"CONTRIBUTOR","body":"What do we use saxon for again? If it is not being configured to use our resolver instead of its own, then it can't be to process DFDL schemas nor TDML because our schemaLocations depend on our classpath-enabled xml resolver. ","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1027927377/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1027933417","html_url":"https://github.com/apache/daffodil/pull/745#issuecomment-1027933417","issue_url":"https://api.github.com/repos/apache/daffodil/issues/745","id":1027933417,"node_id":"IC_kwDOBhBG1s49RQTp","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-02-02T13:19:50Z","updated_at":"2022-02-02T13:19:50Z","author_association":"MEMBER","body":"It looks like Saxon was added for schematron validation in commit d65af5b22a742a09594f277e8154dd4078cf3459. So I guess the rest of Daffodil won't use this new xml resolver and shouldn't have any issues. And I guess since it uses schematron files, it doesn't need to know about our resolution logic?\r\n\r\nIn fact, looking at our schematron implementation it looks like it has added custom logic to allow resolving to files on the classpath:\r\n\r\nhttps://github.com/apache/daffodil/blob/main/daffodil-schematron/src/main/scala/org/apache/daffodil/validation/schematron/ClassPathUriResolver.scala\r\n\r\nI think schematron and saxon are just completely separate from the rest of Daffodil, and so this new xmlresolver should be fine.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1027933417/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1028180210","html_url":"https://github.com/apache/daffodil/pull/745#issuecomment-1028180210","issue_url":"https://api.github.com/repos/apache/daffodil/issues/745","id":1028180210,"node_id":"IC_kwDOBhBG1s49SMjy","user":{"login":"tuxji","id":5915561,"node_id":"MDQ6VXNlcjU5MTU1NjE=","avatar_url":"https://avatars.githubusercontent.com/u/5915561?v=4","gravatar_id":"","url":"https://api.github.com/users/tuxji","html_url":"https://github.com/tuxji","followers_url":"https://api.github.com/users/tuxji/followers","following_url":"https://api.github.com/users/tuxji/following{/other_user}","gists_url":"https://api.github.com/users/tuxji/gists{/gist_id}","starred_url":"https://api.github.com/users/tuxji/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tuxji/subscriptions","organizations_url":"https://api.github.com/users/tuxji/orgs","repos_url":"https://api.github.com/users/tuxji/repos","events_url":"https://api.github.com/users/tuxji/events{/privacy}","received_events_url":"https://api.github.com/users/tuxji/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-02-02T17:31:23Z","updated_at":"2022-02-02T17:31:23Z","author_association":"CONTRIBUTOR","body":"Yes, Saxon is used only by the Daffodil Schematron validator.  Schematron validation requires XSLT stylesheet processing and Xerces is an XML processor only, not an XSLT processor, so @jw3 had to pick either Saxon or Apache Xalan and Xalan has had only one new [release](https://xalan.apache.org/) since 2011.  The Apache Commons XML resolver has had no new [release](https://xerces.apache.org/xml-commons/components/resolver/resolver-release-notes.html) since 2006 itself, while the XML Resolver project has had 46 [releases](https://github.com/xmlresolver/xmlresolver/releases) since 2015 and comes with all the standard DTDs, schemas etc. [packaged](https://github.com/xmlresolver/xmlresolverdata) in a data jar.  Just saying :-).","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1028180210/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1028183796","html_url":"https://github.com/apache/daffodil/pull/745#issuecomment-1028183796","issue_url":"https://api.github.com/repos/apache/daffodil/issues/745","id":1028183796,"node_id":"IC_kwDOBhBG1s49SNb0","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-02-02T17:35:20Z","updated_at":"2022-02-02T17:35:20Z","author_association":"MEMBER","body":"Makes sense. I think this is good to squash and merge.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1028183796/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1028351682","html_url":"https://github.com/apache/daffodil/pull/745#issuecomment-1028351682","issue_url":"https://api.github.com/repos/apache/daffodil/issues/745","id":1028351682,"node_id":"IC_kwDOBhBG1s49S2bC","user":{"login":"mbeckerle","id":1524099,"node_id":"MDQ6VXNlcjE1MjQwOTk=","avatar_url":"https://avatars.githubusercontent.com/u/1524099?v=4","gravatar_id":"","url":"https://api.github.com/users/mbeckerle","html_url":"https://github.com/mbeckerle","followers_url":"https://api.github.com/users/mbeckerle/followers","following_url":"https://api.github.com/users/mbeckerle/following{/other_user}","gists_url":"https://api.github.com/users/mbeckerle/gists{/gist_id}","starred_url":"https://api.github.com/users/mbeckerle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbeckerle/subscriptions","organizations_url":"https://api.github.com/users/mbeckerle/orgs","repos_url":"https://api.github.com/users/mbeckerle/repos","events_url":"https://api.github.com/users/mbeckerle/events{/privacy}","received_events_url":"https://api.github.com/users/mbeckerle/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-02-02T20:58:04Z","updated_at":"2022-02-02T20:58:04Z","author_association":"CONTRIBUTOR","body":"So assuming schematron has some notion of include/import, that won't work from jars on classpath because this is not using our resolver. It is ok for that to be a bug. We should test it I guess. ","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1028351682/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1033735069","html_url":"https://github.com/apache/daffodil/pull/748#issuecomment-1033735069","issue_url":"https://api.github.com/repos/apache/daffodil/issues/748","id":1033735069,"node_id":"IC_kwDOBhBG1s49nYud","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-02-09T12:59:22Z","updated_at":"2022-02-09T12:59:22Z","author_association":"MEMBER","body":"> I have a schema that is substantially simplified by using prefix lengths, so I am anxious to try this on it.\r\n\r\nShould we hold off on merging this until you verify this? It works for the small tests you've added, but might have edge cases for a larger schema that still need fixing.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1033735069/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1034016810","html_url":"https://github.com/apache/daffodil/pull/749#issuecomment-1034016810","issue_url":"https://api.github.com/repos/apache/daffodil/issues/749","id":1034016810,"node_id":"IC_kwDOBhBG1s49odgq","user":{"login":"mbeckerle","id":1524099,"node_id":"MDQ6VXNlcjE1MjQwOTk=","avatar_url":"https://avatars.githubusercontent.com/u/1524099?v=4","gravatar_id":"","url":"https://api.github.com/users/mbeckerle","html_url":"https://github.com/mbeckerle","followers_url":"https://api.github.com/users/mbeckerle/followers","following_url":"https://api.github.com/users/mbeckerle/following{/other_user}","gists_url":"https://api.github.com/users/mbeckerle/gists{/gist_id}","starred_url":"https://api.github.com/users/mbeckerle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbeckerle/subscriptions","organizations_url":"https://api.github.com/users/mbeckerle/orgs","repos_url":"https://api.github.com/users/mbeckerle/repos","events_url":"https://api.github.com/users/mbeckerle/events{/privacy}","received_events_url":"https://api.github.com/users/mbeckerle/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-02-09T17:31:11Z","updated_at":"2022-02-09T17:31:11Z","author_association":"CONTRIBUTOR","body":"Could fn:count() have the same issue? Requires the array is finished.\r\n","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1034016810/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1034022539","html_url":"https://github.com/apache/daffodil/pull/749#issuecomment-1034022539","issue_url":"https://api.github.com/repos/apache/daffodil/issues/749","id":1034022539,"node_id":"IC_kwDOBhBG1s49oe6L","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-02-09T17:36:59Z","updated_at":"2022-02-09T17:36:59Z","author_association":"MEMBER","body":"`fn:count()` uses this same `ExistsKind` trait, so I think this fix for `fn:exists()` should also fix `fn:count()`. I'll add a test to make sure.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1034022539/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1034032547","html_url":"https://github.com/apache/daffodil/pull/749#issuecomment-1034032547","issue_url":"https://api.github.com/repos/apache/daffodil/issues/749","id":1034032547,"node_id":"IC_kwDOBhBG1s49ohWj","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-02-09T17:48:09Z","updated_at":"2022-02-09T17:48:09Z","author_association":"MEMBER","body":"Yep, looks like fn:count also was fixed. Tests added to verify.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1034032547/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1034033736","html_url":"https://github.com/apache/daffodil/pull/749#issuecomment-1034033736","issue_url":"https://api.github.com/repos/apache/daffodil/issues/749","id":1034033736,"node_id":"IC_kwDOBhBG1s49ohpI","user":{"login":"mbeckerle","id":1524099,"node_id":"MDQ6VXNlcjE1MjQwOTk=","avatar_url":"https://avatars.githubusercontent.com/u/1524099?v=4","gravatar_id":"","url":"https://api.github.com/users/mbeckerle","html_url":"https://github.com/mbeckerle","followers_url":"https://api.github.com/users/mbeckerle/followers","following_url":"https://api.github.com/users/mbeckerle/following{/other_user}","gists_url":"https://api.github.com/users/mbeckerle/gists{/gist_id}","starred_url":"https://api.github.com/users/mbeckerle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbeckerle/subscriptions","organizations_url":"https://api.github.com/users/mbeckerle/orgs","repos_url":"https://api.github.com/users/mbeckerle/repos","events_url":"https://api.github.com/users/mbeckerle/events{/privacy}","received_events_url":"https://api.github.com/users/mbeckerle/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-02-09T17:49:37Z","updated_at":"2022-02-09T17:49:37Z","author_association":"CONTRIBUTOR","body":"@olabusayoT This fix also addresses fn:count() which the big schema you are working on is using. \r\nCan you review this PR so we can merge it?","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1034033736/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1034077622","html_url":"https://github.com/apache/daffodil/pull/749#issuecomment-1034077622","issue_url":"https://api.github.com/repos/apache/daffodil/issues/749","id":1034077622,"node_id":"IC_kwDOBhBG1s49osW2","user":{"login":"olabusayoT","id":50379531,"node_id":"MDQ6VXNlcjUwMzc5NTMx","avatar_url":"https://avatars.githubusercontent.com/u/50379531?v=4","gravatar_id":"","url":"https://api.github.com/users/olabusayoT","html_url":"https://github.com/olabusayoT","followers_url":"https://api.github.com/users/olabusayoT/followers","following_url":"https://api.github.com/users/olabusayoT/following{/other_user}","gists_url":"https://api.github.com/users/olabusayoT/gists{/gist_id}","starred_url":"https://api.github.com/users/olabusayoT/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/olabusayoT/subscriptions","organizations_url":"https://api.github.com/users/olabusayoT/orgs","repos_url":"https://api.github.com/users/olabusayoT/repos","events_url":"https://api.github.com/users/olabusayoT/events{/privacy}","received_events_url":"https://api.github.com/users/olabusayoT/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-02-09T18:40:24Z","updated_at":"2022-02-09T18:40:24Z","author_association":"CONTRIBUTOR","body":"+1 This fixed the isFinished error that was occurring in my large schema during unparsing.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1034077622/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1034089801","html_url":"https://github.com/apache/daffodil/pull/749#issuecomment-1034089801","issue_url":"https://api.github.com/repos/apache/daffodil/issues/749","id":1034089801,"node_id":"IC_kwDOBhBG1s49ovVJ","user":{"login":"olabusayoT","id":50379531,"node_id":"MDQ6VXNlcjUwMzc5NTMx","avatar_url":"https://avatars.githubusercontent.com/u/50379531?v=4","gravatar_id":"","url":"https://api.github.com/users/olabusayoT","html_url":"https://github.com/olabusayoT","followers_url":"https://api.github.com/users/olabusayoT/followers","following_url":"https://api.github.com/users/olabusayoT/following{/other_user}","gists_url":"https://api.github.com/users/olabusayoT/gists{/gist_id}","starred_url":"https://api.github.com/users/olabusayoT/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/olabusayoT/subscriptions","organizations_url":"https://api.github.com/users/olabusayoT/orgs","repos_url":"https://api.github.com/users/olabusayoT/repos","events_url":"https://api.github.com/users/olabusayoT/events{/privacy}","received_events_url":"https://api.github.com/users/olabusayoT/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-02-09T18:55:20Z","updated_at":"2022-02-09T18:55:20Z","author_association":"CONTRIBUTOR","body":"I actually misread my run. I'm still getting the error, but the PR looks good so I'm keeping the approval","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1034089801/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1039060935","html_url":"https://github.com/apache/daffodil/pull/751#issuecomment-1039060935","issue_url":"https://api.github.com/repos/apache/daffodil/issues/751","id":1039060935,"node_id":"IC_kwDOBhBG1s497s_H","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-02-14T13:04:19Z","updated_at":"2022-02-14T13:04:19Z","author_association":"MEMBER","body":"Once this change is committed, this container will not really be specific to daffodil anymore. I wonder if it makes sense to move the container directory to its own repository (e.g. `apache/daffodil-release-candidate`)? That way, if we ever need to make changes to the container for the vscode repo we don't have to make changes to this somewhat unrelated repo?","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1039060935/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1039079912","html_url":"https://github.com/apache/daffodil/pull/750#issuecomment-1039079912","issue_url":"https://api.github.com/repos/apache/daffodil/issues/750","id":1039079912,"node_id":"IC_kwDOBhBG1s497xno","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-02-14T13:20:45Z","updated_at":"2022-02-14T13:20:45Z","author_association":"MEMBER","body":"+1\r\n\r\n - [X] **Do all automated continuous integration checks pass?**\r\n Yes\r\n- [X] **Is the update a patch, minor, or major update?**\r\n Major update, but only updates dependencies with a major update from node12 to node 16. This does not affect our simple PR commit count script. I've confirmed that adding a second commit still fails the PR my modifying a PR on my fork with this new version: https://github.com/stevedlawrence/daffodil/pull/50 \r\n - [X] **Is the license still compatible with ASF License Policy?**\r\n Yes, still MIT\r\n - [X] **Have any changes been made to LICENSE/NOTICE files that need to be incorporated?**\r\n Not applicable, we do not distribute\r\n - [X] **Have any transitive dependencies been added or changed?**\r\n Not applicable, we do not distribute","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1039079912/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1039134519","html_url":"https://github.com/apache/daffodil/pull/751#issuecomment-1039134519","issue_url":"https://api.github.com/repos/apache/daffodil/issues/751","id":1039134519,"node_id":"IC_kwDOBhBG1s497-83","user":{"login":"tuxji","id":5915561,"node_id":"MDQ6VXNlcjU5MTU1NjE=","avatar_url":"https://avatars.githubusercontent.com/u/5915561?v=4","gravatar_id":"","url":"https://api.github.com/users/tuxji","html_url":"https://github.com/tuxji","followers_url":"https://api.github.com/users/tuxji/followers","following_url":"https://api.github.com/users/tuxji/following{/other_user}","gists_url":"https://api.github.com/users/tuxji/gists{/gist_id}","starred_url":"https://api.github.com/users/tuxji/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tuxji/subscriptions","organizations_url":"https://api.github.com/users/tuxji/orgs","repos_url":"https://api.github.com/users/tuxji/repos","events_url":"https://api.github.com/users/tuxji/events{/privacy}","received_events_url":"https://api.github.com/users/tuxji/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-02-14T14:13:55Z","updated_at":"2022-02-14T14:13:55Z","author_association":"CONTRIBUTOR","body":"I don't think a separate repo makes sense (`apache/daffodil-release-candidate`).  I have 3 reasons: 1) we're talking about moving only 5 files which hardly justifies a separate repo at the Apache organization level; 2) the path `daffodil/containers/release-candidate` is much easier to understand than the repo name `daffodil-release-candidate`; 3) newcomers will feel more confused and waste more time trying to understand 3 daffodil-* repos than only 1 to 2 daffodil repos.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1039134519/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1039181874","html_url":"https://github.com/apache/daffodil/pull/751#issuecomment-1039181874","issue_url":"https://api.github.com/repos/apache/daffodil/issues/751","id":1039181874,"node_id":"IC_kwDOBhBG1s498Kgy","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-02-14T14:55:22Z","updated_at":"2022-02-14T14:55:22Z","author_association":"MEMBER","body":"Fair points. I don't feel strong about this and am fine with keeping it in here.\r\n\r\nHere's some additional thoughts in the back of my head, but which I don't think are all that strong of arguments since they're very future stuff and probably doesn't really apply right now:\r\n\r\n1. This is *almost* generic enough that it could be used for other apache projects. I sort of envision this repo growing to be a possible starting point for other projects to create their own release candidates. I know it was a pain to come up with all this stuff in the past, and it would be a shame for other new ASF projects to have to do something similar. That said, I doubt I'll want to do the work to make this truely generic. But if it were in a separate repo, others might.\r\n\r\n2. I could imagine a case where the daffodil repo is on some sort of code freeze but we want to make changes to the release candidate stuff for vscode (or maybe some other future project). By decoupling this release candidate container from any particular repo, it's easier to make those changes. That's not an issue now because we don't really code freeze, except maybe unofficially near releases, which aren't common.\r\n\r\nAnd maybe a potential argument against:\r\n\r\n1. It now requires a bit more effort to keep a third repo in sync. When building a release, we must ensure that the release manager uses the latest daffodil-relase-candidate repository or there might be subtle build issues. Theoretically either the build would fail, or it would be detected as part of the VOTE, so maybe not too big of a deal. But is another point of failure. That said, it's maybe not too different from our current method, where you should build from the latest Daffodil commit. For example, people that primarily do daffodil-vscode development have to clone the daffodil repo to do a release. Not a big deal, but might be a repo they don't always keep up to date.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1039181874/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1039235826","html_url":"https://github.com/apache/daffodil/pull/751#issuecomment-1039235826","issue_url":"https://api.github.com/repos/apache/daffodil/issues/751","id":1039235826,"node_id":"IC_kwDOBhBG1s498Xry","user":{"login":"mbeckerle","id":1524099,"node_id":"MDQ6VXNlcjE1MjQwOTk=","avatar_url":"https://avatars.githubusercontent.com/u/1524099?v=4","gravatar_id":"","url":"https://api.github.com/users/mbeckerle","html_url":"https://github.com/mbeckerle","followers_url":"https://api.github.com/users/mbeckerle/followers","following_url":"https://api.github.com/users/mbeckerle/following{/other_user}","gists_url":"https://api.github.com/users/mbeckerle/gists{/gist_id}","starred_url":"https://api.github.com/users/mbeckerle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbeckerle/subscriptions","organizations_url":"https://api.github.com/users/mbeckerle/orgs","repos_url":"https://api.github.com/users/mbeckerle/repos","events_url":"https://api.github.com/users/mbeckerle/events{/privacy}","received_events_url":"https://api.github.com/users/mbeckerle/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-02-14T15:40:00Z","updated_at":"2022-02-14T15:40:00Z","author_association":"CONTRIBUTOR","body":"I am ok with leaving it in Daffodil's source tree for now. That works because these release scripts/containers aren't actually part of a release. They're not distributed. \r\n","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1039235826/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1039526100","html_url":"https://github.com/apache/daffodil/pull/752#issuecomment-1039526100","issue_url":"https://api.github.com/repos/apache/daffodil/issues/752","id":1039526100,"node_id":"IC_kwDOBhBG1s499ejU","user":{"login":"mbeckerle","id":1524099,"node_id":"MDQ6VXNlcjE1MjQwOTk=","avatar_url":"https://avatars.githubusercontent.com/u/1524099?v=4","gravatar_id":"","url":"https://api.github.com/users/mbeckerle","html_url":"https://github.com/mbeckerle","followers_url":"https://api.github.com/users/mbeckerle/followers","following_url":"https://api.github.com/users/mbeckerle/following{/other_user}","gists_url":"https://api.github.com/users/mbeckerle/gists{/gist_id}","starred_url":"https://api.github.com/users/mbeckerle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbeckerle/subscriptions","organizations_url":"https://api.github.com/users/mbeckerle/orgs","repos_url":"https://api.github.com/users/mbeckerle/repos","events_url":"https://api.github.com/users/mbeckerle/events{/privacy}","received_events_url":"https://api.github.com/users/mbeckerle/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-02-14T20:30:04Z","updated_at":"2022-02-14T20:30:04Z","author_association":"CONTRIBUTOR","body":"@tuxji please re-review as I've now pushed the fixes also with more test coverage. ","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1039526100/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1039656971","html_url":"https://github.com/apache/daffodil/pull/754#issuecomment-1039656971","issue_url":"https://api.github.com/repos/apache/daffodil/issues/754","id":1039656971,"node_id":"IC_kwDOBhBG1s499-gL","user":{"login":"jadams-tresys","id":30659277,"node_id":"MDQ6VXNlcjMwNjU5Mjc3","avatar_url":"https://avatars.githubusercontent.com/u/30659277?v=4","gravatar_id":"","url":"https://api.github.com/users/jadams-tresys","html_url":"https://github.com/jadams-tresys","followers_url":"https://api.github.com/users/jadams-tresys/followers","following_url":"https://api.github.com/users/jadams-tresys/following{/other_user}","gists_url":"https://api.github.com/users/jadams-tresys/gists{/gist_id}","starred_url":"https://api.github.com/users/jadams-tresys/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jadams-tresys/subscriptions","organizations_url":"https://api.github.com/users/jadams-tresys/orgs","repos_url":"https://api.github.com/users/jadams-tresys/repos","events_url":"https://api.github.com/users/jadams-tresys/events{/privacy}","received_events_url":"https://api.github.com/users/jadams-tresys/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-02-14T22:59:38Z","updated_at":"2022-02-14T22:59:38Z","author_association":"CONTRIBUTOR","body":"I have been unable to figure out how to create a test case that replicates the issue, however test_ep2 in ./daffodil-test/src/test/resources/org/apache/daffodil/unparser/envelopePayload.tdml appears to be very similar, using a choice at the point where there is a bitOrder change, but it still does not replicate the issue described in DAFFODIL-2653 or the infinite loop when not cloning the UState.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1039656971/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1040227654","html_url":"https://github.com/apache/daffodil/pull/754#issuecomment-1040227654","issue_url":"https://api.github.com/repos/apache/daffodil/issues/754","id":1040227654,"node_id":"IC_kwDOBhBG1s4-AJ1G","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-02-15T12:42:30Z","updated_at":"2022-02-15T12:42:30Z","author_association":"MEMBER","body":"> I have been unable to figure out how to create a test case that replicates the issue\r\n\r\nThere's clearly a lot of complexity to get to this error. Not only do we need a split with some unknown byte order/bit orer stuff, we also need some suspensions involved and that those suspensions run and finish at specific times, and for state to be modified in specific ways after splits occur. So I'm not sure how easy it is going to be to create a small reproducible test. We might just need someone with access to confirm that the private test no longer fails, that nothing else is broken, and by code inspection that it seems correct.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1040227654/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1040525405","html_url":"https://github.com/apache/daffodil/pull/754#issuecomment-1040525405","issue_url":"https://api.github.com/repos/apache/daffodil/issues/754","id":1040525405,"node_id":"IC_kwDOBhBG1s4-BShd","user":{"login":"mbeckerle","id":1524099,"node_id":"MDQ6VXNlcjE1MjQwOTk=","avatar_url":"https://avatars.githubusercontent.com/u/1524099?v=4","gravatar_id":"","url":"https://api.github.com/users/mbeckerle","html_url":"https://github.com/mbeckerle","followers_url":"https://api.github.com/users/mbeckerle/followers","following_url":"https://api.github.com/users/mbeckerle/following{/other_user}","gists_url":"https://api.github.com/users/mbeckerle/gists{/gist_id}","starred_url":"https://api.github.com/users/mbeckerle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbeckerle/subscriptions","organizations_url":"https://api.github.com/users/mbeckerle/orgs","repos_url":"https://api.github.com/users/mbeckerle/repos","events_url":"https://api.github.com/users/mbeckerle/events{/privacy}","received_events_url":"https://api.github.com/users/mbeckerle/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-02-15T16:58:03Z","updated_at":"2022-02-15T16:58:03Z","author_association":"CONTRIBUTOR","body":"The way suspensions are resolved makes this hard to reproduce. It is deterministic, but not predictable from the DFDL schema. \r\n\r\nThat is something to think about. \r\n\r\nIn past lives I've dealt with this sort of thing and even non-deterministic things, by forcing deterministic but quasi-random schedules. E.g. by using a pseudo-random schedule changer with fixed start seed. \r\n\r\nIf enabled this would, in our case, permute the processing of the suspensions by deferring the processing of a suspension based on a coin-flip of this pseudo-random coin.  E.g., one way would be with 50/50 chance that a suspension would be skipped over, and delayed by one (i.e., exchange head and head-1 of the queue with 50/50 probability). \r\n\r\nThen one could run a small test in a loop repeatedly, and it would explore many permutations of the suspension evaluation orderings. ","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1040525405/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1042122806","html_url":"https://github.com/apache/daffodil/pull/751#issuecomment-1042122806","issue_url":"https://api.github.com/repos/apache/daffodil/issues/751","id":1042122806,"node_id":"IC_kwDOBhBG1s4-HYg2","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-02-16T20:14:10Z","updated_at":"2022-02-16T20:14:10Z","author_association":"MEMBER","body":"This still needs another +1","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1042122806/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1043365722","html_url":"https://github.com/apache/daffodil/pull/757#issuecomment-1043365722","issue_url":"https://api.github.com/repos/apache/daffodil/issues/757","id":1043365722,"node_id":"IC_kwDOBhBG1s4-MH9a","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-02-17T19:58:55Z","updated_at":"2022-02-17T19:58:55Z","author_association":"MEMBER","body":"Oops, +1 to the changes :+1: ","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1043365722/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1044642184","html_url":"https://github.com/apache/daffodil/pull/694#issuecomment-1044642184","issue_url":"https://api.github.com/repos/apache/daffodil/issues/694","id":1044642184,"node_id":"IC_kwDOBhBG1s4-Q_mI","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-02-18T14:49:42Z","updated_at":"2022-02-18T14:49:42Z","author_association":"MEMBER","body":"What changed since this was last reviewed? Unfortunately GitHub doesn't have a way to show that.\r\n\r\nAlso there were some discussions about potentially switching to a OOP/delegation system to reduce all the if statements scattered throughout. Do we want to take that approach, or is that going to be too much effort for not much gain?","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1044642184/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1044665050","html_url":"https://github.com/apache/daffodil/pull/694#issuecomment-1044665050","issue_url":"https://api.github.com/repos/apache/daffodil/issues/694","id":1044665050,"node_id":"IC_kwDOBhBG1s4-RFLa","user":{"login":"jadams-tresys","id":30659277,"node_id":"MDQ6VXNlcjMwNjU5Mjc3","avatar_url":"https://avatars.githubusercontent.com/u/30659277?v=4","gravatar_id":"","url":"https://api.github.com/users/jadams-tresys","html_url":"https://github.com/jadams-tresys","followers_url":"https://api.github.com/users/jadams-tresys/followers","following_url":"https://api.github.com/users/jadams-tresys/following{/other_user}","gists_url":"https://api.github.com/users/jadams-tresys/gists{/gist_id}","starred_url":"https://api.github.com/users/jadams-tresys/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jadams-tresys/subscriptions","organizations_url":"https://api.github.com/users/jadams-tresys/orgs","repos_url":"https://api.github.com/users/jadams-tresys/repos","events_url":"https://api.github.com/users/jadams-tresys/events{/privacy}","received_events_url":"https://api.github.com/users/jadams-tresys/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-02-18T15:02:51Z","updated_at":"2022-02-18T15:02:51Z","author_association":"CONTRIBUTOR","body":"> What changed since this was last reviewed? Unfortunately GitHub doesn't have a way to show that.\r\n> \r\n> Also there were some discussions about potentially switching to a OOP/delegation system to reduce all the if statements scattered throughout. Do we want to take that approach, or is that going to be too much effort for not much gain?\r\n\r\nThe change to OOP/delegation is what changed from the last commit.  Instead of adding more\r\n`if (optRepTypeElement.isDefined)`\r\nstatements throughout the code I am know using the repElement suggestion you mentioned earlier in the review, which can either be the optRepTypeElement, or the element itself.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1044665050/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1044961871","html_url":"https://github.com/apache/daffodil/pull/755#issuecomment-1044961871","issue_url":"https://api.github.com/repos/apache/daffodil/issues/755","id":1044961871,"node_id":"IC_kwDOBhBG1s4-SNpP","user":{"login":"tuxji","id":5915561,"node_id":"MDQ6VXNlcjU5MTU1NjE=","avatar_url":"https://avatars.githubusercontent.com/u/5915561?v=4","gravatar_id":"","url":"https://api.github.com/users/tuxji","html_url":"https://github.com/tuxji","followers_url":"https://api.github.com/users/tuxji/followers","following_url":"https://api.github.com/users/tuxji/following{/other_user}","gists_url":"https://api.github.com/users/tuxji/gists{/gist_id}","starred_url":"https://api.github.com/users/tuxji/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tuxji/subscriptions","organizations_url":"https://api.github.com/users/tuxji/orgs","repos_url":"https://api.github.com/users/tuxji/repos","events_url":"https://api.github.com/users/tuxji/events{/privacy}","received_events_url":"https://api.github.com/users/tuxji/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-02-18T18:20:45Z","updated_at":"2022-02-18T18:20:45Z","author_association":"CONTRIBUTOR","body":"@alexanderrevello, how did these additional commits (written by other contributors) appear in your branch?  We no longer can see only your own changes (we see other contributors' changes mixed with your changes) so we cannot review your pull request anymore. \r\n\r\nPlease don't deviate from Apache Daffodil's [code contributor workflow](https://cwiki.apache.org/confluence/display/DAFFODIL/Code+Contributor+Workflow).  You will have to close this pull request, make a new pull request with a single commit on a fresh branch, wait for reviewers to request changes, add new commits to address these requests, and repeat until you have two +1's approving your pull request.  Then you can rebase your branch upon the latest changes in the main branch, squash your commits down to a single commit, and wait for a Daffodil committer to merge your pull request.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1044961871/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1048238930","html_url":"https://github.com/apache/daffodil/pull/759#issuecomment-1048238930","issue_url":"https://api.github.com/repos/apache/daffodil/issues/759","id":1048238930,"node_id":"IC_kwDOBhBG1s4-ettS","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-02-22T21:41:15Z","updated_at":"2022-02-22T21:41:15Z","author_association":"MEMBER","body":"In the future, you don't need to close a pull request if you have updates. You can just push changes to your branch and the PR will be updated. Once the PR is approve, you can squash + force push and we can merge the PR. It makes it a little easier if all the changes are in a single PR.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1048238930/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1048376494","html_url":"https://github.com/apache/daffodil/pull/759#issuecomment-1048376494","issue_url":"https://api.github.com/repos/apache/daffodil/issues/759","id":1048376494,"node_id":"IC_kwDOBhBG1s4-fPSu","user":{"login":"alexanderrevello","id":99432504,"node_id":"U_kgDOBe04OA","avatar_url":"https://avatars.githubusercontent.com/u/99432504?v=4","gravatar_id":"","url":"https://api.github.com/users/alexanderrevello","html_url":"https://github.com/alexanderrevello","followers_url":"https://api.github.com/users/alexanderrevello/followers","following_url":"https://api.github.com/users/alexanderrevello/following{/other_user}","gists_url":"https://api.github.com/users/alexanderrevello/gists{/gist_id}","starred_url":"https://api.github.com/users/alexanderrevello/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexanderrevello/subscriptions","organizations_url":"https://api.github.com/users/alexanderrevello/orgs","repos_url":"https://api.github.com/users/alexanderrevello/repos","events_url":"https://api.github.com/users/alexanderrevello/events{/privacy}","received_events_url":"https://api.github.com/users/alexanderrevello/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-02-23T01:38:46Z","updated_at":"2022-02-23T01:38:46Z","author_association":"CONTRIBUTOR","body":"Sorry I misinterpreted the single commit and other rules disallowing merging, I will not do this again in the future","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1048376494/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1050025941","html_url":"https://github.com/apache/daffodil/pull/762#issuecomment-1050025941","issue_url":"https://api.github.com/repos/apache/daffodil/issues/762","id":1050025941,"node_id":"IC_kwDOBhBG1s4-lh_V","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-02-24T16:20:10Z","updated_at":"2022-02-24T16:20:10Z","author_association":"MEMBER","body":"@alexanderrevello, looks good, can you please add the bug number (DAFFODIL-2575) to the end of the commit message, and update the commit message to be more accurate? I think \"restore unneeded input file\" doesn't really make sense in the context of just this single commit. See Step 10 of the [Code Contributor Workflow](https://cwiki.apache.org/confluence/display/DAFFODIL/Code+Contributor+Workflow) for commit message guidance.\r\n\r\nAlso, I just noticed your git commit name is `U-COLUMBIA\\arevello` and email is `arevello@N12157207.columbia.tresys.com` You don't have to change this, but this looks like some default set by git. Might be worth updating this since you'll need to amend the commit to add the bug number anyway.\r\n\r\nOnce fixed, you can force push and this should be good to merge :+1: ","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1050025941/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1063298806","html_url":"https://github.com/apache/daffodil/pull/769#issuecomment-1063298806","issue_url":"https://api.github.com/repos/apache/daffodil/issues/769","id":1063298806,"node_id":"IC_kwDOBhBG1s4_YKb2","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-03-09T19:50:34Z","updated_at":"2022-03-09T19:50:34Z","author_association":"MEMBER","body":"+1","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1063298806/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1065346236","html_url":"https://github.com/apache/daffodil/pull/772#issuecomment-1065346236","issue_url":"https://api.github.com/repos/apache/daffodil/issues/772","id":1065346236,"node_id":"IC_kwDOBhBG1s4_f-S8","user":{"login":"mbeckerle","id":1524099,"node_id":"MDQ6VXNlcjE1MjQwOTk=","avatar_url":"https://avatars.githubusercontent.com/u/1524099?v=4","gravatar_id":"","url":"https://api.github.com/users/mbeckerle","html_url":"https://github.com/mbeckerle","followers_url":"https://api.github.com/users/mbeckerle/followers","following_url":"https://api.github.com/users/mbeckerle/following{/other_user}","gists_url":"https://api.github.com/users/mbeckerle/gists{/gist_id}","starred_url":"https://api.github.com/users/mbeckerle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbeckerle/subscriptions","organizations_url":"https://api.github.com/users/mbeckerle/orgs","repos_url":"https://api.github.com/users/mbeckerle/repos","events_url":"https://api.github.com/users/mbeckerle/events{/privacy}","received_events_url":"https://api.github.com/users/mbeckerle/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-03-11T17:53:18Z","updated_at":"2022-03-11T17:53:18Z","author_association":"CONTRIBUTOR","body":"How do I do a CLI test that insists that a particular string is NOT present. \r\n\r\nCan the expect utility just grab all output without hanging waiting for anything, and then I can \r\nsearch it?","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1065346236/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1065356416","html_url":"https://github.com/apache/daffodil/pull/772#issuecomment-1065356416","issue_url":"https://api.github.com/repos/apache/daffodil/issues/772","id":1065356416,"node_id":"IC_kwDOBhBG1s4_gAyA","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-03-11T18:06:22Z","updated_at":"2022-03-11T18:06:22Z","author_association":"MEMBER","body":"The `expect()` function resturns a [Result](http://javadox.com/net.sf.expectit/expectit-core/0.9.0/net/sf/expectit/Result.html), which has a `getBefore` function to to get the data before the match. Though it just says \"part of the data\". I'm not sure how back far it goes. Maybe it's some small buffer, maybe it's since the previous expect call? Not sure. If you can `expect` a string that is guaranteed to appear after a warning (if a warning were printed), then that /might/ work.  ","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/1065356416/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]