[{"url":"https://api.github.com/repos/apache/druid/issues/comments/338310310","html_url":"https://github.com/apache/druid/pull/4973#issuecomment-338310310","issue_url":"https://api.github.com/repos/apache/druid/issues/4973","id":338310310,"node_id":"MDEyOklzc3VlQ29tbWVudDMzODMxMDMxMA==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-10-20T20:09:56Z","updated_at":"2017-10-20T20:09:56Z","author_association":"CONTRIBUTOR","body":"Thanks for the additional comments @leventov. I can review again when this is no longer WIP.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/338310310/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/338311913","html_url":"https://github.com/apache/druid/issues/4947#issuecomment-338311913","issue_url":"https://api.github.com/repos/apache/druid/issues/4947","id":338311913,"node_id":"MDEyOklzc3VlQ29tbWVudDMzODMxMTkxMw==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-10-20T20:17:10Z","updated_at":"2017-10-20T20:17:10Z","author_association":"CONTRIBUTOR","body":"i see so you have cache enabled on broker as well and it only sends query to historical if they were not in cache and historical is consequently not going to find those in cache.\r\n\r\nhave you tried setting `druid.historical.cache.useCache=false` on historicals and `druid.realtime.cache.useCache=false` on realtime processes?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/338311913/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/338314566","html_url":"https://github.com/apache/druid/issues/4947#issuecomment-338314566","issue_url":"https://api.github.com/repos/apache/druid/issues/4947","id":338314566,"node_id":"MDEyOklzc3VlQ29tbWVudDMzODMxNDU2Ng==","user":{"login":"leventov","id":609240,"node_id":"MDQ6VXNlcjYwOTI0MA==","avatar_url":"https://avatars.githubusercontent.com/u/609240?v=4","gravatar_id":"","url":"https://api.github.com/users/leventov","html_url":"https://github.com/leventov","followers_url":"https://api.github.com/users/leventov/followers","following_url":"https://api.github.com/users/leventov/following{/other_user}","gists_url":"https://api.github.com/users/leventov/gists{/gist_id}","starred_url":"https://api.github.com/users/leventov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leventov/subscriptions","organizations_url":"https://api.github.com/users/leventov/orgs","repos_url":"https://api.github.com/users/leventov/repos","events_url":"https://api.github.com/users/leventov/events{/privacy}","received_events_url":"https://api.github.com/users/leventov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-10-20T20:29:30Z","updated_at":"2017-10-20T20:29:30Z","author_association":"MEMBER","body":"@himanshug I didn't know about those configs. BTW there is hybrid cache and local L1 level is still used for get.\r\n\r\nAlso, why `druid.realtime.cache` exist? does it cache anything?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/338314566/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/338321759","html_url":"https://github.com/apache/druid/pull/4890#issuecomment-338321759","issue_url":"https://api.github.com/repos/apache/druid/issues/4890","id":338321759,"node_id":"MDEyOklzc3VlQ29tbWVudDMzODMyMTc1OQ==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-10-20T21:03:35Z","updated_at":"2017-10-20T21:03:35Z","author_association":"CONTRIBUTOR","body":"@gianm it might be worth documenting the limitation of this feature at least in TransformSpec class javadoc. It allows once to transform value in individual row columns but you can't add/remove columns.... would help people looking at it to learn that fact quickly and not think that it allows complete row transform.\r\n\r\nsidenote: unrelated to this PR,  I took another look at `janino` ( http://janino-compiler.github.io/janino/ ) today and it appears to have added `security` support. in the long run, it might be good to remove both math-expressions and javascript, and add support for janino-expressions only... that would help enable more sophisticated transformations than possible currently (including that of transforming the row completely) and still be safe. only con I see is that user code can still allocate arbitrary amount of memory but that is probably not the real `security` concern but more of user error leading to process going down... not great but possibly not as bad as javascript.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/338321759/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/338323484","html_url":"https://github.com/apache/druid/issues/4947#issuecomment-338323484","issue_url":"https://api.github.com/repos/apache/druid/issues/4947","id":338323484,"node_id":"MDEyOklzc3VlQ29tbWVudDMzODMyMzQ4NA==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-10-20T21:12:45Z","updated_at":"2017-10-20T21:13:01Z","author_association":"CONTRIBUTOR","body":"can't remember but `druid.realtime.cache` is possibly used for caching final segments which have not been handed off .\r\n\r\n> BTW there is hybrid cache and local L1 level is still used for get.\r\n\r\nso you don't want to avoid get on cache altogether and in case of hybrid cache still wanna check in L1 .  given that 99% of time you have cache miss, I'm not sure how much benefit is there. \r\n\r\nbut if you still want to be that granular, then I think you probably should add more config to `HybridCache` rather than `MemCache` so that it can be made to only do gets on L1 and not on L2.... users can use non memcache things also as remote cache so this option would be more general.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/338323484/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/338324217","html_url":"https://github.com/apache/druid/pull/4890#issuecomment-338324217","issue_url":"https://api.github.com/repos/apache/druid/issues/4890","id":338324217,"node_id":"MDEyOklzc3VlQ29tbWVudDMzODMyNDIxNw==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-10-20T21:16:28Z","updated_at":"2017-10-20T21:16:28Z","author_association":"CONTRIBUTOR","body":"@himanshug I would say a transform _can_ be used to add columns (as long as those columns are functions of existing ones…). And I guess you could use it to sort of \"remove\" a column in a sense, by overwriting it with one that is just all nulls? Anyway, I just pushed a new javadoc that is more clear.\r\n\r\nI also took your suggestion in https://github.com/druid-io/druid/pull/4890#discussion_r146064560 and added the sanity check.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/338324217/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/338324918","html_url":"https://github.com/apache/druid/pull/4890#issuecomment-338324918","issue_url":"https://api.github.com/repos/apache/druid/issues/4890","id":338324918,"node_id":"MDEyOklzc3VlQ29tbWVudDMzODMyNDkxOA==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-10-20T21:19:45Z","updated_at":"2017-10-20T21:19:45Z","author_association":"CONTRIBUTOR","body":"@gianm dint reallize all the possibilties, so that doc helps. thanks.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/338324918/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/338325829","html_url":"https://github.com/apache/druid/issues/4947#issuecomment-338325829","issue_url":"https://api.github.com/repos/apache/druid/issues/4947","id":338325829,"node_id":"MDEyOklzc3VlQ29tbWVudDMzODMyNTgyOQ==","user":{"login":"leventov","id":609240,"node_id":"MDQ6VXNlcjYwOTI0MA==","avatar_url":"https://avatars.githubusercontent.com/u/609240?v=4","gravatar_id":"","url":"https://api.github.com/users/leventov","html_url":"https://github.com/leventov","followers_url":"https://api.github.com/users/leventov/followers","following_url":"https://api.github.com/users/leventov/following{/other_user}","gists_url":"https://api.github.com/users/leventov/gists{/gist_id}","starred_url":"https://api.github.com/users/leventov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leventov/subscriptions","organizations_url":"https://api.github.com/users/leventov/orgs","repos_url":"https://api.github.com/users/leventov/repos","events_url":"https://api.github.com/users/leventov/events{/privacy}","received_events_url":"https://api.github.com/users/leventov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-10-20T21:24:16Z","updated_at":"2017-10-20T21:24:16Z","author_association":"MEMBER","body":"@himanshug ok, I agree. I closed #4972 and will prepare a PR that alters hybrid cache config, rather than memcached","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/338325829/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/338332275","html_url":"https://github.com/apache/druid/issues/4992#issuecomment-338332275","issue_url":"https://api.github.com/repos/apache/druid/issues/4992","id":338332275,"node_id":"MDEyOklzc3VlQ29tbWVudDMzODMzMjI3NQ==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-10-20T21:59:25Z","updated_at":"2017-10-20T21:59:25Z","author_association":"CONTRIBUTOR","body":"@leventov what version of code are brokers running ? ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/338332275/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/338332375","html_url":"https://github.com/apache/druid/issues/4992#issuecomment-338332375","issue_url":"https://api.github.com/repos/apache/druid/issues/4992","id":338332375,"node_id":"MDEyOklzc3VlQ29tbWVudDMzODMzMjM3NQ==","user":{"login":"leventov","id":609240,"node_id":"MDQ6VXNlcjYwOTI0MA==","avatar_url":"https://avatars.githubusercontent.com/u/609240?v=4","gravatar_id":"","url":"https://api.github.com/users/leventov","html_url":"https://github.com/leventov","followers_url":"https://api.github.com/users/leventov/followers","following_url":"https://api.github.com/users/leventov/following{/other_user}","gists_url":"https://api.github.com/users/leventov/gists{/gist_id}","starred_url":"https://api.github.com/users/leventov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leventov/subscriptions","organizations_url":"https://api.github.com/users/leventov/orgs","repos_url":"https://api.github.com/users/leventov/repos","events_url":"https://api.github.com/users/leventov/events{/privacy}","received_events_url":"https://api.github.com/users/leventov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-10-20T21:59:57Z","updated_at":"2017-10-20T22:00:15Z","author_association":"MEMBER","body":"@himanshug 0.11.0. And 0.10.1 router sees them","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/338332375/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/338333718","html_url":"https://github.com/apache/druid/issues/4992#issuecomment-338333718","issue_url":"https://api.github.com/repos/apache/druid/issues/4992","id":338333718,"node_id":"MDEyOklzc3VlQ29tbWVudDMzODMzMzcxOA==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-10-20T22:08:12Z","updated_at":"2017-10-20T22:15:12Z","author_association":"CONTRIBUTOR","body":"ok, that is unexpected. ...  I think I tested it but I'll check it again and see if I'm able to repro it.\r\n\r\nbut can you check \r\n`http://coord-host:port/druid/coordinator/v1/cluster` and `http://router-host:port/druid/router/v1/brokers` to see if brokers are showing up anywhere.\r\n\r\nif not, then can you see in broker log if they printed https://github.com/druid-io/druid/blob/0.11.0/server/src/main/java/io/druid/curator/discovery/CuratorDruidNodeAnnouncer.java#L71\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/338333718/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/338334889","html_url":"https://github.com/apache/druid/issues/4992#issuecomment-338334889","issue_url":"https://api.github.com/repos/apache/druid/issues/4992","id":338334889,"node_id":"MDEyOklzc3VlQ29tbWVudDMzODMzNDg4OQ==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-10-20T22:15:34Z","updated_at":"2017-10-20T22:15:34Z","author_association":"CONTRIBUTOR","body":"updated `http://router-host:port/druid/router/v1/brokers` in above comment","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/338334889/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/338339512","html_url":"https://github.com/apache/druid/pull/4815#issuecomment-338339512","issue_url":"https://api.github.com/repos/apache/druid/issues/4815","id":338339512,"node_id":"MDEyOklzc3VlQ29tbWVudDMzODMzOTUxMg==","user":{"login":"dclim","id":11050882,"node_id":"MDQ6VXNlcjExMDUwODgy","avatar_url":"https://avatars.githubusercontent.com/u/11050882?v=4","gravatar_id":"","url":"https://api.github.com/users/dclim","html_url":"https://github.com/dclim","followers_url":"https://api.github.com/users/dclim/followers","following_url":"https://api.github.com/users/dclim/following{/other_user}","gists_url":"https://api.github.com/users/dclim/gists{/gist_id}","starred_url":"https://api.github.com/users/dclim/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dclim/subscriptions","organizations_url":"https://api.github.com/users/dclim/orgs","repos_url":"https://api.github.com/users/dclim/repos","events_url":"https://api.github.com/users/dclim/events{/privacy}","received_events_url":"https://api.github.com/users/dclim/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-10-20T22:46:53Z","updated_at":"2017-10-20T22:46:53Z","author_association":"CONTRIBUTOR","body":"Right now it looks like tasks only get checkpointed when the number of rows in a segment exceed `maxRowsPerSegment`, which means that if `maxRowsPerSegment` is never hit then the intermediate publishing never happens. It would be nice to have some mechanism, probably controlled by the supervisor, where you can define a period based checkpointing, so even if `taskDuration` is PT1H, you could have it do an intermediate publish every 15 minutes.\r\n\r\nAlso, it might make sense to add a 'perform checkpoint now' route to the supervisor API so that users can manually trigger an immediate checkpoint since it doesn't look like it would be a lot of additional work. Asides from being useful for testing, I could also see it being useful for cases where users are working through a big backlog of data in Kafka and their normal steady-state configs would fail with the load; rather than submit an updated supervisor, they could maintain the same configuration but just manually trigger checkpoints to hand off the data in smaller chunks. I don't see this being as useful as the time-based checkpointing, but again maybe worth it since there's very little to do to enable it.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/338339512/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/338340006","html_url":"https://github.com/apache/druid/issues/4992#issuecomment-338340006","issue_url":"https://api.github.com/repos/apache/druid/issues/4992","id":338340006,"node_id":"MDEyOklzc3VlQ29tbWVudDMzODM0MDAwNg==","user":{"login":"leventov","id":609240,"node_id":"MDQ6VXNlcjYwOTI0MA==","avatar_url":"https://avatars.githubusercontent.com/u/609240?v=4","gravatar_id":"","url":"https://api.github.com/users/leventov","html_url":"https://github.com/leventov","followers_url":"https://api.github.com/users/leventov/followers","following_url":"https://api.github.com/users/leventov/following{/other_user}","gists_url":"https://api.github.com/users/leventov/gists{/gist_id}","starred_url":"https://api.github.com/users/leventov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leventov/subscriptions","organizations_url":"https://api.github.com/users/leventov/orgs","repos_url":"https://api.github.com/users/leventov/repos","events_url":"https://api.github.com/users/leventov/events{/privacy}","received_events_url":"https://api.github.com/users/leventov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-10-20T22:50:48Z","updated_at":"2017-10-20T22:50:48Z","author_association":"MEMBER","body":"@himanshug brokers are visible, for sure. It's from router 0.11 logs:\r\n```\r\nINFO [NodeTypeWatcher[broker]] i.d.c.d.CuratorDruidNodeDiscoveryProvider$NodeTypeWatcher - Received event [CHILD_ADDED] for Node[broker:DiscoveryDruidNode{druidNode=Druid\r\nNode{serviceName='druid/metrics/bard', host='someHost', port=-1, plaintextPort=somePort, enablePlaintextPort=true, tlsPort=-1, enableTlsPort=false}, nodeType='broker', services={lookupNodeServi\r\nce=LookupNodeService{lookupTier='historical'}}}]. - []\r\n```\r\n\r\nbut later:\r\n```\r\nERROR [id] i.d.s.r.QueryHostFinder - WTF?! No server found for serviceName[druid:metrics:bard]. Using backup - []\r\n```\r\n\r\nCould it be `druid/metrics/bard` vs. `druid:metrics:bard` problem somehow?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/338340006/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/338358542","html_url":"https://github.com/apache/druid/issues/4992#issuecomment-338358542","issue_url":"https://api.github.com/repos/apache/druid/issues/4992","id":338358542,"node_id":"MDEyOklzc3VlQ29tbWVudDMzODM1ODU0Mg==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-10-21T02:41:04Z","updated_at":"2017-10-21T02:41:04Z","author_association":"CONTRIBUTOR","body":"it looks like `druid.service=druid/metrics/bard` on brokers. and, on router config, you have `druid:metrics:bard` . From the code, it looks like there is magic replacement of '/' to ':' while announcement and discovery in the older code.\r\nI think it would work fine if in the router config you used same service name as provider to broker in its properties i.e. `druid/metrics/bard`. please see if that works.\r\n\r\nif that is indeed the problem, then we'll probably mention it in release notes. this magic is unnecessary and confusing. it was probably needed in older code because serviceName was used in zk path.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/338358542/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/338360959","html_url":"https://github.com/apache/druid/pull/4993#issuecomment-338360959","issue_url":"https://api.github.com/repos/apache/druid/issues/4993","id":338360959,"node_id":"MDEyOklzc3VlQ29tbWVudDMzODM2MDk1OQ==","user":{"login":"ghost","id":10137,"node_id":"MDQ6VXNlcjEwMTM3","avatar_url":"https://avatars.githubusercontent.com/u/10137?v=4","gravatar_id":"","url":"https://api.github.com/users/ghost","html_url":"https://github.com/ghost","followers_url":"https://api.github.com/users/ghost/followers","following_url":"https://api.github.com/users/ghost/following{/other_user}","gists_url":"https://api.github.com/users/ghost/gists{/gist_id}","starred_url":"https://api.github.com/users/ghost/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ghost/subscriptions","organizations_url":"https://api.github.com/users/ghost/orgs","repos_url":"https://api.github.com/users/ghost/repos","events_url":"https://api.github.com/users/ghost/events{/privacy}","received_events_url":"https://api.github.com/users/ghost/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-10-21T03:35:43Z","updated_at":"2017-10-21T03:35:43Z","author_association":"NONE","body":"We were seeing persistent bugs in cached select queries primarily (I realize this isn't enabled by default, which is why it may have remained hidden) but this change applies to all query caching.\r\n\r\nThe problem we saw was that we would have a query that spanned several segments, and if the first segment had empty data, then cached query results would either throw parse exceptions or return strange results where the first event was fine, but all subsequent events were null or broken somehow.\r\n\r\nIt turns out the binary serialization seems to intern strings and then refer to them later by index, or something. These references aren't valid if you start concatenating stuff, but in the usual case where all parts of the result set have all the column names in them, you end up making exactly the same set of back-references each time so it's sort of hidden. In the case where the first result is missing some entries, then the back-references start to refer to arbitrary other strings, and so instead of a field named \"segmentId\" being deserialized it would be some other random thing.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/338360959/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/338389241","html_url":"https://github.com/apache/druid/issues/4977#issuecomment-338389241","issue_url":"https://api.github.com/repos/apache/druid/issues/4977","id":338389241,"node_id":"MDEyOklzc3VlQ29tbWVudDMzODM4OTI0MQ==","user":{"login":"l15k4","id":518855,"node_id":"MDQ6VXNlcjUxODg1NQ==","avatar_url":"https://avatars.githubusercontent.com/u/518855?v=4","gravatar_id":"","url":"https://api.github.com/users/l15k4","html_url":"https://github.com/l15k4","followers_url":"https://api.github.com/users/l15k4/followers","following_url":"https://api.github.com/users/l15k4/following{/other_user}","gists_url":"https://api.github.com/users/l15k4/gists{/gist_id}","starred_url":"https://api.github.com/users/l15k4/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/l15k4/subscriptions","organizations_url":"https://api.github.com/users/l15k4/orgs","repos_url":"https://api.github.com/users/l15k4/repos","events_url":"https://api.github.com/users/l15k4/events{/privacy}","received_events_url":"https://api.github.com/users/l15k4/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-10-21T12:18:01Z","updated_at":"2017-10-21T12:18:01Z","author_association":"NONE","body":"Sorry I miss clicked and closed the issue ...","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/338389241/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/338433040","html_url":"https://github.com/apache/druid/pull/4815#issuecomment-338433040","issue_url":"https://api.github.com/repos/apache/druid/issues/4815","id":338433040,"node_id":"MDEyOklzc3VlQ29tbWVudDMzODQzMzA0MA==","user":{"login":"pjain1","id":11787983,"node_id":"MDQ6VXNlcjExNzg3OTgz","avatar_url":"https://avatars.githubusercontent.com/u/11787983?v=4","gravatar_id":"","url":"https://api.github.com/users/pjain1","html_url":"https://github.com/pjain1","followers_url":"https://api.github.com/users/pjain1/followers","following_url":"https://api.github.com/users/pjain1/following{/other_user}","gists_url":"https://api.github.com/users/pjain1/gists{/gist_id}","starred_url":"https://api.github.com/users/pjain1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pjain1/subscriptions","organizations_url":"https://api.github.com/users/pjain1/orgs","repos_url":"https://api.github.com/users/pjain1/repos","events_url":"https://api.github.com/users/pjain1/events{/privacy}","received_events_url":"https://api.github.com/users/pjain1/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-10-21T21:17:21Z","updated_at":"2017-10-21T21:23:32Z","author_association":"MEMBER","body":"@dclim Thanks for the review comments. I have resolved some and working on others.\r\n\r\nRegarding, indexing performance, I am also curious to compare that but didn't got a chance to do so. However, we have been running the new code with same task count as with previous code so guessing not much changed (it probably might have decreased a bit because of extra overhead). I am planning to deploy the previous indexing service and compare the ingest/events/processed metrics with current one. \r\n\r\nRegarding, time based checkpointing - are you suggesting when enabled apart from maxRowsInSegment threshold, time threshold will be considered as well and whichever threshold is hit earlier, checkpointing will be done ? In case of time based checkpointing, there is a potential to create small sized segments, so I am not sure what advantage it gives us over just waiting for either maxRowsInSegment limit to hit or taskDuration to get over. The only advantage I can see is if taskDuration is too high and ingest event rate is too low then there is potential to reindex events in case we loose all task replicas.\r\n\r\nRegarding, perform checkpoint now - I understand it might be a good feature to have. However, the example that you specifically mentioned I am not sure why it is useful when there is a big backlog, how is handing off data in smaller chunks help ? Is it just winning the race against Kafka retention rules so that we don't loose much if Kafka drops data before the task could publish segments for a sequence or anything else ? We can discuss this in next dev sync as well if that is more convenient. ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/338433040/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/338433619","html_url":"https://github.com/apache/druid/pull/4993#issuecomment-338433619","issue_url":"https://api.github.com/repos/apache/druid/issues/4993","id":338433619,"node_id":"MDEyOklzc3VlQ29tbWVudDMzODQzMzYxOQ==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-10-21T21:27:34Z","updated_at":"2017-10-21T21:27:34Z","author_association":"CONTRIBUTOR","body":"The integration test failure seems legitimate.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/338433619/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/338434662","html_url":"https://github.com/apache/druid/pull/4815#issuecomment-338434662","issue_url":"https://api.github.com/repos/apache/druid/issues/4815","id":338434662,"node_id":"MDEyOklzc3VlQ29tbWVudDMzODQzNDY2Mg==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-10-21T21:45:40Z","updated_at":"2017-10-21T21:45:40Z","author_association":"CONTRIBUTOR","body":"@pjain1 I tried this on one of our internal clusters and found one issue: when upgrading from an older version, since the AppenderatorDriverMetadata changed, any restored tasks immediately fail with NPE. They do seem to get retried fine, and the system eventually recovers, but it would be nice to handle it better if possible. Ideal would be to be able to restore older metadata in some sane way. If that's not possible then at least a better error message would be good, so users understand the error is related to upgrading and should be recovered soon.\r\n\r\nI'm wondering, are there any other potential issues related to upgrading? Has the protocol changed in such a way that old supervisors cannot talk to new tasks, or the new supervisor cannot talk to old tasks?\r\n\r\nI'll keep this patch running on our internal clusters so we can see how it shakes out there.\r\n\r\nThe error I got was,\r\n\r\n```\r\n2017-10-21T20:16:31,529 INFO [task-runner-0-priority-0] io.druid.segment.realtime.appenderator.AppenderatorDriver - Restored metadata[AppenderatorDriverMetadata{segments=null, lastSegmentIds={index_kafka_metrics-int_0ea3d787eb71af2_0=metrics-int_2017-10-21T20:00:00.000Z_2017-10-21T21:00:00.000Z_2017-10-21T20:00:04.838Z}, callerMetadata={nextPartitions={topic=imply-metrics, partitionOffsetMap={0=5657076237}}}}].\r\n2017-10-21T20:16:31,913 ERROR [task-runner-0-priority-0] io.druid.indexing.overlord.ThreadPoolTaskRunner - Exception while running task[KafkaIndexTask{id=index_kafka_metrics-int_0ea3d787eb71af2_cbldckbp, type=index_kafka, dataSource=metrics-int}]\r\njava.lang.NullPointerException\r\n\tat io.druid.segment.realtime.appenderator.AppenderatorDriver.startJob(AppenderatorDriver.java:189) ~[druid-server-0.11.1-SNAPSHOT.jar:0.11.1-SNAPSHOT]\r\n\tat io.druid.indexing.kafka.KafkaIndexTask.run(KafkaIndexTask.java:488) ~[?:?]\r\n\tat io.druid.indexing.overlord.ThreadPoolTaskRunner$ThreadPoolTaskRunnerCallable.call(ThreadPoolTaskRunner.java:436) [druid-indexing-service-0.11.1-SNAPSHOT.jar:0.11.1-SNAPSHOT]\r\n\tat io.druid.indexing.overlord.ThreadPoolTaskRunner$ThreadPoolTaskRunnerCallable.call(ThreadPoolTaskRunner.java:408) [druid-indexing-service-0.11.1-SNAPSHOT.jar:0.11.1-SNAPSHOT]\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_131]\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_131]\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_131]\r\n\tat java.lang.Thread.run(Thread.java:748) [?:1.8.0_131]\r\n2017-10-21T20:16:31,915 INFO [task-runner-0-priority-0] io.druid.indexing.overlord.TaskRunnerUtils - Task [index_kafka_metrics-int_0ea3d787eb71af2_cbldckbp] status changed to [FAILED].\r\n2017-10-21T20:16:31,960 INFO [task-runner-0-priority-0] io.druid.indexing.worker.executor.ExecutorLifecycle - Task completed with status: {\r\n  \"id\" : \"index_kafka_metrics-int_0ea3d787eb71af2_cbldckbp\",\r\n  \"status\" : \"FAILED\",\r\n  \"duration\" : 3221\r\n}\r\n```","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/338434662/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/338435211","html_url":"https://github.com/apache/druid/pull/4815#issuecomment-338435211","issue_url":"https://api.github.com/repos/apache/druid/issues/4815","id":338435211,"node_id":"MDEyOklzc3VlQ29tbWVudDMzODQzNTIxMQ==","user":{"login":"pjain1","id":11787983,"node_id":"MDQ6VXNlcjExNzg3OTgz","avatar_url":"https://avatars.githubusercontent.com/u/11787983?v=4","gravatar_id":"","url":"https://api.github.com/users/pjain1","html_url":"https://github.com/pjain1","followers_url":"https://api.github.com/users/pjain1/followers","following_url":"https://api.github.com/users/pjain1/following{/other_user}","gists_url":"https://api.github.com/users/pjain1/gists{/gist_id}","starred_url":"https://api.github.com/users/pjain1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pjain1/subscriptions","organizations_url":"https://api.github.com/users/pjain1/orgs","repos_url":"https://api.github.com/users/pjain1/repos","events_url":"https://api.github.com/users/pjain1/events{/privacy}","received_events_url":"https://api.github.com/users/pjain1/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-10-21T21:56:55Z","updated_at":"2017-10-21T22:03:14Z","author_association":"MEMBER","body":"@gianm Yes you are correct, AppenderatorDriverMetadata has changed and would cause tasks to not recover. \r\n\r\nThere are protocol changes on both supervisor and as well as task side. Upgrading overlord first is disastrous. On supervisor restart it will ask for checkpoints from the tasks and they wouldn't return anything and overlord will keep on killing tasks until Middle managers are running new code and can return checkpoints. If Middle Managers are upgraded first then there is a slight chance that some checkpoint limit is hit before overlord is upgraded and checkpoint action is submitted to supervisor but supervisor does not know how to handle it.\r\n\r\nAs of now, only clean way of upgrading is to stop all supervisors and upgrade the code on both overlord and middle manager and resubmit them. \r\n\r\nI would also suggest to have at least all the commits till \"fix pendingCompletionTaskGroup check - 96fb88b\" in the code that you are trying on internal cluster.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/338435211/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/338439017","html_url":"https://github.com/apache/druid/pull/4993#issuecomment-338439017","issue_url":"https://api.github.com/repos/apache/druid/issues/4993","id":338439017,"node_id":"MDEyOklzc3VlQ29tbWVudDMzODQzOTAxNw==","user":{"login":"ghost","id":10137,"node_id":"MDQ6VXNlcjEwMTM3","avatar_url":"https://avatars.githubusercontent.com/u/10137?v=4","gravatar_id":"","url":"https://api.github.com/users/ghost","html_url":"https://github.com/ghost","followers_url":"https://api.github.com/users/ghost/followers","following_url":"https://api.github.com/users/ghost/following{/other_user}","gists_url":"https://api.github.com/users/ghost/gists{/gist_id}","starred_url":"https://api.github.com/users/ghost/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ghost/subscriptions","organizations_url":"https://api.github.com/users/ghost/orgs","repos_url":"https://api.github.com/users/ghost/repos","events_url":"https://api.github.com/users/ghost/events{/privacy}","received_events_url":"https://api.github.com/users/ghost/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-10-21T23:17:46Z","updated_at":"2017-10-21T23:17:46Z","author_association":"NONE","body":"Thanks for the review feedback Gian; I will cook up a unit test displaying the failure and see if it's possible to avoid materializing the list. I wonder if there's a way for readValues to reset its decoder state between values or something, which would also fix the problem in a backwards-compatible way. \r\n\r\nI'm finding very little documentation on the binary coding used by Jackson here (it doesn't look like BSON) and so this was super difficult to diagnose and my explanation may be totally wrong.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/338439017/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/338439600","html_url":"https://github.com/apache/druid/pull/4993#issuecomment-338439600","issue_url":"https://api.github.com/repos/apache/druid/issues/4993","id":338439600,"node_id":"MDEyOklzc3VlQ29tbWVudDMzODQzOTYwMA==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-10-21T23:28:59Z","updated_at":"2017-10-21T23:28:59Z","author_association":"CONTRIBUTOR","body":"The format is probably Smile (https://github.com/FasterXML/smile-format-specification).\r\n\r\nI think it may actually be fine to change the format to a JSON array, if that ends up being the easiest way to fix the problem. Since `readValues` can read either an array-wrapped or non-array-wrapped sequence, and the old code (in released versions) is calling `readValues`, it should be able to handle a switch to array wrapping.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/338439600/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/338439774","html_url":"https://github.com/apache/druid/pull/4993#issuecomment-338439774","issue_url":"https://api.github.com/repos/apache/druid/issues/4993","id":338439774,"node_id":"MDEyOklzc3VlQ29tbWVudDMzODQzOTc3NA==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-10-21T23:32:45Z","updated_at":"2017-10-21T23:32:45Z","author_association":"CONTRIBUTOR","body":"> I wonder if there's a way for readValues to reset its decoder state between values or something, which would also fix the problem in a backwards-compatible way.\r\n\r\nTo me, it seems better to fix the problem at the serialization side, rather than at deserialization. Then we'll get the advantages that backreferences were supposed to be giving us.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/338439774/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/338440269","html_url":"https://github.com/apache/druid/pull/4815#issuecomment-338440269","issue_url":"https://api.github.com/repos/apache/druid/issues/4815","id":338440269,"node_id":"MDEyOklzc3VlQ29tbWVudDMzODQ0MDI2OQ==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-10-21T23:44:32Z","updated_at":"2017-10-21T23:44:32Z","author_association":"CONTRIBUTOR","body":"@pjain1 thanks for the details.\r\n\r\nIs there anything (hopefully somewhat simple) that we can do to make upgrading easier for people? \"stop all supervisors and upgrade the code on both overlord and middle manager and resubmit\" is pretty labor intensive and will incur some noticeable downtime. It's not absolutely critical (KIS is still experimental after all…) but it would be nice.\r\n\r\nMaybe have the supervisor and tasks fall back to some legacy mode if they can't confirm their counterpart is on a new enough version?\r\n\r\n> I would also suggest to have at least all the commits till \"fix pendingCompletionTaskGroup check - 96fb88b\" in the code that you are trying on internal cluster.\r\n\r\nThanks for the tip. I was missing that commit before, but will push it out to our internal clusters today.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/338440269/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/338440758","html_url":"https://github.com/apache/druid/pull/4993#issuecomment-338440758","issue_url":"https://api.github.com/repos/apache/druid/issues/4993","id":338440758,"node_id":"MDEyOklzc3VlQ29tbWVudDMzODQ0MDc1OA==","user":{"login":"ghost","id":10137,"node_id":"MDQ6VXNlcjEwMTM3","avatar_url":"https://avatars.githubusercontent.com/u/10137?v=4","gravatar_id":"","url":"https://api.github.com/users/ghost","html_url":"https://github.com/ghost","followers_url":"https://api.github.com/users/ghost/followers","following_url":"https://api.github.com/users/ghost/following{/other_user}","gists_url":"https://api.github.com/users/ghost/gists{/gist_id}","starred_url":"https://api.github.com/users/ghost/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ghost/subscriptions","organizations_url":"https://api.github.com/users/ghost/orgs","repos_url":"https://api.github.com/users/ghost/repos","events_url":"https://api.github.com/users/ghost/events{/privacy}","received_events_url":"https://api.github.com/users/ghost/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-10-21T23:57:36Z","updated_at":"2017-10-21T23:57:36Z","author_association":"NONE","body":"Ah yes it's definitely Smile; I should have realized since the \":)\" header is plain as day. You're right, there should be some way to fix it at the encoder level; maybe the coder state can be propagated between values. ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/338440758/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/338441437","html_url":"https://github.com/apache/druid/pull/4993#issuecomment-338441437","issue_url":"https://api.github.com/repos/apache/druid/issues/4993","id":338441437,"node_id":"MDEyOklzc3VlQ29tbWVudDMzODQ0MTQzNw==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-10-22T00:15:45Z","updated_at":"2017-10-22T00:16:00Z","author_association":"CONTRIBUTOR","body":"> You're right, there should be some way to fix it at the encoder level; maybe the coder state can be propagated between values.\r\n\r\nI think using a single JsonGenerator to write all the values should do that (what you get from `mapper.getFactory().createGenerator(OutputStream)`. Although I'm not 100% sure.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/338441437/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/338441440","html_url":"https://github.com/apache/druid/pull/4815#issuecomment-338441440","issue_url":"https://api.github.com/repos/apache/druid/issues/4815","id":338441440,"node_id":"MDEyOklzc3VlQ29tbWVudDMzODQ0MTQ0MA==","user":{"login":"pjain1","id":11787983,"node_id":"MDQ6VXNlcjExNzg3OTgz","avatar_url":"https://avatars.githubusercontent.com/u/11787983?v=4","gravatar_id":"","url":"https://api.github.com/users/pjain1","html_url":"https://github.com/pjain1","followers_url":"https://api.github.com/users/pjain1/followers","following_url":"https://api.github.com/users/pjain1/following{/other_user}","gists_url":"https://api.github.com/users/pjain1/gists{/gist_id}","starred_url":"https://api.github.com/users/pjain1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pjain1/subscriptions","organizations_url":"https://api.github.com/users/pjain1/orgs","repos_url":"https://api.github.com/users/pjain1/repos","events_url":"https://api.github.com/users/pjain1/events{/privacy}","received_events_url":"https://api.github.com/users/pjain1/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-10-22T00:15:49Z","updated_at":"2017-10-22T00:15:49Z","author_association":"MEMBER","body":"@gianm On the task restore part probably this can be tried - a version number can be stored with driver metadata. While restoring, the task can check the version and populate the driver data structures accordingly. If this is done middle managers can be upgraded first, however even after this, there is still a chance that the task might hit maxRowsInSegment before overlord is upgraded and try to submit `CheckPointDataSourceMetadataAction` in which case it will get a non 200 response and as far as I can understand `RemoteTaskActionClient` will keep on retrying, so hopefully overlord will be upgraded by then, if not then task will fail. Does this sound ok ?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/338441440/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/338442009","html_url":"https://github.com/apache/druid/pull/4815#issuecomment-338442009","issue_url":"https://api.github.com/repos/apache/druid/issues/4815","id":338442009,"node_id":"MDEyOklzc3VlQ29tbWVudDMzODQ0MjAwOQ==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-10-22T00:31:46Z","updated_at":"2017-10-22T00:31:46Z","author_association":"CONTRIBUTOR","body":"@pjain1 \r\n\r\nIMO, if we can think of a way to support it, ideally it would be best to support a single middleManager running the new version for a long time, while the overlord and other middleManagers run the old version. That's a common pattern that people use when upgrading clusters (try one MM/historical first and then do the rest). It's also common for rolling updates of large clusters, which can take a while to roll through all middleManagers.\r\n\r\nWould it work to do something like: if CheckPointDataSourceMetadataAction is unrecognized by the server, the task could give up and just not do the incremental publish, and keep going?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/338442009/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/338444077","html_url":"https://github.com/apache/druid/pull/4815#issuecomment-338444077","issue_url":"https://api.github.com/repos/apache/druid/issues/4815","id":338444077,"node_id":"MDEyOklzc3VlQ29tbWVudDMzODQ0NDA3Nw==","user":{"login":"pjain1","id":11787983,"node_id":"MDQ6VXNlcjExNzg3OTgz","avatar_url":"https://avatars.githubusercontent.com/u/11787983?v=4","gravatar_id":"","url":"https://api.github.com/users/pjain1","html_url":"https://github.com/pjain1","followers_url":"https://api.github.com/users/pjain1/followers","following_url":"https://api.github.com/users/pjain1/following{/other_user}","gists_url":"https://api.github.com/users/pjain1/gists{/gist_id}","starred_url":"https://api.github.com/users/pjain1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pjain1/subscriptions","organizations_url":"https://api.github.com/users/pjain1/orgs","repos_url":"https://api.github.com/users/pjain1/repos","events_url":"https://api.github.com/users/pjain1/events{/privacy}","received_events_url":"https://api.github.com/users/pjain1/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-10-22T01:31:47Z","updated_at":"2017-10-22T01:31:47Z","author_association":"MEMBER","body":"@gianm probably overlord can send a flag in the context, indicating whether it supports checkpointing or not. If not then task can revert back to previous logic of moving out segments out of active list than checkpointing.\r\n\r\nHowever, running new code on a single MM might not test much as its not doing incremental handoffs then its not actually testing the new feature for which they are supposed to be upgraded. Running new code on one or subset of MM also means that replication cannot be used as replicas should not get mixed up on new and old MM otherwise they will do different things.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/338444077/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/338449023","html_url":"https://github.com/apache/druid/issues/4992#issuecomment-338449023","issue_url":"https://api.github.com/repos/apache/druid/issues/4992","id":338449023,"node_id":"MDEyOklzc3VlQ29tbWVudDMzODQ0OTAyMw==","user":{"login":"drcrallen","id":8213081,"node_id":"MDQ6VXNlcjgyMTMwODE=","avatar_url":"https://avatars.githubusercontent.com/u/8213081?v=4","gravatar_id":"","url":"https://api.github.com/users/drcrallen","html_url":"https://github.com/drcrallen","followers_url":"https://api.github.com/users/drcrallen/followers","following_url":"https://api.github.com/users/drcrallen/following{/other_user}","gists_url":"https://api.github.com/users/drcrallen/gists{/gist_id}","starred_url":"https://api.github.com/users/drcrallen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/drcrallen/subscriptions","organizations_url":"https://api.github.com/users/drcrallen/orgs","repos_url":"https://api.github.com/users/drcrallen/repos","events_url":"https://api.github.com/users/drcrallen/events{/privacy}","received_events_url":"https://api.github.com/users/drcrallen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-10-22T03:42:40Z","updated_at":"2017-10-22T03:42:40Z","author_association":"CONTRIBUTOR","body":"If that is the case, its a pretty big breaking change","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/338449023/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/338540242","html_url":"https://github.com/apache/druid/pull/4985#issuecomment-338540242","issue_url":"https://api.github.com/repos/apache/druid/issues/4985","id":338540242,"node_id":"MDEyOklzc3VlQ29tbWVudDMzODU0MDI0Mg==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-10-23T03:41:56Z","updated_at":"2017-10-23T03:41:56Z","author_association":"CONTRIBUTOR","body":"Added doc.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/338540242/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/338681354","html_url":"https://github.com/apache/druid/issues/4992#issuecomment-338681354","issue_url":"https://api.github.com/repos/apache/druid/issues/4992","id":338681354,"node_id":"MDEyOklzc3VlQ29tbWVudDMzODY4MTM1NA==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-10-23T14:40:49Z","updated_at":"2017-10-23T14:40:49Z","author_association":"CONTRIBUTOR","body":"yes, it would be incompatible but still allows rolling upgrade. there wouldn't be much value in keeping the magic happening. To remove it, at some point we would need to be incompatible. This is a major release, so we can hopefully afford that.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/338681354/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/338706172","html_url":"https://github.com/apache/druid/issues/4844#issuecomment-338706172","issue_url":"https://api.github.com/repos/apache/druid/issues/4844","id":338706172,"node_id":"MDEyOklzc3VlQ29tbWVudDMzODcwNjE3Mg==","user":{"login":"asandulescu","id":4747116,"node_id":"MDQ6VXNlcjQ3NDcxMTY=","avatar_url":"https://avatars.githubusercontent.com/u/4747116?v=4","gravatar_id":"","url":"https://api.github.com/users/asandulescu","html_url":"https://github.com/asandulescu","followers_url":"https://api.github.com/users/asandulescu/followers","following_url":"https://api.github.com/users/asandulescu/following{/other_user}","gists_url":"https://api.github.com/users/asandulescu/gists{/gist_id}","starred_url":"https://api.github.com/users/asandulescu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/asandulescu/subscriptions","organizations_url":"https://api.github.com/users/asandulescu/orgs","repos_url":"https://api.github.com/users/asandulescu/repos","events_url":"https://api.github.com/users/asandulescu/events{/privacy}","received_events_url":"https://api.github.com/users/asandulescu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-10-23T15:54:54Z","updated_at":"2017-10-23T15:55:18Z","author_association":"NONE","body":"Running into the same issue. All the query/\\*/count metrics are ZERO even though  queries are being fired off and can be confirmed by looking at all the other query/* metrics.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/338706172/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/338716762","html_url":"https://github.com/apache/druid/issues/4995#issuecomment-338716762","issue_url":"https://api.github.com/repos/apache/druid/issues/4995","id":338716762,"node_id":"MDEyOklzc3VlQ29tbWVudDMzODcxNjc2Mg==","user":{"login":"l15k4","id":518855,"node_id":"MDQ6VXNlcjUxODg1NQ==","avatar_url":"https://avatars.githubusercontent.com/u/518855?v=4","gravatar_id":"","url":"https://api.github.com/users/l15k4","html_url":"https://github.com/l15k4","followers_url":"https://api.github.com/users/l15k4/followers","following_url":"https://api.github.com/users/l15k4/following{/other_user}","gists_url":"https://api.github.com/users/l15k4/gists{/gist_id}","starred_url":"https://api.github.com/users/l15k4/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/l15k4/subscriptions","organizations_url":"https://api.github.com/users/l15k4/orgs","repos_url":"https://api.github.com/users/l15k4/repos","events_url":"https://api.github.com/users/l15k4/events{/privacy}","received_events_url":"https://api.github.com/users/l15k4/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-10-23T16:28:27Z","updated_at":"2017-10-23T16:45:15Z","author_association":"NONE","body":"I tried the druid native sql engine and it also doesn't return any results : \r\n```\r\nhttp http:/broker/druid/v2/sql/ \"\"query\"\"=\"SELECT \\\"d_site\\\", COUNT(*) FROM \\\"gwiq-daily-p\\\" WHERE '2017-07-01T00:00:00' >= '__time' AND cid = 'c0248' GROUP BY \\\"d_site\\\"\"\r\n[]\r\n```\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/338716762/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/338723576","html_url":"https://github.com/apache/druid/issues/4992#issuecomment-338723576","issue_url":"https://api.github.com/repos/apache/druid/issues/4992","id":338723576,"node_id":"MDEyOklzc3VlQ29tbWVudDMzODcyMzU3Ng==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-10-23T16:51:09Z","updated_at":"2017-10-23T16:51:09Z","author_association":"CONTRIBUTOR","body":"Would `druid/metrics/bard` work in the router config in older versions (0.10) too? If so then I would say it makes sense to note that you may have transformed `/` to `:` in your configs before, but it's not necessary, and will not continue to work. So you should switch them to `/` which will work with both the old and new versions.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/338723576/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/338724526","html_url":"https://github.com/apache/druid/issues/4844#issuecomment-338724526","issue_url":"https://api.github.com/repos/apache/druid/issues/4844","id":338724526,"node_id":"MDEyOklzc3VlQ29tbWVudDMzODcyNDUyNg==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-10-23T16:54:17Z","updated_at":"2017-10-23T16:54:17Z","author_association":"CONTRIBUTOR","body":"This is due to a bug and should be fixed in the next release (Druid 0.11.0) . Until then, you could count the number of \"query/time\" metrics -- it should be equivalent to the number of queries made. The \"success\" dimension will let you differentiate successful from failed queries.\r\n\r\nSorry for the inconvenience.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/338724526/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/338725916","html_url":"https://github.com/apache/druid/issues/4995#issuecomment-338725916","issue_url":"https://api.github.com/repos/apache/druid/issues/4995","id":338725916,"node_id":"MDEyOklzc3VlQ29tbWVudDMzODcyNTkxNg==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-10-23T16:58:41Z","updated_at":"2017-10-23T16:58:41Z","author_association":"CONTRIBUTOR","body":"@l15k4 for the time filter in Druid SQL, it should be `TIMESTAMP '2017-07-01 00:00:00' >= __time`. The filter you have provided, `'2017-07-01T00:00:00' >= '__time'`, is always false so no rows would be returned.\r\n\r\nIf you run plyql from the command line in verbose mode (`bin/plyql -h 127.0.0.1 -q \"your query\" -v`) then it will show the Druid queries that get made -- this will help debug.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/338725916/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/338728576","html_url":"https://github.com/apache/druid/issues/4994#issuecomment-338728576","issue_url":"https://api.github.com/repos/apache/druid/issues/4994","id":338728576,"node_id":"MDEyOklzc3VlQ29tbWVudDMzODcyODU3Ng==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-10-23T17:06:59Z","updated_at":"2017-10-23T17:06:59Z","author_association":"CONTRIBUTOR","body":"@erankor that should do it. And if you really want to clear all the state of the cluster, you might as well drop and re-create the whole MySQL database, rather than just truncate druid_segments.\r\n\r\nClosing this but feel free to reopen if you want.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/338728576/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/338730529","html_url":"https://github.com/apache/druid/pull/4815#issuecomment-338730529","issue_url":"https://api.github.com/repos/apache/druid/issues/4815","id":338730529,"node_id":"MDEyOklzc3VlQ29tbWVudDMzODczMDUyOQ==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-10-23T17:13:48Z","updated_at":"2017-10-23T17:13:48Z","author_association":"CONTRIBUTOR","body":"@pjain1 \r\n\r\n> probably overlord can send a flag in the context, indicating whether it supports checkpointing or not. If not then task can revert back to previous logic of moving out segments out of active list than checkpointing.\r\n\r\nThat sounds like a nice way of handling the compatibility.\r\n\r\n> However, running new code on a single MM might not test much as its not doing incremental handoffs then its not actually testing the new feature for which they are supposed to be upgraded.\r\n\r\nThat's fine, there's a lot of other stuff changing in 0.11.0 and it's still valuable to stage the rollout one machine at a time, if uptime of the system is critical.\r\n\r\n> Running new code on one or subset of MM also means that replication cannot be used as replicas should not get mixed up on new and old MM otherwise they will do different things.\r\n\r\nThat's less fine, since I guess I was hoping for a more seamless upgrade.\r\n\r\nIf it's not feasible to do it seamlessly then I can live with it, but I think we should at least provide people a tool to help do the upgrade. Maybe a tool that shuts down all supervisors, monitors the tasks for when they end, and then can later restore them to their last running state.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/338730529/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/338730932","html_url":"https://github.com/apache/druid/issues/4992#issuecomment-338730932","issue_url":"https://api.github.com/repos/apache/druid/issues/4992","id":338730932,"node_id":"MDEyOklzc3VlQ29tbWVudDMzODczMDkzMg==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-10-23T17:15:14Z","updated_at":"2017-10-23T17:15:14Z","author_association":"CONTRIBUTOR","body":"Yes, `druid/metricss/bard` would work in router config in older versions ( 0.10.x ) too. old external-discovery code does a translation from '/' to ':' on discoverer side ( https://github.com/druid-io/druid/blob/master/server/src/main/java/io/druid/curator/discovery/ServerDiscoveryFactory.java#L52 ) via ( https://github.com/druid-io/druid/blob/master/server/src/main/java/io/druid/curator/discovery/CuratorServiceUtils.java#L41 )\r\n\r\nso technically, serviceName could have '/' in it earlier but it was always translated to ':' on both sides.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/338730932/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/338731315","html_url":"https://github.com/apache/druid/issues/4995#issuecomment-338731315","issue_url":"https://api.github.com/repos/apache/druid/issues/4995","id":338731315,"node_id":"MDEyOklzc3VlQ29tbWVudDMzODczMTMxNQ==","user":{"login":"l15k4","id":518855,"node_id":"MDQ6VXNlcjUxODg1NQ==","avatar_url":"https://avatars.githubusercontent.com/u/518855?v=4","gravatar_id":"","url":"https://api.github.com/users/l15k4","html_url":"https://github.com/l15k4","followers_url":"https://api.github.com/users/l15k4/followers","following_url":"https://api.github.com/users/l15k4/following{/other_user}","gists_url":"https://api.github.com/users/l15k4/gists{/gist_id}","starred_url":"https://api.github.com/users/l15k4/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/l15k4/subscriptions","organizations_url":"https://api.github.com/users/l15k4/orgs","repos_url":"https://api.github.com/users/l15k4/repos","events_url":"https://api.github.com/users/l15k4/events{/privacy}","received_events_url":"https://api.github.com/users/l15k4/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-10-23T17:16:32Z","updated_at":"2017-10-23T17:43:12Z","author_association":"NONE","body":"In that case it must be a `plyql` problem, this works in druid-native-sql \r\n```\r\nSELECT \\\"d_site\\\", COUNT(*) FROM \\\"gwiq-daily-p\\\" WHERE TIMESTAMP '2017-07-01 00:00:00' >= __time AND cid = 'c0248' GROUP BY \\\"d_site\\\"\r\n```\r\nbut corresponding plyql sql query (which we use in production) returns null : \r\n```\r\nSELECT d_site, COUNT(*) FROM gwiq-daily-p WHERE '2017-07-01T00:00:00' >= __time AND cid = 'c0248' GROUP BY d_site\r\n```\r\n\r\n`plyql -v` unfortunately doesn't display druid native queries but plywood expressions...","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/338731315/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/338736815","html_url":"https://github.com/apache/druid/issues/4996#issuecomment-338736815","issue_url":"https://api.github.com/repos/apache/druid/issues/4996","id":338736815,"node_id":"MDEyOklzc3VlQ29tbWVudDMzODczNjgxNQ==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-10-23T17:34:19Z","updated_at":"2017-10-23T17:34:19Z","author_association":"CONTRIBUTOR","body":"@gianm does that sound ok ?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/338736815/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/338741639","html_url":"https://github.com/apache/druid/pull/4993#issuecomment-338741639","issue_url":"https://api.github.com/repos/apache/druid/issues/4993","id":338741639,"node_id":"MDEyOklzc3VlQ29tbWVudDMzODc0MTYzOQ==","user":{"login":"ghost","id":10137,"node_id":"MDQ6VXNlcjEwMTM3","avatar_url":"https://avatars.githubusercontent.com/u/10137?v=4","gravatar_id":"","url":"https://api.github.com/users/ghost","html_url":"https://github.com/ghost","followers_url":"https://api.github.com/users/ghost/followers","following_url":"https://api.github.com/users/ghost/following{/other_user}","gists_url":"https://api.github.com/users/ghost/gists{/gist_id}","starred_url":"https://api.github.com/users/ghost/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ghost/subscriptions","organizations_url":"https://api.github.com/users/ghost/orgs","repos_url":"https://api.github.com/users/ghost/repos","events_url":"https://api.github.com/users/ghost/events{/privacy}","received_events_url":"https://api.github.com/users/ghost/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-10-23T17:49:24Z","updated_at":"2017-10-23T17:51:29Z","author_association":"NONE","body":"Ok, yeah, `createGenerator` works great, and is a much simpler fix. Thanks, please take another look!\r\n\r\nI added paging identifiers to `makeSelectResults`, which is what we normally see in a result set, and some empty and >1-sized result sets to `testSelectCaching`, which is what throws off the string back references.\r\n\r\nWithout this fix, `CachingClusteredClientTest.testSelectCaching` now throws the following exception:\r\n\r\n```\r\njava.lang.IllegalArgumentException: Can not deserialize instance of java.lang.String out of START_OBJECT token\r\n at [Source: N/A; line: -1, column: -1] (through reference chain: java.util.ArrayList[1])\r\n\r\n\tat com.fasterxml.jackson.databind.ObjectMapper._convert(ObjectMapper.java:2774)\r\n\tat com.fasterxml.jackson.databind.ObjectMapper.convertValue(ObjectMapper.java:2716)\r\n\tat com.fasterxml.jackson.databind.ObjectMapper.convertValue(ObjectMapper.java:2707)\r\n\tat io.druid.query.select.SelectQueryQueryToolChest$4$2.apply(SelectQueryQueryToolChest.java:300)\r\n\tat io.druid.query.select.SelectQueryQueryToolChest$4$2.apply(SelectQueryQueryToolChest.java:280)\r\n\tat io.druid.java.util.common.guava.Sequences$$Lambda$29/1920907467.apply(Unknown Source)\r\n\tat io.druid.java.util.common.guava.MappingYieldingAccumulator.accumulate(MappingYieldingAccumulator.java:61)\r\n\tat io.druid.java.util.common.guava.BaseSequence.makeYielder(BaseSequence.java:89)\r\n\tat io.druid.java.util.common.guava.BaseSequence.access$100(BaseSequence.java:28)\r\n\tat io.druid.java.util.common.guava.BaseSequence$2.next(BaseSequence.java:120)\r\n\tat io.druid.java.util.common.guava.MergeSequence.makeYielder(MergeSequence.java:107)\r\n\tat io.druid.java.util.common.guava.MergeSequence.toYielder(MergeSequence.java:94)\r\n\tat io.druid.java.util.common.guava.YieldingSequenceBase.accumulate(YieldingSequenceBase.java:32)\r\n\tat io.druid.java.util.common.guava.LazySequence.accumulate(LazySequence.java:40)\r\n\tat io.druid.java.util.common.guava.Sequences.toList(Sequences.java:150)\r\n\tat io.druid.segment.TestHelper.assertExpectedResults(TestHelper.java:107)\r\n\tat io.druid.client.CachingClusteredClientTest$6.run(CachingClusteredClientTest.java:2144)\r\n\tat io.druid.client.CachingClusteredClientTest.runWithMocks(CachingClusteredClientTest.java:2686)\r\n\tat io.druid.client.CachingClusteredClientTest.testQueryCaching(CachingClusteredClientTest.java:2136)\r\n\tat io.druid.client.CachingClusteredClientTest.testQueryCaching(CachingClusteredClientTest.java:1997)\r\n\tat io.druid.client.CachingClusteredClientTest.testSelectCaching(CachingClusteredClientTest.java:1300)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:497)\r\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\r\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\r\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\r\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\r\n\tat org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\r\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\r\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\r\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:309)\r\n\tat org.junit.runners.Suite.runChild(Suite.java:127)\r\n\tat org.junit.runners.Suite.runChild(Suite.java:26)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:309)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:160)\r\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)\r\n\tat com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)\r\n\tat com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)\r\n\tat com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)\r\nCaused by: com.fasterxml.jackson.databind.JsonMappingException: Can not deserialize instance of java.lang.String out of START_OBJECT token\r\n at [Source: N/A; line: -1, column: -1] (through reference chain: java.util.ArrayList[1])\r\n\tat com.fasterxml.jackson.databind.JsonMappingException.from(JsonMappingException.java:148)\r\n\tat com.fasterxml.jackson.databind.DeserializationContext.mappingException(DeserializationContext.java:762)\r\n\tat com.fasterxml.jackson.databind.deser.std.StringDeserializer.deserialize(StringDeserializer.java:59)\r\n\tat com.fasterxml.jackson.databind.deser.std.StringDeserializer.deserialize(StringDeserializer.java:12)\r\n\tat com.fasterxml.jackson.databind.deser.SettableBeanProperty.deserialize(SettableBeanProperty.java:538)\r\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer._deserializeUsingPropertyBased(BeanDeserializer.java:344)\r\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializerBase.deserializeFromObjectUsingNonDefault(BeanDeserializerBase.java:1064)\r\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:264)\r\n\tat com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:124)\r\n\tat com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:232)\r\n\tat com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:206)\r\n\tat com.fasterxml.jackson.databind.deser.std.CollectionDeserializer.deserialize(CollectionDeserializer.java:25)\r\n\tat com.fasterxml.jackson.databind.ObjectMapper._convert(ObjectMapper.java:2769)\r\n\t... 51 more\r\n```\r\n\r\nWith the fix, it passes.\r\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/338741639/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/338743291","html_url":"https://github.com/apache/druid/issues/4995#issuecomment-338743291","issue_url":"https://api.github.com/repos/apache/druid/issues/4995","id":338743291,"node_id":"MDEyOklzc3VlQ29tbWVudDMzODc0MzI5MQ==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-10-23T17:55:02Z","updated_at":"2017-10-23T17:55:02Z","author_association":"CONTRIBUTOR","body":"Interesting, not sure what is going on with plyql, but good to know that druid sql seems to be working OK.\r\n\r\nMaybe running the plyql server with `-v` would get it to log its Druid queries to its log file.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/338743291/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/338743883","html_url":"https://github.com/apache/druid/issues/4995#issuecomment-338743883","issue_url":"https://api.github.com/repos/apache/druid/issues/4995","id":338743883,"node_id":"MDEyOklzc3VlQ29tbWVudDMzODc0Mzg4Mw==","user":{"login":"l15k4","id":518855,"node_id":"MDQ6VXNlcjUxODg1NQ==","avatar_url":"https://avatars.githubusercontent.com/u/518855?v=4","gravatar_id":"","url":"https://api.github.com/users/l15k4","html_url":"https://github.com/l15k4","followers_url":"https://api.github.com/users/l15k4/followers","following_url":"https://api.github.com/users/l15k4/following{/other_user}","gists_url":"https://api.github.com/users/l15k4/gists{/gist_id}","starred_url":"https://api.github.com/users/l15k4/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/l15k4/subscriptions","organizations_url":"https://api.github.com/users/l15k4/orgs","repos_url":"https://api.github.com/users/l15k4/repos","events_url":"https://api.github.com/users/l15k4/events{/privacy}","received_events_url":"https://api.github.com/users/l15k4/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-10-23T17:57:00Z","updated_at":"2017-10-23T17:57:22Z","author_association":"NONE","body":"`-v` on plyql-server only logs incoming SQL queries ....\r\n`-v` on plyql-client only logs plywood expressions ...\r\n\r\nI created an issue in plyql https://github.com/implydata/plyql/issues/83","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/338743883/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/338754490","html_url":"https://github.com/apache/druid/issues/2314#issuecomment-338754490","issue_url":"https://api.github.com/repos/apache/druid/issues/2314","id":338754490,"node_id":"MDEyOklzc3VlQ29tbWVudDMzODc1NDQ5MA==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-10-23T18:32:27Z","updated_at":"2017-10-23T18:32:27Z","author_association":"CONTRIBUTOR","body":"Fixed by https://github.com/druid-io/druid/pull/4966","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/338754490/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/338759675","html_url":"https://github.com/apache/druid/issues/4994#issuecomment-338759675","issue_url":"https://api.github.com/repos/apache/druid/issues/4994","id":338759675,"node_id":"MDEyOklzc3VlQ29tbWVudDMzODc1OTY3NQ==","user":{"login":"erankor","id":4777488,"node_id":"MDQ6VXNlcjQ3Nzc0ODg=","avatar_url":"https://avatars.githubusercontent.com/u/4777488?v=4","gravatar_id":"","url":"https://api.github.com/users/erankor","html_url":"https://github.com/erankor","followers_url":"https://api.github.com/users/erankor/followers","following_url":"https://api.github.com/users/erankor/following{/other_user}","gists_url":"https://api.github.com/users/erankor/gists{/gist_id}","starred_url":"https://api.github.com/users/erankor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/erankor/subscriptions","organizations_url":"https://api.github.com/users/erankor/orgs","repos_url":"https://api.github.com/users/erankor/repos","events_url":"https://api.github.com/users/erankor/events{/privacy}","received_events_url":"https://api.github.com/users/erankor/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-10-23T18:50:28Z","updated_at":"2017-10-23T18:50:28Z","author_association":"NONE","body":"Great, thanks @gianm !","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/338759675/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/338767536","html_url":"https://github.com/apache/druid/pull/4993#issuecomment-338767536","issue_url":"https://api.github.com/repos/apache/druid/issues/4993","id":338767536,"node_id":"MDEyOklzc3VlQ29tbWVudDMzODc2NzUzNg==","user":{"login":"leventov","id":609240,"node_id":"MDQ6VXNlcjYwOTI0MA==","avatar_url":"https://avatars.githubusercontent.com/u/609240?v=4","gravatar_id":"","url":"https://api.github.com/users/leventov","html_url":"https://github.com/leventov","followers_url":"https://api.github.com/users/leventov/followers","following_url":"https://api.github.com/users/leventov/following{/other_user}","gists_url":"https://api.github.com/users/leventov/gists{/gist_id}","starred_url":"https://api.github.com/users/leventov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leventov/subscriptions","organizations_url":"https://api.github.com/users/leventov/orgs","repos_url":"https://api.github.com/users/leventov/repos","events_url":"https://api.github.com/users/leventov/events{/privacy}","received_events_url":"https://api.github.com/users/leventov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-10-23T19:18:34Z","updated_at":"2017-10-23T19:18:34Z","author_association":"MEMBER","body":"Should it be backported to 0.11?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/338767536/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/338771804","html_url":"https://github.com/apache/druid/issues/4992#issuecomment-338771804","issue_url":"https://api.github.com/repos/apache/druid/issues/4992","id":338771804,"node_id":"MDEyOklzc3VlQ29tbWVudDMzODc3MTgwNA==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-10-23T19:34:12Z","updated_at":"2017-10-23T19:34:12Z","author_association":"CONTRIBUTOR","body":"@leventov did `druid/metrics/bard` change in router config work ?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/338771804/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/338790792","html_url":"https://github.com/apache/druid/pull/4993#issuecomment-338790792","issue_url":"https://api.github.com/repos/apache/druid/issues/4993","id":338790792,"node_id":"MDEyOklzc3VlQ29tbWVudDMzODc5MDc5Mg==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-10-23T20:44:23Z","updated_at":"2017-10-23T20:44:23Z","author_association":"CONTRIBUTOR","body":"It's not a regression (I think it's been a bug for a while) so I would only backport it if we were planning on doing a 0.11.0-rc2 anyway. But it looks like we are (for #4989?) so might as well pull this one too.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/338790792/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/338790946","html_url":"https://github.com/apache/druid/pull/4989#issuecomment-338790946","issue_url":"https://api.github.com/repos/apache/druid/issues/4989","id":338790946,"node_id":"MDEyOklzc3VlQ29tbWVudDMzODc5MDk0Ng==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-10-23T20:44:57Z","updated_at":"2017-10-23T20:44:57Z","author_association":"CONTRIBUTOR","body":"@leventov could you backport this to 0.11.0 please? (assuming it should be there since you set the milestone)","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/338790946/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/338843407","html_url":"https://github.com/apache/druid/issues/3414#issuecomment-338843407","issue_url":"https://api.github.com/repos/apache/druid/issues/3414","id":338843407,"node_id":"MDEyOklzc3VlQ29tbWVudDMzODg0MzQwNw==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-10-24T01:26:06Z","updated_at":"2017-10-24T01:26:06Z","author_association":"CONTRIBUTOR","body":"An update: Druid extractionFns still can only return strings, but expressions can return numerics. They can't return complex types, but may be generalized at some point (list is particularly likely).\r\n\r\nClosing this, since it seems like the original issue has been solved or worked around.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/338843407/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/338860469","html_url":"https://github.com/apache/druid/pull/4989#issuecomment-338860469","issue_url":"https://api.github.com/repos/apache/druid/issues/4989","id":338860469,"node_id":"MDEyOklzc3VlQ29tbWVudDMzODg2MDQ2OQ==","user":{"login":"leventov","id":609240,"node_id":"MDQ6VXNlcjYwOTI0MA==","avatar_url":"https://avatars.githubusercontent.com/u/609240?v=4","gravatar_id":"","url":"https://api.github.com/users/leventov","html_url":"https://github.com/leventov","followers_url":"https://api.github.com/users/leventov/followers","following_url":"https://api.github.com/users/leventov/following{/other_user}","gists_url":"https://api.github.com/users/leventov/gists{/gist_id}","starred_url":"https://api.github.com/users/leventov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leventov/subscriptions","organizations_url":"https://api.github.com/users/leventov/orgs","repos_url":"https://api.github.com/users/leventov/repos","events_url":"https://api.github.com/users/leventov/events{/privacy}","received_events_url":"https://api.github.com/users/leventov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-10-24T03:17:01Z","updated_at":"2017-10-24T03:17:01Z","author_association":"MEMBER","body":"I will do, some time this week, very busy resolving issues in production after 0.11 rollout, so be sure this version is not ready to release yet. It's not the only issue.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/338860469/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/338926910","html_url":"https://github.com/apache/druid/issues/4995#issuecomment-338926910","issue_url":"https://api.github.com/repos/apache/druid/issues/4995","id":338926910,"node_id":"MDEyOklzc3VlQ29tbWVudDMzODkyNjkxMA==","user":{"login":"l15k4","id":518855,"node_id":"MDQ6VXNlcjUxODg1NQ==","avatar_url":"https://avatars.githubusercontent.com/u/518855?v=4","gravatar_id":"","url":"https://api.github.com/users/l15k4","html_url":"https://github.com/l15k4","followers_url":"https://api.github.com/users/l15k4/followers","following_url":"https://api.github.com/users/l15k4/following{/other_user}","gists_url":"https://api.github.com/users/l15k4/gists{/gist_id}","starred_url":"https://api.github.com/users/l15k4/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/l15k4/subscriptions","organizations_url":"https://api.github.com/users/l15k4/orgs","repos_url":"https://api.github.com/users/l15k4/repos","events_url":"https://api.github.com/users/l15k4/events{/privacy}","received_events_url":"https://api.github.com/users/l15k4/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-10-24T09:14:30Z","updated_at":"2017-10-24T09:14:30Z","author_association":"NONE","body":"It only happens for `d_site` dimension, so there is a problem with plyql metadata resolution, closing...","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/338926910/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/338937678","html_url":"https://github.com/apache/druid/issues/4844#issuecomment-338937678","issue_url":"https://api.github.com/repos/apache/druid/issues/4844","id":338937678,"node_id":"MDEyOklzc3VlQ29tbWVudDMzODkzNzY3OA==","user":{"login":"asandulescu","id":4747116,"node_id":"MDQ6VXNlcjQ3NDcxMTY=","avatar_url":"https://avatars.githubusercontent.com/u/4747116?v=4","gravatar_id":"","url":"https://api.github.com/users/asandulescu","html_url":"https://github.com/asandulescu","followers_url":"https://api.github.com/users/asandulescu/followers","following_url":"https://api.github.com/users/asandulescu/following{/other_user}","gists_url":"https://api.github.com/users/asandulescu/gists{/gist_id}","starred_url":"https://api.github.com/users/asandulescu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/asandulescu/subscriptions","organizations_url":"https://api.github.com/users/asandulescu/orgs","repos_url":"https://api.github.com/users/asandulescu/repos","events_url":"https://api.github.com/users/asandulescu/events{/privacy}","received_events_url":"https://api.github.com/users/asandulescu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-10-24T09:53:44Z","updated_at":"2017-10-24T09:53:44Z","author_association":"NONE","body":"Thank you for your response :)","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/338937678/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/338967838","html_url":"https://github.com/apache/druid/issues/4584#issuecomment-338967838","issue_url":"https://api.github.com/repos/apache/druid/issues/4584","id":338967838,"node_id":"MDEyOklzc3VlQ29tbWVudDMzODk2NzgzOA==","user":{"login":"sharks222","id":19488046,"node_id":"MDQ6VXNlcjE5NDg4MDQ2","avatar_url":"https://avatars.githubusercontent.com/u/19488046?v=4","gravatar_id":"","url":"https://api.github.com/users/sharks222","html_url":"https://github.com/sharks222","followers_url":"https://api.github.com/users/sharks222/followers","following_url":"https://api.github.com/users/sharks222/following{/other_user}","gists_url":"https://api.github.com/users/sharks222/gists{/gist_id}","starred_url":"https://api.github.com/users/sharks222/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sharks222/subscriptions","organizations_url":"https://api.github.com/users/sharks222/orgs","repos_url":"https://api.github.com/users/sharks222/repos","events_url":"https://api.github.com/users/sharks222/events{/privacy}","received_events_url":"https://api.github.com/users/sharks222/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-10-24T12:05:14Z","updated_at":"2017-10-24T12:05:14Z","author_association":"NONE","body":"I have meet the same problem.\r\nAnyone get the idea on how to solve it?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/338967838/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/339107628","html_url":"https://github.com/apache/druid/issues/4992#issuecomment-339107628","issue_url":"https://api.github.com/repos/apache/druid/issues/4992","id":339107628,"node_id":"MDEyOklzc3VlQ29tbWVudDMzOTEwNzYyOA==","user":{"login":"leventov","id":609240,"node_id":"MDQ6VXNlcjYwOTI0MA==","avatar_url":"https://avatars.githubusercontent.com/u/609240?v=4","gravatar_id":"","url":"https://api.github.com/users/leventov","html_url":"https://github.com/leventov","followers_url":"https://api.github.com/users/leventov/followers","following_url":"https://api.github.com/users/leventov/following{/other_user}","gists_url":"https://api.github.com/users/leventov/gists{/gist_id}","starred_url":"https://api.github.com/users/leventov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leventov/subscriptions","organizations_url":"https://api.github.com/users/leventov/orgs","repos_url":"https://api.github.com/users/leventov/repos","events_url":"https://api.github.com/users/leventov/events{/privacy}","received_events_url":"https://api.github.com/users/leventov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-10-24T19:41:01Z","updated_at":"2017-10-24T19:41:01Z","author_association":"MEMBER","body":"Not yet 100% sure but at the moment it seems that it works. Also it seems that `druid.router.coordinatorServiceName` needs to be changed. Despite release notes, it seems to me it is so easy to forget this that I think we need to convert colons to slashes in Druid","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/339107628/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/339110121","html_url":"https://github.com/apache/druid/pull/4989#issuecomment-339110121","issue_url":"https://api.github.com/repos/apache/druid/issues/4989","id":339110121,"node_id":"MDEyOklzc3VlQ29tbWVudDMzOTExMDEyMQ==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-10-24T19:49:32Z","updated_at":"2017-10-24T19:49:32Z","author_association":"CONTRIBUTOR","body":"@leventov I'll backport this then to save you some time.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/339110121/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/339127689","html_url":"https://github.com/apache/druid/issues/5005#issuecomment-339127689","issue_url":"https://api.github.com/repos/apache/druid/issues/5005","id":339127689,"node_id":"MDEyOklzc3VlQ29tbWVudDMzOTEyNzY4OQ==","user":{"login":"akashdw","id":5886276,"node_id":"MDQ6VXNlcjU4ODYyNzY=","avatar_url":"https://avatars.githubusercontent.com/u/5886276?v=4","gravatar_id":"","url":"https://api.github.com/users/akashdw","html_url":"https://github.com/akashdw","followers_url":"https://api.github.com/users/akashdw/followers","following_url":"https://api.github.com/users/akashdw/following{/other_user}","gists_url":"https://api.github.com/users/akashdw/gists{/gist_id}","starred_url":"https://api.github.com/users/akashdw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/akashdw/subscriptions","organizations_url":"https://api.github.com/users/akashdw/orgs","repos_url":"https://api.github.com/users/akashdw/repos","events_url":"https://api.github.com/users/akashdw/events{/privacy}","received_events_url":"https://api.github.com/users/akashdw/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-10-24T20:53:43Z","updated_at":"2017-10-24T20:53:43Z","author_association":"CONTRIBUTOR","body":"@jon-wei @gianm may be we can also add mysql-server in the ubuntu image along with other preinstalled pkgs ? ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/339127689/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/339132709","html_url":"https://github.com/apache/druid/issues/4937#issuecomment-339132709","issue_url":"https://api.github.com/repos/apache/druid/issues/4937","id":339132709,"node_id":"MDEyOklzc3VlQ29tbWVudDMzOTEzMjcwOQ==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-10-24T21:10:56Z","updated_at":"2017-10-24T21:10:56Z","author_association":"CONTRIBUTOR","body":"#4049 is included in 0.11.0 release, so marking this bug for 0.11.0 milestone.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/339132709/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/339132789","html_url":"https://github.com/apache/druid/issues/4937#issuecomment-339132789","issue_url":"https://api.github.com/repos/apache/druid/issues/4937","id":339132789,"node_id":"MDEyOklzc3VlQ29tbWVudDMzOTEzMjc4OQ==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-10-24T21:11:17Z","updated_at":"2017-10-24T21:11:17Z","author_association":"CONTRIBUTOR","body":"@kaijianding can you please take a look?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/339132789/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/339136840","html_url":"https://github.com/apache/druid/issues/4937#issuecomment-339136840","issue_url":"https://api.github.com/repos/apache/druid/issues/4937","id":339136840,"node_id":"MDEyOklzc3VlQ29tbWVudDMzOTEzNjg0MA==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-10-24T21:25:56Z","updated_at":"2017-10-24T21:25:56Z","author_association":"CONTRIBUTOR","body":"@himanshug #4049 was included in 0.10.1, so it's not a new bug in this release; imo that means we should be willing to ship 0.11.0 without the fix if we cannot get it fixed quickly.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/339136840/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/339142465","html_url":"https://github.com/apache/druid/issues/5005#issuecomment-339142465","issue_url":"https://api.github.com/repos/apache/druid/issues/5005","id":339142465,"node_id":"MDEyOklzc3VlQ29tbWVudDMzOTE0MjQ2NQ==","user":{"login":"jon-wei","id":8729063,"node_id":"MDQ6VXNlcjg3MjkwNjM=","avatar_url":"https://avatars.githubusercontent.com/u/8729063?v=4","gravatar_id":"","url":"https://api.github.com/users/jon-wei","html_url":"https://github.com/jon-wei","followers_url":"https://api.github.com/users/jon-wei/followers","following_url":"https://api.github.com/users/jon-wei/following{/other_user}","gists_url":"https://api.github.com/users/jon-wei/gists{/gist_id}","starred_url":"https://api.github.com/users/jon-wei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jon-wei/subscriptions","organizations_url":"https://api.github.com/users/jon-wei/orgs","repos_url":"https://api.github.com/users/jon-wei/repos","events_url":"https://api.github.com/users/jon-wei/events{/privacy}","received_events_url":"https://api.github.com/users/jon-wei/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-10-24T21:45:36Z","updated_at":"2017-10-24T21:45:36Z","author_association":"CONTRIBUTOR","body":"@akashdw To unblock CI, I updated the `jonweiimply/ubuntu-j8` image for now to have mysql and supervisor packages preinstalled. \r\n\r\n(Another fix would be to add \"RUN apt-get update\" before mysql installation in the IT Dockerfile).\r\n\r\nIn general, I think it would make sense to have an ubuntu image with java/mysql/supervisor/zookeeper/kafka preinstalled, Dockerfile would be something like:\r\n\r\n```\r\nFROM ubuntu:14.04\r\n\r\n# Java 8\r\nRUN apt-get update \\\r\n      && apt-get install -y software-properties-common \\\r\n      && apt-add-repository -y ppa:webupd8team/java \\\r\n      && apt-get purge --auto-remove -y software-properties-common \\\r\n      && apt-get update \\\r\n      && echo oracle-java-8-installer shared/accepted-oracle-license-v1-1 select true | /usr/bin/debconf-set-selections \\\r\n      && apt-get install -y oracle-java8-installer \\\r\n      && apt-get install -y oracle-java8-set-default \\\r\n      && rm -rf /var/cache/oracle-jdk8-installer\r\n\r\n# MySQL (Metadata store)\r\nRUN apt-get install -y mysql-server\r\n\r\n# Supervisor\r\nRUN apt-get install -y supervisor\r\n\r\n# Zookeeper\r\nRUN wget -q -O - http://www.us.apache.org/dist/zookeeper/zookeeper-3.4.6/zookeeper-3.4.6.tar.gz | tar -xzf - -C /usr/local \\\r\n      && cp /usr/local/zookeeper-3.4.6/conf/zoo_sample.cfg /usr/local/zookeeper-3.4.6/conf/zoo.cfg \\\r\n      && ln -s /usr/local/zookeeper-3.4.6 /usr/local/zookeeper\r\n\r\n# Kafka\r\n# Match the version to the Kafka client used by KafkaSupervisor\r\nRUN wget -q -O - http://www.us.apache.org/dist/kafka/0.10.2.0/kafka_2.11-0.10.2.0.tgz | tar -xzf - -C /usr/local \\\r\n      && ln -s /usr/local/kafka_2.11-0.10.2.0 /usr/local/kafka\r\n```\r\n\r\nSuch an image should reside in a Druid org repo and not my personal Dockerhub repo though.\r\n\r\nWho is currently managing the druid-io dockerhub repo? We could put the integration test image there:\r\nhttps://hub.docker.com/u/druidio/","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/339142465/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/339145301","html_url":"https://github.com/apache/druid/issues/4937#issuecomment-339145301","issue_url":"https://api.github.com/repos/apache/druid/issues/4937","id":339145301,"node_id":"MDEyOklzc3VlQ29tbWVudDMzOTE0NTMwMQ==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-10-24T21:55:01Z","updated_at":"2017-10-24T21:55:01Z","author_association":"CONTRIBUTOR","body":"i see, didn't check the 0.10.1 branch and looked only in 0.11.0.\r\nok, we may not want to block 0.11.0 release. but, we should not let this slide away, so marking it for 0.11.1 . however, it would be nice to have it fixed in 0.11.0 if possible.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/339145301/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/339150225","html_url":"https://github.com/apache/druid/pull/5002#issuecomment-339150225","issue_url":"https://api.github.com/repos/apache/druid/issues/5002","id":339150225,"node_id":"MDEyOklzc3VlQ29tbWVudDMzOTE1MDIyNQ==","user":{"login":"AlexanderSaydakov","id":13126686,"node_id":"MDQ6VXNlcjEzMTI2Njg2","avatar_url":"https://avatars.githubusercontent.com/u/13126686?v=4","gravatar_id":"","url":"https://api.github.com/users/AlexanderSaydakov","html_url":"https://github.com/AlexanderSaydakov","followers_url":"https://api.github.com/users/AlexanderSaydakov/followers","following_url":"https://api.github.com/users/AlexanderSaydakov/following{/other_user}","gists_url":"https://api.github.com/users/AlexanderSaydakov/gists{/gist_id}","starred_url":"https://api.github.com/users/AlexanderSaydakov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/AlexanderSaydakov/subscriptions","organizations_url":"https://api.github.com/users/AlexanderSaydakov/orgs","repos_url":"https://api.github.com/users/AlexanderSaydakov/repos","events_url":"https://api.github.com/users/AlexanderSaydakov/events{/privacy}","received_events_url":"https://api.github.com/users/AlexanderSaydakov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-10-24T22:10:50Z","updated_at":"2017-10-24T22:10:50Z","author_association":"CONTRIBUTOR","body":"Is anything wrong with the build configuration?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/339150225/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/339156619","html_url":"https://github.com/apache/druid/issues/5005#issuecomment-339156619","issue_url":"https://api.github.com/repos/apache/druid/issues/5005","id":339156619,"node_id":"MDEyOklzc3VlQ29tbWVudDMzOTE1NjYxOQ==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-10-24T22:35:07Z","updated_at":"2017-10-24T22:35:07Z","author_association":"CONTRIBUTOR","body":"@jon-wei I'm not sure who runs https://hub.docker.com/u/druidio/, maybe email druid-development@?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/339156619/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/339191133","html_url":"https://github.com/apache/druid/issues/5006#issuecomment-339191133","issue_url":"https://api.github.com/repos/apache/druid/issues/5006","id":339191133,"node_id":"MDEyOklzc3VlQ29tbWVudDMzOTE5MTEzMw==","user":{"login":"b-slim","id":7376396,"node_id":"MDQ6VXNlcjczNzYzOTY=","avatar_url":"https://avatars.githubusercontent.com/u/7376396?v=4","gravatar_id":"","url":"https://api.github.com/users/b-slim","html_url":"https://github.com/b-slim","followers_url":"https://api.github.com/users/b-slim/followers","following_url":"https://api.github.com/users/b-slim/following{/other_user}","gists_url":"https://api.github.com/users/b-slim/gists{/gist_id}","starred_url":"https://api.github.com/users/b-slim/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/b-slim/subscriptions","organizations_url":"https://api.github.com/users/b-slim/orgs","repos_url":"https://api.github.com/users/b-slim/repos","events_url":"https://api.github.com/users/b-slim/events{/privacy}","received_events_url":"https://api.github.com/users/b-slim/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-10-25T02:06:10Z","updated_at":"2017-10-25T02:06:10Z","author_association":"CONTRIBUTOR","body":"My 2 cents, Unlike group By select query is not suppose to produce an unexpectedly large amount of rows due to some grouping by high cardinality dimensions. In fact, the select query has paginations that limit the amount of row to pull at a given query, I think that is sort of enough to limit the number of rows pulled in a single query.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/339191133/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/339243903","html_url":"https://github.com/apache/druid/pull/4985#issuecomment-339243903","issue_url":"https://api.github.com/repos/apache/druid/issues/4985","id":339243903,"node_id":"MDEyOklzc3VlQ29tbWVudDMzOTI0MzkwMw==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-10-25T07:44:52Z","updated_at":"2017-10-25T07:44:52Z","author_association":"CONTRIBUTOR","body":"@gianm thank you for the quick review!","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/339243903/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/339274361","html_url":"https://github.com/apache/druid/issues/5000#issuecomment-339274361","issue_url":"https://api.github.com/repos/apache/druid/issues/5000","id":339274361,"node_id":"MDEyOklzc3VlQ29tbWVudDMzOTI3NDM2MQ==","user":{"login":"hexian55","id":16074700,"node_id":"MDQ6VXNlcjE2MDc0NzAw","avatar_url":"https://avatars.githubusercontent.com/u/16074700?v=4","gravatar_id":"","url":"https://api.github.com/users/hexian55","html_url":"https://github.com/hexian55","followers_url":"https://api.github.com/users/hexian55/followers","following_url":"https://api.github.com/users/hexian55/following{/other_user}","gists_url":"https://api.github.com/users/hexian55/gists{/gist_id}","starred_url":"https://api.github.com/users/hexian55/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hexian55/subscriptions","organizations_url":"https://api.github.com/users/hexian55/orgs","repos_url":"https://api.github.com/users/hexian55/repos","events_url":"https://api.github.com/users/hexian55/events{/privacy}","received_events_url":"https://api.github.com/users/hexian55/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-10-25T09:41:04Z","updated_at":"2017-10-25T09:41:04Z","author_association":"NONE","body":"fix in 0.10.1","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/339274361/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/339338101","html_url":"https://github.com/apache/druid/pull/5002#issuecomment-339338101","issue_url":"https://api.github.com/repos/apache/druid/issues/5002","id":339338101,"node_id":"MDEyOklzc3VlQ29tbWVudDMzOTMzODEwMQ==","user":{"login":"drcrallen","id":8213081,"node_id":"MDQ6VXNlcjgyMTMwODE=","avatar_url":"https://avatars.githubusercontent.com/u/8213081?v=4","gravatar_id":"","url":"https://api.github.com/users/drcrallen","html_url":"https://github.com/drcrallen","followers_url":"https://api.github.com/users/drcrallen/followers","following_url":"https://api.github.com/users/drcrallen/following{/other_user}","gists_url":"https://api.github.com/users/drcrallen/gists{/gist_id}","starred_url":"https://api.github.com/users/drcrallen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/drcrallen/subscriptions","organizations_url":"https://api.github.com/users/drcrallen/orgs","repos_url":"https://api.github.com/users/drcrallen/repos","events_url":"https://api.github.com/users/drcrallen/events{/privacy}","received_events_url":"https://api.github.com/users/drcrallen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-10-25T13:56:33Z","updated_at":"2017-10-25T13:56:33Z","author_association":"CONTRIBUTOR","body":"```\r\n[INFO] Compiling 36 source files to /home/travis/build/druid-io/druid/extensions-core/datasketches/target/classes\r\n/home/travis/build/druid-io/druid/extensions-core/datasketches/src/main/java/io/druid/query/aggregation/datasketches/theta/SynchronizedUnion.java:71: error: [ParameterPackage] Method parameter has wrong package\r\n public synchronized void update(byte[] data)\r\n ^\r\n (see http://errorprone.info/bugpattern/ParameterPackage)\r\n Did you mean 'public synchronized void update(Array data)'?\r\n/home/travis/build/druid-io/druid/extensions-core/datasketches/src/main/java/io/druid/query/aggregation/datasketches/theta/SynchronizedUnion.java:77: error: [ParameterPackage] Method parameter has wrong package\r\n public synchronized void update(int[] data)\r\n ^\r\n (see http://errorprone.info/bugpattern/ParameterPackage)\r\n Did you mean 'public synchronized void update(Array data)'?\r\n/home/travis/build/druid-io/druid/extensions-core/datasketches/src/main/java/io/druid/query/aggregation/datasketches/theta/SynchronizedUnion.java:83: error: [ParameterPackage] Method parameter has wrong package\r\n public synchronized void update(char[] chars)\r\n ^\r\n (see http://errorprone.info/bugpattern/ParameterPackage)\r\n Did you mean 'public synchronized void update(Array chars)'?\r\nNote: /home/travis/build/druid-io/druid/extensions-core/datasketches/src/main/java/io/druid/query/aggregation/datasketches/theta/SketchMergeComplexMetricSerde.java uses or overrides a deprecated API.\r\nNote: Recompile with -Xlint:deprecation for details.\r\nNote: Some input files use unchecked or unsafe operations.\r\nNote: Recompile with -Xlint:unchecked for details.\r\n```\r\n\r\n@leventov do you know why this one is failing?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/339338101/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/339413161","html_url":"https://github.com/apache/druid/pull/4815#issuecomment-339413161","issue_url":"https://api.github.com/repos/apache/druid/issues/4815","id":339413161,"node_id":"MDEyOklzc3VlQ29tbWVudDMzOTQxMzE2MQ==","user":{"login":"dclim","id":11050882,"node_id":"MDQ6VXNlcjExMDUwODgy","avatar_url":"https://avatars.githubusercontent.com/u/11050882?v=4","gravatar_id":"","url":"https://api.github.com/users/dclim","html_url":"https://github.com/dclim","followers_url":"https://api.github.com/users/dclim/followers","following_url":"https://api.github.com/users/dclim/following{/other_user}","gists_url":"https://api.github.com/users/dclim/gists{/gist_id}","starred_url":"https://api.github.com/users/dclim/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dclim/subscriptions","organizations_url":"https://api.github.com/users/dclim/orgs","repos_url":"https://api.github.com/users/dclim/repos","events_url":"https://api.github.com/users/dclim/events{/privacy}","received_events_url":"https://api.github.com/users/dclim/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-10-25T17:46:35Z","updated_at":"2017-10-25T17:46:35Z","author_association":"CONTRIBUTOR","body":"@pjain1 \r\n\r\n> Regarding, indexing performance, I am also curious to compare that but didn't got a chance to do so. However, we have been running the new code with same task count as with previous code so guessing not much changed (it probably might have decreased a bit because of extra overhead). I am planning to deploy the previous indexing service and compare the ingest/events/processed metrics with current one.\r\n\r\nAwesome, I'm looking forward to seeing the results of the side-by-side comparison with the previous logic.\r\n\r\n> Regarding, time based checkpointing - are you suggesting when enabled apart from maxRowsInSegment threshold, time threshold will be considered as well and whichever threshold is hit earlier, checkpointing will be done ? In case of time based checkpointing, there is a potential to create small sized segments, so I am not sure what advantage it gives us over just waiting for either maxRowsInSegment limit to hit or taskDuration to get over. The only advantage I can see is if taskDuration is too high and ingest event rate is too low then there is potential to reindex events in case we loose all task replicas.\r\n\r\nYes that's what I'm suggesting. I'm looking at this from the angle of being able to support long-running tasks, which is interesting because currently having short task durations can create unnecessary shards at the task transition boundaries, whereas currently long task durations means the peon is responsible for serving more queryable data, merging time is longer, and as you mentioned there's a lot of re-work in the case of a failure. Being able to run long task durations with periodic handoffs will eliminate all of these issues. It would also be interesting if we can get to the point where we don't need 2x worker capacity for a given indexing load (currently we generally need capacity so we can have one task reading while another task is publishing). Having long-running tasks should help here.\r\n\r\nBut for long-running tasks in general, depending solely on the maxRowsInSegment threshold is problematic in the cases where you are receiving less data in a time interval than maxRowsInSegment. For example, say you have taskDuration PT24H, segmentGranularity HOUR, maxRowsInSegment 5M, and you are receiving 4M post-rollup rows per hour. Since maxRowsInSegment never gets hit, the indexing task never does an intermediate handoff and holds onto all that data until taskDuration elapses which is the same behavior as the previous implementation and has all the same issues. Being able to set some kind of intermediateHandoffPeriod would be helpful here. I do agree it can lead to small segments potentially, but I think having this lever available for tuning (and having the option of not using it as well) is helpful.\r\n\r\n> Regarding, perform checkpoint now - I understand it might be a good feature to have. However, the example that you specifically mentioned I am not sure why it is useful when there is a big backlog, how is handing off data in smaller chunks help ? Is it just winning the race against Kafka retention rules so that we don't loose much if Kafka drops data before the task could publish segments for a sequence or anything else ? We can discuss this in next dev sync as well if that is more convenient.\r\n\r\nHm, typically the problems I see with handling backlogs of data is that since there's no way to limit the number of messages read or the rate of message reading from Kafka, tasks wind up ingesting far more data than they would under steady-state conditions which leads to various forms of out-of-memory conditions. One of the more annoying ones is where they run out of heap space for indexing but can't increase `Xmx` so instead decrease `maxRowsInMemory`. But then this results in more intermediate segments being spilled to disk, and when the task finishes, since each of these segments requires off-heap dictionary merge buffers, they then run out of direct memory as well. Typically they'll then change taskDuration to something really small as a way of limiting the amount of data being ingested by each task.\r\n\r\nI think it might be interesting to consider supporting rate limiting as a solution for this scenario. But in the meantime, being able to manually trigger handoffs would provide a workaround that doesn't involve having to change the ingestion spec or make configuration changes. \r\n\r\nTo me, having time-based intermediate handoffs is more important than manually-triggered checkpointing.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/339413161/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/339419193","html_url":"https://github.com/apache/druid/pull/5002#issuecomment-339419193","issue_url":"https://api.github.com/repos/apache/druid/issues/5002","id":339419193,"node_id":"MDEyOklzc3VlQ29tbWVudDMzOTQxOTE5Mw==","user":{"login":"leventov","id":609240,"node_id":"MDQ6VXNlcjYwOTI0MA==","avatar_url":"https://avatars.githubusercontent.com/u/609240?v=4","gravatar_id":"","url":"https://api.github.com/users/leventov","html_url":"https://github.com/leventov","followers_url":"https://api.github.com/users/leventov/followers","following_url":"https://api.github.com/users/leventov/following{/other_user}","gists_url":"https://api.github.com/users/leventov/gists{/gist_id}","starred_url":"https://api.github.com/users/leventov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leventov/subscriptions","organizations_url":"https://api.github.com/users/leventov/orgs","repos_url":"https://api.github.com/users/leventov/repos","events_url":"https://api.github.com/users/leventov/events{/privacy}","received_events_url":"https://api.github.com/users/leventov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-10-25T18:06:38Z","updated_at":"2017-10-25T18:06:38Z","author_association":"MEMBER","body":"@AlexanderSaydakov could you please try to update `plexus-compiler-javac-errorprone` dependency in pom.xml to 2.8.2 and compile without `@SuppressWarnings`?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/339419193/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/339424036","html_url":"https://github.com/apache/druid/issues/4977#issuecomment-339424036","issue_url":"https://api.github.com/repos/apache/druid/issues/4977","id":339424036,"node_id":"MDEyOklzc3VlQ29tbWVudDMzOTQyNDAzNg==","user":{"login":"artmoskvin","id":4936165,"node_id":"MDQ6VXNlcjQ5MzYxNjU=","avatar_url":"https://avatars.githubusercontent.com/u/4936165?v=4","gravatar_id":"","url":"https://api.github.com/users/artmoskvin","html_url":"https://github.com/artmoskvin","followers_url":"https://api.github.com/users/artmoskvin/followers","following_url":"https://api.github.com/users/artmoskvin/following{/other_user}","gists_url":"https://api.github.com/users/artmoskvin/gists{/gist_id}","starred_url":"https://api.github.com/users/artmoskvin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/artmoskvin/subscriptions","organizations_url":"https://api.github.com/users/artmoskvin/orgs","repos_url":"https://api.github.com/users/artmoskvin/repos","events_url":"https://api.github.com/users/artmoskvin/events{/privacy}","received_events_url":"https://api.github.com/users/artmoskvin/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-10-25T18:22:08Z","updated_at":"2017-10-25T18:22:08Z","author_association":"NONE","body":"+1 observing this error","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/339424036/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/339425316","html_url":"https://github.com/apache/druid/issues/4977#issuecomment-339425316","issue_url":"https://api.github.com/repos/apache/druid/issues/4977","id":339425316,"node_id":"MDEyOklzc3VlQ29tbWVudDMzOTQyNTMxNg==","user":{"login":"ywilkof","id":4441877,"node_id":"MDQ6VXNlcjQ0NDE4Nzc=","avatar_url":"https://avatars.githubusercontent.com/u/4441877?v=4","gravatar_id":"","url":"https://api.github.com/users/ywilkof","html_url":"https://github.com/ywilkof","followers_url":"https://api.github.com/users/ywilkof/followers","following_url":"https://api.github.com/users/ywilkof/following{/other_user}","gists_url":"https://api.github.com/users/ywilkof/gists{/gist_id}","starred_url":"https://api.github.com/users/ywilkof/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ywilkof/subscriptions","organizations_url":"https://api.github.com/users/ywilkof/orgs","repos_url":"https://api.github.com/users/ywilkof/repos","events_url":"https://api.github.com/users/ywilkof/events{/privacy}","received_events_url":"https://api.github.com/users/ywilkof/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-10-25T18:26:12Z","updated_at":"2017-10-25T18:26:12Z","author_association":"NONE","body":"I experience it as well.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/339425316/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/339431936","html_url":"https://github.com/apache/druid/pull/5002#issuecomment-339431936","issue_url":"https://api.github.com/repos/apache/druid/issues/5002","id":339431936,"node_id":"MDEyOklzc3VlQ29tbWVudDMzOTQzMTkzNg==","user":{"login":"AlexanderSaydakov","id":13126686,"node_id":"MDQ6VXNlcjEzMTI2Njg2","avatar_url":"https://avatars.githubusercontent.com/u/13126686?v=4","gravatar_id":"","url":"https://api.github.com/users/AlexanderSaydakov","html_url":"https://github.com/AlexanderSaydakov","followers_url":"https://api.github.com/users/AlexanderSaydakov/followers","following_url":"https://api.github.com/users/AlexanderSaydakov/following{/other_user}","gists_url":"https://api.github.com/users/AlexanderSaydakov/gists{/gist_id}","starred_url":"https://api.github.com/users/AlexanderSaydakov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/AlexanderSaydakov/subscriptions","organizations_url":"https://api.github.com/users/AlexanderSaydakov/orgs","repos_url":"https://api.github.com/users/AlexanderSaydakov/repos","events_url":"https://api.github.com/users/AlexanderSaydakov/events{/privacy}","received_events_url":"https://api.github.com/users/AlexanderSaydakov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-10-25T18:47:39Z","updated_at":"2017-10-25T18:47:39Z","author_association":"CONTRIBUTOR","body":"no, plexus-compiler-javac-errorprone-2.8.2 doesn't help","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/339431936/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/339435795","html_url":"https://github.com/apache/druid/pull/5002#issuecomment-339435795","issue_url":"https://api.github.com/repos/apache/druid/issues/5002","id":339435795,"node_id":"MDEyOklzc3VlQ29tbWVudDMzOTQzNTc5NQ==","user":{"login":"AlexanderSaydakov","id":13126686,"node_id":"MDQ6VXNlcjEzMTI2Njg2","avatar_url":"https://avatars.githubusercontent.com/u/13126686?v=4","gravatar_id":"","url":"https://api.github.com/users/AlexanderSaydakov","html_url":"https://github.com/AlexanderSaydakov","followers_url":"https://api.github.com/users/AlexanderSaydakov/followers","following_url":"https://api.github.com/users/AlexanderSaydakov/following{/other_user}","gists_url":"https://api.github.com/users/AlexanderSaydakov/gists{/gist_id}","starred_url":"https://api.github.com/users/AlexanderSaydakov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/AlexanderSaydakov/subscriptions","organizations_url":"https://api.github.com/users/AlexanderSaydakov/orgs","repos_url":"https://api.github.com/users/AlexanderSaydakov/repos","events_url":"https://api.github.com/users/AlexanderSaydakov/events{/privacy}","received_events_url":"https://api.github.com/users/AlexanderSaydakov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-10-25T18:59:45Z","updated_at":"2017-10-25T18:59:45Z","author_association":"CONTRIBUTOR","body":"I see that error_prone_core is a few versions behind, but all versions newer than currently used 2.0.19 are not happy about something in druid/java-util","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/339435795/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/339446104","html_url":"https://github.com/apache/druid/issues/4992#issuecomment-339446104","issue_url":"https://api.github.com/repos/apache/druid/issues/4992","id":339446104,"node_id":"MDEyOklzc3VlQ29tbWVudDMzOTQ0NjEwNA==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-10-25T19:36:04Z","updated_at":"2017-10-25T19:36:04Z","author_association":"CONTRIBUTOR","body":"I thought about it a bit more and things wouldn't work if we put an auto replacement of ':' to '/' .\r\n\r\nLet us you have two brokers with service names \"druid:broker-tier1\" and \"druid/broker-tier2\". and on router side you refer to them by \"druid:broker-tier1\" and \"druid:broker-tier2\".\r\n\r\nIf auto replacement from ':' to '/' is done on discovery side(i.e. at router) only then new router wouldn't be able to see first broker.\r\nAnd if we did auto replacement on announcement side as well (i.e. at broker) then both brokers would announce \"druid/broker-tier1\" and \"druid/broker-tier2\" and old router code wouldn't be able to find them.\r\n\r\nPretty much all releases have a \"Upgrading from release X-1\" and contain information about actions need to be take by users before upgrade. This would be documented there and may be in bold to emphasize.\r\n\r\nI understand that config change would happen for all service discovery properties such as `druid.router.coordinatorServiceName` too in other node configs as well. ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/339446104/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/339448076","html_url":"https://github.com/apache/druid/pull/4983#issuecomment-339448076","issue_url":"https://api.github.com/repos/apache/druid/issues/4983","id":339448076,"node_id":"MDEyOklzc3VlQ29tbWVudDMzOTQ0ODA3Ng==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-10-25T19:43:08Z","updated_at":"2017-10-25T19:43:08Z","author_association":"CONTRIBUTOR","body":"@gianm @jon-wei Do you know if Micostrategy, Looker etc can take multiple broker hosts in their config and can do this type of sticky routing? It appears if we just gave a broker VIP to them then requests would get routed to different brokers and things might not work. Also, This breaks if you have multiple routers, in fact most users don't use routers.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/339448076/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/339449093","html_url":"https://github.com/apache/druid/pull/4983#issuecomment-339449093","issue_url":"https://api.github.com/repos/apache/druid/issues/4983","id":339449093,"node_id":"MDEyOklzc3VlQ29tbWVudDMzOTQ0OTA5Mw==","user":{"login":"jon-wei","id":8729063,"node_id":"MDQ6VXNlcjg3MjkwNjM=","avatar_url":"https://avatars.githubusercontent.com/u/8729063?v=4","gravatar_id":"","url":"https://api.github.com/users/jon-wei","html_url":"https://github.com/jon-wei","followers_url":"https://api.github.com/users/jon-wei/followers","following_url":"https://api.github.com/users/jon-wei/following{/other_user}","gists_url":"https://api.github.com/users/jon-wei/gists{/gist_id}","starred_url":"https://api.github.com/users/jon-wei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jon-wei/subscriptions","organizations_url":"https://api.github.com/users/jon-wei/orgs","repos_url":"https://api.github.com/users/jon-wei/repos","events_url":"https://api.github.com/users/jon-wei/events{/privacy}","received_events_url":"https://api.github.com/users/jon-wei/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-10-25T19:46:30Z","updated_at":"2017-10-25T19:46:30Z","author_association":"CONTRIBUTOR","body":"@himanshug \r\n\r\n> Also, This breaks if you have multiple routers, in fact most users don't use routers.\r\n\r\nWhat issue do you see when there are multiple routers?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/339449093/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/339452906","html_url":"https://github.com/apache/druid/pull/4983#issuecomment-339452906","issue_url":"https://api.github.com/repos/apache/druid/issues/4983","id":339452906,"node_id":"MDEyOklzc3VlQ29tbWVudDMzOTQ1MjkwNg==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-10-25T19:59:59Z","updated_at":"2017-10-25T19:59:59Z","author_association":"CONTRIBUTOR","body":"> What issue do you see when there are multiple routers?\r\n\r\n@jon-wei haven't seen the code in detail but it seems that purpose of this PR is to do sticky routing for requests in same connection so that all queries for same connection are sent to same broker. if you have multiple routers and client sends queries for same connection to different router then they wouldn't necessarily go to same broker. \r\nOr, Its not an issue as long as algorithm to decide on the broker is deterministic and takes \"connectionId\" in the input, which is true for provided implementations. \r\nHowever, it assumes that all routers are running with same value for `druid.router.avatica.balancer` . I think we should note it in the docs.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/339452906/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/339453086","html_url":"https://github.com/apache/druid/pull/4983#issuecomment-339453086","issue_url":"https://api.github.com/repos/apache/druid/issues/4983","id":339453086,"node_id":"MDEyOklzc3VlQ29tbWVudDMzOTQ1MzA4Ng==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-10-25T20:00:37Z","updated_at":"2017-10-25T20:00:37Z","author_association":"CONTRIBUTOR","body":"@himanshug The idea is it shouldn't break with multiple routers, due to the use of the same deterministic hash function across the routers.\r\n\r\nAt least the way it works today, Druid SQL JDBC requires some kind of sticky load balancer, or it requires using routers to provide stickiness in the way that this patch makes possible. It's because Avatica uses multiple HTTP calls for the same logical JDBC connection, and the state is kept on the broker and is not shared between brokers (since the state includes a query result cursor, it is impractical to share it).\r\n\r\nDruid SQL over HTTP doesn't require stickiness and so is preferable operationally unless you really want to use JDBC.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/339453086/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/339453791","html_url":"https://github.com/apache/druid/pull/4983#issuecomment-339453791","issue_url":"https://api.github.com/repos/apache/druid/issues/4983","id":339453791,"node_id":"MDEyOklzc3VlQ29tbWVudDMzOTQ1Mzc5MQ==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-10-25T20:03:14Z","updated_at":"2017-10-25T20:03:14Z","author_association":"CONTRIBUTOR","body":"@jon-wei could you edit the SQL docs too, as part of this? This part should mention the router option:\r\n\r\n> Druid's JDBC server does not share connection state between brokers. This means that if you're using JDBC and have multiple Druid brokers, you should either connect to a specific broker, or use a load balancer with sticky sessions enabled.\r\n\r\nAnd it should probably also mention that the SQL-over-HTTP API is stateless and so no stickiness is needed (just to be super-clear).\r\n\r\n@himanshug @b-slim any concerns with this approach?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/339453791/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/339454222","html_url":"https://github.com/apache/druid/pull/4983#issuecomment-339454222","issue_url":"https://api.github.com/repos/apache/druid/issues/4983","id":339454222,"node_id":"MDEyOklzc3VlQ29tbWVudDMzOTQ1NDIyMg==","user":{"login":"jon-wei","id":8729063,"node_id":"MDQ6VXNlcjg3MjkwNjM=","avatar_url":"https://avatars.githubusercontent.com/u/8729063?v=4","gravatar_id":"","url":"https://api.github.com/users/jon-wei","html_url":"https://github.com/jon-wei","followers_url":"https://api.github.com/users/jon-wei/followers","following_url":"https://api.github.com/users/jon-wei/following{/other_user}","gists_url":"https://api.github.com/users/jon-wei/gists{/gist_id}","starred_url":"https://api.github.com/users/jon-wei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jon-wei/subscriptions","organizations_url":"https://api.github.com/users/jon-wei/orgs","repos_url":"https://api.github.com/users/jon-wei/repos","events_url":"https://api.github.com/users/jon-wei/events{/privacy}","received_events_url":"https://api.github.com/users/jon-wei/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-10-25T20:04:52Z","updated_at":"2017-10-25T20:04:52Z","author_association":"CONTRIBUTOR","body":"@himanshug \r\n\r\n> Or, Its not an issue as long as algorithm to decide on the broker is deterministic and takes \"connectionId\" in the input, which is true for provided implementations.\r\nHowever, it assumes that all routers are running with same value for druid.router.avatica.balancer . I think we should note it in the docs.\r\n\r\nYes, the provided implementations are deterministic and multiple routers will make the same routing decisions for a given connectionID (assuming they share the same view of the set of active brokers).\r\n\r\nI'll add a note to the docs about making sure all routers have the same `druid.router.avatica.balancer` value.\r\n\r\n@gianm Sure, I'll add those notes to the docs as well.\r\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/339454222/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/339455704","html_url":"https://github.com/apache/druid/pull/4983#issuecomment-339455704","issue_url":"https://api.github.com/repos/apache/druid/issues/4983","id":339455704,"node_id":"MDEyOklzc3VlQ29tbWVudDMzOTQ1NTcwNA==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-10-25T20:10:12Z","updated_at":"2017-10-25T20:10:12Z","author_association":"CONTRIBUTOR","body":"@gianm @jon-wei I wonder if you considered the approach of making brokers smart about it? For example... Like routers , brokers also can see all the brokers in the cluster and can have same \"active-brokers\" list . same logic could be implemented on broker to forward/redirect request to a peer broker if it gets request for a connectionId that should be fulfilled by other broker.\r\nThat kind of approach would save users from deploying router node.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/339455704/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/339457515","html_url":"https://github.com/apache/druid/pull/4983#issuecomment-339457515","issue_url":"https://api.github.com/repos/apache/druid/issues/4983","id":339457515,"node_id":"MDEyOklzc3VlQ29tbWVudDMzOTQ1NzUxNQ==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-10-25T20:17:02Z","updated_at":"2017-10-25T20:17:02Z","author_association":"CONTRIBUTOR","body":"@himanshug we considered it but thought that the router was the more natural place to put this, since it already handles proxying and it was not too much additional code to add determinism for JDBC sessions. The router also has an advantage over the broker in that it can handle a lot more concurrent connections (because it uses an async model rather than a thread-per-request model like the broker). It removes the risk of taking up excessive broker http threads by having them proxy to each other.\r\n\r\nFwiw we were also considering using the router to proxy to the leader coordinator to avoid having to deal with redirects… which are problematic when users want to put coordinators behind load balancers. The redirects \"escape\" out of the load balancer and may get blocked by a firewall. If we go down that path, it would make the router the single user-facing node that anyone would have to talk to.\r\n\r\nI could see combining the router and broker nodes in the future too, ideally along with preserving the async nature of the router proxying.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/339457515/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/339473579","html_url":"https://github.com/apache/druid/pull/4815#issuecomment-339473579","issue_url":"https://api.github.com/repos/apache/druid/issues/4815","id":339473579,"node_id":"MDEyOklzc3VlQ29tbWVudDMzOTQ3MzU3OQ==","user":{"login":"pjain1","id":11787983,"node_id":"MDQ6VXNlcjExNzg3OTgz","avatar_url":"https://avatars.githubusercontent.com/u/11787983?v=4","gravatar_id":"","url":"https://api.github.com/users/pjain1","html_url":"https://github.com/pjain1","followers_url":"https://api.github.com/users/pjain1/followers","following_url":"https://api.github.com/users/pjain1/following{/other_user}","gists_url":"https://api.github.com/users/pjain1/gists{/gist_id}","starred_url":"https://api.github.com/users/pjain1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pjain1/subscriptions","organizations_url":"https://api.github.com/users/pjain1/orgs","repos_url":"https://api.github.com/users/pjain1/repos","events_url":"https://api.github.com/users/pjain1/events{/privacy}","received_events_url":"https://api.github.com/users/pjain1/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-10-25T21:14:01Z","updated_at":"2017-10-25T21:14:01Z","author_association":"MEMBER","body":"@dclim Time base handoff sounds reasonable to me now. Probably it can be part of next PR, what do you think ?\r\n\r\n> tasks wind up ingesting far more data than they would under steady-state conditions which leads to various forms of out-of-memory conditions. One of the more annoying ones is where they run out of heap space for indexing but can't increase Xmx so instead decrease maxRowsInMemory\r\n\r\nEven if task ingests more data, the memory consumption is capped by maxRowsInMemory in each case (steady state and back log situation). When this limit is hit in-memory rows are persisted and during this time ingestion is blocked so memory consumption should ideally not go up. Not sure why it is happening.\r\n\r\nAnyways not opposed to the idea of manual trigger but just trying to understand it more.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/339473579/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/339475584","html_url":"https://github.com/apache/druid/pull/4983#issuecomment-339475584","issue_url":"https://api.github.com/repos/apache/druid/issues/4983","id":339475584,"node_id":"MDEyOklzc3VlQ29tbWVudDMzOTQ3NTU4NA==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-10-25T21:21:40Z","updated_at":"2017-10-25T21:22:39Z","author_association":"CONTRIBUTOR","body":"@gianm @jon-wei I will review this PR soon and conversation below is to figure out long term direction rather than blocking this PR.\r\nso we have two directions, one to make router smarter and smarter, make it non-experimental and a node that is recommended to be deployed.\r\nor, to put smartness in specific nodes..\r\nfor brokers, async http is doable. in fact, we do async http in historical for segments management http endpoints, see https://github.com/druid-io/druid/blob/master/server/src/main/java/io/druid/server/http/SegmentListerResource.java#L140 .\r\nfor coordinators, they could also optionally switch to async http (not critical really) and do the forwards instead of redirects (may be based on some configuration this behavior can be enabled/disabled).\r\n\r\nwhat is the direction you have in mind ?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/339475584/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/339478852","html_url":"https://github.com/apache/druid/issues/4479#issuecomment-339478852","issue_url":"https://api.github.com/repos/apache/druid/issues/4479","id":339478852,"node_id":"MDEyOklzc3VlQ29tbWVudDMzOTQ3ODg1Mg==","user":{"login":"pjain1","id":11787983,"node_id":"MDQ6VXNlcjExNzg3OTgz","avatar_url":"https://avatars.githubusercontent.com/u/11787983?v=4","gravatar_id":"","url":"https://api.github.com/users/pjain1","html_url":"https://github.com/pjain1","followers_url":"https://api.github.com/users/pjain1/followers","following_url":"https://api.github.com/users/pjain1/following{/other_user}","gists_url":"https://api.github.com/users/pjain1/gists{/gist_id}","starred_url":"https://api.github.com/users/pjain1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pjain1/subscriptions","organizations_url":"https://api.github.com/users/pjain1/orgs","repos_url":"https://api.github.com/users/pjain1/repos","events_url":"https://api.github.com/users/pjain1/events{/privacy}","received_events_url":"https://api.github.com/users/pjain1/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-10-25T21:34:56Z","updated_at":"2017-10-25T21:34:56Z","author_association":"MEMBER","body":"@jihoonson missed your comments, feel free to use any of the code.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/339478852/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/339485688","html_url":"https://github.com/apache/druid/pull/4815#issuecomment-339485688","issue_url":"https://api.github.com/repos/apache/druid/issues/4815","id":339485688,"node_id":"MDEyOklzc3VlQ29tbWVudDMzOTQ4NTY4OA==","user":{"login":"dclim","id":11050882,"node_id":"MDQ6VXNlcjExMDUwODgy","avatar_url":"https://avatars.githubusercontent.com/u/11050882?v=4","gravatar_id":"","url":"https://api.github.com/users/dclim","html_url":"https://github.com/dclim","followers_url":"https://api.github.com/users/dclim/followers","following_url":"https://api.github.com/users/dclim/following{/other_user}","gists_url":"https://api.github.com/users/dclim/gists{/gist_id}","starred_url":"https://api.github.com/users/dclim/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dclim/subscriptions","organizations_url":"https://api.github.com/users/dclim/orgs","repos_url":"https://api.github.com/users/dclim/repos","events_url":"https://api.github.com/users/dclim/events{/privacy}","received_events_url":"https://api.github.com/users/dclim/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-10-25T22:02:22Z","updated_at":"2017-10-25T22:02:22Z","author_association":"CONTRIBUTOR","body":"@pjain1 cool, doing a follow-on PR is fine.\r\n\r\nIt's not the heap memory that's a problem; as you mentioned that's bounded by maxRowsInMemory. The problem is that decreasing maxRowsInMemory tends to generate more intermediate segments and the number of off-heap merge buffers used for merging intermediate segments is not bounded and increases with more intermediate segments until you hit the direct memory limit or run out of physical memory.\r\n\r\nProbably ideally those would also be bounded and merging would be done incrementally if it requires more buffers than are available, but anyway, that's an issue that we see once in a while.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/339485688/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/339508096","html_url":"https://github.com/apache/druid/pull/4852#issuecomment-339508096","issue_url":"https://api.github.com/repos/apache/druid/issues/4852","id":339508096,"node_id":"MDEyOklzc3VlQ29tbWVudDMzOTUwODA5Ng==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-10-25T23:49:36Z","updated_at":"2017-10-25T23:49:36Z","author_association":"CONTRIBUTOR","body":"Is this configurations designed to allow different value for each node? I wonder what happens if the nodes (including brokers and historicals) accidentally have different `druid.server.http.maxQueryTimeout`. ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/339508096/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/339508715","html_url":"https://github.com/apache/druid/pull/4852#issuecomment-339508715","issue_url":"https://api.github.com/repos/apache/druid/issues/4852","id":339508715,"node_id":"MDEyOklzc3VlQ29tbWVudDMzOTUwODcxNQ==","user":{"login":"akashdw","id":5886276,"node_id":"MDQ6VXNlcjU4ODYyNzY=","avatar_url":"https://avatars.githubusercontent.com/u/5886276?v=4","gravatar_id":"","url":"https://api.github.com/users/akashdw","html_url":"https://github.com/akashdw","followers_url":"https://api.github.com/users/akashdw/followers","following_url":"https://api.github.com/users/akashdw/following{/other_user}","gists_url":"https://api.github.com/users/akashdw/gists{/gist_id}","starred_url":"https://api.github.com/users/akashdw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/akashdw/subscriptions","organizations_url":"https://api.github.com/users/akashdw/orgs","repos_url":"https://api.github.com/users/akashdw/repos","events_url":"https://api.github.com/users/akashdw/events{/privacy}","received_events_url":"https://api.github.com/users/akashdw/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-10-25T23:53:34Z","updated_at":"2017-10-25T23:53:34Z","author_association":"CONTRIBUTOR","body":"@jihoonson Yes, this configuration is designed to allow different value for each node. You can setup different timeouts for different tiers as well as different value for broker and peons.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/339508715/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/339509645","html_url":"https://github.com/apache/druid/pull/4852#issuecomment-339509645","issue_url":"https://api.github.com/repos/apache/druid/issues/4852","id":339509645,"node_id":"MDEyOklzc3VlQ29tbWVudDMzOTUwOTY0NQ==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-10-26T00:00:14Z","updated_at":"2017-10-26T00:02:19Z","author_association":"CONTRIBUTOR","body":"@akashdw thanks. The design looks good to me, but don't we need something to avoid misconfiguration? For example, if the timeout of brokers is smaller than that of historicals, all queries which took more time than broker timeout will be eventually failed at brokers.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/339509645/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/339509765","html_url":"https://github.com/apache/druid/pull/4852#issuecomment-339509765","issue_url":"https://api.github.com/repos/apache/druid/issues/4852","id":339509765,"node_id":"MDEyOklzc3VlQ29tbWVudDMzOTUwOTc2NQ==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-10-26T00:01:01Z","updated_at":"2017-10-26T00:01:01Z","author_association":"CONTRIBUTOR","body":"Maybe better to allow this configuration only for brokers.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/339509765/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/339511180","html_url":"https://github.com/apache/druid/pull/4983#issuecomment-339511180","issue_url":"https://api.github.com/repos/apache/druid/issues/4983","id":339511180,"node_id":"MDEyOklzc3VlQ29tbWVudDMzOTUxMTE4MA==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-10-26T00:10:32Z","updated_at":"2017-10-26T00:10:32Z","author_association":"CONTRIBUTOR","body":"@himanshug in my view, the short term direction is add more smarts to the router, since that's the simplest path and we have some needs for a \"smarter\" proxy layer.\r\n\r\nIn the long run, I'm not sure, although I think integrating the broker and router is probably best, so there is just one node type that users need to worry about. (the broker, which could proxy to anything else)","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/339511180/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/339514026","html_url":"https://github.com/apache/druid/pull/4852#issuecomment-339514026","issue_url":"https://api.github.com/repos/apache/druid/issues/4852","id":339514026,"node_id":"MDEyOklzc3VlQ29tbWVudDMzOTUxNDAyNg==","user":{"login":"akashdw","id":5886276,"node_id":"MDQ6VXNlcjU4ODYyNzY=","avatar_url":"https://avatars.githubusercontent.com/u/5886276?v=4","gravatar_id":"","url":"https://api.github.com/users/akashdw","html_url":"https://github.com/akashdw","followers_url":"https://api.github.com/users/akashdw/followers","following_url":"https://api.github.com/users/akashdw/following{/other_user}","gists_url":"https://api.github.com/users/akashdw/gists{/gist_id}","starred_url":"https://api.github.com/users/akashdw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/akashdw/subscriptions","organizations_url":"https://api.github.com/users/akashdw/orgs","repos_url":"https://api.github.com/users/akashdw/repos","events_url":"https://api.github.com/users/akashdw/events{/privacy}","received_events_url":"https://api.github.com/users/akashdw/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-10-26T00:29:59Z","updated_at":"2017-10-26T00:33:04Z","author_association":"CONTRIBUTOR","body":"@jihoonson Thanks for your response.\r\n You can always choose to set this property only for brokers that means there won't be any maxtimeout limit(Long.MAX) on historical. \r\n\r\n> Maybe better to allow this configuration only for brokers.\r\n\r\nIn fact we are planning to set little bit higher value in broker compared to historical in our clusters considering brokers total time is little bit higher than of historical b/c of merge and data transfer from historical. \r\n\r\n> don't we need something to avoid misconfiguration\r\n\r\nThere are other properties that can be misconfigured and not allowing or restricting those properties to some services doesn't sounds reasonable to me. I think if misconfiguration is something serious and people are complaining about it then it should be solved for all configurations.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/339514026/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/339518275","html_url":"https://github.com/apache/druid/pull/4852#issuecomment-339518275","issue_url":"https://api.github.com/repos/apache/druid/issues/4852","id":339518275,"node_id":"MDEyOklzc3VlQ29tbWVudDMzOTUxODI3NQ==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-10-26T01:01:25Z","updated_at":"2017-10-26T01:01:25Z","author_association":"CONTRIBUTOR","body":"@akashdw thank you for the detailed explanation.\r\n\r\n> We are planning to set lower values in historical and little bit higher value in broker in our clusters considering brokers total time is little bit higher than of historical b/c of merge and data transfer from historical.\r\n\r\nThanks. It makes sense to me. \r\n\r\n> There are other properties that can be misconfigured and not allowing or restricting those properties to some services doesn't sounds reasonable to me. I think if misconfiguration is something serious and people are complaining about it then it should be solved for all configurations.\r\n\r\nI agree. Here are what I concerned with this configuration.\r\nI think `druid.server.http.maxQueryTimeout` is quite complicated. The key difference from most other properties is it can behave differently in each node according to its value even in the same query processing. Would you let me know which configurations are like this? I agree that we should solve them together.\r\n\r\nBTW, the doc should contain that `druid.server.http.maxQueryTimeout` in brokers should be larger than in historicals and explain what happens.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/339518275/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/339544473","html_url":"https://github.com/apache/druid/pull/4823#issuecomment-339544473","issue_url":"https://api.github.com/repos/apache/druid/issues/4823","id":339544473,"node_id":"MDEyOklzc3VlQ29tbWVudDMzOTU0NDQ3Mw==","user":{"login":"jon-wei","id":8729063,"node_id":"MDQ6VXNlcjg3MjkwNjM=","avatar_url":"https://avatars.githubusercontent.com/u/8729063?v=4","gravatar_id":"","url":"https://api.github.com/users/jon-wei","html_url":"https://github.com/jon-wei","followers_url":"https://api.github.com/users/jon-wei/followers","following_url":"https://api.github.com/users/jon-wei/following{/other_user}","gists_url":"https://api.github.com/users/jon-wei/gists{/gist_id}","starred_url":"https://api.github.com/users/jon-wei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jon-wei/subscriptions","organizations_url":"https://api.github.com/users/jon-wei/orgs","repos_url":"https://api.github.com/users/jon-wei/repos","events_url":"https://api.github.com/users/jon-wei/events{/privacy}","received_events_url":"https://api.github.com/users/jon-wei/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-10-26T03:59:04Z","updated_at":"2017-10-26T03:59:04Z","author_association":"CONTRIBUTOR","body":"@jihoonson I added a RegexMatchBenchmark for benchmarking regex pattern compilation and matching, these are the results I'm seeing on my macbook:\r\n\r\n```\r\n# Run complete. Total time: 00:06:22\r\n\r\nBenchmark                                                   (numPatterns)  Mode  Cnt       Score      Error  Units\r\nRegexMatchBenchmark.compileGranularityPathRegex                    100000  avgt   25  176488.968 ± 2731.548  us/op\r\nRegexMatchBenchmark.compileGranularityPathRegexAndMatch            100000  avgt   25  196734.506 ± 6023.698  us/op\r\nRegexMatchBenchmark.compileUUIDRegex                               100000  avgt   25   62557.928 ± 1232.438  us/op\r\nRegexMatchBenchmark.compileUUIDRegexAndMatch                       100000  avgt   25   98763.608 ± 2052.479  us/op\r\nRegexMatchBenchmark.compileUUIDsAsRegex                            100000  avgt   25   74987.953 ± 1011.895  us/op\r\nRegexMatchBenchmark.compileUUIDsAsRegexAndMatchRandomUUID          100000  avgt   25   79894.899 ± 1000.825  us/op\r\nRegexMatchBenchmark.deserializeGranularityPathRegex                100000  avgt   25  233961.684 ± 2421.426  us/op\r\nRegexMatchBenchmark.deserializeUUIDRegex                           100000  avgt   25  107444.061 ± 1850.141  us/op\r\nRegexMatchBenchmark.precompileGranularityPathRegexAndMatch         100000  avgt   25   19848.358 ±  312.136  us/op\r\nRegexMatchBenchmark.precompileUUIDRegexAndMatch                    100000  avgt   25   29987.644 ±  407.776  us/op\r\n```\r\n\r\nRoughly, with the test regexes used in that benchmark (one for UUID strings, and a more complex one taken from Granularity), compile + match takes ~2us or lower.\r\n\r\nDeserializing a byte[] representation of a Pattern using DefaultObjectMapper is also slower than recompiling the pattern from the regex string.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/339544473/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/339552468","html_url":"https://github.com/apache/druid/pull/4823#issuecomment-339552468","issue_url":"https://api.github.com/repos/apache/druid/issues/4823","id":339552468,"node_id":"MDEyOklzc3VlQ29tbWVudDMzOTU1MjQ2OA==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-10-26T05:06:25Z","updated_at":"2017-10-26T05:06:25Z","author_association":"CONTRIBUTOR","body":"@jon-wei thanks for sharing the benchmark result. I was concerned with the performance because BasicRoleBasedAuthorizer.permissionCheck() always compile a new pattern for each permissionResourceName. This method may become slow as the number of resourceAction increases. Do you have any better idea? Maybe caching compiled patterns?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/339552468/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/339566020","html_url":"https://github.com/apache/druid/pull/4823#issuecomment-339566020","issue_url":"https://api.github.com/repos/apache/druid/issues/4823","id":339566020,"node_id":"MDEyOklzc3VlQ29tbWVudDMzOTU2NjAyMA==","user":{"login":"jon-wei","id":8729063,"node_id":"MDQ6VXNlcjg3MjkwNjM=","avatar_url":"https://avatars.githubusercontent.com/u/8729063?v=4","gravatar_id":"","url":"https://api.github.com/users/jon-wei","html_url":"https://github.com/jon-wei","followers_url":"https://api.github.com/users/jon-wei/followers","following_url":"https://api.github.com/users/jon-wei/following{/other_user}","gists_url":"https://api.github.com/users/jon-wei/gists{/gist_id}","starred_url":"https://api.github.com/users/jon-wei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jon-wei/subscriptions","organizations_url":"https://api.github.com/users/jon-wei/orgs","repos_url":"https://api.github.com/users/jon-wei/repos","events_url":"https://api.github.com/users/jon-wei/events{/privacy}","received_events_url":"https://api.github.com/users/jon-wei/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-10-26T06:35:42Z","updated_at":"2017-10-26T06:35:42Z","author_association":"CONTRIBUTOR","body":"@jihoonson I added a cache for the compiled regex patterns ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/339566020/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]