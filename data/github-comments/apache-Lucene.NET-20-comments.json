[{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1901006140","html_url":"https://github.com/apache/lucenenet/pull/887#issuecomment-1901006140","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/887","id":1901006140,"node_id":"IC_kwDOAAJ06c5xTw08","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-01-19T19:42:36Z","updated_at":"2024-01-19T19:42:36Z","author_association":"CONTRIBUTOR","body":"Closing for the reasons mentioned in https://github.com/apache/lucenenet/issues/886#issuecomment-1812835542","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1901006140/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1901023856","html_url":"https://github.com/apache/lucenenet/pull/864#issuecomment-1901023856","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/864","id":1901023856,"node_id":"IC_kwDOAAJ06c5xT1Jw","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-01-19T19:56:22Z","updated_at":"2024-01-19T19:56:22Z","author_association":"CONTRIBUTOR","body":"Closing, as this is a feature that didn't exist in Lucene 4.8.0 and has breaking API changes that will be confusing to users.\r\n\r\nWe will gain this feature automatically when we do the upgrade. Getting out of sync with Lucene releases puts us in a situation where we have a library that is impossible to debug because there is nothing in Java to compare execution paths with.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1901023856/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1901950849","html_url":"https://github.com/apache/lucenenet/issues/789#issuecomment-1901950849","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/789","id":1901950849,"node_id":"IC_kwDOAAJ06c5xXXeB","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-01-20T08:32:00Z","updated_at":"2024-01-20T08:32:00Z","author_association":"CONTRIBUTOR","body":"There doesn't seem to be an issue to solve here. It is more or less a complaint about the design. If this is an issue for you, please take it up with the [Lucene team](https://github.com/apache/lucene/issues) and they will either be able to address this or tell you why it does what it does.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1901950849/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1901960938","html_url":"https://github.com/apache/lucenenet/issues/758#issuecomment-1901960938","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/758","id":1901960938,"node_id":"IC_kwDOAAJ06c5xXZ7q","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-01-20T08:38:39Z","updated_at":"2024-01-20T08:38:39Z","author_association":"CONTRIBUTOR","body":"The GitHub issues is not a general Q & A forum, we use it to track the tasks that we need to do to complete the port and then move on to upgrading it to the latest version of Lucene. Please direct any general usability questions to [StackOverflow](https://stackoverflow.com/questions/tagged/lucene.net) (be sure to include the `lucene` tag if it is not specifically about .NET) or the [Lucene.NET user mailing list](https://lucenenet.apache.org/contributing/mailing-lists.html#users-user).","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1901960938/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1902097205","html_url":"https://github.com/apache/lucenenet/issues/896#issuecomment-1902097205","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/896","id":1902097205,"node_id":"IC_kwDOAAJ06c5xX7M1","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-01-20T13:42:59Z","updated_at":"2024-01-20T13:42:59Z","author_association":"CONTRIBUTOR","body":"I was able to isolate this by adding code to the test to generate the sequence of method calls.\r\n\r\n<details>\r\n  <summary>Expand code example</summary>\r\n  \r\n```c#\r\n        [Test]\r\n        public virtual void TestRandomRealisticWhiteSpace()\r\n        {\r\n            IDictionary<string, string> map = new Dictionary<string, string>();\r\n            int numTerms = AtLeast(50);\r\n            for (int i = 0; i < numTerms; i++)\r\n            {\r\n                string randomRealisticUnicodeString = TestUtil.RandomRealisticUnicodeString(Random);\r\n                char[] charArray = randomRealisticUnicodeString.ToCharArray();\r\n                StringBuilder sb = new StringBuilder();\r\n                for (int j = 0; j < charArray.Length;)\r\n                {\r\n                    int cp = Character.CodePointAt(charArray, j, charArray.Length);\r\n                    if (!Character.IsWhiteSpace(cp))\r\n                    {\r\n                        sb.AppendCodePoint(cp);\r\n                    }\r\n                    j += Character.CharCount(cp);\r\n                }\r\n                if (sb.Length > 0)\r\n                {\r\n                    string value = TestUtil.RandomSimpleString(Random);\r\n                    map[sb.ToString()] = value.Length == 0 ? \"a\" : value;\r\n\r\n                }\r\n            }\r\n            if (map.Count == 0)\r\n            {\r\n                map[\"booked\"] = \"books\";\r\n            }\r\n\r\n            using var writer = new StreamWriter(@\"F:\\testgen.txt\", append: false, Encoding.UTF8);\r\n\r\n            bool ignoreCase = Random.nextBoolean();\r\n\r\n            writer.WriteLine($\"StemmerOverrideFilter.Builder builder = new StemmerOverrideFilter.Builder({ignoreCase.ToString().ToLowerInvariant()});\");\r\n            writer.WriteLine($\"StringBuilder input = new StringBuilder();\");\r\n            writer.WriteLine($\"IList<string> output = new JCG.List<string>();\");\r\n            writer.WriteLine();\r\n\r\n            StemmerOverrideFilter.Builder builder = new StemmerOverrideFilter.Builder(ignoreCase);\r\n            IDictionary<string, string> entrySet = map;\r\n            StringBuilder input = new StringBuilder();\r\n            IList<string> output = new JCG.List<string>();\r\n            int index = 0;\r\n            foreach (KeyValuePair<string, string> entry in entrySet)\r\n            {\r\n                writer.WriteLine();\r\n                writer.WriteLine($\"builder.Add(\\\"{entry.Key}\\\", \\\"{entry.Value}\\\");\");\r\n                builder.Add(entry.Key, entry.Value);\r\n                if (Random.nextBoolean() || output.Count == 0)\r\n                {\r\n                    writer.WriteLine($\"input.Append(\\\"{entry.Key}\\\").Append(' ');\");\r\n                    writer.WriteLine($\"output.Add(\\\"{entry.Value}\\\");\");\r\n\r\n                    input.Append(entry.Key).Append(' ');\r\n                    output.Add(entry.Value);\r\n                    index++;\r\n                }\r\n                \r\n            }\r\n            writer.WriteLine();\r\n            writer.WriteLine($\"Tokenizer tokenizer = new WhitespaceTokenizer(TEST_VERSION_CURRENT, new StringReader(input.ToString()));\");\r\n            writer.WriteLine($\"TokenStream stream = new PorterStemFilter(new StemmerOverrideFilter(tokenizer, builder.Build()));\");\r\n            writer.WriteLine($\"AssertTokenStreamContents(stream, output.ToArray());\");\r\n\r\n            Tokenizer tokenizer = new WhitespaceTokenizer(TEST_VERSION_CURRENT, new StringReader(input.ToString()));\r\n            TokenStream stream = new PorterStemFilter(new StemmerOverrideFilter(tokenizer, builder.Build()));\r\n            AssertTokenStreamContents(stream, output.ToArray());\r\n        }\r\n```\r\n</details>\r\n\r\nThen I took the result and made a new test and whittled it down to a minimal example.\r\n\r\n<details>\r\n  <summary>Expand code example</summary>\r\n  \r\n```c#\r\n        [Test]\r\n        public virtual void TestRandomRealisticWhiteSpace_Fixed()\r\n        {\r\n            StemmerOverrideFilter.Builder builder = new StemmerOverrideFilter.Builder(true);\r\n            StringBuilder input = new StringBuilder();\r\n            IList<string> output = new JCG.List<string>();\r\n\r\n            builder.Add(\"Ⅲ\", \"ceiqskp\");\r\n            input.Append(\"Ⅲ\").Append(' ');\r\n            output.Add(\"ceiqskp\");\r\n\r\n            builder.Add(\"𐐺𐑇𐑄𐐟𐐀𐐖𐐜𐐉𐐵𐑊𐑉𐑋\", \"mrjxmndpat\");\r\n            builder.Add(\"🄆🇞🅸🄇🅞🇲🅗🇐🇯🄙🆳🇯🆘🅵🄄🇤🅄\", \"a\");\r\n            builder.Add(\"ͨ̑̚\", \"dvaihyu\");\r\n            builder.Add(\"﹠﹛﹑﹕﹪﹑\", \"erczyhyhi\");\r\n            builder.Add(\"⸵⹻⹔⹳⹛⸟⸀⹟⹓⹹⸅⸷⸑⸎\", \"a\");\r\n            builder.Add(\"𐊜𐊀𐊋𐊛𐊚𐊓𐊝𐊏𐊕𐊆𐊎𐊋𐊙𐊁𐊛𐊌𐊈𐊎𐊝𐊇\", \"a\");\r\n            builder.Add(\"ⅲ\", \"etmdu\");\r\n            input.Append(\"ⅲ\").Append(' ');\r\n            output.Add(\"etmdu\");\r\n\r\n            Tokenizer tokenizer = new WhitespaceTokenizer(TEST_VERSION_CURRENT, new StringReader(input.ToString()));\r\n            TokenStream stream = new PorterStemFilter(new StemmerOverrideFilter(tokenizer, builder.Build()));\r\n            AssertTokenStreamContents(stream, output.ToArray());\r\n        }\r\n```\r\n\r\n</details>\r\n\r\nI ported this to Java and it fails there, too. But it became obvious what the issue is - `ignoreCase` is set to `true` and with stemming applied and casing ignored, we end up with `iii` in both cases.\r\n\r\nI checked the main branch on Lucene and this has been fixed already, which I traced to the following commit:\r\n\r\nhttps://github.com/apache/lucene/commit/bce10efeb40c11271cb398c37b859408818b8a00\r\n\r\nSo, no problem at all with the production code, just a poorly thought out test that randomly causes collisions that fail. I will port the changes from the above commit and submit a PR with a patch so the test doesn't randomly fail.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1902097205/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1903457156","html_url":"https://github.com/apache/lucenenet/issues/827#issuecomment-1903457156","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/827","id":1903457156,"node_id":"IC_kwDOAAJ06c5xdHOE","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-01-22T08:11:13Z","updated_at":"2024-01-22T08:11:13Z","author_association":"CONTRIBUTOR","body":"@farQtech - Are you still interested in doing this? If not, please let us know so we can assign it to someone else. Thanks.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1903457156/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1903459062","html_url":"https://github.com/apache/lucenenet/issues/873#issuecomment-1903459062","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/873","id":1903459062,"node_id":"IC_kwDOAAJ06c5xdHr2","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-01-22T08:12:37Z","updated_at":"2024-01-22T08:12:37Z","author_association":"CONTRIBUTOR","body":"@farQtech - Are you still interested in doing this? If not, please let us know so we can assign it to someone else. Thanks.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1903459062/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1904726669","html_url":"https://github.com/apache/lucenenet/pull/892#issuecomment-1904726669","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/892","id":1904726669,"node_id":"IC_kwDOAAJ06c5xh9KN","user":{"login":"paulirwin","id":1874103,"node_id":"MDQ6VXNlcjE4NzQxMDM=","avatar_url":"https://avatars.githubusercontent.com/u/1874103?v=4","gravatar_id":"","url":"https://api.github.com/users/paulirwin","html_url":"https://github.com/paulirwin","followers_url":"https://api.github.com/users/paulirwin/followers","following_url":"https://api.github.com/users/paulirwin/following{/other_user}","gists_url":"https://api.github.com/users/paulirwin/gists{/gist_id}","starred_url":"https://api.github.com/users/paulirwin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paulirwin/subscriptions","organizations_url":"https://api.github.com/users/paulirwin/orgs","repos_url":"https://api.github.com/users/paulirwin/repos","events_url":"https://api.github.com/users/paulirwin/events{/privacy}","received_events_url":"https://api.github.com/users/paulirwin/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-01-22T20:09:42Z","updated_at":"2024-01-22T20:09:42Z","author_association":"CONTRIBUTOR","body":"I'm not entirely sure why from reviewing the code, but this build is failing on macOS arm64, and the error is in the net472 target:\r\n```\r\nerror MSB4018: The \"IkvmCompiler\" task failed unexpectedly. [{...}/src/Lucene.Net.Analysis.OpenNLP/Lucene.Net.Analysis.OpenNLP.csproj::TargetFramework=net472]\r\n```\r\n\r\nI don't see a corresponding change that would obviously cause it to try to run a .NET FX build on macOS, but something is amiss.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1904726669/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1904737913","html_url":"https://github.com/apache/lucenenet/issues/259#issuecomment-1904737913","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/259","id":1904737913,"node_id":"IC_kwDOAAJ06c5xh_55","user":{"login":"paulirwin","id":1874103,"node_id":"MDQ6VXNlcjE4NzQxMDM=","avatar_url":"https://avatars.githubusercontent.com/u/1874103?v=4","gravatar_id":"","url":"https://api.github.com/users/paulirwin","html_url":"https://github.com/paulirwin","followers_url":"https://api.github.com/users/paulirwin/followers","following_url":"https://api.github.com/users/paulirwin/following{/other_user}","gists_url":"https://api.github.com/users/paulirwin/gists{/gist_id}","starred_url":"https://api.github.com/users/paulirwin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paulirwin/subscriptions","organizations_url":"https://api.github.com/users/paulirwin/orgs","repos_url":"https://api.github.com/users/paulirwin/repos","events_url":"https://api.github.com/users/paulirwin/events{/privacy}","received_events_url":"https://api.github.com/users/paulirwin/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-01-22T20:17:59Z","updated_at":"2024-10-22T14:11:29Z","author_association":"CONTRIBUTOR","body":"T-Z done and merged, moving backwards to the J-S monster (1,158 tests):\r\n\r\n- [x] Search/Payloads\r\n- [x] Search/Similarities\r\n- [x] Search/Spans\r\n- [x] Search/B-TestB\r\n- [x] Search/TestC\r\n- [x] Search/TestD-TestE\r\n- [x] Search/TestF-TestL\r\n- [x] Search/TestM-TestN\r\n- [x] Search/TestP-TestQ\r\n- [x] Search/TestR-TestSh\r\n- [x] Search/TestSi-TestSu\r\n- [x] Search/TestT-TestW\r\n- [x] Store/TestB-TestH\r\n- [x] Store/TestL-TestW\r\n- [x] Support/Codecs\r\n- [x] Support/Diagnostics\r\n- [x] Support/Document/Extensions\r\n- [x] Support/IO\r\n- [x] Support/Threading\r\n- [x] Support/Util\r\n- [x] Support","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1904737913/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1905596894","html_url":"https://github.com/apache/lucenenet/issues/893#issuecomment-1905596894","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/893","id":1905596894,"node_id":"IC_kwDOAAJ06c5xlRne","user":{"login":"jaivardhan-bhola","id":83286825,"node_id":"MDQ6VXNlcjgzMjg2ODI1","avatar_url":"https://avatars.githubusercontent.com/u/83286825?v=4","gravatar_id":"","url":"https://api.github.com/users/jaivardhan-bhola","html_url":"https://github.com/jaivardhan-bhola","followers_url":"https://api.github.com/users/jaivardhan-bhola/followers","following_url":"https://api.github.com/users/jaivardhan-bhola/following{/other_user}","gists_url":"https://api.github.com/users/jaivardhan-bhola/gists{/gist_id}","starred_url":"https://api.github.com/users/jaivardhan-bhola/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jaivardhan-bhola/subscriptions","organizations_url":"https://api.github.com/users/jaivardhan-bhola/orgs","repos_url":"https://api.github.com/users/jaivardhan-bhola/repos","events_url":"https://api.github.com/users/jaivardhan-bhola/events{/privacy}","received_events_url":"https://api.github.com/users/jaivardhan-bhola/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-01-23T09:01:20Z","updated_at":"2024-01-23T09:01:20Z","author_association":"CONTRIBUTOR","body":"Can I work on this?","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1905596894/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1908149464","html_url":"https://github.com/apache/lucenenet/issues/893#issuecomment-1908149464","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/893","id":1908149464,"node_id":"IC_kwDOAAJ06c5xvAzY","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-01-24T13:43:03Z","updated_at":"2024-01-24T13:43:03Z","author_association":"CONTRIBUTOR","body":"@jaivardhan-bhola - Sure. I have assigned it to you. Let us know if you need any assistance.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1908149464/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1908820527","html_url":"https://github.com/apache/lucenenet/issues/907#issuecomment-1908820527","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/907","id":1908820527,"node_id":"IC_kwDOAAJ06c5xxkov","user":{"login":"paulirwin","id":1874103,"node_id":"MDQ6VXNlcjE4NzQxMDM=","avatar_url":"https://avatars.githubusercontent.com/u/1874103?v=4","gravatar_id":"","url":"https://api.github.com/users/paulirwin","html_url":"https://github.com/paulirwin","followers_url":"https://api.github.com/users/paulirwin/followers","following_url":"https://api.github.com/users/paulirwin/following{/other_user}","gists_url":"https://api.github.com/users/paulirwin/gists{/gist_id}","starred_url":"https://api.github.com/users/paulirwin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paulirwin/subscriptions","organizations_url":"https://api.github.com/users/paulirwin/orgs","repos_url":"https://api.github.com/users/paulirwin/repos","events_url":"https://api.github.com/users/paulirwin/events{/privacy}","received_events_url":"https://api.github.com/users/paulirwin/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-01-24T19:55:53Z","updated_at":"2024-01-24T19:55:53Z","author_association":"CONTRIBUTOR","body":"Thanks for the report, I'll take a look at this","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1908820527/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1908842049","html_url":"https://github.com/apache/lucenenet/issues/907#issuecomment-1908842049","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/907","id":1908842049,"node_id":"IC_kwDOAAJ06c5xxp5B","user":{"login":"paulirwin","id":1874103,"node_id":"MDQ6VXNlcjE4NzQxMDM=","avatar_url":"https://avatars.githubusercontent.com/u/1874103?v=4","gravatar_id":"","url":"https://api.github.com/users/paulirwin","html_url":"https://github.com/paulirwin","followers_url":"https://api.github.com/users/paulirwin/followers","following_url":"https://api.github.com/users/paulirwin/following{/other_user}","gists_url":"https://api.github.com/users/paulirwin/gists{/gist_id}","starred_url":"https://api.github.com/users/paulirwin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paulirwin/subscriptions","organizations_url":"https://api.github.com/users/paulirwin/orgs","repos_url":"https://api.github.com/users/paulirwin/repos","events_url":"https://api.github.com/users/paulirwin/events{/privacy}","received_events_url":"https://api.github.com/users/paulirwin/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-01-24T20:09:47Z","updated_at":"2024-01-24T20:09:47Z","author_association":"CONTRIBUTOR","body":"Okay, this happens in Java Lucene too, it's because you're passing `null` in as the default field to the QueryParser constructor.\r\n\r\nYou need to specify a default field for if a field is not present in the query, like in this case. i.e. if you want your default field to search to be \"Text\", you'd pass `\"Text\"` in as that second parameter instead of `null`. Let me know if this fixes your issue.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1908842049/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1908847875","html_url":"https://github.com/apache/lucenenet/issues/907#issuecomment-1908847875","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/907","id":1908847875,"node_id":"IC_kwDOAAJ06c5xxrUD","user":{"login":"jooooel","id":9303280,"node_id":"MDQ6VXNlcjkzMDMyODA=","avatar_url":"https://avatars.githubusercontent.com/u/9303280?v=4","gravatar_id":"","url":"https://api.github.com/users/jooooel","html_url":"https://github.com/jooooel","followers_url":"https://api.github.com/users/jooooel/followers","following_url":"https://api.github.com/users/jooooel/following{/other_user}","gists_url":"https://api.github.com/users/jooooel/gists{/gist_id}","starred_url":"https://api.github.com/users/jooooel/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jooooel/subscriptions","organizations_url":"https://api.github.com/users/jooooel/orgs","repos_url":"https://api.github.com/users/jooooel/repos","events_url":"https://api.github.com/users/jooooel/events{/privacy}","received_events_url":"https://api.github.com/users/jooooel/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-01-24T20:14:17Z","updated_at":"2024-01-24T20:14:17Z","author_association":"NONE","body":"Thanks @paulirwin. I can confirm that it does work if I pass something other than `null` 👍. \r\n\r\nI guess I can put whatever there, my use case is that I'm using Lucene.NET to parse a very basic boolean query. I'm really only interested in the terms, I won't support using fields anyway.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1908847875/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1912373661","html_url":"https://github.com/apache/lucenenet/pull/892#issuecomment-1912373661","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/892","id":1912373661,"node_id":"IC_kwDOAAJ06c5x_IGd","user":{"login":"paulirwin","id":1874103,"node_id":"MDQ6VXNlcjE4NzQxMDM=","avatar_url":"https://avatars.githubusercontent.com/u/1874103?v=4","gravatar_id":"","url":"https://api.github.com/users/paulirwin","html_url":"https://github.com/paulirwin","followers_url":"https://api.github.com/users/paulirwin/followers","following_url":"https://api.github.com/users/paulirwin/following{/other_user}","gists_url":"https://api.github.com/users/paulirwin/gists{/gist_id}","starred_url":"https://api.github.com/users/paulirwin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paulirwin/subscriptions","organizations_url":"https://api.github.com/users/paulirwin/orgs","repos_url":"https://api.github.com/users/paulirwin/repos","events_url":"https://api.github.com/users/paulirwin/events{/privacy}","received_events_url":"https://api.github.com/users/paulirwin/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-01-26T16:52:10Z","updated_at":"2024-01-26T16:52:10Z","author_association":"CONTRIBUTOR","body":"Update from my prior comment: this now builds with skipping the netfx target on macOS. Approved.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1912373661/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1916192001","html_url":"https://github.com/apache/lucenenet/issues/893#issuecomment-1916192001","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/893","id":1916192001,"node_id":"IC_kwDOAAJ06c5yNsUB","user":{"login":"jaivardhan-bhola","id":83286825,"node_id":"MDQ6VXNlcjgzMjg2ODI1","avatar_url":"https://avatars.githubusercontent.com/u/83286825?v=4","gravatar_id":"","url":"https://api.github.com/users/jaivardhan-bhola","html_url":"https://github.com/jaivardhan-bhola","followers_url":"https://api.github.com/users/jaivardhan-bhola/followers","following_url":"https://api.github.com/users/jaivardhan-bhola/following{/other_user}","gists_url":"https://api.github.com/users/jaivardhan-bhola/gists{/gist_id}","starred_url":"https://api.github.com/users/jaivardhan-bhola/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jaivardhan-bhola/subscriptions","organizations_url":"https://api.github.com/users/jaivardhan-bhola/orgs","repos_url":"https://api.github.com/users/jaivardhan-bhola/repos","events_url":"https://api.github.com/users/jaivardhan-bhola/events{/privacy}","received_events_url":"https://api.github.com/users/jaivardhan-bhola/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-01-30T06:58:21Z","updated_at":"2024-01-30T06:58:21Z","author_association":"CONTRIBUTOR","body":"Lemme know if other changes are needed.\r\n","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1916192001/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1916471522","html_url":"https://github.com/apache/lucenenet/pull/908#issuecomment-1916471522","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/908","id":1916471522,"node_id":"IC_kwDOAAJ06c5yOwji","user":{"login":"jaivardhan-bhola","id":83286825,"node_id":"MDQ6VXNlcjgzMjg2ODI1","avatar_url":"https://avatars.githubusercontent.com/u/83286825?v=4","gravatar_id":"","url":"https://api.github.com/users/jaivardhan-bhola","html_url":"https://github.com/jaivardhan-bhola","followers_url":"https://api.github.com/users/jaivardhan-bhola/followers","following_url":"https://api.github.com/users/jaivardhan-bhola/following{/other_user}","gists_url":"https://api.github.com/users/jaivardhan-bhola/gists{/gist_id}","starred_url":"https://api.github.com/users/jaivardhan-bhola/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jaivardhan-bhola/subscriptions","organizations_url":"https://api.github.com/users/jaivardhan-bhola/orgs","repos_url":"https://api.github.com/users/jaivardhan-bhola/repos","events_url":"https://api.github.com/users/jaivardhan-bhola/events{/privacy}","received_events_url":"https://api.github.com/users/jaivardhan-bhola/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-01-30T09:57:05Z","updated_at":"2024-01-30T09:57:05Z","author_association":"CONTRIBUTOR","body":"I have done the changes you asked for ","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1916471522/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1916566812","html_url":"https://github.com/apache/lucenenet/issues/893#issuecomment-1916566812","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/893","id":1916566812,"node_id":"IC_kwDOAAJ06c5yPH0c","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-01-30T10:45:00Z","updated_at":"2024-01-30T10:45:00Z","author_association":"CONTRIBUTOR","body":"These changes are now live: https://lucenenet.apache.org/contributing/index.html#slack-channel","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1916566812/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1918356000","html_url":"https://github.com/apache/lucenenet/issues/910#issuecomment-1918356000","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/910","id":1918356000,"node_id":"IC_kwDOAAJ06c5yV8og","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-01-31T04:24:26Z","updated_at":"2024-01-31T04:24:26Z","author_association":"CONTRIBUTOR","body":"The [Migration Guide](https://lucenenet.apache.org/docs/4.8.0-beta00016/api/core/migration-guide.html) covers this very issue with an example:\r\n\r\n## [LUCENE-2380](https://issues.apache.org/jira/browse/LUCENE-2380): FieldCache.GetStrings/Index --> FieldCache.GetDocTerms/Index\r\n\r\n* The field values returned when sorting by `SortField.STRING` are now\r\n  `BytesRef`.  You can call `value.Utf8ToString()` to convert back to\r\n  string, if necessary.\r\n\r\n* In `FieldCache`, `GetStrings` (returning `string[]`) has been replaced\r\n  with `GetTerms` (returning a `BinaryDocValues` instance).\r\n  `BinaryDocValues` provides a `Get` method, taking a `docID` and a `BytesRef`\r\n  to fill (which must not be `null`), and it fills it in with the\r\n  reference to the bytes for that term.<br/>\r\n    If you had code like this before:\r\n    ```cs\r\n    string[] values = FieldCache.DEFAULT.GetStrings(reader, field);\r\n    ...\r\n    string aValue = values[docID];\r\n    ```\r\n    you can do this instead:\r\n    ```cs\r\n    BinaryDocValues values = FieldCache.DEFAULT.GetTerms(reader, field);\r\n    ...\r\n    BytesRef term = new BytesRef();\r\n    values.Get(docID, term);\r\n    string aValue = term.Utf8ToString();\r\n    ```\r\n    Note however that it can be costly to convert to `String`, so it's better to work directly with the `BytesRef`.\r\n\r\n* Similarly, in `FieldCache`, GetStringIndex (returning a `StringIndex`\r\n  instance, with direct arrays `int[]` order and `String[]` lookup) has\r\n  been replaced with `GetTermsIndex` (returning a\r\n  `SortedDocValues` instance).  `SortedDocValues` provides the\r\n  `GetOrd(int docID)` method to lookup the int order for a document,\r\n  `LookupOrd(int ord, BytesRef result)` to lookup the term from a given\r\n  order, and the sugar method `Get(int docID, BytesRef result)`\r\n  which internally calls `GetOrd` and then `LookupOrd`.<br/>\r\n    If you had code like this before:\r\n    ```cs\r\n    StringIndex idx = FieldCache.DEFAULT.GetStringIndex(reader, field);\r\n    ...\r\n    int ord = idx.order[docID];\r\n    String aValue = idx.lookup[ord];\r\n    ```\r\n    you can do this instead:\r\n    ```cs\r\n    DocTermsIndex idx = FieldCache.DEFAULT.GetTermsIndex(reader, field);\r\n    ...\r\n    int ord = idx.GetOrd(docID);\r\n    BytesRef term = new BytesRef();\r\n    idx.LookupOrd(ord, term);\r\n    string aValue = term.Utf8ToString();\r\n    ```\r\n    Note however that it can be costly to convert to `String`, so it's better to work directly with the `BytesRef`.<br/>\r\n    `DocTermsIndex` also has a `GetTermsEnum()` method, which returns an iterator (`TermsEnum`) over the term values in the index (ie, iterates ord = 0..NumOrd-1).\r\n\r\nFurthermore, if you drill down into the issue [LUCENE-2380](https://issues.apache.org/jira/browse/LUCENE-2380), there is an explanation for the change: primarily, this was done for performance reasons. There is no longer a `string[]` stored in the field cache, the underlying data is now a `byte[]` so extra steps are required to get a UTF8 string.\r\n\r\nDo note that you are meant to *reuse* the `BytesRef` instance that is passed in to get better performance.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1918356000/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1922279540","html_url":"https://github.com/apache/lucenenet/issues/890#issuecomment-1922279540","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/890","id":1922279540,"node_id":"IC_kwDOAAJ06c5yk6h0","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-02-01T21:30:04Z","updated_at":"2024-02-01T21:30:04Z","author_association":"CONTRIBUTOR","body":"I have updated the OpenNLP docs in master, but the API is now so advanced from where we were in beta 16 that the docs wouldn't be correct if we updated them.\r\n\r\nYour complaint was warranted, though. There were docs in Lucene 8.2.0 that we were missing and I have added them here:\r\nhttps://github.com/apache/lucenenet/blob/43e0e894b9b40f5b28064a13ef98874a82c15330/src/Lucene.Net.Analysis.OpenNLP/overview.md\r\n\r\nI also created a demo project showing how to build a filter for NER using OpenNLP and Sentiment using Stanford CoreNLP: https://github.com/NightOwl888/lucenenet-opennlp-mavenreference-demo\r\n\r\nFor integration with OpenNLP on .NET Core until the official release, you can use the feed here: https://dev.azure.com/lucene-net-temp2/Lucene.NET/_artifacts/feed/lucene-net-temp-2. ","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1922279540/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1922286022","html_url":"https://github.com/apache/lucenenet/issues/890#issuecomment-1922286022","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/890","id":1922286022,"node_id":"IC_kwDOAAJ06c5yk8HG","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-02-01T21:34:43Z","updated_at":"2024-02-01T21:34:43Z","author_association":"CONTRIBUTOR","body":"BTW - I was just looking at the code example you posted and noticed a big issue. You won't be able to use `StandardAnalyzer` because it uses the `StandardTokenizer` to tokenize the text, which pulls out all of the punctuation. For OpenNLP tokenization you must use the `OpenNLPTokenizer` to set up your token stream.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1922286022/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1925493490","html_url":"https://github.com/apache/lucenenet/issues/890#issuecomment-1925493490","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/890","id":1925493490,"node_id":"IC_kwDOAAJ06c5yxLLy","user":{"login":"GAInTheHouse","id":55328124,"node_id":"MDQ6VXNlcjU1MzI4MTI0","avatar_url":"https://avatars.githubusercontent.com/u/55328124?v=4","gravatar_id":"","url":"https://api.github.com/users/GAInTheHouse","html_url":"https://github.com/GAInTheHouse","followers_url":"https://api.github.com/users/GAInTheHouse/followers","following_url":"https://api.github.com/users/GAInTheHouse/following{/other_user}","gists_url":"https://api.github.com/users/GAInTheHouse/gists{/gist_id}","starred_url":"https://api.github.com/users/GAInTheHouse/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/GAInTheHouse/subscriptions","organizations_url":"https://api.github.com/users/GAInTheHouse/orgs","repos_url":"https://api.github.com/users/GAInTheHouse/repos","events_url":"https://api.github.com/users/GAInTheHouse/events{/privacy}","received_events_url":"https://api.github.com/users/GAInTheHouse/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-02-04T00:06:12Z","updated_at":"2024-02-04T00:06:12Z","author_association":"NONE","body":"This is great! Thank you @NightOwl888 ","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1925493490/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1928176073","html_url":"https://github.com/apache/lucenenet/issues/911#issuecomment-1928176073","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/911","id":1928176073,"node_id":"IC_kwDOAAJ06c5y7aHJ","user":{"login":"Shazwazza","id":1742685,"node_id":"MDQ6VXNlcjE3NDI2ODU=","avatar_url":"https://avatars.githubusercontent.com/u/1742685?v=4","gravatar_id":"","url":"https://api.github.com/users/Shazwazza","html_url":"https://github.com/Shazwazza","followers_url":"https://api.github.com/users/Shazwazza/followers","following_url":"https://api.github.com/users/Shazwazza/following{/other_user}","gists_url":"https://api.github.com/users/Shazwazza/gists{/gist_id}","starred_url":"https://api.github.com/users/Shazwazza/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Shazwazza/subscriptions","organizations_url":"https://api.github.com/users/Shazwazza/orgs","repos_url":"https://api.github.com/users/Shazwazza/repos","events_url":"https://api.github.com/users/Shazwazza/events{/privacy}","received_events_url":"https://api.github.com/users/Shazwazza/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-02-05T22:01:50Z","updated_at":"2024-02-05T22:01:50Z","author_association":"CONTRIBUTOR","body":"oh my :( ","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1928176073/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1928970653","html_url":"https://github.com/apache/lucenenet/issues/911#issuecomment-1928970653","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/911","id":1928970653,"node_id":"IC_kwDOAAJ06c5y-cGd","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-02-06T08:03:37Z","updated_at":"2024-02-06T08:03:37Z","author_association":"CONTRIBUTOR","body":"@Shazwazza - Yeah, I think we will need to download the docfx source and run it in the debugger to determine how to fix the load issues with the plugins and also fix the MavenReference problem. For MavenReference I think we may need to switch to using the DLL/XML output instead of using the `.csproj` file, since it appears docfx doesn't actually run MSBuild.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1928970653/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1929389419","html_url":"https://github.com/apache/lucenenet/issues/911#issuecomment-1929389419","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/911","id":1929389419,"node_id":"IC_kwDOAAJ06c5zACVr","user":{"login":"filzrev","id":103790468,"node_id":"U_kgDOBi-3hA","avatar_url":"https://avatars.githubusercontent.com/u/103790468?v=4","gravatar_id":"","url":"https://api.github.com/users/filzrev","html_url":"https://github.com/filzrev","followers_url":"https://api.github.com/users/filzrev/followers","following_url":"https://api.github.com/users/filzrev/following{/other_user}","gists_url":"https://api.github.com/users/filzrev/gists{/gist_id}","starred_url":"https://api.github.com/users/filzrev/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/filzrev/subscriptions","organizations_url":"https://api.github.com/users/filzrev/orgs","repos_url":"https://api.github.com/users/filzrev/repos","events_url":"https://api.github.com/users/filzrev/events{/privacy}","received_events_url":"https://api.github.com/users/filzrev/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-02-06T12:09:35Z","updated_at":"2024-02-14T21:17:58Z","author_association":"NONE","body":"> Lucene.Net.Analysis.OpenNLP now fails to build metatdata when executed from docfx.\r\n\r\nOn my environment.\r\nIt can successfully execute `docfx metadata docfx.analysis-opennlp.json` command with following changes.\r\n\r\n**1. Remove MSBuild `TargetFramework` property from `docfx.analysis-opennlp.json`**\r\n\r\nIt seems this settings override target framework(`net6`) that specified at `Lucene.Net.Analysis.OpenNLP.csproj`.\r\n https://github.com/apache/lucenenet/blob/43e0e894b9b40f5b28064a13ef98874a82c15330/websites/apidocs/docfx.analysis-opennlp.json#L17-L19\r\n\r\n**2. Build with .NET 8 SDK v`8.0.200`**\r\nI've confirmed following error is not occurred when build with  .NET 8 preview SDK `8.0.200`.\r\n\r\n```\r\n> ROSLYNCODETASKFACTORYCSHARPCOMPILER : error : Unknown command '/noconfig'.\r\nC:\\Users\\sample\\.nuget\\packages\\ikvm.image\\8.7.5\\buildTransitive\\IKVM.Image.targets(95,9): error : The source file for this compilation can be found at: \"C:\\Users\\sample\\AppData\\Local\\Temp\\MSBuildTempsample\\tmpe1e76f87dcd94e66b4bcf0ec3cccbc5b.tmp\"\r\n```\r\n\r\n**Minimum reproducible `.csproj` for this issue**\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>net6</TargetFramework>\r\n    <ImplicitUsings>enable</ImplicitUsings>\r\n    <Nullable>enable</Nullable>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"IKVM.Maven.Sdk\" Version=\"1.6.8\" />\r\n    <PackageReference Include=\"IKVM.Image\" Version=\"8.7.5\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1929389419/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1936208576","html_url":"https://github.com/apache/lucenenet/pull/912#issuecomment-1936208576","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/912","id":1936208576,"node_id":"IC_kwDOAAJ06c5zaDLA","user":{"login":"eladmarg","id":3823205,"node_id":"MDQ6VXNlcjM4MjMyMDU=","avatar_url":"https://avatars.githubusercontent.com/u/3823205?v=4","gravatar_id":"","url":"https://api.github.com/users/eladmarg","html_url":"https://github.com/eladmarg","followers_url":"https://api.github.com/users/eladmarg/followers","following_url":"https://api.github.com/users/eladmarg/following{/other_user}","gists_url":"https://api.github.com/users/eladmarg/gists{/gist_id}","starred_url":"https://api.github.com/users/eladmarg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eladmarg/subscriptions","organizations_url":"https://api.github.com/users/eladmarg/orgs","repos_url":"https://api.github.com/users/eladmarg/repos","events_url":"https://api.github.com/users/eladmarg/events{/privacy}","received_events_url":"https://api.github.com/users/eladmarg/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-02-09T16:15:54Z","updated_at":"2024-02-09T16:15:54Z","author_association":"CONTRIBUTOR","body":"great catch!","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1936208576/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1962263448","html_url":"https://github.com/apache/lucenenet/issues/915#issuecomment-1962263448","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/915","id":1962263448,"node_id":"IC_kwDOAAJ06c509cOY","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-02-24T05:32:56Z","updated_at":"2024-02-24T05:32:56Z","author_association":"CONTRIBUTOR","body":"Maybe I am missing something, but why aren't you using the built-in string comparer (TermOrdValComparer) with reverse support?\r\n\r\nhttps://github.com/apache/lucenenet/blob/bed207a81acb7d100a5545dc28eeeb66d35e06ba/src/Lucene.Net.Tests/Search/TestSort.cs#L350-L384\r\n\r\nhttps://github.com/apache/lucenenet/blob/bed207a81acb7d100a5545dc28eeeb66d35e06ba/src/Lucene.Net.Tests/Search/TestSort.cs#L279-L312\r\n\r\nIf the custom `FieldComparer` is required, your main issue is that you are allocating memory inside of the comparison methods. Comparers should only allocate memory in the class constructor and/or field initializers, never in the comparison methods, because this will cause a lot of garbage collection overhead.\r\n\r\n```c#\r\n    public override void Copy(int slot, int doc)\r\n    {\r\n        termCopy = new BytesRef(); // Expensive allocation. This method will be called a lot.\r\n        sortedResults.Get(doc, termCopy);\r\n        bvalues[slot] = termCopy;\r\n    }\r\n\r\n    public override int CompareBottom(int doc)\r\n    {\r\n        BytesRef termOrd = new BytesRef(); // Expensive allocation. This method will be called a lot.\r\n        int ord = sortedResults.GetOrd(doc);\r\n        sortedResults.LookupOrd(ord, termOrd); // Expensive lookup. The TermOrdValComparer only does lookups in the Copy() method and only when necessary.\r\n        var result = DoCompare(bvalues[bottomSlot], termOrd);\r\n\r\n        return result;\r\n    }\r\n```\r\n\r\nAlso, the [TermOrdValComparer](https://github.com/apache/lucenenet/blob/Lucene.Net_4_8_0_beta00016/src/Lucene.Net/Search/FieldComparator.cs#L1115) uses ords to do the comparison in most cases, falling back to term comparison only when necessary. See the [`TermOrdValComparer` docs](https://lucenenet.apache.org/docs/4.8.0-beta00016/api/core/Lucene.Net.Search.FieldComparer.TermOrdValComparer.html) and [`FieldComparer<T>` docs](https://lucenenet.apache.org/docs/4.8.0-beta00016/api/core/Lucene.Net.Search.FieldComparer-1.html).","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1962263448/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1962790857","html_url":"https://github.com/apache/lucenenet/pull/914#issuecomment-1962790857","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/914","id":1962790857,"node_id":"IC_kwDOAAJ06c50_c_J","user":{"login":"paulirwin","id":1874103,"node_id":"MDQ6VXNlcjE4NzQxMDM=","avatar_url":"https://avatars.githubusercontent.com/u/1874103?v=4","gravatar_id":"","url":"https://api.github.com/users/paulirwin","html_url":"https://github.com/paulirwin","followers_url":"https://api.github.com/users/paulirwin/followers","following_url":"https://api.github.com/users/paulirwin/following{/other_user}","gists_url":"https://api.github.com/users/paulirwin/gists{/gist_id}","starred_url":"https://api.github.com/users/paulirwin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paulirwin/subscriptions","organizations_url":"https://api.github.com/users/paulirwin/orgs","repos_url":"https://api.github.com/users/paulirwin/repos","events_url":"https://api.github.com/users/paulirwin/events{/privacy}","received_events_url":"https://api.github.com/users/paulirwin/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-02-25T02:26:47Z","updated_at":"2024-02-25T02:26:47Z","author_association":"CONTRIBUTOR","body":"Created issue to track missing Support namespace unit tests: #920 ","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1962790857/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1987100915","html_url":"https://github.com/apache/lucenenet/issues/920#issuecomment-1987100915","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/920","id":1987100915,"node_id":"IC_kwDOAAJ06c52cMDz","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-10T05:56:37Z","updated_at":"2024-03-10T05:56:37Z","author_association":"CONTRIBUTOR","body":"@paulirwin - Perhaps eliminating `ConcurrentDictionaryWrapper<TKey, TValue>` and friends should be a separate issue. Alternatively, it could be rolled into #259. If there is a need for a \"ConcurrentLinkedDictionary\" in later versions of Lucene, perhaps the implementation should be tagged or put on its own branch so we can recover it later.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1987100915/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1988400589","html_url":"https://github.com/apache/lucenenet/issues/928#issuecomment-1988400589","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/928","id":1988400589,"node_id":"IC_kwDOAAJ06c52hJXN","user":{"login":"rclabo","id":6945499,"node_id":"MDQ6VXNlcjY5NDU0OTk=","avatar_url":"https://avatars.githubusercontent.com/u/6945499?v=4","gravatar_id":"","url":"https://api.github.com/users/rclabo","html_url":"https://github.com/rclabo","followers_url":"https://api.github.com/users/rclabo/followers","following_url":"https://api.github.com/users/rclabo/following{/other_user}","gists_url":"https://api.github.com/users/rclabo/gists{/gist_id}","starred_url":"https://api.github.com/users/rclabo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rclabo/subscriptions","organizations_url":"https://api.github.com/users/rclabo/orgs","repos_url":"https://api.github.com/users/rclabo/repos","events_url":"https://api.github.com/users/rclabo/events{/privacy}","received_events_url":"https://api.github.com/users/rclabo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-11T13:06:46Z","updated_at":"2024-03-11T13:08:03Z","author_association":"CONTRIBUTOR","body":"The project supports and works great with the latest .NET versions including .NET 7 and .NET 8.  When you say that \"Officially the latest release only supports .Net 6.0\" what are you referring to? ","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1988400589/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1988710710","html_url":"https://github.com/apache/lucenenet/issues/928#issuecomment-1988710710","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/928","id":1988710710,"node_id":"IC_kwDOAAJ06c52iVE2","user":{"login":"Zyklop","id":1127789,"node_id":"MDQ6VXNlcjExMjc3ODk=","avatar_url":"https://avatars.githubusercontent.com/u/1127789?v=4","gravatar_id":"","url":"https://api.github.com/users/Zyklop","html_url":"https://github.com/Zyklop","followers_url":"https://api.github.com/users/Zyklop/followers","following_url":"https://api.github.com/users/Zyklop/following{/other_user}","gists_url":"https://api.github.com/users/Zyklop/gists{/gist_id}","starred_url":"https://api.github.com/users/Zyklop/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Zyklop/subscriptions","organizations_url":"https://api.github.com/users/Zyklop/orgs","repos_url":"https://api.github.com/users/Zyklop/repos","events_url":"https://api.github.com/users/Zyklop/events{/privacy}","received_events_url":"https://api.github.com/users/Zyklop/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-11T15:26:23Z","updated_at":"2024-03-11T15:26:23Z","author_association":"NONE","body":"Thank you for the quick reply.\r\nI just meant to extend the targetframework\r\n<TargetFrameworks>net6.0;netstandard2.1;netstandard2.0;net462</TargetFrameworks> and add net7.0;net8.0","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1988710710/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1988721164","html_url":"https://github.com/apache/lucenenet/issues/928#issuecomment-1988721164","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/928","id":1988721164,"node_id":"IC_kwDOAAJ06c52iXoM","user":{"login":"paulirwin","id":1874103,"node_id":"MDQ6VXNlcjE4NzQxMDM=","avatar_url":"https://avatars.githubusercontent.com/u/1874103?v=4","gravatar_id":"","url":"https://api.github.com/users/paulirwin","html_url":"https://github.com/paulirwin","followers_url":"https://api.github.com/users/paulirwin/followers","following_url":"https://api.github.com/users/paulirwin/following{/other_user}","gists_url":"https://api.github.com/users/paulirwin/gists{/gist_id}","starred_url":"https://api.github.com/users/paulirwin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paulirwin/subscriptions","organizations_url":"https://api.github.com/users/paulirwin/orgs","repos_url":"https://api.github.com/users/paulirwin/repos","events_url":"https://api.github.com/users/paulirwin/events{/privacy}","received_events_url":"https://api.github.com/users/paulirwin/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-11T15:30:48Z","updated_at":"2024-03-11T15:30:48Z","author_association":"CONTRIBUTOR","body":"We should not add net7.0 at this time as it will be out of support in a couple months. However, net8.0 should be supported. We should be able to do this fairly easily as it's not a big jump from 6 to 8. @NightOwl888 has already updated the CI to build/test with 8 anyways.\r\n\r\nOf course, for posterity, there's nothing stopping you from using Lucene.net 4.8 beta in .NET 7+ today, even though it doesn't target it.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1988721164/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1988949583","html_url":"https://github.com/apache/lucenenet/issues/928#issuecomment-1988949583","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/928","id":1988949583,"node_id":"IC_kwDOAAJ06c52jPZP","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-11T16:55:22Z","updated_at":"2024-03-12T04:02:00Z","author_association":"CONTRIBUTOR","body":"What is going out of support is the .NET 6 *runtime*. The target framework `net6.0` won't be going out of support and (barring any major screwup from Microsoft) will support all future runtimes of .NET Core. When a project loads a class library that targets an earlier target framework, it loads whatever runtime is being used by the executable loading the class library. A target framework for a class library is a *set of APIs*, not a runtime.\r\n\r\n> You can see for yourself if you try running a project with a `net8.0` executable and only install the .NET 8 runtime on the machine that loads a `net6.0` targeted DLL. It still works because the .NET 6 runtime doesn't need to be loaded.\r\n\r\nI suspect we probably wouldn't be having this conversation if we had just stuck with `netstandard2.1`, which hasn't ever had a runtime and never added support for `net6.0`. But there were performance advantages with targeting `net6.0` so we added support.\r\n\r\nWe do need to add tests for .NET 8.0, but barring any additional performance improvements that are discovered in APIs that only exist in .NET 8.0, there really is no compelling reason to increment our target framework until after the runtime is long gone. .NET 6 is the *minimum* version of the .NET Core runtime that is supported by `net6.0`. I have already analyzed the source for the primary performance benefit (hardware intrinsics) and that has not changed at all in .NET 7.0 or 8.0.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1988949583/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1988970489","html_url":"https://github.com/apache/lucenenet/issues/928#issuecomment-1988970489","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/928","id":1988970489,"node_id":"IC_kwDOAAJ06c52jUf5","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-11T17:03:56Z","updated_at":"2024-03-11T17:03:56Z","author_association":"CONTRIBUTOR","body":"@paulirwin \r\n\r\n> @NightOwl888 has already updated the CI to build/test with 8 anyways.\r\n\r\nActually, not. I recently re-partitioned my machine because I didn't have the disk space to install the .NET 8 SDK, but that has been addressed so we can move forward.\r\n","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1988970489/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1988977563","html_url":"https://github.com/apache/lucenenet/issues/928#issuecomment-1988977563","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/928","id":1988977563,"node_id":"IC_kwDOAAJ06c52jWOb","user":{"login":"paulirwin","id":1874103,"node_id":"MDQ6VXNlcjE4NzQxMDM=","avatar_url":"https://avatars.githubusercontent.com/u/1874103?v=4","gravatar_id":"","url":"https://api.github.com/users/paulirwin","html_url":"https://github.com/paulirwin","followers_url":"https://api.github.com/users/paulirwin/followers","following_url":"https://api.github.com/users/paulirwin/following{/other_user}","gists_url":"https://api.github.com/users/paulirwin/gists{/gist_id}","starred_url":"https://api.github.com/users/paulirwin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paulirwin/subscriptions","organizations_url":"https://api.github.com/users/paulirwin/orgs","repos_url":"https://api.github.com/users/paulirwin/repos","events_url":"https://api.github.com/users/paulirwin/events{/privacy}","received_events_url":"https://api.github.com/users/paulirwin/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-11T17:07:03Z","updated_at":"2024-03-11T17:07:03Z","author_association":"CONTRIBUTOR","body":"Ah I was thinking of https://github.com/apache/lucenenet/commit/b1476aee4fe21131899c1f43b2e06e25971b3ebe which I see now was for the Sonar pipeline. \r\n\r\nI think we can keep this issue open for future .NET 8 targeting, and agreed with all the points above.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1988977563/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1989179588","html_url":"https://github.com/apache/lucenenet/issues/928#issuecomment-1989179588","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/928","id":1989179588,"node_id":"IC_kwDOAAJ06c52kHjE","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-11T18:36:57Z","updated_at":"2024-03-12T03:58:29Z","author_association":"CONTRIBUTOR","body":"As for adding a `net8.0` target framework for distribution, we should wait on this until we can phase out the `net6.0` target in November, 2024. We have fairly large resource files that are embedded in some of the assemblies, so each target framework makes our distribution size several tens of MB larger.\r\n\r\nSo, there is a cost-benefit tradeoff here:\r\n\r\n1. If we put in the time to move the resource files into satellite assemblies, we can add more target frameworks without it making our distribution size grow proportionally per target framework.\r\n2. If we wait for runtimes to go out of support before changing target frameworks, we can simply swap one target framework for another and always cap our distribution at 4 or 5 target frameworks (or even 3).\r\n3. If we do neither and add target frameworks earlier rather than later, there is a risk we will eventually go over the [1GB release limit and have to explicitly notify infra when we do a release](https://www.apache.org/legal/release-policy.html#heads-up). Small chance of this, though - we are currently at ~170MB, but that will change when adding a `net8.0` target in lucene-cli.\r\n\r\n### lucene-cli Roll Forward Support\r\n\r\nThere is also the matter of the one executable that we distribute - lucene-cli. We need to add .NET 8 support ASAP. We multi-target all of the latest supported runtimes and should continue to do so as new runtimes are released and phased out. This makes the distribution size larger than any other `.nupkg` file we distribute.\r\n\r\n2-3 years after a Lucene.NET release, Microsoft will drop support for all runtimes in that release. For now, our highest supported runtime [uses the `Major` roll-forward policy](https://stackoverflow.com/a/68990566). Currently we have no documentation on how to use this and I am not sure whether it will work with versions higher than .NET 7.0 with our current setting and set of target frameworks.\r\n\r\nDocumentation won't be required if Microsoft finishes the UX to make it automatically default to the latest runtime, though (https://github.com/dotnet/sdk/issues/30336). So, if they release that before our release we should be fine. But if not, we should document this so years after a given release users will have the ability to use the original tools that shipped with it on the latest .NET runtime.\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1989179588/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1990889280","html_url":"https://github.com/apache/lucenenet/issues/928#issuecomment-1990889280","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/928","id":1990889280,"node_id":"IC_kwDOAAJ06c52qo9A","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-12T06:47:18Z","updated_at":"2024-10-22T14:52:20Z","author_association":"CONTRIBUTOR","body":"> Documentation won't be required if Microsoft finishes the UX to make it automatically default to the latest runtime, though (https://github.com/dotnet/sdk/issues/30336). So, if they release that before our release we should be fine. But if not, we should document this so years after a given release users will have the ability to use the original tools that shipped with it on the latest .NET runtime.\r\n\r\nScratch that, it doesn't sound like this is a complete replacement for documentation. Their plan seems to primarily to keep the upgrade explicit instead of implicit, but fix it so the installation will fail if the proper runtime is missing with the instructions on how to roll forward.\r\n\r\nWe should also make it more clear in the README and on the website that we **currently support the latest .NET core runtime**, even future runtimes.\r\n\r\nSo, there are 4 tasks to take away from this. The first 3 will need to be done in this order:\r\n\r\n1. [x] Experimentally work out how to document the lucene-cli roll forward experience to the latest .NET runtime. The ideal place to put this would be on the [index page for lucene-cli](https://github.com/apache/lucenenet/blob/63e1053b6cad1b874563400fbe83a708d5c0fa17/src/dotnet/tools/lucene-cli/docs/index.md). This will require a machine without .NET 6 or .NET 7 SDK or runtime installed. We need a *lack* of explicit support for .NET 8 in order to work this out. Note this will require using the `--add-source` argument of [dotnet tool install](https://learn.microsoft.com/en-us/dotnet/core/tools/dotnet-tool-install) to work with a local directory containing the build of the lucene-cli `.nupkg` file.\r\n2. [x] Add tests for `net8.0`. At this point, we might just consider replacing `net7.0` tests with `net8.0` tests in CI rather than adding additional time to a build/test cycle.\r\n3. [x] Add a target for `net8.0` to lucene-cli. At this point, we might just consider replacing the `net7.0` target with a `net8.0` target.\r\n4. [ ] Update the README and website to indicate that we support all versions of .NET Core (except 1.x), including all future versions. Specifically, the line that reads `Integrates well with .NET 6.0, .NET 5.0 and .NET Core 2+` should be more inclusive of future .NET Core runtimes. We should also change both places to read `Supported Target Frameworks` instead of `Supported Frameworks` and add a comment below that header to make it more clear we are not referring to the runtime and we support all higher runtimes that can depend on class assemblies of each of these target frameworks.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1990889280/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1990966619","html_url":"https://github.com/apache/lucenenet/issues/928#issuecomment-1990966619","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/928","id":1990966619,"node_id":"IC_kwDOAAJ06c52q71b","user":{"login":"eladmarg","id":3823205,"node_id":"MDQ6VXNlcjM4MjMyMDU=","avatar_url":"https://avatars.githubusercontent.com/u/3823205?v=4","gravatar_id":"","url":"https://api.github.com/users/eladmarg","html_url":"https://github.com/eladmarg","followers_url":"https://api.github.com/users/eladmarg/followers","following_url":"https://api.github.com/users/eladmarg/following{/other_user}","gists_url":"https://api.github.com/users/eladmarg/gists{/gist_id}","starred_url":"https://api.github.com/users/eladmarg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eladmarg/subscriptions","organizations_url":"https://api.github.com/users/eladmarg/orgs","repos_url":"https://api.github.com/users/eladmarg/repos","events_url":"https://api.github.com/users/eladmarg/events{/privacy}","received_events_url":"https://api.github.com/users/eladmarg/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-12T07:46:04Z","updated_at":"2024-03-12T07:46:04Z","author_association":"CONTRIBUTOR","body":"on my machine i did see performance improvements by targeting net8. \r\nactually for my projects i did manual migration to net8. \r\n\r\nif someone is using net6, the upgrade path to 8 is very easy.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1990966619/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1991014944","html_url":"https://github.com/apache/lucenenet/issues/928#issuecomment-1991014944","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/928","id":1991014944,"node_id":"IC_kwDOAAJ06c52rHog","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-12T08:20:12Z","updated_at":"2024-03-12T08:20:12Z","author_association":"CONTRIBUTOR","body":"@eladmarg - Do you mean you compiled Lucene.NET with a `net8.0` target and saw an improvement in performance when your `net8.0` targeted application took a dependency on Lucene.NET with a `net8.0` target vs a `net6.0` target? If you instead meant you upgraded your project to `net8.0` and used the `net6.0` target of Lucene.NET, then a performance improvement is to be expected by using the newer runtime.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1991014944/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1991028367","html_url":"https://github.com/apache/lucenenet/issues/928#issuecomment-1991028367","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/928","id":1991028367,"node_id":"IC_kwDOAAJ06c52rK6P","user":{"login":"eladmarg","id":3823205,"node_id":"MDQ6VXNlcjM4MjMyMDU=","avatar_url":"https://avatars.githubusercontent.com/u/3823205?v=4","gravatar_id":"","url":"https://api.github.com/users/eladmarg","html_url":"https://github.com/eladmarg","followers_url":"https://api.github.com/users/eladmarg/followers","following_url":"https://api.github.com/users/eladmarg/following{/other_user}","gists_url":"https://api.github.com/users/eladmarg/gists{/gist_id}","starred_url":"https://api.github.com/users/eladmarg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eladmarg/subscriptions","organizations_url":"https://api.github.com/users/eladmarg/orgs","repos_url":"https://api.github.com/users/eladmarg/repos","events_url":"https://api.github.com/users/eladmarg/events{/privacy}","received_events_url":"https://api.github.com/users/eladmarg/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-12T08:28:35Z","updated_at":"2024-03-12T08:28:35Z","author_association":"CONTRIBUTOR","body":"yes, i replaced in the solution net6 -> net8, did some adjustments to make this compile, and see the improvement.\r\n\r\nof course as @rclabo said, its working on net8 but performs faster when compiled as net8.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1991028367/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1991617699","html_url":"https://github.com/apache/lucenenet/issues/928#issuecomment-1991617699","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/928","id":1991617699,"node_id":"IC_kwDOAAJ06c52tayj","user":{"login":"rclabo","id":6945499,"node_id":"MDQ6VXNlcjY5NDU0OTk=","avatar_url":"https://avatars.githubusercontent.com/u/6945499?v=4","gravatar_id":"","url":"https://api.github.com/users/rclabo","html_url":"https://github.com/rclabo","followers_url":"https://api.github.com/users/rclabo/followers","following_url":"https://api.github.com/users/rclabo/following{/other_user}","gists_url":"https://api.github.com/users/rclabo/gists{/gist_id}","starred_url":"https://api.github.com/users/rclabo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rclabo/subscriptions","organizations_url":"https://api.github.com/users/rclabo/orgs","repos_url":"https://api.github.com/users/rclabo/repos","events_url":"https://api.github.com/users/rclabo/events{/privacy}","received_events_url":"https://api.github.com/users/rclabo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-12T13:10:00Z","updated_at":"2024-03-12T13:10:00Z","author_association":"CONTRIBUTOR","body":"> yes, i replaced in the solution net6 -> net8, did some adjustments to make this compile, and see the improvement.\r\n\r\nI'm scratching my head at this.  That could be true, but why would it be true?  I mean, net8 is a faster environment but you'd get that speed improvement if your app is targeting net8 even if the LuceneNET library is not specifically targeting it,  wouldn't you? (shrug)","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1991617699/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1991704302","html_url":"https://github.com/apache/lucenenet/issues/928#issuecomment-1991704302","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/928","id":1991704302,"node_id":"IC_kwDOAAJ06c52tv7u","user":{"login":"paulirwin","id":1874103,"node_id":"MDQ6VXNlcjE4NzQxMDM=","avatar_url":"https://avatars.githubusercontent.com/u/1874103?v=4","gravatar_id":"","url":"https://api.github.com/users/paulirwin","html_url":"https://github.com/paulirwin","followers_url":"https://api.github.com/users/paulirwin/followers","following_url":"https://api.github.com/users/paulirwin/following{/other_user}","gists_url":"https://api.github.com/users/paulirwin/gists{/gist_id}","starred_url":"https://api.github.com/users/paulirwin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paulirwin/subscriptions","organizations_url":"https://api.github.com/users/paulirwin/orgs","repos_url":"https://api.github.com/users/paulirwin/repos","events_url":"https://api.github.com/users/paulirwin/events{/privacy}","received_events_url":"https://api.github.com/users/paulirwin/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-12T13:52:30Z","updated_at":"2024-03-12T13:52:30Z","author_association":"CONTRIBUTOR","body":"Regarding replacing net7.0 tests/CLI target with net8.0, I think we can and should go ahead and do this. .NET 7 will be out of support in two months, while .NET 8 will be supported for a few more years. And unlike the unsupported .NET 5 target for testing .NET Standard support, .NET 7 provides (AFAICT) no value beyond ensuring it works on .NET 7, which again should be mostly irrelevant in a few short months. I'll take this part on.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1991704302/reactions","total_count":3,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":3,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1991757619","html_url":"https://github.com/apache/lucenenet/issues/928#issuecomment-1991757619","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/928","id":1991757619,"node_id":"IC_kwDOAAJ06c52t88z","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-12T14:17:05Z","updated_at":"2024-03-12T14:17:05Z","author_association":"CONTRIBUTOR","body":"> > yes, i replaced in the solution net6 -> net8, did some adjustments to make this compile, and see the improvement.\r\n> \r\n> I'm scratching my head at this. That could be true, but why would it be true? I mean, net8 is a faster environment but you'd get that speed improvement if your app is targeting net8 even if the LuceneNET library is not specifically targeting it, wouldn't you? (shrug)\r\n\r\nI suspected this would be the case. I think this has to do with the fact that the BCL is spread across a lot of assemblies. If you depend on an assembly that targets `net6.0`, that assembly cannot depend on an assembly that targets `net8.0` So if you load the former, you lose whatever performance advantages that were added to the latter.\r\n\r\nFor example, the `Lucene.Net` assembly is the main one that has performance improvements that call into hardware intrinsics. But if we didn't target `net6.0` with the `Lucene.Net.Analysis.Common` assembly and the consuming application targeted `net6.0`, it would load the `netstandard2.1` copy of `Lucene.Net.Analysis.Common`. Since that depends on `Lucene.Net`, you would also get the `netstandard2.1` copy of `Lucene.Net` and it would skip the hardware intrinsics support and other improvements in `Lucene.Net` even though it has a `net6.0` target. This is why we *must* keep the same targets across all submodules or we will end up with implicit downgrades.\r\n\r\nSo, what is probably happening with the `net6.0` target under `net8.0` is we are getting those implicit downgrades of the BCL assemblies that we depend upon.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1991757619/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1991889230","html_url":"https://github.com/apache/lucenenet/issues/928#issuecomment-1991889230","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/928","id":1991889230,"node_id":"IC_kwDOAAJ06c52udFO","user":{"login":"rclabo","id":6945499,"node_id":"MDQ6VXNlcjY5NDU0OTk=","avatar_url":"https://avatars.githubusercontent.com/u/6945499?v=4","gravatar_id":"","url":"https://api.github.com/users/rclabo","html_url":"https://github.com/rclabo","followers_url":"https://api.github.com/users/rclabo/followers","following_url":"https://api.github.com/users/rclabo/following{/other_user}","gists_url":"https://api.github.com/users/rclabo/gists{/gist_id}","starred_url":"https://api.github.com/users/rclabo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rclabo/subscriptions","organizations_url":"https://api.github.com/users/rclabo/orgs","repos_url":"https://api.github.com/users/rclabo/repos","events_url":"https://api.github.com/users/rclabo/events{/privacy}","received_events_url":"https://api.github.com/users/rclabo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-12T15:13:58Z","updated_at":"2024-03-12T15:13:58Z","author_association":"CONTRIBUTOR","body":"@NightOwl888 Thanks for explaining this.  That's a bit eye-opening for me.  ","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1991889230/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1991890250","html_url":"https://github.com/apache/lucenenet/issues/928#issuecomment-1991890250","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/928","id":1991890250,"node_id":"IC_kwDOAAJ06c52udVK","user":{"login":"rclabo","id":6945499,"node_id":"MDQ6VXNlcjY5NDU0OTk=","avatar_url":"https://avatars.githubusercontent.com/u/6945499?v=4","gravatar_id":"","url":"https://api.github.com/users/rclabo","html_url":"https://github.com/rclabo","followers_url":"https://api.github.com/users/rclabo/followers","following_url":"https://api.github.com/users/rclabo/following{/other_user}","gists_url":"https://api.github.com/users/rclabo/gists{/gist_id}","starred_url":"https://api.github.com/users/rclabo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rclabo/subscriptions","organizations_url":"https://api.github.com/users/rclabo/orgs","repos_url":"https://api.github.com/users/rclabo/repos","events_url":"https://api.github.com/users/rclabo/events{/privacy}","received_events_url":"https://api.github.com/users/rclabo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-12T15:14:26Z","updated_at":"2024-03-12T15:14:26Z","author_association":"CONTRIBUTOR","body":">Regarding replacing net7.0 tests/CLI target with net8.0, I think we can and should go ahead and do this. .NET 7 will be out of support in two months, while .NET 8 will be supported for a few more years. And unlike the unsupported .NET 5 target for testing .NET Standard support, .NET 7 provides (AFAICT) no value beyond ensuring it works on .NET 7, which again should be mostly irrelevant in a few short months. I'll take this part on.\r\n\r\nI totally agree with this approach.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1991890250/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1992223382","html_url":"https://github.com/apache/lucenenet/issues/929#issuecomment-1992223382","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/929","id":1992223382,"node_id":"IC_kwDOAAJ06c52vuqW","user":{"login":"jeme","id":1609615,"node_id":"MDQ6VXNlcjE2MDk2MTU=","avatar_url":"https://avatars.githubusercontent.com/u/1609615?v=4","gravatar_id":"","url":"https://api.github.com/users/jeme","html_url":"https://github.com/jeme","followers_url":"https://api.github.com/users/jeme/followers","following_url":"https://api.github.com/users/jeme/following{/other_user}","gists_url":"https://api.github.com/users/jeme/gists{/gist_id}","starred_url":"https://api.github.com/users/jeme/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jeme/subscriptions","organizations_url":"https://api.github.com/users/jeme/orgs","repos_url":"https://api.github.com/users/jeme/repos","events_url":"https://api.github.com/users/jeme/events{/privacy}","received_events_url":"https://api.github.com/users/jeme/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-12T17:44:31Z","updated_at":"2024-03-12T17:44:31Z","author_association":"CONTRIBUTOR","body":"I think it would be very helpful if you tried to setup a code sample or even better something running under https://benchmarkdotnet.org/articles/guides/getting-started.html.\r\n\r\nAt the very least share relevant pieces of your code, the team will have no idea on how to begin to attempt to reproduce this as is, so more information is likely needed.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1992223382/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1992237135","html_url":"https://github.com/apache/lucenenet/issues/929#issuecomment-1992237135","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/929","id":1992237135,"node_id":"IC_kwDOAAJ06c52vyBP","user":{"login":"eladmarg","id":3823205,"node_id":"MDQ6VXNlcjM4MjMyMDU=","avatar_url":"https://avatars.githubusercontent.com/u/3823205?v=4","gravatar_id":"","url":"https://api.github.com/users/eladmarg","html_url":"https://github.com/eladmarg","followers_url":"https://api.github.com/users/eladmarg/followers","following_url":"https://api.github.com/users/eladmarg/following{/other_user}","gists_url":"https://api.github.com/users/eladmarg/gists{/gist_id}","starred_url":"https://api.github.com/users/eladmarg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eladmarg/subscriptions","organizations_url":"https://api.github.com/users/eladmarg/orgs","repos_url":"https://api.github.com/users/eladmarg/repos","events_url":"https://api.github.com/users/eladmarg/events{/privacy}","received_events_url":"https://api.github.com/users/eladmarg/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-12T17:52:50Z","updated_at":"2024-03-12T17:52:50Z","author_association":"CONTRIBUTOR","body":"This is very strange\nCan you reproduce this by test?","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1992237135/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":1,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1992682033","html_url":"https://github.com/apache/lucenenet/issues/929#issuecomment-1992682033","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/929","id":1992682033,"node_id":"IC_kwDOAAJ06c52xeox","user":{"login":"ttustonic","id":5532089,"node_id":"MDQ6VXNlcjU1MzIwODk=","avatar_url":"https://avatars.githubusercontent.com/u/5532089?v=4","gravatar_id":"","url":"https://api.github.com/users/ttustonic","html_url":"https://github.com/ttustonic","followers_url":"https://api.github.com/users/ttustonic/followers","following_url":"https://api.github.com/users/ttustonic/following{/other_user}","gists_url":"https://api.github.com/users/ttustonic/gists{/gist_id}","starred_url":"https://api.github.com/users/ttustonic/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ttustonic/subscriptions","organizations_url":"https://api.github.com/users/ttustonic/orgs","repos_url":"https://api.github.com/users/ttustonic/repos","events_url":"https://api.github.com/users/ttustonic/events{/privacy}","received_events_url":"https://api.github.com/users/ttustonic/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-12T22:25:10Z","updated_at":"2024-03-12T22:25:10Z","author_association":"NONE","body":"Thanks!\r\nOk, I'll try to create benchmark for this. It's not a benchmark for the different  methods, but the same code under different frameworks, but, hopefully it will be OK. There might be some legal issues about sharing code and data so I'll see about creating a test program. Also, index is quite large (a few hundred megs).\r\nYes, I can reproduce this in my tests, running the same searches with .Net framework, 6 and 8.\r\nI recompiled J2N and Lucene to explicitly target .Net 8, and checked whether all the feature flags are used, but it's still the same.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1992682033/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1993733579","html_url":"https://github.com/apache/lucenenet/pull/926#issuecomment-1993733579","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/926","id":1993733579,"node_id":"IC_kwDOAAJ06c521fXL","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-13T07:35:55Z","updated_at":"2024-03-13T07:35:55Z","author_association":"CONTRIBUTOR","body":"It looks like there were a couple of omissions.\r\n\r\n1. [This line](https://github.com/apache/lucenenet/blob/b1476aee4fe21131899c1f43b2e06e25971b3ebe/src/Lucene.Net/Index/IndexWriter.cs#L2607) will need to be reenabled to prevent the `NONE` option from being passed.\r\n2. [This line](https://github.com/apache/lucenenet/blob/b1476aee4fe21131899c1f43b2e06e25971b3ebe/src/Lucene.Net.Tests/Index/TestNoMergeScheduler.cs#L37) will need to be fixed to exclude the `NONE` option from being tested. [Here](https://github.com/apache/lucenenet/blob/b1476aee4fe21131899c1f43b2e06e25971b3ebe/src/Lucene.Net.TestFramework/Index/BasePostingsFormatTestCase.cs#L489) is how we do it elsewhere.\r\n\r\nI am still torn on whether to just hide the `NONE` option from users because it really isn't a thing anywhere but in the `FindMerges()` method and it isn't very likely users would enable asserts to find out that they are passing something that isn't valid to calls to other methods that accept `MergeTrigger`. We could add guard clauses to all of those methods to make it fail without enabling asserts, but it is much simpler just to make it invisible.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1993733579/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1993747601","html_url":"https://github.com/apache/lucenenet/issues/929#issuecomment-1993747601","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/929","id":1993747601,"node_id":"IC_kwDOAAJ06c521iyR","user":{"login":"jeme","id":1609615,"node_id":"MDQ6VXNlcjE2MDk2MTU=","avatar_url":"https://avatars.githubusercontent.com/u/1609615?v=4","gravatar_id":"","url":"https://api.github.com/users/jeme","html_url":"https://github.com/jeme","followers_url":"https://api.github.com/users/jeme/followers","following_url":"https://api.github.com/users/jeme/following{/other_user}","gists_url":"https://api.github.com/users/jeme/gists{/gist_id}","starred_url":"https://api.github.com/users/jeme/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jeme/subscriptions","organizations_url":"https://api.github.com/users/jeme/orgs","repos_url":"https://api.github.com/users/jeme/repos","events_url":"https://api.github.com/users/jeme/events{/privacy}","received_events_url":"https://api.github.com/users/jeme/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-13T07:47:01Z","updated_at":"2024-03-13T07:47:01Z","author_association":"CONTRIBUTOR","body":"Without knowing the details, perhaps https://github.com/bchavez/Bogus can be of some assistance to create test data.\r\n","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1993747601/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1998509287","html_url":"https://github.com/apache/lucenenet/issues/929#issuecomment-1998509287","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/929","id":1998509287,"node_id":"IC_kwDOAAJ06c53HtTn","user":{"login":"ttustonic","id":5532089,"node_id":"MDQ6VXNlcjU1MzIwODk=","avatar_url":"https://avatars.githubusercontent.com/u/5532089?v=4","gravatar_id":"","url":"https://api.github.com/users/ttustonic","html_url":"https://github.com/ttustonic","followers_url":"https://api.github.com/users/ttustonic/followers","following_url":"https://api.github.com/users/ttustonic/following{/other_user}","gists_url":"https://api.github.com/users/ttustonic/gists{/gist_id}","starred_url":"https://api.github.com/users/ttustonic/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ttustonic/subscriptions","organizations_url":"https://api.github.com/users/ttustonic/orgs","repos_url":"https://api.github.com/users/ttustonic/repos","events_url":"https://api.github.com/users/ttustonic/events{/privacy}","received_events_url":"https://api.github.com/users/ttustonic/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-14T21:25:34Z","updated_at":"2024-03-14T21:25:34Z","author_association":"NONE","body":"Here are benchmark results. I have also added a benchmark class. I had to rename the field names etc. but it's basically a simple search of 5-gram field.\r\nThere are two methods: `SearchWithFullMatchResult  `and  `SearchWithEmptyMatchResult`.\r\nThey both look for about 36000 inputs and return results. \r\nFull method look for additional data for found hits, empty method just return a list of dummy match results.\r\n\r\n.Net 6  full is slightly better than 472, but empty test is much slower. Also, I observed that 6 and 8 results are all over the place, sometimes the same method repeated 3 times in a row gives 2x difference in execution time. This can also be seen from the result, Stdev is quite big for .Net 6 and 8 (especially for an empty test).\r\n\r\nThis lead us to believe that there might be a problem in runtime or garbage collector, so I run the same benchmark using server GC, and  now the results are great with 6 and even better with 8.\r\n\r\nSo, out immediate problem seems to be solved, but you perhaps that's something to look for.\r\n\r\nAs for test index, I can't share it publicly (and, besides, it's quite large, test case is 900MB), but perhaps there's a way to share it privately.\r\n\r\nThanks, Tom\r\n\r\n**Workstation GC**\r\n```\r\nBenchmarkDotNet v0.13.12, Windows 10 (10.0.19045.4046/22H2/2022Update)\r\nAMD Ryzen 7 1700, 1 CPU, 16 logical and 8 physical cores\r\n  [Host]     : .NET Framework 4.8.1 (4.8.9181.0), X64 RyuJIT VectorSize=256\r\n  DefaultJob : .NET Framework 4.8.1 (4.8.9181.0), X64 RyuJIT VectorSize=256\r\n\r\n```\r\n| Method                     | Mean    | Error   | StdDev  |\r\n|--------------------------- |--------:|--------:|--------:|\r\n| SearchWithFullMatchResult  | 47.05 s | 0.235 s | 0.220 s |\r\n| SearchWithEmptyMatchResult | 10.52 s | 0.061 s | 0.054 s |\r\n\r\n```\r\nBenchmarkDotNet v0.13.12, Windows 10 (10.0.19045.4046/22H2/2022Update)\r\nAMD Ryzen 7 1700, 1 CPU, 16 logical and 8 physical cores\r\n.NET SDK 8.0.200\r\n  [Host]     : .NET 6.0.27 (6.0.2724.6912), X64 RyuJIT AVX2\r\n  DefaultJob : .NET 6.0.27 (6.0.2724.6912), X64 RyuJIT AVX2\r\n\r\n```\r\n| Method                     | Mean    | Error   | StdDev  |\r\n|--------------------------- |--------:|--------:|--------:|\r\n| SearchWithFullMatchResult  | 45.26 s | 0.664 s | 0.588 s |\r\n| SearchWithEmptyMatchResult | 34.49 s | 0.686 s | 1.108 s |\r\n\r\n```\r\nBenchmarkDotNet v0.13.12, Windows 10 (10.0.19045.4046/22H2/2022Update)\r\nAMD Ryzen 7 1700, 1 CPU, 16 logical and 8 physical cores\r\n.NET SDK 8.0.200\r\n  [Host]     : .NET 8.0.2 (8.0.224.6711), X64 RyuJIT AVX2\r\n  DefaultJob : .NET 8.0.2 (8.0.224.6711), X64 RyuJIT AVX2\r\n\r\n```\r\n| Method                     | Mean    | Error   | StdDev  |\r\n|--------------------------- |--------:|--------:|--------:|\r\n| SearchWithFullMatchResult  | 54.08 s | 0.776 s | 0.648 s |\r\n| SearchWithEmptyMatchResult | 45.05 s | 0.739 s | 1.011 s |\r\n\r\n**Server  GC**\r\n```\r\nBenchmarkDotNet v0.13.12, Windows 10 (10.0.19045.4170/22H2/2022Update)\r\nAMD Ryzen 7 1700, 1 CPU, 16 logical and 8 physical cores\r\n  [Host]     : .NET Framework 4.8.1 (4.8.9181.0), X64 RyuJIT VectorSize=256\r\n  DefaultJob : .NET Framework 4.8.1 (4.8.9181.0), X64 RyuJIT VectorSize=256\r\n\r\n```\r\n| Method                     | Mean    | Error   | StdDev  |\r\n|--------------------------- |--------:|--------:|--------:|\r\n| SearchWithFullMatchResult  | 47.72 s | 0.159 s | 0.133 s |\r\n| SearchWithEmptyMatchResult | 11.19 s | 0.159 s | 0.141 s |\r\n\r\n\r\n```\r\nBenchmarkDotNet v0.13.12, Windows 10 (10.0.19045.4170/22H2/2022Update)\r\nAMD Ryzen 7 1700, 1 CPU, 16 logical and 8 physical cores\r\n.NET SDK 8.0.200\r\n  [Host]     : .NET 6.0.28 (6.0.2824.12007), X64 RyuJIT AVX2\r\n  DefaultJob : .NET 6.0.28 (6.0.2824.12007), X64 RyuJIT AVX2\r\n\r\n\r\n```\r\n| Method                     | Mean     | Error    | StdDev   |\r\n|--------------------------- |---------:|---------:|---------:|\r\n| SearchWithFullMatchResult  | 24.183 s | 0.3353 s | 0.3137 s |\r\n| SearchWithEmptyMatchResult |  8.680 s | 0.0447 s | 0.0418 s |\r\n\r\n\r\n```\r\nBenchmarkDotNet v0.13.12, Windows 10 (10.0.19045.4170/22H2/2022Update)\r\nAMD Ryzen 7 1700, 1 CPU, 16 logical and 8 physical cores\r\n.NET SDK 8.0.200\r\n  [Host]     : .NET 8.0.2 (8.0.224.6711), X64 RyuJIT AVX2\r\n  DefaultJob : .NET 8.0.2 (8.0.224.6711), X64 RyuJIT AVX2\r\n\r\n```\r\n| Method                     | Mean     | Error    | StdDev   |\r\n|--------------------------- |---------:|---------:|---------:|\r\n| SearchWithFullMatchResult  | 17.113 s | 0.1021 s | 0.0955 s |\r\n| SearchWithEmptyMatchResult |  6.735 s | 0.0773 s | 0.0723 s |\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1998509287/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1998932343","html_url":"https://github.com/apache/lucenenet/issues/929#issuecomment-1998932343","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/929","id":1998932343,"node_id":"IC_kwDOAAJ06c53JUl3","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-15T04:51:42Z","updated_at":"2024-03-15T04:51:42Z","author_association":"CONTRIBUTOR","body":"Great, this gets us a starting point. But, we will need more to narrow this down more than target framework to have any useful place to start (after all, we are maintaining over 600,000 lines of code).\r\n\r\nOne thing that would be helpful to know is whether you are benchmarking using the released components, and if not, which tag(s) or branch(es) you are compiling from source with. We have gone several hundred commits beyond the last release, so this may be relevant.\r\n\r\nBut now that you have created some benchmarks, would you consider contributing them back to us by forking the branch for #310? It is difficult for us to tell which components in the codebase are extremely common and which are extremely rare. The best we came up with was to benchmark the code in the demos, but I suspect this is still a far cry from a common real world combination of components that we should be using to determine whether a change we make is for the better or worse in terms of performance.\r\n\r\nWe still haven't seen any code, and that is the crucial bit. You don't technically need to provide an index, just the code to generate one and the code you are using to search that exhibits the behavior you are seeing. The data to generate the index can be completely based on a random seed so it generates the same data every time it is run. That way you don't have to share any real production data, and you don't have to provide a large index to us, just the code to generate the same index every time it runs.\r\n\r\nWhile @jeme suggested a 3rd party package to generate test data with, do note that [RandomizedTesting.Generators](https://www.nuget.org/packages/RandomizedTesting.Generators) has [several methods for generating simple or realistic strings](https://github.com/NightOwl888/RandomizedTesting/blob/main/src/RandomizedTesting.Generators/Support/RandomExtensions.cs#L244-L1193). It is also important to base the implementation off of `J2N.Randomizer` instead of `System.Random` because .NET doesn't provide an implementation that guarantees the same random values on every target framework and operating system.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1998932343/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1999773505","html_url":"https://github.com/apache/lucenenet/issues/929#issuecomment-1999773505","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/929","id":1999773505,"node_id":"IC_kwDOAAJ06c53Mh9B","user":{"login":"ttustonic","id":5532089,"node_id":"MDQ6VXNlcjU1MzIwODk=","avatar_url":"https://avatars.githubusercontent.com/u/5532089?v=4","gravatar_id":"","url":"https://api.github.com/users/ttustonic","html_url":"https://github.com/ttustonic","followers_url":"https://api.github.com/users/ttustonic/followers","following_url":"https://api.github.com/users/ttustonic/following{/other_user}","gists_url":"https://api.github.com/users/ttustonic/gists{/gist_id}","starred_url":"https://api.github.com/users/ttustonic/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ttustonic/subscriptions","organizations_url":"https://api.github.com/users/ttustonic/orgs","repos_url":"https://api.github.com/users/ttustonic/repos","events_url":"https://api.github.com/users/ttustonic/events{/privacy}","received_events_url":"https://api.github.com/users/ttustonic/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-15T14:21:17Z","updated_at":"2024-03-15T14:21:17Z","author_association":"NONE","body":"Ups, seems that I forgot to attach benchmark code and full results. I have replaced field names and removed input, but you can see what I'm measuring.\r\nThe benchmark is using Lucene.Net nuget package 4.8.0-beta00016.\r\nAs for the data, I'll be able to provide index that I used for testing and make a real test program. The data that I'm indexing are protein sequences, indexed by 5-grams. This test index is about 500 megs zipped.\r\nIndexing code is a bit complicated, because I have providers for many different protein sources, so I'd have to extract just the code for this test data source. So, if you can accept 500 megs index, it would be easier for me, and if not, I'll make a small indexing program.\r\nThe source for the test data is\r\nhttps://ftp.uniprot.org/pub/databases/uniprot/current_release/knowledgebase/complete/uniprot_sprot.fasta.gz\r\nThanks, Tom\r\n\r\n[BenchmarkLucene.zip](https://github.com/apache/lucenenet/files/14616493/BenchmarkLucene.zip)\r\n[benchmarkRes.zip](https://github.com/apache/lucenenet/files/14616500/benchmarkRes.zip)\r\n","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/1999773505/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/2014854459","html_url":"https://github.com/apache/lucenenet/issues/933#issuecomment-2014854459","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/933","id":2014854459,"node_id":"IC_kwDOAAJ06c54GD07","user":{"login":"eladmarg","id":3823205,"node_id":"MDQ6VXNlcjM4MjMyMDU=","avatar_url":"https://avatars.githubusercontent.com/u/3823205?v=4","gravatar_id":"","url":"https://api.github.com/users/eladmarg","html_url":"https://github.com/eladmarg","followers_url":"https://api.github.com/users/eladmarg/followers","following_url":"https://api.github.com/users/eladmarg/following{/other_user}","gists_url":"https://api.github.com/users/eladmarg/gists{/gist_id}","starred_url":"https://api.github.com/users/eladmarg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eladmarg/subscriptions","organizations_url":"https://api.github.com/users/eladmarg/orgs","repos_url":"https://api.github.com/users/eladmarg/repos","events_url":"https://api.github.com/users/eladmarg/events{/privacy}","received_events_url":"https://api.github.com/users/eladmarg/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-22T11:07:34Z","updated_at":"2024-03-22T11:07:34Z","author_association":"CONTRIBUTOR","body":"i think the problem related to the locking,\r\nthe MaybeRefresh has a lock inside to prevent multiple threads refreshing while single refresh is sufficient. \r\n\r\n@NightOwl888  added this work around to solve other locking problems.\r\nbut i guess for the refresh we can avoid the expensive Monitor calls.\r\n\r\nthe question is how long we want to support the older frameworks.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/2014854459/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/2016423822","html_url":"https://github.com/apache/lucenenet/issues/933#issuecomment-2016423822","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/933","id":2016423822,"node_id":"IC_kwDOAAJ06c54MC-O","user":{"login":"jeme","id":1609615,"node_id":"MDQ6VXNlcjE2MDk2MTU=","avatar_url":"https://avatars.githubusercontent.com/u/1609615?v=4","gravatar_id":"","url":"https://api.github.com/users/jeme","html_url":"https://github.com/jeme","followers_url":"https://api.github.com/users/jeme/followers","following_url":"https://api.github.com/users/jeme/following{/other_user}","gists_url":"https://api.github.com/users/jeme/gists{/gist_id}","starred_url":"https://api.github.com/users/jeme/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jeme/subscriptions","organizations_url":"https://api.github.com/users/jeme/orgs","repos_url":"https://api.github.com/users/jeme/repos","events_url":"https://api.github.com/users/jeme/events{/privacy}","received_events_url":"https://api.github.com/users/jeme/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-23T09:24:09Z","updated_at":"2024-03-23T16:10:09Z","author_association":"CONTRIBUTOR","body":"Not quite the same severe reduction on Windows/Intel (older CPU):\r\n\r\n```\r\nBenchmarkDotNet v0.13.12, Windows 10 (10.0.19045.3930/22H2/2022Update)\r\nIntel Core i9-7900X CPU 3.30GHz (Kaby Lake), 1 CPU, 20 logical and 10 physical cores\r\n.NET SDK 8.0.202\r\n  [Host]   : .NET 6.0.28 (6.0.2824.12007), X64 RyuJIT AVX2\r\n  .NET 7.0 : .NET 7.0.17 (7.0.1724.11508), X64 RyuJIT AVX2\r\n  .NET 8.0 : .NET 8.0.3 (8.0.324.11423), X64 RyuJIT AVX-512F+CD+BW+DQ+VL\r\n\r\nServer=True\r\n\r\n| Method                  | Job      | Runtime  | N   | Mean       | Error    | StdDev   | Ratio | RatioSD |\r\n|------------------------ |--------- |--------- |---- |-----------:|---------:|---------:|------:|--------:|\r\n| IndexDocumentsBenchmark | .NET 7.0 | .NET 7.0 | 100 |   562.9 ms | 11.23 ms | 24.89 ms |  1.00 |    0.00 |\r\n| IndexDocumentsBenchmark | .NET 8.0 | .NET 8.0 | 100 | 2,184.3 ms | 43.26 ms | 94.04 ms |  3.89 |    0.25 |\r\n```\r\n\r\nSeems like `Lucene.Net.Store.FSDirectory+FSIndexOutput.Dispose(Boolean)` goes from taking up 1.9% of the execution time to taking 25.2%:\r\n\r\n.NET 7.0\r\n![image](https://github.com/apache/lucenenet/assets/1609615/c6485ff0-d477-422f-a800-52b1c8775fb6)\r\n![image](https://github.com/apache/lucenenet/assets/1609615/c7aeed53-135a-4b6e-992d-e6b7aed81d32)\r\n![image](https://github.com/apache/lucenenet/assets/1609615/2fd27d1e-d067-43ee-9eac-35969776e771)\r\n[LuceneBenchmarks.NET 7.0.zip](https://github.com/apache/lucenenet/files/14732130/LuceneBenchmarks.NET.7.0.zip)\r\n\r\n.Net 8.0\r\n![image](https://github.com/apache/lucenenet/assets/1609615/fcb476f0-6549-426e-a295-fef92d2be4fb)\r\n![image](https://github.com/apache/lucenenet/assets/1609615/eaa7c011-ed6b-4625-83ea-404a1f83520e)\r\n![image](https://github.com/apache/lucenenet/assets/1609615/8377fa06-6d09-49c7-a475-2ef1a67d793d)\r\n[LuceneBenchmarks.NET 8.0.zip](https://github.com/apache/lucenenet/files/14732131/LuceneBenchmarks.NET.8.0.zip)\r\n\r\nI don't have the time now to dig further, but you can get dotTrace outputs by:\r\nhttps://blog.jetbrains.com/dotnet/2023/07/11/dottrace-comes-to-benchmarkdotnet/\r\n\r\nObviously you need access to dotTrace to open the traces from there, but could be useful.\r\n\r\n@AddictedCS considering your results are from a M2, it might be interesting to add the trace logger, if you don't have dotTrace you can upload the files here instead I guess, then others may have a look. the magnitude of difference makes me wonder if it's the same pattern or a different one.\r\n\r\n**Edit:** After a bit further digging, I end up in \"flushing\" of file streams. At this point things seems to begin to diverge between .NET 7.0 and .NET 8.0 but can't make out why.\r\n\r\nIt also spent significant more time in pieces I can't figure if I can dig deeper into, (Stack traces without user methods) - I have not succeeded in digging out more there, but I am by no means an expert in dotTrace.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/2016423822/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/2016528219","html_url":"https://github.com/apache/lucenenet/issues/933#issuecomment-2016528219","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/933","id":2016528219,"node_id":"IC_kwDOAAJ06c54Mcdb","user":{"login":"paulirwin","id":1874103,"node_id":"MDQ6VXNlcjE4NzQxMDM=","avatar_url":"https://avatars.githubusercontent.com/u/1874103?v=4","gravatar_id":"","url":"https://api.github.com/users/paulirwin","html_url":"https://github.com/paulirwin","followers_url":"https://api.github.com/users/paulirwin/followers","following_url":"https://api.github.com/users/paulirwin/following{/other_user}","gists_url":"https://api.github.com/users/paulirwin/gists{/gist_id}","starred_url":"https://api.github.com/users/paulirwin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paulirwin/subscriptions","organizations_url":"https://api.github.com/users/paulirwin/orgs","repos_url":"https://api.github.com/users/paulirwin/repos","events_url":"https://api.github.com/users/paulirwin/events{/privacy}","received_events_url":"https://api.github.com/users/paulirwin/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-23T15:41:17Z","updated_at":"2024-03-23T15:41:17Z","author_association":"CONTRIBUTOR","body":"@AddictedCS Thank you for the report. I can reproduce a significant discrepancy on a M1 Pro MacBook Pro with beta 16:\r\n\r\n```\r\nBenchmarkDotNet v0.13.12, macOS Sonoma 14.3.1 (23D60) [Darwin 23.3.0]\r\nApple M1 Pro, 1 CPU, 8 logical and 8 physical cores\r\n.NET SDK 8.0.202\r\n  [Host]   : .NET 7.0.10 (7.0.1023.36312), Arm64 RyuJIT AdvSIMD\r\n  .NET 7.0 : .NET 7.0.10 (7.0.1023.36312), Arm64 RyuJIT AdvSIMD\r\n  .NET 8.0 : .NET 8.0.3 (8.0.324.11423), Arm64 RyuJIT AdvSIMD\r\n\r\nServer=True  \r\n\r\n| Method                  | Job      | Runtime  | N   | Mean       | Error     | StdDev    | Ratio | RatioSD |\r\n|------------------------ |--------- |--------- |---- |-----------:|----------:|----------:|------:|--------:|\r\n| IndexDocumentsBenchmark | .NET 7.0 | .NET 7.0 | 100 |   329.3 ms |   3.78 ms |   3.35 ms |  1.00 |    0.00 |\r\n| IndexDocumentsBenchmark | .NET 8.0 | .NET 8.0 | 100 | 9,685.6 ms | 191.91 ms | 534.98 ms | 29.77 |    2.12 |\r\n```\r\n\r\nFor me, the ratio is ~30x, not 12,000x, but that's still unacceptable.\r\n\r\nI tried it against master with similar results (note: I dropped N to 25 just to speed up the test run, but similar ratio):\r\n\r\n```\r\nBenchmarkDotNet v0.13.12, macOS Sonoma 14.3.1 (23D60) [Darwin 23.3.0]\r\nApple M1 Pro, 1 CPU, 8 logical and 8 physical cores\r\n.NET SDK 8.0.202\r\n  [Host]   : .NET 7.0.10 (7.0.1023.36312), Arm64 RyuJIT AdvSIMD\r\n  .NET 7.0 : .NET 7.0.10 (7.0.1023.36312), Arm64 RyuJIT AdvSIMD\r\n  .NET 8.0 : .NET 8.0.3 (8.0.324.11423), Arm64 RyuJIT AdvSIMD\r\n\r\nServer=True  \r\n\r\n| Method                  | Job      | Runtime  | N  | Mean        | Error     | StdDev     | Ratio | RatioSD |\r\n|------------------------ |--------- |--------- |--- |------------:|----------:|-----------:|------:|--------:|\r\n| IndexDocumentsBenchmark | .NET 7.0 | .NET 7.0 | 25 |    62.54 ms |  1.192 ms |   1.464 ms |  1.00 |    0.00 |\r\n| IndexDocumentsBenchmark | .NET 8.0 | .NET 8.0 | 25 | 2,276.04 ms | 89.073 ms | 262.632 ms | 32.70 |    2.25 |\r\n```\r\n\r\nI'll dig into this on my end as well and will update here if I find anything.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/2016528219/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/2016533397","html_url":"https://github.com/apache/lucenenet/issues/933#issuecomment-2016533397","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/933","id":2016533397,"node_id":"IC_kwDOAAJ06c54MduV","user":{"login":"jeme","id":1609615,"node_id":"MDQ6VXNlcjE2MDk2MTU=","avatar_url":"https://avatars.githubusercontent.com/u/1609615?v=4","gravatar_id":"","url":"https://api.github.com/users/jeme","html_url":"https://github.com/jeme","followers_url":"https://api.github.com/users/jeme/followers","following_url":"https://api.github.com/users/jeme/following{/other_user}","gists_url":"https://api.github.com/users/jeme/gists{/gist_id}","starred_url":"https://api.github.com/users/jeme/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jeme/subscriptions","organizations_url":"https://api.github.com/users/jeme/orgs","repos_url":"https://api.github.com/users/jeme/repos","events_url":"https://api.github.com/users/jeme/events{/privacy}","received_events_url":"https://api.github.com/users/jeme/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-23T16:02:17Z","updated_at":"2024-03-23T16:04:57Z","author_association":"CONTRIBUTOR","body":"@AddictedCS and @paulirwin Could either of you or both (since you have different chips) run with the DotTraceDiagnoser attached, if you don't have dotTrace feel free to zip the reports then I (and/or perhaps others) can dig into them a little.\r\n\r\nSeeing as from my findings we do end up in the IO level, this is obviously different implementations due to platforms, but going from 300ms -> 10000ms is a HUGE factor compared to on windows/intel where the factor is down about 4x. (not to mention the (12k x which is insanity) So I am wondering if it's the same areas or if other areas light up.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/2016533397/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/2016546496","html_url":"https://github.com/apache/lucenenet/issues/933#issuecomment-2016546496","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/933","id":2016546496,"node_id":"IC_kwDOAAJ06c54Mg7A","user":{"login":"jeme","id":1609615,"node_id":"MDQ6VXNlcjE2MDk2MTU=","avatar_url":"https://avatars.githubusercontent.com/u/1609615?v=4","gravatar_id":"","url":"https://api.github.com/users/jeme","html_url":"https://github.com/jeme","followers_url":"https://api.github.com/users/jeme/followers","following_url":"https://api.github.com/users/jeme/following{/other_user}","gists_url":"https://api.github.com/users/jeme/gists{/gist_id}","starred_url":"https://api.github.com/users/jeme/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jeme/subscriptions","organizations_url":"https://api.github.com/users/jeme/orgs","repos_url":"https://api.github.com/users/jeme/repos","events_url":"https://api.github.com/users/jeme/events{/privacy}","received_events_url":"https://api.github.com/users/jeme/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-23T16:55:49Z","updated_at":"2024-03-23T17:16:47Z","author_association":"CONTRIBUTOR","body":"My findings are reproduceable outside of Lucene.NET, so it might be something we need to workaround or bring to Microsoft. Findings on writing and flushing small buffers to FileStreams. The problem goes away for larger files. However for the test case here, it almost solely end up producing files in the 1-4Kb range so I wondered.\r\n\r\n```\r\nBenchmarkDotNet v0.13.12, Windows 10 (10.0.19045.3930/22H2/2022Update)\r\nIntel Core i9-7900X CPU 3.30GHz (Kaby Lake), 1 CPU, 20 logical and 10 physical cores\r\n.NET SDK 8.0.202\r\n  [Host]   : .NET 6.0.28 (6.0.2824.12007), X64 RyuJIT AVX2\r\n  .NET 7.0 : .NET 7.0.17 (7.0.1724.11508), X64 RyuJIT AVX2\r\n  .NET 8.0 : .NET 8.0.3 (8.0.324.11423), X64 RyuJIT AVX-512F+CD+BW+DQ+VL\r\n\r\nServer=True\r\n\r\n| Method      | Job      | Runtime  | Mean         | Error      | StdDev     | Median       | Ratio | RatioSD |\r\n|------------ |--------- |--------- |-------------:|-----------:|-----------:|-------------:|------:|--------:|\r\n| Write1Kb    | .NET 7.0 | .NET 7.0 |     50.26 us |   0.945 us |   2.404 us |     49.53 us |  1.00 |    0.00 |\r\n| Write1Kb    | .NET 8.0 | .NET 8.0 |    667.60 us |  13.219 us |  27.299 us |    670.53 us | 13.21 |    0.88 |\r\n|             |          |          |              |            |            |              |       |         |\r\n| Write2Kb    | .NET 7.0 | .NET 7.0 |     52.46 us |   1.032 us |   1.060 us |     52.30 us |  1.00 |    0.00 |\r\n| Write2Kb    | .NET 8.0 | .NET 8.0 |    663.18 us |  13.111 us |  31.161 us |    666.55 us | 12.72 |    0.79 |\r\n|             |          |          |              |            |            |              |       |         |\r\n| Write4Kb    | .NET 7.0 | .NET 7.0 |     52.38 us |   1.016 us |   1.170 us |     52.48 us |  1.00 |    0.00 |\r\n| Write4Kb    | .NET 8.0 | .NET 8.0 |    653.99 us |  12.956 us |  22.348 us |    654.32 us | 12.48 |    0.49 |\r\n|             |          |          |              |            |            |              |       |         |\r\n| Write512Kb  | .NET 7.0 | .NET 7.0 |  1,085.58 us |  21.673 us |  43.780 us |  1,074.37 us |  1.00 |    0.00 |\r\n| Write512Kb  | .NET 8.0 | .NET 8.0 |  1,095.43 us |  21.008 us |  34.516 us |  1,092.27 us |  1.01 |    0.05 |\r\n|             |          |          |              |            |            |              |       |         |\r\n| Write1024Kb | .NET 7.0 | .NET 7.0 |  1,616.97 us |  44.302 us | 130.625 us |  1,643.63 us |  1.00 |    0.00 |\r\n| Write1024Kb | .NET 8.0 | .NET 8.0 |  1,587.57 us |  39.897 us | 117.638 us |  1,596.55 us |  0.99 |    0.09 |\r\n|             |          |          |              |            |            |              |       |         |\r\n| Write16Mb   | .NET 7.0 | .NET 7.0 | 16,713.86 us | 331.006 us | 453.085 us | 16,754.16 us |  1.00 |    0.00 |\r\n| Write16Mb   | .NET 8.0 | .NET 8.0 | 16,828.06 us | 320.014 us | 393.005 us | 16,844.23 us |  1.01 |    0.03 |\r\n```\r\n\r\nCould you try that as well:\r\n\r\n```\r\nusing BenchmarkDotNet.Attributes;\r\nusing BenchmarkDotNet.Diagnostics.dotTrace;\r\nusing BenchmarkDotNet.Jobs;\r\nusing BenchmarkDotNet.Running;\r\n\r\nBenchmarkRunner.Run<FileStreamBenchmarks>();\r\n\r\n[SimpleJob(RuntimeMoniker.Net70, baseline: true)]\r\n[SimpleJob(RuntimeMoniker.Net80)]\r\n[RPlotExporter]\r\n[GcServer(true)]\r\n[DotTraceDiagnoser]\r\npublic class FileStreamBenchmarks\r\n{\r\n    private readonly byte[] buffer1kb = 1.KiloBytes();\r\n    private readonly byte[] buffer2kb = 2.KiloBytes();\r\n    private readonly byte[] buffer4kb = 4.KiloBytes();\r\n    private readonly byte[] buffer512kb = 512.KiloBytes();\r\n    private readonly byte[] buffer1024Kb = 1.MegaBytes();\r\n    private readonly byte[] buffer16Mb = 16.MegaBytes();\r\n\r\n    [GlobalSetup]\r\n    public void Setup()\r\n    {\r\n        if (Directory.Exists(\"test_dir\"))\r\n            Directory.Delete(\"test_dir\", true);\r\n        Directory.CreateDirectory(\"test_dir\");\r\n    }\r\n    \r\n    [Benchmark] public int Write1Kb() =>  WriteData(buffer1kb);\r\n    [Benchmark] public int Write2Kb() =>  WriteData(buffer2kb);\r\n    [Benchmark] public int Write4Kb() =>  WriteData(buffer4kb);\r\n    [Benchmark] public int Write512Kb() =>  WriteData(buffer512kb);\r\n    [Benchmark] public int Write1024Kb() =>  WriteData(buffer1024Kb);\r\n    [Benchmark] public int Write16Mb() =>  WriteData(buffer16Mb);\r\n\r\n    private int WriteData(byte[] buffer)\r\n    {\r\n        using FileStream stream = \r\n            new FileStream(\r\n                path: Path.Combine(\"test_dir\", $\"test.{buffer.Length}.bin\"),\r\n                mode: FileMode.OpenOrCreate,\r\n                access: FileAccess.Write,\r\n                share: FileShare.ReadWrite,\r\n                bufferSize: 16384);\r\n        stream.Write(buffer, 0, buffer.Length);\r\n        stream.Flush(flushToDisk: true);\r\n        return buffer.Length;\r\n    }\r\n}\r\n\r\npublic static class Bytes\r\n{\r\n    public static byte[] KiloBytes(this int self)\r\n    {\r\n        byte[] buffer = new byte[1024 * self];\r\n        Random.Shared.NextBytes(buffer);\r\n        return buffer;\r\n    }\r\n\r\n    public static byte[] MegaBytes(this int self) => (self * 1024).KiloBytes();\r\n}\r\n```\r\n\r\nI will probably keep expanding the above for different options.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/2016546496/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/2016556209","html_url":"https://github.com/apache/lucenenet/issues/933#issuecomment-2016556209","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/933","id":2016556209,"node_id":"IC_kwDOAAJ06c54MjSx","user":{"login":"eladmarg","id":3823205,"node_id":"MDQ6VXNlcjM4MjMyMDU=","avatar_url":"https://avatars.githubusercontent.com/u/3823205?v=4","gravatar_id":"","url":"https://api.github.com/users/eladmarg","html_url":"https://github.com/eladmarg","followers_url":"https://api.github.com/users/eladmarg/followers","following_url":"https://api.github.com/users/eladmarg/following{/other_user}","gists_url":"https://api.github.com/users/eladmarg/gists{/gist_id}","starred_url":"https://api.github.com/users/eladmarg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eladmarg/subscriptions","organizations_url":"https://api.github.com/users/eladmarg/orgs","repos_url":"https://api.github.com/users/eladmarg/repos","events_url":"https://api.github.com/users/eladmarg/events{/privacy}","received_events_url":"https://api.github.com/users/eladmarg/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-23T17:35:01Z","updated_at":"2024-03-23T17:35:01Z","author_association":"CONTRIBUTOR","body":"![image](https://github.com/apache/lucenenet/assets/3823205/a9009509-8fdf-4900-9d5f-942488c3529d)\r\n\r\nfrom my analysis, its flush method consume \r\n![image](https://github.com/apache/lucenenet/assets/3823205/b6fddc00-22b0-424f-92a3-ed6311577d8c)\r\n\r\nwhich is going to FileStream.Flush()\r\nso this isn't related to the code, but the framework / runtime.\r\n\r\nso as @jeme said, this probably a regression Microsoft should investigate.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/2016556209/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":1,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/2016562323","html_url":"https://github.com/apache/lucenenet/issues/933#issuecomment-2016562323","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/933","id":2016562323,"node_id":"IC_kwDOAAJ06c54MkyT","user":{"login":"paulirwin","id":1874103,"node_id":"MDQ6VXNlcjE4NzQxMDM=","avatar_url":"https://avatars.githubusercontent.com/u/1874103?v=4","gravatar_id":"","url":"https://api.github.com/users/paulirwin","html_url":"https://github.com/paulirwin","followers_url":"https://api.github.com/users/paulirwin/followers","following_url":"https://api.github.com/users/paulirwin/following{/other_user}","gists_url":"https://api.github.com/users/paulirwin/gists{/gist_id}","starred_url":"https://api.github.com/users/paulirwin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paulirwin/subscriptions","organizations_url":"https://api.github.com/users/paulirwin/orgs","repos_url":"https://api.github.com/users/paulirwin/repos","events_url":"https://api.github.com/users/paulirwin/events{/privacy}","received_events_url":"https://api.github.com/users/paulirwin/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-23T18:00:08Z","updated_at":"2024-03-23T18:00:08Z","author_association":"CONTRIBUTOR","body":"@jeme Awesome find, thanks! I ran the benchmarks on my M1 Pro and sure enough there's a large discrepancy, up to 179x slower on .NET 8:\r\n\r\n```\r\nBenchmarkDotNet v0.13.12, macOS Sonoma 14.3.1 (23D60) [Darwin 23.3.0]\r\nApple M1 Pro, 1 CPU, 8 logical and 8 physical cores\r\n.NET SDK 8.0.202\r\n  [Host]   : .NET 7.0.10 (7.0.1023.36312), Arm64 RyuJIT AdvSIMD\r\n  .NET 7.0 : .NET 7.0.10 (7.0.1023.36312), Arm64 RyuJIT AdvSIMD\r\n  .NET 8.0 : .NET 8.0.3 (8.0.324.11423), Arm64 RyuJIT AdvSIMD\r\n\r\nServer=True  \r\n\r\n| Method      | Job      | Runtime  | Mean         | Error      | StdDev     | Median       | Ratio  | RatioSD |\r\n|------------ |--------- |--------- |-------------:|-----------:|-----------:|-------------:|-------:|--------:|\r\n| Write1Kb    | .NET 7.0 | .NET 7.0 |     32.04 us |   0.303 us |   0.283 us |     32.02 us |   1.00 |    0.00 |\r\n| Write1Kb    | .NET 8.0 | .NET 8.0 |  5,209.14 us | 143.338 us | 418.125 us |  5,123.13 us | 159.53 |   10.16 |\r\n|             |          |          |              |            |            |              |        |         |\r\n| Write2Kb    | .NET 7.0 | .NET 7.0 |     31.66 us |   0.565 us |   0.501 us |     31.65 us |   1.00 |    0.00 |\r\n| Write2Kb    | .NET 8.0 | .NET 8.0 |  5,395.70 us | 149.807 us | 441.708 us |  5,269.80 us | 179.62 |   14.61 |\r\n|             |          |          |              |            |            |              |        |         |\r\n| Write4Kb    | .NET 7.0 | .NET 7.0 |     31.57 us |   0.454 us |   0.379 us |     31.57 us |   1.00 |    0.00 |\r\n| Write4Kb    | .NET 8.0 | .NET 8.0 |  5,494.01 us | 159.845 us | 468.799 us |  5,481.13 us | 174.13 |   13.45 |\r\n|             |          |          |              |            |            |              |        |         |\r\n| Write512Kb  | .NET 7.0 | .NET 7.0 |  5,272.88 us | 103.347 us | 169.802 us |  5,307.65 us |   1.00 |    0.00 |\r\n| Write512Kb  | .NET 8.0 | .NET 8.0 |  5,439.62 us | 107.396 us | 147.005 us |  5,404.71 us |   1.04 |    0.04 |\r\n|             |          |          |              |            |            |              |        |         |\r\n| Write1024Kb | .NET 7.0 | .NET 7.0 |  5,825.75 us | 127.982 us | 365.140 us |  5,804.00 us |   1.00 |    0.00 |\r\n| Write1024Kb | .NET 8.0 | .NET 8.0 |  5,619.59 us | 111.783 us | 223.243 us |  5,591.22 us |   0.96 |    0.07 |\r\n|             |          |          |              |            |            |              |        |         |\r\n| Write16Mb   | .NET 7.0 | .NET 7.0 | 14,257.58 us | 282.783 us | 347.283 us | 14,285.54 us |   1.00 |    0.00 |\r\n| Write16Mb   | .NET 8.0 | .NET 8.0 | 12,851.95 us | 302.271 us | 891.252 us | 12,353.02 us |   0.95 |    0.08 |\r\n```","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/2016562323/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/2016563336","html_url":"https://github.com/apache/lucenenet/issues/933#issuecomment-2016563336","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/933","id":2016563336,"node_id":"IC_kwDOAAJ06c54MlCI","user":{"login":"eladmarg","id":3823205,"node_id":"MDQ6VXNlcjM4MjMyMDU=","avatar_url":"https://avatars.githubusercontent.com/u/3823205?v=4","gravatar_id":"","url":"https://api.github.com/users/eladmarg","html_url":"https://github.com/eladmarg","followers_url":"https://api.github.com/users/eladmarg/followers","following_url":"https://api.github.com/users/eladmarg/following{/other_user}","gists_url":"https://api.github.com/users/eladmarg/gists{/gist_id}","starred_url":"https://api.github.com/users/eladmarg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eladmarg/subscriptions","organizations_url":"https://api.github.com/users/eladmarg/orgs","repos_url":"https://api.github.com/users/eladmarg/repos","events_url":"https://api.github.com/users/eladmarg/events{/privacy}","received_events_url":"https://api.github.com/users/eladmarg/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-23T18:03:52Z","updated_at":"2024-03-23T18:03:52Z","author_association":"CONTRIBUTOR","body":"after some thinking with myself, this is a design bug.\r\nwe shouldn't refresh the index so frequently. \r\n\r\nin the end of the day, this method is performing actual write to disk fsync() which is expensive.\r\nthere is nothing to do about it, and many of the databases or anyone who works with filesystem suffers from this.\r\n\r\nthis should have a debounce, that will limit the number of calls per timeframe.\r\n","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/2016563336/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/2016566755","html_url":"https://github.com/apache/lucenenet/issues/933#issuecomment-2016566755","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/933","id":2016566755,"node_id":"IC_kwDOAAJ06c54Ml3j","user":{"login":"jeme","id":1609615,"node_id":"MDQ6VXNlcjE2MDk2MTU=","avatar_url":"https://avatars.githubusercontent.com/u/1609615?v=4","gravatar_id":"","url":"https://api.github.com/users/jeme","html_url":"https://github.com/jeme","followers_url":"https://api.github.com/users/jeme/followers","following_url":"https://api.github.com/users/jeme/following{/other_user}","gists_url":"https://api.github.com/users/jeme/gists{/gist_id}","starred_url":"https://api.github.com/users/jeme/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jeme/subscriptions","organizations_url":"https://api.github.com/users/jeme/orgs","repos_url":"https://api.github.com/users/jeme/repos","events_url":"https://api.github.com/users/jeme/events{/privacy}","received_events_url":"https://api.github.com/users/jeme/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-23T18:18:08Z","updated_at":"2024-03-23T18:30:35Z","author_association":"CONTRIBUTOR","body":"@eladmarg I am curious how you ran your trace, it's a Dispose that has the Hotspot when I attach the profiler to the test, we can't really avoid paying that tax when disposing the FSIndexOutput. (Although calling flush(true) explicitly is probably unnecessary as the same thing would happen on dispose.\r\n\r\nNow I can't say that there isn't other situations where flush might be called to frequently. However in regards to this particular sample, it calls `searcherManager.MaybeRefresh()` for every single document update, it's my understanding that that is actually warned against (well, differently at least).\r\n\r\n`In addition you should periodically call [ReferenceManager.maybeRefresh()](https://lucene.apache.org/core/4_8_0/core/org/apache/lucene/search/ReferenceManager.html#maybeRefresh()). While it's possible to call this just before running each query, this is discouraged since it penalizes the unlucky queries that do the reopen. It's better to use a separate background thread, that periodically calls maybeReopen. Finally, be sure to call [ReferenceManager.close()](https://lucene.apache.org/core/4_8_0/core/org/apache/lucene/search/ReferenceManager.html#close()) once you are done.`\r\nsource: https://lucene.apache.org/core/4_8_0/core/org/apache/lucene/search/SearcherManager.html\r\n\r\nI would have assumed that the same rule of thump applies here even though its a SearcherTaxonomyManager event though the docs does not explicitly mention this.\r\n\r\nI am not to familiar with the Taxonomy stuff, but since this is solely for small files, i am hoping the regression will be less as an index grow, unless we do flush(true) for small amounts of data in other cases as well.\r\n\r\nI am currently executing a bigger test to see where the breakpoint is (how many bytes before before et equalizes)","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/2016566755/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/2016568078","html_url":"https://github.com/apache/lucenenet/issues/933#issuecomment-2016568078","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/933","id":2016568078,"node_id":"IC_kwDOAAJ06c54MmMO","user":{"login":"eladmarg","id":3823205,"node_id":"MDQ6VXNlcjM4MjMyMDU=","avatar_url":"https://avatars.githubusercontent.com/u/3823205?v=4","gravatar_id":"","url":"https://api.github.com/users/eladmarg","html_url":"https://github.com/eladmarg","followers_url":"https://api.github.com/users/eladmarg/followers","following_url":"https://api.github.com/users/eladmarg/following{/other_user}","gists_url":"https://api.github.com/users/eladmarg/gists{/gist_id}","starred_url":"https://api.github.com/users/eladmarg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eladmarg/subscriptions","organizations_url":"https://api.github.com/users/eladmarg/orgs","repos_url":"https://api.github.com/users/eladmarg/repos","events_url":"https://api.github.com/users/eladmarg/events{/privacy}","received_events_url":"https://api.github.com/users/eladmarg/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-23T18:24:04Z","updated_at":"2024-03-23T18:24:04Z","author_association":"CONTRIBUTOR","body":"its not related to the index / code. \r\nall performance degradation by the filestream.\r\n\r\njust to validate this, i changed the FSDirectory file stream with flags, and the problem gone.\r\n\r\n```csharp\r\nfile = new FileStream(\r\n    path: Path.Combine(parent.m_directory.FullName, name),\r\n    mode: FileMode.OpenOrCreate,\r\n    access: FileAccess.Write,\r\n    share: FileShare.ReadWrite,\r\n    bufferSize: CHUNK_SIZE,\r\n    FileOptions.Asynchronous | FileOptions.RandomAccess | FileOptions.WriteThrough);\r\n```\r\n\r\nany chance to let Microsoft to know about it? [here](https://github.com/dotnet/runtime/issues/new?assignees=&labels=tenet-performance&projects=&template=03_performance_issue.md&title=)","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/2016568078/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/2016568457","html_url":"https://github.com/apache/lucenenet/issues/933#issuecomment-2016568457","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/933","id":2016568457,"node_id":"IC_kwDOAAJ06c54MmSJ","user":{"login":"AddictedCS","id":1202115,"node_id":"MDQ6VXNlcjEyMDIxMTU=","avatar_url":"https://avatars.githubusercontent.com/u/1202115?v=4","gravatar_id":"","url":"https://api.github.com/users/AddictedCS","html_url":"https://github.com/AddictedCS","followers_url":"https://api.github.com/users/AddictedCS/followers","following_url":"https://api.github.com/users/AddictedCS/following{/other_user}","gists_url":"https://api.github.com/users/AddictedCS/gists{/gist_id}","starred_url":"https://api.github.com/users/AddictedCS/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/AddictedCS/subscriptions","organizations_url":"https://api.github.com/users/AddictedCS/orgs","repos_url":"https://api.github.com/users/AddictedCS/repos","events_url":"https://api.github.com/users/AddictedCS/events{/privacy}","received_events_url":"https://api.github.com/users/AddictedCS/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-23T18:25:39Z","updated_at":"2024-03-23T18:46:54Z","author_association":"NONE","body":"Hey guys, thanks for helping,\r\n\r\nI've reran the benchmark multiple times now, and here are the results:\r\n\r\n```\r\nBenchmarkDotNet v0.13.12, macOS Sonoma 14.4 (23E214) [Darwin 23.4.0]\r\nApple M2 Max, 1 CPU, 12 logical and 12 physical cores\r\n.NET SDK 8.0.203\r\n  [Host]   : .NET 7.0.5 (7.0.523.17405), Arm64 RyuJIT AdvSIMD\r\n  .NET 7.0 : .NET 7.0.5 (7.0.523.17405), Arm64 RyuJIT AdvSIMD\r\n  .NET 8.0 : .NET 8.0.3 (8.0.324.11423), Arm64 RyuJIT AdvSIMD\r\n\r\nServer=True  \r\n\r\n| Method                  | Job      | Runtime  | N  | Mean        | Error     | StdDev     | Ratio | RatioSD |\r\n|------------------------ |--------- |--------- |--- |------------:|----------:|-----------:|------:|--------:|\r\n| IndexDocumentsBenchmark | .NET 7.0 | .NET 7.0 | 25 |    59.25 ms |  0.839 ms |   0.862 ms |  1.00 |    0.00 |\r\n| IndexDocumentsBenchmark | .NET 8.0 | .NET 8.0 | 25 | 2,174.27 ms | 47.201 ms | 139.172 ms | 33.67 |    1.25 |\r\n\r\nBenchmarkDotNet v0.13.12, macOS Sonoma 14.4 (23E214) [Darwin 23.4.0]\r\nApple M2 Max, 1 CPU, 12 logical and 12 physical cores\r\n.NET SDK 8.0.203\r\n  [Host]   : .NET 8.0.3 (8.0.324.11423), Arm64 RyuJIT AdvSIMD\r\n  .NET 7.0 : .NET 7.0.5 (7.0.523.17405), Arm64 RyuJIT AdvSIMD\r\n  .NET 8.0 : .NET 8.0.3 (8.0.324.11423), Arm64 RyuJIT AdvSIMD\r\n\r\nServer=True  \r\n\r\n| Method                  | Job      | Runtime  | N  | Mean        | Error     | StdDev     | Ratio | RatioSD |\r\n|------------------------ |--------- |--------- |--- |------------:|----------:|-----------:|------:|--------:|\r\n| IndexDocumentsBenchmark | .NET 7.0 | .NET 7.0 | 25 |    62.84 ms |  1.423 ms |   3.823 ms |  1.00 |    0.00 |\r\n| IndexDocumentsBenchmark | .NET 8.0 | .NET 8.0 | 25 | 2,161.11 ms | 46.276 ms | 136.446 ms | 34.70 |    2.80 |\r\n```\r\n\r\nI can't get the 12k ratio now as I'm running it at home, and I concur with @paulirwin that it is \"only\" 30x, which is still unacceptable. I'm quite confident I got 12000x degradation originally, though I've had it on a slightly modified benchmark, which I simplified when opening the GitHub issue. I didn't stash the changes, so now they are gone. If I manage to get it again, I will post it.\r\n\r\n@jeme thanks a deeper benchmark, here are my results\r\n```\r\nBenchmarkDotNet v0.13.12, macOS Sonoma 14.4 (23E214) [Darwin 23.4.0]\r\nApple M2 Max, 1 CPU, 12 logical and 12 physical cores\r\n.NET SDK 8.0.203\r\n  [Host]   : .NET 8.0.3 (8.0.324.11423), Arm64 RyuJIT AdvSIMD\r\n  .NET 7.0 : .NET 7.0.5 (7.0.523.17405), Arm64 RyuJIT AdvSIMD\r\n  .NET 8.0 : .NET 8.0.3 (8.0.324.11423), Arm64 RyuJIT AdvSIMD\r\n\r\nServer=True  \r\n\r\n| Method      | Job      | Runtime  | Mean         | Error      | StdDev     | Median       | Ratio  | RatioSD |\r\n|------------ |--------- |--------- |-------------:|-----------:|-----------:|-------------:|-------:|--------:|\r\n| Write1Kb    | .NET 7.0 | .NET 7.0 |     28.18 μs |   0.337 μs |   0.299 μs |     28.17 μs |   1.00 |    0.00 |\r\n| Write1Kb    | .NET 8.0 | .NET 8.0 |  4,675.38 μs |  89.870 μs | 150.152 μs |  4,667.45 μs | 164.77 |    6.64 |\r\n|             |          |          |              |            |            |              |        |         |\r\n| Write2Kb    | .NET 7.0 | .NET 7.0 |     28.12 μs |   0.413 μs |   0.366 μs |     28.12 μs |   1.00 |    0.00 |\r\n| Write2Kb    | .NET 8.0 | .NET 8.0 |  4,633.83 μs |  90.353 μs | 253.360 μs |  4,624.14 μs | 171.17 |    7.64 |\r\n|             |          |          |              |            |            |              |        |         |\r\n| Write4Kb    | .NET 7.0 | .NET 7.0 |     29.03 μs |   0.240 μs |   0.201 μs |     28.98 μs |   1.00 |    0.00 |\r\n| Write4Kb    | .NET 8.0 | .NET 8.0 |  4,449.07 μs |  88.012 μs | 179.785 μs |  4,459.38 μs | 151.98 |    6.81 |\r\n|             |          |          |              |            |            |              |        |         |\r\n| Write512Kb  | .NET 7.0 | .NET 7.0 |  4,815.22 μs |  94.760 μs | 141.833 μs |  4,813.58 μs |   1.00 |    0.00 |\r\n| Write512Kb  | .NET 8.0 | .NET 8.0 |  4,997.23 μs |  97.949 μs | 120.290 μs |  5,009.46 μs |   1.03 |    0.04 |\r\n|             |          |          |              |            |            |              |        |         |\r\n| Write1024Kb | .NET 7.0 | .NET 7.0 |  5,093.80 μs |  91.040 μs |  85.159 μs |  5,106.26 μs |   1.00 |    0.00 |\r\n| Write1024Kb | .NET 8.0 | .NET 8.0 |  5,299.68 μs | 104.049 μs |  92.237 μs |  5,292.41 μs |   1.04 |    0.02 |\r\n|             |          |          |              |            |            |              |        |         |\r\n| Write16Mb   | .NET 7.0 | .NET 7.0 | 12,569.03 μs | 248.962 μs | 572.032 μs | 12,473.78 μs |   1.00 |    0.00 |\r\n| Write16Mb   | .NET 8.0 | .NET 8.0 | 13,267.28 μs | 264.196 μs | 714.270 μs | 13,017.40 μs |   1.06 |    0.06 |\r\n```\r\nThe results corroborate with @jeme, which is 150x performance degradation.\r\n\r\n@eladmarg I respectfully disagree that this is a design bug. The pattern that is used in the initial benchmark is quite often used by those who use Lucene, calling it _soft commit_. This paradigm is used in Solr and other custom implementations. The index is not flushed to the disk, by refreshing the searcher after index writer update the changes are reflected in new searches which is important when near-realtime updates are required.\r\nIn case you know a better way to handle this use case I'm willing to learn.\r\n\r\nIn any case, @jeme benchmark points to a framework performance issue.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/2016568457/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":1,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/2016570441","html_url":"https://github.com/apache/lucenenet/issues/933#issuecomment-2016570441","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/933","id":2016570441,"node_id":"IC_kwDOAAJ06c54MmxJ","user":{"login":"jeme","id":1609615,"node_id":"MDQ6VXNlcjE2MDk2MTU=","avatar_url":"https://avatars.githubusercontent.com/u/1609615?v=4","gravatar_id":"","url":"https://api.github.com/users/jeme","html_url":"https://github.com/jeme","followers_url":"https://api.github.com/users/jeme/followers","following_url":"https://api.github.com/users/jeme/following{/other_user}","gists_url":"https://api.github.com/users/jeme/gists{/gist_id}","starred_url":"https://api.github.com/users/jeme/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jeme/subscriptions","organizations_url":"https://api.github.com/users/jeme/orgs","repos_url":"https://api.github.com/users/jeme/repos","events_url":"https://api.github.com/users/jeme/events{/privacy}","received_events_url":"https://api.github.com/users/jeme/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-23T18:33:41Z","updated_at":"2024-03-23T18:35:12Z","author_association":"CONTRIBUTOR","body":"> its not related to the index / code. all performance degradation by the filestream.\r\n> \r\n> just to validate this, i changed the FSDirectory file stream with flags, and the problem gone.\r\n> \r\n> ```cs\r\n> file = new FileStream(\r\n>     path: Path.Combine(parent.m_directory.FullName, name),\r\n>     mode: FileMode.OpenOrCreate,\r\n>     access: FileAccess.Write,\r\n>     share: FileShare.ReadWrite,\r\n>     bufferSize: CHUNK_SIZE,\r\n>     FileOptions.Asynchronous | FileOptions.RandomAccess | FileOptions.WriteThrough);\r\n> ```\r\n> \r\n> any chance to let Microsoft to know about it? [here](https://github.com/dotnet/runtime/issues/new?assignees=&labels=tenet-performance&projects=&template=03_performance_issue.md&title=)\r\n\r\nOhh mo***** - now I have to run the tests again with different variations on those FileOptions :D...\r\nThanks though! ;)...\r\n\r\nI will probably attempt to submit this once I have run those more detailed benchmarks to get a deeper picture.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/2016570441/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/2016571061","html_url":"https://github.com/apache/lucenenet/issues/933#issuecomment-2016571061","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/933","id":2016571061,"node_id":"IC_kwDOAAJ06c54Mm61","user":{"login":"eladmarg","id":3823205,"node_id":"MDQ6VXNlcjM4MjMyMDU=","avatar_url":"https://avatars.githubusercontent.com/u/3823205?v=4","gravatar_id":"","url":"https://api.github.com/users/eladmarg","html_url":"https://github.com/eladmarg","followers_url":"https://api.github.com/users/eladmarg/followers","following_url":"https://api.github.com/users/eladmarg/following{/other_user}","gists_url":"https://api.github.com/users/eladmarg/gists{/gist_id}","starred_url":"https://api.github.com/users/eladmarg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eladmarg/subscriptions","organizations_url":"https://api.github.com/users/eladmarg/orgs","repos_url":"https://api.github.com/users/eladmarg/repos","events_url":"https://api.github.com/users/eladmarg/events{/privacy}","received_events_url":"https://api.github.com/users/eladmarg/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-23T18:36:17Z","updated_at":"2024-03-23T18:36:17Z","author_association":"CONTRIBUTOR","body":"@AddictedCS - i agree with you totally, \r\nwhat i meant is that even if you calling 1000 times per second to MaybeRefresh() (which is exactly soft commit)\r\nthe library shouldn't call fsync so much (fsync is hard commit)\r\n\r\nhence, should be a debounce mechanism on the library which somehow isn't happening.\r\n\r\nof course this is another discussion and isn't related to this netcore framework bug which shouldn't happen in the first place.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/2016571061/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/2016574868","html_url":"https://github.com/apache/lucenenet/issues/933#issuecomment-2016574868","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/933","id":2016574868,"node_id":"IC_kwDOAAJ06c54Mn2U","user":{"login":"jeme","id":1609615,"node_id":"MDQ6VXNlcjE2MDk2MTU=","avatar_url":"https://avatars.githubusercontent.com/u/1609615?v=4","gravatar_id":"","url":"https://api.github.com/users/jeme","html_url":"https://github.com/jeme","followers_url":"https://api.github.com/users/jeme/followers","following_url":"https://api.github.com/users/jeme/following{/other_user}","gists_url":"https://api.github.com/users/jeme/gists{/gist_id}","starred_url":"https://api.github.com/users/jeme/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jeme/subscriptions","organizations_url":"https://api.github.com/users/jeme/orgs","repos_url":"https://api.github.com/users/jeme/repos","events_url":"https://api.github.com/users/jeme/events{/privacy}","received_events_url":"https://api.github.com/users/jeme/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-23T18:53:46Z","updated_at":"2024-03-23T18:53:46Z","author_association":"CONTRIBUTOR","body":"@eladmarg At least such a debounce can actually be implemented on the caller side, it doesn't exist in the java version (if I am to judge from the documentation) - So i guess the general stance would be that Lucene.net would not add such a thing.\r\n\r\nJust found this at random: https://github.com/coddicat/DebounceThrottle/blob/master/DebounceThrottle/DebounceDispatcherGeneric.cs\r\n\r\nMaybe that can be of inspiration for people seeking this.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/2016574868/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/2016711071","html_url":"https://github.com/apache/lucenenet/issues/933#issuecomment-2016711071","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/933","id":2016711071,"node_id":"IC_kwDOAAJ06c54NJGf","user":{"login":"eladmarg","id":3823205,"node_id":"MDQ6VXNlcjM4MjMyMDU=","avatar_url":"https://avatars.githubusercontent.com/u/3823205?v=4","gravatar_id":"","url":"https://api.github.com/users/eladmarg","html_url":"https://github.com/eladmarg","followers_url":"https://api.github.com/users/eladmarg/followers","following_url":"https://api.github.com/users/eladmarg/following{/other_user}","gists_url":"https://api.github.com/users/eladmarg/gists{/gist_id}","starred_url":"https://api.github.com/users/eladmarg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eladmarg/subscriptions","organizations_url":"https://api.github.com/users/eladmarg/orgs","repos_url":"https://api.github.com/users/eladmarg/repos","events_url":"https://api.github.com/users/eladmarg/events{/privacy}","received_events_url":"https://api.github.com/users/eladmarg/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-24T06:34:13Z","updated_at":"2024-03-24T06:34:13Z","author_association":"CONTRIBUTOR","body":"just for curiosity, (after i changed the FileStream) - the problem was gone on 8,\r\nbut seems like on 9 Microsoft also has some performance degragation.\r\n\r\n```csharp\r\nBenchmarkDotNet v0.13.12, Windows 11 (10.0.22631.3296/23H2/2023Update/SunValley3)\r\nAMD Ryzen Threadripper 3970X, 1 CPU, 16 logical and 16 physical cores\r\n.NET SDK 9.0.100-preview.2.24157.14\r\n  [Host]   : .NET 8.0.3 (8.0.324.11423), X64 RyuJIT AVX2\r\n  .NET 8.0 : .NET 8.0.3 (8.0.324.11423), X64 RyuJIT AVX2\r\n  .NET 9.0 : .NET 9.0.0 (9.0.24.12805), X64 RyuJIT AVX2\r\n\r\nServer=True\r\n\r\n| Method      | Job      | Runtime  | Mean       | Error      | StdDev     | Median     | Ratio | RatioSD |\r\n|------------ |--------- |--------- |-----------:|-----------:|-----------:|-----------:|------:|--------:|\r\n| Write1Kb    | .NET 8.0 | .NET 8.0 |   4.970 ms |  0.3795 ms |  1.1130 ms |   4.857 ms |  1.00 |    0.00 |\r\n| Write1Kb    | .NET 9.0 | .NET 9.0 |  10.373 ms |  0.7447 ms |  2.1839 ms |  10.273 ms |  2.20 |    0.70 |\r\n|             |          |          |            |            |            |            |       |         |\r\n| Write2Kb    | .NET 8.0 | .NET 8.0 |   4.566 ms |  0.3104 ms |  0.9105 ms |   4.601 ms |  1.00 |    0.00 |\r\n| Write2Kb    | .NET 9.0 | .NET 9.0 |   9.956 ms |  1.2714 ms |  3.7486 ms |   8.913 ms |  2.21 |    0.82 |\r\n|             |          |          |            |            |            |            |       |         |\r\n| Write4Kb    | .NET 8.0 | .NET 8.0 |   4.340 ms |  0.3761 ms |  1.0970 ms |   4.229 ms |  1.00 |    0.00 |\r\n| Write4Kb    | .NET 9.0 | .NET 9.0 |  12.500 ms |  0.8261 ms |  2.3835 ms |  12.313 ms |  3.09 |    0.98 |\r\n|             |          |          |            |            |            |            |       |         |\r\n| Write512Kb  | .NET 8.0 | .NET 8.0 |  11.235 ms |  0.7612 ms |  2.2205 ms |  10.852 ms |  1.00 |    0.00 |\r\n| Write512Kb  | .NET 9.0 | .NET 9.0 |  40.424 ms |  3.9548 ms | 11.6608 ms |  36.904 ms |  3.90 |    1.77 |\r\n|             |          |          |            |            |            |            |       |         |\r\n| Write1024Kb | .NET 8.0 | .NET 8.0 |  14.783 ms |  0.6947 ms |  2.0484 ms |  14.620 ms |  1.00 |    0.00 |\r\n| Write1024Kb | .NET 9.0 | .NET 9.0 |  52.843 ms |  1.4089 ms |  4.1321 ms |  53.069 ms |  3.64 |    0.60 |\r\n|             |          |          |            |            |            |            |       |         |\r\n| Write16Mb   | .NET 8.0 | .NET 8.0 | 724.461 ms | 14.1549 ms | 20.7481 ms | 726.672 ms |  1.00 |    0.00 |\r\n| Write16Mb   | .NET 9.0 | .NET 9.0 | 529.327 ms | 10.2676 ms | 15.9854 ms | 528.721 ms |  0.73 |    0.03 |\r\n```\r\n\r\nso, after all - this isn't a lucenenet issue, its only Microsoft bug.\r\n\r\nthis issue can be closed.\r\n","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/2016711071/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/2016720383","html_url":"https://github.com/apache/lucenenet/issues/933#issuecomment-2016720383","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/933","id":2016720383,"node_id":"IC_kwDOAAJ06c54NLX_","user":{"login":"AddictedCS","id":1202115,"node_id":"MDQ6VXNlcjEyMDIxMTU=","avatar_url":"https://avatars.githubusercontent.com/u/1202115?v=4","gravatar_id":"","url":"https://api.github.com/users/AddictedCS","html_url":"https://github.com/AddictedCS","followers_url":"https://api.github.com/users/AddictedCS/followers","following_url":"https://api.github.com/users/AddictedCS/following{/other_user}","gists_url":"https://api.github.com/users/AddictedCS/gists{/gist_id}","starred_url":"https://api.github.com/users/AddictedCS/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/AddictedCS/subscriptions","organizations_url":"https://api.github.com/users/AddictedCS/orgs","repos_url":"https://api.github.com/users/AddictedCS/repos","events_url":"https://api.github.com/users/AddictedCS/events{/privacy}","received_events_url":"https://api.github.com/users/AddictedCS/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-24T07:25:10Z","updated_at":"2024-03-24T07:33:19Z","author_association":"NONE","body":"Since I can't remember the exact benchmark data setup which generated 12k X degradation, I will edit the issue to reflect the reproducible **30x** degradation.\r\n\r\nI agree, it seems to be a Microsoft issue, exacerbated when the code executes on a macOS ARM chip. The **150x** degradation in `FileStream` when writing small files is baffling.\r\n\r\nBTW, I've executed @jeme benchmark with added flags in `FileStream` initialization: `FileOptions.Asynchronous | FileOptions.RandomAccess | FileOptions.WriteThrough`. I was expecting the issue to be gone (if the `FSDirectory` change helped, why wouldn't it work in the localized benchmark). The results show a slight improvement, but the performance is still unbearable, **120x** degradation on macOS ARM.\r\n\r\n```\r\nBenchmarkDotNet v0.13.12, macOS Sonoma 14.4 (23E214) [Darwin 23.4.0]\r\nApple M2 Max, 1 CPU, 12 logical and 12 physical cores\r\n.NET SDK 8.0.203\r\n  [Host]   : .NET 8.0.3 (8.0.324.11423), Arm64 RyuJIT AdvSIMD\r\n  .NET 7.0 : .NET 7.0.5 (7.0.523.17405), Arm64 RyuJIT AdvSIMD\r\n  .NET 8.0 : .NET 8.0.3 (8.0.324.11423), Arm64 RyuJIT AdvSIMD\r\n\r\nServer=True  \r\n\r\n| Method      | Job      | Runtime  | Mean         | Error      | StdDev     | Median       | Ratio  | RatioSD |\r\n|------------ |--------- |--------- |-------------:|-----------:|-----------:|-------------:|-------:|--------:|\r\n| Write1Kb    | .NET 7.0 | .NET 7.0 |     41.62 μs |   0.226 μs |   0.211 μs |     41.62 μs |   1.00 |    0.00 |\r\n| Write1Kb    | .NET 8.0 | .NET 8.0 |  4,943.71 μs |  97.288 μs | 180.330 μs |  4,986.08 μs | 121.49 |    4.02 |\r\n|             |          |          |              |            |            |              |        |         |\r\n| Write2Kb    | .NET 7.0 | .NET 7.0 |     41.02 μs |   0.809 μs |   2.117 μs |     41.68 μs |   1.00 |    0.00 |\r\n| Write2Kb    | .NET 8.0 | .NET 8.0 |  4,860.25 μs |  94.275 μs | 129.045 μs |  4,846.69 μs | 119.22 |    9.06 |\r\n|             |          |          |              |            |            |              |        |         |\r\n| Write4Kb    | .NET 7.0 | .NET 7.0 |     41.47 μs |   0.422 μs |   0.374 μs |     41.46 μs |   1.00 |    0.00 |\r\n| Write4Kb    | .NET 8.0 | .NET 8.0 |  4,907.08 μs |  97.922 μs | 146.565 μs |  4,886.79 μs | 119.32 |    3.41 |\r\n|             |          |          |              |            |            |              |        |         |\r\n| Write512Kb  | .NET 7.0 | .NET 7.0 |  5,153.03 μs | 102.662 μs | 233.814 μs |  5,156.53 μs |   1.00 |    0.00 |\r\n| Write512Kb  | .NET 8.0 | .NET 8.0 |  5,154.92 μs |  84.612 μs |  97.439 μs |  5,161.52 μs |   1.01 |    0.03 |\r\n|             |          |          |              |            |            |              |        |         |\r\n| Write1024Kb | .NET 7.0 | .NET 7.0 |  5,237.81 μs | 102.777 μs | 114.236 μs |  5,205.71 μs |   1.00 |    0.00 |\r\n| Write1024Kb | .NET 8.0 | .NET 8.0 |  5,219.92 μs |  91.374 μs |  85.472 μs |  5,228.99 μs |   1.00 |    0.02 |\r\n|             |          |          |              |            |            |              |        |         |\r\n| Write16Mb   | .NET 7.0 | .NET 7.0 | 10,028.00 μs | 198.229 μs | 404.930 μs |  9,891.89 μs |   1.00 |    0.00 |\r\n| Write16Mb   | .NET 8.0 | .NET 8.0 | 10,148.77 μs | 202.662 μs | 465.649 μs | 10,070.86 μs |   1.02 |    0.02 |\r\n\r\n```\r\n\r\n@jeme let me know if you intend to open an issue in dotnet/core repository. I will close this issue then.\r\n\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/2016720383/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/2016737653","html_url":"https://github.com/apache/lucenenet/issues/933#issuecomment-2016737653","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/933","id":2016737653,"node_id":"IC_kwDOAAJ06c54NPl1","user":{"login":"AddictedCS","id":1202115,"node_id":"MDQ6VXNlcjEyMDIxMTU=","avatar_url":"https://avatars.githubusercontent.com/u/1202115?v=4","gravatar_id":"","url":"https://api.github.com/users/AddictedCS","html_url":"https://github.com/AddictedCS","followers_url":"https://api.github.com/users/AddictedCS/followers","following_url":"https://api.github.com/users/AddictedCS/following{/other_user}","gists_url":"https://api.github.com/users/AddictedCS/gists{/gist_id}","starred_url":"https://api.github.com/users/AddictedCS/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/AddictedCS/subscriptions","organizations_url":"https://api.github.com/users/AddictedCS/orgs","repos_url":"https://api.github.com/users/AddictedCS/repos","events_url":"https://api.github.com/users/AddictedCS/events{/privacy}","received_events_url":"https://api.github.com/users/AddictedCS/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-24T08:44:45Z","updated_at":"2024-03-24T08:44:45Z","author_association":"NONE","body":"And here are the results for different sets of parameters. The params options set as follows:\r\n```csharp\r\n[Params((FileOptions.Asynchronous | FileOptions.RandomAccess | FileOptions.WriteThrough),\r\n        (FileOptions.Asynchronous | FileOptions.RandomAccess),\r\n        (FileOptions.Asynchronous | FileOptions.WriteThrough),\r\n        (FileOptions.RandomAccess | FileOptions.WriteThrough),\r\n        (FileOptions.Asynchronous),\r\n        (FileOptions.RandomAccess),\r\n        (FileOptions.WriteThrough))]\r\n    public FileOptions Options;\r\n```\r\nThe degradation varies between **120x-180x**. \r\n```\r\n\r\nBenchmarkDotNet v0.13.12, macOS Sonoma 14.4 (23E214) [Darwin 23.4.0]\r\nApple M2 Max, 1 CPU, 12 logical and 12 physical cores\r\n.NET SDK 8.0.203\r\n  [Host]   : .NET 8.0.3 (8.0.324.11423), Arm64 RyuJIT AdvSIMD\r\n  .NET 7.0 : .NET 7.0.5 (7.0.523.17405), Arm64 RyuJIT AdvSIMD\r\n  .NET 8.0 : .NET 8.0.3 (8.0.324.11423), Arm64 RyuJIT AdvSIMD\r\n\r\nServer=True  \r\n\r\n| Method      | Job      | Runtime  | Options              | Mean         | Error      | StdDev       | Median       | Ratio  | RatioSD |\r\n|------------ |--------- |--------- |--------------------- |-------------:|-----------:|-------------:|-------------:|-------:|--------:|\r\n| **Write1Kb**    | **.NET 7.0** | **.NET 7.0** | **WriteThrough**         |     **36.68 μs** |   **0.291 μs** |     **0.243 μs** |     **36.75 μs** |   **1.00** |    **0.00** |\r\n| Write1Kb    | .NET 8.0 | .NET 8.0 | WriteThrough         |  4,973.23 μs |  86.943 μs |    81.327 μs |  4,998.96 μs | 135.48 |    2.83 |\r\n|             |          |          |                      |              |            |              |              |        |         |\r\n| Write2Kb    | .NET 7.0 | .NET 7.0 | WriteThrough         |     40.38 μs |   0.792 μs |     1.323 μs |     40.69 μs |   1.00 |    0.00 |\r\n| Write2Kb    | .NET 8.0 | .NET 8.0 | WriteThrough         |  4,941.10 μs |  98.673 μs |   228.689 μs |  4,975.19 μs | 123.60 |    6.87 |\r\n|             |          |          |                      |              |            |              |              |        |         |\r\n| Write4Kb    | .NET 7.0 | .NET 7.0 | WriteThrough         |     41.22 μs |   0.524 μs |     0.490 μs |     41.37 μs |   1.00 |    0.00 |\r\n| Write4Kb    | .NET 8.0 | .NET 8.0 | WriteThrough         |  4,929.82 μs |  97.550 μs |   267.042 μs |  5,001.38 μs | 115.77 |    6.19 |\r\n|             |          |          |                      |              |            |              |              |        |         |\r\n| Write512Kb  | .NET 7.0 | .NET 7.0 | WriteThrough         |  4,920.57 μs |  95.867 μs |   257.541 μs |  4,963.36 μs |   1.00 |    0.00 |\r\n| Write512Kb  | .NET 8.0 | .NET 8.0 | WriteThrough         |  5,087.13 μs |  99.106 μs |   250.454 μs |  5,112.59 μs |   1.04 |    0.08 |\r\n|             |          |          |                      |              |            |              |              |        |         |\r\n| Write1024Kb | .NET 7.0 | .NET 7.0 | WriteThrough         |  5,389.87 μs | 106.514 μs |   242.586 μs |  5,344.43 μs |   1.00 |    0.00 |\r\n| Write1024Kb | .NET 8.0 | .NET 8.0 | WriteThrough         |  5,399.41 μs | 106.635 μs |   275.259 μs |  5,349.17 μs |   1.00 |    0.07 |\r\n|             |          |          |                      |              |            |              |              |        |         |\r\n| Write16Mb   | .NET 7.0 | .NET 7.0 | WriteThrough         | 10,069.75 μs | 199.011 μs |   397.447 μs |  9,939.55 μs |   1.00 |    0.00 |\r\n| Write16Mb   | .NET 8.0 | .NET 8.0 | WriteThrough         | 10,609.77 μs | 207.562 μs |   414.524 μs | 10,532.28 μs |   1.05 |    0.03 |\r\n|             |          |          |                      |              |            |              |              |        |         |\r\n| **Write1Kb**    | **.NET 7.0** | **.NET 7.0** | **Rando(...)rough [26]** |     **40.71 μs** |   **0.808 μs** |     **1.415 μs** |     **41.18 μs** |   **1.00** |    **0.00** |\r\n| Write1Kb    | .NET 8.0 | .NET 8.0 | Rando(...)rough [26] |  5,069.47 μs |  98.337 μs |   153.100 μs |  5,086.67 μs | 125.11 |    6.63 |\r\n|             |          |          |                      |              |            |              |              |        |         |\r\n| Write2Kb    | .NET 7.0 | .NET 7.0 | Rando(...)rough [26] |     39.86 μs |   0.642 μs |     0.502 μs |     39.70 μs |   1.00 |    0.00 |\r\n| Write2Kb    | .NET 8.0 | .NET 8.0 | Rando(...)rough [26] |  4,876.37 μs |  97.067 μs |   219.097 μs |  4,917.56 μs | 120.90 |    7.23 |\r\n|             |          |          |                      |              |            |              |              |        |         |\r\n| Write4Kb    | .NET 7.0 | .NET 7.0 | Rando(...)rough [26] |     41.13 μs |   0.738 μs |     0.654 μs |     41.01 μs |   1.00 |    0.00 |\r\n| Write4Kb    | .NET 8.0 | .NET 8.0 | Rando(...)rough [26] |  5,010.03 μs |  97.431 μs |   108.294 μs |  4,998.43 μs | 122.20 |    3.19 |\r\n|             |          |          |                      |              |            |              |              |        |         |\r\n| Write512Kb  | .NET 7.0 | .NET 7.0 | Rando(...)rough [26] |  5,150.66 μs | 109.929 μs |   320.668 μs |  5,148.15 μs |   1.00 |    0.00 |\r\n| Write512Kb  | .NET 8.0 | .NET 8.0 | Rando(...)rough [26] |  5,119.08 μs | 100.497 μs |   140.883 μs |  5,122.52 μs |   1.02 |    0.07 |\r\n|             |          |          |                      |              |            |              |              |        |         |\r\n| Write1024Kb | .NET 7.0 | .NET 7.0 | Rando(...)rough [26] |  5,475.21 μs | 108.031 μs |   183.446 μs |  5,480.69 μs |   1.00 |    0.00 |\r\n| Write1024Kb | .NET 8.0 | .NET 8.0 | Rando(...)rough [26] |  5,193.73 μs | 103.179 μs |   160.638 μs |  5,182.32 μs |   0.95 |    0.06 |\r\n|             |          |          |                      |              |            |              |              |        |         |\r\n| Write16Mb   | .NET 7.0 | .NET 7.0 | Rando(...)rough [26] | 10,108.22 μs | 201.090 μs |   406.212 μs | 10,000.39 μs |   1.00 |    0.00 |\r\n| Write16Mb   | .NET 8.0 | .NET 8.0 | Rando(...)rough [26] | 10,041.39 μs | 199.535 μs |   398.493 μs |  9,930.46 μs |   0.99 |    0.03 |\r\n|             |          |          |                      |              |            |              |              |        |         |\r\n| **Write1Kb**    | **.NET 7.0** | **.NET 7.0** | **Async(...)rough [26]** |     **40.99 μs** |   **0.609 μs** |     **0.540 μs** |     **40.92 μs** |   **1.00** |    **0.00** |\r\n| Write1Kb    | .NET 8.0 | .NET 8.0 | Async(...)rough [26] |  4,951.12 μs |  95.386 μs |   228.538 μs |  4,981.84 μs | 123.35 |    5.46 |\r\n|             |          |          |                      |              |            |              |              |        |         |\r\n| Write2Kb    | .NET 7.0 | .NET 7.0 | Async(...)rough [26] |     41.40 μs |   0.418 μs |     0.391 μs |     41.54 μs |   1.00 |    0.00 |\r\n| Write2Kb    | .NET 8.0 | .NET 8.0 | Async(...)rough [26] |  4,904.11 μs |  96.342 μs |   187.908 μs |  4,935.10 μs | 119.32 |    5.34 |\r\n|             |          |          |                      |              |            |              |              |        |         |\r\n| Write4Kb    | .NET 7.0 | .NET 7.0 | Async(...)rough [26] |     40.69 μs |   0.796 μs |     0.852 μs |     40.71 μs |   1.00 |    0.00 |\r\n| Write4Kb    | .NET 8.0 | .NET 8.0 | Async(...)rough [26] |  5,124.55 μs | 101.950 μs |   297.392 μs |  5,121.22 μs | 124.31 |    9.37 |\r\n|             |          |          |                      |              |            |              |              |        |         |\r\n| Write512Kb  | .NET 7.0 | .NET 7.0 | Async(...)rough [26] |  5,129.82 μs |  98.803 μs |   117.618 μs |  5,130.39 μs |   1.00 |    0.00 |\r\n| Write512Kb  | .NET 8.0 | .NET 8.0 | Async(...)rough [26] |  5,302.62 μs | 105.567 μs |   278.104 μs |  5,323.11 μs |   1.04 |    0.05 |\r\n|             |          |          |                      |              |            |              |              |        |         |\r\n| Write1024Kb | .NET 7.0 | .NET 7.0 | Async(...)rough [26] |  5,414.26 μs | 107.056 μs |   187.501 μs |  5,455.81 μs |   1.00 |    0.00 |\r\n| Write1024Kb | .NET 8.0 | .NET 8.0 | Async(...)rough [26] |  5,625.89 μs | 111.672 μs |   261.030 μs |  5,609.76 μs |   1.05 |    0.07 |\r\n|             |          |          |                      |              |            |              |              |        |         |\r\n| Write16Mb   | .NET 7.0 | .NET 7.0 | Async(...)rough [26] | 10,061.14 μs | 201.102 μs |   396.956 μs |  9,938.46 μs |   1.00 |    0.00 |\r\n| Write16Mb   | .NET 8.0 | .NET 8.0 | Async(...)rough [26] | 10,175.71 μs | 202.610 μs |   481.524 μs | 10,036.81 μs |   1.01 |    0.07 |\r\n|             |          |          |                      |              |            |              |              |        |         |\r\n| **Write1Kb**    | **.NET 7.0** | **.NET 7.0** | **Rando(...)rough [40]** |     **41.07 μs** |   **0.256 μs** |     **0.227 μs** |     **41.12 μs** |   **1.00** |    **0.00** |\r\n| Write1Kb    | .NET 8.0 | .NET 8.0 | Rando(...)rough [40] |  5,051.85 μs |  94.100 μs |   122.357 μs |  5,036.35 μs | 122.72 |    3.31 |\r\n|             |          |          |                      |              |            |              |              |        |         |\r\n| Write2Kb    | .NET 7.0 | .NET 7.0 | Rando(...)rough [40] |     40.25 μs |   0.366 μs |     0.342 μs |     40.19 μs |   1.00 |    0.00 |\r\n| Write2Kb    | .NET 8.0 | .NET 8.0 | Rando(...)rough [40] |  5,171.39 μs | 101.519 μs |   177.803 μs |  5,183.12 μs | 127.15 |    4.60 |\r\n|             |          |          |                      |              |            |              |              |        |         |\r\n| Write4Kb    | .NET 7.0 | .NET 7.0 | Rando(...)rough [40] |     41.20 μs |   0.700 μs |     0.655 μs |     41.17 μs |   1.00 |    0.00 |\r\n| Write4Kb    | .NET 8.0 | .NET 8.0 | Rando(...)rough [40] |  5,076.50 μs | 101.333 μs |   160.725 μs |  5,106.31 μs | 122.77 |    4.92 |\r\n|             |          |          |                      |              |            |              |              |        |         |\r\n| Write512Kb  | .NET 7.0 | .NET 7.0 | Rando(...)rough [40] |  5,235.58 μs | 102.545 μs |   140.365 μs |  5,232.39 μs |   1.00 |    0.00 |\r\n| Write512Kb  | .NET 8.0 | .NET 8.0 | Rando(...)rough [40] |  5,143.66 μs |  98.169 μs |   127.647 μs |  5,149.63 μs |   0.98 |    0.04 |\r\n|             |          |          |                      |              |            |              |              |        |         |\r\n| Write1024Kb | .NET 7.0 | .NET 7.0 | Rando(...)rough [40] |  5,377.18 μs | 107.115 μs |   287.759 μs |  5,353.74 μs |   1.00 |    0.00 |\r\n| Write1024Kb | .NET 8.0 | .NET 8.0 | Rando(...)rough [40] |  5,292.95 μs | 103.324 μs |   118.988 μs |  5,291.10 μs |   0.98 |    0.05 |\r\n|             |          |          |                      |              |            |              |              |        |         |\r\n| Write16Mb   | .NET 7.0 | .NET 7.0 | Rando(...)rough [40] | 10,045.56 μs | 196.723 μs |   359.719 μs |  9,975.61 μs |   1.00 |    0.00 |\r\n| Write16Mb   | .NET 8.0 | .NET 8.0 | Rando(...)rough [40] | 10,132.24 μs | 200.504 μs |   409.577 μs | 10,062.68 μs |   1.01 |    0.02 |\r\n|             |          |          |                      |              |            |              |              |        |         |\r\n| **Write1Kb**    | **.NET 7.0** | **.NET 7.0** | **RandomAccess**         |     **27.67 μs** |   **0.263 μs** |     **0.246 μs** |     **27.77 μs** |   **1.00** |    **0.00** |\r\n| Write1Kb    | .NET 8.0 | .NET 8.0 | RandomAccess         |  4,458.41 μs |  87.946 μs |    97.752 μs |  4,467.41 μs | 161.07 |    4.47 |\r\n|             |          |          |                      |              |            |              |              |        |         |\r\n| Write2Kb    | .NET 7.0 | .NET 7.0 | RandomAccess         |     27.98 μs |   0.146 μs |     0.136 μs |     27.98 μs |   1.00 |    0.00 |\r\n| Write2Kb    | .NET 8.0 | .NET 8.0 | RandomAccess         |  4,865.28 μs |  96.690 μs |   233.517 μs |  4,916.11 μs | 172.14 |   12.04 |\r\n|             |          |          |                      |              |            |              |              |        |         |\r\n| Write4Kb    | .NET 7.0 | .NET 7.0 | RandomAccess         |     28.37 μs |   0.228 μs |     0.213 μs |     28.33 μs |   1.00 |    0.00 |\r\n| Write4Kb    | .NET 8.0 | .NET 8.0 | RandomAccess         |  4,769.64 μs |  93.957 μs |   181.022 μs |  4,769.61 μs | 162.15 |    5.40 |\r\n|             |          |          |                      |              |            |              |              |        |         |\r\n| Write512Kb  | .NET 7.0 | .NET 7.0 | RandomAccess         |  5,007.21 μs |  80.269 μs |    71.156 μs |  5,015.11 μs |   1.00 |    0.00 |\r\n| Write512Kb  | .NET 8.0 | .NET 8.0 | RandomAccess         |  5,076.00 μs |  82.783 μs |    77.436 μs |  5,062.07 μs |   1.01 |    0.02 |\r\n|             |          |          |                      |              |            |              |              |        |         |\r\n| Write1024Kb | .NET 7.0 | .NET 7.0 | RandomAccess         |  5,237.61 μs | 104.104 μs |   158.977 μs |  5,247.27 μs |   1.00 |    0.00 |\r\n| Write1024Kb | .NET 8.0 | .NET 8.0 | RandomAccess         |  5,219.69 μs | 100.639 μs |    89.214 μs |  5,219.81 μs |   1.01 |    0.04 |\r\n|             |          |          |                      |              |            |              |              |        |         |\r\n| Write16Mb   | .NET 7.0 | .NET 7.0 | RandomAccess         | 12,571.40 μs | 260.453 μs |   763.864 μs | 12,604.09 μs |   1.00 |    0.00 |\r\n| Write16Mb   | .NET 8.0 | .NET 8.0 | RandomAccess         | 12,711.32 μs | 428.128 μs | 1,255.625 μs | 12,962.35 μs |   1.02 |    0.12 |\r\n|             |          |          |                      |              |            |              |              |        |         |\r\n| **Write1Kb**    | **.NET 7.0** | **.NET 7.0** | **Asynchronous**         |     **27.61 μs** |   **0.291 μs** |     **0.272 μs** |     **27.64 μs** |   **1.00** |    **0.00** |\r\n| Write1Kb    | .NET 8.0 | .NET 8.0 | Asynchronous         |  5,026.22 μs |  98.316 μs |   100.964 μs |  5,003.53 μs | 182.20 |    4.59 |\r\n|             |          |          |                      |              |            |              |              |        |         |\r\n| Write2Kb    | .NET 7.0 | .NET 7.0 | Asynchronous         |     28.23 μs |   0.538 μs |     0.576 μs |     28.34 μs |   1.00 |    0.00 |\r\n| Write2Kb    | .NET 8.0 | .NET 8.0 | Asynchronous         |  4,946.44 μs |  61.866 μs |    57.870 μs |  4,952.79 μs | 175.12 |    3.58 |\r\n|             |          |          |                      |              |            |              |              |        |         |\r\n| Write4Kb    | .NET 7.0 | .NET 7.0 | Asynchronous         |     28.64 μs |   0.239 μs |     0.224 μs |     28.68 μs |   1.00 |    0.00 |\r\n| Write4Kb    | .NET 8.0 | .NET 8.0 | Asynchronous         |  4,969.19 μs |  94.254 μs |    88.165 μs |  4,971.37 μs | 173.51 |    2.59 |\r\n|             |          |          |                      |              |            |              |              |        |         |\r\n| Write512Kb  | .NET 7.0 | .NET 7.0 | Asynchronous         |  4,971.69 μs |  53.480 μs |    47.409 μs |  4,978.96 μs |   1.00 |    0.00 |\r\n| Write512Kb  | .NET 8.0 | .NET 8.0 | Asynchronous         |  5,003.56 μs |  76.701 μs |    64.049 μs |  5,022.03 μs |   1.01 |    0.02 |\r\n|             |          |          |                      |              |            |              |              |        |         |\r\n| Write1024Kb | .NET 7.0 | .NET 7.0 | Asynchronous         |  5,145.74 μs |  74.349 μs |    69.546 μs |  5,149.54 μs |   1.00 |    0.00 |\r\n| Write1024Kb | .NET 8.0 | .NET 8.0 | Asynchronous         |  5,232.12 μs |  87.522 μs |    77.586 μs |  5,208.61 μs |   1.02 |    0.02 |\r\n|             |          |          |                      |              |            |              |              |        |         |\r\n| Write16Mb   | .NET 7.0 | .NET 7.0 | Asynchronous         | 10,666.04 μs | 210.645 μs |   453.436 μs | 10,518.88 μs |   1.00 |    0.00 |\r\n| Write16Mb   | .NET 8.0 | .NET 8.0 | Asynchronous         | 10,651.27 μs | 211.794 μs |   442.092 μs | 10,555.68 μs |   1.00 |    0.07 |\r\n|             |          |          |                      |              |            |              |              |        |         |\r\n| **Write1Kb**    | **.NET 7.0** | **.NET 7.0** | **Rando(...)onous [26]** |     **27.64 μs** |   **0.541 μs** |     **0.722 μs** |     **27.79 μs** |   **1.00** |    **0.00** |\r\n| Write1Kb    | .NET 8.0 | .NET 8.0 | Rando(...)onous [26] |  4,903.27 μs |  89.176 μs |   148.993 μs |  4,925.48 μs | 176.32 |    7.55 |\r\n|             |          |          |                      |              |            |              |              |        |         |\r\n| Write2Kb    | .NET 7.0 | .NET 7.0 | Rando(...)onous [26] |     28.48 μs |   0.374 μs |     0.312 μs |     28.54 μs |   1.00 |    0.00 |\r\n| Write2Kb    | .NET 8.0 | .NET 8.0 | Rando(...)onous [26] |  4,942.60 μs |  97.433 μs |   162.789 μs |  4,956.53 μs | 168.21 |    4.54 |\r\n|             |          |          |                      |              |            |              |              |        |         |\r\n| Write4Kb    | .NET 7.0 | .NET 7.0 | Rando(...)onous [26] |     28.51 μs |   0.229 μs |     0.203 μs |     28.44 μs |   1.00 |    0.00 |\r\n| Write4Kb    | .NET 8.0 | .NET 8.0 | Rando(...)onous [26] |  4,910.03 μs |  58.850 μs |    55.048 μs |  4,930.39 μs | 172.19 |    2.28 |\r\n|             |          |          |                      |              |            |              |              |        |         |\r\n| Write512Kb  | .NET 7.0 | .NET 7.0 | Rando(...)onous [26] |  5,081.34 μs |  78.255 μs |    73.200 μs |  5,086.79 μs |   1.00 |    0.00 |\r\n| Write512Kb  | .NET 8.0 | .NET 8.0 | Rando(...)onous [26] |  5,045.27 μs |  99.064 μs |   114.082 μs |  5,056.80 μs |   0.99 |    0.03 |\r\n|             |          |          |                      |              |            |              |              |        |         |\r\n| Write1024Kb | .NET 7.0 | .NET 7.0 | Rando(...)onous [26] |  5,276.99 μs | 104.845 μs |   136.329 μs |  5,274.49 μs |   1.00 |    0.00 |\r\n| Write1024Kb | .NET 8.0 | .NET 8.0 | Rando(...)onous [26] |  5,228.08 μs | 103.547 μs |   286.930 μs |  5,200.77 μs |   0.96 |    0.05 |\r\n|             |          |          |                      |              |            |              |              |        |         |\r\n| Write16Mb   | .NET 7.0 | .NET 7.0 | Rando(...)onous [26] | 10,703.79 μs | 213.802 μs |   473.770 μs | 10,511.99 μs |   1.00 |    0.00 |\r\n| Write16Mb   | .NET 8.0 | .NET 8.0 | Rando(...)onous [26] | 12,362.44 μs | 476.119 μs | 1,373.711 μs | 12,661.85 μs |   1.12 |    0.15 |\r\n```","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/2016737653/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/2016807325","html_url":"https://github.com/apache/lucenenet/issues/933#issuecomment-2016807325","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/933","id":2016807325,"node_id":"IC_kwDOAAJ06c54Ngmd","user":{"login":"AddictedCS","id":1202115,"node_id":"MDQ6VXNlcjEyMDIxMTU=","avatar_url":"https://avatars.githubusercontent.com/u/1202115?v=4","gravatar_id":"","url":"https://api.github.com/users/AddictedCS","html_url":"https://github.com/AddictedCS","followers_url":"https://api.github.com/users/AddictedCS/followers","following_url":"https://api.github.com/users/AddictedCS/following{/other_user}","gists_url":"https://api.github.com/users/AddictedCS/gists{/gist_id}","starred_url":"https://api.github.com/users/AddictedCS/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/AddictedCS/subscriptions","organizations_url":"https://api.github.com/users/AddictedCS/orgs","repos_url":"https://api.github.com/users/AddictedCS/repos","events_url":"https://api.github.com/users/AddictedCS/events{/privacy}","received_events_url":"https://api.github.com/users/AddictedCS/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-24T13:17:07Z","updated_at":"2024-03-24T18:57:27Z","author_association":"NONE","body":"I may have narrowed down the issue to the `Buffer Size` value. If the buffer size is larger than the payload, performance drops significantly on NET 8. If it is less than the buffer size, performance is on par with .NET 7 or even slightly faster. \r\n\r\n```\r\nBenchmarkDotNet v0.13.12, macOS Sonoma 14.4 (23E214) [Darwin 23.4.0]\r\nApple M2 Max, 1 CPU, 12 logical and 12 physical cores\r\n.NET SDK 8.0.203\r\n  [Host]   : .NET 8.0.3 (8.0.324.11423), Arm64 RyuJIT AdvSIMD\r\n  .NET 7.0 : .NET 7.0.5 (7.0.523.17405), Arm64 RyuJIT AdvSIMD\r\n  .NET 8.0 : .NET 8.0.3 (8.0.324.11423), Arm64 RyuJIT AdvSIMD\r\n\r\nServer=True  \r\n\r\n| Method     | Job      | Runtime  | BufferSize | Mean        | Error      | StdDev     | Ratio  | RatioSD |\r\n|----------- |--------- |--------- |----------- |------------:|-----------:|-----------:|-------:|--------:|\r\n| Write1Kb   | .NET 7.0 | .NET 7.0 | 1024       | 4,887.55 μs |  93.198 μs | 117.866 μs |   1.00 |    0.00 |\r\n| Write1Kb   | .NET 8.0 | .NET 8.0 | 1024       | 4,801.20 μs |  95.386 μs | 207.361 μs |   0.97 |    0.06 |\r\n|            |          |          |            |             |            |            |        |         |\r\n| Write2Kb   | .NET 7.0 | .NET 7.0 | 1024       | 5,008.96 μs |  98.276 μs | 140.944 μs |   1.00 |    0.00 |\r\n| Write2Kb   | .NET 8.0 | .NET 8.0 | 1024       | 4,749.93 μs |  94.161 μs | 267.120 μs |   0.97 |    0.05 |\r\n|            |          |          |            |             |            |            |        |         |\r\n| Write4Kb   | .NET 7.0 | .NET 7.0 | 1024       | 4,961.12 μs |  98.620 μs | 216.472 μs |   1.00 |    0.00 |\r\n| Write4Kb   | .NET 8.0 | .NET 8.0 | 1024       | 4,886.21 μs |  97.469 μs | 285.861 μs |   0.97 |    0.07 |\r\n|            |          |          |            |             |            |            |        |         |\r\n| Write512Kb | .NET 7.0 | .NET 7.0 | 1024       | 5,310.07 μs | 104.943 μs | 204.684 μs |   1.00 |    0.00 |\r\n| Write512Kb | .NET 8.0 | .NET 8.0 | 1024       | 5,110.50 μs |  99.717 μs | 271.287 μs |   0.95 |    0.06 |\r\n|            |          |          |            |             |            |            |        |         |\r\n| Write1Kb   | .NET 7.0 | .NET 7.0 | 4096       |    29.20 μs |   0.479 μs |   0.425 μs |   1.00 |    0.00 |\r\n| Write1Kb   | .NET 8.0 | .NET 8.0 | 4096       | 4,813.45 μs |  95.872 μs | 214.431 μs | 164.20 |    7.41 |\r\n|            |          |          |            |             |            |            |        |         |\r\n| Write2Kb   | .NET 7.0 | .NET 7.0 | 4096       |    27.79 μs |   0.549 μs |   1.018 μs |   1.00 |    0.00 |\r\n| Write2Kb   | .NET 8.0 | .NET 8.0 | 4096       | 5,037.09 μs |  91.438 μs | 122.067 μs | 182.70 |    8.50 |\r\n|            |          |          |            |             |            |            |        |         |\r\n| Write4Kb   | .NET 7.0 | .NET 7.0 | 4096       | 4,860.28 μs |  96.641 μs | 203.848 μs |   1.00 |    0.00 |\r\n| Write4Kb   | .NET 8.0 | .NET 8.0 | 4096       | 5,110.86 μs |  94.640 μs |  92.949 μs |   1.04 |    0.03 |\r\n|            |          |          |            |             |            |            |        |         |\r\n| Write512Kb | .NET 7.0 | .NET 7.0 | 4096       | 5,038.07 μs | 100.634 μs | 272.069 μs |   1.00 |    0.00 |\r\n| Write512Kb | .NET 8.0 | .NET 8.0 | 4096       | 5,340.02 μs | 105.455 μs | 217.782 μs |   1.08 |    0.08 |\r\n|            |          |          |            |             |            |            |        |         |\r\n| Write1Kb   | .NET 7.0 | .NET 7.0 | 16384      |    28.26 μs |   0.295 μs |   0.261 μs |   1.00 |    0.00 |\r\n| Write1Kb   | .NET 8.0 | .NET 8.0 | 16384      | 4,619.00 μs |  91.768 μs | 231.909 μs | 163.67 |    7.33 |\r\n|            |          |          |            |             |            |            |        |         |\r\n| Write2Kb   | .NET 7.0 | .NET 7.0 | 16384      |    28.54 μs |   0.447 μs |   0.419 μs |   1.00 |    0.00 |\r\n| Write2Kb   | .NET 8.0 | .NET 8.0 | 16384      | 4,631.66 μs |  92.227 μs | 254.021 μs | 161.77 |   10.73 |\r\n|            |          |          |            |             |            |            |        |         |\r\n| Write4Kb   | .NET 7.0 | .NET 7.0 | 16384      |    28.88 μs |   0.571 μs |   1.166 μs |   1.00 |    0.00 |\r\n| Write4Kb   | .NET 8.0 | .NET 8.0 | 16384      | 4,737.23 μs |  94.672 μs | 255.952 μs | 164.40 |   11.82 |\r\n|            |          |          |            |             |            |            |        |         |\r\n| Write512Kb | .NET 7.0 | .NET 7.0 | 16384      | 4,938.89 μs |  97.829 μs | 224.779 μs |   1.00 |    0.00 |\r\n| Write512Kb | .NET 8.0 | .NET 8.0 | 16384      | 4,987.08 μs |  99.350 μs | 202.946 μs |   1.02 |    0.08 |\r\n```\r\n \r\nIf we disable buffering altogether by specifying `bufferSize: 0`, the performance gets aligned between .NET 7 and .NET 8. This is a clear indication something is messed up on the framework level.\r\n\r\n```\r\nBenchmarkDotNet v0.13.12, macOS Sonoma 14.4 (23E214) [Darwin 23.4.0]\r\nApple M2 Max, 1 CPU, 12 logical and 12 physical cores\r\n.NET SDK 8.0.203\r\n  [Host]   : .NET 8.0.3 (8.0.324.11423), Arm64 RyuJIT AdvSIMD\r\n  .NET 7.0 : .NET 7.0.5 (7.0.523.17405), Arm64 RyuJIT AdvSIMD\r\n  .NET 8.0 : .NET 8.0.3 (8.0.324.11423), Arm64 RyuJIT AdvSIMD\r\n\r\nServer=True  \r\n\r\n| Method     | Job      | Runtime  | Mean     | Error     | StdDev    | Ratio | RatioSD |\r\n|----------- |--------- |--------- |---------:|----------:|----------:|------:|--------:|\r\n| Write1Kb   | .NET 7.0 | .NET 7.0 | 4.569 ms | 0.0902 ms | 0.2246 ms |  1.00 |    0.00 |\r\n| Write1Kb   | .NET 8.0 | .NET 8.0 | 4.634 ms | 0.0925 ms | 0.2108 ms |  1.02 |    0.07 |\r\n|            |          |          |          |           |           |       |         |\r\n| Write2Kb   | .NET 7.0 | .NET 7.0 | 4.678 ms | 0.0930 ms | 0.1770 ms |  1.00 |    0.00 |\r\n| Write2Kb   | .NET 8.0 | .NET 8.0 | 4.702 ms | 0.0905 ms | 0.0846 ms |  0.99 |    0.03 |\r\n|            |          |          |          |           |           |       |         |\r\n| Write4Kb   | .NET 7.0 | .NET 7.0 | 4.710 ms | 0.0929 ms | 0.1790 ms |  1.00 |    0.00 |\r\n| Write4Kb   | .NET 8.0 | .NET 8.0 | 4.739 ms | 0.0944 ms | 0.1413 ms |  1.01 |    0.05 |\r\n|            |          |          |          |           |           |       |         |\r\n| Write512Kb | .NET 7.0 | .NET 7.0 | 4.905 ms | 0.0903 ms | 0.0844 ms |  1.00 |    0.00 |\r\n| Write512Kb | .NET 8.0 | .NET 8.0 | 4.906 ms | 0.0930 ms | 0.0955 ms |  1.00 |    0.03 |\r\n```\r\n\r\nIt seems the problem is in the `FSync` call; at least, this is the difference between buffered, non-buffered and buffer size less than the payload, implementation. \r\n\r\nBuffered (buffer size larger than the payload) stack trace (slow performance):\r\n<img width=\"828\" alt=\"Screenshot 2024-03-24 at 6 20 30 PM\" src=\"https://github.com/apache/lucenenet/assets/1202115/965f228a-e60b-4979-a2a7-b80999284a03\">\r\n\r\nNon-buffered stack trace (fast performance):\r\n<img width=\"917\" alt=\"Screenshot 2024-03-24 at 7 04 19 PM\" src=\"https://github.com/apache/lucenenet/assets/1202115/01a1b056-0a24-4935-99aa-68d408a4aac5\">\r\n\r\nBuffered (buffer size less than payload) (fast performance):\r\n<img width=\"1150\" alt=\"Screenshot 2024-03-24 at 8 53 02 PM\" src=\"https://github.com/apache/lucenenet/assets/1202115/c665ce68-7c9b-4658-a88e-86e64156a2db\">\r\n\r\nIn summary, the DotNet Framework seems to call the `FSync()` method when the buffer is bigger than the payload, which leads to performance degradation. \r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/2016807325/reactions","total_count":3,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":2,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/2016957763","html_url":"https://github.com/apache/lucenenet/issues/933#issuecomment-2016957763","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/933","id":2016957763,"node_id":"IC_kwDOAAJ06c54OFVD","user":{"login":"paulirwin","id":1874103,"node_id":"MDQ6VXNlcjE4NzQxMDM=","avatar_url":"https://avatars.githubusercontent.com/u/1874103?v=4","gravatar_id":"","url":"https://api.github.com/users/paulirwin","html_url":"https://github.com/paulirwin","followers_url":"https://api.github.com/users/paulirwin/followers","following_url":"https://api.github.com/users/paulirwin/following{/other_user}","gists_url":"https://api.github.com/users/paulirwin/gists{/gist_id}","starred_url":"https://api.github.com/users/paulirwin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paulirwin/subscriptions","organizations_url":"https://api.github.com/users/paulirwin/orgs","repos_url":"https://api.github.com/users/paulirwin/repos","events_url":"https://api.github.com/users/paulirwin/events{/privacy}","received_events_url":"https://api.github.com/users/paulirwin/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-24T21:55:14Z","updated_at":"2024-03-24T21:55:14Z","author_association":"CONTRIBUTOR","body":"Would one of you like to submit an issue to the .NET team on this? Feel free to use my benchmark results as well and please tag me in it. Thanks!","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/2016957763/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/2017655073","html_url":"https://github.com/apache/lucenenet/issues/933#issuecomment-2017655073","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/933","id":2017655073,"node_id":"IC_kwDOAAJ06c54Qvkh","user":{"login":"AddictedCS","id":1202115,"node_id":"MDQ6VXNlcjEyMDIxMTU=","avatar_url":"https://avatars.githubusercontent.com/u/1202115?v=4","gravatar_id":"","url":"https://api.github.com/users/AddictedCS","html_url":"https://github.com/AddictedCS","followers_url":"https://api.github.com/users/AddictedCS/followers","following_url":"https://api.github.com/users/AddictedCS/following{/other_user}","gists_url":"https://api.github.com/users/AddictedCS/gists{/gist_id}","starred_url":"https://api.github.com/users/AddictedCS/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/AddictedCS/subscriptions","organizations_url":"https://api.github.com/users/AddictedCS/orgs","repos_url":"https://api.github.com/users/AddictedCS/repos","events_url":"https://api.github.com/users/AddictedCS/events{/privacy}","received_events_url":"https://api.github.com/users/AddictedCS/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-25T10:15:21Z","updated_at":"2024-03-25T10:15:21Z","author_association":"NONE","body":"Closing this issue, moving discussion to https://github.com/dotnet/runtime/issues/100229","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/2017655073/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/2017757576","html_url":"https://github.com/apache/lucenenet/issues/933#issuecomment-2017757576","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/933","id":2017757576,"node_id":"IC_kwDOAAJ06c54RImI","user":{"login":"jeme","id":1609615,"node_id":"MDQ6VXNlcjE2MDk2MTU=","avatar_url":"https://avatars.githubusercontent.com/u/1609615?v=4","gravatar_id":"","url":"https://api.github.com/users/jeme","html_url":"https://github.com/jeme","followers_url":"https://api.github.com/users/jeme/followers","following_url":"https://api.github.com/users/jeme/following{/other_user}","gists_url":"https://api.github.com/users/jeme/gists{/gist_id}","starred_url":"https://api.github.com/users/jeme/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jeme/subscriptions","organizations_url":"https://api.github.com/users/jeme/orgs","repos_url":"https://api.github.com/users/jeme/repos","events_url":"https://api.github.com/users/jeme/events{/privacy}","received_events_url":"https://api.github.com/users/jeme/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-25T11:11:14Z","updated_at":"2024-03-25T11:11:14Z","author_association":"CONTRIBUTOR","body":"Unfortunately, when lining up the data, this is likely a bug in .NET 7 rather than 8, which means the performance will stay is it is going forward. (disabling the buffers brings the numbers up to .NET 8 numbers, not down to .NET 7 numbers)","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/2017757576/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/2017799740","html_url":"https://github.com/apache/lucenenet/issues/933#issuecomment-2017799740","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/933","id":2017799740,"node_id":"IC_kwDOAAJ06c54RS48","user":{"login":"AddictedCS","id":1202115,"node_id":"MDQ6VXNlcjEyMDIxMTU=","avatar_url":"https://avatars.githubusercontent.com/u/1202115?v=4","gravatar_id":"","url":"https://api.github.com/users/AddictedCS","html_url":"https://github.com/AddictedCS","followers_url":"https://api.github.com/users/AddictedCS/followers","following_url":"https://api.github.com/users/AddictedCS/following{/other_user}","gists_url":"https://api.github.com/users/AddictedCS/gists{/gist_id}","starred_url":"https://api.github.com/users/AddictedCS/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/AddictedCS/subscriptions","organizations_url":"https://api.github.com/users/AddictedCS/orgs","repos_url":"https://api.github.com/users/AddictedCS/repos","events_url":"https://api.github.com/users/AddictedCS/events{/privacy}","received_events_url":"https://api.github.com/users/AddictedCS/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-25T11:32:42Z","updated_at":"2024-03-25T11:33:40Z","author_association":"NONE","body":"Yeah, can we then revive the discussion on soft-commit? `maybeRefresh` should theoretically not touch the disk, and only the `indexWritter.Flush` and `Commit` should do it. Up until .NET 7 it seems this was inadvertedly the case because of the https://github.com/dotnet/runtime/issues/77373, now since .NET 8 it becomes a problem.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/2017799740/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/2018030695","html_url":"https://github.com/apache/lucenenet/issues/933#issuecomment-2018030695","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/933","id":2018030695,"node_id":"IC_kwDOAAJ06c54SLRn","user":{"login":"AddictedCS","id":1202115,"node_id":"MDQ6VXNlcjEyMDIxMTU=","avatar_url":"https://avatars.githubusercontent.com/u/1202115?v=4","gravatar_id":"","url":"https://api.github.com/users/AddictedCS","html_url":"https://github.com/AddictedCS","followers_url":"https://api.github.com/users/AddictedCS/followers","following_url":"https://api.github.com/users/AddictedCS/following{/other_user}","gists_url":"https://api.github.com/users/AddictedCS/gists{/gist_id}","starred_url":"https://api.github.com/users/AddictedCS/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/AddictedCS/subscriptions","organizations_url":"https://api.github.com/users/AddictedCS/orgs","repos_url":"https://api.github.com/users/AddictedCS/repos","events_url":"https://api.github.com/users/AddictedCS/events{/privacy}","received_events_url":"https://api.github.com/users/AddictedCS/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-25T13:39:39Z","updated_at":"2024-03-25T13:40:18Z","author_association":"NONE","body":"BTW, if we analyze the 77374 and 77373 the bug report and the fix could not provide a test case to reproduce the issue. \r\n\r\n> No simple reproduction is available but the problem is obvious from the method itself.\r\n\r\nThe decision to remove the if statement may not be that obvious if the original writer had put it there on purpose as an optimization. It's suspicious that the bug existed for years, and nobody reported a data corruption issue.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/2018030695/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/2018158038","html_url":"https://github.com/apache/lucenenet/issues/933#issuecomment-2018158038","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/933","id":2018158038,"node_id":"IC_kwDOAAJ06c54SqXW","user":{"login":"paulirwin","id":1874103,"node_id":"MDQ6VXNlcjE4NzQxMDM=","avatar_url":"https://avatars.githubusercontent.com/u/1874103?v=4","gravatar_id":"","url":"https://api.github.com/users/paulirwin","html_url":"https://github.com/paulirwin","followers_url":"https://api.github.com/users/paulirwin/followers","following_url":"https://api.github.com/users/paulirwin/following{/other_user}","gists_url":"https://api.github.com/users/paulirwin/gists{/gist_id}","starred_url":"https://api.github.com/users/paulirwin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paulirwin/subscriptions","organizations_url":"https://api.github.com/users/paulirwin/orgs","repos_url":"https://api.github.com/users/paulirwin/repos","events_url":"https://api.github.com/users/paulirwin/events{/privacy}","received_events_url":"https://api.github.com/users/paulirwin/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-25T14:39:45Z","updated_at":"2024-03-25T14:39:45Z","author_association":"CONTRIBUTOR","body":"Does anyone know if this behaves the same in Java Lucene?","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/2018158038/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/2018186306","html_url":"https://github.com/apache/lucenenet/issues/933#issuecomment-2018186306","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/933","id":2018186306,"node_id":"IC_kwDOAAJ06c54SxRC","user":{"login":"jeme","id":1609615,"node_id":"MDQ6VXNlcjE2MDk2MTU=","avatar_url":"https://avatars.githubusercontent.com/u/1609615?v=4","gravatar_id":"","url":"https://api.github.com/users/jeme","html_url":"https://github.com/jeme","followers_url":"https://api.github.com/users/jeme/followers","following_url":"https://api.github.com/users/jeme/following{/other_user}","gists_url":"https://api.github.com/users/jeme/gists{/gist_id}","starred_url":"https://api.github.com/users/jeme/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jeme/subscriptions","organizations_url":"https://api.github.com/users/jeme/orgs","repos_url":"https://api.github.com/users/jeme/repos","events_url":"https://api.github.com/users/jeme/events{/privacy}","received_events_url":"https://api.github.com/users/jeme/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-25T14:51:57Z","updated_at":"2024-03-25T15:00:09Z","author_association":"CONTRIBUTOR","body":"@paulirwin On this level I guess it becomes hard to say as you would need to know how Java's internal IO libraries would work. It's not a 1-to-1 for sure, but since Java and .NET has somewhat different IO layers, there can be reasoning behind the differences.\r\n\r\nhttps://github.com/apache/lucene/blob/releases/lucene-solr/4.8.0/lucene/core/src/java/org/apache/lucene/store/FSDirectory.java#L411\r\n\r\n@AddictedCS in most cases data will get flushed correctly anyways on dispose, it's however something that might be left for the OS or even the actual disk/diskdrivers to manage (cashes on the disk it self helps speed up IO) which means that you would find your self in a rather special case if that where to happen and depending on the software, I don't think you would get to the position where you would find this bug anyways, but if you are writing something that should be ACID compliant you would need it.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/2018186306/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/2018207766","html_url":"https://github.com/apache/lucenenet/issues/933#issuecomment-2018207766","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/933","id":2018207766,"node_id":"IC_kwDOAAJ06c54S2gW","user":{"login":"paulirwin","id":1874103,"node_id":"MDQ6VXNlcjE4NzQxMDM=","avatar_url":"https://avatars.githubusercontent.com/u/1874103?v=4","gravatar_id":"","url":"https://api.github.com/users/paulirwin","html_url":"https://github.com/paulirwin","followers_url":"https://api.github.com/users/paulirwin/followers","following_url":"https://api.github.com/users/paulirwin/following{/other_user}","gists_url":"https://api.github.com/users/paulirwin/gists{/gist_id}","starred_url":"https://api.github.com/users/paulirwin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paulirwin/subscriptions","organizations_url":"https://api.github.com/users/paulirwin/orgs","repos_url":"https://api.github.com/users/paulirwin/repos","events_url":"https://api.github.com/users/paulirwin/events{/privacy}","received_events_url":"https://api.github.com/users/paulirwin/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-25T15:00:37Z","updated_at":"2024-03-25T15:00:37Z","author_association":"CONTRIBUTOR","body":"IMO, if Java also flushes in this scenario and matches .NET 8, then I'm inclined to keep the behavior the same (at least for now...) and instead better document performance considerations. If Java matches .NET <= 7, then I think we can explore a solution here for the 4.8 release, although given the part of code this is in, this is a very risky change that would need to be tested sufficiently.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/2018207766/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/2018377853","html_url":"https://github.com/apache/lucenenet/issues/933#issuecomment-2018377853","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/933","id":2018377853,"node_id":"IC_kwDOAAJ06c54TgB9","user":{"login":"jeme","id":1609615,"node_id":"MDQ6VXNlcjE2MDk2MTU=","avatar_url":"https://avatars.githubusercontent.com/u/1609615?v=4","gravatar_id":"","url":"https://api.github.com/users/jeme","html_url":"https://github.com/jeme","followers_url":"https://api.github.com/users/jeme/followers","following_url":"https://api.github.com/users/jeme/following{/other_user}","gists_url":"https://api.github.com/users/jeme/gists{/gist_id}","starred_url":"https://api.github.com/users/jeme/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jeme/subscriptions","organizations_url":"https://api.github.com/users/jeme/orgs","repos_url":"https://api.github.com/users/jeme/repos","events_url":"https://api.github.com/users/jeme/events{/privacy}","received_events_url":"https://api.github.com/users/jeme/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-25T16:13:35Z","updated_at":"2024-03-25T16:16:25Z","author_association":"CONTRIBUTOR","body":"@paulirwin As far as the hard flush goes, one can get rid of this as:\r\n\r\n```CSharp\r\npublic class CustomMMapDirectory : MMapDirectory\r\n{\r\n    public CustomMMapDirectory(DirectoryInfo path, LockFactory lockFactory) : base(path, lockFactory) { }\r\n    public CustomMMapDirectory(DirectoryInfo path) : base(path) { }\r\n    public CustomMMapDirectory(DirectoryInfo path, LockFactory lockFactory, int maxChunkSize) : base(path, lockFactory, maxChunkSize) { }\r\n    public CustomMMapDirectory(string path, LockFactory lockFactory) : base(path, lockFactory) { }\r\n    public CustomMMapDirectory(string path) : base(path) { }\r\n    public CustomMMapDirectory(string path, LockFactory lockFactory, int maxChunkSize) : base(path, lockFactory, maxChunkSize) { }\r\n\r\n    public override IndexOutput CreateOutput(string name, IOContext context)\r\n    {\r\n        EnsureOpen();\r\n\r\n        EnsureCanWrite(name);\r\n        return new CustomFSIndexOutput(this, name);\r\n    }\r\n\r\n    protected class CustomFSIndexOutput : IndexOutput\r\n    {\r\n        private readonly CustomMMapDirectory directory;\r\n        public const int DEFAULT_BUFFER_SIZE = 16384;\r\n        private const int CHUNK_SIZE = DEFAULT_BUFFER_SIZE;\r\n        internal readonly string name;\r\n\r\n        private readonly CRC32 crc = new CRC32();\r\n        private readonly FileStream file;\r\n        private volatile bool isOpen; // remember if the file is open, so that we don't try to close it more than once\r\n\r\n        public override long Length => file.Length;\r\n        public override long Position => file.Position;\r\n\r\n        public override long Checksum => crc.Value;\r\n\r\n        public CustomFSIndexOutput(CustomMMapDirectory directory, string name)\r\n        {\r\n            this.directory = directory;\r\n            this.name = name;\r\n            file = new FileStream(\r\n                path: Path.Combine(this.directory.m_directory.FullName, name),\r\n                mode: FileMode.OpenOrCreate,\r\n                access: FileAccess.Write,\r\n                share: FileShare.ReadWrite,\r\n                bufferSize: CHUNK_SIZE);\r\n            isOpen = true;\r\n        }\r\n\r\n\r\n        public override void WriteByte(byte b)\r\n        {\r\n            CheckDisposed();\r\n\r\n            crc.Update(b);\r\n            file.WriteByte(b);\r\n        }\r\n\r\n        public override void WriteBytes(byte[] b, int offset, int length)\r\n        {\r\n            CheckDisposed();\r\n\r\n            crc.Update(b, offset, length);\r\n            file.Write(b, offset, length);\r\n        }\r\n\r\n        public override void Flush()\r\n        {\r\n            CheckDisposed();\r\n            file.Flush();\r\n        }\r\n\r\n        protected override void Dispose(bool disposing)\r\n        {\r\n            if (!disposing) return;\r\n\r\n            //Method is empty\r\n            //parent.OnIndexOutputClosed(this);\r\n            if (!isOpen) return;\r\n\r\n            Exception priorE = null; \r\n            try\r\n            {\r\n                file.Flush(flushToDisk: false);\r\n            }\r\n            catch (Exception ioe) when (ioe is IOException or UnauthorizedAccessException or ObjectDisposedException)\r\n            {\r\n                priorE = ioe;\r\n            }\r\n            finally\r\n            {\r\n                isOpen = false;\r\n                IOUtils.DisposeWhileHandlingException(priorE, file);\r\n            }\r\n        }\r\n\r\n        public override void Seek(long pos)\r\n        {\r\n            CheckDisposed();\r\n\r\n            file.Seek(pos, SeekOrigin.Begin);\r\n        }\r\n\r\n        private void CheckDisposed()\r\n        {\r\n            if (!isOpen)\r\n                throw new ObjectDisposedException(\"\");\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nBut you take on some of the responsibility instead of leaving it to the core library, you also need to accept that your leaving the code more open to failure, so if your index is your only storage then perhaps it's best not to do so, even though a error here would be considered very rare. But as a short term fix that should do.\r\n\r\nHowever that does not really change the behavior as @AddictedCS requests, and since we don't really want to diverge to much from the java source, that is a bit more problematic. I did look into how \"easy/hard\" it might be to extend the index writer and maybe just override the GetReader part to avoid flushing, as it stands, that's a much more involved task unfortunately.\r\n","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/2018377853/reactions","total_count":3,"+1":3,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/2018531222","html_url":"https://github.com/apache/lucenenet/issues/933#issuecomment-2018531222","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/933","id":2018531222,"node_id":"IC_kwDOAAJ06c54UFeW","user":{"login":"paulirwin","id":1874103,"node_id":"MDQ6VXNlcjE4NzQxMDM=","avatar_url":"https://avatars.githubusercontent.com/u/1874103?v=4","gravatar_id":"","url":"https://api.github.com/users/paulirwin","html_url":"https://github.com/paulirwin","followers_url":"https://api.github.com/users/paulirwin/followers","following_url":"https://api.github.com/users/paulirwin/following{/other_user}","gists_url":"https://api.github.com/users/paulirwin/gists{/gist_id}","starred_url":"https://api.github.com/users/paulirwin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paulirwin/subscriptions","organizations_url":"https://api.github.com/users/paulirwin/orgs","repos_url":"https://api.github.com/users/paulirwin/repos","events_url":"https://api.github.com/users/paulirwin/events{/privacy}","received_events_url":"https://api.github.com/users/paulirwin/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-25T17:28:56Z","updated_at":"2024-03-25T17:28:56Z","author_association":"CONTRIBUTOR","body":"I created a reproduction of the original benchmark using jmh. Forgive my quick and dirty Java port 😄 Please review and let me know if I made any mistakes.\r\n\r\nMake a project using the jmh mvn archetype, replace the benchmark code with the code below, and add mvn dependencies as below\r\n\r\n```java\r\npackage org.example;\r\n\r\nimport org.apache.commons.io.FileUtils;\r\nimport org.apache.lucene.analysis.Analyzer;\r\nimport org.apache.lucene.analysis.standard.StandardAnalyzer;\r\nimport org.apache.lucene.document.Document;\r\nimport org.apache.lucene.document.Field;\r\nimport org.apache.lucene.document.StringField;\r\nimport org.apache.lucene.document.TextField;\r\nimport org.apache.lucene.facet.FacetField;\r\nimport org.apache.lucene.facet.FacetsConfig;\r\nimport org.apache.lucene.facet.taxonomy.SearcherTaxonomyManager;\r\nimport org.apache.lucene.facet.taxonomy.directory.DirectoryTaxonomyWriter;\r\nimport org.apache.lucene.index.IndexWriter;\r\nimport org.apache.lucene.index.IndexWriterConfig;\r\nimport org.apache.lucene.index.Term;\r\nimport org.apache.lucene.search.SearcherFactory;\r\nimport org.apache.lucene.store.Directory;\r\nimport org.apache.lucene.store.MMapDirectory;\r\nimport org.apache.lucene.util.Version;\r\nimport org.openjdk.jmh.annotations.*;\r\n\r\nimport java.io.File;\r\nimport java.io.IOException;\r\nimport java.nio.file.Files;\r\nimport java.nio.file.Paths;\r\nimport java.util.concurrent.ThreadLocalRandom;\r\n\r\n@State(Scope.Benchmark)\r\n@BenchmarkMode(Mode.AverageTime)\r\npublic class MyBenchmark {\r\n\r\n    private DirectoryTaxonomyWriter taxonomyWriter;\r\n    private IndexWriter indexWriter;\r\n    private Document[] documents;\r\n    private FacetsConfig facetsConfig;\r\n    private SearcherTaxonomyManager searcherManager;\r\n\r\n    @Setup\r\n    public void setup() {\r\n        if (Files.exists(Paths.get(\"test_index\"))) {\r\n            try {\r\n                FileUtils.deleteDirectory(new File(\"test_index\"));\r\n            } catch (IOException e) {\r\n                e.printStackTrace();\r\n            }\r\n        }\r\n\r\n        if (Files.exists(Paths.get(\"test_facets\"))) {\r\n            try {\r\n                FileUtils.deleteDirectory(new File(\"test_facets\"));\r\n            } catch (IOException e) {\r\n                e.printStackTrace();\r\n            }\r\n        }\r\n\r\n        Analyzer analyzer = new StandardAnalyzer(Version.LUCENE_48);\r\n\r\n        try {\r\n            Directory luceneDirectory = new MMapDirectory(new File(\"test_index\"));\r\n            indexWriter = new IndexWriter(luceneDirectory, new IndexWriterConfig(Version.LUCENE_48, analyzer));\r\n            taxonomyWriter = new DirectoryTaxonomyWriter(new MMapDirectory(new File(\"test_facets\")));\r\n            searcherManager = new SearcherTaxonomyManager(indexWriter, true, new SearcherFactory(), taxonomyWriter);\r\n        } catch (IOException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n\r\n        facetsConfig = new FacetsConfig();\r\n        facetsConfig.setRequireDimCount(\"track_id\", true);\r\n\r\n        documents = new Document[N];\r\n        for (int i = 0; i < N; i++)\r\n        {\r\n            String facet = generateRandomString(5);\r\n            documents[i] = new Document();\r\n            documents[i].add(new StringField(\"_id\", Integer.toString(i), Field.Store.YES));\r\n            documents[i].add(new TextField(\"content\", generateRandomString(10), Field.Store.YES));\r\n            documents[i].add(new FacetField(\"track_id\", facet));\r\n        }\r\n    }\r\n\r\n    @Param({\"25\"})\r\n    public int N;\r\n\r\n    @Benchmark\r\n    public void indexDocumentsBenchmark() {\r\n        for (int i = 0; i < documents.length; ++i)\r\n        {\r\n            try {\r\n                Document taxonomyDocument = facetsConfig.build(taxonomyWriter, documents[i]);\r\n                indexWriter.updateDocument(new Term(\"_id\", Integer.toString(i)), taxonomyDocument);\r\n                searcherManager.maybeRefresh(); // maybe refresh causing dramatic performance drop on .NET 8.0\r\n            } catch (IOException e) {\r\n                throw new RuntimeException(e);\r\n            }\r\n        }\r\n    }\r\n\r\n    private static String generateRandomString(int length)\r\n    {\r\n        // more spaces added on purpose\r\n        final String chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789         \";\r\n        char[] stringChars = new char[length];\r\n\r\n        for (int i = 0; i < length; i++)\r\n        {\r\n            stringChars[i] = chars.charAt(ThreadLocalRandom.current().nextInt(chars.length()));\r\n        }\r\n\r\n        return new String(stringChars);\r\n    }\r\n}\r\n\r\n```\r\n\r\nadditional mvn deps:\r\n```xml\r\n<dependency>\r\n    <groupId>org.apache.lucene</groupId>\r\n    <artifactId>lucene-core</artifactId>\r\n    <version>4.8.0</version>\r\n</dependency>\r\n<dependency>\r\n    <groupId>org.apache.lucene</groupId>\r\n    <artifactId>lucene-facet</artifactId>\r\n    <version>4.8.0</version>\r\n</dependency>\r\n<dependency>\r\n    <groupId>org.apache.lucene</groupId>\r\n    <artifactId>lucene-analyzers-common</artifactId>\r\n    <version>4.8.0</version>\r\n</dependency>\r\n<dependency>\r\n    <groupId>commons-io</groupId>\r\n    <artifactId>commons-io</artifactId>\r\n    <version>2.15.1</version>\r\n</dependency>\r\n```\r\n\r\nI ran it against JDK 11, 17, and 21 via specifying a manual path to the JVM to run it on with the `-jvm` arg, i.e. `java -jar ./target/benchmarks.jar -jvm /opt/homebrew/Cellar/openjdk/21.0.2/bin/java`\r\n\r\nJava 21:\r\n```\r\nBenchmark                            (N)  Mode  Cnt  Score   Error  Units\r\nMyBenchmark.indexDocumentsBenchmark   25  avgt   25  0.068 ± 0.004   s/op\r\n```\r\n\r\nJava 17:\r\n```\r\nBenchmark                            (N)  Mode  Cnt  Score   Error  Units\r\nMyBenchmark.indexDocumentsBenchmark   25  avgt   25  0.062 ± 0.002   s/op\r\n```\r\n\r\nJava 11:\r\n```\r\nBenchmark                            (N)  Mode  Cnt  Score   Error  Units\r\nMyBenchmark.indexDocumentsBenchmark   25  avgt   25  0.061 ± 0.001   s/op\r\n```\r\n\r\nThe results on the order of ~60-70ms (see [my N=25 results above from master](https://github.com/apache/lucenenet/issues/933#issuecomment-2016528219)), with no significant difference between Java versions, imply to me that Java behaves similarly to .NET <= 7, so we should consider a core library fix for this that is lucenenet specific. Unless I've done something wrong above...","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/2018531222/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/2018685967","html_url":"https://github.com/apache/lucenenet/issues/911#issuecomment-2018685967","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/911","id":2018685967,"node_id":"IC_kwDOAAJ06c54UrQP","user":{"login":"paulirwin","id":1874103,"node_id":"MDQ6VXNlcjE4NzQxMDM=","avatar_url":"https://avatars.githubusercontent.com/u/1874103?v=4","gravatar_id":"","url":"https://api.github.com/users/paulirwin","html_url":"https://github.com/paulirwin","followers_url":"https://api.github.com/users/paulirwin/followers","following_url":"https://api.github.com/users/paulirwin/following{/other_user}","gists_url":"https://api.github.com/users/paulirwin/gists{/gist_id}","starred_url":"https://api.github.com/users/paulirwin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paulirwin/subscriptions","organizations_url":"https://api.github.com/users/paulirwin/orgs","repos_url":"https://api.github.com/users/paulirwin/repos","events_url":"https://api.github.com/users/paulirwin/events{/privacy}","received_events_url":"https://api.github.com/users/paulirwin/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-25T18:53:35Z","updated_at":"2024-03-25T18:53:35Z","author_association":"CONTRIBUTOR","body":"When I try to run the docs.ps1 script on macOS arm64, I get the following error after the \"Building api metadata for...\" lines:\r\n\r\n```\r\nBuilding api metadata for /{path_to}/lucene.net/websites/apidocs/docfx.demo.json...\r\nBuilding site output for /{path_to}/lucene.net/websites/apidocs/docfx.codecs.json...\r\nGet-Content: /{path_to}/lucene.net/websites/apidocs/docs.ps1:222\r\nLine |\r\n 222 |          $xrefMap = Get-Content $xrefFile -Raw\r\n     |                     ~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n     | Cannot find path '/{path_to}/lucene.net/websites/apidocs/_site/api/codecs/xrefmap.yml' because it does\r\n     | not exist.\r\n```","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/2018685967/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/2018691127","html_url":"https://github.com/apache/lucenenet/issues/933#issuecomment-2018691127","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/933","id":2018691127,"node_id":"IC_kwDOAAJ06c54Usg3","user":{"login":"AddictedCS","id":1202115,"node_id":"MDQ6VXNlcjEyMDIxMTU=","avatar_url":"https://avatars.githubusercontent.com/u/1202115?v=4","gravatar_id":"","url":"https://api.github.com/users/AddictedCS","html_url":"https://github.com/AddictedCS","followers_url":"https://api.github.com/users/AddictedCS/followers","following_url":"https://api.github.com/users/AddictedCS/following{/other_user}","gists_url":"https://api.github.com/users/AddictedCS/gists{/gist_id}","starred_url":"https://api.github.com/users/AddictedCS/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/AddictedCS/subscriptions","organizations_url":"https://api.github.com/users/AddictedCS/orgs","repos_url":"https://api.github.com/users/AddictedCS/repos","events_url":"https://api.github.com/users/AddictedCS/events{/privacy}","received_events_url":"https://api.github.com/users/AddictedCS/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-25T18:56:37Z","updated_at":"2024-03-25T18:56:37Z","author_association":"NONE","body":"Changing to `file.Flush(flushToDisk: false);` may not be such a bad idea after all. I understand the implications (no ACID guarantees), but up until .NET 8 they weren't either. \r\n\r\nJust to add as an example, the vast majority of developers use the Dispose method to ensure the stream is closed and flushed, and by default, `Dispose` uses `Flush(false)`.\r\n\r\nHere is an example of the modified benchmark (I've removed the `Flush(true)`, method leaving the responsibility to close and flush the stream to `Dispose` method:\r\n\r\n```csharp\r\n    private static int WriteData(byte[] buffer, int bufferSize)\r\n    {\r\n        using var stream = \r\n            new FileStream(\r\n                path: Path.Combine(\"test_dir\", $\"test.{buffer.Length}.bin\"),\r\n                mode: FileMode.OpenOrCreate,\r\n                access: FileAccess.Write,\r\n                share: FileShare.ReadWrite,\r\n                bufferSize: bufferSize);\r\n        stream.Write(buffer, 0, buffer.Length);\r\n        // stream.Flush(flushToDisk: true);\r\n        return buffer.Length;\r\n    }\r\n```\r\nThe results are so much faster now, both .NET 7 and 8 showing great performance.\r\n\r\n```\r\n\r\nBenchmarkDotNet v0.13.12, macOS Sonoma 14.4 (23E214) [Darwin 23.4.0]\r\nApple M2 Max, 1 CPU, 12 logical and 12 physical cores\r\n.NET SDK 8.0.203\r\n  [Host]   : .NET 8.0.3 (8.0.324.11423), Arm64 RyuJIT AdvSIMD\r\n  .NET 7.0 : .NET 7.0.5 (7.0.523.17405), Arm64 RyuJIT AdvSIMD\r\n  .NET 8.0 : .NET 8.0.3 (8.0.324.11423), Arm64 RyuJIT AdvSIMD\r\n\r\nServer=True  \r\n\r\n| Method      | Job      | Runtime  | PayloadSize | BufferSize | Mean     | Error    | StdDev   | Median   | Ratio | RatioSD |\r\n|------------ |--------- |--------- |------------ |----------- |---------:|---------:|---------:|---------:|------:|--------:|\r\n| WriteStream | .NET 7.0 | .NET 7.0 | 512         | 1024       | 26.65 μs | 0.506 μs | 0.449 μs | 26.53 μs |  1.00 |    0.00 |\r\n| WriteStream | .NET 8.0 | .NET 8.0 | 512         | 1024       | 27.52 μs | 0.545 μs | 1.407 μs | 26.86 μs |  1.06 |    0.08 |\r\n|             |          |          |             |            |          |          |          |          |       |         |\r\n| WriteStream | .NET 7.0 | .NET 7.0 | 512         | 4096       | 27.55 μs | 0.466 μs | 0.389 μs | 27.48 μs |  1.00 |    0.00 |\r\n| WriteStream | .NET 8.0 | .NET 8.0 | 512         | 4096       | 26.86 μs | 0.454 μs | 0.486 μs | 26.83 μs |  0.97 |    0.02 |\r\n|             |          |          |             |            |          |          |          |          |       |         |\r\n| WriteStream | .NET 7.0 | .NET 7.0 | 1024        | 1024       | 26.10 μs | 0.500 μs | 0.513 μs | 26.28 μs |  1.00 |    0.00 |\r\n| WriteStream | .NET 8.0 | .NET 8.0 | 1024        | 1024       | 25.85 μs | 0.511 μs | 1.121 μs | 26.00 μs |  0.96 |    0.07 |\r\n|             |          |          |             |            |          |          |          |          |       |         |\r\n| WriteStream | .NET 7.0 | .NET 7.0 | 1024        | 4096       | 27.15 μs | 0.461 μs | 0.616 μs | 27.03 μs |  1.00 |    0.00 |\r\n| WriteStream | .NET 8.0 | .NET 8.0 | 1024        | 4096       | 26.87 μs | 0.425 μs | 0.355 μs | 26.89 μs |  0.99 |    0.04 |\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/2018691127/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/2018705584","html_url":"https://github.com/apache/lucenenet/issues/933#issuecomment-2018705584","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/933","id":2018705584,"node_id":"IC_kwDOAAJ06c54UwCw","user":{"login":"paulirwin","id":1874103,"node_id":"MDQ6VXNlcjE4NzQxMDM=","avatar_url":"https://avatars.githubusercontent.com/u/1874103?v=4","gravatar_id":"","url":"https://api.github.com/users/paulirwin","html_url":"https://github.com/paulirwin","followers_url":"https://api.github.com/users/paulirwin/followers","following_url":"https://api.github.com/users/paulirwin/following{/other_user}","gists_url":"https://api.github.com/users/paulirwin/gists{/gist_id}","starred_url":"https://api.github.com/users/paulirwin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paulirwin/subscriptions","organizations_url":"https://api.github.com/users/paulirwin/orgs","repos_url":"https://api.github.com/users/paulirwin/repos","events_url":"https://api.github.com/users/paulirwin/events{/privacy}","received_events_url":"https://api.github.com/users/paulirwin/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-25T19:03:30Z","updated_at":"2024-03-25T19:03:30Z","author_association":"CONTRIBUTOR","body":"I think I agree with that. If this is supposed to semantically represent a soft commit, I don't think we should have to do a hard flush to disk.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/2018705584/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/2018773920","html_url":"https://github.com/apache/lucenenet/issues/933#issuecomment-2018773920","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/933","id":2018773920,"node_id":"IC_kwDOAAJ06c54VAug","user":{"login":"paulirwin","id":1874103,"node_id":"MDQ6VXNlcjE4NzQxMDM=","avatar_url":"https://avatars.githubusercontent.com/u/1874103?v=4","gravatar_id":"","url":"https://api.github.com/users/paulirwin","html_url":"https://github.com/paulirwin","followers_url":"https://api.github.com/users/paulirwin/followers","following_url":"https://api.github.com/users/paulirwin/following{/other_user}","gists_url":"https://api.github.com/users/paulirwin/gists{/gist_id}","starred_url":"https://api.github.com/users/paulirwin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paulirwin/subscriptions","organizations_url":"https://api.github.com/users/paulirwin/orgs","repos_url":"https://api.github.com/users/paulirwin/repos","events_url":"https://api.github.com/users/paulirwin/events{/privacy}","received_events_url":"https://api.github.com/users/paulirwin/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-25T19:41:00Z","updated_at":"2024-03-25T19:41:00Z","author_association":"CONTRIBUTOR","body":"Looks like we could add back the `Fsync` method as part of this change, if we were to do it: https://github.com/apache/lucenenet/blob/444e6d09ae2451988ff8fcb1d54a00d6a204fd6a/src/Lucene.Net/Store/FSDirectory.cs#L589-L595\r\n\r\nInterestingly, the blame shows the most recent commit of that block to be a revert of a revert of a commit 😄 cc @NightOwl888 \r\n\r\nAlso note this from the Java Lucene 4.8.0 release notes:\r\n```\r\n* LUCENE-5588: Lucene now calls fsync() on the index directory, ensuring\r\n  that all file metadata is persisted on disk in case of power failure.\r\n  This does not work on all file systems and operating systems, but Linux\r\n  and MacOSX are known to work. On Windows, fsyncing a directory is not\r\n  possible with Java APIs.  (Mike McCandless, Uwe Schindler)\r\n```\r\n\r\nI'm going to reopen this issue until we come up with a solution. My instinct is to support `Flush(false)` and add back the `Fsync` method, but I'm not an expert in this area and I don't fully understand the revert/revert history here yet. I'd like Shad's input for sure.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/2018773920/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/2019860802","html_url":"https://github.com/apache/lucenenet/issues/933#issuecomment-2019860802","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/933","id":2019860802,"node_id":"IC_kwDOAAJ06c54ZKFC","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-26T08:57:08Z","updated_at":"2024-03-26T08:57:08Z","author_association":"CONTRIBUTOR","body":"@paulirwin - I agree. If it is possible to mimic an fsync in .NET, we should also do that. This may be the root cause of #894.\r\n\r\nAs for the history, this goes back to this conversation: https://lists.apache.org/list?dev@lucenenet.apache.org:2017-1 and anything from Vincent after that point. He helped pull what we had in the Store namespace together and make it more stable and efficient. It was around this time when we nix'd fsync, but at that point .NET Core support was still in the works and we had no way to test on anything but Windows. So, the benefit of supporting fsync seems more clear now. Whether providing fsync is feasible in .NET is another question. We had to drastically alter the way file locking works in order to provide support in .NET and I am not sure whether that is also relevant to this conversation.\r\n\r\nI haven't gone over the benchmarks in detail, but adding the `FileOptions` also sounds like a good idea provided it is tested thoroughly. Not sure whether `FileOptions.Asynchronous` is going to shoot us in the foot. Also, we would need to review to make sure that the same options make sense for all callers. If not, we may need to consider a way to change the options on the public or internal APIs.\r\n\r\nBased on the LUCENE-5588 comment, it also seems that supporting that JRE crash test (ACID) on Windows is probably not possible. It would probably be worth a try to disable that test on Windows (and remove the `[AwaitsFix]` attribute) to see whether it always succeeds on Linux and macOS. It would have to be tested dozens of times to be sure though - it rarely fails.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/2019860802/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/2019919918","html_url":"https://github.com/apache/lucenenet/issues/933#issuecomment-2019919918","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/933","id":2019919918,"node_id":"IC_kwDOAAJ06c54ZYgu","user":{"login":"AddictedCS","id":1202115,"node_id":"MDQ6VXNlcjEyMDIxMTU=","avatar_url":"https://avatars.githubusercontent.com/u/1202115?v=4","gravatar_id":"","url":"https://api.github.com/users/AddictedCS","html_url":"https://github.com/AddictedCS","followers_url":"https://api.github.com/users/AddictedCS/followers","following_url":"https://api.github.com/users/AddictedCS/following{/other_user}","gists_url":"https://api.github.com/users/AddictedCS/gists{/gist_id}","starred_url":"https://api.github.com/users/AddictedCS/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/AddictedCS/subscriptions","organizations_url":"https://api.github.com/users/AddictedCS/orgs","repos_url":"https://api.github.com/users/AddictedCS/repos","events_url":"https://api.github.com/users/AddictedCS/events{/privacy}","received_events_url":"https://api.github.com/users/AddictedCS/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-26T09:25:20Z","updated_at":"2024-03-26T09:25:20Z","author_association":"NONE","body":"I just wanted to add that `CustomMMapDirectory` fixes the issue. Below are the results from the original Benchmark with `CustomMMapDirectory` instead of `MMapDirectory`.\r\n\r\n```\r\nBenchmarkDotNet v0.13.12, macOS Sonoma 14.4.1 (23E224) [Darwin 23.4.0]\r\nApple M2 Max, 1 CPU, 12 logical and 12 physical cores\r\n.NET SDK 8.0.203\r\n  [Host]   : .NET 8.0.3 (8.0.324.11423), Arm64 RyuJIT AdvSIMD\r\n  .NET 7.0 : .NET 7.0.5 (7.0.523.17405), Arm64 RyuJIT AdvSIMD\r\n  .NET 8.0 : .NET 8.0.3 (8.0.324.11423), Arm64 RyuJIT AdvSIMD\r\n\r\nServer=True  \r\n\r\n| Method                  | Job      | Runtime  | N  | Mean     | Error    | StdDev   | Ratio | RatioSD |\r\n|------------------------ |--------- |--------- |--- |---------:|---------:|---------:|------:|--------:|\r\n| IndexDocumentsBenchmark | .NET 7.0 | .NET 7.0 | 25 | 61.97 ms | 1.220 ms | 2.039 ms |  1.00 |    0.00 |\r\n| IndexDocumentsBenchmark | .NET 8.0 | .NET 8.0 | 25 | 60.47 ms | 1.208 ms | 3.183 ms |  0.98 |    0.06 |\r\n\r\n```\r\n\r\nThanks, @jeme, for the example!\r\n","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/2019919918/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":1,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/2019939214","html_url":"https://github.com/apache/lucenenet/issues/933#issuecomment-2019939214","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/933","id":2019939214,"node_id":"IC_kwDOAAJ06c54ZdOO","user":{"login":"jeme","id":1609615,"node_id":"MDQ6VXNlcjE2MDk2MTU=","avatar_url":"https://avatars.githubusercontent.com/u/1609615?v=4","gravatar_id":"","url":"https://api.github.com/users/jeme","html_url":"https://github.com/jeme","followers_url":"https://api.github.com/users/jeme/followers","following_url":"https://api.github.com/users/jeme/following{/other_user}","gists_url":"https://api.github.com/users/jeme/gists{/gist_id}","starred_url":"https://api.github.com/users/jeme/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jeme/subscriptions","organizations_url":"https://api.github.com/users/jeme/orgs","repos_url":"https://api.github.com/users/jeme/repos","events_url":"https://api.github.com/users/jeme/events{/privacy}","received_events_url":"https://api.github.com/users/jeme/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-26T09:35:22Z","updated_at":"2024-03-26T09:44:10Z","author_association":"CONTRIBUTOR","body":"just dropping this here as it may be worth knowing https://ayende.com/blog/164673/the-difference-between-fsync-write-through-through-the-os-eyes\r\nAyende, being one who wrote large parts of a database (RavenDB) which AFAIK actually uses a branched of version of Lucene.NET (with a different storage layer, Voron) i guess it's worth taking into account.\r\n\r\nWhat bugs me out a little is that I thought the whole idea with introducing getting the reader from the IndexWriter was to enable NRT where updates would be able to be made available prior to a commit, I implicitly assumed that they also wasn't necessarily flushed to storage (disk), specifically to speed things up, but that is clearly not the case (when we look at the Java source), so that seems like a huge thing to leave on the table.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/2019939214/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/2028801644","html_url":"https://github.com/apache/lucenenet/pull/926#issuecomment-2028801644","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/926","id":2028801644,"node_id":"IC_kwDOAAJ06c547Q5s","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-31T15:42:56Z","updated_at":"2024-03-31T15:42:56Z","author_association":"CONTRIBUTOR","body":"I setup a new repository with our Azure DevOps templates and discovered that there are some breaking changes.\r\n\r\n### Breaking Change 1\r\n\r\nThere is a breaking change introduced by Microsoft in the .NET 8 SDK, which appends the Git commit hash to the `AssemblyInformationalVersion`: https://github.com/dotnet/sdk/issues/34568. We already add a shortened Git commit hash, so this will add it twice. The fix should definitely be in this PR, since this is where we introduce building with the .NET 8 SDK.\r\n\r\nMore info about it is here: https://learn.microsoft.com/en-us/dotnet/core/compatibility/sdk/8.0/source-link. I have tested the solution and it seems to meet our needs. However, the first build after I changed it caused the NuGet packages to be built without any DLLs in them, but the second build succeeded. Not sure whether that was a fluke or a problem.\r\n\r\nWe can put the fix in the default `Directory.Build.targets` file of the solution (in each repository):\r\n\r\n```xml\r\n  <PropertyGroup Label=\"Versioning\">\r\n    <GenerateAssemblyVersionInfo>false</GenerateAssemblyVersionInfo>\r\n  </PropertyGroup>\r\n```\r\n\r\n### Breaking Change 2\r\n\r\nThe default for a new pipeline in Azure DevOps is to create a shallow clone. Previously, it would create a deep clone by default.\r\n\r\nThis doesn't break anything on Lucene.Net, but all of the other repositories that we own use NerdBank.GitVersioning, and this is a problem for generating the correct version number. There is an issue about it here: https://github.com/dotnet/Nerdbank.GitVersioning/issues/837 and the fix is here: https://github.com/dotnet/Nerdbank.GitVersioning/blob/main/doc/cloudbuild.md#azure-pipelines\r\n\r\nWe would need to apply that on the \"Build\" job of all of our repositories. On Lucene.NET, it is already done this way for performance reasons.\r\n\r\n### Our Other Repositories\r\n\r\nThis is a list of all of the repositories that use the same Azure DevOps (and command line build) templates that will need to be patched to account for this.\r\n\r\n- [J2N](https://github.com/NightOwl888/J2N)\r\n- [ICU4N](https://github.com/NightOwl888/ICU4N)\r\n- [RandomizedTesting](https://github.com/NightOwl888/RandomizedTesting)\r\n- [Spatial4n](https://github.com/Spatial4n/Spatial4n)\r\n- [Morfologik.Stemming](https://github.com/NightOwl888/Morfologik.Stemming)\r\n- [NetFx.Polyfills](https://github.com/NightOwl888/NetFx.Polyfills) (fixes already applied)\r\n\r\nWhile we could just fix the issue in this PR and add 2 issues to each of the other repositories, I think it might be simpler just to submit a PR to each repository with the patches and a link back to this PR.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/2028801644/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/2029793825","html_url":"https://github.com/apache/lucenenet/pull/926#issuecomment-2029793825","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/926","id":2029793825,"node_id":"IC_kwDOAAJ06c54_DIh","user":{"login":"paulirwin","id":1874103,"node_id":"MDQ6VXNlcjE4NzQxMDM=","avatar_url":"https://avatars.githubusercontent.com/u/1874103?v=4","gravatar_id":"","url":"https://api.github.com/users/paulirwin","html_url":"https://github.com/paulirwin","followers_url":"https://api.github.com/users/paulirwin/followers","following_url":"https://api.github.com/users/paulirwin/following{/other_user}","gists_url":"https://api.github.com/users/paulirwin/gists{/gist_id}","starred_url":"https://api.github.com/users/paulirwin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paulirwin/subscriptions","organizations_url":"https://api.github.com/users/paulirwin/orgs","repos_url":"https://api.github.com/users/paulirwin/repos","events_url":"https://api.github.com/users/paulirwin/events{/privacy}","received_events_url":"https://api.github.com/users/paulirwin/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-04-01T13:52:38Z","updated_at":"2024-04-01T13:52:38Z","author_association":"CONTRIBUTOR","body":"@NightOwl888 Thanks for the info and research! I think your comment was intended for PR #930 though?","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/2029793825/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/2031031458","html_url":"https://github.com/apache/lucenenet/pull/926#issuecomment-2031031458","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/926","id":2031031458,"node_id":"IC_kwDOAAJ06c55DxSi","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-04-02T04:03:18Z","updated_at":"2024-04-02T04:03:18Z","author_association":"CONTRIBUTOR","body":"> @NightOwl888 Thanks for the info and research! I think your comment was intended for PR #930 though?\r\n\r\n@paulirwin - You are absolutely right. I goofed. I will re-post over there. Also, I realized I missed one.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/2031031458/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/2031124211","html_url":"https://github.com/apache/lucenenet/pull/930#issuecomment-2031124211","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/930","id":2031124211,"node_id":"IC_kwDOAAJ06c55EH7z","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-04-02T05:44:34Z","updated_at":"2024-04-12T05:56:13Z","author_association":"CONTRIBUTOR","body":"I setup a new repository with our Azure DevOps templates and discovered that there are some breaking changes.\r\n\r\n### Breaking Change 1\r\n\r\nThere is a breaking change introduced by Microsoft in the .NET 8 SDK, which appends the Git commit hash to the `AssemblyInformationalVersion`: https://github.com/dotnet/sdk/issues/34568. We already add a shortened Git commit hash, so this will add it twice. The fix should definitely be in this PR, since this is where we introduce building with the .NET 8 SDK.\r\n\r\nMore info about it is here: https://learn.microsoft.com/en-us/dotnet/core/compatibility/sdk/8.0/source-link. I have tested the solution and it seems to meet our needs. However, the first build after I changed it caused the NuGet packages to be built without any DLLs in them, but the second build succeeded. Not sure whether that was a fluke or a problem.\r\n\r\nWe can put the fix in the default `Directory.Build.targets` file of the solution (in each repository):\r\n\r\n```xml\r\n  <PropertyGroup Label=\"Versioning\">\r\n    <IncludeSourceRevisionInInformationalVersion>false</IncludeSourceRevisionInInformationalVersion>\r\n  </PropertyGroup>\r\n```\r\n\r\n### Breaking Change 2\r\n\r\nThe default for a new pipeline in Azure DevOps is to create a shallow clone. Previously, it would create a deep clone by default.\r\n\r\nThis doesn't break anything on Lucene.Net, but all of the other repositories that we own use NerdBank.GitVersioning, and this is a problem for generating the correct version number. There is an issue about it here: https://github.com/dotnet/Nerdbank.GitVersioning/issues/837 and the fix is here: https://github.com/dotnet/Nerdbank.GitVersioning/blob/main/doc/cloudbuild.md#azure-pipelines\r\n\r\nWe would need to apply that on the \"Build\" job of all of our repositories. On Lucene.NET, it is already done this way for performance reasons.\r\n\r\n### Breaking Change 3\r\n\r\nWe do a solution-wide publish for the tests on Azure DevOps. This puts all of the DLL files into a single directory as they would be in the real world. So, doing it this way can detect issues with version conflicts between dependencies (in particular, transitive dependencies of libraries that we depend upon). The failure will happen in our test environment rather than waiting for a user to eventually depend on 2 of our packages with conflicting dependency versions.\r\n\r\nUnfortunately, Microsoft realized that solution-wide publish to a shared directory will cause \"inconsistent builds\" and made it fail if you provide the `--output` parameter when publishing on a solution. Here is where I found a solution that works: https://stackoverflow.com/a/75556105 on .NET Framework 4.5 and lower.\r\n\r\nHowever, it is a bit more nuanced than that. [`net451` fixed the automation of assembly binding redirects'](https://learn.microsoft.com/en-us/dotnet/framework/configure-apps/how-to-enable-and-disable-automatic-binding-redirection#disable-automatic-binding-redirects-in-desktop-apps). \r\n\r\nIn `build-pack-and-publish-libraries.yml`, we need to change:\r\n\r\n```powershell\r\ndotnet publish --output \"$outputPath\" --framework \"$framework\" --configuration \"$configuration\" --no-build --no-restore --verbosity normal /p:TestAllTargetFrameworks=true\r\n```\r\nFor solutions still supporting older versions of .NET Framework, we will need to continue publishing to a single directory to find conflicts.\r\n\r\nWe should publish to separate directories for newer versions of .NET, so there will need to be some branching logic in those solutions. Since we use the same templates, we should just bake this logic in even if the current repo doesn't need it.\r\n\r\nI think we may be able to use the new [simplified output path](https://devblogs.microsoft.com/dotnet/announcing-dotnet-8-preview-3/#simplified-output-path) feature of .NET 8 mentioned [here](https://github.com/dotnet/msbuild/issues/3497#issuecomment-1560451928) for .NET Framework 4.5.1 and higher.\r\n\r\nFor .NET Framework 4.5 and lower, use:\r\n\r\n```powershell\r\ndotnet publish --framework \"$framework\" --configuration \"$configuration\" --no-build --no-restore --verbosity normal /p:\"PublishDir=$outputPath\" /p:TestAllTargetFrameworks=true\r\n```\r\n\r\nI haven't gone into all of the nuance of this feature yet, though. We may consider folding our `_artifacts` directory into the new `.artifacts` directory of this feature. And we generally don't want it enabled except in our CI and command-line build scripts. Our tests search all subdirectories for the test DLL name pattern below directories with the name of the target framework:\r\n\r\n```powershell\r\n$testBinaries = Get-ChildItem -Path \"$testBinaryRootDirectory\" -File -Recurse | Where-Object {$_.FullName -match \"$framework\"} | Where-Object {$_.FullName -match \"$fileRegexPattern\"} | Select -ExpandProperty FullName\r\n```\r\n\r\nSo, we aren't tightly coupled to any particular directory structure. It just needs to be tested to confirm it can find test files with this new directory structure. It won't if the target framework is missing from the directory path, but based on their simple examples it isn't clear whether it will be there or not.\r\n\r\nPublish takes much longer going one project at a time, so we should continue publishing at the solution level, though.\r\n\r\n### Our Other Repositories\r\n\r\nThis is a list of all of the repositories that use the same Azure DevOps (and command line build) templates that will need to be patched to account for this.\r\n\r\n- [J2N](https://github.com/NightOwl888/J2N)\r\n- [ICU4N](https://github.com/NightOwl888/ICU4N)\r\n- [RandomizedTesting](https://github.com/NightOwl888/RandomizedTesting)\r\n- [Spatial4n](https://github.com/Spatial4n/Spatial4n)\r\n- [Morfologik.Stemming](https://github.com/NightOwl888/Morfologik.Stemming)\r\n- [NetFx.Polyfills](https://github.com/NightOwl888/NetFx.Polyfills) (fixes already applied)\r\n\r\nWhile we could just fix the issue in this PR and add 2 issues to each of the other repositories, I think it might be simpler just to submit a PR to each repository with the patches and a link back to this PR.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/2031124211/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/2039940326","html_url":"https://github.com/apache/lucenenet/issues/934#issuecomment-2039940326","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/934","id":2039940326,"node_id":"IC_kwDOAAJ06c55lwTm","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-04-05T14:25:27Z","updated_at":"2024-04-05T14:25:27Z","author_association":"CONTRIBUTOR","body":"Lucene.NET is covered under a compound license. There were several separately licensed components that were bundled in Lucene that were ported from Java and then we also added some separately licensed .NET software from 3rd parties. See the [additional licenses](https://github.com/apache/lucenenet/blob/444e6d09ae2451988ff8fcb1d54a00d6a204fd6a/LICENSE.txt#L206-L751) in the LICENSE.txt file.\r\n\r\nPer the [Apache License Policy](https://www.apache.org/legal/release-policy.html#licensing), we **must** bundle the license file with software distributions. That being said, I don't think that fact precludes us from using an [SPDX](https://spdx.org/licenses/) license expression, but it is going to cause us slightly more maintenance to update both the expression and the license file every time the licensing changes.\r\n\r\nPerhaps we need to ping infra/legal about this request because I am not sure whether bypassing the license attributions with an SPDX will violate the Apache License Policy. It is pretty specific about including the attributions in the license and AFAIK there is no way to include them in an SPDX.\r\n\r\nI suspect we could accommodate this request if:\r\n\r\n1. Someone works out the compound SPDX expression that we will need.\r\n2. Someone contributes documentation on how to keep the license file and SPDX expression in sync or provides some way that it could be automated (perhaps by embedding the expressions right into the LICENSE.txt file for the additional licenses so they can be combined appropriately and maintained in one place). Either way we should document the procedure because the components that we bundle changes from time to time and we will need to have a procedure to keep it updated.\r\n3. We continue to bundle the LICENSE.txt file in the NuGet packages as per the Apache License Policy.\r\n4. We comply with the Apache License Policy in every other way. We need to work with infra/legal to confirm we can even do this.\r\n\r\nThe SPDX expression for our packages will be quite long. Does that negate the benefit of having one? In the past, I have only used an SPDX for projects that are covered under a single license because I don't know the answer to that question.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/2039940326/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/2049267038","html_url":"https://github.com/apache/lucenenet/issues/933#issuecomment-2049267038","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/933","id":2049267038,"node_id":"IC_kwDOAAJ06c56JVVe","user":{"login":"turowicz","id":1055391,"node_id":"MDQ6VXNlcjEwNTUzOTE=","avatar_url":"https://avatars.githubusercontent.com/u/1055391?v=4","gravatar_id":"","url":"https://api.github.com/users/turowicz","html_url":"https://github.com/turowicz","followers_url":"https://api.github.com/users/turowicz/followers","following_url":"https://api.github.com/users/turowicz/following{/other_user}","gists_url":"https://api.github.com/users/turowicz/gists{/gist_id}","starred_url":"https://api.github.com/users/turowicz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/turowicz/subscriptions","organizations_url":"https://api.github.com/users/turowicz/orgs","repos_url":"https://api.github.com/users/turowicz/repos","events_url":"https://api.github.com/users/turowicz/events{/privacy}","received_events_url":"https://api.github.com/users/turowicz/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-04-11T09:15:09Z","updated_at":"2024-04-11T09:15:09Z","author_association":"NONE","body":"Any fixes coming out anytime soon?","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/2049267038/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/2049604707","html_url":"https://github.com/apache/lucenenet/issues/933#issuecomment-2049604707","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/933","id":2049604707,"node_id":"IC_kwDOAAJ06c56Knxj","user":{"login":"eladmarg","id":3823205,"node_id":"MDQ6VXNlcjM4MjMyMDU=","avatar_url":"https://avatars.githubusercontent.com/u/3823205?v=4","gravatar_id":"","url":"https://api.github.com/users/eladmarg","html_url":"https://github.com/eladmarg","followers_url":"https://api.github.com/users/eladmarg/followers","following_url":"https://api.github.com/users/eladmarg/following{/other_user}","gists_url":"https://api.github.com/users/eladmarg/gists{/gist_id}","starred_url":"https://api.github.com/users/eladmarg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eladmarg/subscriptions","organizations_url":"https://api.github.com/users/eladmarg/orgs","repos_url":"https://api.github.com/users/eladmarg/repos","events_url":"https://api.github.com/users/eladmarg/events{/privacy}","received_events_url":"https://api.github.com/users/eladmarg/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-04-11T12:38:46Z","updated_at":"2024-04-11T12:38:46Z","author_association":"CONTRIBUTOR","body":"this is probably by design and not Lucene specific issue.\r\nhowever, maybe @AddictedCS - if possible, maybe we can add the CustomMMapDirectory to a contrib folder\r\n\r\n@NightOwl888 what do you think?","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/2049604707/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/2077354706","html_url":"https://github.com/apache/lucenenet/issues/935#issuecomment-2077354706","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/935","id":2077354706,"node_id":"IC_kwDOAAJ06c570erS","user":{"login":"paulirwin","id":1874103,"node_id":"MDQ6VXNlcjE4NzQxMDM=","avatar_url":"https://avatars.githubusercontent.com/u/1874103?v=4","gravatar_id":"","url":"https://api.github.com/users/paulirwin","html_url":"https://github.com/paulirwin","followers_url":"https://api.github.com/users/paulirwin/followers","following_url":"https://api.github.com/users/paulirwin/following{/other_user}","gists_url":"https://api.github.com/users/paulirwin/gists{/gist_id}","starred_url":"https://api.github.com/users/paulirwin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/paulirwin/subscriptions","organizations_url":"https://api.github.com/users/paulirwin/orgs","repos_url":"https://api.github.com/users/paulirwin/repos","events_url":"https://api.github.com/users/paulirwin/events{/privacy}","received_events_url":"https://api.github.com/users/paulirwin/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-04-25T14:33:13Z","updated_at":"2024-04-25T14:33:13Z","author_association":"CONTRIBUTOR","body":"I would say this is very much _not_ expected behavior. Having your benchmark code would be very helpful! Thanks for the report.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/2077354706/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/2077459668","html_url":"https://github.com/apache/lucenenet/issues/935#issuecomment-2077459668","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/935","id":2077459668,"node_id":"IC_kwDOAAJ06c5704TU","user":{"login":"eladmarg","id":3823205,"node_id":"MDQ6VXNlcjM4MjMyMDU=","avatar_url":"https://avatars.githubusercontent.com/u/3823205?v=4","gravatar_id":"","url":"https://api.github.com/users/eladmarg","html_url":"https://github.com/eladmarg","followers_url":"https://api.github.com/users/eladmarg/followers","following_url":"https://api.github.com/users/eladmarg/following{/other_user}","gists_url":"https://api.github.com/users/eladmarg/gists{/gist_id}","starred_url":"https://api.github.com/users/eladmarg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eladmarg/subscriptions","organizations_url":"https://api.github.com/users/eladmarg/orgs","repos_url":"https://api.github.com/users/eladmarg/repos","events_url":"https://api.github.com/users/eladmarg/events{/privacy}","received_events_url":"https://api.github.com/users/eladmarg/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-04-25T14:57:57Z","updated_at":"2024-04-25T14:57:57Z","author_association":"CONTRIBUTOR","body":"this sounds too much difference between java / c#.\r\ndo you add the documents and commit only in the end?\r\n\r\na test program would be great to analyze this.\r\nthanks\r\n","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/2077459668/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/2077574110","html_url":"https://github.com/apache/lucenenet/issues/935#issuecomment-2077574110","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/935","id":2077574110,"node_id":"IC_kwDOAAJ06c571UPe","user":{"login":"NightOwl888","id":1538288,"node_id":"MDQ6VXNlcjE1MzgyODg=","avatar_url":"https://avatars.githubusercontent.com/u/1538288?v=4","gravatar_id":"","url":"https://api.github.com/users/NightOwl888","html_url":"https://github.com/NightOwl888","followers_url":"https://api.github.com/users/NightOwl888/followers","following_url":"https://api.github.com/users/NightOwl888/following{/other_user}","gists_url":"https://api.github.com/users/NightOwl888/gists{/gist_id}","starred_url":"https://api.github.com/users/NightOwl888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NightOwl888/subscriptions","organizations_url":"https://api.github.com/users/NightOwl888/orgs","repos_url":"https://api.github.com/users/NightOwl888/repos","events_url":"https://api.github.com/users/NightOwl888/events{/privacy}","received_events_url":"https://api.github.com/users/NightOwl888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-04-25T15:26:34Z","updated_at":"2024-04-25T15:26:34Z","author_association":"CONTRIBUTOR","body":"Concurrent document writing support is currently broken due to a bug mentioned in https://github.com/apache/lucenenet/issues/886#issuecomment-1812835542. No objections if someone wants to contribute a solution to that issue, but this isn't considered a blocker for the Lucene.NET 4.8.0 release.","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/2077574110/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/2077804557","html_url":"https://github.com/apache/lucenenet/issues/793#issuecomment-2077804557","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/793","id":2077804557,"node_id":"IC_kwDOAAJ06c572MgN","user":{"login":"superkelvint","id":660957,"node_id":"MDQ6VXNlcjY2MDk1Nw==","avatar_url":"https://avatars.githubusercontent.com/u/660957?v=4","gravatar_id":"","url":"https://api.github.com/users/superkelvint","html_url":"https://github.com/superkelvint","followers_url":"https://api.github.com/users/superkelvint/followers","following_url":"https://api.github.com/users/superkelvint/following{/other_user}","gists_url":"https://api.github.com/users/superkelvint/gists{/gist_id}","starred_url":"https://api.github.com/users/superkelvint/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/superkelvint/subscriptions","organizations_url":"https://api.github.com/users/superkelvint/orgs","repos_url":"https://api.github.com/users/superkelvint/repos","events_url":"https://api.github.com/users/superkelvint/events{/privacy}","received_events_url":"https://api.github.com/users/superkelvint/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-04-25T17:31:03Z","updated_at":"2024-04-25T17:31:03Z","author_association":"NONE","body":"> Furthermore, the binary structure of the index does change from one version to the next, making them incompatible and making it literally impossible to bring many Lucene 9.x features back to Lucene.NET 4.x. We had this issue with back-porting the [analyzers-nori](https://github.com/apache/lucenenet/pull/645) package.\r\n> \r\n> We have 100% compatibility with creating an index in Lucene and opening it in Lucene.NET with the same version and plan to keep it that way going forward (and it worked once the other way around, but hasn't been tested in quite a while). The index isn't the only binary format that is also kept in sync between versions.\r\n\r\n@NightOwl888 I am a Lucene Java programmer myself and am happy to help in any efforts to maintain two-way compatibility between Lucene and Lucene.NET. ","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/2077804557/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":1,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/2077941827","html_url":"https://github.com/apache/lucenenet/issues/935#issuecomment-2077941827","issue_url":"https://api.github.com/repos/apache/lucenenet/issues/935","id":2077941827,"node_id":"IC_kwDOAAJ06c572uBD","user":{"login":"eladmarg","id":3823205,"node_id":"MDQ6VXNlcjM4MjMyMDU=","avatar_url":"https://avatars.githubusercontent.com/u/3823205?v=4","gravatar_id":"","url":"https://api.github.com/users/eladmarg","html_url":"https://github.com/eladmarg","followers_url":"https://api.github.com/users/eladmarg/followers","following_url":"https://api.github.com/users/eladmarg/following{/other_user}","gists_url":"https://api.github.com/users/eladmarg/gists{/gist_id}","starred_url":"https://api.github.com/users/eladmarg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eladmarg/subscriptions","organizations_url":"https://api.github.com/users/eladmarg/orgs","repos_url":"https://api.github.com/users/eladmarg/repos","events_url":"https://api.github.com/users/eladmarg/events{/privacy}","received_events_url":"https://api.github.com/users/eladmarg/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-04-25T18:42:17Z","updated_at":"2024-04-25T18:42:17Z","author_association":"CONTRIBUTOR","body":"@NightOwl888 I remember this was an old bug relevant only to older dotnet core.\r\nso if its not reproducible on the new dotnet, and only happen on versions that out of support anyway, maybe we shouldn't too","reactions":{"url":"https://api.github.com/repos/apache/lucenenet/issues/comments/2077941827/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]