[{"url":"https://api.github.com/repos/apache/tvm/issues/comments/460091980","html_url":"https://github.com/apache/tvm/pull/2531#issuecomment-460091980","issue_url":"https://api.github.com/repos/apache/tvm/issues/2531","id":460091980,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MDA5MTk4MA==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-03T21:49:18Z","updated_at":"2019-02-03T21:49:18Z","author_association":"MEMBER","body":"Thanks to @alexeyr @Anthony-Mai , this is now merged","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/460091980/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/460092988","html_url":"https://github.com/apache/tvm/issues/2551#issuecomment-460092988","issue_url":"https://api.github.com/repos/apache/tvm/issues/2551","id":460092988,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MDA5Mjk4OA==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-03T22:02:27Z","updated_at":"2019-02-03T22:02:27Z","author_association":"MEMBER","body":"#2557","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/460092988/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/460092996","html_url":"https://github.com/apache/tvm/issues/2540#issuecomment-460092996","issue_url":"https://api.github.com/repos/apache/tvm/issues/2540","id":460092996,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MDA5Mjk5Ng==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-03T22:02:36Z","updated_at":"2019-02-03T22:02:36Z","author_association":"MEMBER","body":"#2557","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/460092996/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/460093007","html_url":"https://github.com/apache/tvm/issues/2541#issuecomment-460093007","issue_url":"https://api.github.com/repos/apache/tvm/issues/2541","id":460093007,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MDA5MzAwNw==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-03T22:02:45Z","updated_at":"2019-02-03T22:02:45Z","author_association":"MEMBER","body":"#2557 ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/460093007/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/460093019","html_url":"https://github.com/apache/tvm/issues/2538#issuecomment-460093019","issue_url":"https://api.github.com/repos/apache/tvm/issues/2538","id":460093019,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MDA5MzAxOQ==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-03T22:02:55Z","updated_at":"2019-02-03T22:02:55Z","author_association":"MEMBER","body":"#2557 ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/460093019/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/460093033","html_url":"https://github.com/apache/tvm/issues/2555#issuecomment-460093033","issue_url":"https://api.github.com/repos/apache/tvm/issues/2555","id":460093033,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MDA5MzAzMw==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-03T22:03:07Z","updated_at":"2019-02-03T22:03:07Z","author_association":"MEMBER","body":"#2557 ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/460093033/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/460142266","html_url":"https://github.com/apache/tvm/pull/2559#issuecomment-460142266","issue_url":"https://api.github.com/repos/apache/tvm/issues/2559","id":460142266,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MDE0MjI2Ng==","user":{"login":"ehsanmok","id":6980212,"node_id":"MDQ6VXNlcjY5ODAyMTI=","avatar_url":"https://avatars.githubusercontent.com/u/6980212?v=4","gravatar_id":"","url":"https://api.github.com/users/ehsanmok","html_url":"https://github.com/ehsanmok","followers_url":"https://api.github.com/users/ehsanmok/followers","following_url":"https://api.github.com/users/ehsanmok/following{/other_user}","gists_url":"https://api.github.com/users/ehsanmok/gists{/gist_id}","starred_url":"https://api.github.com/users/ehsanmok/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ehsanmok/subscriptions","organizations_url":"https://api.github.com/users/ehsanmok/orgs","repos_url":"https://api.github.com/users/ehsanmok/repos","events_url":"https://api.github.com/users/ehsanmok/events{/privacy}","received_events_url":"https://api.github.com/users/ehsanmok/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-04T06:19:14Z","updated_at":"2019-02-04T06:20:53Z","author_association":"CONTRIBUTOR","body":"Thank you for testing out and making nice suggestions! any suggestions is more than welcome of course :)\r\nI agree! `GraphModule` and `GraphRuntime` are more typed and ergonomic and we should definitely have them. Glad you've mentioned them. For example, you can also see the java equivalent in [contrib](https://github.com/dmlc/tvm/tree/master/jvm/core/src/main/java/ml/dmlc/tvm/contrib). \r\n\r\nFyi @nhynes has been working on some more ergonomic and enhancements for `common` and few other things as part of his RFC that you linked to.\r\n\r\n> What other APIs would be good to wrap with types?\r\n\r\nSo far I've kept the compatibility with other frontends (python, java and golang) in mind, but that doesn't mean we can't add more. Off the top of my head, when [#2498](https://github.com/dmlc/tvm/pull/2498) is merged it could open up some good opportunities in Rust.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/460142266/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/460148822","html_url":"https://github.com/apache/tvm/pull/2559#issuecomment-460148822","issue_url":"https://api.github.com/repos/apache/tvm/issues/2559","id":460148822,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MDE0ODgyMg==","user":{"login":"nhynes","id":2353785,"node_id":"MDQ6VXNlcjIzNTM3ODU=","avatar_url":"https://avatars.githubusercontent.com/u/2353785?v=4","gravatar_id":"","url":"https://api.github.com/users/nhynes","html_url":"https://github.com/nhynes","followers_url":"https://api.github.com/users/nhynes/followers","following_url":"https://api.github.com/users/nhynes/following{/other_user}","gists_url":"https://api.github.com/users/nhynes/gists{/gist_id}","starred_url":"https://api.github.com/users/nhynes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nhynes/subscriptions","organizations_url":"https://api.github.com/users/nhynes/orgs","repos_url":"https://api.github.com/users/nhynes/repos","events_url":"https://api.github.com/users/nhynes/events{/privacy}","received_events_url":"https://api.github.com/users/nhynes/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-04T07:02:28Z","updated_at":"2019-02-04T07:08:38Z","author_association":"MEMBER","body":"Hey @kazimuth thanks a lot for the PR! This is really cool! It looks like you've made a lot of overlapping changes with my [branch which unifies `frontend` and `runtime`](https://github.com/nhynes/tvm/pull/4/files) (as per #2523). Would you mind if I asked you to postpone further work until I get that fully tested and merged? I'll prioritize it for this week. I can't stop you from contributing, but it will save us both a lot of work if we collaborated on the unified `tvm` crate (e.g., I [already (also) fixed the globals dict](https://github.com/nhynes/tvm/pull/4/files#diff-8e31becb859121f6397ff2eca51d9d41R24)). If it makes you more willing to wait, I'll apply the semantics of your commit to the updated branch! What do you think?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/460148822/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/460156517","html_url":"https://github.com/apache/tvm/pull/2559#issuecomment-460156517","issue_url":"https://api.github.com/repos/apache/tvm/issues/2559","id":460156517,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MDE1NjUxNw==","user":{"login":"nhynes","id":2353785,"node_id":"MDQ6VXNlcjIzNTM3ODU=","avatar_url":"https://avatars.githubusercontent.com/u/2353785?v=4","gravatar_id":"","url":"https://api.github.com/users/nhynes","html_url":"https://github.com/nhynes","followers_url":"https://api.github.com/users/nhynes/followers","following_url":"https://api.github.com/users/nhynes/following{/other_user}","gists_url":"https://api.github.com/users/nhynes/gists{/gist_id}","starred_url":"https://api.github.com/users/nhynes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nhynes/subscriptions","organizations_url":"https://api.github.com/users/nhynes/orgs","repos_url":"https://api.github.com/users/nhynes/repos","events_url":"https://api.github.com/users/nhynes/events{/privacy}","received_events_url":"https://api.github.com/users/nhynes/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-04T07:46:43Z","updated_at":"2019-02-04T07:46:43Z","author_association":"MEMBER","body":"also, rustfmt-on-save using [rust.vim](https://github.com/rust-lang/rust.vim) is 👌 ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/460156517/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/460161710","html_url":"https://github.com/apache/tvm/pull/2216#issuecomment-460161710","issue_url":"https://api.github.com/repos/apache/tvm/issues/2216","id":460161710,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MDE2MTcxMA==","user":{"login":"kazum","id":812126,"node_id":"MDQ6VXNlcjgxMjEyNg==","avatar_url":"https://avatars.githubusercontent.com/u/812126?v=4","gravatar_id":"","url":"https://api.github.com/users/kazum","html_url":"https://github.com/kazum","followers_url":"https://api.github.com/users/kazum/followers","following_url":"https://api.github.com/users/kazum/following{/other_user}","gists_url":"https://api.github.com/users/kazum/gists{/gist_id}","starred_url":"https://api.github.com/users/kazum/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kazum/subscriptions","organizations_url":"https://api.github.com/users/kazum/orgs","repos_url":"https://api.github.com/users/kazum/repos","events_url":"https://api.github.com/users/kazum/events{/privacy}","received_events_url":"https://api.github.com/users/kazum/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-04T08:13:09Z","updated_at":"2019-02-04T08:13:09Z","author_association":"CONTRIBUTOR","body":"@srkreddy1238 My previous comments are not addressed in the latest version.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/460161710/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/460170544","html_url":"https://github.com/apache/tvm/pull/2216#issuecomment-460170544","issue_url":"https://api.github.com/repos/apache/tvm/issues/2216","id":460170544,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MDE3MDU0NA==","user":{"login":"srkreddy1238","id":14215163,"node_id":"MDQ6VXNlcjE0MjE1MTYz","avatar_url":"https://avatars.githubusercontent.com/u/14215163?v=4","gravatar_id":"","url":"https://api.github.com/users/srkreddy1238","html_url":"https://github.com/srkreddy1238","followers_url":"https://api.github.com/users/srkreddy1238/followers","following_url":"https://api.github.com/users/srkreddy1238/following{/other_user}","gists_url":"https://api.github.com/users/srkreddy1238/gists{/gist_id}","starred_url":"https://api.github.com/users/srkreddy1238/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/srkreddy1238/subscriptions","organizations_url":"https://api.github.com/users/srkreddy1238/orgs","repos_url":"https://api.github.com/users/srkreddy1238/repos","events_url":"https://api.github.com/users/srkreddy1238/events{/privacy}","received_events_url":"https://api.github.com/users/srkreddy1238/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-04T08:50:22Z","updated_at":"2019-02-04T08:50:22Z","author_association":"CONTRIBUTOR","body":"@kazum handled now :)","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/460170544/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/460255710","html_url":"https://github.com/apache/tvm/pull/2559#issuecomment-460255710","issue_url":"https://api.github.com/repos/apache/tvm/issues/2559","id":460255710,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MDI1NTcxMA==","user":{"login":"kazimuth","id":555667,"node_id":"MDQ6VXNlcjU1NTY2Nw==","avatar_url":"https://avatars.githubusercontent.com/u/555667?v=4","gravatar_id":"","url":"https://api.github.com/users/kazimuth","html_url":"https://github.com/kazimuth","followers_url":"https://api.github.com/users/kazimuth/followers","following_url":"https://api.github.com/users/kazimuth/following{/other_user}","gists_url":"https://api.github.com/users/kazimuth/gists{/gist_id}","starred_url":"https://api.github.com/users/kazimuth/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kazimuth/subscriptions","organizations_url":"https://api.github.com/users/kazimuth/orgs","repos_url":"https://api.github.com/users/kazimuth/repos","events_url":"https://api.github.com/users/kazimuth/events{/privacy}","received_events_url":"https://api.github.com/users/kazimuth/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-04T13:49:06Z","updated_at":"2019-02-04T17:38:02Z","author_association":"CONTRIBUTOR","body":"Thanks for the advice @nhynes, I'll delay until you're done with that change -- didn't see your PR :) and no rush, I was just poking at things and figured I could chip in.\r\n\r\nAre you planning on unifying `frontend::Function` and `common::PackedFunc`? They seem to do the same thing","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/460255710/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/460351511","html_url":"https://github.com/apache/tvm/issues/2512#issuecomment-460351511","issue_url":"https://api.github.com/repos/apache/tvm/issues/2512","id":460351511,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MDM1MTUxMQ==","user":{"login":"zhiics","id":5145158,"node_id":"MDQ6VXNlcjUxNDUxNTg=","avatar_url":"https://avatars.githubusercontent.com/u/5145158?v=4","gravatar_id":"","url":"https://api.github.com/users/zhiics","html_url":"https://github.com/zhiics","followers_url":"https://api.github.com/users/zhiics/followers","following_url":"https://api.github.com/users/zhiics/following{/other_user}","gists_url":"https://api.github.com/users/zhiics/gists{/gist_id}","starred_url":"https://api.github.com/users/zhiics/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zhiics/subscriptions","organizations_url":"https://api.github.com/users/zhiics/orgs","repos_url":"https://api.github.com/users/zhiics/repos","events_url":"https://api.github.com/users/zhiics/events{/privacy}","received_events_url":"https://api.github.com/users/zhiics/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-04T18:09:23Z","updated_at":"2019-02-04T18:09:23Z","author_association":"MEMBER","body":"@tqchen @FrozenGene \r\n\r\nOne example for Module->Module opt could be:\r\n\r\n### Python Frontend\r\n```python\r\nclass MyModuleClass():\r\n   def __init__(self, state):\r\n        self.state = state\r\n\r\n    def analysis(self):\r\n        \"\"\"Analysis on the state.\"\"\"\r\n        # do module level analysis, i.e. inter-procedural analysis\r\n\r\n    def transform(node):\r\n        \"\"\"Perform optimization on node.\"\"\"\r\n       # do module level opts, like addition/removal of functions\r\n\r\ndef pass_function(state):\r\n    my_class = MyModuleClass(state)\r\n\r\n    def _transform(m):\r\n        return my_class.transform(m)\r\n\r\n    return _transform\r\n\r\nmodule_pass = ModulePass(\"module_pass\", 1, pass_function)\r\nmod = relay.Module(...)\r\nstate =PassState(mod)\r\nupdated_pass = module_pass.run(state)\r\n```\r\n\r\n### C++ Backend for Module-level opts.\r\n```\r\nModulePass::run(PassState* state) {\r\n    const auto& pass_st_node = (*state).operator->();\r\n    CHECK(pass_st_node != nullptr);\r\n    auto foreach = pass_func(*state);\r\n    Module updated_module = foreach(pass_st_node->mod);\r\n    CHECK(updated_module.defined());\r\n    // Update pass state\r\n    *state = PassStateNode::make(updated_module);\r\n}\r\n```\r\n\r\nFor function level pass, the Python frontend should be similar. For example, we sketch how to optimize relay.Function, but the c++ backend is a little different.\r\n### C++ Backend for Function-level opts.\r\n```\r\nModulePass::run(PassState* state) {\r\n    const auto& pass_st_node = (*state).operator->();\r\n    CHECK(pass_st_node != nullptr);\r\n    auto foreach = pass_func(*state);\r\n    // for each function in the module, we apply the same optimization rules defined in the python (i.e. a transformation in the pass_func) to each function in the module.\r\n    *state = PassStateNode::make(updated_module);\r\n}\r\n```\r\n\r\nFor Expr-level pass, to be honest, I am not very confident about if the way I am currently doing is sufficient. The `pass_func` also applies, but `transform` method focuses on an `Expr`. The pass state now takes a module built from an `Expr`. In the c++ backend, we take extract the module, find all functions in it, and them get the function body or each of them for optimization.\r\n\r\n- I think it's right that it is not mandatory to pass the state, but one question is if there is a convenient way to take the current module/translation unit from both sides?  I don't think we currently have such an interface. ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/460351511/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/460360344","html_url":"https://github.com/apache/tvm/issues/2547#issuecomment-460360344","issue_url":"https://api.github.com/repos/apache/tvm/issues/2547","id":460360344,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MDM2MDM0NA==","user":{"login":"icemelon","id":2696494,"node_id":"MDQ6VXNlcjI2OTY0OTQ=","avatar_url":"https://avatars.githubusercontent.com/u/2696494?v=4","gravatar_id":"","url":"https://api.github.com/users/icemelon","html_url":"https://github.com/icemelon","followers_url":"https://api.github.com/users/icemelon/followers","following_url":"https://api.github.com/users/icemelon/following{/other_user}","gists_url":"https://api.github.com/users/icemelon/gists{/gist_id}","starred_url":"https://api.github.com/users/icemelon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/icemelon/subscriptions","organizations_url":"https://api.github.com/users/icemelon/orgs","repos_url":"https://api.github.com/users/icemelon/repos","events_url":"https://api.github.com/users/icemelon/events{/privacy}","received_events_url":"https://api.github.com/users/icemelon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-04T18:34:56Z","updated_at":"2019-02-04T18:34:56Z","author_association":"MEMBER","body":"+1","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/460360344/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/460363552","html_url":"https://github.com/apache/tvm/issues/2512#issuecomment-460363552","issue_url":"https://api.github.com/repos/apache/tvm/issues/2512","id":460363552,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MDM2MzU1Mg==","user":{"login":"jroesch","id":696509,"node_id":"MDQ6VXNlcjY5NjUwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/696509?v=4","gravatar_id":"","url":"https://api.github.com/users/jroesch","html_url":"https://github.com/jroesch","followers_url":"https://api.github.com/users/jroesch/followers","following_url":"https://api.github.com/users/jroesch/following{/other_user}","gists_url":"https://api.github.com/users/jroesch/gists{/gist_id}","starred_url":"https://api.github.com/users/jroesch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jroesch/subscriptions","organizations_url":"https://api.github.com/users/jroesch/orgs","repos_url":"https://api.github.com/users/jroesch/repos","events_url":"https://api.github.com/users/jroesch/events{/privacy}","received_events_url":"https://api.github.com/users/jroesch/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-04T18:44:20Z","updated_at":"2019-02-04T18:44:20Z","author_association":"MEMBER","body":"@tqchen The pass state is not about preserving analysis results across passes but allowing the pass manager to instantiate the appropriate pass level state state and make it accessible to the pass. \r\n\r\nFor example we can no longer let passes optionally take a module it causes a suite of problems that I've had to solve in my current working branches. My proposal is we wrap this state in a structure for backwards compatibility issues. The current style of taking each piece of state as an argument is not very backwards compatible. Each time we add new state that is accessible by the module we must refactor each pass. \r\n\r\nFor example now that we have added error reporting, all passes should have access to the error reporter. This means the signature grows by an argument every time we change it, instead we can simply extend the PassState structure and all the code still compiles just fine. \r\n\r\nI believe the pass manager should be responsible for managing this state and correctly threading it between passes. For example I believe we should locate the error reporting/handling code in precisely one location (i.e the pass manager), currently this code will need to be duplicated in many places and introduces chances for bugs and inconsistencies.  \r\n\r\nI understand the goal of providing easy to apply passes, but most of the Expr -> Expr passes are a fiction. We need the full module at a minimum if we want to use Relay functions, cleanly report errors and so on. We need more state than is currently present to do these things. A simple example is trying to call infer_type on an expression containing a function call will never work unless the module is present. \r\n\r\nI personally believe that optional arguments is generally a bad pattern, especially in this domain, and and should be discouraged. None of the state is optional and supporting them not being present is a hack that makes code harder to write and maintain. \r\n\r\nThere is a tension between the user facing signature and the one that allows us to have a robust and useful pass manager.\r\n\r\nI think supporting a higher-level interface in Python is nice, but we should only expose one signature in C++ which requires all the state. We can provide a single wrapper which provides a Module -> Module interface, but internally we should take the pass state for the reasons I stated above. \r\n\r\n@FrozenGene the point of having pass meta data is so that users can tell the pass manager how to run their pass. Instead of manually crafting O2, O3, etc as sets of passes the passes can just declare which level they execute at. If its not opt_level we will eventually need more metadata about pass scheduling, such as pass dependencies. We can argue about where to put the state, but my feeling that the PassManager should store a set of passes, and each pass should store its own metadata.\r\n\r\nIt makes it very easy to query passes by name and access metadata about them similar to the way we do operators. We can easily split this into two classes and provide an API for registering the pass which constructs the objects, we have effectively already done this with pass function and the pass object. \r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/460363552/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/460396854","html_url":"https://github.com/apache/tvm/pull/2503#issuecomment-460396854","issue_url":"https://api.github.com/repos/apache/tvm/issues/2503","id":460396854,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MDM5Njg1NA==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-04T20:17:34Z","updated_at":"2019-02-04T20:17:34Z","author_association":"MEMBER","body":"@icemelon9 please rebase against the master and you can merge the PR","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/460396854/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/460400731","html_url":"https://github.com/apache/tvm/pull/2442#issuecomment-460400731","issue_url":"https://api.github.com/repos/apache/tvm/issues/2442","id":460400731,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MDQwMDczMQ==","user":{"login":"slyubomirsky","id":5624871,"node_id":"MDQ6VXNlcjU2MjQ4NzE=","avatar_url":"https://avatars.githubusercontent.com/u/5624871?v=4","gravatar_id":"","url":"https://api.github.com/users/slyubomirsky","html_url":"https://github.com/slyubomirsky","followers_url":"https://api.github.com/users/slyubomirsky/followers","following_url":"https://api.github.com/users/slyubomirsky/following{/other_user}","gists_url":"https://api.github.com/users/slyubomirsky/gists{/gist_id}","starred_url":"https://api.github.com/users/slyubomirsky/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/slyubomirsky/subscriptions","organizations_url":"https://api.github.com/users/slyubomirsky/orgs","repos_url":"https://api.github.com/users/slyubomirsky/repos","events_url":"https://api.github.com/users/slyubomirsky/events{/privacy}","received_events_url":"https://api.github.com/users/slyubomirsky/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-04T20:28:57Z","updated_at":"2019-02-04T20:28:57Z","author_association":"CONTRIBUTOR","body":"@zhiics @wweic @icemelon9 tagging reviewers after changes (at Jared's request)","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/460400731/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/460420225","html_url":"https://github.com/apache/tvm/pull/2442#issuecomment-460420225","issue_url":"https://api.github.com/repos/apache/tvm/issues/2442","id":460420225,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MDQyMDIyNQ==","user":{"login":"zhiics","id":5145158,"node_id":"MDQ6VXNlcjUxNDUxNTg=","avatar_url":"https://avatars.githubusercontent.com/u/5145158?v=4","gravatar_id":"","url":"https://api.github.com/users/zhiics","html_url":"https://github.com/zhiics","followers_url":"https://api.github.com/users/zhiics/followers","following_url":"https://api.github.com/users/zhiics/following{/other_user}","gists_url":"https://api.github.com/users/zhiics/gists{/gist_id}","starred_url":"https://api.github.com/users/zhiics/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zhiics/subscriptions","organizations_url":"https://api.github.com/users/zhiics/orgs","repos_url":"https://api.github.com/users/zhiics/repos","events_url":"https://api.github.com/users/zhiics/events{/privacy}","received_events_url":"https://api.github.com/users/zhiics/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-04T21:29:46Z","updated_at":"2019-02-04T21:29:46Z","author_association":"MEMBER","body":"@slyubomirsky Mostly looks good to me as well. But I also have the question @jroesch had above.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/460420225/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/460435340","html_url":"https://github.com/apache/tvm/pull/2503#issuecomment-460435340","issue_url":"https://api.github.com/repos/apache/tvm/issues/2503","id":460435340,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MDQzNTM0MA==","user":{"login":"icemelon","id":2696494,"node_id":"MDQ6VXNlcjI2OTY0OTQ=","avatar_url":"https://avatars.githubusercontent.com/u/2696494?v=4","gravatar_id":"","url":"https://api.github.com/users/icemelon","html_url":"https://github.com/icemelon","followers_url":"https://api.github.com/users/icemelon/followers","following_url":"https://api.github.com/users/icemelon/following{/other_user}","gists_url":"https://api.github.com/users/icemelon/gists{/gist_id}","starred_url":"https://api.github.com/users/icemelon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/icemelon/subscriptions","organizations_url":"https://api.github.com/users/icemelon/orgs","repos_url":"https://api.github.com/users/icemelon/repos","events_url":"https://api.github.com/users/icemelon/events{/privacy}","received_events_url":"https://api.github.com/users/icemelon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-04T22:17:07Z","updated_at":"2019-02-04T22:18:56Z","author_association":"MEMBER","body":"@vinx13 @junrushao1994 @jroesch @tqchen Thanks for the review.\r\n@tqchen Rebased to master now. Could you approve the PR? It requires 1 approving review from committers.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/460435340/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/460448048","html_url":"https://github.com/apache/tvm/pull/2503#issuecomment-460448048","issue_url":"https://api.github.com/repos/apache/tvm/issues/2503","id":460448048,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MDQ0ODA0OA==","user":{"login":"yzhliu","id":631860,"node_id":"MDQ6VXNlcjYzMTg2MA==","avatar_url":"https://avatars.githubusercontent.com/u/631860?v=4","gravatar_id":"","url":"https://api.github.com/users/yzhliu","html_url":"https://github.com/yzhliu","followers_url":"https://api.github.com/users/yzhliu/followers","following_url":"https://api.github.com/users/yzhliu/following{/other_user}","gists_url":"https://api.github.com/users/yzhliu/gists{/gist_id}","starred_url":"https://api.github.com/users/yzhliu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yzhliu/subscriptions","organizations_url":"https://api.github.com/users/yzhliu/orgs","repos_url":"https://api.github.com/users/yzhliu/repos","events_url":"https://api.github.com/users/yzhliu/events{/privacy}","received_events_url":"https://api.github.com/users/yzhliu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-04T23:00:59Z","updated_at":"2019-02-04T23:00:59Z","author_association":"MEMBER","body":"Thanks @icemelon9 @junrushao1994 @jroesch @vinx13 @tqchen now it is merged.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/460448048/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/460451363","html_url":"https://github.com/apache/tvm/pull/2442#issuecomment-460451363","issue_url":"https://api.github.com/repos/apache/tvm/issues/2442","id":460451363,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MDQ1MTM2Mw==","user":{"login":"slyubomirsky","id":5624871,"node_id":"MDQ6VXNlcjU2MjQ4NzE=","avatar_url":"https://avatars.githubusercontent.com/u/5624871?v=4","gravatar_id":"","url":"https://api.github.com/users/slyubomirsky","html_url":"https://github.com/slyubomirsky","followers_url":"https://api.github.com/users/slyubomirsky/followers","following_url":"https://api.github.com/users/slyubomirsky/following{/other_user}","gists_url":"https://api.github.com/users/slyubomirsky/gists{/gist_id}","starred_url":"https://api.github.com/users/slyubomirsky/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/slyubomirsky/subscriptions","organizations_url":"https://api.github.com/users/slyubomirsky/orgs","repos_url":"https://api.github.com/users/slyubomirsky/repos","events_url":"https://api.github.com/users/slyubomirsky/events{/privacy}","received_events_url":"https://api.github.com/users/slyubomirsky/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-04T23:13:09Z","updated_at":"2019-02-04T23:13:09Z","author_association":"CONTRIBUTOR","body":"Ah, I hadn't noticed that post before. I've given a case where the module is needed for the free/bound vars pass but it's a pretty marginal one, so perhaps it's not worth passing the module for that.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/460451363/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/460502489","html_url":"https://github.com/apache/tvm/issues/2535#issuecomment-460502489","issue_url":"https://api.github.com/repos/apache/tvm/issues/2535","id":460502489,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MDUwMjQ4OQ==","user":{"login":"kevinthesun","id":15520525,"node_id":"MDQ6VXNlcjE1NTIwNTI1","avatar_url":"https://avatars.githubusercontent.com/u/15520525?v=4","gravatar_id":"","url":"https://api.github.com/users/kevinthesun","html_url":"https://github.com/kevinthesun","followers_url":"https://api.github.com/users/kevinthesun/followers","following_url":"https://api.github.com/users/kevinthesun/following{/other_user}","gists_url":"https://api.github.com/users/kevinthesun/gists{/gist_id}","starred_url":"https://api.github.com/users/kevinthesun/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kevinthesun/subscriptions","organizations_url":"https://api.github.com/users/kevinthesun/orgs","repos_url":"https://api.github.com/users/kevinthesun/repos","events_url":"https://api.github.com/users/kevinthesun/events{/privacy}","received_events_url":"https://api.github.com/users/kevinthesun/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-05T03:42:39Z","updated_at":"2019-02-05T03:42:39Z","author_association":"CONTRIBUTOR","body":"TF non_max_suppression_v3 op has the same functionality with current tam implementation. There is one different parameter naming. TVM uses topk which is from mxnet while tf uses max_output_size.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/460502489/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/460503944","html_url":"https://github.com/apache/tvm/issues/2535#issuecomment-460503944","issue_url":"https://api.github.com/repos/apache/tvm/issues/2535","id":460503944,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MDUwMzk0NA==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-05T03:53:12Z","updated_at":"2019-02-05T03:53:12Z","author_association":"MEMBER","body":"Is it possible to also look at other libraries(keras, pytorch)?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/460503944/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/460510226","html_url":"https://github.com/apache/tvm/issues/2562#issuecomment-460510226","issue_url":"https://api.github.com/repos/apache/tvm/issues/2562","id":460510226,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MDUxMDIyNg==","user":{"login":"masahi","id":1776403,"node_id":"MDQ6VXNlcjE3NzY0MDM=","avatar_url":"https://avatars.githubusercontent.com/u/1776403?v=4","gravatar_id":"","url":"https://api.github.com/users/masahi","html_url":"https://github.com/masahi","followers_url":"https://api.github.com/users/masahi/followers","following_url":"https://api.github.com/users/masahi/following{/other_user}","gists_url":"https://api.github.com/users/masahi/gists{/gist_id}","starred_url":"https://api.github.com/users/masahi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/masahi/subscriptions","organizations_url":"https://api.github.com/users/masahi/orgs","repos_url":"https://api.github.com/users/masahi/repos","events_url":"https://api.github.com/users/masahi/events{/privacy}","received_events_url":"https://api.github.com/users/masahi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-05T04:37:31Z","updated_at":"2019-02-05T04:37:31Z","author_association":"MEMBER","body":"does this mean we need to write all gradient ops in TOPI (`conv2d_grad` etc)? That would be major undertaking.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/460510226/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/460511305","html_url":"https://github.com/apache/tvm/issues/2512#issuecomment-460511305","issue_url":"https://api.github.com/repos/apache/tvm/issues/2512","id":460511305,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MDUxMTMwNQ==","user":{"login":"FrozenGene","id":7287321,"node_id":"MDQ6VXNlcjcyODczMjE=","avatar_url":"https://avatars.githubusercontent.com/u/7287321?v=4","gravatar_id":"","url":"https://api.github.com/users/FrozenGene","html_url":"https://github.com/FrozenGene","followers_url":"https://api.github.com/users/FrozenGene/followers","following_url":"https://api.github.com/users/FrozenGene/following{/other_user}","gists_url":"https://api.github.com/users/FrozenGene/gists{/gist_id}","starred_url":"https://api.github.com/users/FrozenGene/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/FrozenGene/subscriptions","organizations_url":"https://api.github.com/users/FrozenGene/orgs","repos_url":"https://api.github.com/users/FrozenGene/repos","events_url":"https://api.github.com/users/FrozenGene/events{/privacy}","received_events_url":"https://api.github.com/users/FrozenGene/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-05T04:44:47Z","updated_at":"2019-02-05T04:44:47Z","author_association":"MEMBER","body":"@jroesch, my concern is if we add opt_level property, users want to add one custom pass, he has to know which opt_level he should set. To achive this goal, he has to know what to do of different opt_level, even every pass. This will make huge workload if we have many passes in the future. So, if we could keep passes dependent, this could make other users develop plugin pass easier. I agree pass dependies is we should care. LLVM has also met this problem. So LLVM has something like `INITIALIZE_PASS_DEPENDENCY` `add_required`. This way could give the choice to developers to decide. ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/460511305/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/460514252","html_url":"https://github.com/apache/tvm/issues/2562#issuecomment-460514252","issue_url":"https://api.github.com/repos/apache/tvm/issues/2562","id":460514252,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MDUxNDI1Mg==","user":{"login":"reminisce","id":4978794,"node_id":"MDQ6VXNlcjQ5Nzg3OTQ=","avatar_url":"https://avatars.githubusercontent.com/u/4978794?v=4","gravatar_id":"","url":"https://api.github.com/users/reminisce","html_url":"https://github.com/reminisce","followers_url":"https://api.github.com/users/reminisce/followers","following_url":"https://api.github.com/users/reminisce/following{/other_user}","gists_url":"https://api.github.com/users/reminisce/gists{/gist_id}","starred_url":"https://api.github.com/users/reminisce/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/reminisce/subscriptions","organizations_url":"https://api.github.com/users/reminisce/orgs","repos_url":"https://api.github.com/users/reminisce/repos","events_url":"https://api.github.com/users/reminisce/events{/privacy}","received_events_url":"https://api.github.com/users/reminisce/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-05T05:04:54Z","updated_at":"2019-02-05T05:04:54Z","author_association":"CONTRIBUTOR","body":"To ease the work of implementing so many gradient expressions, I think we can take advantage of this PR https://github.com/dmlc/tvm/pull/2498 for simple operators and attach appropriate schedules. For complicated operators such as convolution, we will probably need to implement gradient expression manually.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/460514252/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/460514708","html_url":"https://github.com/apache/tvm/issues/2512#issuecomment-460514708","issue_url":"https://api.github.com/repos/apache/tvm/issues/2512","id":460514708,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MDUxNDcwOA==","user":{"login":"yzhliu","id":631860,"node_id":"MDQ6VXNlcjYzMTg2MA==","avatar_url":"https://avatars.githubusercontent.com/u/631860?v=4","gravatar_id":"","url":"https://api.github.com/users/yzhliu","html_url":"https://github.com/yzhliu","followers_url":"https://api.github.com/users/yzhliu/followers","following_url":"https://api.github.com/users/yzhliu/following{/other_user}","gists_url":"https://api.github.com/users/yzhliu/gists{/gist_id}","starred_url":"https://api.github.com/users/yzhliu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yzhliu/subscriptions","organizations_url":"https://api.github.com/users/yzhliu/orgs","repos_url":"https://api.github.com/users/yzhliu/repos","events_url":"https://api.github.com/users/yzhliu/events{/privacy}","received_events_url":"https://api.github.com/users/yzhliu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-05T05:07:54Z","updated_at":"2019-02-05T05:07:54Z","author_association":"MEMBER","body":"I also feel `add_required` would be more clear to users who write customized passes.\r\nRegarding the state, can we make everything in State immutable?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/460514708/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/460516772","html_url":"https://github.com/apache/tvm/issues/2512#issuecomment-460516772","issue_url":"https://api.github.com/repos/apache/tvm/issues/2512","id":460516772,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MDUxNjc3Mg==","user":{"login":"zhiics","id":5145158,"node_id":"MDQ6VXNlcjUxNDUxNTg=","avatar_url":"https://avatars.githubusercontent.com/u/5145158?v=4","gravatar_id":"","url":"https://api.github.com/users/zhiics","html_url":"https://github.com/zhiics","followers_url":"https://api.github.com/users/zhiics/followers","following_url":"https://api.github.com/users/zhiics/following{/other_user}","gists_url":"https://api.github.com/users/zhiics/gists{/gist_id}","starred_url":"https://api.github.com/users/zhiics/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zhiics/subscriptions","organizations_url":"https://api.github.com/users/zhiics/orgs","repos_url":"https://api.github.com/users/zhiics/repos","events_url":"https://api.github.com/users/zhiics/events{/privacy}","received_events_url":"https://api.github.com/users/zhiics/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-05T05:22:01Z","updated_at":"2019-02-05T05:22:01Z","author_association":"MEMBER","body":"hmmm, after another thinking, I think storing the dependent passes is probably needed as opt_level might not provide enough information to help build a dependency graph.\r\n\r\n@yzhliu We could make State immutable but then we need to return the updated state. ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/460516772/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/460551888","html_url":"https://github.com/apache/tvm/pull/2216#issuecomment-460551888","issue_url":"https://api.github.com/repos/apache/tvm/issues/2216","id":460551888,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MDU1MTg4OA==","user":{"login":"yongwww","id":10205827,"node_id":"MDQ6VXNlcjEwMjA1ODI3","avatar_url":"https://avatars.githubusercontent.com/u/10205827?v=4","gravatar_id":"","url":"https://api.github.com/users/yongwww","html_url":"https://github.com/yongwww","followers_url":"https://api.github.com/users/yongwww/followers","following_url":"https://api.github.com/users/yongwww/following{/other_user}","gists_url":"https://api.github.com/users/yongwww/gists{/gist_id}","starred_url":"https://api.github.com/users/yongwww/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yongwww/subscriptions","organizations_url":"https://api.github.com/users/yongwww/orgs","repos_url":"https://api.github.com/users/yongwww/repos","events_url":"https://api.github.com/users/yongwww/events{/privacy}","received_events_url":"https://api.github.com/users/yongwww/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-05T08:28:28Z","updated_at":"2019-02-05T08:28:28Z","author_association":"MEMBER","body":"good to see this pr get approved, it would be great to see it get merged soon.  ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/460551888/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/460553039","html_url":"https://github.com/apache/tvm/pull/2561#issuecomment-460553039","issue_url":"https://api.github.com/repos/apache/tvm/issues/2561","id":460553039,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MDU1MzAzOQ==","user":{"login":"yinghai","id":1100089,"node_id":"MDQ6VXNlcjExMDAwODk=","avatar_url":"https://avatars.githubusercontent.com/u/1100089?v=4","gravatar_id":"","url":"https://api.github.com/users/yinghai","html_url":"https://github.com/yinghai","followers_url":"https://api.github.com/users/yinghai/followers","following_url":"https://api.github.com/users/yinghai/following{/other_user}","gists_url":"https://api.github.com/users/yinghai/gists{/gist_id}","starred_url":"https://api.github.com/users/yinghai/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yinghai/subscriptions","organizations_url":"https://api.github.com/users/yinghai/orgs","repos_url":"https://api.github.com/users/yinghai/repos","events_url":"https://api.github.com/users/yinghai/events{/privacy}","received_events_url":"https://api.github.com/users/yinghai/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-05T08:32:38Z","updated_at":"2019-02-05T08:32:38Z","author_association":"NONE","body":"Given the description of the computation, batch_matmul might be a more general name? ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/460553039/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/460558157","html_url":"https://github.com/apache/tvm/pull/2216#issuecomment-460558157","issue_url":"https://api.github.com/repos/apache/tvm/issues/2216","id":460558157,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MDU1ODE1Nw==","user":{"login":"srkreddy1238","id":14215163,"node_id":"MDQ6VXNlcjE0MjE1MTYz","avatar_url":"https://avatars.githubusercontent.com/u/14215163?v=4","gravatar_id":"","url":"https://api.github.com/users/srkreddy1238","html_url":"https://github.com/srkreddy1238","followers_url":"https://api.github.com/users/srkreddy1238/followers","following_url":"https://api.github.com/users/srkreddy1238/following{/other_user}","gists_url":"https://api.github.com/users/srkreddy1238/gists{/gist_id}","starred_url":"https://api.github.com/users/srkreddy1238/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/srkreddy1238/subscriptions","organizations_url":"https://api.github.com/users/srkreddy1238/orgs","repos_url":"https://api.github.com/users/srkreddy1238/repos","events_url":"https://api.github.com/users/srkreddy1238/events{/privacy}","received_events_url":"https://api.github.com/users/srkreddy1238/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-05T08:52:10Z","updated_at":"2019-02-05T08:52:10Z","author_association":"CONTRIBUTOR","body":"@yzhliu no problem :)","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/460558157/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/460558391","html_url":"https://github.com/apache/tvm/issues/2547#issuecomment-460558391","issue_url":"https://api.github.com/repos/apache/tvm/issues/2547","id":460558391,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MDU1ODM5MQ==","user":{"login":"srkreddy1238","id":14215163,"node_id":"MDQ6VXNlcjE0MjE1MTYz","avatar_url":"https://avatars.githubusercontent.com/u/14215163?v=4","gravatar_id":"","url":"https://api.github.com/users/srkreddy1238","html_url":"https://github.com/srkreddy1238","followers_url":"https://api.github.com/users/srkreddy1238/followers","following_url":"https://api.github.com/users/srkreddy1238/following{/other_user}","gists_url":"https://api.github.com/users/srkreddy1238/gists{/gist_id}","starred_url":"https://api.github.com/users/srkreddy1238/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/srkreddy1238/subscriptions","organizations_url":"https://api.github.com/users/srkreddy1238/orgs","repos_url":"https://api.github.com/users/srkreddy1238/repos","events_url":"https://api.github.com/users/srkreddy1238/events{/privacy}","received_events_url":"https://api.github.com/users/srkreddy1238/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-05T08:52:56Z","updated_at":"2019-02-05T08:52:56Z","author_association":"CONTRIBUTOR","body":"+1","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/460558391/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/460567435","html_url":"https://github.com/apache/tvm/pull/2493#issuecomment-460567435","issue_url":"https://api.github.com/repos/apache/tvm/issues/2493","id":460567435,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MDU2NzQzNQ==","user":{"login":"yongwww","id":10205827,"node_id":"MDQ6VXNlcjEwMjA1ODI3","avatar_url":"https://avatars.githubusercontent.com/u/10205827?v=4","gravatar_id":"","url":"https://api.github.com/users/yongwww","html_url":"https://github.com/yongwww","followers_url":"https://api.github.com/users/yongwww/followers","following_url":"https://api.github.com/users/yongwww/following{/other_user}","gists_url":"https://api.github.com/users/yongwww/gists{/gist_id}","starred_url":"https://api.github.com/users/yongwww/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yongwww/subscriptions","organizations_url":"https://api.github.com/users/yongwww/orgs","repos_url":"https://api.github.com/users/yongwww/repos","events_url":"https://api.github.com/users/yongwww/events{/privacy}","received_events_url":"https://api.github.com/users/yongwww/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-05T09:24:59Z","updated_at":"2019-02-05T09:24:59Z","author_association":"MEMBER","body":"@srkreddy1238 resolved your comments, please take another look","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/460567435/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/460623044","html_url":"https://github.com/apache/tvm/issues/2562#issuecomment-460623044","issue_url":"https://api.github.com/repos/apache/tvm/issues/2562","id":460623044,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MDYyMzA0NA==","user":{"login":"sergei-mironov","id":4477729,"node_id":"MDQ6VXNlcjQ0Nzc3Mjk=","avatar_url":"https://avatars.githubusercontent.com/u/4477729?v=4","gravatar_id":"","url":"https://api.github.com/users/sergei-mironov","html_url":"https://github.com/sergei-mironov","followers_url":"https://api.github.com/users/sergei-mironov/followers","following_url":"https://api.github.com/users/sergei-mironov/following{/other_user}","gists_url":"https://api.github.com/users/sergei-mironov/gists{/gist_id}","starred_url":"https://api.github.com/users/sergei-mironov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sergei-mironov/subscriptions","organizations_url":"https://api.github.com/users/sergei-mironov/orgs","repos_url":"https://api.github.com/users/sergei-mironov/repos","events_url":"https://api.github.com/users/sergei-mironov/events{/privacy}","received_events_url":"https://api.github.com/users/sergei-mironov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-05T12:38:27Z","updated_at":"2019-02-05T12:38:27Z","author_association":"CONTRIBUTOR","body":"We think that a portion of above operations may indeed be handled by #2498. We will test tensor-level AD for compatibility with listed operations and publish results. Meanwhile, we work on integration of AD with Relay. We plan to provide a layer similar in spirit to our NNVM draft https://github.com/sgrechanik-h/tvm/blob/87d6f319f74360b9dfd0578b68214d1309b208fe/nnvm/src/top/tensor/gradient.cc .","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/460623044/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/460631637","html_url":"https://github.com/apache/tvm/issues/2563#issuecomment-460631637","issue_url":"https://api.github.com/repos/apache/tvm/issues/2563","id":460631637,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MDYzMTYzNw==","user":{"login":"Ravenwater","id":466641,"node_id":"MDQ6VXNlcjQ2NjY0MQ==","avatar_url":"https://avatars.githubusercontent.com/u/466641?v=4","gravatar_id":"","url":"https://api.github.com/users/Ravenwater","html_url":"https://github.com/Ravenwater","followers_url":"https://api.github.com/users/Ravenwater/followers","following_url":"https://api.github.com/users/Ravenwater/following{/other_user}","gists_url":"https://api.github.com/users/Ravenwater/gists{/gist_id}","starred_url":"https://api.github.com/users/Ravenwater/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Ravenwater/subscriptions","organizations_url":"https://api.github.com/users/Ravenwater/orgs","repos_url":"https://api.github.com/users/Ravenwater/repos","events_url":"https://api.github.com/users/Ravenwater/events{/privacy}","received_events_url":"https://api.github.com/users/Ravenwater/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-05T13:09:01Z","updated_at":"2019-02-05T13:09:01Z","author_association":"NONE","body":"Love it. \r\n\r\nIsn't this better floated in https://discuss.tvm.ai ? There is another discussion there that has baring on this same topic: https://discuss.tvm.ai/t/vta-define-a-complete-architecture-specification-for-vta/1614\r\n\r\nOne of our goals is to drive MACRO devices such as 1M core compute clusters and custom tensor processors. \r\n\r\nTo be able to communicate with TVM efficiently, we need an architecture definition of the VTA that supports all the features of executing the IR, from fully sequential, to massively parallel.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/460631637/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/460737762","html_url":"https://github.com/apache/tvm/issues/2543#issuecomment-460737762","issue_url":"https://api.github.com/repos/apache/tvm/issues/2543","id":460737762,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MDczNzc2Mg==","user":{"login":"alex-weaver","id":11133789,"node_id":"MDQ6VXNlcjExMTMzNzg5","avatar_url":"https://avatars.githubusercontent.com/u/11133789?v=4","gravatar_id":"","url":"https://api.github.com/users/alex-weaver","html_url":"https://github.com/alex-weaver","followers_url":"https://api.github.com/users/alex-weaver/followers","following_url":"https://api.github.com/users/alex-weaver/following{/other_user}","gists_url":"https://api.github.com/users/alex-weaver/gists{/gist_id}","starred_url":"https://api.github.com/users/alex-weaver/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alex-weaver/subscriptions","organizations_url":"https://api.github.com/users/alex-weaver/orgs","repos_url":"https://api.github.com/users/alex-weaver/repos","events_url":"https://api.github.com/users/alex-weaver/events{/privacy}","received_events_url":"https://api.github.com/users/alex-weaver/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-05T17:55:17Z","updated_at":"2019-02-05T17:55:17Z","author_association":"CONTRIBUTOR","body":"+1","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/460737762/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/460793766","html_url":"https://github.com/apache/tvm/issues/2562#issuecomment-460793766","issue_url":"https://api.github.com/repos/apache/tvm/issues/2562","id":460793766,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MDc5Mzc2Ng==","user":{"login":"ajtulloch","id":1121581,"node_id":"MDQ6VXNlcjExMjE1ODE=","avatar_url":"https://avatars.githubusercontent.com/u/1121581?v=4","gravatar_id":"","url":"https://api.github.com/users/ajtulloch","html_url":"https://github.com/ajtulloch","followers_url":"https://api.github.com/users/ajtulloch/followers","following_url":"https://api.github.com/users/ajtulloch/following{/other_user}","gists_url":"https://api.github.com/users/ajtulloch/gists{/gist_id}","starred_url":"https://api.github.com/users/ajtulloch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ajtulloch/subscriptions","organizations_url":"https://api.github.com/users/ajtulloch/orgs","repos_url":"https://api.github.com/users/ajtulloch/repos","events_url":"https://api.github.com/users/ajtulloch/events{/privacy}","received_events_url":"https://api.github.com/users/ajtulloch/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-05T20:36:54Z","updated_at":"2019-02-05T20:36:54Z","author_association":"CONTRIBUTOR","body":"@jroesch given how many of these are just simple either elementwise ops (log, etc) or reductions (broadcast, etc) - would it be possible for you (or someone familiar with how you want this work done) to first implement one of them as a template (i.e. showing desired code location (alongside or in separate file?), primal grad registration, direct + gradient checking in unittests, etc), which will allow others to efficiently use that as a template for the similar work? ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/460793766/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/460794043","html_url":"https://github.com/apache/tvm/issues/2543#issuecomment-460794043","issue_url":"https://api.github.com/repos/apache/tvm/issues/2543","id":460794043,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MDc5NDA0Mw==","user":{"login":"ajtulloch","id":1121581,"node_id":"MDQ6VXNlcjExMjE1ODE=","avatar_url":"https://avatars.githubusercontent.com/u/1121581?v=4","gravatar_id":"","url":"https://api.github.com/users/ajtulloch","html_url":"https://github.com/ajtulloch","followers_url":"https://api.github.com/users/ajtulloch/followers","following_url":"https://api.github.com/users/ajtulloch/following{/other_user}","gists_url":"https://api.github.com/users/ajtulloch/gists{/gist_id}","starred_url":"https://api.github.com/users/ajtulloch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ajtulloch/subscriptions","organizations_url":"https://api.github.com/users/ajtulloch/orgs","repos_url":"https://api.github.com/users/ajtulloch/repos","events_url":"https://api.github.com/users/ajtulloch/events{/privacy}","received_events_url":"https://api.github.com/users/ajtulloch/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-05T20:37:46Z","updated_at":"2019-02-05T20:37:46Z","author_association":"CONTRIBUTOR","body":"+1","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/460794043/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/460799786","html_url":"https://github.com/apache/tvm/issues/2535#issuecomment-460799786","issue_url":"https://api.github.com/repos/apache/tvm/issues/2535","id":460799786,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MDc5OTc4Ng==","user":{"login":"Laurawly","id":3700467,"node_id":"MDQ6VXNlcjM3MDA0Njc=","avatar_url":"https://avatars.githubusercontent.com/u/3700467?v=4","gravatar_id":"","url":"https://api.github.com/users/Laurawly","html_url":"https://github.com/Laurawly","followers_url":"https://api.github.com/users/Laurawly/followers","following_url":"https://api.github.com/users/Laurawly/following{/other_user}","gists_url":"https://api.github.com/users/Laurawly/gists{/gist_id}","starred_url":"https://api.github.com/users/Laurawly/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Laurawly/subscriptions","organizations_url":"https://api.github.com/users/Laurawly/orgs","repos_url":"https://api.github.com/users/Laurawly/repos","events_url":"https://api.github.com/users/Laurawly/events{/privacy}","received_events_url":"https://api.github.com/users/Laurawly/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-05T20:55:03Z","updated_at":"2019-02-05T20:55:03Z","author_association":"CONTRIBUTOR","body":"Here’s one implementation from keras: https://github.com/pierluigiferrari/ssd_keras/blob/master/models/keras_ssd512.py\r\n","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/460799786/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/460803745","html_url":"https://github.com/apache/tvm/pull/2561#issuecomment-460803745","issue_url":"https://api.github.com/repos/apache/tvm/issues/2561","id":460803745,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MDgwMzc0NQ==","user":{"login":"icemelon","id":2696494,"node_id":"MDQ6VXNlcjI2OTY0OTQ=","avatar_url":"https://avatars.githubusercontent.com/u/2696494?v=4","gravatar_id":"","url":"https://api.github.com/users/icemelon","html_url":"https://github.com/icemelon","followers_url":"https://api.github.com/users/icemelon/followers","following_url":"https://api.github.com/users/icemelon/following{/other_user}","gists_url":"https://api.github.com/users/icemelon/gists{/gist_id}","starred_url":"https://api.github.com/users/icemelon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/icemelon/subscriptions","organizations_url":"https://api.github.com/users/icemelon/orgs","repos_url":"https://api.github.com/users/icemelon/repos","events_url":"https://api.github.com/users/icemelon/events{/privacy}","received_events_url":"https://api.github.com/users/icemelon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-05T21:07:04Z","updated_at":"2019-02-05T21:07:04Z","author_association":"MEMBER","body":"@yinghai Yes, I agree. I'll update it in the new commit.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/460803745/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/460806657","html_url":"https://github.com/apache/tvm/pull/2498#issuecomment-460806657","issue_url":"https://api.github.com/repos/apache/tvm/issues/2498","id":460806657,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MDgwNjY1Nw==","user":{"login":"kaitingwang","id":22896212,"node_id":"MDQ6VXNlcjIyODk2MjEy","avatar_url":"https://avatars.githubusercontent.com/u/22896212?v=4","gravatar_id":"","url":"https://api.github.com/users/kaitingwang","html_url":"https://github.com/kaitingwang","followers_url":"https://api.github.com/users/kaitingwang/followers","following_url":"https://api.github.com/users/kaitingwang/following{/other_user}","gists_url":"https://api.github.com/users/kaitingwang/gists{/gist_id}","starred_url":"https://api.github.com/users/kaitingwang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kaitingwang/subscriptions","organizations_url":"https://api.github.com/users/kaitingwang/orgs","repos_url":"https://api.github.com/users/kaitingwang/repos","events_url":"https://api.github.com/users/kaitingwang/events{/privacy}","received_events_url":"https://api.github.com/users/kaitingwang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-05T21:16:10Z","updated_at":"2019-02-05T21:16:10Z","author_association":"CONTRIBUTOR","body":"@sgrechanik-h I tried the following testcase and am puzzled about why you needed to 'shift' the identity matrix to avoid the out-of-bound situation (i.e. allocating 10x3x17x3 for identity)  even when you had put in the if-guard to prevent this situation. (i.e. `if ((((((k1 <= ax2) && ((ax2 - k1) <= 9)) && ((ax2 + -9) <= k1)) && (k1 <= ax2)) && (ax2 <= 11)))`)\r\n\r\n```\r\n  1 from __future__ import absolute_import\r\n  2 import tvm\r\n  3 import topi\r\n  4\r\n  5 A = tvm.placeholder((15,), name = \"A\")\r\n  6 B = tvm.compute((10,3), lambda i,j: A[i+j], name = \"B\")\r\n  7\r\n  8 print(\"-----------FORWARD-----------------\")\r\n  9 print(tvm.PrintTensorRecursively(B))\r\n 10 sout = tvm.create_schedule(B.op)\r\n 11 ir = tvm.lower(sout, [B,A], simple_mode=True)\r\n 12 print(ir)\r\n 13\r\n 14 print(\"-----------BACKWARD---------------------\")\r\n 15 [jacs] = list(tvm.differentiate(B, [A]))\r\n 16 print(tvm.PrintTensorRecursively(jacs))\r\n 17 sjac = tvm.create_schedule(jacs.op)\r\n 18 ir_jacs = tvm.lower(sjac, [jacs], simple_mode=True)\r\n 19 print(ir_jacs)\r\n```\r\nLowered code:\r\n```\r\n// attr [identity] storage_scope = \"global\"\r\nallocate identity[float32 * 10 * 3 * 17 * 3]\r\n// attr [tensor] storage_scope = \"global\"\r\nallocate tensor[float32 * 15 * 3 * 10]\r\nproduce identity {\r\n  for (ax0, 0, 10) {\r\n    for (ax1, 0, 3) {\r\n      for (ax2, 0, 17) {\r\n        for (ax3, 0, 3) {\r\n          if (likely((2 <= ax2))) {\r\n            if (likely((ax2 < 12))) {\r\n              identity[((((((ax0*3) + ax1)*17) + ax2)*3) + ax3)] = float32((((ax0 - ax2) == -2) && (ax1 == ax3)))\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\nproduce tensor {\r\n  for (ax2, 0, 15) {\r\n    for (ax1, 0, 3) {\r\n      for (ax0, 0, 10) {\r\n        tensor[((((ax2*3) + ax1)*10) + ax0)] = 0.000000f\r\n        for (k1, 0, 3) {\r\n          if (likely((ax2 < 12))) {\r\n            if ((((((k1 <= ax2) && ((ax2 - k1) <= 9)) && ((ax2 + -9) <= k1)) && (k1 <= ax2)) && (ax2 <= 11))) {\r\n              tensor[((((ax2*3) + ax1)*10) + ax0)] = (tensor[((((ax2*3) + ax1)*10) + ax0)] + identity[(((((ax2 + (ax1*17)) + (ax0*51))*3) - (k1*2)) + 6)])\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n```","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/460806657/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/460841227","html_url":"https://github.com/apache/tvm/pull/2216#issuecomment-460841227","issue_url":"https://api.github.com/repos/apache/tvm/issues/2216","id":460841227,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MDg0MTIyNw==","user":{"login":"yzhliu","id":631860,"node_id":"MDQ6VXNlcjYzMTg2MA==","avatar_url":"https://avatars.githubusercontent.com/u/631860?v=4","gravatar_id":"","url":"https://api.github.com/users/yzhliu","html_url":"https://github.com/yzhliu","followers_url":"https://api.github.com/users/yzhliu/followers","following_url":"https://api.github.com/users/yzhliu/following{/other_user}","gists_url":"https://api.github.com/users/yzhliu/gists{/gist_id}","starred_url":"https://api.github.com/users/yzhliu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yzhliu/subscriptions","organizations_url":"https://api.github.com/users/yzhliu/orgs","repos_url":"https://api.github.com/users/yzhliu/repos","events_url":"https://api.github.com/users/yzhliu/events{/privacy}","received_events_url":"https://api.github.com/users/yzhliu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-05T23:10:57Z","updated_at":"2019-02-05T23:10:57Z","author_association":"MEMBER","body":"Thanks everyone for contribution and reviewing. Let's merge.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/460841227/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/460855954","html_url":"https://github.com/apache/tvm/pull/2567#issuecomment-460855954","issue_url":"https://api.github.com/repos/apache/tvm/issues/2567","id":460855954,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MDg1NTk1NA==","user":{"login":"ajtulloch","id":1121581,"node_id":"MDQ6VXNlcjExMjE1ODE=","avatar_url":"https://avatars.githubusercontent.com/u/1121581?v=4","gravatar_id":"","url":"https://api.github.com/users/ajtulloch","html_url":"https://github.com/ajtulloch","followers_url":"https://api.github.com/users/ajtulloch/followers","following_url":"https://api.github.com/users/ajtulloch/following{/other_user}","gists_url":"https://api.github.com/users/ajtulloch/gists{/gist_id}","starred_url":"https://api.github.com/users/ajtulloch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ajtulloch/subscriptions","organizations_url":"https://api.github.com/users/ajtulloch/orgs","repos_url":"https://api.github.com/users/ajtulloch/repos","events_url":"https://api.github.com/users/ajtulloch/events{/privacy}","received_events_url":"https://api.github.com/users/ajtulloch/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-06T00:14:08Z","updated_at":"2019-02-06T00:14:08Z","author_association":"CONTRIBUTOR","body":"I'd note this is similar to existing work in neo-ai/tvm, specifically e.g. https://github.com/neo-ai/tvm/commit/9fb28a6c246352faf9e1cc8138c8a5fd1987a51a (cc @zhiics, @yidawang).","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/460855954/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/460859932","html_url":"https://github.com/apache/tvm/pull/2567#issuecomment-460859932","issue_url":"https://api.github.com/repos/apache/tvm/issues/2567","id":460859932,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MDg1OTkzMg==","user":{"login":"zhiics","id":5145158,"node_id":"MDQ6VXNlcjUxNDUxNTg=","avatar_url":"https://avatars.githubusercontent.com/u/5145158?v=4","gravatar_id":"","url":"https://api.github.com/users/zhiics","html_url":"https://github.com/zhiics","followers_url":"https://api.github.com/users/zhiics/followers","following_url":"https://api.github.com/users/zhiics/following{/other_user}","gists_url":"https://api.github.com/users/zhiics/gists{/gist_id}","starred_url":"https://api.github.com/users/zhiics/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zhiics/subscriptions","organizations_url":"https://api.github.com/users/zhiics/orgs","repos_url":"https://api.github.com/users/zhiics/repos","events_url":"https://api.github.com/users/zhiics/events{/privacy}","received_events_url":"https://api.github.com/users/zhiics/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-06T00:33:35Z","updated_at":"2019-02-06T00:33:35Z","author_association":"MEMBER","body":"@ajtulloch Thanks for reference. Yeah, I was also trying to differentiate the input and weight nodes during the runtime. To be honest, it might be a little hacky there.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/460859932/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/460884656","html_url":"https://github.com/apache/tvm/pull/2567#issuecomment-460884656","issue_url":"https://api.github.com/repos/apache/tvm/issues/2567","id":460884656,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MDg4NDY1Ng==","user":{"login":"hlu1","id":14827759,"node_id":"MDQ6VXNlcjE0ODI3NzU5","avatar_url":"https://avatars.githubusercontent.com/u/14827759?v=4","gravatar_id":"","url":"https://api.github.com/users/hlu1","html_url":"https://github.com/hlu1","followers_url":"https://api.github.com/users/hlu1/followers","following_url":"https://api.github.com/users/hlu1/following{/other_user}","gists_url":"https://api.github.com/users/hlu1/gists{/gist_id}","starred_url":"https://api.github.com/users/hlu1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hlu1/subscriptions","organizations_url":"https://api.github.com/users/hlu1/orgs","repos_url":"https://api.github.com/users/hlu1/repos","events_url":"https://api.github.com/users/hlu1/events{/privacy}","received_events_url":"https://api.github.com/users/hlu1/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-06T02:56:00Z","updated_at":"2019-02-06T02:56:00Z","author_association":"CONTRIBUTOR","body":"@zziics, our intent here is not to differentiate input and weight nodes. It's more about enabling shipping pre transformed weights to minimize model size.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/460884656/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/460889555","html_url":"https://github.com/apache/tvm/pull/2567#issuecomment-460889555","issue_url":"https://api.github.com/repos/apache/tvm/issues/2567","id":460889555,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MDg4OTU1NQ==","user":{"login":"srkreddy1238","id":14215163,"node_id":"MDQ6VXNlcjE0MjE1MTYz","avatar_url":"https://avatars.githubusercontent.com/u/14215163?v=4","gravatar_id":"","url":"https://api.github.com/users/srkreddy1238","html_url":"https://github.com/srkreddy1238","followers_url":"https://api.github.com/users/srkreddy1238/followers","following_url":"https://api.github.com/users/srkreddy1238/following{/other_user}","gists_url":"https://api.github.com/users/srkreddy1238/gists{/gist_id}","starred_url":"https://api.github.com/users/srkreddy1238/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/srkreddy1238/subscriptions","organizations_url":"https://api.github.com/users/srkreddy1238/orgs","repos_url":"https://api.github.com/users/srkreddy1238/repos","events_url":"https://api.github.com/users/srkreddy1238/events{/privacy}","received_events_url":"https://api.github.com/users/srkreddy1238/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-06T03:29:51Z","updated_at":"2019-02-06T03:35:30Z","author_association":"CONTRIBUTOR","body":"Ref. #2357  an RFC proposed to add complete metadata information support. Conclusion here was to extend the graph json for this metadata instead of adding new API to runtime to keep runtime as small as possible.\r\n\r\nThis option needs JSON parser lib dependency on deployment side hence I went with local changes for time being. Below is a ref commit with runtime change to query complete graph metadata.\r\nhttps://github.com/srkreddy1238/tvm/commit/73c08194261fd15b12dfa69d7b39fc6a57a4bb11\r\n\r\nOptions I would see here are\r\n- Adding the metadata to JSON while compilation : Good idea, but deployment depends on JSON parser. Also this approach is flexible to allow adding multiple signatures on the same graph like default signature for running entire graph and another for partial graph running. We can come up with options (or tools) while compilation (or post) to embed these signatures into graph JSON.\r\n\r\n- Adding new API to runtime and make it available always : Increases runtime size.\r\n\r\n- Adding new API to runtime with conditional compilation (-DGRAPH_RUNTIME_METADATA_API) : Decent option as this can be enabled based on deployment needs. This may be required to load partial graph based on signature selection as well.\r\n\r\nWe could discuss on a new RFC if needed.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/460889555/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/460891675","html_url":"https://github.com/apache/tvm/pull/2558#issuecomment-460891675","issue_url":"https://api.github.com/repos/apache/tvm/issues/2558","id":460891675,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MDg5MTY3NQ==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-06T03:45:36Z","updated_at":"2019-02-06T03:45:36Z","author_association":"MEMBER","body":"as https://docs.tvm.ai/contribute/code_review.html#ensure-test-coverage can you add a regression test?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/460891675/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/460901370","html_url":"https://github.com/apache/tvm/issues/2517#issuecomment-460901370","issue_url":"https://api.github.com/repos/apache/tvm/issues/2517","id":460901370,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MDkwMTM3MA==","user":{"login":"srkreddy1238","id":14215163,"node_id":"MDQ6VXNlcjE0MjE1MTYz","avatar_url":"https://avatars.githubusercontent.com/u/14215163?v=4","gravatar_id":"","url":"https://api.github.com/users/srkreddy1238","html_url":"https://github.com/srkreddy1238","followers_url":"https://api.github.com/users/srkreddy1238/followers","following_url":"https://api.github.com/users/srkreddy1238/following{/other_user}","gists_url":"https://api.github.com/users/srkreddy1238/gists{/gist_id}","starred_url":"https://api.github.com/users/srkreddy1238/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/srkreddy1238/subscriptions","organizations_url":"https://api.github.com/users/srkreddy1238/orgs","repos_url":"https://api.github.com/users/srkreddy1238/repos","events_url":"https://api.github.com/users/srkreddy1238/events{/privacy}","received_events_url":"https://api.github.com/users/srkreddy1238/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-06T04:57:40Z","updated_at":"2019-02-06T04:57:40Z","author_association":"CONTRIBUTOR","body":"@patrikhermansson  can you try below patch ?\r\n\r\n```\r\ndiff --git a/golang/Makefile b/golang/Makefile\r\nindex 54019740..d62133b7 100644\r\n--- a/golang/Makefile\r\n+++ b/golang/Makefile\r\n@@ -7,8 +7,8 @@ NATIVE_SRC = tvm_runtime_pack.cc\r\n \r\n GOPATH=$(CURDIR)/gopath\r\n GOPATHDIR=${GOPATH}/src/${TARGET}/\r\n-CGO_CPPFLAGS=\"-I. -I${TVM_BASE}/ -I${TVM_BASE}/3rdparty/dmlc-core/include -I${TVM_BASE}/include -I${TVM_BASE}/3rdparty/dlpack/include/\"\r\n-CGO_CXXFLAGS=\"-std=c++11\"\r\n+CGO_CPPFLAGS=\"-I. -I${TVM_BASE}/ -I${TVM_BASE}/3rdparty/dmlc-core/include -I${TVM_BASE}/include -I${TVM_BASE}/3rdparty/dlpack/include/ -m64\"\r\n+CGO_CXXFLAGS=\"-std=c++11 -m64\"\r\n CGO_CFLAGS=\"-I${TVM_BASE}\"\r\n CGO_LDFLAGS=\"-ldl -lm\"\r\n```","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/460901370/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/460902024","html_url":"https://github.com/apache/tvm/pull/2558#issuecomment-460902024","issue_url":"https://api.github.com/repos/apache/tvm/issues/2558","id":460902024,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MDkwMjAyNA==","user":{"login":"srkreddy1238","id":14215163,"node_id":"MDQ6VXNlcjE0MjE1MTYz","avatar_url":"https://avatars.githubusercontent.com/u/14215163?v=4","gravatar_id":"","url":"https://api.github.com/users/srkreddy1238","html_url":"https://github.com/srkreddy1238","followers_url":"https://api.github.com/users/srkreddy1238/followers","following_url":"https://api.github.com/users/srkreddy1238/following{/other_user}","gists_url":"https://api.github.com/users/srkreddy1238/gists{/gist_id}","starred_url":"https://api.github.com/users/srkreddy1238/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/srkreddy1238/subscriptions","organizations_url":"https://api.github.com/users/srkreddy1238/orgs","repos_url":"https://api.github.com/users/srkreddy1238/repos","events_url":"https://api.github.com/users/srkreddy1238/events{/privacy}","received_events_url":"https://api.github.com/users/srkreddy1238/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-06T05:02:43Z","updated_at":"2019-02-06T05:02:43Z","author_association":"CONTRIBUTOR","body":"@tqchen \r\nThe reported errors are specific to OSX version of golang-1.11 & not reproducible on Linux. Also we recommend golang-1.10 with TVM. I tried on Linux golang-1.11 and is not reproducible.\r\n\r\nThis PR address the lint errors which are good to have on any version.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/460902024/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/460964141","html_url":"https://github.com/apache/tvm/pull/2498#issuecomment-460964141","issue_url":"https://api.github.com/repos/apache/tvm/issues/2498","id":460964141,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MDk2NDE0MQ==","user":{"login":"sgrechanik-h","id":41160472,"node_id":"MDQ6VXNlcjQxMTYwNDcy","avatar_url":"https://avatars.githubusercontent.com/u/41160472?v=4","gravatar_id":"","url":"https://api.github.com/users/sgrechanik-h","html_url":"https://github.com/sgrechanik-h","followers_url":"https://api.github.com/users/sgrechanik-h/followers","following_url":"https://api.github.com/users/sgrechanik-h/following{/other_user}","gists_url":"https://api.github.com/users/sgrechanik-h/gists{/gist_id}","starred_url":"https://api.github.com/users/sgrechanik-h/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sgrechanik-h/subscriptions","organizations_url":"https://api.github.com/users/sgrechanik-h/orgs","repos_url":"https://api.github.com/users/sgrechanik-h/repos","events_url":"https://api.github.com/users/sgrechanik-h/events{/privacy}","received_events_url":"https://api.github.com/users/sgrechanik-h/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-06T09:57:00Z","updated_at":"2019-02-06T09:57:00Z","author_association":"CONTRIBUTOR","body":"@kaitingwang This is a problem of TVM. At some point during or immediately after scheduling, TVM analyzes bounds of tensor arguments and expands bounds of tensors if it thinks that out-of-bounds might happen. However, bound analysis is difficult, and this sometimes results in overapproximation. In this case TVM couldn't properly infer the bounds from the conditions (or it may have ignored the conditions completely, I'm not sure). I tried to fix this behavior of TVM once, but failed: https://github.com/dmlc/tvm/pull/2104\r\n\r\n(Note that there is another problem with this example: the identity tensor was not inlined, although this would have been very beneficial. The reason is that I don't perform inlining of adjoints since in the case of gradients the adjoints are rarely sparse and inlining them results in worse performance. However, in the case of arbitrary Jacobians, like in this case, inlining of adjoints is necessary, so I have to think what to do about it.)","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/460964141/reactions","total_count":3,"+1":3,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/460965918","html_url":"https://github.com/apache/tvm/pull/2569#issuecomment-460965918","issue_url":"https://api.github.com/repos/apache/tvm/issues/2569","id":460965918,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MDk2NTkxOA==","user":{"login":"sergei-mironov","id":4477729,"node_id":"MDQ6VXNlcjQ0Nzc3Mjk=","avatar_url":"https://avatars.githubusercontent.com/u/4477729?v=4","gravatar_id":"","url":"https://api.github.com/users/sergei-mironov","html_url":"https://github.com/sergei-mironov","followers_url":"https://api.github.com/users/sergei-mironov/followers","following_url":"https://api.github.com/users/sergei-mironov/following{/other_user}","gists_url":"https://api.github.com/users/sergei-mironov/gists{/gist_id}","starred_url":"https://api.github.com/users/sergei-mironov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sergei-mironov/subscriptions","organizations_url":"https://api.github.com/users/sergei-mironov/orgs","repos_url":"https://api.github.com/users/sergei-mironov/repos","events_url":"https://api.github.com/users/sergei-mironov/events{/privacy}","received_events_url":"https://api.github.com/users/sergei-mironov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-06T10:02:36Z","updated_at":"2019-02-06T10:02:36Z","author_association":"CONTRIBUTOR","body":"Looks like an important tool. Could you please also add a test or example demonstrating how it may be used?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/460965918/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/461038936","html_url":"https://github.com/apache/tvm/issues/2570#issuecomment-461038936","issue_url":"https://api.github.com/repos/apache/tvm/issues/2570","id":461038936,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MTAzODkzNg==","user":{"login":"Ravenwater","id":466641,"node_id":"MDQ6VXNlcjQ2NjY0MQ==","avatar_url":"https://avatars.githubusercontent.com/u/466641?v=4","gravatar_id":"","url":"https://api.github.com/users/Ravenwater","html_url":"https://github.com/Ravenwater","followers_url":"https://api.github.com/users/Ravenwater/followers","following_url":"https://api.github.com/users/Ravenwater/following{/other_user}","gists_url":"https://api.github.com/users/Ravenwater/gists{/gist_id}","starred_url":"https://api.github.com/users/Ravenwater/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Ravenwater/subscriptions","organizations_url":"https://api.github.com/users/Ravenwater/orgs","repos_url":"https://api.github.com/users/Ravenwater/repos","events_url":"https://api.github.com/users/Ravenwater/events{/privacy}","received_events_url":"https://api.github.com/users/Ravenwater/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-06T14:19:39Z","updated_at":"2019-02-06T14:19:39Z","author_association":"NONE","body":"We need more of these efforts to give this important path a work out and make it rock solid. If the simplest of examples don't work, there will be no adoption.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/461038936/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/461064095","html_url":"https://github.com/apache/tvm/issues/2563#issuecomment-461064095","issue_url":"https://api.github.com/repos/apache/tvm/issues/2563","id":461064095,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MTA2NDA5NQ==","user":{"login":"Mutinifni","id":6500702,"node_id":"MDQ6VXNlcjY1MDA3MDI=","avatar_url":"https://avatars.githubusercontent.com/u/6500702?v=4","gravatar_id":"","url":"https://api.github.com/users/Mutinifni","html_url":"https://github.com/Mutinifni","followers_url":"https://api.github.com/users/Mutinifni/followers","following_url":"https://api.github.com/users/Mutinifni/following{/other_user}","gists_url":"https://api.github.com/users/Mutinifni/gists{/gist_id}","starred_url":"https://api.github.com/users/Mutinifni/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Mutinifni/subscriptions","organizations_url":"https://api.github.com/users/Mutinifni/orgs","repos_url":"https://api.github.com/users/Mutinifni/repos","events_url":"https://api.github.com/users/Mutinifni/events{/privacy}","received_events_url":"https://api.github.com/users/Mutinifni/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-06T15:27:00Z","updated_at":"2019-02-06T15:27:00Z","author_association":"CONTRIBUTOR","body":"I think our eventual goal might also be to target many-core systems with wimpy cores, although, we were not thinking about as many as 1M cores. From TVM's perspective, that would still require a multithreaded code generator suitable for the target backend. The current gcc codegen, for example, does not have multithreaded support.\r\n\r\nThanks for pointing to the forums discussion -- I really like the aspects you've brought up there! I am not familiar with the VTA implementation / interface in TVM, but I think defining a debug protocol and a notification mechanism between devices would also be useful to make μTVM more generic.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/461064095/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/461094101","html_url":"https://github.com/apache/tvm/issues/2570#issuecomment-461094101","issue_url":"https://api.github.com/repos/apache/tvm/issues/2570","id":461094101,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MTA5NDEwMQ==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-06T16:42:35Z","updated_at":"2019-02-06T16:42:35Z","author_association":"MEMBER","body":"Let us move the discussion to https://discuss.tvm.ai/t/vta-running-tensorflow-code-in-vta-simulation-gives-c-runtime-api-cc-error/1620/1","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/461094101/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/461123013","html_url":"https://github.com/apache/tvm/issues/2563#issuecomment-461123013","issue_url":"https://api.github.com/repos/apache/tvm/issues/2563","id":461123013,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MTEyMzAxMw==","user":{"login":"Ravenwater","id":466641,"node_id":"MDQ6VXNlcjQ2NjY0MQ==","avatar_url":"https://avatars.githubusercontent.com/u/466641?v=4","gravatar_id":"","url":"https://api.github.com/users/Ravenwater","html_url":"https://github.com/Ravenwater","followers_url":"https://api.github.com/users/Ravenwater/followers","following_url":"https://api.github.com/users/Ravenwater/following{/other_user}","gists_url":"https://api.github.com/users/Ravenwater/gists{/gist_id}","starred_url":"https://api.github.com/users/Ravenwater/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Ravenwater/subscriptions","organizations_url":"https://api.github.com/users/Ravenwater/orgs","repos_url":"https://api.github.com/users/Ravenwater/repos","events_url":"https://api.github.com/users/Ravenwater/events{/privacy}","received_events_url":"https://api.github.com/users/Ravenwater/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-06T18:00:12Z","updated_at":"2019-02-06T18:00:12Z","author_association":"NONE","body":"@Mutinifni I am very glad you are working on μTVM. As we are both looking towards a hardware accelerated VTA backend, we are going to face the same issues. The architecture spec is going to be the vehicle that allows us to collaborate and solve these issues synergistically. The communication of the IR and its attributes to a remote hardware accelerator is going to be one such issue. Let's work together and enumerate the requirements we have and RFC the lists for the community to weight in.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/461123013/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/461133098","html_url":"https://github.com/apache/tvm/pull/2489#issuecomment-461133098","issue_url":"https://api.github.com/repos/apache/tvm/issues/2489","id":461133098,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MTEzMzA5OA==","user":{"login":"zhiics","id":5145158,"node_id":"MDQ6VXNlcjUxNDUxNTg=","avatar_url":"https://avatars.githubusercontent.com/u/5145158?v=4","gravatar_id":"","url":"https://api.github.com/users/zhiics","html_url":"https://github.com/zhiics","followers_url":"https://api.github.com/users/zhiics/followers","following_url":"https://api.github.com/users/zhiics/following{/other_user}","gists_url":"https://api.github.com/users/zhiics/gists{/gist_id}","starred_url":"https://api.github.com/users/zhiics/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zhiics/subscriptions","organizations_url":"https://api.github.com/users/zhiics/orgs","repos_url":"https://api.github.com/users/zhiics/repos","events_url":"https://api.github.com/users/zhiics/events{/privacy}","received_events_url":"https://api.github.com/users/zhiics/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-06T18:27:37Z","updated_at":"2019-02-06T18:27:37Z","author_association":"MEMBER","body":"I only have some minor comments about the PR.\r\n\r\nBut I do have one concern about adding AST nodes/types because it would affect most relay passes. I see that some passes are modified correspondingly, but how about others such as memory planning and forward rewriting, etc?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/461133098/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/461170291","html_url":"https://github.com/apache/tvm/pull/2489#issuecomment-461170291","issue_url":"https://api.github.com/repos/apache/tvm/issues/2489","id":461170291,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MTE3MDI5MQ==","user":{"login":"MarisaKirisame","id":3397377,"node_id":"MDQ6VXNlcjMzOTczNzc=","avatar_url":"https://avatars.githubusercontent.com/u/3397377?v=4","gravatar_id":"","url":"https://api.github.com/users/MarisaKirisame","html_url":"https://github.com/MarisaKirisame","followers_url":"https://api.github.com/users/MarisaKirisame/followers","following_url":"https://api.github.com/users/MarisaKirisame/following{/other_user}","gists_url":"https://api.github.com/users/MarisaKirisame/gists{/gist_id}","starred_url":"https://api.github.com/users/MarisaKirisame/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/MarisaKirisame/subscriptions","organizations_url":"https://api.github.com/users/MarisaKirisame/orgs","repos_url":"https://api.github.com/users/MarisaKirisame/repos","events_url":"https://api.github.com/users/MarisaKirisame/events{/privacy}","received_events_url":"https://api.github.com/users/MarisaKirisame/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-06T20:13:40Z","updated_at":"2019-02-06T20:13:40Z","author_association":"CONTRIBUTOR","body":"@zhiics how do you do memory planning on control flow? i imagine planning for reference will be similar.\r\nirregardless, i dont think it is much of a big deal - it is only used for higher order ad, and will be removed by a pass that try to fuse reference. if it cannot be fused it is pytorch style nlp model, and since tvm does not support them by now any improvement is good.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/461170291/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/461171077","html_url":"https://github.com/apache/tvm/pull/2565#issuecomment-461171077","issue_url":"https://api.github.com/repos/apache/tvm/issues/2565","id":461171077,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MTE3MTA3Nw==","user":{"login":"jdavies-huawei","id":46725573,"node_id":"MDQ6VXNlcjQ2NzI1NTcz","avatar_url":"https://avatars.githubusercontent.com/u/46725573?v=4","gravatar_id":"","url":"https://api.github.com/users/jdavies-huawei","html_url":"https://github.com/jdavies-huawei","followers_url":"https://api.github.com/users/jdavies-huawei/followers","following_url":"https://api.github.com/users/jdavies-huawei/following{/other_user}","gists_url":"https://api.github.com/users/jdavies-huawei/gists{/gist_id}","starred_url":"https://api.github.com/users/jdavies-huawei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jdavies-huawei/subscriptions","organizations_url":"https://api.github.com/users/jdavies-huawei/orgs","repos_url":"https://api.github.com/users/jdavies-huawei/repos","events_url":"https://api.github.com/users/jdavies-huawei/events{/privacy}","received_events_url":"https://api.github.com/users/jdavies-huawei/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-06T20:16:00Z","updated_at":"2019-02-06T20:16:00Z","author_association":"CONTRIBUTOR","body":"@ZihengJiang can you please review?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/461171077/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/461180484","html_url":"https://github.com/apache/tvm/issues/2562#issuecomment-461180484","issue_url":"https://api.github.com/repos/apache/tvm/issues/2562","id":461180484,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MTE4MDQ4NA==","user":{"login":"jroesch","id":696509,"node_id":"MDQ6VXNlcjY5NjUwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/696509?v=4","gravatar_id":"","url":"https://api.github.com/users/jroesch","html_url":"https://github.com/jroesch","followers_url":"https://api.github.com/users/jroesch/followers","following_url":"https://api.github.com/users/jroesch/following{/other_user}","gists_url":"https://api.github.com/users/jroesch/gists{/gist_id}","starred_url":"https://api.github.com/users/jroesch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jroesch/subscriptions","organizations_url":"https://api.github.com/users/jroesch/orgs","repos_url":"https://api.github.com/users/jroesch/repos","events_url":"https://api.github.com/users/jroesch/events{/privacy}","received_events_url":"https://api.github.com/users/jroesch/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-06T20:45:06Z","updated_at":"2019-02-06T20:45:06Z","author_association":"MEMBER","body":"@ajtulloch yes, there are a few basic ones committed to the repo, I will try to open a PR with multiple examples from level 1 this week. I've been busy prototyping other Relay features for training and execution which I hope to RFC in the coming weeks. \r\n\r\n@reminisce @grwlf I think it would be great if we could get default behavior for Relay, and if the generated gradient's performance isn't sufficient we can hand implement them. @tqchen what do you think about this approach? ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/461180484/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/461211880","html_url":"https://github.com/apache/tvm/issues/2571#issuecomment-461211880","issue_url":"https://api.github.com/repos/apache/tvm/issues/2571","id":461211880,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MTIxMTg4MA==","user":{"login":"Anthony-Mai","id":10949996,"node_id":"MDQ6VXNlcjEwOTQ5OTk2","avatar_url":"https://avatars.githubusercontent.com/u/10949996?v=4","gravatar_id":"","url":"https://api.github.com/users/Anthony-Mai","html_url":"https://github.com/Anthony-Mai","followers_url":"https://api.github.com/users/Anthony-Mai/followers","following_url":"https://api.github.com/users/Anthony-Mai/following{/other_user}","gists_url":"https://api.github.com/users/Anthony-Mai/gists{/gist_id}","starred_url":"https://api.github.com/users/Anthony-Mai/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Anthony-Mai/subscriptions","organizations_url":"https://api.github.com/users/Anthony-Mai/orgs","repos_url":"https://api.github.com/users/Anthony-Mai/repos","events_url":"https://api.github.com/users/Anthony-Mai/events{/privacy}","received_events_url":"https://api.github.com/users/Anthony-Mai/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-06T22:23:14Z","updated_at":"2019-02-06T22:23:26Z","author_association":"CONTRIBUTOR","body":"The Google C++ Style Guide explicitly says:\r\n- You may not use a using-directive to make all names from a namespace available.\r\n- Do not use Namespace aliases at namespace scope in header files except in explicitly marked internal-only namespaces, because anything imported into a namespace in a header file becomes part of the public API exported by that file.\r\n\r\nThat means never to use \"using namespace foo\" in any *.h or *.cpp file, and never to use \"using\" directive in any header file. Always move such \"using\" directives to source files.\r\n\r\nWe don't necessarily have to follow all Google C++ style guide. But they came to that conclusion due to worry of namespace pollution, and the same reason is legitimate here as well. So it should be fixed.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/461211880/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/461242855","html_url":"https://github.com/apache/tvm/issues/2571#issuecomment-461242855","issue_url":"https://api.github.com/repos/apache/tvm/issues/2571","id":461242855,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MTI0Mjg1NQ==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-07T00:24:53Z","updated_at":"2019-02-07T00:24:53Z","author_association":"MEMBER","body":"Thanks for bringing it up, I understand the cause of the confusion, given that we are moving toward NNVMv2(relay), I think we will just leave the name as it is for now.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/461242855/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/461243445","html_url":"https://github.com/apache/tvm/issues/2560#issuecomment-461243445","issue_url":"https://api.github.com/repos/apache/tvm/issues/2560","id":461243445,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MTI0MzQ0NQ==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-07T00:27:42Z","updated_at":"2019-02-07T00:27:42Z","author_association":"MEMBER","body":"Given that this is a discussion item, can you open a new thread in https://discuss.tvm.ai/? We can follow up in issues once we have an actionable item. My guess is that we can add some callback hooks to make this happen","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/461243445/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/461265646","html_url":"https://github.com/apache/tvm/pull/2572#issuecomment-461265646","issue_url":"https://api.github.com/repos/apache/tvm/issues/2572","id":461265646,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MTI2NTY0Ng==","user":{"login":"ZhennanQin","id":39290748,"node_id":"MDQ6VXNlcjM5MjkwNzQ4","avatar_url":"https://avatars.githubusercontent.com/u/39290748?v=4","gravatar_id":"","url":"https://api.github.com/users/ZhennanQin","html_url":"https://github.com/ZhennanQin","followers_url":"https://api.github.com/users/ZhennanQin/followers","following_url":"https://api.github.com/users/ZhennanQin/following{/other_user}","gists_url":"https://api.github.com/users/ZhennanQin/gists{/gist_id}","starred_url":"https://api.github.com/users/ZhennanQin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ZhennanQin/subscriptions","organizations_url":"https://api.github.com/users/ZhennanQin/orgs","repos_url":"https://api.github.com/users/ZhennanQin/repos","events_url":"https://api.github.com/users/ZhennanQin/events{/privacy}","received_events_url":"https://api.github.com/users/ZhennanQin/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-07T02:22:38Z","updated_at":"2019-02-07T02:22:38Z","author_association":"CONTRIBUTOR","body":"I will evalute the effect on mkldnn when CNY holiday ends on next Monday. For this PR itself, I suggest to implement an graph pass alternatively for removing cast with same dtype.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/461265646/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/461290213","html_url":"https://github.com/apache/tvm/pull/2492#issuecomment-461290213","issue_url":"https://api.github.com/repos/apache/tvm/issues/2492","id":461290213,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MTI5MDIxMw==","user":{"login":"MarisaKirisame","id":3397377,"node_id":"MDQ6VXNlcjMzOTczNzc=","avatar_url":"https://avatars.githubusercontent.com/u/3397377?v=4","gravatar_id":"","url":"https://api.github.com/users/MarisaKirisame","html_url":"https://github.com/MarisaKirisame","followers_url":"https://api.github.com/users/MarisaKirisame/followers","following_url":"https://api.github.com/users/MarisaKirisame/following{/other_user}","gists_url":"https://api.github.com/users/MarisaKirisame/gists{/gist_id}","starred_url":"https://api.github.com/users/MarisaKirisame/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/MarisaKirisame/subscriptions","organizations_url":"https://api.github.com/users/MarisaKirisame/orgs","repos_url":"https://api.github.com/users/MarisaKirisame/repos","events_url":"https://api.github.com/users/MarisaKirisame/events{/privacy}","received_events_url":"https://api.github.com/users/MarisaKirisame/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-07T05:09:03Z","updated_at":"2019-02-07T05:09:03Z","author_association":"CONTRIBUTOR","body":"@slyubomirsky recursion need pass manager. i will add it once it get in.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/461290213/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/461410811","html_url":"https://github.com/apache/tvm/issues/2535#issuecomment-461410811","issue_url":"https://api.github.com/repos/apache/tvm/issues/2535","id":461410811,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MTQxMDgxMQ==","user":{"login":"kevinthesun","id":15520525,"node_id":"MDQ6VXNlcjE1NTIwNTI1","avatar_url":"https://avatars.githubusercontent.com/u/15520525?v=4","gravatar_id":"","url":"https://api.github.com/users/kevinthesun","html_url":"https://github.com/kevinthesun","followers_url":"https://api.github.com/users/kevinthesun/followers","following_url":"https://api.github.com/users/kevinthesun/following{/other_user}","gists_url":"https://api.github.com/users/kevinthesun/gists{/gist_id}","starred_url":"https://api.github.com/users/kevinthesun/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kevinthesun/subscriptions","organizations_url":"https://api.github.com/users/kevinthesun/orgs","repos_url":"https://api.github.com/users/kevinthesun/repos","events_url":"https://api.github.com/users/kevinthesun/events{/privacy}","received_events_url":"https://api.github.com/users/kevinthesun/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-07T13:05:15Z","updated_at":"2019-02-07T13:06:41Z","author_association":"CONTRIBUTOR","body":"One implementation from pytorch: https://github.com/kuangliu/torchcv/blob/6291f3e1e4bbf6467fd6b1e79001d34a59481bb6/torchcv/utils/box.py#L88 It is similar to tf nms. tf and pytorch implementation returns a variable lengthindices of selected boxes. We can add an argument to choose return types. Keras nms has a different format of inputs. We need to do some preprocess while converting. The output format is the same as tam implementation.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/461410811/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/461497910","html_url":"https://github.com/apache/tvm/pull/2479#issuecomment-461497910","issue_url":"https://api.github.com/repos/apache/tvm/issues/2479","id":461497910,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MTQ5NzkxMA==","user":{"login":"Huyuwei","id":17470319,"node_id":"MDQ6VXNlcjE3NDcwMzE5","avatar_url":"https://avatars.githubusercontent.com/u/17470319?v=4","gravatar_id":"","url":"https://api.github.com/users/Huyuwei","html_url":"https://github.com/Huyuwei","followers_url":"https://api.github.com/users/Huyuwei/followers","following_url":"https://api.github.com/users/Huyuwei/following{/other_user}","gists_url":"https://api.github.com/users/Huyuwei/gists{/gist_id}","starred_url":"https://api.github.com/users/Huyuwei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Huyuwei/subscriptions","organizations_url":"https://api.github.com/users/Huyuwei/orgs","repos_url":"https://api.github.com/users/Huyuwei/repos","events_url":"https://api.github.com/users/Huyuwei/events{/privacy}","received_events_url":"https://api.github.com/users/Huyuwei/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-07T16:26:39Z","updated_at":"2019-02-07T16:26:39Z","author_association":"CONTRIBUTOR","body":"I can't reproduce the error in nnvm/from_keras.py on my local machine. nnvm/from_keras.py is good in the CI builds of other PRs. Not clear what is happening.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/461497910/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/461505323","html_url":"https://github.com/apache/tvm/pull/2572#issuecomment-461505323","issue_url":"https://api.github.com/repos/apache/tvm/issues/2572","id":461505323,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MTUwNTMyMw==","user":{"login":"ptrendx","id":8398980,"node_id":"MDQ6VXNlcjgzOTg5ODA=","avatar_url":"https://avatars.githubusercontent.com/u/8398980?v=4","gravatar_id":"","url":"https://api.github.com/users/ptrendx","html_url":"https://github.com/ptrendx","followers_url":"https://api.github.com/users/ptrendx/followers","following_url":"https://api.github.com/users/ptrendx/following{/other_user}","gists_url":"https://api.github.com/users/ptrendx/gists{/gist_id}","starred_url":"https://api.github.com/users/ptrendx/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ptrendx/subscriptions","organizations_url":"https://api.github.com/users/ptrendx/orgs","repos_url":"https://api.github.com/users/ptrendx/repos","events_url":"https://api.github.com/users/ptrendx/events{/privacy}","received_events_url":"https://api.github.com/users/ptrendx/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-07T16:45:38Z","updated_at":"2019-02-07T16:45:38Z","author_association":"MEMBER","body":"It is not only about casts with the same dtype - there may be other operations that can be treated as identity, e.g. pass through some types and change other. Currently they can't advertise itself as potential identities, which is a bug.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/461505323/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/461529286","html_url":"https://github.com/apache/tvm/issues/2535#issuecomment-461529286","issue_url":"https://api.github.com/repos/apache/tvm/issues/2535","id":461529286,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MTUyOTI4Ng==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-07T17:50:04Z","updated_at":"2019-02-07T17:50:04Z","author_association":"MEMBER","body":"Can we summarize all the argument names(keras, tf, proposed) and types at the RFC post?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/461529286/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/461608684","html_url":"https://github.com/apache/tvm/pull/2492#issuecomment-461608684","issue_url":"https://api.github.com/repos/apache/tvm/issues/2492","id":461608684,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MTYwODY4NA==","user":{"login":"slyubomirsky","id":5624871,"node_id":"MDQ6VXNlcjU2MjQ4NzE=","avatar_url":"https://avatars.githubusercontent.com/u/5624871?v=4","gravatar_id":"","url":"https://api.github.com/users/slyubomirsky","html_url":"https://github.com/slyubomirsky","followers_url":"https://api.github.com/users/slyubomirsky/followers","following_url":"https://api.github.com/users/slyubomirsky/following{/other_user}","gists_url":"https://api.github.com/users/slyubomirsky/gists{/gist_id}","starred_url":"https://api.github.com/users/slyubomirsky/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/slyubomirsky/subscriptions","organizations_url":"https://api.github.com/users/slyubomirsky/orgs","repos_url":"https://api.github.com/users/slyubomirsky/repos","events_url":"https://api.github.com/users/slyubomirsky/events{/privacy}","received_events_url":"https://api.github.com/users/slyubomirsky/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-07T21:50:25Z","updated_at":"2019-02-07T21:50:25Z","author_association":"CONTRIBUTOR","body":"What would the pass manager be needed to do?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/461608684/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/461694547","html_url":"https://github.com/apache/tvm/pull/2572#issuecomment-461694547","issue_url":"https://api.github.com/repos/apache/tvm/issues/2572","id":461694547,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MTY5NDU0Nw==","user":{"login":"ZhennanQin","id":39290748,"node_id":"MDQ6VXNlcjM5MjkwNzQ4","avatar_url":"https://avatars.githubusercontent.com/u/39290748?v=4","gravatar_id":"","url":"https://api.github.com/users/ZhennanQin","html_url":"https://github.com/ZhennanQin","followers_url":"https://api.github.com/users/ZhennanQin/followers","following_url":"https://api.github.com/users/ZhennanQin/following{/other_user}","gists_url":"https://api.github.com/users/ZhennanQin/gists{/gist_id}","starred_url":"https://api.github.com/users/ZhennanQin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ZhennanQin/subscriptions","organizations_url":"https://api.github.com/users/ZhennanQin/orgs","repos_url":"https://api.github.com/users/ZhennanQin/repos","events_url":"https://api.github.com/users/ZhennanQin/events{/privacy}","received_events_url":"https://api.github.com/users/ZhennanQin/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-08T05:24:27Z","updated_at":"2019-02-08T05:24:27Z","author_association":"CONTRIBUTOR","body":"From my point of view, cast shouldn't have identity attributes because for most of the usecase, cast will modify trunk data. It's abuse of using of identity for working around redundant operations. This should be implemented as a graph pass that detect and delete those redundant operations, including cast with same dtype, elewise_add with 0, relu on uint8, bn with kernel=[1,1] and stride=[1,1], etc.\r\n\r\nOtherwise, we have to add identity to all those operators, it's not maintainable. Also, identity can only ensure memory inplace between input and output. Extra check have to be added in each opeators to avoid the computation, making common usecase even slower. Another problem is, the memory copy between previous GPU operator and next identity CPU operator can't be avoided, making identity useless for this case. Overall, this is imperfect solution.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/461694547/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/461744556","html_url":"https://github.com/apache/tvm/pull/2493#issuecomment-461744556","issue_url":"https://api.github.com/repos/apache/tvm/issues/2493","id":461744556,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MTc0NDU1Ng==","user":{"login":"yongwww","id":10205827,"node_id":"MDQ6VXNlcjEwMjA1ODI3","avatar_url":"https://avatars.githubusercontent.com/u/10205827?v=4","gravatar_id":"","url":"https://api.github.com/users/yongwww","html_url":"https://github.com/yongwww","followers_url":"https://api.github.com/users/yongwww/followers","following_url":"https://api.github.com/users/yongwww/following{/other_user}","gists_url":"https://api.github.com/users/yongwww/gists{/gist_id}","starred_url":"https://api.github.com/users/yongwww/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yongwww/subscriptions","organizations_url":"https://api.github.com/users/yongwww/orgs","repos_url":"https://api.github.com/users/yongwww/repos","events_url":"https://api.github.com/users/yongwww/events{/privacy}","received_events_url":"https://api.github.com/users/yongwww/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-08T09:38:22Z","updated_at":"2019-02-08T09:38:22Z","author_association":"MEMBER","body":"@srkreddy1238 could you pls take a another look?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/461744556/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/461768766","html_url":"https://github.com/apache/tvm/pull/2493#issuecomment-461768766","issue_url":"https://api.github.com/repos/apache/tvm/issues/2493","id":461768766,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MTc2ODc2Ng==","user":{"login":"srkreddy1238","id":14215163,"node_id":"MDQ6VXNlcjE0MjE1MTYz","avatar_url":"https://avatars.githubusercontent.com/u/14215163?v=4","gravatar_id":"","url":"https://api.github.com/users/srkreddy1238","html_url":"https://github.com/srkreddy1238","followers_url":"https://api.github.com/users/srkreddy1238/followers","following_url":"https://api.github.com/users/srkreddy1238/following{/other_user}","gists_url":"https://api.github.com/users/srkreddy1238/gists{/gist_id}","starred_url":"https://api.github.com/users/srkreddy1238/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/srkreddy1238/subscriptions","organizations_url":"https://api.github.com/users/srkreddy1238/orgs","repos_url":"https://api.github.com/users/srkreddy1238/repos","events_url":"https://api.github.com/users/srkreddy1238/events{/privacy}","received_events_url":"https://api.github.com/users/srkreddy1238/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-08T11:07:39Z","updated_at":"2019-02-08T11:07:39Z","author_association":"CONTRIBUTOR","body":"@yzhliu there was a request to keep commit history for this PR.\r\nNot sure individual commits pass the CI. Please advice and handle the merging.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/461768766/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/461814676","html_url":"https://github.com/apache/tvm/issues/2562#issuecomment-461814676","issue_url":"https://api.github.com/repos/apache/tvm/issues/2562","id":461814676,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MTgxNDY3Ng==","user":{"login":"sergei-mironov","id":4477729,"node_id":"MDQ6VXNlcjQ0Nzc3Mjk=","avatar_url":"https://avatars.githubusercontent.com/u/4477729?v=4","gravatar_id":"","url":"https://api.github.com/users/sergei-mironov","html_url":"https://github.com/sergei-mironov","followers_url":"https://api.github.com/users/sergei-mironov/followers","following_url":"https://api.github.com/users/sergei-mironov/following{/other_user}","gists_url":"https://api.github.com/users/sergei-mironov/gists{/gist_id}","starred_url":"https://api.github.com/users/sergei-mironov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sergei-mironov/subscriptions","organizations_url":"https://api.github.com/users/sergei-mironov/orgs","repos_url":"https://api.github.com/users/sergei-mironov/repos","events_url":"https://api.github.com/users/sergei-mironov/events{/privacy}","received_events_url":"https://api.github.com/users/sergei-mironov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-08T14:11:09Z","updated_at":"2019-02-08T14:19:44Z","author_association":"CONTRIBUTOR","body":"@jroesch , dear all. We made a quick check of AD-Relay compatibility: For every relay operation from the above list, we (a) Look at its `FTVMCompute` attribute (b) determine which TOPI function corresponds to it and (c) Compare the gradients of this function  calculated by AD with their numerical estimations. The results are in the table below.\r\n\r\nAdditional notes:\r\n * Numerical check in this test may need adjustments, we saw rare random failures due to precision problems\r\n * Some functions run different implementations depending on parameters passed. We attempted to include the most common cases, but some combinations may be missing.\r\n * Checking the performance of all operations would require additional efforts, we don't do it now. \r\n * For cases with 'Integers gradients' comment:  we need to clarify the gradient semantics for such operations. One possible solutions is to just return zeros. But we think that it may be incorrect for some tasks.\r\n * To reproduce, apply #2498 to the 427bdcc26 commit of TVM and use the following [test](https://gist.github.com/grwlf/5abc1511b6aadd7c89e641d6e1460e41).\r\n\r\nPS  We think about writing TVM Python codegen to pretty-print TVM IR code. Does anybody work on it?\r\n\r\nLegend:\r\n * ![green](https://placehold.it/15/00CC00/000000?text=+) Supported, numerical check passed\r\n * ![yellow](https://placehold.it/15/ffff56/000000?text=+) Missing by accident/easy to add\r\n * ![orange](https://placehold.it/15/ff8000/000000?text=+) Need to think first\r\n * ![red](https://placehold.it/15/ff3333/000000?text=+) Need to debug\r\n * ![grey](https://placehold.it/15/C0C0C0/000000?text=+) Unable to check\r\n\r\n|Status | Name | Comment\r\n|:-----:|:-----|:-------\r\n|**Level 1**||\r\n|![orange](https://placehold.it/15/ff8000/000000?text=+)|tvm.relay.log|Currently we do not assert on negative values which may be incorrect\r\n|![yellow](https://placehold.it/15/ffff56/000000?text=+)|tvm.relay.sqrt|Missing by accident, easy to fix\r\n|![green](https://placehold.it/15/00CC00/000000?text=+)|tvm.relay.exp||\r\n|![green](https://placehold.it/15/00CC00/000000?text=+)|tvm.relay.sigmoid||\r\n|![green](https://placehold.it/15/00CC00/000000?text=+)|tvm.relay.add||\r\n|![green](https://placehold.it/15/00CC00/000000?text=+)|tvm.relay.substract||\r\n|![green](https://placehold.it/15/00CC00/000000?text=+)|tvm.relay.multiply||\r\n|![green](https://placehold.it/15/00CC00/000000?text=+)|tvm.relay.divide||\r\n|![orange](https://placehold.it/15/ff8000/000000?text=+)|tvm.relay.mod|:1234: Integer gradients\r\n|![green](https://placehold.it/15/00CC00/000000?text=+)|tvm.relay.tanh||\r\n|![green](https://placehold.it/15/00CC00/000000?text=+)|tvm.relay.concatenate||\r\n|![green](https://placehold.it/15/00CC00/000000?text=+)|tvm.relay.expand_dims||\r\n|![green](https://placehold.it/15/00CC00/000000?text=+)|tvm.relay.softmax||\r\n|![green](https://placehold.it/15/00CC00/000000?text=+)|tvm.relay.log_softmax||\r\n|![green](https://placehold.it/15/00CC00/000000?text=+)|tvm.relay.relu||\r\n|![grey](https://placehold.it/15/C0C0C0/000000?text=+)|tvm.relay.dropout|:computer: Missing FTVMCompute attribute\r\n|![grey](https://placehold.it/15/C0C0C0/000000?text=+)|tvm.relay.batch_norm|:computer: Missing FTVMCompute attribute\r\n|![green](https://placehold.it/15/00CC00/000000?text=+)|tvm.relay.bias_add||\r\n|**Level 2**||\r\n|![green](https://placehold.it/15/00CC00/000000?text=+)|tvm.relay.conv2d||\r\n|![green](https://placehold.it/15/00CC00/000000?text=+)|tvm.relay.conv2d_transpose||\r\n|![green](https://placehold.it/15/00CC00/000000?text=+)|tvm.relay.dense||\r\n|![green](https://placehold.it/15/00CC00/000000?text=+)|tvm.relay.max_pool||\r\n|![green](https://placehold.it/15/00CC00/000000?text=+)|tvm.relay.avg_pool||\r\n|![green](https://placehold.it/15/00CC00/000000?text=+)|tvm.relay.global_max_pool||\r\n|![green](https://placehold.it/15/00CC00/000000?text=+)|tvm.relay.global_avg_pool||\r\n|![green](https://placehold.it/15/00CC00/000000?text=+)|tvm.relay.upsampling||\r\n|![green](https://placehold.it/15/00CC00/000000?text=+)|tvm.relay.flatten||\r\n|![green](https://placehold.it/15/00CC00/000000?text=+)|tvm.relay.pad||\r\n|![yellow](https://placehold.it/15/ffff56/000000?text=+)|tvm.relay.lrn|Blocked by missing pow intrinsic\r\n|![yellow](https://placehold.it/15/ffff56/000000?text=+)|tvm.relay.l2_normalize|Blocked by missing sqrt intrinsic\r\n|![grey](https://placehold.it/15/C0C0C0/000000?text=+)|tvm.relay.conv2d_winograd_without_weight_transform|Missing TOPI implementation\r\n|![green](https://placehold.it/15/00CC00/000000?text=+)|tvm.relay.conv2d_winograd_weight_transform||\r\n|**Level 3**||\r\n|![green](https://placehold.it/15/00CC00/000000?text=+)|tvm.relay.leaky_relu||\r\n|![green](https://placehold.it/15/00CC00/000000?text=+)|tvm.relay.prelu||\r\n|![green](https://placehold.it/15/00CC00/000000?text=+)|tvm.relay.reshape||\r\n|![green](https://placehold.it/15/00CC00/000000?text=+)|tvm.relay.reshape_like||\r\n|![green](https://placehold.it/15/00CC00/000000?text=+)|tvm.relay.copy_identity||\r\n|![green](https://placehold.it/15/00CC00/000000?text=+)|tvm.relay.transpose||\r\n|![green](https://placehold.it/15/00CC00/000000?text=+)|tvm.relay.squeeze||\r\n|![orange](https://placehold.it/15/ff8000/000000?text=+)|tvm.relay.floor|:1234: Integer gradients\r\n|![orange](https://placehold.it/15/ff8000/000000?text=+)|tvm.relay.ceil|:1234: Integer gradients\r\n|![orange](https://placehold.it/15/ff8000/000000?text=+)|tvm.relay.trunc|:1234: Integer gradients\r\n|![red](https://placehold.it/15/ff3333/000000?text=+)|tvm.relay.clip|Missing Not operation\r\n|![orange](https://placehold.it/15/ff8000/000000?text=+)|tvm.relay.round|:1234: Integer gradients\r\n|![green](https://placehold.it/15/00CC00/000000?text=+)|tvm.relay.abs||\r\n|![green](https://placehold.it/15/00CC00/000000?text=+)|tvm.relay.negative||\r\n|![green](https://placehold.it/15/00CC00/000000?text=+)|tvm.relay.take||\r\n|![green](https://placehold.it/15/00CC00/000000?text=+)|tvm.relay.zeros||\r\n|![green](https://placehold.it/15/00CC00/000000?text=+)|tvm.relay.zeros_like||\r\n|![green](https://placehold.it/15/00CC00/000000?text=+)|tvm.relay.ones||\r\n|![green](https://placehold.it/15/00CC00/000000?text=+)|tvm.relay.ones_like||\r\n|![green](https://placehold.it/15/00CC00/000000?text=+)|tvm.relay.full||\r\n|![green](https://placehold.it/15/00CC00/000000?text=+)|tvm.relay.full_like||\r\n|![grey](https://placehold.it/15/C0C0C0/000000?text=+)|tvm.relay.cast|Currently, differentiate returns zeros for non-float32 inputs\r\n|![green](https://placehold.it/15/00CC00/000000?text=+)|tvm.relay.split||\r\n|**Level 4**||\r\n|![orange](https://placehold.it/15/ff8000/000000?text=+)|tvm.relay.right_shift|:1234: Integer gradients\r\n|![orange](https://placehold.it/15/ff8000/000000?text=+)|tvm.relay.left_shift|:1234: Integer gradients\r\n|![orange](https://placehold.it/15/ff8000/000000?text=+)|tvm.relay.equal|:1234: Integer gradients\r\n|![orange](https://placehold.it/15/ff8000/000000?text=+)|tvm.relay.not_equal|:1234: Integer gradients\r\n|![orange](https://placehold.it/15/ff8000/000000?text=+)|tvm.relay.greater|:1234: Integer gradients\r\n|![orange](https://placehold.it/15/ff8000/000000?text=+)|tvm.relay.greater_equal|:1234: Integer gradients\r\n|![orange](https://placehold.it/15/ff8000/000000?text=+)|tvm.relay.less|:1234: Integer gradients\r\n|![orange](https://placehold.it/15/ff8000/000000?text=+)|tvm.relay.less_equal|:1234: Integer gradients\r\n|![green](https://placehold.it/15/00CC00/000000?text=+)|tvm.relay.maximum||\r\n|![green](https://placehold.it/15/00CC00/000000?text=+)|tvm.relay.minimum||\r\n|![yellow](https://placehold.it/15/ffff56/000000?text=+)|tvm.relay.power|Missing by accident, should be easy to fix.\r\n|![grey](https://placehold.it/15/C0C0C0/000000?text=+)|tvm.relay.where|:snake: Missing Python API\r\n|![red](https://placehold.it/15/ff3333/000000?text=+)|tvm.relay.argmax|\r\n|![red](https://placehold.it/15/ff3333/000000?text=+)|tvm.relay.argmin|\r\n|![green](https://placehold.it/15/00CC00/000000?text=+)|tvm.relay.sum||\r\n|![green](https://placehold.it/15/00CC00/000000?text=+)|tvm.relay.max||\r\n|![green](https://placehold.it/15/00CC00/000000?text=+)|tvm.relay.min||\r\n|![green](https://placehold.it/15/00CC00/000000?text=+)|tvm.relay.mean||\r\n|![green](https://placehold.it/15/00CC00/000000?text=+)|tvm.relay.prod||\r\n|![green](https://placehold.it/15/00CC00/000000?text=+)|tvm.relay.strided_slice||\r\n|![green](https://placehold.it/15/00CC00/000000?text=+)|tvm.relay.broadcast_to||\r\n|**Level 5**||\r\n|![orange](https://placehold.it/15/ff8000/000000?text=+)|tvm.relay.resize|Blocked by missing floor intrinsic\r\n|![red](https://placehold.it/15/ff3333/000000?text=+)|tvm.relay.multibox_prior|\r\n|![red](https://placehold.it/15/ff3333/000000?text=+)|tvm.relay.multibox_transform_loc|\r\n|![red](https://placehold.it/15/ff3333/000000?text=+)|tvm.relay.nms|\r\n|**Level 10**||\r\n|![green](https://placehold.it/15/00CC00/000000?text=+)|tvm.relay.broadcast_to_like||\r\n|![grey](https://placehold.it/15/C0C0C0/000000?text=+)|tvm.relay.collapse_sum_like|:snake: Missing Python API\r\n|![green](https://placehold.it/15/00CC00/000000?text=+)|tvm.relay.slice_like||\r\n|![grey](https://placehold.it/15/C0C0C0/000000?text=+)|tvm.relay.layout_transform|:snake: Missing Python API\r\n|![grey](https://placehold.it/15/C0C0C0/000000?text=+)|tvm.relay.device_copy|:computer: Missing FTVMCompute attribute\r\n|![grey](https://placehold.it/15/C0C0C0/000000?text=+)|tvm.relay.on_device|:computer: Missing FTVMCompute attribute\r\n","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/461814676/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/461880460","html_url":"https://github.com/apache/tvm/pull/2572#issuecomment-461880460","issue_url":"https://api.github.com/repos/apache/tvm/issues/2572","id":461880460,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MTg4MDQ2MA==","user":{"login":"ptrendx","id":8398980,"node_id":"MDQ6VXNlcjgzOTg5ODA=","avatar_url":"https://avatars.githubusercontent.com/u/8398980?v=4","gravatar_id":"","url":"https://api.github.com/users/ptrendx","html_url":"https://github.com/ptrendx","followers_url":"https://api.github.com/users/ptrendx/followers","following_url":"https://api.github.com/users/ptrendx/following{/other_user}","gists_url":"https://api.github.com/users/ptrendx/gists{/gist_id}","starred_url":"https://api.github.com/users/ptrendx/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ptrendx/subscriptions","organizations_url":"https://api.github.com/users/ptrendx/orgs","repos_url":"https://api.github.com/users/ptrendx/repos","events_url":"https://api.github.com/users/ptrendx/events{/privacy}","received_events_url":"https://api.github.com/users/ptrendx/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-08T17:26:55Z","updated_at":"2019-02-08T17:26:55Z","author_association":"MEMBER","body":"I will address both of your comments here.\r\n\r\nMost of the operations you listed are actually impossible to be handled by the graph pass because e.g. add with 0 depends on the data passed to the operator, which graph pass does not have access to. The decision to skip the computation has to be done inside those operators in that case.\r\nAdding graph pass which needs to know about all those operations (and which operates on names of the operators which could change) is just as problematic to scale as handling the cases inside the operators. The \"making common usecase even slower\" assessment is wrong too because e.g. in Gluon, which I would argue is a pretty common usecase of NNVM, autograd needs to make the gradient graph every single iteration. Adding full graph pass to that is much more heavy weight than a simple `if(dtypes are the same && req == kWriteInplace)` in the operator.\r\n\r\nFor the relu case - for it to be able to claim that it is an identity, it would need to know the type of its input (to ensure it is some unsigned integral type), which it can't do in the current architecture of NNVM. It still can say that it wants to be in place and, if there is no other node using its inputs, it will get `kWriteInplace`, which, using the same type of `if` statement at runtime, enables it to skip the computation.\r\n\r\nMaking the check for both inplace and inplaceidentity more loose in your PR (instead of just inplace) made FInplaceIdentity usable only by reshape and its variants(flatten and expand_dims). This does not make sense.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/461880460/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/461891959","html_url":"https://github.com/apache/tvm/issues/2562#issuecomment-461891959","issue_url":"https://api.github.com/repos/apache/tvm/issues/2562","id":461891959,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MTg5MTk1OQ==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-08T18:03:26Z","updated_at":"2019-02-08T18:03:26Z","author_association":"MEMBER","body":"While it is great to have a tensor expression gradient support. I recommend we provide the primal gradient in the form of relay operators, at this moment.\r\n\r\nThe main reason is that the relay-> relay transformation and makes it easier to do follow up analysis and transformations in relay, it also makes sure that each op can generate different variants easily(winograd, spatial pack for conv2d).\r\n\r\nThis does not eliminate the value of expression level gradient though, as they could be nice complementary when a user define custom op, and as a topic of research in the long run, if integrated properly with relay\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/461891959/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/461899409","html_url":"https://github.com/apache/tvm/pull/2575#issuecomment-461899409","issue_url":"https://api.github.com/repos/apache/tvm/issues/2575","id":461899409,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MTg5OTQwOQ==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-08T18:29:00Z","updated_at":"2019-02-08T18:29:00Z","author_association":"MEMBER","body":"@junrushao1994 can you help to take a look and make some comments? in particular, it would really be awesome if we can come up with an example in the context of deep learning.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/461899409/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/461899720","html_url":"https://github.com/apache/tvm/pull/2575#issuecomment-461899720","issue_url":"https://api.github.com/repos/apache/tvm/issues/2575","id":461899720,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MTg5OTcyMA==","user":{"login":"junrushao","id":22515877,"node_id":"MDQ6VXNlcjIyNTE1ODc3","avatar_url":"https://avatars.githubusercontent.com/u/22515877?v=4","gravatar_id":"","url":"https://api.github.com/users/junrushao","html_url":"https://github.com/junrushao","followers_url":"https://api.github.com/users/junrushao/followers","following_url":"https://api.github.com/users/junrushao/following{/other_user}","gists_url":"https://api.github.com/users/junrushao/gists{/gist_id}","starred_url":"https://api.github.com/users/junrushao/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/junrushao/subscriptions","organizations_url":"https://api.github.com/users/junrushao/orgs","repos_url":"https://api.github.com/users/junrushao/repos","events_url":"https://api.github.com/users/junrushao/events{/privacy}","received_events_url":"https://api.github.com/users/junrushao/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-08T18:29:55Z","updated_at":"2019-02-08T18:29:55Z","author_association":"MEMBER","body":"Sure","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/461899720/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/461911128","html_url":"https://github.com/apache/tvm/pull/2575#issuecomment-461911128","issue_url":"https://api.github.com/repos/apache/tvm/issues/2575","id":461911128,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MTkxMTEyOA==","user":{"login":"junrushao","id":22515877,"node_id":"MDQ6VXNlcjIyNTE1ODc3","avatar_url":"https://avatars.githubusercontent.com/u/22515877?v=4","gravatar_id":"","url":"https://api.github.com/users/junrushao","html_url":"https://github.com/junrushao","followers_url":"https://api.github.com/users/junrushao/followers","following_url":"https://api.github.com/users/junrushao/following{/other_user}","gists_url":"https://api.github.com/users/junrushao/gists{/gist_id}","starred_url":"https://api.github.com/users/junrushao/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/junrushao/subscriptions","organizations_url":"https://api.github.com/users/junrushao/orgs","repos_url":"https://api.github.com/users/junrushao/repos","events_url":"https://api.github.com/users/junrushao/events{/privacy}","received_events_url":"https://api.github.com/users/junrushao/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-08T19:06:31Z","updated_at":"2019-02-08T19:06:31Z","author_association":"MEMBER","body":"As for an example in the context of deep learning, we think a bidirectional sequence encoder would be great. What do you guys think of the 4 examples used in dynet's auto batching paper? [Link](https://papers.nips.cc/paper/6986-on-the-fly-operation-batching-in-dynamic-computation-graphs.pdf), Section 4.2.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/461911128/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/461931311","html_url":"https://github.com/apache/tvm/pull/2575#issuecomment-461931311","issue_url":"https://api.github.com/repos/apache/tvm/issues/2575","id":461931311,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MTkzMTMxMQ==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-08T20:10:25Z","updated_at":"2019-02-08T20:10:25Z","author_association":"MEMBER","body":"@junrushao1994 can you write a simple code snippet in the context of the doc?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/461931311/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/461955356","html_url":"https://github.com/apache/tvm/pull/2575#issuecomment-461955356","issue_url":"https://api.github.com/repos/apache/tvm/issues/2575","id":461955356,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MTk1NTM1Ng==","user":{"login":"slyubomirsky","id":5624871,"node_id":"MDQ6VXNlcjU2MjQ4NzE=","avatar_url":"https://avatars.githubusercontent.com/u/5624871?v=4","gravatar_id":"","url":"https://api.github.com/users/slyubomirsky","html_url":"https://github.com/slyubomirsky","followers_url":"https://api.github.com/users/slyubomirsky/followers","following_url":"https://api.github.com/users/slyubomirsky/following{/other_user}","gists_url":"https://api.github.com/users/slyubomirsky/gists{/gist_id}","starred_url":"https://api.github.com/users/slyubomirsky/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/slyubomirsky/subscriptions","organizations_url":"https://api.github.com/users/slyubomirsky/orgs","repos_url":"https://api.github.com/users/slyubomirsky/repos","events_url":"https://api.github.com/users/slyubomirsky/events{/privacy}","received_events_url":"https://api.github.com/users/slyubomirsky/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-08T21:37:30Z","updated_at":"2019-02-08T21:37:30Z","author_association":"CONTRIBUTOR","body":"I'll read it over.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/461955356/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/461956265","html_url":"https://github.com/apache/tvm/pull/2575#issuecomment-461956265","issue_url":"https://api.github.com/repos/apache/tvm/issues/2575","id":461956265,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MTk1NjI2NQ==","user":{"login":"slyubomirsky","id":5624871,"node_id":"MDQ6VXNlcjU2MjQ4NzE=","avatar_url":"https://avatars.githubusercontent.com/u/5624871?v=4","gravatar_id":"","url":"https://api.github.com/users/slyubomirsky","html_url":"https://github.com/slyubomirsky","followers_url":"https://api.github.com/users/slyubomirsky/followers","following_url":"https://api.github.com/users/slyubomirsky/following{/other_user}","gists_url":"https://api.github.com/users/slyubomirsky/gists{/gist_id}","starred_url":"https://api.github.com/users/slyubomirsky/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/slyubomirsky/subscriptions","organizations_url":"https://api.github.com/users/slyubomirsky/orgs","repos_url":"https://api.github.com/users/slyubomirsky/repos","events_url":"https://api.github.com/users/slyubomirsky/events{/privacy}","received_events_url":"https://api.github.com/users/slyubomirsky/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-08T21:40:40Z","updated_at":"2019-02-08T21:40:40Z","author_association":"CONTRIBUTOR","body":"Tagging reviewers from the ADT PR to have a look at these docs: @zhiics @wweic ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/461956265/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/461958087","html_url":"https://github.com/apache/tvm/pull/2575#issuecomment-461958087","issue_url":"https://api.github.com/repos/apache/tvm/issues/2575","id":461958087,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MTk1ODA4Nw==","user":{"login":"zhiics","id":5145158,"node_id":"MDQ6VXNlcjUxNDUxNTg=","avatar_url":"https://avatars.githubusercontent.com/u/5145158?v=4","gravatar_id":"","url":"https://api.github.com/users/zhiics","html_url":"https://github.com/zhiics","followers_url":"https://api.github.com/users/zhiics/followers","following_url":"https://api.github.com/users/zhiics/following{/other_user}","gists_url":"https://api.github.com/users/zhiics/gists{/gist_id}","starred_url":"https://api.github.com/users/zhiics/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zhiics/subscriptions","organizations_url":"https://api.github.com/users/zhiics/orgs","repos_url":"https://api.github.com/users/zhiics/repos","events_url":"https://api.github.com/users/zhiics/events{/privacy}","received_events_url":"https://api.github.com/users/zhiics/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-08T21:47:29Z","updated_at":"2019-02-08T21:47:29Z","author_association":"MEMBER","body":"@slyubomirsky I will read it over the weekend.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/461958087/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/461958326","html_url":"https://github.com/apache/tvm/pull/2442#issuecomment-461958326","issue_url":"https://api.github.com/repos/apache/tvm/issues/2442","id":461958326,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MTk1ODMyNg==","user":{"login":"slyubomirsky","id":5624871,"node_id":"MDQ6VXNlcjU2MjQ4NzE=","avatar_url":"https://avatars.githubusercontent.com/u/5624871?v=4","gravatar_id":"","url":"https://api.github.com/users/slyubomirsky","html_url":"https://github.com/slyubomirsky","followers_url":"https://api.github.com/users/slyubomirsky/followers","following_url":"https://api.github.com/users/slyubomirsky/following{/other_user}","gists_url":"https://api.github.com/users/slyubomirsky/gists{/gist_id}","starred_url":"https://api.github.com/users/slyubomirsky/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/slyubomirsky/subscriptions","organizations_url":"https://api.github.com/users/slyubomirsky/orgs","repos_url":"https://api.github.com/users/slyubomirsky/repos","events_url":"https://api.github.com/users/slyubomirsky/events{/privacy}","received_events_url":"https://api.github.com/users/slyubomirsky/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-08T21:48:20Z","updated_at":"2019-02-08T21:48:20Z","author_association":"CONTRIBUTOR","body":"@wweic @zhiics @jroesch Any further thoughts on the outstanding questions?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/461958326/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/461985104","html_url":"https://github.com/apache/tvm/pull/2492#issuecomment-461985104","issue_url":"https://api.github.com/repos/apache/tvm/issues/2492","id":461985104,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MTk4NTEwNA==","user":{"login":"MarisaKirisame","id":3397377,"node_id":"MDQ6VXNlcjMzOTczNzc=","avatar_url":"https://avatars.githubusercontent.com/u/3397377?v=4","gravatar_id":"","url":"https://api.github.com/users/MarisaKirisame","html_url":"https://github.com/MarisaKirisame","followers_url":"https://api.github.com/users/MarisaKirisame/followers","following_url":"https://api.github.com/users/MarisaKirisame/following{/other_user}","gists_url":"https://api.github.com/users/MarisaKirisame/gists{/gist_id}","starred_url":"https://api.github.com/users/MarisaKirisame/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/MarisaKirisame/subscriptions","organizations_url":"https://api.github.com/users/MarisaKirisame/orgs","repos_url":"https://api.github.com/users/MarisaKirisame/repos","events_url":"https://api.github.com/users/MarisaKirisame/events{/privacy}","received_events_url":"https://api.github.com/users/MarisaKirisame/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-08T23:45:21Z","updated_at":"2019-02-08T23:45:21Z","author_association":"CONTRIBUTOR","body":"pass manager will apply a pass into a golbalvar. somehow fuse_ops cant handle recursion without it.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/461985104/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/461992853","html_url":"https://github.com/apache/tvm/pull/2577#issuecomment-461992853","issue_url":"https://api.github.com/repos/apache/tvm/issues/2577","id":461992853,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MTk5Mjg1Mw==","user":{"login":"abergeron","id":1002504,"node_id":"MDQ6VXNlcjEwMDI1MDQ=","avatar_url":"https://avatars.githubusercontent.com/u/1002504?v=4","gravatar_id":"","url":"https://api.github.com/users/abergeron","html_url":"https://github.com/abergeron","followers_url":"https://api.github.com/users/abergeron/followers","following_url":"https://api.github.com/users/abergeron/following{/other_user}","gists_url":"https://api.github.com/users/abergeron/gists{/gist_id}","starred_url":"https://api.github.com/users/abergeron/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/abergeron/subscriptions","organizations_url":"https://api.github.com/users/abergeron/orgs","repos_url":"https://api.github.com/users/abergeron/repos","events_url":"https://api.github.com/users/abergeron/events{/privacy}","received_events_url":"https://api.github.com/users/abergeron/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-09T00:32:31Z","updated_at":"2019-02-09T00:32:31Z","author_association":"CONTRIBUTOR","body":"I just realized that if the packages are all in the same channel, it's hard to select the cpu one.  I'm not sure how to fix that.\r\n\r\nWe might just require cudatoolkit for all builds as that would simplify things, but it might be asking a bit much since it's about 300Mb.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/461992853/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/462005062","html_url":"https://github.com/apache/tvm/pull/2572#issuecomment-462005062","issue_url":"https://api.github.com/repos/apache/tvm/issues/2572","id":462005062,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MjAwNTA2Mg==","user":{"login":"ZhennanQin","id":39290748,"node_id":"MDQ6VXNlcjM5MjkwNzQ4","avatar_url":"https://avatars.githubusercontent.com/u/39290748?v=4","gravatar_id":"","url":"https://api.github.com/users/ZhennanQin","html_url":"https://github.com/ZhennanQin","followers_url":"https://api.github.com/users/ZhennanQin/followers","following_url":"https://api.github.com/users/ZhennanQin/following{/other_user}","gists_url":"https://api.github.com/users/ZhennanQin/gists{/gist_id}","starred_url":"https://api.github.com/users/ZhennanQin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ZhennanQin/subscriptions","organizations_url":"https://api.github.com/users/ZhennanQin/orgs","repos_url":"https://api.github.com/users/ZhennanQin/repos","events_url":"https://api.github.com/users/ZhennanQin/events{/privacy}","received_events_url":"https://api.github.com/users/ZhennanQin/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-09T02:23:52Z","updated_at":"2019-02-09T02:23:52Z","author_association":"CONTRIBUTOR","body":"optimizing add with 0 is also impossible within operator because checking if input is all 0 is too heavy. It can be done with graph pass when we have constant node in graph. For rest of case, graph pass can handle them for now. Graph pass can also handle multple operators case like A + B - B.\r\n\r\n\"making common usecase even slower\" means we have to run `if(dtypes are the same && req == kWriteInplace)` in operator many times. For non-redundant use case, this is overhead and will increase latency. Maybe you think `if(dtypes are the same && req == kWriteInplace)` is negligible, but actually that check is not sufficient, to cover the case casting int8 to uint8, the full check should be like  \r\n`if((dtypes are the same || BitwiseCompatibleTypes(in_dtype, out_dtype))  && req == kWriteInplace)`\r\nThere's lots of comparison in BitwiseCompatibleTypes, making this check not negligible.\r\n\r\n`autograd needs to make the gradient graph every single iteration. Adding full graph pass to that is much more heavy weight`. The pass itself is just a collection of operator identity requirements. On the worst situation that we have to run this pass every single iteration, the pass execution time should be roughly same as the check inside operator as they are doing the same check. On symbolic side, this pass will only run once on symbol bind, which is much efficient.\r\n\r\n`For the relu case, it can't do in the current architecture of NNVM`. Actually, it's doable in current NNVM. But have to change `BitwiseCompatibleTypes()` to something like `IsUnsignedIntegralType()`. That's why I'm saying BitwiseCompatibleTypes is designed for cast op. Of course using IsUnsignedIntegralType in memory plan pass doesn't make sense as it's works for relu only. So the real problem is, When registering Identity attributes, the regsiter function doesn't know the input and output dtypes. So you want to put the dtype restriction inside memory planning. But different operators have different dtype restriction, it's impossible to use single restriction for all operators. Maybe adding dtypes as arguments of identity regsiter function is a way to solve it.\r\n\r\nIn my previous PR, I just loose the restriction of inplace and identity to make them can be used on dtype mismatch case. Overall their usage is enlarged rather than restricted. On my opinion, Simply adding restriction back for supporting some corner cases is not a smart choice.\r\n\r\nFinally, I'm not the maintainer of this pass, and above is just a suggestion for technical disscusion. I'll try this PR on mkldnn next Monday. If this doesn't break the usage of mkldnn. I'm fine with this PR.\r\n\r\n\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/462005062/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/462006218","html_url":"https://github.com/apache/tvm/pull/2575#issuecomment-462006218","issue_url":"https://api.github.com/repos/apache/tvm/issues/2575","id":462006218,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MjAwNjIxOA==","user":{"login":"slyubomirsky","id":5624871,"node_id":"MDQ6VXNlcjU2MjQ4NzE=","avatar_url":"https://avatars.githubusercontent.com/u/5624871?v=4","gravatar_id":"","url":"https://api.github.com/users/slyubomirsky","html_url":"https://github.com/slyubomirsky","followers_url":"https://api.github.com/users/slyubomirsky/followers","following_url":"https://api.github.com/users/slyubomirsky/following{/other_user}","gists_url":"https://api.github.com/users/slyubomirsky/gists{/gist_id}","starred_url":"https://api.github.com/users/slyubomirsky/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/slyubomirsky/subscriptions","organizations_url":"https://api.github.com/users/slyubomirsky/orgs","repos_url":"https://api.github.com/users/slyubomirsky/repos","events_url":"https://api.github.com/users/slyubomirsky/events{/privacy}","received_events_url":"https://api.github.com/users/slyubomirsky/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-09T02:39:23Z","updated_at":"2019-02-09T02:39:23Z","author_association":"CONTRIBUTOR","body":"Also tagging @joshpoll, as he is knowledgeable about the text format and his feedback on past docs has been very valuable","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/462006218/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/462018189","html_url":"https://github.com/apache/tvm/pull/2493#issuecomment-462018189","issue_url":"https://api.github.com/repos/apache/tvm/issues/2493","id":462018189,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MjAxODE4OQ==","user":{"login":"yzhliu","id":631860,"node_id":"MDQ6VXNlcjYzMTg2MA==","avatar_url":"https://avatars.githubusercontent.com/u/631860?v=4","gravatar_id":"","url":"https://api.github.com/users/yzhliu","html_url":"https://github.com/yzhliu","followers_url":"https://api.github.com/users/yzhliu/followers","following_url":"https://api.github.com/users/yzhliu/following{/other_user}","gists_url":"https://api.github.com/users/yzhliu/gists{/gist_id}","starred_url":"https://api.github.com/users/yzhliu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yzhliu/subscriptions","organizations_url":"https://api.github.com/users/yzhliu/orgs","repos_url":"https://api.github.com/users/yzhliu/repos","events_url":"https://api.github.com/users/yzhliu/events{/privacy}","received_events_url":"https://api.github.com/users/yzhliu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-09T06:21:12Z","updated_at":"2019-02-09T06:24:59Z","author_association":"MEMBER","body":"Thanks @yongwww @srkreddy1238 I did rebase-merge per request, while it is not recommended as it prevents github attach related PR # for these commits, also individual commit might not be valid as @srkreddy1238 mentioned. Please avoid if possible.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/462018189/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/462054473","html_url":"https://github.com/apache/tvm/issues/2579#issuecomment-462054473","issue_url":"https://api.github.com/repos/apache/tvm/issues/2579","id":462054473,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MjA1NDQ3Mw==","user":{"login":"srkreddy1238","id":14215163,"node_id":"MDQ6VXNlcjE0MjE1MTYz","avatar_url":"https://avatars.githubusercontent.com/u/14215163?v=4","gravatar_id":"","url":"https://api.github.com/users/srkreddy1238","html_url":"https://github.com/srkreddy1238","followers_url":"https://api.github.com/users/srkreddy1238/followers","following_url":"https://api.github.com/users/srkreddy1238/following{/other_user}","gists_url":"https://api.github.com/users/srkreddy1238/gists{/gist_id}","starred_url":"https://api.github.com/users/srkreddy1238/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/srkreddy1238/subscriptions","organizations_url":"https://api.github.com/users/srkreddy1238/orgs","repos_url":"https://api.github.com/users/srkreddy1238/repos","events_url":"https://api.github.com/users/srkreddy1238/events{/privacy}","received_events_url":"https://api.github.com/users/srkreddy1238/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-09T15:40:41Z","updated_at":"2019-02-09T15:40:41Z","author_association":"CONTRIBUTOR","body":"Can you share the exact error log while import ?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/462054473/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/462064227","html_url":"https://github.com/apache/tvm/issues/2579#issuecomment-462064227","issue_url":"https://api.github.com/repos/apache/tvm/issues/2579","id":462064227,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MjA2NDIyNw==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-09T17:44:18Z","updated_at":"2019-02-09T17:44:18Z","author_association":"MEMBER","body":"Let us always use discuss for this kind of topic https://discuss.tvm.ai/t/libprotobuf-issue/1635","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/462064227/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/462064410","html_url":"https://github.com/apache/tvm/pull/2493#issuecomment-462064410","issue_url":"https://api.github.com/repos/apache/tvm/issues/2493","id":462064410,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MjA2NDQxMA==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-09T17:47:00Z","updated_at":"2019-02-09T17:47:00Z","author_association":"MEMBER","body":"Squash merge is always the preferred approach. While it might prevent us from getting some of the precise contribution history, in general we do not count commits anyway so it is fine","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/462064410/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/462065200","html_url":"https://github.com/apache/tvm/pull/2577#issuecomment-462065200","issue_url":"https://api.github.com/repos/apache/tvm/issues/2577","id":462065200,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MjA2NTIwMA==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-09T17:56:16Z","updated_at":"2019-02-09T17:56:16Z","author_association":"MEMBER","body":"Thanks, @abergeron , this is now merged.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/462065200/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/462104022","html_url":"https://github.com/apache/tvm/pull/2493#issuecomment-462104022","issue_url":"https://api.github.com/repos/apache/tvm/issues/2493","id":462104022,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MjEwNDAyMg==","user":{"login":"yongwww","id":10205827,"node_id":"MDQ6VXNlcjEwMjA1ODI3","avatar_url":"https://avatars.githubusercontent.com/u/10205827?v=4","gravatar_id":"","url":"https://api.github.com/users/yongwww","html_url":"https://github.com/yongwww","followers_url":"https://api.github.com/users/yongwww/followers","following_url":"https://api.github.com/users/yongwww/following{/other_user}","gists_url":"https://api.github.com/users/yongwww/gists{/gist_id}","starred_url":"https://api.github.com/users/yongwww/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yongwww/subscriptions","organizations_url":"https://api.github.com/users/yongwww/orgs","repos_url":"https://api.github.com/users/yongwww/repos","events_url":"https://api.github.com/users/yongwww/events{/privacy}","received_events_url":"https://api.github.com/users/yongwww/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-10T04:57:18Z","updated_at":"2019-02-10T04:59:26Z","author_association":"MEMBER","body":"@tqchen @yzhliu @srkreddy1238 thanks all, guys! totally agree. I understand your concern, we will use squash merge the next time. My initial thought is keeping some history is helpful for us (aws) to upstream and downstream, anyway, we can handle it and avoid this case for sure.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/462104022/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/462107784","html_url":"https://github.com/apache/tvm/issues/2535#issuecomment-462107784","issue_url":"https://api.github.com/repos/apache/tvm/issues/2535","id":462107784,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MjEwNzc4NA==","user":{"login":"kevinthesun","id":15520525,"node_id":"MDQ6VXNlcjE1NTIwNTI1","avatar_url":"https://avatars.githubusercontent.com/u/15520525?v=4","gravatar_id":"","url":"https://api.github.com/users/kevinthesun","html_url":"https://github.com/kevinthesun","followers_url":"https://api.github.com/users/kevinthesun/followers","following_url":"https://api.github.com/users/kevinthesun/following{/other_user}","gists_url":"https://api.github.com/users/kevinthesun/gists{/gist_id}","starred_url":"https://api.github.com/users/kevinthesun/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kevinthesun/subscriptions","organizations_url":"https://api.github.com/users/kevinthesun/orgs","repos_url":"https://api.github.com/users/kevinthesun/repos","events_url":"https://api.github.com/users/kevinthesun/events{/privacy}","received_events_url":"https://api.github.com/users/kevinthesun/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-10T06:29:19Z","updated_at":"2019-02-10T06:29:19Z","author_association":"CONTRIBUTOR","body":"API summary updated.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/462107784/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/462160221","html_url":"https://github.com/apache/tvm/pull/2493#issuecomment-462160221","issue_url":"https://api.github.com/repos/apache/tvm/issues/2493","id":462160221,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MjE2MDIyMQ==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-10T18:47:33Z","updated_at":"2019-02-10T18:47:33Z","author_association":"MEMBER","body":"usually rebase will resolve most of the problem, regardless of which type of merging method ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/462160221/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/462160684","html_url":"https://github.com/apache/tvm/pull/2580#issuecomment-462160684","issue_url":"https://api.github.com/repos/apache/tvm/issues/2580","id":462160684,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MjE2MDY4NA==","user":{"login":"wweic","id":594848,"node_id":"MDQ6VXNlcjU5NDg0OA==","avatar_url":"https://avatars.githubusercontent.com/u/594848?v=4","gravatar_id":"","url":"https://api.github.com/users/wweic","html_url":"https://github.com/wweic","followers_url":"https://api.github.com/users/wweic/followers","following_url":"https://api.github.com/users/wweic/following{/other_user}","gists_url":"https://api.github.com/users/wweic/gists{/gist_id}","starred_url":"https://api.github.com/users/wweic/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wweic/subscriptions","organizations_url":"https://api.github.com/users/wweic/orgs","repos_url":"https://api.github.com/users/wweic/repos","events_url":"https://api.github.com/users/wweic/events{/privacy}","received_events_url":"https://api.github.com/users/wweic/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-10T18:53:47Z","updated_at":"2019-02-10T18:53:47Z","author_association":"CONTRIBUTOR","body":"`vta/tests/python/unittest/test_vta_insn.py` is failing at line https://github.com/dmlc/tvm/blob/919bea8c79de5de9996cb4714fdb92b2149a023b/vta/python/vta/ir_pass.py#L716.  It's because your change will wrap index expression inside a `Cast` expression like\r\n`(int64((((i0*64) + (i1*16)) + i3)) + (int64(cthread.s)*(int64)128))`. \r\n\r\nhttps://github.com/dmlc/tvm/blob/919bea8c79de5de9996cb4714fdb92b2149a023b/src/arithmetic/detect_linear_equation.cc#L29 needs to support `Cast` node.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/462160684/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/462177353","html_url":"https://github.com/apache/tvm/issues/2581#issuecomment-462177353","issue_url":"https://api.github.com/repos/apache/tvm/issues/2581","id":462177353,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MjE3NzM1Mw==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-10T21:46:07Z","updated_at":"2019-02-10T21:46:07Z","author_association":"MEMBER","body":"Thanks for bringing this up, let us move the topic to https://discuss.tvm.ai/","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/462177353/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/462199831","html_url":"https://github.com/apache/tvm/pull/2572#issuecomment-462199831","issue_url":"https://api.github.com/repos/apache/tvm/issues/2572","id":462199831,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MjE5OTgzMQ==","user":{"login":"ZhennanQin","id":39290748,"node_id":"MDQ6VXNlcjM5MjkwNzQ4","avatar_url":"https://avatars.githubusercontent.com/u/39290748?v=4","gravatar_id":"","url":"https://api.github.com/users/ZhennanQin","html_url":"https://github.com/ZhennanQin","followers_url":"https://api.github.com/users/ZhennanQin/followers","following_url":"https://api.github.com/users/ZhennanQin/following{/other_user}","gists_url":"https://api.github.com/users/ZhennanQin/gists{/gist_id}","starred_url":"https://api.github.com/users/ZhennanQin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ZhennanQin/subscriptions","organizations_url":"https://api.github.com/users/ZhennanQin/orgs","repos_url":"https://api.github.com/users/ZhennanQin/repos","events_url":"https://api.github.com/users/ZhennanQin/events{/privacy}","received_events_url":"https://api.github.com/users/ZhennanQin/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-11T01:17:17Z","updated_at":"2019-02-11T01:17:17Z","author_association":"CONTRIBUTOR","body":"I did some experiments with this PR, and doesn't see any issue with mkldnn. Even removing\r\n```\r\n  if (compatible_pairs.find(std::make_pair(type1, type2)) != compatible_pairs.end() ||\r\n      compatible_pairs.find(std::make_pair(type2, type1)) != compatible_pairs.end()) {\r\n    return true;\r\n  }\r\n```\r\nis still OK for MKLDNN.\r\n\r\nI think it's because this PR only adds restriction with FInplaceIdentity while FInplaceOption remains unchanged. And MKLDNN only uses FInplaceOption. If we have to add this restriction to FInplaceIdentity, I suggest to remove compatible type check above because it's quite specific for cast op, and may cause misunderstanding for other developer. ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/462199831/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/462203536","html_url":"https://github.com/apache/tvm/issues/2543#issuecomment-462203536","issue_url":"https://api.github.com/repos/apache/tvm/issues/2543","id":462203536,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MjIwMzUzNg==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-11T02:04:12Z","updated_at":"2019-02-11T02:09:52Z","author_association":"MEMBER","body":"Thanks to everyone who voted on this thread. The vote has passed. We will start the incubation proposal process. \r\n\r\ncc @dmlc/tvm-committer @markusweimer, @sscdotopen, @bgchun\r\n\r\n## What to Expect Next\r\n\r\n- @markusweimer will help us to send the incubation proposal to general@incubator.apache.org\r\n   - There will be a discussion period followed by a formal vote by ASF incubator\r\n- Once the vote passed, we will kick off the migration process.\r\n- As per ASF tradition, everything is public, you can watch the process by subscribing to general@incubator.apache.org  https://lists.apache.org/list.html?general@incubator.apache.org\r\n\r\nI will also keep updating this thread with more news","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/462203536/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/462206644","html_url":"https://github.com/apache/tvm/issues/2535#issuecomment-462206644","issue_url":"https://api.github.com/repos/apache/tvm/issues/2535","id":462206644,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MjIwNjY0NA==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-11T02:40:02Z","updated_at":"2019-02-11T02:40:02Z","author_association":"MEMBER","body":"@zhreshold @vinx13 @Laurawly Please share your thoughts on the API names.\r\n\r\nMy feeling is that perhaps we should make the API as consistent as possible as Pytorch/TF (use name non_max_suppression). But use a different name or an additional argument that indicates -1 padding.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/462206644/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]