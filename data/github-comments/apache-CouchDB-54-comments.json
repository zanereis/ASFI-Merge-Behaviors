[{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/413305325","html_url":"https://github.com/apache/couchdb/pull/1468#issuecomment-413305325","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1468","id":413305325,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMzMwNTMyNQ==","user":{"login":"jaydoane","id":51209,"node_id":"MDQ6VXNlcjUxMjA5","avatar_url":"https://avatars.githubusercontent.com/u/51209?v=4","gravatar_id":"","url":"https://api.github.com/users/jaydoane","html_url":"https://github.com/jaydoane","followers_url":"https://api.github.com/users/jaydoane/followers","following_url":"https://api.github.com/users/jaydoane/following{/other_user}","gists_url":"https://api.github.com/users/jaydoane/gists{/gist_id}","starred_url":"https://api.github.com/users/jaydoane/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jaydoane/subscriptions","organizations_url":"https://api.github.com/users/jaydoane/orgs","repos_url":"https://api.github.com/users/jaydoane/repos","events_url":"https://api.github.com/users/jaydoane/events{/privacy}","received_events_url":"https://api.github.com/users/jaydoane/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-15T19:17:29Z","updated_at":"2018-08-15T19:17:29Z","author_association":"CONTRIBUTOR","body":"@iilyak I have squashed and rebased -- I think this is ready to be merged.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/413305325/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/413307503","html_url":"https://github.com/apache/couchdb/pull/1543#issuecomment-413307503","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1543","id":413307503,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMzMwNzUwMw==","user":{"login":"jaydoane","id":51209,"node_id":"MDQ6VXNlcjUxMjA5","avatar_url":"https://avatars.githubusercontent.com/u/51209?v=4","gravatar_id":"","url":"https://api.github.com/users/jaydoane","html_url":"https://github.com/jaydoane","followers_url":"https://api.github.com/users/jaydoane/followers","following_url":"https://api.github.com/users/jaydoane/following{/other_user}","gists_url":"https://api.github.com/users/jaydoane/gists{/gist_id}","starred_url":"https://api.github.com/users/jaydoane/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jaydoane/subscriptions","organizations_url":"https://api.github.com/users/jaydoane/orgs","repos_url":"https://api.github.com/users/jaydoane/repos","events_url":"https://api.github.com/users/jaydoane/events{/privacy}","received_events_url":"https://api.github.com/users/jaydoane/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-15T19:25:23Z","updated_at":"2018-08-15T19:25:23Z","author_association":"CONTRIBUTOR","body":"This LGTM. Tested as instructed:\r\n```\r\n$ curl localhost:35984/_node/node1@127.0.0.1/_restart\r\n{\"error\":\"unauthorized\",\"reason\":\"You are not a server admin.\"}\r\n\r\n$ curl -s -u adm:pass -X GET 127.0.0.1:35984/_node/node1@127.0.0.1/_system | jq '.ets_table_count'\r\n115\r\n\r\n$ curl -s -u adm:pass -X POST 127.0.0.1:35984/_node/node1@127.0.0.1/_restart\r\n{\"ok\":true}\r\n\r\n$ curl -s -u adm:pass -X GET 127.0.0.1:35984/_node/node1@127.0.0.1/_system | jq '.ets_table_count'\r\n108\r\n```\r\nI also confirmed uptimes increment correctly on restarted node:\r\n```\r\n(node1@127.0.0.1)1> couch_app:uptime().\r\n10038\r\n(node1@127.0.0.1)2> couch_app:uptime().\r\n11332\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/413307503/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/413311645","html_url":"https://github.com/apache/couchdb/issues/1373#issuecomment-413311645","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1373","id":413311645,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMzMxMTY0NQ==","user":{"login":"iilyak","id":9804420,"node_id":"MDQ6VXNlcjk4MDQ0MjA=","avatar_url":"https://avatars.githubusercontent.com/u/9804420?v=4","gravatar_id":"","url":"https://api.github.com/users/iilyak","html_url":"https://github.com/iilyak","followers_url":"https://api.github.com/users/iilyak/followers","following_url":"https://api.github.com/users/iilyak/following{/other_user}","gists_url":"https://api.github.com/users/iilyak/gists{/gist_id}","starred_url":"https://api.github.com/users/iilyak/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/iilyak/subscriptions","organizations_url":"https://api.github.com/users/iilyak/orgs","repos_url":"https://api.github.com/users/iilyak/repos","events_url":"https://api.github.com/users/iilyak/events{/privacy}","received_events_url":"https://api.github.com/users/iilyak/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-15T19:40:26Z","updated_at":"2018-08-15T19:40:26Z","author_association":"CONTRIBUTOR","body":"> @eiri \r\n> Add function couch_log:Level(Format, Args, Meta) to allow to pass additional fields. To emphasize - formatter doesn't modify msg - the message is a message, not a template.\r\n\r\nCan you clarify how you are planing to use Args? Is it the same as we currently do:\r\n```\r\ncouch_log:debug(\"Something ~p~n\", [Term], Meta).\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/413311645/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/413314730","html_url":"https://github.com/apache/couchdb/issues/1373#issuecomment-413314730","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1373","id":413314730,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMzMxNDczMA==","user":{"login":"eiri","id":70542,"node_id":"MDQ6VXNlcjcwNTQy","avatar_url":"https://avatars.githubusercontent.com/u/70542?v=4","gravatar_id":"","url":"https://api.github.com/users/eiri","html_url":"https://github.com/eiri","followers_url":"https://api.github.com/users/eiri/followers","following_url":"https://api.github.com/users/eiri/following{/other_user}","gists_url":"https://api.github.com/users/eiri/gists{/gist_id}","starred_url":"https://api.github.com/users/eiri/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eiri/subscriptions","organizations_url":"https://api.github.com/users/eiri/orgs","repos_url":"https://api.github.com/users/eiri/repos","events_url":"https://api.github.com/users/eiri/events{/privacy}","received_events_url":"https://api.github.com/users/eiri/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-15T19:51:33Z","updated_at":"2018-08-15T19:51:33Z","author_association":"MEMBER","body":"@iilyak yes, exactly. If we think about message as just another attribute in log's meta, then it's not formatter's job to modify attributes, but to format the whole event to a string, JSON, key=vals or whatnot.\r\n\r\nFor lazy evaluation and reduce cost of `io:format` call we can match `Args` with empty list and\\or go with @kocolosk idea of wrapping that `Fmt + Args` into fun and call that after `should_log` evaluation.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/413314730/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/413317014","html_url":"https://github.com/apache/couchdb/pull/1543#issuecomment-413317014","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1543","id":413317014,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMzMxNzAxNA==","user":{"login":"iilyak","id":9804420,"node_id":"MDQ6VXNlcjk4MDQ0MjA=","avatar_url":"https://avatars.githubusercontent.com/u/9804420?v=4","gravatar_id":"","url":"https://api.github.com/users/iilyak","html_url":"https://github.com/iilyak","followers_url":"https://api.github.com/users/iilyak/followers","following_url":"https://api.github.com/users/iilyak/following{/other_user}","gists_url":"https://api.github.com/users/iilyak/gists{/gist_id}","starred_url":"https://api.github.com/users/iilyak/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/iilyak/subscriptions","organizations_url":"https://api.github.com/users/iilyak/orgs","repos_url":"https://api.github.com/users/iilyak/repos","events_url":"https://api.github.com/users/iilyak/events{/privacy}","received_events_url":"https://api.github.com/users/iilyak/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-15T19:59:23Z","updated_at":"2018-08-15T19:59:23Z","author_association":"CONTRIBUTOR","body":"> @wohali You removed the node-local one, right?\r\n\r\nYes I did remove it.\r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/413317014/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/413318715","html_url":"https://github.com/apache/couchdb/pull/1560#issuecomment-413318715","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1560","id":413318715,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMzMxODcxNQ==","user":{"login":"eiri","id":70542,"node_id":"MDQ6VXNlcjcwNTQy","avatar_url":"https://avatars.githubusercontent.com/u/70542?v=4","gravatar_id":"","url":"https://api.github.com/users/eiri","html_url":"https://github.com/eiri","followers_url":"https://api.github.com/users/eiri/followers","following_url":"https://api.github.com/users/eiri/following{/other_user}","gists_url":"https://api.github.com/users/eiri/gists{/gist_id}","starred_url":"https://api.github.com/users/eiri/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eiri/subscriptions","organizations_url":"https://api.github.com/users/eiri/orgs","repos_url":"https://api.github.com/users/eiri/repos","events_url":"https://api.github.com/users/eiri/events{/privacy}","received_events_url":"https://api.github.com/users/eiri/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-15T20:05:26Z","updated_at":"2018-08-15T20:05:26Z","author_association":"MEMBER","body":"This _seems_ like a good fix to me and I'm even fine with a lack of tests, this is an awkward place to test, but I'd love to get @davisp opinion on this. Reading around attachment, updater and streamer code made me very confident in my ability to miss something.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/413318715/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/413319232","html_url":"https://github.com/apache/couchdb/pull/1560#issuecomment-413319232","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1560","id":413319232,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMzMxOTIzMg==","user":{"login":"jaydoane","id":51209,"node_id":"MDQ6VXNlcjUxMjA5","avatar_url":"https://avatars.githubusercontent.com/u/51209?v=4","gravatar_id":"","url":"https://api.github.com/users/jaydoane","html_url":"https://github.com/jaydoane","followers_url":"https://api.github.com/users/jaydoane/followers","following_url":"https://api.github.com/users/jaydoane/following{/other_user}","gists_url":"https://api.github.com/users/jaydoane/gists{/gist_id}","starred_url":"https://api.github.com/users/jaydoane/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jaydoane/subscriptions","organizations_url":"https://api.github.com/users/jaydoane/orgs","repos_url":"https://api.github.com/users/jaydoane/repos","events_url":"https://api.github.com/users/jaydoane/events{/privacy}","received_events_url":"https://api.github.com/users/jaydoane/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-15T20:07:13Z","updated_at":"2018-08-15T20:07:13Z","author_association":"CONTRIBUTOR","body":"Would it be useful to make some of the types explicit with the addition of some judicious typespecs?","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/413319232/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/413319785","html_url":"https://github.com/apache/couchdb/issues/1373#issuecomment-413319785","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1373","id":413319785,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMzMxOTc4NQ==","user":{"login":"iilyak","id":9804420,"node_id":"MDQ6VXNlcjk4MDQ0MjA=","avatar_url":"https://avatars.githubusercontent.com/u/9804420?v=4","gravatar_id":"","url":"https://api.github.com/users/iilyak","html_url":"https://github.com/iilyak","followers_url":"https://api.github.com/users/iilyak/followers","following_url":"https://api.github.com/users/iilyak/following{/other_user}","gists_url":"https://api.github.com/users/iilyak/gists{/gist_id}","starred_url":"https://api.github.com/users/iilyak/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/iilyak/subscriptions","organizations_url":"https://api.github.com/users/iilyak/orgs","repos_url":"https://api.github.com/users/iilyak/repos","events_url":"https://api.github.com/users/iilyak/events{/privacy}","received_events_url":"https://api.github.com/users/iilyak/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-15T20:09:17Z","updated_at":"2018-08-15T20:09:52Z","author_association":"CONTRIBUTOR","body":"I am trying to understand what JSON formatter would do with `Args` and how we can access them in splunk (or any other system)?","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/413319785/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/413322652","html_url":"https://github.com/apache/couchdb/issues/1554#issuecomment-413322652","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1554","id":413322652,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMzMyMjY1Mg==","user":{"login":"ermouth","id":1540047,"node_id":"MDQ6VXNlcjE1NDAwNDc=","avatar_url":"https://avatars.githubusercontent.com/u/1540047?v=4","gravatar_id":"","url":"https://api.github.com/users/ermouth","html_url":"https://github.com/ermouth","followers_url":"https://api.github.com/users/ermouth/followers","following_url":"https://api.github.com/users/ermouth/following{/other_user}","gists_url":"https://api.github.com/users/ermouth/gists{/gist_id}","starred_url":"https://api.github.com/users/ermouth/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ermouth/subscriptions","organizations_url":"https://api.github.com/users/ermouth/orgs","repos_url":"https://api.github.com/users/ermouth/repos","events_url":"https://api.github.com/users/ermouth/events{/privacy}","received_events_url":"https://api.github.com/users/ermouth/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-15T20:19:40Z","updated_at":"2018-08-15T20:21:17Z","author_association":"CONTRIBUTOR","body":"I‘ve tried to re-write several real simple _update fns with proposed syntax. My observations:\r\n\r\n* schema, whatever implementation is, better have conditionals/guards\r\n* update requires conditionals/guards even more: VDU results commute, so you can have many VDUs in different ddocs; this is not true for updates – without conditionals we need as many updates (and endpoints) as number of schemas, which is bit messy and unsafe from integrity POV\r\n* transform/patch lists of actions also require guards: schema match doesn‘t automatically mean plain list of actions is applicable\r\n* JSON patch is definitely hard to read, too verbose; for long lists repeated key names look as an excessive markup noise \r\n* constantly switching between dot notation of Mango paths and slash notation of JSON patch is a direct way to errors\r\n* it all needs sandboxed testing tools, entire syntax is not easy to read and, unlike Mango, errors are immediately destructive for incoming data.\r\n\r\n> making update functions a little too clever and slow\r\n\r\nAFAIK more risk is to make them dumb and cryptic as old-style rewrites )\r\n\r\nHere is a set of existing tools of the sort, hope it can be a source for further inspiration https://stackoverflow.com/questions/1618038/xslt-equivalent-for-json/49011455#49011455","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/413322652/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/413325492","html_url":"https://github.com/apache/couchdb/issues/1373#issuecomment-413325492","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1373","id":413325492,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMzMyNTQ5Mg==","user":{"login":"eiri","id":70542,"node_id":"MDQ6VXNlcjcwNTQy","avatar_url":"https://avatars.githubusercontent.com/u/70542?v=4","gravatar_id":"","url":"https://api.github.com/users/eiri","html_url":"https://github.com/eiri","followers_url":"https://api.github.com/users/eiri/followers","following_url":"https://api.github.com/users/eiri/following{/other_user}","gists_url":"https://api.github.com/users/eiri/gists{/gist_id}","starred_url":"https://api.github.com/users/eiri/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eiri/subscriptions","organizations_url":"https://api.github.com/users/eiri/orgs","repos_url":"https://api.github.com/users/eiri/repos","events_url":"https://api.github.com/users/eiri/events{/privacy}","received_events_url":"https://api.github.com/users/eiri/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-15T20:29:15Z","updated_at":"2018-08-15T20:51:04Z","author_association":"MEMBER","body":"You seems to miss my point, so I'll try again.\r\n\r\nLog message is just another attribute in log data, nothing more. It's not some special thing that _every_ formatter have to know how to modify, that modification would happened before passing data to formatter, around the same step where we'll have time, level and the rest of auto-attributes injected. Formatter then only responsible for representation of log message.\r\n\r\nIf you want some attribute been concatenated into message it need to be presented in both `Args` and `Meta`, but the point of structured logging is that you don't need to do that to get informative logging.\r\n\r\nFor example for text formatting instead of log message \"Compaction started by pid <0.11.0> for shard \\\\\"shards/00-ff/mystic.123456\\\\\"\" you'll get \"Compaction started. pid=<0.11.0> shard=\\\\\"shards/00-ff/mystic.123456\\\\\"\" - it's still readable and actually better greppable and you don't need to deal with `io:format`'s `Fmt` `Compaction started by ~p for shard ~s`. Then as JSON it'll be just `{\"msg\": \"Compaction started \", \"pid\": \"<0.11.0>\", \"shard\": \"shards/00-ff/mystic.123456\"}`\r\n\r\nI hope that makes sense. ","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/413325492/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/413328537","html_url":"https://github.com/apache/couchdb/pull/1560#issuecomment-413328537","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1560","id":413328537,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMzMyODUzNw==","user":{"login":"nickva","id":211822,"node_id":"MDQ6VXNlcjIxMTgyMg==","avatar_url":"https://avatars.githubusercontent.com/u/211822?v=4","gravatar_id":"","url":"https://api.github.com/users/nickva","html_url":"https://github.com/nickva","followers_url":"https://api.github.com/users/nickva/followers","following_url":"https://api.github.com/users/nickva/following{/other_user}","gists_url":"https://api.github.com/users/nickva/gists{/gist_id}","starred_url":"https://api.github.com/users/nickva/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickva/subscriptions","organizations_url":"https://api.github.com/users/nickva/orgs","repos_url":"https://api.github.com/users/nickva/repos","events_url":"https://api.github.com/users/nickva/events{/privacy}","received_events_url":"https://api.github.com/users/nickva/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-15T20:39:52Z","updated_at":"2018-08-15T20:39:52Z","author_association":"CONTRIBUTOR","body":"@jaydoane type spec might not be as useful in this case as stream pointer is essentially opaque given we have the PSE stream abstraction. It would be something line `[{any(), non_neg_integer()}]` which would still be correct for the old and new implementation. Just that `any()` got smaller now.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/413328537/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/413339952","html_url":"https://github.com/apache/couchdb/issues/1538#issuecomment-413339952","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1538","id":413339952,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMzMzOTk1Mg==","user":{"login":"iilyak","id":9804420,"node_id":"MDQ6VXNlcjk4MDQ0MjA=","avatar_url":"https://avatars.githubusercontent.com/u/9804420?v=4","gravatar_id":"","url":"https://api.github.com/users/iilyak","html_url":"https://github.com/iilyak","followers_url":"https://api.github.com/users/iilyak/followers","following_url":"https://api.github.com/users/iilyak/following{/other_user}","gists_url":"https://api.github.com/users/iilyak/gists{/gist_id}","starred_url":"https://api.github.com/users/iilyak/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/iilyak/subscriptions","organizations_url":"https://api.github.com/users/iilyak/orgs","repos_url":"https://api.github.com/users/iilyak/repos","events_url":"https://api.github.com/users/iilyak/events{/privacy}","received_events_url":"https://api.github.com/users/iilyak/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-15T21:16:42Z","updated_at":"2018-08-15T21:16:42Z","author_association":"CONTRIBUTOR","body":"I think we should use versioned structures everywhere not only over the inter-node wire. \r\n\r\nEven if we use maps we still would want to include the version field there. \r\n\r\nWe use at least 3 different ways to implement versioned structures (I am sure we have more):\r\n- [couch_bt_engine_header.erl](https://github.com/apache/couchdb/blob/master/src/couch/src/couch_bt_engine_header.erl) - get/set/upgrade in the module.\r\n- [couch_att](https://github.com/apache/couchdb/blob/master/src/couch/src/couch_att.erl) - store/fetch/transform in the module\r\n- [fabric_util:upgrade_mrargs/1](https://github.com/apache/couchdb/blob/fe1ce4250a5850e60765a83612a4c10754dba114/src/fabric/src/fabric_util.erl#L322) - uses pattern match to distinguish between record and tuple\r\n\r\n# Useful features to consider\r\n\r\nInspired by migration pattern from other languages and frameworks. \r\n\r\n- ability to upgrade to specified version from any known version\r\n- ability to downgrade to specified version from any known version\r\n- ability to detect the version of the structure and cast (upgrade or downgrade) the record to the version used on the node\r\n- ability to construct the structure from key-value list\r\n- ability to construct the structure from ejson\r\n- ability to convert structure to ejson\r\n- ability to convert structure to key-value list (useful in debug messages)\r\n- ability to get current version of the structure\r\n- callback module should implement defined upgrade/downgrade interface to do the conversion\r\n- implementation of new structure should be free of huge boilerplate  \r\n- encapsulate all operations for a structure in a single module\r\n- access to the current version of the structure should have low overhead\r\n- we should be able to receive newer version of the structure and send the old\r\n\r\nFor the reference one simple implementation is [here](https://github.com/apache/couchdb-couch/pull/212/files) and [here](https://github.com/apache/couchdb-couch-mrview/pull/60/files)\r\n\r\n# Proposal\r\n\r\n1. define new callback module (behavior) \r\n2. implement some of the common functionality in `couch_structure` helper module\r\n3. every new versioned structure would need to \r\n   - implement prescribed interface in dedicated module\r\n   - have migration functions (or clauses) to be able to upgrade and downgrade to any version from any given one\r\n4. We would still need to split the structure update to two separate commits\r\n   - implement compatibility clauses in structure module\r\n   - bump the version of structure we would be sending out (or storing on disk)\r\n\r\n# Open questions\r\n\r\n1. Define the callback module API\r\n2. Should we consider a runtime toggle for the version of structure we sending out (storing on disk). This might help us to avoid creating two releases (two-stage deployment). It could be implemented efficiently if we decide to use code-generation to produce structure's callback module.\r\n3. Define the scope\r\n  - only inter-node communications\r\n  - inter-node communications and persistent structures\r\n  - all structures","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/413339952/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/413342659","html_url":"https://github.com/apache/couchdb/issues/1373#issuecomment-413342659","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1373","id":413342659,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMzM0MjY1OQ==","user":{"login":"iilyak","id":9804420,"node_id":"MDQ6VXNlcjk4MDQ0MjA=","avatar_url":"https://avatars.githubusercontent.com/u/9804420?v=4","gravatar_id":"","url":"https://api.github.com/users/iilyak","html_url":"https://github.com/iilyak","followers_url":"https://api.github.com/users/iilyak/followers","following_url":"https://api.github.com/users/iilyak/following{/other_user}","gists_url":"https://api.github.com/users/iilyak/gists{/gist_id}","starred_url":"https://api.github.com/users/iilyak/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/iilyak/subscriptions","organizations_url":"https://api.github.com/users/iilyak/orgs","repos_url":"https://api.github.com/users/iilyak/repos","events_url":"https://api.github.com/users/iilyak/events{/privacy}","received_events_url":"https://api.github.com/users/iilyak/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-15T21:26:07Z","updated_at":"2018-08-15T21:26:07Z","author_association":"CONTRIBUTOR","body":"Thank you @eiri. In order to make it work we would need to forbid `~` in the `Msg`. Either technically or enforce it on review stage. This means that `Format` needs to renamed. Maybe proposed API would be better described as follows:\r\n```\r\ncouch_log:Level(MessageTag, Args, Meta).\r\n```\r\n\r\n> @eiri but the point of structured logging is that you don't need to do that to get informative logging.\r\n\r\nOnly if we agree to pass key-value list in Args.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/413342659/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/413349385","html_url":"https://github.com/apache/couchdb/issues/1373#issuecomment-413349385","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1373","id":413349385,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMzM0OTM4NQ==","user":{"login":"eiri","id":70542,"node_id":"MDQ6VXNlcjcwNTQy","avatar_url":"https://avatars.githubusercontent.com/u/70542?v=4","gravatar_id":"","url":"https://api.github.com/users/eiri","html_url":"https://github.com/eiri","followers_url":"https://api.github.com/users/eiri/followers","following_url":"https://api.github.com/users/eiri/following{/other_user}","gists_url":"https://api.github.com/users/eiri/gists{/gist_id}","starred_url":"https://api.github.com/users/eiri/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eiri/subscriptions","organizations_url":"https://api.github.com/users/eiri/orgs","repos_url":"https://api.github.com/users/eiri/repos","events_url":"https://api.github.com/users/eiri/events{/privacy}","received_events_url":"https://api.github.com/users/eiri/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-15T21:49:53Z","updated_at":"2018-08-15T21:49:53Z","author_association":"MEMBER","body":"I'm seems to be very bad at explaining :(\r\n\r\nNo, we do not forbid or change anything, quite the opposite! `couch_log:Level/2` stays exactly as it is, we just have a a step at which we are creating proplist with (this is pseudo code!) `[{level, Level}, {msg: io_lib:format(Fmt, Args)}, {time, os:now()}... ]` and then passing this proplist to configured formatter.\r\n\r\nDefault formatter then essentially is [this step](https://github.com/apache/couchdb/blob/master/src/couch_log/src/couch_log_writer_file.erl#L78-L98) extracted and it gives back to a writer the same string as we have now to write. JSON formatter serialize the proplist and gives writer JSON to write. key=val formatter creates a string similar to my example above and passes it to writer. And so on.\r\n\r\nWe also adding a new function `couch_log:Level(MessageTag, Args, Meta)` which is different in just one aspect - it has `Meta` proplist to be merged into our \"auto\" proplist.\r\n\r\nWith this we have a transparent migration, turning structured logging \"on\" is just a question of configuration and we can update existing code moving attributes from log message into Meta at our pace. Where with format forbidding or semantics changing approach we are facing a massive update of all log calls across the whole codebase which doesn't sounds very appealing.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/413349385/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/413471925","html_url":"https://github.com/apache/couchdb/issues/1561#issuecomment-413471925","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1561","id":413471925,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMzQ3MTkyNQ==","user":{"login":"willholley","id":97787,"node_id":"MDQ6VXNlcjk3Nzg3","avatar_url":"https://avatars.githubusercontent.com/u/97787?v=4","gravatar_id":"","url":"https://api.github.com/users/willholley","html_url":"https://github.com/willholley","followers_url":"https://api.github.com/users/willholley/followers","following_url":"https://api.github.com/users/willholley/following{/other_user}","gists_url":"https://api.github.com/users/willholley/gists{/gist_id}","starred_url":"https://api.github.com/users/willholley/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/willholley/subscriptions","organizations_url":"https://api.github.com/users/willholley/orgs","repos_url":"https://api.github.com/users/willholley/repos","events_url":"https://api.github.com/users/willholley/events{/privacy}","received_events_url":"https://api.github.com/users/willholley/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-16T08:45:49Z","updated_at":"2018-08-16T08:45:49Z","author_association":"MEMBER","body":"@HilmiDEV replication between older CouchDB versions/PouchDB and 2.2.0 should work just fine.\r\n\r\nAre there any errors in your CouchDB or PouchDB logs that suggest why it's failing?","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/413471925/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/413495842","html_url":"https://github.com/apache/couchdb/issues/1561#issuecomment-413495842","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1561","id":413495842,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMzQ5NTg0Mg==","user":{"login":"hbcodeXCI","id":11888206,"node_id":"MDQ6VXNlcjExODg4MjA2","avatar_url":"https://avatars.githubusercontent.com/u/11888206?v=4","gravatar_id":"","url":"https://api.github.com/users/hbcodeXCI","html_url":"https://github.com/hbcodeXCI","followers_url":"https://api.github.com/users/hbcodeXCI/followers","following_url":"https://api.github.com/users/hbcodeXCI/following{/other_user}","gists_url":"https://api.github.com/users/hbcodeXCI/gists{/gist_id}","starred_url":"https://api.github.com/users/hbcodeXCI/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hbcodeXCI/subscriptions","organizations_url":"https://api.github.com/users/hbcodeXCI/orgs","repos_url":"https://api.github.com/users/hbcodeXCI/repos","events_url":"https://api.github.com/users/hbcodeXCI/events{/privacy}","received_events_url":"https://api.github.com/users/hbcodeXCI/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-16T10:17:01Z","updated_at":"2018-08-16T10:17:01Z","author_association":"NONE","body":"I found the solution, the problem seems to be in this issue\r\nhttps://github.com/apache/couchdb/issues/1550\r\n\r\nYou must active the option **auth_plugins** in the file /opt/couchdb/etc/default.ini\r\n\r\n```\r\n[replicator]\r\nauth_plugins = couch_replicator_auth_noop\r\n```\r\nAnd now it is working ","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/413495842/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/413522754","html_url":"https://github.com/apache/couchdb/issues/1373#issuecomment-413522754","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1373","id":413522754,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMzUyMjc1NA==","user":{"login":"iilyak","id":9804420,"node_id":"MDQ6VXNlcjk4MDQ0MjA=","avatar_url":"https://avatars.githubusercontent.com/u/9804420?v=4","gravatar_id":"","url":"https://api.github.com/users/iilyak","html_url":"https://github.com/iilyak","followers_url":"https://api.github.com/users/iilyak/followers","following_url":"https://api.github.com/users/iilyak/following{/other_user}","gists_url":"https://api.github.com/users/iilyak/gists{/gist_id}","starred_url":"https://api.github.com/users/iilyak/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/iilyak/subscriptions","organizations_url":"https://api.github.com/users/iilyak/orgs","repos_url":"https://api.github.com/users/iilyak/repos","events_url":"https://api.github.com/users/iilyak/events{/privacy}","received_events_url":"https://api.github.com/users/iilyak/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-16T12:04:31Z","updated_at":"2018-08-16T12:04:31Z","author_association":"CONTRIBUTOR","body":"I think I understand you proposal. There is one contradiction in your description which prevents me from understanding it 100%. You've said that we would pass `[.... {msg: io_lib(Fmt, Args), ..}` to configured formatter. Then you mention that default formatter would do the step we currently do. \r\nWhich also includes the call to `io_lib(Fmt, Args)`. Also I think one of the goals of your proposal is to avoid modifying all places where we call logger. I don't think it is a big deal. We always can write scripts to update all callers in semiautomatic manner. ","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/413522754/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/413532329","html_url":"https://github.com/apache/couchdb/issues/1373#issuecomment-413532329","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1373","id":413532329,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMzUzMjMyOQ==","user":{"login":"iilyak","id":9804420,"node_id":"MDQ6VXNlcjk4MDQ0MjA=","avatar_url":"https://avatars.githubusercontent.com/u/9804420?v=4","gravatar_id":"","url":"https://api.github.com/users/iilyak","html_url":"https://github.com/iilyak","followers_url":"https://api.github.com/users/iilyak/followers","following_url":"https://api.github.com/users/iilyak/following{/other_user}","gists_url":"https://api.github.com/users/iilyak/gists{/gist_id}","starred_url":"https://api.github.com/users/iilyak/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/iilyak/subscriptions","organizations_url":"https://api.github.com/users/iilyak/orgs","repos_url":"https://api.github.com/users/iilyak/repos","events_url":"https://api.github.com/users/iilyak/events{/privacy}","received_events_url":"https://api.github.com/users/iilyak/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-16T12:42:57Z","updated_at":"2018-08-16T12:52:32Z","author_association":"CONTRIBUTOR","body":"Back to my proposal (combined with ideas from erlang 21 Logger). I want to cover upgrade case. We would allow both to coexists for some time.\r\nCurrently we have `couch_log:Level(Format, Args)` we would replace it with `LOG_ERROR2(Format, Args)`. We can use search and replace to make this change. Updated log statements would use `LOG_ERROR` macro instead. The macro would be defined as follows:\r\n\r\n```\r\n-define(LOG_ERROR2(Msg, Args),?DO_LOG(error, [Msg, couch_log:to_kv(Args), [{format_vsn, 1}]])).\r\n-define(LOG_ERROR(Msg, Args, Meta),?DO_LOG(error, [Msg, Args, Meta])).\r\n-define(DO_LOG(Level, Args),\r\n        case couch_log_util:should_log(Level) of\r\n            true ->\r\n                apply(couch_log, macro_log, [?LOCATION, Level | Args]); \r\n            false ->\r\n                ok\r\n        end).\r\n-endif.\r\n\r\n-define(LOCATION, [\r\n    {module, ?MODULE},\r\n    {function_name, ?FUNCTION_NAME},\r\n    {frunction_arity, ?FUNCTION_ARITY},\r\n    {line, ?LINE},\r\n    {file, ?FILE},\r\n    {log_event_pid, self()}\r\n])\r\n``` \r\n\r\n`couch_log:to_kv` would receive the list of values and return `[{\"arg1\", value1}, {\"arg2\", value2}]`.\r\n\r\nSomewhere in the formatter we can deal with legacy format (we can detect it by checking `format_vsn == 1`) and call io_lib:format.\r\n\r\nThe updated calls would look like\r\n```\r\n?LOG_ERROR(\"Compaction started\", [\r\n    {compactor_pid, Pid},\r\n    {shard, Shard}\r\n], [{user, #user_ctx.name}]).\r\n```\r\n\r\n> @eiri  I don't see benefits in introducing two separate bins to hold attributes\r\n\r\nTwo bins are useful to avoid name clashes. Imagine that you want to have argument named with the same key used in meta-information. \r\n\r\nLog events in JSON for non updated callers would look like:\r\n\r\n```\r\n{\r\n     \"msg\": \"Compaction started by '<0.11.0>' for shard 'shards/00-ff/mystic.123456'\",\r\n     \"args\": {\r\n         \"arg1\": \"<0.11.0>\",\r\n         \"arg2\", \"shards/00-ff/mystic.123456'\"\r\n     },\r\n     \"meta\": {\r\n        \"module\": \"couch_bla_bla\",\r\n        \"function_name\": \"compact_shard\",\r\n        \"frunction_arity\": 4,\r\n        \"line\": 1234,\r\n        \"file\": \"src/couch/ebin/couch_bla_bla.beam\",\r\n        \"log_event_pid\": \"<1.2.3>\"\r\n     }\r\n}\r\n```\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/413532329/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/413535492","html_url":"https://github.com/apache/couchdb/pull/1543#issuecomment-413535492","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1543","id":413535492,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMzUzNTQ5Mg==","user":{"login":"iilyak","id":9804420,"node_id":"MDQ6VXNlcjk4MDQ0MjA=","avatar_url":"https://avatars.githubusercontent.com/u/9804420?v=4","gravatar_id":"","url":"https://api.github.com/users/iilyak","html_url":"https://github.com/iilyak","followers_url":"https://api.github.com/users/iilyak/followers","following_url":"https://api.github.com/users/iilyak/following{/other_user}","gists_url":"https://api.github.com/users/iilyak/gists{/gist_id}","starred_url":"https://api.github.com/users/iilyak/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/iilyak/subscriptions","organizations_url":"https://api.github.com/users/iilyak/orgs","repos_url":"https://api.github.com/users/iilyak/repos","events_url":"https://api.github.com/users/iilyak/events{/privacy}","received_events_url":"https://api.github.com/users/iilyak/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-16T12:54:42Z","updated_at":"2018-08-16T12:54:42Z","author_association":"CONTRIBUTOR","body":"@wohali Is there anything else I should do? Are you planing to do more reviews or I can merge it?","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/413535492/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/413547061","html_url":"https://github.com/apache/couchdb/pull/1543#issuecomment-413547061","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1543","id":413547061,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMzU0NzA2MQ==","user":{"login":"wohali","id":112292,"node_id":"MDQ6VXNlcjExMjI5Mg==","avatar_url":"https://avatars.githubusercontent.com/u/112292?v=4","gravatar_id":"","url":"https://api.github.com/users/wohali","html_url":"https://github.com/wohali","followers_url":"https://api.github.com/users/wohali/followers","following_url":"https://api.github.com/users/wohali/following{/other_user}","gists_url":"https://api.github.com/users/wohali/gists{/gist_id}","starred_url":"https://api.github.com/users/wohali/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wohali/subscriptions","organizations_url":"https://api.github.com/users/wohali/orgs","repos_url":"https://api.github.com/users/wohali/repos","events_url":"https://api.github.com/users/wohali/events{/privacy}","received_events_url":"https://api.github.com/users/wohali/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-16T13:34:21Z","updated_at":"2018-08-16T13:34:21Z","author_association":"MEMBER","body":"@iilyak I'd prefer it if someone with more Erlang experience than I could do a review, but I have no objection at this point. Thanks!","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/413547061/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/413565241","html_url":"https://github.com/apache/couchdb/issues/1373#issuecomment-413565241","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1373","id":413565241,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMzU2NTI0MQ==","user":{"login":"eiri","id":70542,"node_id":"MDQ6VXNlcjcwNTQy","avatar_url":"https://avatars.githubusercontent.com/u/70542?v=4","gravatar_id":"","url":"https://api.github.com/users/eiri","html_url":"https://github.com/eiri","followers_url":"https://api.github.com/users/eiri/followers","following_url":"https://api.github.com/users/eiri/following{/other_user}","gists_url":"https://api.github.com/users/eiri/gists{/gist_id}","starred_url":"https://api.github.com/users/eiri/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eiri/subscriptions","organizations_url":"https://api.github.com/users/eiri/orgs","repos_url":"https://api.github.com/users/eiri/repos","events_url":"https://api.github.com/users/eiri/events{/privacy}","received_events_url":"https://api.github.com/users/eiri/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-16T14:28:24Z","updated_at":"2018-08-16T14:28:24Z","author_association":"MEMBER","body":"> @iilyak : There is one contradiction in your description which prevents me from understanding it 100%. ... \r\n\r\nThere are no contradiction really, it just serialization method of text formatter happened to be `sprints` (or rather `io_lib:format`, because erlang). And _it is_ what we are doing right now: we are formatting message [here first](https://github.com/apache/couchdb/blob/master/src/couch_log/src/couch_log_formatter.erl#L53) and then in a writer we are [packing rest of log entry attributes](https://github.com/apache/couchdb/blob/master/src/couch_log/src/couch_log_writer_stderr.erl#L52).\r\n\r\n> Also I think one of the goals of your proposal is to avoid modifying all places where we call logger. \r\n\r\nWell... yes? If we can get structured logging with minimal changes, no migration and without re-educating everyone on how formatting in logs works then I believe it's a Good Thing.\r\n\r\n> Two bins are useful to avoid name clashes.\r\n\r\nAh, but you have name clashes only because you are introducing two data bins. 😄 \r\n\r\nHere is what I don't like about it:\r\n\r\n1. It makes search queries more complicated. With two data bins you have to guess if you need search for `meta.pid = <0.11.0>` or for `args.pid = <0.11.0>` because programmer felt like packing pid into args instead of passing it to meta.\r\n1. It duplicates data. The same `pid` info can end up both in `args` and in `meta`. Not to mention that it is also written in the message.\r\n1. It encourages to continue to pack meta into message instead of promoting thinking about logs as  structured data.\r\n1. It require inventing new `sprint` format and enforcing everyone to learn it.\r\n\r\nI guess the goal of your proposal is to have both structured and \"informative\" logging at the same time? I agree that it's tempting to make structuring kind of invisible, yet in my opinion the change is rather steep. Also that automatic `couch_log:to_kv/1` conversion doesn't look too helpful to me, it's not really a structure if you have a lot of attributes `args.arg1`, `args.arg2` meaning different things. \r\n\r\nA side note on those macros and semi-automatic updates - I think we can use `parse_transform` to propagate auto-meta, iirc lager was doing that under the hood.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/413565241/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/413576855","html_url":"https://github.com/apache/couchdb/pull/1146#issuecomment-413576855","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1146","id":413576855,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMzU3Njg1NQ==","user":{"login":"abc3","id":1172600,"node_id":"MDQ6VXNlcjExNzI2MDA=","avatar_url":"https://avatars.githubusercontent.com/u/1172600?v=4","gravatar_id":"","url":"https://api.github.com/users/abc3","html_url":"https://github.com/abc3","followers_url":"https://api.github.com/users/abc3/followers","following_url":"https://api.github.com/users/abc3/following{/other_user}","gists_url":"https://api.github.com/users/abc3/gists{/gist_id}","starred_url":"https://api.github.com/users/abc3/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/abc3/subscriptions","organizations_url":"https://api.github.com/users/abc3/orgs","repos_url":"https://api.github.com/users/abc3/repos","events_url":"https://api.github.com/users/abc3/events{/privacy}","received_events_url":"https://api.github.com/users/abc3/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-16T15:02:04Z","updated_at":"2018-08-16T15:02:04Z","author_association":"NONE","body":"Yes, but right now I'm a little bit busy.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/413576855/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/413587790","html_url":"https://github.com/apache/couchdb/issues/1563#issuecomment-413587790","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1563","id":413587790,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMzU4Nzc5MA==","user":{"login":"shimaore","id":55340,"node_id":"MDQ6VXNlcjU1MzQw","avatar_url":"https://avatars.githubusercontent.com/u/55340?v=4","gravatar_id":"","url":"https://api.github.com/users/shimaore","html_url":"https://github.com/shimaore","followers_url":"https://api.github.com/users/shimaore/followers","following_url":"https://api.github.com/users/shimaore/following{/other_user}","gists_url":"https://api.github.com/users/shimaore/gists{/gist_id}","starred_url":"https://api.github.com/users/shimaore/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/shimaore/subscriptions","organizations_url":"https://api.github.com/users/shimaore/orgs","repos_url":"https://api.github.com/users/shimaore/repos","events_url":"https://api.github.com/users/shimaore/events{/privacy}","received_events_url":"https://api.github.com/users/shimaore/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-16T15:34:05Z","updated_at":"2018-08-16T15:34:05Z","author_association":"NONE","body":"Moved to https://github.com/apache/couchdb-documentation/issues/319","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/413587790/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/413605327","html_url":"https://github.com/apache/couchdb/issues/1496#issuecomment-413605327","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1496","id":413605327,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMzYwNTMyNw==","user":{"login":"wohali","id":112292,"node_id":"MDQ6VXNlcjExMjI5Mg==","avatar_url":"https://avatars.githubusercontent.com/u/112292?v=4","gravatar_id":"","url":"https://api.github.com/users/wohali","html_url":"https://github.com/wohali","followers_url":"https://api.github.com/users/wohali/followers","following_url":"https://api.github.com/users/wohali/following{/other_user}","gists_url":"https://api.github.com/users/wohali/gists{/gist_id}","starred_url":"https://api.github.com/users/wohali/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wohali/subscriptions","organizations_url":"https://api.github.com/users/wohali/orgs","repos_url":"https://api.github.com/users/wohali/repos","events_url":"https://api.github.com/users/wohali/events{/privacy}","received_events_url":"https://api.github.com/users/wohali/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-16T16:28:30Z","updated_at":"2018-08-16T16:28:30Z","author_association":"MEMBER","body":"@iilyak rightfully points out that we may well need a versioned API for this as well.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/413605327/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/413613612","html_url":"https://github.com/apache/couchdb/pull/1543#issuecomment-413613612","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1543","id":413613612,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMzYxMzYxMg==","user":{"login":"iilyak","id":9804420,"node_id":"MDQ6VXNlcjk4MDQ0MjA=","avatar_url":"https://avatars.githubusercontent.com/u/9804420?v=4","gravatar_id":"","url":"https://api.github.com/users/iilyak","html_url":"https://github.com/iilyak","followers_url":"https://api.github.com/users/iilyak/followers","following_url":"https://api.github.com/users/iilyak/following{/other_user}","gists_url":"https://api.github.com/users/iilyak/gists{/gist_id}","starred_url":"https://api.github.com/users/iilyak/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/iilyak/subscriptions","organizations_url":"https://api.github.com/users/iilyak/orgs","repos_url":"https://api.github.com/users/iilyak/repos","events_url":"https://api.github.com/users/iilyak/events{/privacy}","received_events_url":"https://api.github.com/users/iilyak/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-16T16:55:57Z","updated_at":"2018-08-16T16:55:57Z","author_association":"CONTRIBUTOR","body":"There is a +1 from @jaydoane ","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/413613612/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/413640943","html_url":"https://github.com/apache/couchdb/issues/1119#issuecomment-413640943","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1119","id":413640943,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMzY0MDk0Mw==","user":{"login":"ghost","id":10137,"node_id":"MDQ6VXNlcjEwMTM3","avatar_url":"https://avatars.githubusercontent.com/u/10137?v=4","gravatar_id":"","url":"https://api.github.com/users/ghost","html_url":"https://github.com/ghost","followers_url":"https://api.github.com/users/ghost/followers","following_url":"https://api.github.com/users/ghost/following{/other_user}","gists_url":"https://api.github.com/users/ghost/gists{/gist_id}","starred_url":"https://api.github.com/users/ghost/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ghost/subscriptions","organizations_url":"https://api.github.com/users/ghost/orgs","repos_url":"https://api.github.com/users/ghost/repos","events_url":"https://api.github.com/users/ghost/events{/privacy}","received_events_url":"https://api.github.com/users/ghost/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-16T18:27:01Z","updated_at":"2018-08-16T18:27:01Z","author_association":"NONE","body":"Thanks for your help. Given that this isn't fabric-related anymore and we've managed to mitigate our failed PUT request issue (delay inserted; we may have been racing with some component during startup; who knows), I'm happy to drop this. If we see fabric-related issues under 2.2.0+ we'll open an issue.\r\n\r\nThanks again.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/413640943/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/413724984","html_url":"https://github.com/apache/couchdb/issues/1119#issuecomment-413724984","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1119","id":413724984,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMzcyNDk4NA==","user":{"login":"wohali","id":112292,"node_id":"MDQ6VXNlcjExMjI5Mg==","avatar_url":"https://avatars.githubusercontent.com/u/112292?v=4","gravatar_id":"","url":"https://api.github.com/users/wohali","html_url":"https://github.com/wohali","followers_url":"https://api.github.com/users/wohali/followers","following_url":"https://api.github.com/users/wohali/following{/other_user}","gists_url":"https://api.github.com/users/wohali/gists{/gist_id}","starred_url":"https://api.github.com/users/wohali/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wohali/subscriptions","organizations_url":"https://api.github.com/users/wohali/orgs","repos_url":"https://api.github.com/users/wohali/repos","events_url":"https://api.github.com/users/wohali/events{/privacy}","received_events_url":"https://api.github.com/users/wohali/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-17T00:44:15Z","updated_at":"2018-08-17T00:44:15Z","author_association":"MEMBER","body":"@browndav Sorry for the frustration in resolving this issue on your behalf.\r\n\r\n(In a single node cluster, just create the databases, no need to join nodes together.)","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/413724984/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/413725199","html_url":"https://github.com/apache/couchdb/issues/1564#issuecomment-413725199","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1564","id":413725199,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMzcyNTE5OQ==","user":{"login":"wohali","id":112292,"node_id":"MDQ6VXNlcjExMjI5Mg==","avatar_url":"https://avatars.githubusercontent.com/u/112292?v=4","gravatar_id":"","url":"https://api.github.com/users/wohali","html_url":"https://github.com/wohali","followers_url":"https://api.github.com/users/wohali/followers","following_url":"https://api.github.com/users/wohali/following{/other_user}","gists_url":"https://api.github.com/users/wohali/gists{/gist_id}","starred_url":"https://api.github.com/users/wohali/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wohali/subscriptions","organizations_url":"https://api.github.com/users/wohali/orgs","repos_url":"https://api.github.com/users/wohali/repos","events_url":"https://api.github.com/users/wohali/events{/privacy}","received_events_url":"https://api.github.com/users/wohali/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-17T00:45:46Z","updated_at":"2018-08-17T00:45:46Z","author_association":"MEMBER","body":"@arifcse019 Are you following our new documentation on shard management? The documentation is accurate, even if you are not on 2.2.0.\r\n\r\nLink: http://docs.couchdb.org/en/stable/cluster/sharding.html","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/413725199/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/413766262","html_url":"https://github.com/apache/couchdb/issues/1316#issuecomment-413766262","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1316","id":413766262,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMzc2NjI2Mg==","user":{"login":"johs","id":48370,"node_id":"MDQ6VXNlcjQ4Mzcw","avatar_url":"https://avatars.githubusercontent.com/u/48370?v=4","gravatar_id":"","url":"https://api.github.com/users/johs","html_url":"https://github.com/johs","followers_url":"https://api.github.com/users/johs/followers","following_url":"https://api.github.com/users/johs/following{/other_user}","gists_url":"https://api.github.com/users/johs/gists{/gist_id}","starred_url":"https://api.github.com/users/johs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/johs/subscriptions","organizations_url":"https://api.github.com/users/johs/orgs","repos_url":"https://api.github.com/users/johs/repos","events_url":"https://api.github.com/users/johs/events{/privacy}","received_events_url":"https://api.github.com/users/johs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-17T06:01:34Z","updated_at":"2018-08-17T06:01:34Z","author_association":"NONE","body":"@asterisks007 thanks so very much for this! Exactly what I needed. We installed successfully on Ubuntu Bionic on a nano AWS instance twice to verify.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/413766262/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/413773169","html_url":"https://github.com/apache/couchdb/issues/1554#issuecomment-413773169","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1554","id":413773169,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMzc3MzE2OQ==","user":{"login":"janl","id":11321,"node_id":"MDQ6VXNlcjExMzIx","avatar_url":"https://avatars.githubusercontent.com/u/11321?v=4","gravatar_id":"","url":"https://api.github.com/users/janl","html_url":"https://github.com/janl","followers_url":"https://api.github.com/users/janl/followers","following_url":"https://api.github.com/users/janl/following{/other_user}","gists_url":"https://api.github.com/users/janl/gists{/gist_id}","starred_url":"https://api.github.com/users/janl/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/janl/subscriptions","organizations_url":"https://api.github.com/users/janl/orgs","repos_url":"https://api.github.com/users/janl/repos","events_url":"https://api.github.com/users/janl/events{/privacy}","received_events_url":"https://api.github.com/users/janl/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-17T06:42:24Z","updated_at":"2018-08-17T06:42:24Z","author_association":"MEMBER","body":"> schema, whatever implementation is, better have conditionals/guards\r\n\r\n@ermouth do you have an example?","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/413773169/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/413774067","html_url":"https://github.com/apache/couchdb/issues/1554#issuecomment-413774067","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1554","id":413774067,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMzc3NDA2Nw==","user":{"login":"ermouth","id":1540047,"node_id":"MDQ6VXNlcjE1NDAwNDc=","avatar_url":"https://avatars.githubusercontent.com/u/1540047?v=4","gravatar_id":"","url":"https://api.github.com/users/ermouth","html_url":"https://github.com/ermouth","followers_url":"https://api.github.com/users/ermouth/followers","following_url":"https://api.github.com/users/ermouth/following{/other_user}","gists_url":"https://api.github.com/users/ermouth/gists{/gist_id}","starred_url":"https://api.github.com/users/ermouth/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ermouth/subscriptions","organizations_url":"https://api.github.com/users/ermouth/orgs","repos_url":"https://api.github.com/users/ermouth/repos","events_url":"https://api.github.com/users/ermouth/events{/privacy}","received_events_url":"https://api.github.com/users/ermouth/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-17T06:47:34Z","updated_at":"2018-08-17T06:53:16Z","author_association":"CONTRIBUTOR","body":"@janl latest json schema has if/then/else\r\n\r\nhttp://json-schema.org/draft-07/json-schema-release-notes.html","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/413774067/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/413810018","html_url":"https://github.com/apache/couchdb/issues/1537#issuecomment-413810018","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1537","id":413810018,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMzgxMDAxOA==","user":{"login":"mikerhodes","id":453210,"node_id":"MDQ6VXNlcjQ1MzIxMA==","avatar_url":"https://avatars.githubusercontent.com/u/453210?v=4","gravatar_id":"","url":"https://api.github.com/users/mikerhodes","html_url":"https://github.com/mikerhodes","followers_url":"https://api.github.com/users/mikerhodes/followers","following_url":"https://api.github.com/users/mikerhodes/following{/other_user}","gists_url":"https://api.github.com/users/mikerhodes/gists{/gist_id}","starred_url":"https://api.github.com/users/mikerhodes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikerhodes/subscriptions","organizations_url":"https://api.github.com/users/mikerhodes/orgs","repos_url":"https://api.github.com/users/mikerhodes/repos","events_url":"https://api.github.com/users/mikerhodes/events{/privacy}","received_events_url":"https://api.github.com/users/mikerhodes/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-17T09:25:30Z","updated_at":"2018-08-17T09:25:45Z","author_association":"CONTRIBUTOR","body":"My bad/misunderstanding, internal format thing :) I'll leave it for now.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/413810018/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/413811756","html_url":"https://github.com/apache/couchdb/issues/1554#issuecomment-413811756","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1554","id":413811756,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMzgxMTc1Ng==","user":{"login":"mikerhodes","id":453210,"node_id":"MDQ6VXNlcjQ1MzIxMA==","avatar_url":"https://avatars.githubusercontent.com/u/453210?v=4","gravatar_id":"","url":"https://api.github.com/users/mikerhodes","html_url":"https://github.com/mikerhodes","followers_url":"https://api.github.com/users/mikerhodes/followers","following_url":"https://api.github.com/users/mikerhodes/following{/other_user}","gists_url":"https://api.github.com/users/mikerhodes/gists{/gist_id}","starred_url":"https://api.github.com/users/mikerhodes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikerhodes/subscriptions","organizations_url":"https://api.github.com/users/mikerhodes/orgs","repos_url":"https://api.github.com/users/mikerhodes/repos","events_url":"https://api.github.com/users/mikerhodes/events{/privacy}","received_events_url":"https://api.github.com/users/mikerhodes/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-17T09:32:23Z","updated_at":"2018-08-17T09:33:58Z","author_association":"CONTRIBUTOR","body":"I'll suggest the obvious: that the guards be declarative and mango selectors.\r\n\r\nI think \"condition\" may be the right term for the authorization's actual business logic (might be a better term from the authorization literature, but it escapes me right now).\r\n\r\nCombining the suggestion to split out the authz section into three fields:\r\n\r\n```\r\n{\r\n    \"authorization\": [\r\n        {\r\n            \"guard\": {\"type\": { \"$eq\": \"post\" }},\r\n            \"condition\": {\"author\": { \"$eq\": \"$userCtx.name\" }},\r\n            \"throw\": \"you can’t update other user’s docs.\"\r\n        }\r\n    ]\r\n}\r\n```","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/413811756/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/413818380","html_url":"https://github.com/apache/couchdb/issues/1554#issuecomment-413818380","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1554","id":413818380,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMzgxODM4MA==","user":{"login":"ermouth","id":1540047,"node_id":"MDQ6VXNlcjE1NDAwNDc=","avatar_url":"https://avatars.githubusercontent.com/u/1540047?v=4","gravatar_id":"","url":"https://api.github.com/users/ermouth","html_url":"https://github.com/ermouth","followers_url":"https://api.github.com/users/ermouth/followers","following_url":"https://api.github.com/users/ermouth/following{/other_user}","gists_url":"https://api.github.com/users/ermouth/gists{/gist_id}","starred_url":"https://api.github.com/users/ermouth/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ermouth/subscriptions","organizations_url":"https://api.github.com/users/ermouth/orgs","repos_url":"https://api.github.com/users/ermouth/repos","events_url":"https://api.github.com/users/ermouth/events{/privacy}","received_events_url":"https://api.github.com/users/ermouth/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-17T09:59:17Z","updated_at":"2018-08-17T14:13:49Z","author_association":"CONTRIBUTOR","body":"@mikerhodes I already suggested exactly same approach (using Mango selectors as guards/conditions), see above, however it was assumed too clever. Nice to see this obvious and practical way came not only in my head.\r\n\r\nWhat is the difference between `guard` and `condition` in you example? And why special `authorization` field needed; I mean why special field if a list of guard/actionList pairs may be used without pinpointing each pair semantic meaning?","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/413818380/reactions","total_count":1,"+1":0,"-1":0,"laugh":1,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/413819029","html_url":"https://github.com/apache/couchdb/issues/1554#issuecomment-413819029","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1554","id":413819029,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMzgxOTAyOQ==","user":{"login":"wohali","id":112292,"node_id":"MDQ6VXNlcjExMjI5Mg==","avatar_url":"https://avatars.githubusercontent.com/u/112292?v=4","gravatar_id":"","url":"https://api.github.com/users/wohali","html_url":"https://github.com/wohali","followers_url":"https://api.github.com/users/wohali/followers","following_url":"https://api.github.com/users/wohali/following{/other_user}","gists_url":"https://api.github.com/users/wohali/gists{/gist_id}","starred_url":"https://api.github.com/users/wohali/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wohali/subscriptions","organizations_url":"https://api.github.com/users/wohali/orgs","repos_url":"https://api.github.com/users/wohali/repos","events_url":"https://api.github.com/users/wohali/events{/privacy}","received_events_url":"https://api.github.com/users/wohali/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-17T10:02:05Z","updated_at":"2018-08-17T10:02:47Z","author_association":"MEMBER","body":"@ermouth I think I misunderstood what you were proposing...probably a language barrier. It's clearer to me now.\r\n\r\nI think the guard is checked first, to make sure that the document would even have the field in question, and then the condition is checked. This would translate to JS in such a way:\r\n\r\n```javascript\r\nif (doc.type === \"post\") {\r\n  if (doc.author != userCtx.name) {\r\n    throw(\"you can't update other users' docs.\")\r\n  }\r\n}\r\n```\r\n\r\nAm I right @mikerhodes ? And if so, perhaps your `condition` has the wrong logic sense? Not sure...","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/413819029/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/413828087","html_url":"https://github.com/apache/couchdb/issues/1373#issuecomment-413828087","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1373","id":413828087,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMzgyODA4Nw==","user":{"login":"iilyak","id":9804420,"node_id":"MDQ6VXNlcjk4MDQ0MjA=","avatar_url":"https://avatars.githubusercontent.com/u/9804420?v=4","gravatar_id":"","url":"https://api.github.com/users/iilyak","html_url":"https://github.com/iilyak","followers_url":"https://api.github.com/users/iilyak/followers","following_url":"https://api.github.com/users/iilyak/following{/other_user}","gists_url":"https://api.github.com/users/iilyak/gists{/gist_id}","starred_url":"https://api.github.com/users/iilyak/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/iilyak/subscriptions","organizations_url":"https://api.github.com/users/iilyak/orgs","repos_url":"https://api.github.com/users/iilyak/repos","events_url":"https://api.github.com/users/iilyak/events{/privacy}","received_events_url":"https://api.github.com/users/iilyak/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-17T10:44:30Z","updated_at":"2018-08-17T10:44:30Z","author_association":"CONTRIBUTOR","body":"> @eiri I guess the goal of your proposal is to have both structured and \"informative\" logging at the same time? \r\n\r\nNo. The goal is to pass args as is in JSON (I'll be talking about JSON but it can be any format). In fact the more I think about it the more I am convinced that the message in log shouldn't have any embedded data at all. I wanted to see `\"Shard compaction: \"` instead of `\"Compacting shards/12344/3452342/something by <0.1.2>\"` in the textual part of the message.\r\n\r\n> Also that automatic couch_log:to_kv/1 conversion doesn't look too helpful to me, it's not really a structure if you have a lot of attributes args.arg1, args.arg2 meaning different things.\r\n\r\nThe `couch_log:to_kv/1` is only a temporary measure to support old style (not yet converted) log statements. I can see two ways of supporting the old style:\r\n- convert invocation in the macro \r\n- have a special case in the formatter  which handles non key-value based arguments\r\n\r\nI think the first approach is better for the following reasons:\r\n- having special case in the formatter means that it needs to be implemented in every formatter\r\n- distinguishing key-value list from plain list is tricky \r\n- it uses exactly the same codepath which means we wouldn't have bugs which affect only one of the styles\r\n\r\n> 1. It makes search queries more complicated. With two data bins you have to guess if you need search for meta.pid = <0.11.0> or for args.pid = <0.11.0> because programmer felt like packing pid into args instead of passing it to meta.\r\n\r\nI agree it could be a problem\r\n\r\n> 2. It duplicates data. The same pid info can end up both in args and in meta. Not to mention that it is also written in the message.\r\n\r\nAgree that same pid can end up in both. I think we should discourage putting any info in the message as I mentioned earlier.\r\n\r\n> 3. It encourages to continue to pack meta into message instead of promoting thinking about logs as structured data.\r\n\r\nOn the contrary. If we make it clear that we are not doing io_lib format at all it would encourage people to remove any printf style formats from their messages. As you can see from the example (I copied the example here from my previous comment) there are no formats in the message:\r\n```\r\n?LOG_ERROR(\"Compaction started\", [\r\n    {compactor_pid, Pid},\r\n    {shard, Shard}\r\n], [{user, #user_ctx.name}]).\r\n```\r\n\r\n> 4. It require inventing new sprint format and enforcing everyone to learn it.\r\n\r\nThis is changed see example with `?LOG_ERROR(\"Compaction started\", [` above. I forgot to mention that my previous comment is iteration of my previous proposal with some elements from yours. As one of ways to discourage putting info into the message we \r\ncould check if the message contain any `~` for new style invocations and abort the build with error. Unfortunately it is impossible to implement in erlang using macro our only option here is parse_transforms. Which I would prefer to avoid.\r\n\r\n> A side note on those macros and semi-automatic updates - I think we can use parse_transform to propagate auto-meta, iirc lager was doing that under the hood.\r\n\r\nWe could but in this case I would propose to bump supported erlang to at least 18.0 so we can use merl. Writing parse_transfrom using erl_syntax is ugly and tedious. \r\n\r\nOveral there is not a big difference between our proposals.\r\n\r\n```\r\ncouch_log:error(\"Compaction started for ~p~n\", [\"shards/....\"], [{pid, <1.2.3>}, {user, \"foo\"}])` ->     \r\n    {\r\n         msg: \"Compaction started shards/...\\n\", \r\n         pid: \"<1.2.3>\", \r\n         user: \"foo\"\r\n    }\r\n```\r\n\r\n```\r\n?LOG_ERROR(\"Compaction started\", [{shard, Shard}, {compactor_pid, <1.2.3>}], [{user, \"foo\"}]) ->\r\n    {\r\n         msg: \"Compaction started\", \r\n         args: {\r\n             compactor_pid, \"<1.2.3>\"\r\n         }, \r\n        \"meta\": {\r\n             user: \"foo\"\r\n        }\r\n    }\r\n```\r\n\r\nAs you can see the differences are:\r\n\r\n|                                                        | eiri |  iilyak |\r\n| -------------------------------- |:---:|:------:|\r\n| Presence of format markers        |  *   |            |\r\n| Embed data into message           |  *   |            |\r\n| Calls to  io_lib:format                   |  *   | maybe|\r\n| Args available in JSON                |       |         * |\r\n| Matadata available in JSON        |  *   |         * |\r\n| Ease of converting old calls        |  *   |         * |\r\n| Have to think where to put args |       |         * |\r\n\r\nI agree with you that the biggest problem with my proposal is that the developer would have to think where to put args either into Args or into Meta. I would be OK with merging two bins if we would find a way to detect keys collision. In this case the only differences between proposals would be:\r\n\r\n- key-value list instead of plain list for Args\r\n- format markers in the message in the source","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/413828087/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/413852026","html_url":"https://github.com/apache/couchdb/issues/1565#issuecomment-413852026","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1565","id":413852026,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMzg1MjAyNg==","user":{"login":"greenais","id":16271522,"node_id":"MDQ6VXNlcjE2MjcxNTIy","avatar_url":"https://avatars.githubusercontent.com/u/16271522?v=4","gravatar_id":"","url":"https://api.github.com/users/greenais","html_url":"https://github.com/greenais","followers_url":"https://api.github.com/users/greenais/followers","following_url":"https://api.github.com/users/greenais/following{/other_user}","gists_url":"https://api.github.com/users/greenais/gists{/gist_id}","starred_url":"https://api.github.com/users/greenais/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/greenais/subscriptions","organizations_url":"https://api.github.com/users/greenais/orgs","repos_url":"https://api.github.com/users/greenais/repos","events_url":"https://api.github.com/users/greenais/events{/privacy}","received_events_url":"https://api.github.com/users/greenais/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-17T12:36:30Z","updated_at":"2018-08-17T12:36:30Z","author_association":"NONE","body":"UPD:\r\nI changed emited secuence of values in key to be [gender, country, city, firstName, lastName] and now gender value in query is respected (as it's \"static\", not \"range\").\r\n\r\nBut I've found out that it seems like only first \"range\" value is respected - i.e. if I fire:\r\n`startkey=[\"male\",\"Argentina\",\"Buenos Aires\",\"Mar\",\"Fru\"]&endkey=[\"male\",\"Argentina\",\"Buenos Aires\",\"Mar\\u9999\",\"Fru\\u9999\"]`\r\nit returns all records starting with Mar in firstName, disregarding requirement for Fru in lastName in query.\r\nIs that expected behaviour?\r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/413852026/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/413854755","html_url":"https://github.com/apache/couchdb/issues/1565#issuecomment-413854755","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1565","id":413854755,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMzg1NDc1NQ==","user":{"login":"wohali","id":112292,"node_id":"MDQ6VXNlcjExMjI5Mg==","avatar_url":"https://avatars.githubusercontent.com/u/112292?v=4","gravatar_id":"","url":"https://api.github.com/users/wohali","html_url":"https://github.com/wohali","followers_url":"https://api.github.com/users/wohali/followers","following_url":"https://api.github.com/users/wohali/following{/other_user}","gists_url":"https://api.github.com/users/wohali/gists{/gist_id}","starred_url":"https://api.github.com/users/wohali/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wohali/subscriptions","organizations_url":"https://api.github.com/users/wohali/orgs","repos_url":"https://api.github.com/users/wohali/repos","events_url":"https://api.github.com/users/wohali/events{/privacy}","received_events_url":"https://api.github.com/users/wohali/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-17T12:48:19Z","updated_at":"2018-08-17T12:48:19Z","author_association":"MEMBER","body":"Indexes work closer to the way you say in your follow-up post. If you want to limit by gender, country, and city, those items must be _first_ in your compound key. However, the remaining items are just sorted by ICU order, so anything that falls inbetween `[\"male\",\"Argentina\",\"Buenos Aires\",\"Mar\",\"Fru\"]` and `[\"male\",\"Argentina\",\"Buenos Aires\",\"Mar\\u9999\",\"Fru\\u9999\"]` *alphabetically* will match. This will include `[\"male\",\"Argentina\",\"Buenos Aires\",\"Mar123\",\"Jan\"] because it sorts (by ICU sort order) inbetween the two keys you've provided. You can't provide what you are suggesting as a prefix limitation on the sub-keys, sorry.\r\n\r\nYou may also want to look at [Mango Indexes](http://docs.couchdb.org/en/stable/api/database/find.html) as an alternative to doing this with JS views. You may find them easier to use (though you will still need to create multiple indexes to achieve what you want). Note that using the operators such as \"$regex\" will cause a full table scan. You will want to investigate partial indexes to achieve what you desire, assuming you know up front you will always want to do sub-searches under known values of various keys.\r\n\r\nThe other option is full-text search with clouseau/dreyfus, but this is challenging to setup and install right now.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/413854755/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/413857630","html_url":"https://github.com/apache/couchdb/issues/1565#issuecomment-413857630","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1565","id":413857630,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMzg1NzYzMA==","user":{"login":"greenais","id":16271522,"node_id":"MDQ6VXNlcjE2MjcxNTIy","avatar_url":"https://avatars.githubusercontent.com/u/16271522?v=4","gravatar_id":"","url":"https://api.github.com/users/greenais","html_url":"https://github.com/greenais","followers_url":"https://api.github.com/users/greenais/followers","following_url":"https://api.github.com/users/greenais/following{/other_user}","gists_url":"https://api.github.com/users/greenais/gists{/gist_id}","starred_url":"https://api.github.com/users/greenais/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/greenais/subscriptions","organizations_url":"https://api.github.com/users/greenais/orgs","repos_url":"https://api.github.com/users/greenais/repos","events_url":"https://api.github.com/users/greenais/events{/privacy}","received_events_url":"https://api.github.com/users/greenais/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-17T13:00:23Z","updated_at":"2018-08-17T13:00:23Z","author_association":"NONE","body":"@wohali \r\nThank you, now it's completely clear.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/413857630/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/413871770","html_url":"https://github.com/apache/couchdb/issues/1373#issuecomment-413871770","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1373","id":413871770,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMzg3MTc3MA==","user":{"login":"eiri","id":70542,"node_id":"MDQ6VXNlcjcwNTQy","avatar_url":"https://avatars.githubusercontent.com/u/70542?v=4","gravatar_id":"","url":"https://api.github.com/users/eiri","html_url":"https://github.com/eiri","followers_url":"https://api.github.com/users/eiri/followers","following_url":"https://api.github.com/users/eiri/following{/other_user}","gists_url":"https://api.github.com/users/eiri/gists{/gist_id}","starred_url":"https://api.github.com/users/eiri/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eiri/subscriptions","organizations_url":"https://api.github.com/users/eiri/orgs","repos_url":"https://api.github.com/users/eiri/repos","events_url":"https://api.github.com/users/eiri/events{/privacy}","received_events_url":"https://api.github.com/users/eiri/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-17T13:48:48Z","updated_at":"2018-08-17T13:48:48Z","author_association":"MEMBER","body":"> No. The goal is to pass args as is in JSON (I'll be talking about JSON but it can be any format). In fact the more I think about it the more I am convinced that the message in log shouldn't have any embedded data at all.\r\n\r\nThen you lost me again. If you are not using args to format message, then _why_ are you insisting on spreading data across two distinct name spaces? Your first answer was \"Two bins are useful to avoid name clashes\" and second: \"The goal is to pass args as is in JSON\". Those are not \"why\", those are consequences of that decision. Both args and meta are data, list of key-values or JSON as you call it - what benefits are there from arbitrary splitting it?\r\n\r\n>   As one of ways to discourage putting info into the message we\r\ncould check if the message contain any ~ for new style invocations and abort the build with error. \r\n\r\nThere are quite a difference between discouraging and crippled functionality. I don't think breaking basic expectation of how logging works will win it a lot of fans.\r\n\r\n> Overall there is not a big difference between our proposals.\r\n\r\nYes, except mine not requiring an ideological revolution and northern river reversal effort to implement. I know you said you don't think it's a big deal - well, I do. Massive re-writing of code base and enforcing people to re-learn things happens, for example PSE, but we can avoid it here and get exactly same result - structured logs.\r\n\r\n> In this case the only differences between proposals would be:\r\n> - key-value list instead of plain list for Args\r\n\r\nActually the real difference here is that you think `Args` is a part of structured data and I see it as a  part of data-point \"message\".\r\n\r\nIt's about user-friendliness really. Purest form of structured log is `couch_log([{message, \"msg\"}, {level, \"info\"}, {key, val},..}])`. Since \"message\" and \"level\" two _required_ attributes, instead of writing:\r\n```erlang\r\nLevel = \"info\",\r\nMsg = io_lib:format(Fmt, Args),\r\ncouch_log([{message, Msg}, {level, Level},..]).\r\n```\r\nWe can write this as `couch_log:Level(Fmt, Args, [{key, val},..])` This is easier to write and find when scanning code, but it's just a syntactic sugar.\r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/413871770/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/413877670","html_url":"https://github.com/apache/couchdb/issues/1373#issuecomment-413877670","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1373","id":413877670,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMzg3NzY3MA==","user":{"login":"iilyak","id":9804420,"node_id":"MDQ6VXNlcjk4MDQ0MjA=","avatar_url":"https://avatars.githubusercontent.com/u/9804420?v=4","gravatar_id":"","url":"https://api.github.com/users/iilyak","html_url":"https://github.com/iilyak","followers_url":"https://api.github.com/users/iilyak/followers","following_url":"https://api.github.com/users/iilyak/following{/other_user}","gists_url":"https://api.github.com/users/iilyak/gists{/gist_id}","starred_url":"https://api.github.com/users/iilyak/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/iilyak/subscriptions","organizations_url":"https://api.github.com/users/iilyak/orgs","repos_url":"https://api.github.com/users/iilyak/repos","events_url":"https://api.github.com/users/iilyak/events{/privacy}","received_events_url":"https://api.github.com/users/iilyak/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-17T14:08:28Z","updated_at":"2018-08-17T14:08:28Z","author_association":"CONTRIBUTOR","body":">  Yes, except mine not requiring an ideological revolution and northern river reversal effort to implement. I know you said you don't think it's a big deal - well, I do.\r\n\r\nThe implementation would be less than 300 lines (most likely less than 50).\r\n\r\n> Actually the real difference here is that you think Args is a part of structured data and I see it as a part of data-point \"message\".\r\n>\r\n> It's about user-friendliness really. Purest form of structured log is couch_log([{message, \"msg\"}, {level, \"info\"}, {key, val},..}]). Since \"message\" and \"level\" two required attributes, instead of writing:\r\n\r\nWhat are the benefits of doing `Msg = io_lib:format(Fmt, Args)`?\r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/413877670/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/413878620","html_url":"https://github.com/apache/couchdb/issues/1373#issuecomment-413878620","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1373","id":413878620,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMzg3ODYyMA==","user":{"login":"eiri","id":70542,"node_id":"MDQ6VXNlcjcwNTQy","avatar_url":"https://avatars.githubusercontent.com/u/70542?v=4","gravatar_id":"","url":"https://api.github.com/users/eiri","html_url":"https://github.com/eiri","followers_url":"https://api.github.com/users/eiri/followers","following_url":"https://api.github.com/users/eiri/following{/other_user}","gists_url":"https://api.github.com/users/eiri/gists{/gist_id}","starred_url":"https://api.github.com/users/eiri/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eiri/subscriptions","organizations_url":"https://api.github.com/users/eiri/orgs","repos_url":"https://api.github.com/users/eiri/repos","events_url":"https://api.github.com/users/eiri/events{/privacy}","received_events_url":"https://api.github.com/users/eiri/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-17T14:11:52Z","updated_at":"2018-08-17T14:12:02Z","author_association":"MEMBER","body":"> The implementation would be less than 300 lines (most likely less than 50).\r\n\r\nI'm not talking about implementation, I'm talking about scale of change - all the code you are suggesting to modify and all public API you are suggesting to redefine.\r\n\r\n> What are the benefits of doing Msg = io_lib:format(Fmt, Args)?\r\n\r\nNot benefits of doing, but benefits of _allowing_ to do, in my opinion software should be helpful to programmer, not limiting and prescriptive. ","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/413878620/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/413879113","html_url":"https://github.com/apache/couchdb/issues/1562#issuecomment-413879113","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1562","id":413879113,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMzg3OTExMw==","user":{"login":"wohali","id":112292,"node_id":"MDQ6VXNlcjExMjI5Mg==","avatar_url":"https://avatars.githubusercontent.com/u/112292?v=4","gravatar_id":"","url":"https://api.github.com/users/wohali","html_url":"https://github.com/wohali","followers_url":"https://api.github.com/users/wohali/followers","following_url":"https://api.github.com/users/wohali/following{/other_user}","gists_url":"https://api.github.com/users/wohali/gists{/gist_id}","starred_url":"https://api.github.com/users/wohali/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wohali/subscriptions","organizations_url":"https://api.github.com/users/wohali/orgs","repos_url":"https://api.github.com/users/wohali/repos","events_url":"https://api.github.com/users/wohali/events{/privacy}","received_events_url":"https://api.github.com/users/wohali/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-17T14:13:25Z","updated_at":"2018-08-17T14:13:25Z","author_association":"MEMBER","body":"I think the concern here is: how many programmatic clients would such a change break? I see your point on browsers, but to be honest, most CouchDB access \"in the field\" is via language-native clients.\r\n\r\nIf this would break the large majority of them (and I expect it would), I would be -1 on this change.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/413879113/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/413891587","html_url":"https://github.com/apache/couchdb/issues/602#issuecomment-413891587","issue_url":"https://api.github.com/repos/apache/couchdb/issues/602","id":413891587,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMzg5MTU4Nw==","user":{"login":"manas86","id":30902765,"node_id":"MDQ6VXNlcjMwOTAyNzY1","avatar_url":"https://avatars.githubusercontent.com/u/30902765?v=4","gravatar_id":"","url":"https://api.github.com/users/manas86","html_url":"https://github.com/manas86","followers_url":"https://api.github.com/users/manas86/followers","following_url":"https://api.github.com/users/manas86/following{/other_user}","gists_url":"https://api.github.com/users/manas86/gists{/gist_id}","starred_url":"https://api.github.com/users/manas86/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/manas86/subscriptions","organizations_url":"https://api.github.com/users/manas86/orgs","repos_url":"https://api.github.com/users/manas86/repos","events_url":"https://api.github.com/users/manas86/events{/privacy}","received_events_url":"https://api.github.com/users/manas86/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-17T14:53:54Z","updated_at":"2018-08-17T14:53:54Z","author_association":"NONE","body":"anyone has any solution for this? we have 2 out of 3 are in maintenance mode and one of DB showing no_majority error.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/413891587/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/413919648","html_url":"https://github.com/apache/couchdb/issues/602#issuecomment-413919648","issue_url":"https://api.github.com/repos/apache/couchdb/issues/602","id":413919648,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMzkxOTY0OA==","user":{"login":"wohali","id":112292,"node_id":"MDQ6VXNlcjExMjI5Mg==","avatar_url":"https://avatars.githubusercontent.com/u/112292?v=4","gravatar_id":"","url":"https://api.github.com/users/wohali","html_url":"https://github.com/wohali","followers_url":"https://api.github.com/users/wohali/followers","following_url":"https://api.github.com/users/wohali/following{/other_user}","gists_url":"https://api.github.com/users/wohali/gists{/gist_id}","starred_url":"https://api.github.com/users/wohali/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wohali/subscriptions","organizations_url":"https://api.github.com/users/wohali/orgs","repos_url":"https://api.github.com/users/wohali/repos","events_url":"https://api.github.com/users/wohali/events{/privacy}","received_events_url":"https://api.github.com/users/wohali/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-17T16:29:26Z","updated_at":"2018-08-17T16:29:26Z","author_association":"MEMBER","body":"@manas86 Are you able to bring either of the 2 nodes out of maintenance mode temporarily?","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/413919648/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/413960278","html_url":"https://github.com/apache/couchdb/issues/1373#issuecomment-413960278","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1373","id":413960278,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMzk2MDI3OA==","user":{"login":"iilyak","id":9804420,"node_id":"MDQ6VXNlcjk4MDQ0MjA=","avatar_url":"https://avatars.githubusercontent.com/u/9804420?v=4","gravatar_id":"","url":"https://api.github.com/users/iilyak","html_url":"https://github.com/iilyak","followers_url":"https://api.github.com/users/iilyak/followers","following_url":"https://api.github.com/users/iilyak/following{/other_user}","gists_url":"https://api.github.com/users/iilyak/gists{/gist_id}","starred_url":"https://api.github.com/users/iilyak/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/iilyak/subscriptions","organizations_url":"https://api.github.com/users/iilyak/orgs","repos_url":"https://api.github.com/users/iilyak/repos","events_url":"https://api.github.com/users/iilyak/events{/privacy}","received_events_url":"https://api.github.com/users/iilyak/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-17T19:02:18Z","updated_at":"2018-08-17T19:02:18Z","author_association":"CONTRIBUTOR","body":"> I'm not talking about implementation, I'm talking about scale of change - all the code you are \r\n> suggesting to modify and all public API you are suggesting to redefine.\r\n\r\nI really like the idea to use macro, because this way we would be able to embed additional meta data about location easily. However if it is one of the most important concerns for you we always can implement the desired functionality via parse_transform. \r\n\r\n\r\n\r\n\r\n>>    What are the benefits of doing Msg = io_lib:format(Fmt, Args)?\r\n>\r\n> Not benefits of doing, but benefits of allowing to do, in my opinion software should be helpful \r\n> to programmer, not limiting and prescriptive.\r\n\r\nIn my opinion if we would keep the current approach (when we call `io_lib:format(Fmt, Args)` \r\nbehind the scene) we as developers would continue to embed data into the message. \r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/413960278/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/413972988","html_url":"https://github.com/apache/couchdb/issues/1564#issuecomment-413972988","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1564","id":413972988,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMzk3Mjk4OA==","user":{"login":"arifcse019","id":10591704,"node_id":"MDQ6VXNlcjEwNTkxNzA0","avatar_url":"https://avatars.githubusercontent.com/u/10591704?v=4","gravatar_id":"","url":"https://api.github.com/users/arifcse019","html_url":"https://github.com/arifcse019","followers_url":"https://api.github.com/users/arifcse019/followers","following_url":"https://api.github.com/users/arifcse019/following{/other_user}","gists_url":"https://api.github.com/users/arifcse019/gists{/gist_id}","starred_url":"https://api.github.com/users/arifcse019/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/arifcse019/subscriptions","organizations_url":"https://api.github.com/users/arifcse019/orgs","repos_url":"https://api.github.com/users/arifcse019/repos","events_url":"https://api.github.com/users/arifcse019/events{/privacy}","received_events_url":"https://api.github.com/users/arifcse019/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-17T19:58:06Z","updated_at":"2018-08-17T19:58:06Z","author_association":"NONE","body":"The issue got resolved by restarting one node in our cluster.\r\n\r\nI used this documentation http://docs.couchdb.org/en/2.1.2/cluster/sharding.html. I did not manually copy shard files to the new node instead I let the internal replication do that job for me after I have updated the cluster metadata for all _dbs using a script. \r\n \r\nPlease note, there were never an inconsistency for any individual document. The inconsistency was limited only to the _all_docs view\r\n\r\nHowever, I never took the cluster offline while moving shards using internal replication. Can that cause the  inconsistency? I mean there could have been write operations in progress when the cluster metadata got updated for a particular DB. That would mean write is going to the old node and a stale version of shard is coming to the new node?\r\n\r\nAnyway, thanks for responding","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/413972988/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/414011532","html_url":"https://github.com/apache/couchdb/issues/1564#issuecomment-414011532","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1564","id":414011532,"node_id":"MDEyOklzc3VlQ29tbWVudDQxNDAxMTUzMg==","user":{"login":"wohali","id":112292,"node_id":"MDQ6VXNlcjExMjI5Mg==","avatar_url":"https://avatars.githubusercontent.com/u/112292?v=4","gravatar_id":"","url":"https://api.github.com/users/wohali","html_url":"https://github.com/wohali","followers_url":"https://api.github.com/users/wohali/followers","following_url":"https://api.github.com/users/wohali/following{/other_user}","gists_url":"https://api.github.com/users/wohali/gists{/gist_id}","starred_url":"https://api.github.com/users/wohali/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wohali/subscriptions","organizations_url":"https://api.github.com/users/wohali/orgs","repos_url":"https://api.github.com/users/wohali/repos","events_url":"https://api.github.com/users/wohali/events{/privacy}","received_events_url":"https://api.github.com/users/wohali/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-17T23:25:48Z","updated_at":"2018-08-17T23:25:48Z","author_association":"MEMBER","body":"@arifcse019 Yes,  you need to keep the node that's being updated in `maintenance_mode` until it's fully caught up with internal replication (or you finish copying around the shards manually).\r\n\r\nThanks for updating us!","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/414011532/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/414012485","html_url":"https://github.com/apache/couchdb/issues/1566#issuecomment-414012485","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1566","id":414012485,"node_id":"MDEyOklzc3VlQ29tbWVudDQxNDAxMjQ4NQ==","user":{"login":"wohali","id":112292,"node_id":"MDQ6VXNlcjExMjI5Mg==","avatar_url":"https://avatars.githubusercontent.com/u/112292?v=4","gravatar_id":"","url":"https://api.github.com/users/wohali","html_url":"https://github.com/wohali","followers_url":"https://api.github.com/users/wohali/followers","following_url":"https://api.github.com/users/wohali/following{/other_user}","gists_url":"https://api.github.com/users/wohali/gists{/gist_id}","starred_url":"https://api.github.com/users/wohali/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wohali/subscriptions","organizations_url":"https://api.github.com/users/wohali/orgs","repos_url":"https://api.github.com/users/wohali/repos","events_url":"https://api.github.com/users/wohali/events{/privacy}","received_events_url":"https://api.github.com/users/wohali/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-17T23:33:23Z","updated_at":"2018-08-17T23:33:23Z","author_association":"MEMBER","body":"@kgeorgiou First, validate that your index is being used with the `/_db/explain` endpoint.\r\n\r\nSecond, my understanding is that `$in` and `$regex` always require the equivalent of a \"full table scan\" due to the fact that they are inexact operators. This is an inherent limitation of how Mango is implemented under the covers (same MapReduce as JS views), and at present further no acceleration is possible.\r\n\r\nYou can work around this inherent limitation in certain cases; for instance, if you want to perform an `$in` search on `a` but only on documents with `type: foo`, then you can create a [partial index](http://docs.couchdb.org/en/stable/api/database/find.html#find-partial-indexes) on documents of `type: foo` and the search, which will be in linear time against just that subset of documents.\r\n\r\nSorry for the disappointment, and hope the above workaround can help you achieve better performance.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/414012485/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/414048770","html_url":"https://github.com/apache/couchdb/issues/1565#issuecomment-414048770","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1565","id":414048770,"node_id":"MDEyOklzc3VlQ29tbWVudDQxNDA0ODc3MA==","user":{"login":"greenais","id":16271522,"node_id":"MDQ6VXNlcjE2MjcxNTIy","avatar_url":"https://avatars.githubusercontent.com/u/16271522?v=4","gravatar_id":"","url":"https://api.github.com/users/greenais","html_url":"https://github.com/greenais","followers_url":"https://api.github.com/users/greenais/followers","following_url":"https://api.github.com/users/greenais/following{/other_user}","gists_url":"https://api.github.com/users/greenais/gists{/gist_id}","starred_url":"https://api.github.com/users/greenais/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/greenais/subscriptions","organizations_url":"https://api.github.com/users/greenais/orgs","repos_url":"https://api.github.com/users/greenais/repos","events_url":"https://api.github.com/users/greenais/events{/privacy}","received_events_url":"https://api.github.com/users/greenais/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-18T10:38:38Z","updated_at":"2018-08-18T10:38:38Z","author_association":"NONE","body":"Partial indexes unfortunately won't help much since they should be pre-defined, but we don't know upfront what string we should filter for.\r\n\r\nAs for multiple indexes I can't see how they could help, as, for instance, if we have for firstName and lastName: Aar(on) Abd(ubakir) - it will narrow output of $gte just a little bit, leaving there everything until Z anyway.\r\nSo the only reliable way to implement .startsWith filtering is to do it programmaticaly on all (potentially huge) query output, I see.\r\n\r\nThank you again for clarification.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/414048770/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/414049034","html_url":"https://github.com/apache/couchdb/issues/1562#issuecomment-414049034","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1562","id":414049034,"node_id":"MDEyOklzc3VlQ29tbWVudDQxNDA0OTAzNA==","user":{"login":"detroitenglish","id":18492423,"node_id":"MDQ6VXNlcjE4NDkyNDIz","avatar_url":"https://avatars.githubusercontent.com/u/18492423?v=4","gravatar_id":"","url":"https://api.github.com/users/detroitenglish","html_url":"https://github.com/detroitenglish","followers_url":"https://api.github.com/users/detroitenglish/followers","following_url":"https://api.github.com/users/detroitenglish/following{/other_user}","gists_url":"https://api.github.com/users/detroitenglish/gists{/gist_id}","starred_url":"https://api.github.com/users/detroitenglish/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/detroitenglish/subscriptions","organizations_url":"https://api.github.com/users/detroitenglish/orgs","repos_url":"https://api.github.com/users/detroitenglish/repos","events_url":"https://api.github.com/users/detroitenglish/events{/privacy}","received_events_url":"https://api.github.com/users/detroitenglish/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-18T10:42:56Z","updated_at":"2018-08-18T10:42:56Z","author_association":"NONE","body":"@wohali thanks as always for your insight:\r\n\r\n> ... how many programmatic clients would such a change break? ... most CouchDB access \"in the field\" is via language-native clients.\r\n\r\nInteresting! For clarity, you're implying that most programmatic clients rely on `/_session` cookies for authentication? [pouchdb-authentication](https://www.npmjs.com/package/pouchdb-authentication) as a purely front-end `/_session` interface, for example, averages ~750 installs per week. Is that indeed trivial compared to these programmatic clients?\r\n\r\n\r\n> If this would break the large majority of them (and I expect it would) ...\r\n\r\nThat's why I propose this be **disabled by default** i.e. purely opt-in.\r\n \r\nPerhaps a broader discussion on bringing `/_session` cookies up to a modern spec would be more appropriate, first? [RFC 2109](https://tools.ietf.org/html/rfc2109.html) reached legal US drinking age this year! 🍻","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/414049034/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/414072634","html_url":"https://github.com/apache/couchdb/issues/1565#issuecomment-414072634","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1565","id":414072634,"node_id":"MDEyOklzc3VlQ29tbWVudDQxNDA3MjYzNA==","user":{"login":"wohali","id":112292,"node_id":"MDQ6VXNlcjExMjI5Mg==","avatar_url":"https://avatars.githubusercontent.com/u/112292?v=4","gravatar_id":"","url":"https://api.github.com/users/wohali","html_url":"https://github.com/wohali","followers_url":"https://api.github.com/users/wohali/followers","following_url":"https://api.github.com/users/wohali/following{/other_user}","gists_url":"https://api.github.com/users/wohali/gists{/gist_id}","starred_url":"https://api.github.com/users/wohali/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wohali/subscriptions","organizations_url":"https://api.github.com/users/wohali/orgs","repos_url":"https://api.github.com/users/wohali/repos","events_url":"https://api.github.com/users/wohali/events{/privacy}","received_events_url":"https://api.github.com/users/wohali/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-18T17:09:42Z","updated_at":"2018-08-18T17:09:42Z","author_association":"MEMBER","body":"`startswith` best option is full-text Lucene based search via clouseau and dreyfus. Unfortunately it requires recompiling CouchDB from source + JDK6 to deploy at present.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/414072634/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/414318213","html_url":"https://github.com/apache/couchdb/issues/602#issuecomment-414318213","issue_url":"https://api.github.com/repos/apache/couchdb/issues/602","id":414318213,"node_id":"MDEyOklzc3VlQ29tbWVudDQxNDMxODIxMw==","user":{"login":"manas86","id":30902765,"node_id":"MDQ6VXNlcjMwOTAyNzY1","avatar_url":"https://avatars.githubusercontent.com/u/30902765?v=4","gravatar_id":"","url":"https://api.github.com/users/manas86","html_url":"https://github.com/manas86","followers_url":"https://api.github.com/users/manas86/followers","following_url":"https://api.github.com/users/manas86/following{/other_user}","gists_url":"https://api.github.com/users/manas86/gists{/gist_id}","starred_url":"https://api.github.com/users/manas86/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/manas86/subscriptions","organizations_url":"https://api.github.com/users/manas86/orgs","repos_url":"https://api.github.com/users/manas86/repos","events_url":"https://api.github.com/users/manas86/events{/privacy}","received_events_url":"https://api.github.com/users/manas86/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-20T13:34:21Z","updated_at":"2018-08-20T13:34:54Z","author_association":"NONE","body":"@wohali Thanks for the solution and at the moment we did exactly same, but this is not what I wanted. Will it be possible for CouchDB, allow the security objects sync internal process through other nodes are in maintenance mode?","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/414318213/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/414375916","html_url":"https://github.com/apache/couchdb/issues/602#issuecomment-414375916","issue_url":"https://api.github.com/repos/apache/couchdb/issues/602","id":414375916,"node_id":"MDEyOklzc3VlQ29tbWVudDQxNDM3NTkxNg==","user":{"login":"wohali","id":112292,"node_id":"MDQ6VXNlcjExMjI5Mg==","avatar_url":"https://avatars.githubusercontent.com/u/112292?v=4","gravatar_id":"","url":"https://api.github.com/users/wohali","html_url":"https://github.com/wohali","followers_url":"https://api.github.com/users/wohali/followers","following_url":"https://api.github.com/users/wohali/following{/other_user}","gists_url":"https://api.github.com/users/wohali/gists{/gist_id}","starred_url":"https://api.github.com/users/wohali/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wohali/subscriptions","organizations_url":"https://api.github.com/users/wohali/orgs","repos_url":"https://api.github.com/users/wohali/repos","events_url":"https://api.github.com/users/wohali/events{/privacy}","received_events_url":"https://api.github.com/users/wohali/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-20T16:19:03Z","updated_at":"2018-08-20T16:19:03Z","author_association":"MEMBER","body":"@manas86 See above, that's what this ticket is tracking, though resolving the issue is not trivial.\r\n\r\nhttps://github.com/apache/couchdb/issues/904","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/414375916/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/414395529","html_url":"https://github.com/apache/couchdb/pull/1370#issuecomment-414395529","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1370","id":414395529,"node_id":"MDEyOklzc3VlQ29tbWVudDQxNDM5NTUyOQ==","user":{"login":"davisp","id":19929,"node_id":"MDQ6VXNlcjE5OTI5","avatar_url":"https://avatars.githubusercontent.com/u/19929?v=4","gravatar_id":"","url":"https://api.github.com/users/davisp","html_url":"https://github.com/davisp","followers_url":"https://api.github.com/users/davisp/followers","following_url":"https://api.github.com/users/davisp/following{/other_user}","gists_url":"https://api.github.com/users/davisp/gists{/gist_id}","starred_url":"https://api.github.com/users/davisp/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/davisp/subscriptions","organizations_url":"https://api.github.com/users/davisp/orgs","repos_url":"https://api.github.com/users/davisp/repos","events_url":"https://api.github.com/users/davisp/events{/privacy}","received_events_url":"https://api.github.com/users/davisp/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-20T17:20:57Z","updated_at":"2018-08-20T17:20:57Z","author_association":"MEMBER","body":"Looks like 4/8/5 were rebased in the wrong order?","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/414395529/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/414395957","html_url":"https://github.com/apache/couchdb/pull/1368#issuecomment-414395957","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1368","id":414395957,"node_id":"MDEyOklzc3VlQ29tbWVudDQxNDM5NTk1Nw==","user":{"login":"davisp","id":19929,"node_id":"MDQ6VXNlcjE5OTI5","avatar_url":"https://avatars.githubusercontent.com/u/19929?v=4","gravatar_id":"","url":"https://api.github.com/users/davisp","html_url":"https://github.com/davisp","followers_url":"https://api.github.com/users/davisp/followers","following_url":"https://api.github.com/users/davisp/following{/other_user}","gists_url":"https://api.github.com/users/davisp/gists{/gist_id}","starred_url":"https://api.github.com/users/davisp/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/davisp/subscriptions","organizations_url":"https://api.github.com/users/davisp/orgs","repos_url":"https://api.github.com/users/davisp/repos","events_url":"https://api.github.com/users/davisp/events{/privacy}","received_events_url":"https://api.github.com/users/davisp/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-20T17:22:24Z","updated_at":"2018-08-20T17:22:24Z","author_association":"MEMBER","body":"+1 but squerge that merge conflict to the commit it goes in.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/414395957/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/414396368","html_url":"https://github.com/apache/couchdb/pull/1369#issuecomment-414396368","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1369","id":414396368,"node_id":"MDEyOklzc3VlQ29tbWVudDQxNDM5NjM2OA==","user":{"login":"davisp","id":19929,"node_id":"MDQ6VXNlcjE5OTI5","avatar_url":"https://avatars.githubusercontent.com/u/19929?v=4","gravatar_id":"","url":"https://api.github.com/users/davisp","html_url":"https://github.com/davisp","followers_url":"https://api.github.com/users/davisp/followers","following_url":"https://api.github.com/users/davisp/following{/other_user}","gists_url":"https://api.github.com/users/davisp/gists{/gist_id}","starred_url":"https://api.github.com/users/davisp/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/davisp/subscriptions","organizations_url":"https://api.github.com/users/davisp/orgs","repos_url":"https://api.github.com/users/davisp/repos","events_url":"https://api.github.com/users/davisp/events{/privacy}","received_events_url":"https://api.github.com/users/davisp/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-20T17:23:44Z","updated_at":"2018-08-20T17:23:44Z","author_association":"MEMBER","body":"+1","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/414396368/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/414396470","html_url":"https://github.com/apache/couchdb/pull/1370#issuecomment-414396470","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1370","id":414396470,"node_id":"MDEyOklzc3VlQ29tbWVudDQxNDM5NjQ3MA==","user":{"login":"davisp","id":19929,"node_id":"MDQ6VXNlcjE5OTI5","avatar_url":"https://avatars.githubusercontent.com/u/19929?v=4","gravatar_id":"","url":"https://api.github.com/users/davisp","html_url":"https://github.com/davisp","followers_url":"https://api.github.com/users/davisp/followers","following_url":"https://api.github.com/users/davisp/following{/other_user}","gists_url":"https://api.github.com/users/davisp/gists{/gist_id}","starred_url":"https://api.github.com/users/davisp/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/davisp/subscriptions","organizations_url":"https://api.github.com/users/davisp/orgs","repos_url":"https://api.github.com/users/davisp/repos","events_url":"https://api.github.com/users/davisp/events{/privacy}","received_events_url":"https://api.github.com/users/davisp/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-20T17:24:01Z","updated_at":"2018-08-20T17:24:01Z","author_association":"MEMBER","body":"+1 after the commits are ordered properly.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/414396470/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/414521801","html_url":"https://github.com/apache/couchdb/pull/1370#issuecomment-414521801","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1370","id":414521801,"node_id":"MDEyOklzc3VlQ29tbWVudDQxNDUyMTgwMQ==","user":{"login":"jiangphcn","id":18000622,"node_id":"MDQ6VXNlcjE4MDAwNjIy","avatar_url":"https://avatars.githubusercontent.com/u/18000622?v=4","gravatar_id":"","url":"https://api.github.com/users/jiangphcn","html_url":"https://github.com/jiangphcn","followers_url":"https://api.github.com/users/jiangphcn/followers","following_url":"https://api.github.com/users/jiangphcn/following{/other_user}","gists_url":"https://api.github.com/users/jiangphcn/gists{/gist_id}","starred_url":"https://api.github.com/users/jiangphcn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jiangphcn/subscriptions","organizations_url":"https://api.github.com/users/jiangphcn/orgs","repos_url":"https://api.github.com/users/jiangphcn/repos","events_url":"https://api.github.com/users/jiangphcn/events{/privacy}","received_events_url":"https://api.github.com/users/jiangphcn/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-21T01:41:21Z","updated_at":"2018-08-21T01:41:21Z","author_association":"CONTRIBUTOR","body":"Hi Paul, @davisp When using `git log --oneline`, the order is correct. \r\n```\r\nlocalhost:src jiangph$ git log --oneline\r\nbf809a8 [10/10] Clustered Purge: Clustered HTTP API\r\n110dcdc [09/10] Clustered Purge: Fabric API\r\n4dcfb50 [08/10] Clustered Purge: Update read-repair\r\n973a599 [07/10] Clustered Purge: Internal replication\r\na947b5c [06/10] Clustered Purge: Update mrview indexes\r\n3279c38 [05/10] Clustered Purge: Add upgrade tests\r\na192aef [04/10] Clustered Purge: Update couch_pse_tests\r\nac8d0f6 [03/10] Clustered Purge: Update couch_bt_engine\r\n4d695f1 [02/10] Clustered Purge: Update single node APIs\r\n0254305 [01/10] Clustered Purge: Define new purge API\r\n830240b Create new on_compact trigger\r\n4c87d78 Enhance PSE tests with setup/teardown functions\r\nc998aa4 Update to use new couch_pse_tests app\r\n0d85abe Update PSE test definitions for new util module\r\n3c94bc4 Rename PSE test modules\r\ndb28f4c Move PSE tests to their own app\r\nf45c036 Rewrite the PSE test suite to use couch_server\r\nda43788 Simplify logic in mem3_rep\r\naea2833 Update fabric_doc_open eunit tests\r\nbb27d5e Fix race on couch_db:reopen/1\r\n151b9b0 Fix default security object handling\r\nda2e22a Fix bug during purge\r\n3852a00 Fix typos in couch_db_engine.erl\r\n```","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/414521801/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/414522693","html_url":"https://github.com/apache/couchdb/pull/1368#issuecomment-414522693","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1368","id":414522693,"node_id":"MDEyOklzc3VlQ29tbWVudDQxNDUyMjY5Mw==","user":{"login":"jiangphcn","id":18000622,"node_id":"MDQ6VXNlcjE4MDAwNjIy","avatar_url":"https://avatars.githubusercontent.com/u/18000622?v=4","gravatar_id":"","url":"https://api.github.com/users/jiangphcn","html_url":"https://github.com/jiangphcn","followers_url":"https://api.github.com/users/jiangphcn/followers","following_url":"https://api.github.com/users/jiangphcn/following{/other_user}","gists_url":"https://api.github.com/users/jiangphcn/gists{/gist_id}","starred_url":"https://api.github.com/users/jiangphcn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jiangphcn/subscriptions","organizations_url":"https://api.github.com/users/jiangphcn/orgs","repos_url":"https://api.github.com/users/jiangphcn/repos","events_url":"https://api.github.com/users/jiangphcn/events{/privacy}","received_events_url":"https://api.github.com/users/jiangphcn/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-21T01:47:01Z","updated_at":"2018-08-21T01:47:01Z","author_association":"CONTRIBUTOR","body":"Thanks @davisp I already squashed that merge conflict to the commit it goes in.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/414522693/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/414637285","html_url":"https://github.com/apache/couchdb/issues/602#issuecomment-414637285","issue_url":"https://api.github.com/repos/apache/couchdb/issues/602","id":414637285,"node_id":"MDEyOklzc3VlQ29tbWVudDQxNDYzNzI4NQ==","user":{"login":"manas86","id":30902765,"node_id":"MDQ6VXNlcjMwOTAyNzY1","avatar_url":"https://avatars.githubusercontent.com/u/30902765?v=4","gravatar_id":"","url":"https://api.github.com/users/manas86","html_url":"https://github.com/manas86","followers_url":"https://api.github.com/users/manas86/followers","following_url":"https://api.github.com/users/manas86/following{/other_user}","gists_url":"https://api.github.com/users/manas86/gists{/gist_id}","starred_url":"https://api.github.com/users/manas86/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/manas86/subscriptions","organizations_url":"https://api.github.com/users/manas86/orgs","repos_url":"https://api.github.com/users/manas86/repos","events_url":"https://api.github.com/users/manas86/events{/privacy}","received_events_url":"https://api.github.com/users/manas86/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-21T11:06:11Z","updated_at":"2018-08-21T11:06:11Z","author_association":"NONE","body":"I could imagine, why it's not trivial. But would really help to do so. ","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/414637285/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/414684822","html_url":"https://github.com/apache/couchdb/pull/1370#issuecomment-414684822","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1370","id":414684822,"node_id":"MDEyOklzc3VlQ29tbWVudDQxNDY4NDgyMg==","user":{"login":"davisp","id":19929,"node_id":"MDQ6VXNlcjE5OTI5","avatar_url":"https://avatars.githubusercontent.com/u/19929?v=4","gravatar_id":"","url":"https://api.github.com/users/davisp","html_url":"https://github.com/davisp","followers_url":"https://api.github.com/users/davisp/followers","following_url":"https://api.github.com/users/davisp/following{/other_user}","gists_url":"https://api.github.com/users/davisp/gists{/gist_id}","starred_url":"https://api.github.com/users/davisp/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/davisp/subscriptions","organizations_url":"https://api.github.com/users/davisp/orgs","repos_url":"https://api.github.com/users/davisp/repos","events_url":"https://api.github.com/users/davisp/events{/privacy}","received_events_url":"https://api.github.com/users/davisp/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-21T14:01:44Z","updated_at":"2018-08-21T14:01:44Z","author_association":"MEMBER","body":"Confirmed locally through not GitHub. Must be ordered on dates or something.\r\n\r\n+1 to merge","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/414684822/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/414696359","html_url":"https://github.com/apache/couchdb/pull/1569#issuecomment-414696359","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1569","id":414696359,"node_id":"MDEyOklzc3VlQ29tbWVudDQxNDY5NjM1OQ==","user":{"login":"davisp","id":19929,"node_id":"MDQ6VXNlcjE5OTI5","avatar_url":"https://avatars.githubusercontent.com/u/19929?v=4","gravatar_id":"","url":"https://api.github.com/users/davisp","html_url":"https://github.com/davisp","followers_url":"https://api.github.com/users/davisp/followers","following_url":"https://api.github.com/users/davisp/following{/other_user}","gists_url":"https://api.github.com/users/davisp/gists{/gist_id}","starred_url":"https://api.github.com/users/davisp/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/davisp/subscriptions","organizations_url":"https://api.github.com/users/davisp/orgs","repos_url":"https://api.github.com/users/davisp/repos","events_url":"https://api.github.com/users/davisp/events{/privacy}","received_events_url":"https://api.github.com/users/davisp/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-21T14:34:50Z","updated_at":"2018-08-21T14:34:50Z","author_association":"MEMBER","body":"This isn't right. Let me create a new one.\r\n\r\nN.B. Accidentally merged 2/5 into the 1/5 branch so have to create a new PR.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/414696359/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/414696857","html_url":"https://github.com/apache/couchdb/pull/1570#issuecomment-414696857","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1570","id":414696857,"node_id":"MDEyOklzc3VlQ29tbWVudDQxNDY5Njg1Nw==","user":{"login":"davisp","id":19929,"node_id":"MDQ6VXNlcjE5OTI5","avatar_url":"https://avatars.githubusercontent.com/u/19929?v=4","gravatar_id":"","url":"https://api.github.com/users/davisp","html_url":"https://github.com/davisp","followers_url":"https://api.github.com/users/davisp/followers","following_url":"https://api.github.com/users/davisp/following{/other_user}","gists_url":"https://api.github.com/users/davisp/gists{/gist_id}","starred_url":"https://api.github.com/users/davisp/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/davisp/subscriptions","organizations_url":"https://api.github.com/users/davisp/orgs","repos_url":"https://api.github.com/users/davisp/repos","events_url":"https://api.github.com/users/davisp/events{/privacy}","received_events_url":"https://api.github.com/users/davisp/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-21T14:36:19Z","updated_at":"2018-08-21T14:36:19Z","author_association":"MEMBER","body":"+1","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/414696857/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/414733860","html_url":"https://github.com/apache/couchdb/issues/1504#issuecomment-414733860","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1504","id":414733860,"node_id":"MDEyOklzc3VlQ29tbWVudDQxNDczMzg2MA==","user":{"login":"wohali","id":112292,"node_id":"MDQ6VXNlcjExMjI5Mg==","avatar_url":"https://avatars.githubusercontent.com/u/112292?v=4","gravatar_id":"","url":"https://api.github.com/users/wohali","html_url":"https://github.com/wohali","followers_url":"https://api.github.com/users/wohali/followers","following_url":"https://api.github.com/users/wohali/following{/other_user}","gists_url":"https://api.github.com/users/wohali/gists{/gist_id}","starred_url":"https://api.github.com/users/wohali/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wohali/subscriptions","organizations_url":"https://api.github.com/users/wohali/orgs","repos_url":"https://api.github.com/users/wohali/repos","events_url":"https://api.github.com/users/wohali/events{/privacy}","received_events_url":"https://api.github.com/users/wohali/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-21T16:20:19Z","updated_at":"2018-08-21T16:20:19Z","author_association":"MEMBER","body":"Some links:\r\n\r\n@rnewson today mentioned implementing [XACML](https://en.wikipedia.org/wiki/XACML) at IBM/Cloudant to replace the current roles system, and I don't see any reason we couldn't consider mirroring this framework, if not the implementation. (Eew, XML.) Robert is going to ask @kocolosk how much of the IBM implementation he can discuss in public. In short, their model doesn't have the PDP layer inside of Couch; if we took the same approach, we'd have to build a PDP inside of Couch, which could consult whatever source of information it wanted. This might or might not include such things as `_security` objects, depending on how we wish to implement things.\r\n\r\nThe thought occurred to me that web-of-trust systems might be useful in this space as well, since it was mentioned on the Wikipedia page for XACML. It'd be especially interesting from a CouchDB replication trust model as well. I think this might be a separate ticket, however. Upcoming (but not yet widespread) standards in this space include DID and OCAP-LD from the W3C.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/414733860/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/414773034","html_url":"https://github.com/apache/couchdb/issues/1571#issuecomment-414773034","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1571","id":414773034,"node_id":"MDEyOklzc3VlQ29tbWVudDQxNDc3MzAzNA==","user":{"login":"davisp","id":19929,"node_id":"MDQ6VXNlcjE5OTI5","avatar_url":"https://avatars.githubusercontent.com/u/19929?v=4","gravatar_id":"","url":"https://api.github.com/users/davisp","html_url":"https://github.com/davisp","followers_url":"https://api.github.com/users/davisp/followers","following_url":"https://api.github.com/users/davisp/following{/other_user}","gists_url":"https://api.github.com/users/davisp/gists{/gist_id}","starred_url":"https://api.github.com/users/davisp/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/davisp/subscriptions","organizations_url":"https://api.github.com/users/davisp/orgs","repos_url":"https://api.github.com/users/davisp/repos","events_url":"https://api.github.com/users/davisp/events{/privacy}","received_events_url":"https://api.github.com/users/davisp/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-21T18:20:36Z","updated_at":"2018-08-21T18:20:36Z","author_association":"MEMBER","body":"Of note here is that the rexi_server processes weren't restarted. The system_limit issue was just a trigger in this case (and an unrelated unfound bug as of now).","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/414773034/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/414774966","html_url":"https://github.com/apache/couchdb/issues/1571#issuecomment-414774966","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1571","id":414774966,"node_id":"MDEyOklzc3VlQ29tbWVudDQxNDc3NDk2Ng==","user":{"login":"nickva","id":211822,"node_id":"MDQ6VXNlcjIxMTgyMg==","avatar_url":"https://avatars.githubusercontent.com/u/211822?v=4","gravatar_id":"","url":"https://api.github.com/users/nickva","html_url":"https://github.com/nickva","followers_url":"https://api.github.com/users/nickva/followers","following_url":"https://api.github.com/users/nickva/following{/other_user}","gists_url":"https://api.github.com/users/nickva/gists{/gist_id}","starred_url":"https://api.github.com/users/nickva/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickva/subscriptions","organizations_url":"https://api.github.com/users/nickva/orgs","repos_url":"https://api.github.com/users/nickva/repos","events_url":"https://api.github.com/users/nickva/events{/privacy}","received_events_url":"https://api.github.com/users/nickva/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-21T18:26:25Z","updated_at":"2018-08-21T18:30:14Z","author_association":"CONTRIBUTOR","body":"It's set to 1 restart per second maximum\r\n\r\nhttps://github.com/apache/couchdb/blob/master/src/rexi/src/rexi_server_sup.erl#L29\r\n\r\nIncrease the number of restarts and period perhaps (10 in 10 seconds)? But wonder if we'd want a cool-down time as well in case the system limit or other overload scenario is temporary and would clear out over a few seconds.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/414774966/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/414776879","html_url":"https://github.com/apache/couchdb/issues/1571#issuecomment-414776879","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1571","id":414776879,"node_id":"MDEyOklzc3VlQ29tbWVudDQxNDc3Njg3OQ==","user":{"login":"davisp","id":19929,"node_id":"MDQ6VXNlcjE5OTI5","avatar_url":"https://avatars.githubusercontent.com/u/19929?v=4","gravatar_id":"","url":"https://api.github.com/users/davisp","html_url":"https://github.com/davisp","followers_url":"https://api.github.com/users/davisp/followers","following_url":"https://api.github.com/users/davisp/following{/other_user}","gists_url":"https://api.github.com/users/davisp/gists{/gist_id}","starred_url":"https://api.github.com/users/davisp/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/davisp/subscriptions","organizations_url":"https://api.github.com/users/davisp/orgs","repos_url":"https://api.github.com/users/davisp/repos","events_url":"https://api.github.com/users/davisp/events{/privacy}","received_events_url":"https://api.github.com/users/davisp/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-21T18:32:08Z","updated_at":"2018-08-21T18:32:08Z","author_association":"MEMBER","body":"I was thinking more like that it should have spidered up to the top rexi supervisor rather than giving up.\r\n\r\nAlso of note was that the rexi_buffer processes were all alive. Should have mentioned that earlier as well. The half alive part of the issue I think is the bigger bug.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/414776879/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/414779667","html_url":"https://github.com/apache/couchdb/issues/1571#issuecomment-414779667","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1571","id":414779667,"node_id":"MDEyOklzc3VlQ29tbWVudDQxNDc3OTY2Nw==","user":{"login":"davisp","id":19929,"node_id":"MDQ6VXNlcjE5OTI5","avatar_url":"https://avatars.githubusercontent.com/u/19929?v=4","gravatar_id":"","url":"https://api.github.com/users/davisp","html_url":"https://github.com/davisp","followers_url":"https://api.github.com/users/davisp/followers","following_url":"https://api.github.com/users/davisp/following{/other_user}","gists_url":"https://api.github.com/users/davisp/gists{/gist_id}","starred_url":"https://api.github.com/users/davisp/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/davisp/subscriptions","organizations_url":"https://api.github.com/users/davisp/orgs","repos_url":"https://api.github.com/users/davisp/repos","events_url":"https://api.github.com/users/davisp/events{/privacy}","received_events_url":"https://api.github.com/users/davisp/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-21T18:41:17Z","updated_at":"2018-08-21T18:41:17Z","author_association":"MEMBER","body":"Hrm, that actually looks not right from the logs. There aren't enough exits from the rexi_server exits to trigger that threshold. However there is this log message for a few nodes:\r\n\r\n`2018-08-18T21:00:12.332403Z db2.clusternme <0.360.0> -  Supervisor rexi_sup had child rexi_server_sup started with rexi_server_sup:start_link(rexi_server_sup) at <0.362.0> exit with reason shutdown in context child_terminated`\r\n\r\nwhich seems odd.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/414779667/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/414831604","html_url":"https://github.com/apache/couchdb/issues/1571#issuecomment-414831604","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1571","id":414831604,"node_id":"MDEyOklzc3VlQ29tbWVudDQxNDgzMTYwNA==","user":{"login":"nickva","id":211822,"node_id":"MDQ6VXNlcjIxMTgyMg==","avatar_url":"https://avatars.githubusercontent.com/u/211822?v=4","gravatar_id":"","url":"https://api.github.com/users/nickva","html_url":"https://github.com/nickva","followers_url":"https://api.github.com/users/nickva/followers","following_url":"https://api.github.com/users/nickva/following{/other_user}","gists_url":"https://api.github.com/users/nickva/gists{/gist_id}","starred_url":"https://api.github.com/users/nickva/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickva/subscriptions","organizations_url":"https://api.github.com/users/nickva/orgs","repos_url":"https://api.github.com/users/nickva/repos","events_url":"https://api.github.com/users/nickva/events{/privacy}","received_events_url":"https://api.github.com/users/nickva/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-21T21:43:40Z","updated_at":"2018-08-21T21:44:53Z","author_association":"CONTRIBUTOR","body":"In https://github.com/apache/couchdb/blob/master/src/rexi/src/rexi_sup.erl#L23 noticed it's one_for_one strategy, so if any of the top level children dies and restarts (like say rexi_sup did in the log), when rexi_sup respawns, nothing will restart all the rexi servers.\r\n\r\n`rexi_server_mon` only checks if it needs to restart servers on cluster membership changes and on startup: https://github.com/apache/couchdb/blob/master/src/rexi/src/rexi_server_mon.erl#L56-L63\r\n\r\nSo maybe we'd want a `rest_for_one` strategy in rexi_sup (in addition to increasing the intensity check timeout in rexi_server_sup?).\r\n\r\n\r\n```\r\ninit([]) ->\r\n    {ok, {{rest_for_one, 3, 10}, [\r\n        {\r\n            rexi_server,\r\n            {rexi_server, start_link, [rexi_server]},\r\n            permanent,\r\n            100,\r\n            worker,\r\n            [rexi_server]\r\n        },\r\n        {\r\n            rexi_server_sup,\r\n            {rexi_server_sup, start_link, [rexi_server_sup]},\r\n            permanent,\r\n            100,\r\n            supervisor,\r\n            [rexi_server_sup]\r\n        },\r\n        {\r\n            rexi_server_mon,\r\n            {rexi_server_mon, start_link, [rexi_server]},\r\n            permanent,\r\n            100,\r\n            worker,\r\n            [rexi_server_mon]\r\n        },\r\n        {\r\n            rexi_buffer_sup,\r\n            {rexi_server_sup, start_link, [rexi_buffer_sup]},\r\n            permanent,\r\n            100,\r\n            supervisor,\r\n            [rexi_server_sup]\r\n        },\r\n        {\r\n            rexi_buffer_mon,\r\n            {rexi_server_mon, start_link, [rexi_buffer]},\r\n            permanent,\r\n            100,\r\n            worker,\r\n            [rexi_server_mon]\r\n        }\r\n    ]}}.\r\n\r\n```\r\n\r\nIn this case if `rexi_server_sup` dies, it will take down `rexi_server_mon` (well and unfortunately the buffers), but then on restart it will bring back `rexi_server_mon` and it should repopulate the servers in `rexi_server_sup`.\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/414831604/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/414839290","html_url":"https://github.com/apache/couchdb/issues/1571#issuecomment-414839290","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1571","id":414839290,"node_id":"MDEyOklzc3VlQ29tbWVudDQxNDgzOTI5MA==","user":{"login":"davisp","id":19929,"node_id":"MDQ6VXNlcjE5OTI5","avatar_url":"https://avatars.githubusercontent.com/u/19929?v=4","gravatar_id":"","url":"https://api.github.com/users/davisp","html_url":"https://github.com/davisp","followers_url":"https://api.github.com/users/davisp/followers","following_url":"https://api.github.com/users/davisp/following{/other_user}","gists_url":"https://api.github.com/users/davisp/gists{/gist_id}","starred_url":"https://api.github.com/users/davisp/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/davisp/subscriptions","organizations_url":"https://api.github.com/users/davisp/orgs","repos_url":"https://api.github.com/users/davisp/repos","events_url":"https://api.github.com/users/davisp/events{/privacy}","received_events_url":"https://api.github.com/users/davisp/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-21T22:14:46Z","updated_at":"2018-08-21T22:14:46Z","author_association":"MEMBER","body":"I think that'd work cause the rexi_server_mon instances don't store state so there's no ordering (i.e., would things get out of whack if only rexi_server_mon for rexi_server_sup died). Although maybe its just me being tired but I'm also kind of leaning towards one_for_all and just restart the whole shebang if anything dies there.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/414839290/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/414839640","html_url":"https://github.com/apache/couchdb/issues/1571#issuecomment-414839640","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1571","id":414839640,"node_id":"MDEyOklzc3VlQ29tbWVudDQxNDgzOTY0MA==","user":{"login":"davisp","id":19929,"node_id":"MDQ6VXNlcjE5OTI5","avatar_url":"https://avatars.githubusercontent.com/u/19929?v=4","gravatar_id":"","url":"https://api.github.com/users/davisp","html_url":"https://github.com/davisp","followers_url":"https://api.github.com/users/davisp/followers","following_url":"https://api.github.com/users/davisp/following{/other_user}","gists_url":"https://api.github.com/users/davisp/gists{/gist_id}","starred_url":"https://api.github.com/users/davisp/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/davisp/subscriptions","organizations_url":"https://api.github.com/users/davisp/orgs","repos_url":"https://api.github.com/users/davisp/repos","events_url":"https://api.github.com/users/davisp/events{/privacy}","received_events_url":"https://api.github.com/users/davisp/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-21T22:16:26Z","updated_at":"2018-08-21T22:16:26Z","author_association":"MEMBER","body":"Also not sure if we need to tweak the restart intensity or not. 3 in 10s seems fine at this level and that wouldn't have been triggered by the incident anyway.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/414839640/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/414842349","html_url":"https://github.com/apache/couchdb/issues/1571#issuecomment-414842349","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1571","id":414842349,"node_id":"MDEyOklzc3VlQ29tbWVudDQxNDg0MjM0OQ==","user":{"login":"nickva","id":211822,"node_id":"MDQ6VXNlcjIxMTgyMg==","avatar_url":"https://avatars.githubusercontent.com/u/211822?v=4","gravatar_id":"","url":"https://api.github.com/users/nickva","html_url":"https://github.com/nickva","followers_url":"https://api.github.com/users/nickva/followers","following_url":"https://api.github.com/users/nickva/following{/other_user}","gists_url":"https://api.github.com/users/nickva/gists{/gist_id}","starred_url":"https://api.github.com/users/nickva/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickva/subscriptions","organizations_url":"https://api.github.com/users/nickva/orgs","repos_url":"https://api.github.com/users/nickva/repos","events_url":"https://api.github.com/users/nickva/events{/privacy}","received_events_url":"https://api.github.com/users/nickva/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-21T22:29:33Z","updated_at":"2018-08-21T22:59:37Z","author_association":"CONTRIBUTOR","body":"It think `rexi_server_mon` can restart by itself. On restart it will check `rexi_server_sup` and either start or stop any new servers as needed on startup then wait on monitor for cluster membership changes and do the same when anything happens there.\r\n\r\nFor restart intensity I was thinking of `{one_for_one, 1, 1}` in https://github.com/apache/couchdb/blob/master/src/rexi/src/rexi_server_sup.erl#L29 but now not sure anymore. Just the restart strategy switch is a better thing to try first\r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/414842349/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/415050962","html_url":"https://github.com/apache/couchdb/pull/1572#issuecomment-415050962","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1572","id":415050962,"node_id":"MDEyOklzc3VlQ29tbWVudDQxNTA1MDk2Mg==","user":{"login":"davisp","id":19929,"node_id":"MDQ6VXNlcjE5OTI5","avatar_url":"https://avatars.githubusercontent.com/u/19929?v=4","gravatar_id":"","url":"https://api.github.com/users/davisp","html_url":"https://github.com/davisp","followers_url":"https://api.github.com/users/davisp/followers","following_url":"https://api.github.com/users/davisp/following{/other_user}","gists_url":"https://api.github.com/users/davisp/gists{/gist_id}","starred_url":"https://api.github.com/users/davisp/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/davisp/subscriptions","organizations_url":"https://api.github.com/users/davisp/orgs","repos_url":"https://api.github.com/users/davisp/repos","events_url":"https://api.github.com/users/davisp/events{/privacy}","received_events_url":"https://api.github.com/users/davisp/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-22T14:26:34Z","updated_at":"2018-08-22T14:26:34Z","author_association":"MEMBER","body":"+1","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/415050962/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/415074692","html_url":"https://github.com/apache/couchdb/issues/1504#issuecomment-415074692","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1504","id":415074692,"node_id":"MDEyOklzc3VlQ29tbWVudDQxNTA3NDY5Mg==","user":{"login":"mikerhodes","id":453210,"node_id":"MDQ6VXNlcjQ1MzIxMA==","avatar_url":"https://avatars.githubusercontent.com/u/453210?v=4","gravatar_id":"","url":"https://api.github.com/users/mikerhodes","html_url":"https://github.com/mikerhodes","followers_url":"https://api.github.com/users/mikerhodes/followers","following_url":"https://api.github.com/users/mikerhodes/following{/other_user}","gists_url":"https://api.github.com/users/mikerhodes/gists{/gist_id}","starred_url":"https://api.github.com/users/mikerhodes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikerhodes/subscriptions","organizations_url":"https://api.github.com/users/mikerhodes/orgs","repos_url":"https://api.github.com/users/mikerhodes/repos","events_url":"https://api.github.com/users/mikerhodes/events{/privacy}","received_events_url":"https://api.github.com/users/mikerhodes/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-22T15:31:01Z","updated_at":"2018-08-22T15:31:01Z","author_association":"CONTRIBUTOR","body":"Mostly, for me, there are a few things that [our IAM implementation](https://console.bluemix.net/docs/services/Cloudant/guides/iam.html) does which would be really nice:\r\n\r\n- Convert a request (based on request path) to a symbolic action name which can then be used for authz and for request dispatching within the system (rather than having various places parsing URL paths etc.). E.g., `couchdb.db.read-document`.\r\n- There is a flexible actions to roles mapping that can be set up by an admin -- so we'd be able to allow a couch admin to create and \"operator\" role and specify what that role has access to (e.g., the various `_info` endpoints, things under `/_admin` and so on).\r\n- Likely the `_security` doc format needs to be altered to allow for a more flexible role/user/group mappings.\r\n\r\nI like the idea of chttpd converting the HTTP request into some kind of object that's specific to the request being made, like a view request, and validating all the parameters when creating that request-specific object, rather than passing down the HTTP request itself. I think this would be needed to really have a solid security split, as the lower levels could assume both the request is allowed and that the data can be trusted.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/415074692/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/415076268","html_url":"https://github.com/apache/couchdb/issues/1554#issuecomment-415076268","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1554","id":415076268,"node_id":"MDEyOklzc3VlQ29tbWVudDQxNTA3NjI2OA==","user":{"login":"mikerhodes","id":453210,"node_id":"MDQ6VXNlcjQ1MzIxMA==","avatar_url":"https://avatars.githubusercontent.com/u/453210?v=4","gravatar_id":"","url":"https://api.github.com/users/mikerhodes","html_url":"https://github.com/mikerhodes","followers_url":"https://api.github.com/users/mikerhodes/followers","following_url":"https://api.github.com/users/mikerhodes/following{/other_user}","gists_url":"https://api.github.com/users/mikerhodes/gists{/gist_id}","starred_url":"https://api.github.com/users/mikerhodes/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mikerhodes/subscriptions","organizations_url":"https://api.github.com/users/mikerhodes/orgs","repos_url":"https://api.github.com/users/mikerhodes/repos","events_url":"https://api.github.com/users/mikerhodes/events{/privacy}","received_events_url":"https://api.github.com/users/mikerhodes/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-22T15:35:34Z","updated_at":"2018-08-22T15:37:04Z","author_association":"CONTRIBUTOR","body":"@wohali Yes, that's the basic logic. I think my condition logic is the wrong way around, because I would say that the `throw` happens if `condition` is false rather than if condition is true.\r\n\r\n```js\r\nif (doc.type === \"post\") {   // i.e., \"if <guard condition>\"\r\n  if (! (doc.author == userCtx.name)) {  // i.e., \"if not <condition>\"\r\n    throw(\"you can't update other users' docs.\")\r\n  }\r\n}\r\n```\r\n\r\n@ermouth I can see that you could combine the guard and the condition into a single clause quite easily given they are both Mango selectors. I just find that the logical distinction of \"the types of thing this authorisation decision applies to\" (guard) and \"the authorisation condition itself\" (condition) makes things more clear.\r\n\r\nAs to whether `schema` and `authorization` are worthy of separate top-level concepts when I could see that you're right again that they could be combined in a kind of guard-condition-action type framework, I'm unsure. Again, it perhaps helps to separate them from a readability point of view, \"here's my schema check, here's my authorisation check\". Unsure.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/415076268/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/415138665","html_url":"https://github.com/apache/couchdb/issues/1573#issuecomment-415138665","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1573","id":415138665,"node_id":"MDEyOklzc3VlQ29tbWVudDQxNTEzODY2NQ==","user":{"login":"davisp","id":19929,"node_id":"MDQ6VXNlcjE5OTI5","avatar_url":"https://avatars.githubusercontent.com/u/19929?v=4","gravatar_id":"","url":"https://api.github.com/users/davisp","html_url":"https://github.com/davisp","followers_url":"https://api.github.com/users/davisp/followers","following_url":"https://api.github.com/users/davisp/following{/other_user}","gists_url":"https://api.github.com/users/davisp/gists{/gist_id}","starred_url":"https://api.github.com/users/davisp/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/davisp/subscriptions","organizations_url":"https://api.github.com/users/davisp/orgs","repos_url":"https://api.github.com/users/davisp/repos","events_url":"https://api.github.com/users/davisp/events{/privacy}","received_events_url":"https://api.github.com/users/davisp/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-22T18:47:19Z","updated_at":"2018-08-22T18:47:19Z","author_association":"MEMBER","body":"I.e., this module attribute: https://github.com/apache/couchdb/blob/master/src/couch_pse_tests/src/cpse_test_purge_docs.erl#L14","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/415138665/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/415159645","html_url":"https://github.com/apache/couchdb/pull/1574#issuecomment-415159645","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1574","id":415159645,"node_id":"MDEyOklzc3VlQ29tbWVudDQxNTE1OTY0NQ==","user":{"login":"davisp","id":19929,"node_id":"MDQ6VXNlcjE5OTI5","avatar_url":"https://avatars.githubusercontent.com/u/19929?v=4","gravatar_id":"","url":"https://api.github.com/users/davisp","html_url":"https://github.com/davisp","followers_url":"https://api.github.com/users/davisp/followers","following_url":"https://api.github.com/users/davisp/following{/other_user}","gists_url":"https://api.github.com/users/davisp/gists{/gist_id}","starred_url":"https://api.github.com/users/davisp/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/davisp/subscriptions","organizations_url":"https://api.github.com/users/davisp/orgs","repos_url":"https://api.github.com/users/davisp/repos","events_url":"https://api.github.com/users/davisp/events{/privacy}","received_events_url":"https://api.github.com/users/davisp/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-22T19:57:55Z","updated_at":"2018-08-22T19:57:55Z","author_association":"MEMBER","body":"Trivially reproduced with this Python script:\r\n\r\nI wanted to get the PR out but I'm also going to try and contemplate how to test this a bit more directly.\r\n\r\n```python\r\n#!/usr/bin/env python\r\n\r\nimport base64\r\nimport json\r\nimport os\r\nimport random\r\n\r\nimport requests\r\n\r\nS = requests.session()\r\nS.auth = (\"adm\", \"pwd\")\r\nS.headers[\"Content-Type\"] = \"application/json\"\r\nBASE = \"http://127.0.0.1:15986/\"\r\nDB = BASE + \"foo\"\r\nDDOC = DB + \"/_design/bar\"\r\nVIEW = DDOC + \"/_view/bam\"\r\nSIG = \"1d2f27b7abd18837599f078927c7bc1f\"\r\n\r\n\r\ndef gen_key():\r\n    data = os.urandom(50)\r\n    return base64.b64encode(data)\r\n\r\n\r\ndef gen_device():\r\n    return {\r\n        \"tx_bytes\": random.randint(1, 8192),\r\n        \"rx_bytes\": random.randint(1, 8192)\r\n    }\r\n\r\n\r\ndef gen_data():\r\n    ret = {}\r\n    for i in range(1024):\r\n        ret[gen_key()] = gen_device()\r\n    return ret\r\n\r\n\r\ndef load_docs():\r\n    for i in range(25):\r\n        print \"Generating: %d - %d\" % (i*100, (i+1)*100)\r\n        docs = []\r\n        for j in range(100):\r\n            docs.append({\r\n                \"_id\": \"%06d\" % ((i*100) + j),\r\n                \"data\": gen_data()\r\n            })\r\n        body = json.dumps({\"docs\": docs})\r\n        r = S.post(DB + \"/_bulk_docs\", data=body)\r\n        r.raise_for_status()\r\n\r\n\r\ndef load_ddoc():\r\n    ddoc = {\r\n        \"language\": \"javascript\",\r\n        \"views\": {\r\n            \"bam\": {\r\n                \"map\": \"\"\"\r\n                    function(doc) {\r\n                        emit(doc._id, doc.data);\r\n                    }\"\"\",\r\n                #\"reduce\": \"_sum\"\r\n                \"reduce\": \"\"\"\r\n                    function(keys, values) {\r\n                        var obj = {};\r\n                        for(var v in values) {\r\n                            for(var k in values[v]) {\r\n                                log(k);\r\n                                obj[k] = values[v][k];\r\n                            }\r\n                        }\r\n                        return obj;\r\n                    }\r\n                \"\"\"\r\n            }\r\n        }\r\n    }\r\n    body = json.dumps(ddoc)\r\n    r = S.put(DB + \"/_design/bar\", data=body)\r\n    r.raise_for_status()\r\n\r\n\r\ndef get_size():\r\n    fname = \"dev/lib/node1/data/.foo_design/mrview/%s.view\" % SIG\r\n    return os.stat(fname).st_size\r\n\r\n\r\ndef get_task():\r\n    r = S.get(BASE + \"/_active_tasks\")\r\n    for t in r.json():\r\n        return t\r\n\r\ndef main():\r\n    S.delete(DB)\r\n    r = S.put(DB)\r\n    r.raise_for_status()\r\n    load_docs()\r\n    load_ddoc()\r\n\r\n    r = S.get(VIEW, params={\"limit\": 0})\r\n    r.raise_for_status()\r\n\r\n    print \"Initial build: %d\" % get_size()\r\n\r\n    r = S.post(DDOC + \"/_compact\")\r\n    r.raise_for_status()\r\n\r\n    print get_task()\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    main()\r\n```","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/415159645/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/415184561","html_url":"https://github.com/apache/couchdb/pull/1574#issuecomment-415184561","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1574","id":415184561,"node_id":"MDEyOklzc3VlQ29tbWVudDQxNTE4NDU2MQ==","user":{"login":"davisp","id":19929,"node_id":"MDQ6VXNlcjE5OTI5","avatar_url":"https://avatars.githubusercontent.com/u/19929?v=4","gravatar_id":"","url":"https://api.github.com/users/davisp","html_url":"https://github.com/davisp","followers_url":"https://api.github.com/users/davisp/followers","following_url":"https://api.github.com/users/davisp/following{/other_user}","gists_url":"https://api.github.com/users/davisp/gists{/gist_id}","starred_url":"https://api.github.com/users/davisp/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/davisp/subscriptions","organizations_url":"https://api.github.com/users/davisp/orgs","repos_url":"https://api.github.com/users/davisp/repos","events_url":"https://api.github.com/users/davisp/events{/privacy}","received_events_url":"https://api.github.com/users/davisp/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-22T21:21:09Z","updated_at":"2018-08-22T21:21:09Z","author_association":"MEMBER","body":"@nickva pointed me to the module tests which I'll add tonight or tomorrow before this is merged.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/415184561/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/415205074","html_url":"https://github.com/apache/couchdb/issues/1559#issuecomment-415205074","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1559","id":415205074,"node_id":"MDEyOklzc3VlQ29tbWVudDQxNTIwNTA3NA==","user":{"login":"linacs","id":7925062,"node_id":"MDQ6VXNlcjc5MjUwNjI=","avatar_url":"https://avatars.githubusercontent.com/u/7925062?v=4","gravatar_id":"","url":"https://api.github.com/users/linacs","html_url":"https://github.com/linacs","followers_url":"https://api.github.com/users/linacs/followers","following_url":"https://api.github.com/users/linacs/following{/other_user}","gists_url":"https://api.github.com/users/linacs/gists{/gist_id}","starred_url":"https://api.github.com/users/linacs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/linacs/subscriptions","organizations_url":"https://api.github.com/users/linacs/orgs","repos_url":"https://api.github.com/users/linacs/repos","events_url":"https://api.github.com/users/linacs/events{/privacy}","received_events_url":"https://api.github.com/users/linacs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-22T22:36:01Z","updated_at":"2018-08-22T22:36:01Z","author_association":"NONE","body":"Hello!\r\nI *really love* this proposal, which would have a very strong impact on my use cases. I use CouchApp, so my comments will be about two points I see to consider:\r\n\r\n_ Dynamic _rewrites: On the \"to\" field, the REST API from the browser could be rewritten to target directly the partial document.\r\n\r\n_ Error handling: What happens if the targeted id/field is missing? There should be a way to handle that (right now, when a document is missing after a rewrite, it's already a mess...).\r\n\r\nI like your syntax, very comprehensive (but indeed, as said earlier, the '#' could be a technical problem. \"/_/\" is very interesting, it looks like the old \"/#/\" but with an underscore, beloved by couchDB).\r\nMoreover, Couchbase has already this feature (but without a REST access?).\r\nhttps://developer.couchbase.com/documentation/server/current/sdk/subdocument-operations.html\r\n\r\n\r\nGilles","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/415205074/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/415255674","html_url":"https://github.com/apache/couchdb/issues/1573#issuecomment-415255674","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1573","id":415255674,"node_id":"MDEyOklzc3VlQ29tbWVudDQxNTI1NTY3NA==","user":{"login":"jiangphcn","id":18000622,"node_id":"MDQ6VXNlcjE4MDAwNjIy","avatar_url":"https://avatars.githubusercontent.com/u/18000622?v=4","gravatar_id":"","url":"https://api.github.com/users/jiangphcn","html_url":"https://github.com/jiangphcn","followers_url":"https://api.github.com/users/jiangphcn/followers","following_url":"https://api.github.com/users/jiangphcn/following{/other_user}","gists_url":"https://api.github.com/users/jiangphcn/gists{/gist_id}","starred_url":"https://api.github.com/users/jiangphcn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jiangphcn/subscriptions","organizations_url":"https://api.github.com/users/jiangphcn/orgs","repos_url":"https://api.github.com/users/jiangphcn/repos","events_url":"https://api.github.com/users/jiangphcn/events{/privacy}","received_events_url":"https://api.github.com/users/jiangphcn/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-23T01:57:20Z","updated_at":"2018-08-23T01:57:20Z","author_association":"CONTRIBUTOR","body":"Working on this","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/415255674/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/415394216","html_url":"https://github.com/apache/couchdb/issues/1559#issuecomment-415394216","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1559","id":415394216,"node_id":"MDEyOklzc3VlQ29tbWVudDQxNTM5NDIxNg==","user":{"login":"janl","id":11321,"node_id":"MDQ6VXNlcjExMzIx","avatar_url":"https://avatars.githubusercontent.com/u/11321?v=4","gravatar_id":"","url":"https://api.github.com/users/janl","html_url":"https://github.com/janl","followers_url":"https://api.github.com/users/janl/followers","following_url":"https://api.github.com/users/janl/following{/other_user}","gists_url":"https://api.github.com/users/janl/gists{/gist_id}","starred_url":"https://api.github.com/users/janl/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/janl/subscriptions","organizations_url":"https://api.github.com/users/janl/orgs","repos_url":"https://api.github.com/users/janl/repos","events_url":"https://api.github.com/users/janl/events{/privacy}","received_events_url":"https://api.github.com/users/janl/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-23T12:18:08Z","updated_at":"2018-08-23T12:18:08Z","author_association":"MEMBER","body":"Thanks for your additional input.\r\n\r\n> _ Dynamic _rewrites:\r\n\r\nunless this works already, there isn’t anything we’re going to change here\r\n\r\n> _ Error handling: What happens if the targeted id/field is missing? \r\n\r\nmissing doc will cause a normal `404`, missing fields is an interesting one that is unspecified as of now, thanks for pointing that out.\r\n\r\n```\r\nGET /doc/_/foo/nonexistent -> 404\r\nGET /doc/_/foo/nonexistent/bar/baz -> 404\r\n```\r\n\r\n```\r\nDELETE /doc/_/nonexistent -> 404 | alternatively: 200 and return the old rev to signify no change, but the result is achieved. // maybe one of this is the default and one of this is available via a `?option=true|false`\r\nDELETE /doc/_/foo/nonexistent/bar/baz -> same as before\r\n```\r\n\r\n```\r\nPUT /doc/_/nonexistent -> 200 -> creates new field\r\nPUT /doc/_/nonexistent/bar -> 200 -> creates new field and new sub field // this is analogous to how we create attachments and docs in one go // we could add an option `?fail_if_no_exist=true` \r\n```\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/415394216/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/415421884","html_url":"https://github.com/apache/couchdb/issues/1575#issuecomment-415421884","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1575","id":415421884,"node_id":"MDEyOklzc3VlQ29tbWVudDQxNTQyMTg4NA==","user":{"login":"ermouth","id":1540047,"node_id":"MDQ6VXNlcjE1NDAwNDc=","avatar_url":"https://avatars.githubusercontent.com/u/1540047?v=4","gravatar_id":"","url":"https://api.github.com/users/ermouth","html_url":"https://github.com/ermouth","followers_url":"https://api.github.com/users/ermouth/followers","following_url":"https://api.github.com/users/ermouth/following{/other_user}","gists_url":"https://api.github.com/users/ermouth/gists{/gist_id}","starred_url":"https://api.github.com/users/ermouth/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ermouth/subscriptions","organizations_url":"https://api.github.com/users/ermouth/orgs","repos_url":"https://api.github.com/users/ermouth/repos","events_url":"https://api.github.com/users/ermouth/events{/privacy}","received_events_url":"https://api.github.com/users/ermouth/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-23T13:53:35Z","updated_at":"2018-08-23T13:53:35Z","author_association":"CONTRIBUTOR","body":"Could you please provide exact JS code you are running, as a JSON ddoc with instructions? We test perf of new versions, and experienced no serious speed degradation of JS query server from version to version.\r\n\r\nBTW how many cores do your have?","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/415421884/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/415441345","html_url":"https://github.com/apache/couchdb/pull/1482#issuecomment-415441345","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1482","id":415441345,"node_id":"MDEyOklzc3VlQ29tbWVudDQxNTQ0MTM0NQ==","user":{"login":"garrensmith","id":179458,"node_id":"MDQ6VXNlcjE3OTQ1OA==","avatar_url":"https://avatars.githubusercontent.com/u/179458?v=4","gravatar_id":"","url":"https://api.github.com/users/garrensmith","html_url":"https://github.com/garrensmith","followers_url":"https://api.github.com/users/garrensmith/followers","following_url":"https://api.github.com/users/garrensmith/following{/other_user}","gists_url":"https://api.github.com/users/garrensmith/gists{/gist_id}","starred_url":"https://api.github.com/users/garrensmith/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/garrensmith/subscriptions","organizations_url":"https://api.github.com/users/garrensmith/orgs","repos_url":"https://api.github.com/users/garrensmith/repos","events_url":"https://api.github.com/users/garrensmith/events{/privacy}","received_events_url":"https://api.github.com/users/garrensmith/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-23T14:36:23Z","updated_at":"2018-08-23T14:36:23Z","author_association":"MEMBER","body":"closing for https://github.com/apache/couchdb/pull/1577","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/415441345/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/415441353","html_url":"https://github.com/apache/couchdb/issues/1559#issuecomment-415441353","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1559","id":415441353,"node_id":"MDEyOklzc3VlQ29tbWVudDQxNTQ0MTM1Mw==","user":{"login":"janl","id":11321,"node_id":"MDQ6VXNlcjExMzIx","avatar_url":"https://avatars.githubusercontent.com/u/11321?v=4","gravatar_id":"","url":"https://api.github.com/users/janl","html_url":"https://github.com/janl","followers_url":"https://api.github.com/users/janl/followers","following_url":"https://api.github.com/users/janl/following{/other_user}","gists_url":"https://api.github.com/users/janl/gists{/gist_id}","starred_url":"https://api.github.com/users/janl/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/janl/subscriptions","organizations_url":"https://api.github.com/users/janl/orgs","repos_url":"https://api.github.com/users/janl/repos","events_url":"https://api.github.com/users/janl/events{/privacy}","received_events_url":"https://api.github.com/users/janl/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-23T14:36:24Z","updated_at":"2018-08-23T14:36:24Z","author_association":"MEMBER","body":"And one more general point. For me, this proposal predates Mango by a couple of years, I only now got around to writing it up.\r\n\r\nWhen I talked about this potential feature internally at work, we came to the conclusion that it might be less confusing to use Mango index definitions here, instead of JSON Pointer. The benefit of JSON Pointer fitting natively into URLs are nice, but not necessarily important enough to introduce two different ways for specifying how to specify fields inside a document.\r\n\r\nAs a refresher, here’s [how Mango does it](http://docs.couchdb.org/en/stable/api/database/find.html#db-index):\r\n\r\n```\r\n{\r\n    \"index\": {\r\n        \"fields\": [\"foo.bar.baz.3\"]\r\n    },\r\n    \"name\" : \"foo-index\",\r\n    \"type\" : \"json\"\r\n}\r\n```\r\n\r\nthis would index `d` this doc:\r\n\r\n```\r\n{\r\n  \"foo\": { \"bar\": { \"baz\": [\"a\", \"b\", \"c\",\"d\",\"e\",\"f\"] } }\r\n}\r\n```\r\n\r\nSo effectively, Mango syntax is just like JSON Pointer, expect every `/` is a `.`.\r\n\r\nI think this would make for a more coherent proposal.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/415441353/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/415574468","html_url":"https://github.com/apache/couchdb/issues/1575#issuecomment-415574468","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1575","id":415574468,"node_id":"MDEyOklzc3VlQ29tbWVudDQxNTU3NDQ2OA==","user":{"login":"linacs","id":7925062,"node_id":"MDQ6VXNlcjc5MjUwNjI=","avatar_url":"https://avatars.githubusercontent.com/u/7925062?v=4","gravatar_id":"","url":"https://api.github.com/users/linacs","html_url":"https://github.com/linacs","followers_url":"https://api.github.com/users/linacs/followers","following_url":"https://api.github.com/users/linacs/following{/other_user}","gists_url":"https://api.github.com/users/linacs/gists{/gist_id}","starred_url":"https://api.github.com/users/linacs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/linacs/subscriptions","organizations_url":"https://api.github.com/users/linacs/orgs","repos_url":"https://api.github.com/users/linacs/repos","events_url":"https://api.github.com/users/linacs/events{/privacy}","received_events_url":"https://api.github.com/users/linacs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-23T21:19:16Z","updated_at":"2018-08-23T21:19:16Z","author_association":"NONE","body":"Hello,\r\nthank you for your answer.\r\nHow can I send you the code?\r\nIt reminds me: I run couchjs with\r\njavascript = /opt/couchdb/bin/couchjs --eval /opt/couchdb/share/server/main.js\r\nThe \"--eval\" is mandatory because of Handlebar...\r\nI did not test couchjs-node, but I don't know if it's stable enough and if it implies a difficult migration...\r\n\r\nThe problem is very strong on 4 core machines (Intel(R) Atom(TM) CPU  C2550  @ 2.40GH), and only annoying on AWS T2.small (1 vCPU).\r\n\r\nThanks,\r\nGilles","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/415574468/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/415578475","html_url":"https://github.com/apache/couchdb/issues/1559#issuecomment-415578475","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1559","id":415578475,"node_id":"MDEyOklzc3VlQ29tbWVudDQxNTU3ODQ3NQ==","user":{"login":"linacs","id":7925062,"node_id":"MDQ6VXNlcjc5MjUwNjI=","avatar_url":"https://avatars.githubusercontent.com/u/7925062?v=4","gravatar_id":"","url":"https://api.github.com/users/linacs","html_url":"https://github.com/linacs","followers_url":"https://api.github.com/users/linacs/followers","following_url":"https://api.github.com/users/linacs/following{/other_user}","gists_url":"https://api.github.com/users/linacs/gists{/gist_id}","starred_url":"https://api.github.com/users/linacs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/linacs/subscriptions","organizations_url":"https://api.github.com/users/linacs/orgs","repos_url":"https://api.github.com/users/linacs/repos","events_url":"https://api.github.com/users/linacs/events{/privacy}","received_events_url":"https://api.github.com/users/linacs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-23T21:34:30Z","updated_at":"2018-08-23T21:34:30Z","author_association":"NONE","body":"I'm not familiar with Mango, can't tell...\r\nAbout 404: What I think is missing, for CouchApps, is some kind of hook to adapt the answer. But I think I could manage with the frontend. I give you an example: I use vhosts to redirect to a given document representing a school. If was really complicated to make a proper webpage displaying that a school is not existing (to avoid a CouchDB error in case of missing document!). Customising 404 is something quite common on webservers I think. However, for this particular scenario with subdocuments, if 404 return a Json with the missing id, it would be fine to deal with I think.\r\n\r\nHere is how I use rewrites (one line extracted from my API, I have a hundred like this):\r\n\r\n    { \"from\": \"webapp/:school/api/timetables/:timetableid/teachers/:teacherid\", \"to\": `\"_update/api/:school\", \"method\": \"POST\", \"query\": { \"module\": \"timetables\", \"callback\": \"os_timetables_teachers_post\", \"access\": \"admin\", \"timetableid\": \":timetableid\", \"teacherid\": \":teacherid\" } },`\r\n\r\nSo, if it can be changed to:\r\n`\"to\": \"_update/api/:school/_/timetables/:timetableid/teachers/:teacherid\"`\r\nit would be fantastatic!  :)","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/415578475/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/415592756","html_url":"https://github.com/apache/couchdb/issues/1575#issuecomment-415592756","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1575","id":415592756,"node_id":"MDEyOklzc3VlQ29tbWVudDQxNTU5Mjc1Ng==","user":{"login":"ermouth","id":1540047,"node_id":"MDQ6VXNlcjE1NDAwNDc=","avatar_url":"https://avatars.githubusercontent.com/u/1540047?v=4","gravatar_id":"","url":"https://api.github.com/users/ermouth","html_url":"https://github.com/ermouth","followers_url":"https://api.github.com/users/ermouth/followers","following_url":"https://api.github.com/users/ermouth/following{/other_user}","gists_url":"https://api.github.com/users/ermouth/gists{/gist_id}","starred_url":"https://api.github.com/users/ermouth/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ermouth/subscriptions","organizations_url":"https://api.github.com/users/ermouth/orgs","repos_url":"https://api.github.com/users/ermouth/repos","events_url":"https://api.github.com/users/ermouth/events{/privacy}","received_events_url":"https://api.github.com/users/ermouth/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-23T22:35:53Z","updated_at":"2018-08-23T22:35:53Z","author_association":"CONTRIBUTOR","body":"@linacs Please, send zipped json with instructions to ermouth at gmail dot com. Also I forgot to ask: do you use cluster or single node mode?  \r\n\r\nBTW As I know t2 instances use Xeon able to burst up to 3.5Ghz. For sure, you can’t utilize its full power continuously using t2.small, which is throttled to 20% of a single core computational capacity on average. However if your app is nearly idle most of the time (which is very likely), you are still able to have full CPU power bursts for short periods. ","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/415592756/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/415605734","html_url":"https://github.com/apache/couchdb/issues/1575#issuecomment-415605734","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1575","id":415605734,"node_id":"MDEyOklzc3VlQ29tbWVudDQxNTYwNTczNA==","user":{"login":"linacs","id":7925062,"node_id":"MDQ6VXNlcjc5MjUwNjI=","avatar_url":"https://avatars.githubusercontent.com/u/7925062?v=4","gravatar_id":"","url":"https://api.github.com/users/linacs","html_url":"https://github.com/linacs","followers_url":"https://api.github.com/users/linacs/followers","following_url":"https://api.github.com/users/linacs/following{/other_user}","gists_url":"https://api.github.com/users/linacs/gists{/gist_id}","starred_url":"https://api.github.com/users/linacs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/linacs/subscriptions","organizations_url":"https://api.github.com/users/linacs/orgs","repos_url":"https://api.github.com/users/linacs/repos","events_url":"https://api.github.com/users/linacs/events{/privacy}","received_events_url":"https://api.github.com/users/linacs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-23T23:34:18Z","updated_at":"2018-08-23T23:34:18Z","author_association":"NONE","body":"It's a cluster for both: 9 VMs on AWS, 3 on Scaleway. I activated T2 Unlimited, indeed, but I didn't see an impact. Maybe it's because it's too fast for the system to de-overcommit or something...\r\nI send you the email. Thanks!","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/415605734/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/415626107","html_url":"https://github.com/apache/couchdb/pull/1576#issuecomment-415626107","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1576","id":415626107,"node_id":"MDEyOklzc3VlQ29tbWVudDQxNTYyNjEwNw==","user":{"login":"jiangphcn","id":18000622,"node_id":"MDQ6VXNlcjE4MDAwNjIy","avatar_url":"https://avatars.githubusercontent.com/u/18000622?v=4","gravatar_id":"","url":"https://api.github.com/users/jiangphcn","html_url":"https://github.com/jiangphcn","followers_url":"https://api.github.com/users/jiangphcn/followers","following_url":"https://api.github.com/users/jiangphcn/following{/other_user}","gists_url":"https://api.github.com/users/jiangphcn/gists{/gist_id}","starred_url":"https://api.github.com/users/jiangphcn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jiangphcn/subscriptions","organizations_url":"https://api.github.com/users/jiangphcn/orgs","repos_url":"https://api.github.com/users/jiangphcn/repos","events_url":"https://api.github.com/users/jiangphcn/events{/privacy}","received_events_url":"https://api.github.com/users/jiangphcn/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-24T01:48:47Z","updated_at":"2018-08-24T01:48:47Z","author_association":"CONTRIBUTOR","body":"thanks @eiri ","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/415626107/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/415693517","html_url":"https://github.com/apache/couchdb/issues/1559#issuecomment-415693517","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1559","id":415693517,"node_id":"MDEyOklzc3VlQ29tbWVudDQxNTY5MzUxNw==","user":{"login":"ermouth","id":1540047,"node_id":"MDQ6VXNlcjE1NDAwNDc=","avatar_url":"https://avatars.githubusercontent.com/u/1540047?v=4","gravatar_id":"","url":"https://api.github.com/users/ermouth","html_url":"https://github.com/ermouth","followers_url":"https://api.github.com/users/ermouth/followers","following_url":"https://api.github.com/users/ermouth/following{/other_user}","gists_url":"https://api.github.com/users/ermouth/gists{/gist_id}","starred_url":"https://api.github.com/users/ermouth/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ermouth/subscriptions","organizations_url":"https://api.github.com/users/ermouth/orgs","repos_url":"https://api.github.com/users/ermouth/repos","events_url":"https://api.github.com/users/ermouth/events{/privacy}","received_events_url":"https://api.github.com/users/ermouth/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-24T08:39:59Z","updated_at":"2018-08-24T08:39:59Z","author_association":"CONTRIBUTOR","body":"@linacs > So, if it can be changed to...\r\n\r\nHave you tried JS rewrites (rewrites as a function) http://docs.couchdb.org/en/2.1.2/api/ddoc/rewrites.html?highlight=rewrites#rewrite-section-a-is-stringified-function ? ","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/415693517/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/415699672","html_url":"https://github.com/apache/couchdb/issues/1559#issuecomment-415699672","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1559","id":415699672,"node_id":"MDEyOklzc3VlQ29tbWVudDQxNTY5OTY3Mg==","user":{"login":"linacs","id":7925062,"node_id":"MDQ6VXNlcjc5MjUwNjI=","avatar_url":"https://avatars.githubusercontent.com/u/7925062?v=4","gravatar_id":"","url":"https://api.github.com/users/linacs","html_url":"https://github.com/linacs","followers_url":"https://api.github.com/users/linacs/followers","following_url":"https://api.github.com/users/linacs/following{/other_user}","gists_url":"https://api.github.com/users/linacs/gists{/gist_id}","starred_url":"https://api.github.com/users/linacs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/linacs/subscriptions","organizations_url":"https://api.github.com/users/linacs/orgs","repos_url":"https://api.github.com/users/linacs/repos","events_url":"https://api.github.com/users/linacs/events{/privacy}","received_events_url":"https://api.github.com/users/linacs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-24T09:04:22Z","updated_at":"2018-08-24T09:04:22Z","author_association":"NONE","body":"OMG, I didn't know about it, my whole architecture was based on CouchDB1.6! (And as I went directly to 2.0, I may have skipped the intermediate changelog)\r\nWhat would be perfect would be to merge those two behaviors, but I guess if I put my rewrite array in a regular file, I'll be able to retrieve it from the _design with \"this.\"? It opens a lot of possibilities!!\r\nThanks!  :)","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/415699672/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/415710159","html_url":"https://github.com/apache/couchdb/issues/1559#issuecomment-415710159","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1559","id":415710159,"node_id":"MDEyOklzc3VlQ29tbWVudDQxNTcxMDE1OQ==","user":{"login":"ermouth","id":1540047,"node_id":"MDQ6VXNlcjE1NDAwNDc=","avatar_url":"https://avatars.githubusercontent.com/u/1540047?v=4","gravatar_id":"","url":"https://api.github.com/users/ermouth","html_url":"https://github.com/ermouth","followers_url":"https://api.github.com/users/ermouth/followers","following_url":"https://api.github.com/users/ermouth/following{/other_user}","gists_url":"https://api.github.com/users/ermouth/gists{/gist_id}","starred_url":"https://api.github.com/users/ermouth/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ermouth/subscriptions","organizations_url":"https://api.github.com/users/ermouth/orgs","repos_url":"https://api.github.com/users/ermouth/repos","events_url":"https://api.github.com/users/ermouth/events{/privacy}","received_events_url":"https://api.github.com/users/ermouth/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-24T09:46:56Z","updated_at":"2018-08-24T09:46:56Z","author_association":"CONTRIBUTOR","body":"@linacs \r\n> I'll be able to retrieve it from the _design with \"this.\"? \r\n\r\nYes.\r\n\r\n>It opens a lot of possibilities!!\r\n\r\nIndeed. To pattern match req obj parts (path, userCtx and so on) in Erlang-like style you might also find this gist useful https://gist.github.com/ermouth/f954e71411590b66eb58. ","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/415710159/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/416032862","html_url":"https://github.com/apache/couchdb/issues/1578#issuecomment-416032862","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1578","id":416032862,"node_id":"MDEyOklzc3VlQ29tbWVudDQxNjAzMjg2Mg==","user":{"login":"jvegaseg","id":12508470,"node_id":"MDQ6VXNlcjEyNTA4NDcw","avatar_url":"https://avatars.githubusercontent.com/u/12508470?v=4","gravatar_id":"","url":"https://api.github.com/users/jvegaseg","html_url":"https://github.com/jvegaseg","followers_url":"https://api.github.com/users/jvegaseg/followers","following_url":"https://api.github.com/users/jvegaseg/following{/other_user}","gists_url":"https://api.github.com/users/jvegaseg/gists{/gist_id}","starred_url":"https://api.github.com/users/jvegaseg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jvegaseg/subscriptions","organizations_url":"https://api.github.com/users/jvegaseg/orgs","repos_url":"https://api.github.com/users/jvegaseg/repos","events_url":"https://api.github.com/users/jvegaseg/events{/privacy}","received_events_url":"https://api.github.com/users/jvegaseg/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-26T11:45:48Z","updated_at":"2018-08-26T11:45:48Z","author_association":"NONE","body":"I  had a similar issue with version 2.1.2 recovering a broken node and also I had to downgrade it to 2.1.1.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/416032862/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/416135437","html_url":"https://github.com/apache/couchdb/issues/1578#issuecomment-416135437","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1578","id":416135437,"node_id":"MDEyOklzc3VlQ29tbWVudDQxNjEzNTQzNw==","user":{"login":"nickva","id":211822,"node_id":"MDQ6VXNlcjIxMTgyMg==","avatar_url":"https://avatars.githubusercontent.com/u/211822?v=4","gravatar_id":"","url":"https://api.github.com/users/nickva","html_url":"https://github.com/nickva","followers_url":"https://api.github.com/users/nickva/followers","following_url":"https://api.github.com/users/nickva/following{/other_user}","gists_url":"https://api.github.com/users/nickva/gists{/gist_id}","starred_url":"https://api.github.com/users/nickva/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickva/subscriptions","organizations_url":"https://api.github.com/users/nickva/orgs","repos_url":"https://api.github.com/users/nickva/repos","events_url":"https://api.github.com/users/nickva/events{/privacy}","received_events_url":"https://api.github.com/users/nickva/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-27T07:09:31Z","updated_at":"2018-08-27T07:12:14Z","author_association":"CONTRIBUTOR","body":"@procogent @jvegaseg \r\n\r\nThank you for your reports.\r\n\r\nThis is probably happening because the attachment receiver parser was upgraded from sending closures [*] to sending messages. In that case, the error would happen during the upgrade when there is a mix of old (pre 2.2) nodes and new nodes in the same cluster. As soon as all nodes are upgraded, the errors should stop.\r\n\r\nSpecifically, 2.2 nodes in https://github.com/apache/couchdb/blob/56782453f342fb5e4137e8c9afc79b1992a8b21a/src/fabric/src/fabric.erl#L281 will start sending messages instead of closures.  On the receiving side, 2.2 nodes will know how to handle both closures and messages, however the old, pre-2.2 nodes, will not know how to handle messages and will show that error.\r\n\r\nPerhaps try one of these scenarios to fix the issue:\r\n\r\n1) Stop attachment uploading traffic (or all traffic) while nodes are upgrading, then resume\r\n\r\n2) After a node is upgraded to 2.2, temporarily remove it from the load balancer list so that the new node doesn't process HTTP API requests, but can still handle requests coordinated via older pre 2.2. nodes. Eventually there'd be only one node processing requests. Right before that node is restarted for upgrade, return traffic to all the other nodes. \r\n\r\n3) Build the release from source but revert this commit: https://github.com/apache/couchdb/commit/56782453f342fb5e4137e8c9afc79b1992a8b21a. Do a rolling node reboot. Then make another release with that commit and do another rolling node reboot.\r\n\r\n[*] A closure is a snapshot of function's environment during the time when the function is created. In an Erlang cluster that environment can be even be sent to other nodes. However that is very fragile and needs the module to be exactly the same on all the cluster nodes.","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/416135437/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/416275053","html_url":"https://github.com/apache/couchdb/pull/1582#issuecomment-416275053","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1582","id":416275053,"node_id":"MDEyOklzc3VlQ29tbWVudDQxNjI3NTA1Mw==","user":{"login":"janl","id":11321,"node_id":"MDQ6VXNlcjExMzIx","avatar_url":"https://avatars.githubusercontent.com/u/11321?v=4","gravatar_id":"","url":"https://api.github.com/users/janl","html_url":"https://github.com/janl","followers_url":"https://api.github.com/users/janl/followers","following_url":"https://api.github.com/users/janl/following{/other_user}","gists_url":"https://api.github.com/users/janl/gists{/gist_id}","starred_url":"https://api.github.com/users/janl/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/janl/subscriptions","organizations_url":"https://api.github.com/users/janl/orgs","repos_url":"https://api.github.com/users/janl/repos","events_url":"https://api.github.com/users/janl/events{/privacy}","received_events_url":"https://api.github.com/users/janl/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-27T15:57:35Z","updated_at":"2018-08-27T15:57:35Z","author_association":"MEMBER","body":"+1","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/416275053/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/416289979","html_url":"https://github.com/apache/couchdb/pull/1582#issuecomment-416289979","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1582","id":416289979,"node_id":"MDEyOklzc3VlQ29tbWVudDQxNjI4OTk3OQ==","user":{"login":"davisp","id":19929,"node_id":"MDQ6VXNlcjE5OTI5","avatar_url":"https://avatars.githubusercontent.com/u/19929?v=4","gravatar_id":"","url":"https://api.github.com/users/davisp","html_url":"https://github.com/davisp","followers_url":"https://api.github.com/users/davisp/followers","following_url":"https://api.github.com/users/davisp/following{/other_user}","gists_url":"https://api.github.com/users/davisp/gists{/gist_id}","starred_url":"https://api.github.com/users/davisp/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/davisp/subscriptions","organizations_url":"https://api.github.com/users/davisp/orgs","repos_url":"https://api.github.com/users/davisp/repos","events_url":"https://api.github.com/users/davisp/events{/privacy}","received_events_url":"https://api.github.com/users/davisp/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-27T16:47:04Z","updated_at":"2018-08-27T16:47:04Z","author_association":"MEMBER","body":"+1","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/416289979/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/416320385","html_url":"https://github.com/apache/couchdb/issues/1578#issuecomment-416320385","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1578","id":416320385,"node_id":"MDEyOklzc3VlQ29tbWVudDQxNjMyMDM4NQ==","user":{"login":"procogent","id":20845025,"node_id":"MDQ6VXNlcjIwODQ1MDI1","avatar_url":"https://avatars.githubusercontent.com/u/20845025?v=4","gravatar_id":"","url":"https://api.github.com/users/procogent","html_url":"https://github.com/procogent","followers_url":"https://api.github.com/users/procogent/followers","following_url":"https://api.github.com/users/procogent/following{/other_user}","gists_url":"https://api.github.com/users/procogent/gists{/gist_id}","starred_url":"https://api.github.com/users/procogent/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/procogent/subscriptions","organizations_url":"https://api.github.com/users/procogent/orgs","repos_url":"https://api.github.com/users/procogent/repos","events_url":"https://api.github.com/users/procogent/events{/privacy}","received_events_url":"https://api.github.com/users/procogent/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-27T18:23:06Z","updated_at":"2018-08-27T18:23:06Z","author_association":"NONE","body":"@nickva \r\n\r\nThese errors were displayed on the 2.2 node, not on the 2.1.1 nodes.  The 2.1.1 nodes would display different errors:\r\n\r\n```\r\n\r\n[error] 2018-08-23T19:34:01.478534Z couchdb@osm02.mydomain.local emulator -------- Error in process <0.8935.79> on node 'couchdb@osm02.mydomain.local' with exit value:\r\n{{rexi_DOWN,{'couchdb@osm01.mydomain.local',noproc}},[{mem3_rpc,rexi_call,2,[{file,\"src/mem3_rpc.erl\"},{line,269}]},{mem3_rep,calculate_start_seq,1,[{file,\"src/mem3_rep.erl\"},{line,194}]},{mem3_rep,repl,2,[{file,\"src/mem3_rep.erl\"},{line,175}]},{mem3_rep,go,1,[{file,\"src/mem3_rep.erl\"},{line,81}]},{mem3_sync,'-start_push_replication/1-fun-0-',2,[{file,\"src/mem3_sync.erl\"},{line,208}]}]}\r\n--\r\n[error] 2018-08-23T19:34:01.493791Z couchdb@osm02.mydomain.local emulator -------- Error in process <0.9055.79> on node 'couchdb@osm02.mydomain.local' with exit value:\r\n{{rexi_DOWN,{'couchdb@osm01.mydomain.local',noproc}},[{mem3_rpc,rexi_call,2,[{file,\"src/mem3_rpc.erl\"},{line,269}]},{mem3_rep,calculate_start_seq,1,[{file,\"src/mem3_rep.erl\"},{line,194}]},{mem3_rep,repl,2,[{file,\"src/mem3_rep.erl\"},{line,175}]},{mem3_rep,go,1,[{file,\"src/mem3_rep.erl\"},{line,81}]},{mem3_sync,'-start_push_replication/1-fun-0-',2,[{file,\"src/mem3_sync.erl\"},{line,208}]}]}\r\n--\r\n[error] 2018-08-23T19:34:02.036754Z couchdb@osm02.mydomain.local emulator -------- Error in process <0.10163.79> on node 'couchdb@osm02.mydomain.local' with exit value:\r\n{{error,function_clause},[{mem3_rpc,rexi_call,2,[{file,\"src/mem3_rpc.erl\"},{line,267}]},{mem3_rep,save_on_target,3,[{file,\"src/mem3_rep.erl\"},{line,319}]},{mem3_rep,'-replicate_batch/1-fun-0-',4,[{file,\"src/mem3_rep.erl\"},{line,262}]},{lists,map,2,[{file,\"lists.erl\"},{line,1238}]},{mem3_rep,replicate_batch,1,[{file,\"src/mem3_rep.erl\"},{line,260}]},{mem3_rep,repl,2,[{file,\"src/mem3_rep.erl\"},{line,182}]},{mem3_rep,go,1,[{file,\"src/mem3_rep.erl\"},{line,81}]},{mem3_sync,'-start_push_replication/1-fun-0-',2,[{file,\"src/mem3_sync.erl\"},{line,208}]}]}\r\n\r\n[warning] 2018-08-23T19:34:02.036803Z couchdb@osm02.mydomain.local <0.376.0> -------- mem3_sync shards/2aaaaaaa-3ffffffe/gc-trails_z17_0.1528758185 couchdb@osm01.mydomain.local {{error,function_clause},[{mem3_rpc,rexi_call,2,[{file,[115,114,99,47,109,101,109,51,95,114,112,99,46,101,114,108]},{line,267}]},{mem3_rep,save_on_target,3,[{file,[115,114,99,47,109,101,109,51,95,114,101,112,46,101,114,108]},{line,319}]},{mem3_rep,'-replicate_batch/1-fun-0-',4,[{file,[115,114,99,47,109,101,109,51,95,114,101,112,46,101,114,108]},{line,262}]},{lists,map,2,[{file,[108,105,115,116,115,46,101,114,108]},{line,1238}]},{mem3_rep,replicate_batch,1,[{file,[115,114,99,47,109,101,109,51,95,114,101,112,46,101,114,108]},{line,260}]},{mem3_rep,repl,2,[{file,[115,114,99,47,109,101,109,51,95,114,101,112,46,101,114,108]},{line,182}]},{mem3_rep,go,1,[{file,[115,114,99,47,109,101,109,51,95,114,101,112,46,101,114,108]},{line,81}]},{mem3_sync,'-start_push_replication/1-fun-0-',2,[{file,[115,114,99,47,109,101,109,51,95,115,121,110,99,46,101,114,108]},{line,208}]}]}\r\n[error] 2018-08-23T19:34:02.045783Z couchdb@osm02.mydomain.local <0.12336.37> c5c983b245 req_err(696859535) unknown_error : function_clause\r\n    [<<\"couch_stream:foldl/6 L91\">>,<<\"couch_att:to_binary/2 L647\">>,<<\"couch_att:to_json/4 L473\">>,<<\"couch_doc:-to_json_attachments/4-lc$^0/1-0-/4 L114\">>,<<\"couch_doc:to_json_attachments/4 L114\">>,<<\"couch_doc:doc_to_json_obj/2 L127\">>,<<\"chttpd_db:send_doc_efficiently/4 L870\">>,<<\"chttpd:process_request/1 L295\">>]\r\n--\r\n[error] 2018-08-23T19:34:02.047049Z couchdb@osm02.mydomain.local emulator -------- Error in process <0.10136.79> on node 'couchdb@osm02.mydomain.local' with exit value:\r\n{{error,function_clause},[{mem3_rpc,rexi_call,2,[{file,\"src/mem3_rpc.erl\"},{line,267}]},{mem3_rep,save_on_target,3,[{file,\"src/mem3_rep.erl\"},{line,319}]},{mem3_rep,'-replicate_batch/1-fun-0-',4,[{file,\"src/mem3_rep.erl\"},{line,262}]},{lists,map,2,[{file,\"lists.erl\"},{line,1238}]},{mem3_rep,replicate_batch,1,[{file,\"src/mem3_rep.erl\"},{line,260}]},{mem3_rep,repl,2,[{file,\"src/mem3_rep.erl\"},{line,182}]},{mem3_rep,go,1,[{file,\"src/mem3_rep.erl\"},{line,81}]},{mem3_sync,'-start_push_replication/1-fun-0-',2,[{file,\"src/mem3_sync.erl\"},{line,208}]}]}\r\n\r\n[warning] 2018-08-23T19:34:02.047088Z couchdb@osm02.mydomain.local <0.376.0> -------- mem3_sync shards/00000000-15555554/gc-trails_z17_4.1528758185 couchdb@osm01.mydomain.local {{error,function_clause},[{mem3_rpc,rexi_call,2,[{file,[115,114,99,47,109,101,109,51,95,114,112,99,46,101,114,108]},{line,267}]},{mem3_rep,save_on_target,3,[{file,[115,114,99,47,109,101,109,51,95,114,101,112,46,101,114,108]},{line,319}]},{mem3_rep,'-replicate_batch/1-fun-0-',4,[{file,[115,114,99,47,109,101,109,51,95,114,101,112,46,101,114,108]},{line,262}]},{lists,map,2,[{file,[108,105,115,116,115,46,101,114,108]},{line,1238}]},{mem3_rep,replicate_batch,1,[{file,[115,114,99,47,109,101,109,51,95,114,101,112,46,101,114,108]},{line,260}]},{mem3_rep,repl,2,[{file,[115,114,99,47,109,101,109,51,95,114,101,112,46,101,114,108]},{line,182}]},{mem3_rep,go,1,[{file,[115,114,99,47,109,101,109,51,95,114,101,112,46,101,114,108]},{line,81}]},{mem3_sync,'-start_push_replication/1-fun-0-',2,[{file,[115,114,99,47,109,101,109,51,95,115,121,110,99,46,101,114,108]},{line,208}]}]}\r\n--\r\n[error] 2018-08-23T19:34:02.163117Z couchdb@osm02.mydomain.local <0.918.0> 2080fc613e req_err(696859535) unknown_error : function_clause\r\n    [<<\"couch_stream:foldl/6 L91\">>,<<\"couch_att:to_binary/2 L647\">>,<<\"couch_att:to_json/4 L473\">>,<<\"couch_doc:-to_json_attachments/4-lc$^0/1-0-/4 L114\">>,<<\"couch_doc:to_json_attachments/4 L114\">>,<<\"couch_doc:doc_to_json_obj/2 L127\">>,<<\"chttpd_db:send_doc_efficiently/4 L870\">>,<<\"chttpd:process_request/1 L295\">>]\r\n--\r\n[error] 2018-08-23T19:34:02.387242Z couchdb@osm02.mydomain.local <0.6612.0> 2a119230b8 req_err(696859535) unknown_error : function_clause\r\n    [<<\"couch_stream:foldl/6 L91\">>,<<\"couch_att:to_binary/2 L647\">>,<<\"couch_att:to_json/4 L473\">>,<<\"couch_doc:-to_json_attachments/4-lc$^0/1-0-/4 L114\">>,<<\"couch_doc:to_json_attachments/4 L114\">>,<<\"couch_doc:doc_to_json_obj/2 L127\">>,<<\"chttpd_db:send_doc_efficiently/4 L870\">>,<<\"chttpd:process_request/1 L295\">>]\r\n\r\n[error] 2018-08-23T19:34:02.478864Z couchdb@osm02.mydomain.local <0.3751.0> 85792e842c req_err(696859535) unknown_error : function_clause\r\n    [<<\"couch_stream:foldl/6 L91\">>,<<\"couch_att:to_binary/2 L647\">>,<<\"couch_att:to_json/4 L473\">>,<<\"couch_doc:-to_json_attachments/4-lc$^0/1-0-/4 L114\">>,<<\"couch_doc:to_json_attachments/4 L114\">>,<<\"couch_doc:doc_to_json_obj/2 L127\">>,<<\"chttpd_db:send_doc_efficiently/4 L870\">>,<<\"chttpd:process_request/1 L295\">>]\r\n--\r\n[error] 2018-08-23T19:34:02.997526Z couchdb@osm02.mydomain.local emulator -------- Error in process <0.12177.79> on node 'couchdb@osm02.mydomain.local' with exit value:\r\n{{error,function_clause},[{mem3_rpc,rexi_call,2,[{file,\"src/mem3_rpc.erl\"},{line,267}]},{mem3_rep,save_on_target,3,[{file,\"src/mem3_rep.erl\"},{line,319}]},{mem3_rep,'-replicate_batch/1-fun-0-',4,[{file,\"src/mem3_rep.erl\"},{line,262}]},{lists,map,2,[{file,\"lists.erl\"},{line,1238}]},{mem3_rep,replicate_batch,1,[{file,\"src/mem3_rep.erl\"},{line,260}]},{mem3_rep,repl,2,[{file,\"src/mem3_rep.erl\"},{line,182}]},{mem3_rep,go,1,[{file,\"src/mem3_rep.erl\"},{line,81}]},{mem3_sync,'-start_push_replication/1-fun-0-',2,[{file,\"src/mem3_sync.erl\"},{line,208}]}]}\r\n\r\n[warning] 2018-08-23T19:34:02.997541Z couchdb@osm02.mydomain.local <0.376.0> -------- mem3_sync shards/55555554-6aaaaaa8/gc-trails_z18_1.1528758185 couchdb@osm01.mydomain.local {{error,function_clause},[{mem3_rpc,rexi_call,2,[{file,[115,114,99,47,109,101,109,51,95,114,112,99,46,101,114,108]},{line,267}]},{mem3_rep,save_on_target,3,[{file,[115,114,99,47,109,101,109,51,95,114,101,112,46,101,114,108]},{line,319}]},{mem3_rep,'-replicate_batch/1-fun-0-',4,[{file,[115,114,99,47,109,101,109,51,95,114,101,112,46,101,114,108]},{line,262}]},{lists,map,2,[{file,[108,105,115,116,115,46,101,114,108]},{line,1238}]},{mem3_rep,replicate_batch,1,[{file,[115,114,99,47,109,101,109,51,95,114,101,112,46,101,114,108]},{line,260}]},{mem3_rep,repl,2,[{file,[115,114,99,47,109,101,109,51,95,114,101,112,46,101,114,108]},{line,182}]},{mem3_rep,go,1,[{file,[115,114,99,47,109,101,109,51,95,114,101,112,46,101,114,108]},{line,81}]},{mem3_sync,'-start_push_replication/1-fun-0-',2,[{file,[115,114,99,47,109,101,109,51,95,115,121,110,99,46,101,114,108]},{line,208}]}]}\r\n[error] 2018-08-23T19:34:02.999579Z couchdb@osm02.mydomain.local emulator -------- Error in process <0.12184.79> on node 'couchdb@osm02.mydomain.local' with exit value:\r\n{{error,function_clause},[{mem3_rpc,rexi_call,2,[{file,\"src/mem3_rpc.erl\"},{line,267}]},{mem3_rep,save_on_target,3,[{file,\"src/mem3_rep.erl\"},{line,319}]},{mem3_rep,'-replicate_batch/1-fun-0-',4,[{file,\"src/mem3_rep.erl\"},{line,262}]},{lists,map,2,[{file,\"lists.erl\"},{line,1238}]},{mem3_rep,replicate_batch,1,[{file,\"src/mem3_rep.erl\"},{line,260}]},{mem3_rep,repl,2,[{file,\"src/mem3_rep.erl\"},{line,182}]},{mem3_rep,go,1,[{file,\"src/mem3_rep.erl\"},{line,81}]},{mem3_sync,'-start_push_replication/1-fun-0-',2,[{file,\"src/mem3_sync.erl\"},{line,208}]}]}\r\n\r\n[warning] 2018-08-23T19:34:02.999604Z couchdb@osm02.mydomain.local <0.376.0> -------- mem3_sync shards/2aaaaaaa-3ffffffe/gc-trails_z18_1.1528758185 couchdb@osm01.mydomain.local {{error,function_clause},[{mem3_rpc,rexi_call,2,[{file,[115,114,99,47,109,101,109,51,95,114,112,99,46,101,114,108]},{line,267}]},{mem3_rep,save_on_target,3,[{file,[115,114,99,47,109,101,109,51,95,114,101,112,46,101,114,108]},{line,319}]},{mem3_rep,'-replicate_batch/1-fun-0-',4,[{file,[115,114,99,47,109,101,109,51,95,114,101,112,46,101,114,108]},{line,262}]},{lists,map,2,[{file,[108,105,115,116,115,46,101,114,108]},{line,1238}]},{mem3_rep,replicate_batch,1,[{file,[115,114,99,47,109,101,109,51,95,114,101,112,46,101,114,108]},{line,260}]},{mem3_rep,repl,2,[{file,[115,114,99,47,109,101,109,51,95,114,101,112,46,101,114,108]},{line,182}]},{mem3_rep,go,1,[{file,[115,114,99,47,109,101,109,51,95,114,101,112,46,101,114,108]},{line,81}]},{mem3_sync,'-start_push_replication/1-fun-0-',2,[{file,[115,114,99,47,109,101,109,51,95,115,121,110,99,46,101,114,108]},{line,208}]}]}\r\n[error] 2018-08-23T19:34:03.001561Z couchdb@osm02.mydomain.local emulator -------- Error in process <0.12185.79> on node 'couchdb@osm02.mydomain.local' with exit value:\r\n{{error,function_clause},[{mem3_rpc,rexi_call,2,[{file,\"src/mem3_rpc.erl\"},{line,267}]},{mem3_rep,save_on_target,3,[{file,\"src/mem3_rep.erl\"},{line,319}]},{mem3_rep,'-replicate_batch/1-fun-0-',4,[{file,\"src/mem3_rep.erl\"},{line,262}]},{lists,map,2,[{file,\"lists.erl\"},{line,1238}]},{mem3_rep,replicate_batch,1,[{file,\"src/mem3_rep.erl\"},{line,260}]},{mem3_rep,repl,2,[{file,\"src/mem3_rep.erl\"},{line,182}]},{mem3_rep,go,1,[{file,\"src/mem3_rep.erl\"},{line,81}]},{mem3_sync,'-start_push_replication/1-fun-0-',2,[{file,\"src/mem3_sync.erl\"},{line,208}]}]}\r\n```\r\n\r\nDoes that still align with what you said is probably happening?\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/416320385/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/416328995","html_url":"https://github.com/apache/couchdb/pull/1581#issuecomment-416328995","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1581","id":416328995,"node_id":"MDEyOklzc3VlQ29tbWVudDQxNjMyODk5NQ==","user":{"login":"iilyak","id":9804420,"node_id":"MDQ6VXNlcjk4MDQ0MjA=","avatar_url":"https://avatars.githubusercontent.com/u/9804420?v=4","gravatar_id":"","url":"https://api.github.com/users/iilyak","html_url":"https://github.com/iilyak","followers_url":"https://api.github.com/users/iilyak/followers","following_url":"https://api.github.com/users/iilyak/following{/other_user}","gists_url":"https://api.github.com/users/iilyak/gists{/gist_id}","starred_url":"https://api.github.com/users/iilyak/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/iilyak/subscriptions","organizations_url":"https://api.github.com/users/iilyak/orgs","repos_url":"https://api.github.com/users/iilyak/repos","events_url":"https://api.github.com/users/iilyak/events{/privacy}","received_events_url":"https://api.github.com/users/iilyak/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-27T18:50:33Z","updated_at":"2018-08-27T18:50:33Z","author_association":"CONTRIBUTOR","body":"Please squash before merge","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/416328995/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/416349873","html_url":"https://github.com/apache/couchdb/issues/1578#issuecomment-416349873","issue_url":"https://api.github.com/repos/apache/couchdb/issues/1578","id":416349873,"node_id":"MDEyOklzc3VlQ29tbWVudDQxNjM0OTg3Mw==","user":{"login":"nickva","id":211822,"node_id":"MDQ6VXNlcjIxMTgyMg==","avatar_url":"https://avatars.githubusercontent.com/u/211822?v=4","gravatar_id":"","url":"https://api.github.com/users/nickva","html_url":"https://github.com/nickva","followers_url":"https://api.github.com/users/nickva/followers","following_url":"https://api.github.com/users/nickva/following{/other_user}","gists_url":"https://api.github.com/users/nickva/gists{/gist_id}","starred_url":"https://api.github.com/users/nickva/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickva/subscriptions","organizations_url":"https://api.github.com/users/nickva/orgs","repos_url":"https://api.github.com/users/nickva/repos","events_url":"https://api.github.com/users/nickva/events{/privacy}","received_events_url":"https://api.github.com/users/nickva/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-27T20:01:32Z","updated_at":"2018-08-27T20:01:32Z","author_association":"CONTRIBUTOR","body":"@procogent \r\n\r\nThose messages make sense. `rexi_DOWN` and `mem3_rpc` are expected because one of the nodes was down during the upgrade for a short period of time and internal replicator wasn't able to talk to that node. That's ok because it will keep retrying unit it finally is able to connect.\r\n\r\n`[<<\"couch_stream:foldl/6 L91\">>,<<\"couch_att:to_binary/2 L647\">>,..` error is from attachment streaming.  It turns out that even even without this commit https://github.com/apache/couchdb/commit/56782453f342fb5e4137e8c9afc79b1992a8b21a attachment upload would not be working when upgrading from 2.1.1 to 2.2. Notice that since 2.1.1 there was already a change in https://github.com/apache/couchdb/commit/0e926881c2c41a557cac035a779e2a95d13168ca#diff-b23fc0c1115730cb26590a6db318107e which modified the `fabric_doc_attachments.erl` module. That's exactly the problem with sending function closure between nodes - that any change in the module where the code lives in a cluster will break and start throwing errors.\r\n","reactions":{"url":"https://api.github.com/repos/apache/couchdb/issues/comments/416349873/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]