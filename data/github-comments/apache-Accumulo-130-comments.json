[{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1965011479","html_url":"https://github.com/apache/accumulo/issues/4305#issuecomment-1965011479","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4305","id":1965011479,"node_id":"IC_kwDOACaFSM51H7IX","user":{"login":"EdColeman","id":7047700,"node_id":"MDQ6VXNlcjcwNDc3MDA=","avatar_url":"https://avatars.githubusercontent.com/u/7047700?v=4","gravatar_id":"","url":"https://api.github.com/users/EdColeman","html_url":"https://github.com/EdColeman","followers_url":"https://api.github.com/users/EdColeman/followers","following_url":"https://api.github.com/users/EdColeman/following{/other_user}","gists_url":"https://api.github.com/users/EdColeman/gists{/gist_id}","starred_url":"https://api.github.com/users/EdColeman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/EdColeman/subscriptions","organizations_url":"https://api.github.com/users/EdColeman/orgs","repos_url":"https://api.github.com/users/EdColeman/repos","events_url":"https://api.github.com/users/EdColeman/events{/privacy}","received_events_url":"https://api.github.com/users/EdColeman/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-02-26T19:12:28Z","updated_at":"2024-02-26T19:12:28Z","author_association":"CONTRIBUTOR","body":"Yes - it would be the same problem.  The root cause is that *any bulk import* does a hdfs move - that way it is a metadata operation.  No file copy is performed - so the files must be in a namespace the includes `/accumulo` so that the move can succeed. ","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1965011479/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1965054008","html_url":"https://github.com/apache/accumulo/pull/4306#issuecomment-1965054008","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4306","id":1965054008,"node_id":"IC_kwDOACaFSM51IFg4","user":{"login":"EdColeman","id":7047700,"node_id":"MDQ6VXNlcjcwNDc3MDA=","avatar_url":"https://avatars.githubusercontent.com/u/7047700?v=4","gravatar_id":"","url":"https://api.github.com/users/EdColeman","html_url":"https://github.com/EdColeman","followers_url":"https://api.github.com/users/EdColeman/followers","following_url":"https://api.github.com/users/EdColeman/following{/other_user}","gists_url":"https://api.github.com/users/EdColeman/gists{/gist_id}","starred_url":"https://api.github.com/users/EdColeman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/EdColeman/subscriptions","organizations_url":"https://api.github.com/users/EdColeman/orgs","repos_url":"https://api.github.com/users/EdColeman/repos","events_url":"https://api.github.com/users/EdColeman/events{/privacy}","received_events_url":"https://api.github.com/users/EdColeman/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-02-26T19:22:59Z","updated_at":"2024-02-26T19:22:59Z","author_association":"CONTRIBUTOR","body":"From the description, this is populating the ZooCache in a background thread?  Is that necessary? What are the consequences of allowing the cache to be populated on demand?  If something was never needed we would save work from loading it - probably at the cost of additional delay when needed.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1965054008/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1965117771","html_url":"https://github.com/apache/accumulo/issues/4261#issuecomment-1965117771","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4261","id":1965117771,"node_id":"IC_kwDOACaFSM51IVFL","user":{"login":"DomGarguilo","id":47725857,"node_id":"MDQ6VXNlcjQ3NzI1ODU3","avatar_url":"https://avatars.githubusercontent.com/u/47725857?v=4","gravatar_id":"","url":"https://api.github.com/users/DomGarguilo","html_url":"https://github.com/DomGarguilo","followers_url":"https://api.github.com/users/DomGarguilo/followers","following_url":"https://api.github.com/users/DomGarguilo/following{/other_user}","gists_url":"https://api.github.com/users/DomGarguilo/gists{/gist_id}","starred_url":"https://api.github.com/users/DomGarguilo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DomGarguilo/subscriptions","organizations_url":"https://api.github.com/users/DomGarguilo/orgs","repos_url":"https://api.github.com/users/DomGarguilo/repos","events_url":"https://api.github.com/users/DomGarguilo/events{/privacy}","received_events_url":"https://api.github.com/users/DomGarguilo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-02-26T19:41:33Z","updated_at":"2024-02-26T19:41:33Z","author_association":"MEMBER","body":"I'm going to wait until #4293 is merged (or not) before make changes for this ticket.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1965117771/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1965154936","html_url":"https://github.com/apache/accumulo/issues/4305#issuecomment-1965154936","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4305","id":1965154936,"node_id":"IC_kwDOACaFSM51IeJ4","user":{"login":"RangaSamudrala","id":31590624,"node_id":"MDQ6VXNlcjMxNTkwNjI0","avatar_url":"https://avatars.githubusercontent.com/u/31590624?v=4","gravatar_id":"","url":"https://api.github.com/users/RangaSamudrala","html_url":"https://github.com/RangaSamudrala","followers_url":"https://api.github.com/users/RangaSamudrala/followers","following_url":"https://api.github.com/users/RangaSamudrala/following{/other_user}","gists_url":"https://api.github.com/users/RangaSamudrala/gists{/gist_id}","starred_url":"https://api.github.com/users/RangaSamudrala/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/RangaSamudrala/subscriptions","organizations_url":"https://api.github.com/users/RangaSamudrala/orgs","repos_url":"https://api.github.com/users/RangaSamudrala/repos","events_url":"https://api.github.com/users/RangaSamudrala/events{/privacy}","received_events_url":"https://api.github.com/users/RangaSamudrala/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-02-26T20:04:04Z","updated_at":"2024-02-26T20:04:04Z","author_association":"NONE","body":"That worked.. thanks!","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1965154936/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1965163907","html_url":"https://github.com/apache/accumulo/pull/4306#issuecomment-1965163907","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4306","id":1965163907,"node_id":"IC_kwDOACaFSM51IgWD","user":{"login":"dlmarion","id":567911,"node_id":"MDQ6VXNlcjU2NzkxMQ==","avatar_url":"https://avatars.githubusercontent.com/u/567911?v=4","gravatar_id":"","url":"https://api.github.com/users/dlmarion","html_url":"https://github.com/dlmarion","followers_url":"https://api.github.com/users/dlmarion/followers","following_url":"https://api.github.com/users/dlmarion/following{/other_user}","gists_url":"https://api.github.com/users/dlmarion/gists{/gist_id}","starred_url":"https://api.github.com/users/dlmarion/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dlmarion/subscriptions","organizations_url":"https://api.github.com/users/dlmarion/orgs","repos_url":"https://api.github.com/users/dlmarion/repos","events_url":"https://api.github.com/users/dlmarion/events{/privacy}","received_events_url":"https://api.github.com/users/dlmarion/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-02-26T20:10:12Z","updated_at":"2024-02-26T20:10:12Z","author_association":"CONTRIBUTOR","body":"> From the description, this is populating the ZooCache in a background thread? Is that necessary? What are the consequences of allowing the cache to be populated on demand? If something was never needed we would save work from loading it - probably at the cost of additional delay when needed.\r\n\r\nSo, certainly there are actions which only need a connection to one TabletServer, in which case we could use the new method that I created. Then, there are others where the shell needs to talk to some set of TabletServers (maybe all - list scans, list compactions, etc.). I was trying to keep relatively the same behavior with this change. It could be wasted work, but if the user wants to talk to all of the tablet servers and this does not exist, then they will have to wait at that point.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1965163907/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1965262020","html_url":"https://github.com/apache/accumulo/pull/4254#issuecomment-1965262020","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4254","id":1965262020,"node_id":"IC_kwDOACaFSM51I4TE","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-02-26T21:01:27Z","updated_at":"2024-02-26T21:01:27Z","author_association":"CONTRIBUTOR","body":"> That makes sense, I'm thinking that might be best to change as a separate follow on to track/test it separately.\r\n\r\nOpened #4307","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1965262020/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1965696968","html_url":"https://github.com/apache/accumulo/issues/4249#issuecomment-1965696968","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4249","id":1965696968,"node_id":"IC_kwDOACaFSM51KifI","user":{"login":"rsingh433","id":74160026,"node_id":"MDQ6VXNlcjc0MTYwMDI2","avatar_url":"https://avatars.githubusercontent.com/u/74160026?v=4","gravatar_id":"","url":"https://api.github.com/users/rsingh433","html_url":"https://github.com/rsingh433","followers_url":"https://api.github.com/users/rsingh433/followers","following_url":"https://api.github.com/users/rsingh433/following{/other_user}","gists_url":"https://api.github.com/users/rsingh433/gists{/gist_id}","starred_url":"https://api.github.com/users/rsingh433/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rsingh433/subscriptions","organizations_url":"https://api.github.com/users/rsingh433/orgs","repos_url":"https://api.github.com/users/rsingh433/repos","events_url":"https://api.github.com/users/rsingh433/events{/privacy}","received_events_url":"https://api.github.com/users/rsingh433/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-02-27T02:55:51Z","updated_at":"2024-02-27T02:55:51Z","author_association":"CONTRIBUTOR","body":"I will look at this issue.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1965696968/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1969126905","html_url":"https://github.com/apache/accumulo/pull/4309#issuecomment-1969126905","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4309","id":1969126905,"node_id":"IC_kwDOACaFSM51Xn35","user":{"login":"dlmarion","id":567911,"node_id":"MDQ6VXNlcjU2NzkxMQ==","avatar_url":"https://avatars.githubusercontent.com/u/567911?v=4","gravatar_id":"","url":"https://api.github.com/users/dlmarion","html_url":"https://github.com/dlmarion","followers_url":"https://api.github.com/users/dlmarion/followers","following_url":"https://api.github.com/users/dlmarion/following{/other_user}","gists_url":"https://api.github.com/users/dlmarion/gists{/gist_id}","starred_url":"https://api.github.com/users/dlmarion/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dlmarion/subscriptions","organizations_url":"https://api.github.com/users/dlmarion/orgs","repos_url":"https://api.github.com/users/dlmarion/repos","events_url":"https://api.github.com/users/dlmarion/events{/privacy}","received_events_url":"https://api.github.com/users/dlmarion/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-02-28T14:38:37Z","updated_at":"2024-02-28T14:38:37Z","author_association":"CONTRIBUTOR","body":"> With the changes in this PR [this method](https://github.com/apache/accumulo/blob/c72bf8c00cb196d048d1aa35077327c55d6e58e2/core/src/main/java/org/apache/accumulo/core/clientImpl/ThriftTransportPool.java#L128) may only be called by test code now, so may be able to clean up and adjust the test code.\r\n\r\nI  got rid of the method in aecd790","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1969126905/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1969150663","html_url":"https://github.com/apache/accumulo/issues/4123#issuecomment-1969150663","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4123","id":1969150663,"node_id":"IC_kwDOACaFSM51XtrH","user":{"login":"ArbaazKhan1","id":29344877,"node_id":"MDQ6VXNlcjI5MzQ0ODc3","avatar_url":"https://avatars.githubusercontent.com/u/29344877?v=4","gravatar_id":"","url":"https://api.github.com/users/ArbaazKhan1","html_url":"https://github.com/ArbaazKhan1","followers_url":"https://api.github.com/users/ArbaazKhan1/followers","following_url":"https://api.github.com/users/ArbaazKhan1/following{/other_user}","gists_url":"https://api.github.com/users/ArbaazKhan1/gists{/gist_id}","starred_url":"https://api.github.com/users/ArbaazKhan1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ArbaazKhan1/subscriptions","organizations_url":"https://api.github.com/users/ArbaazKhan1/orgs","repos_url":"https://api.github.com/users/ArbaazKhan1/repos","events_url":"https://api.github.com/users/ArbaazKhan1/events{/privacy}","received_events_url":"https://api.github.com/users/ArbaazKhan1/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-02-28T14:50:30Z","updated_at":"2024-02-28T14:50:30Z","author_association":"CONTRIBUTOR","body":"I can take a look at this","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1969150663/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1969684204","html_url":"https://github.com/apache/accumulo/issues/4316#issuecomment-1969684204","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4316","id":1969684204,"node_id":"IC_kwDOACaFSM51Zv7s","user":{"login":"ArbaazKhan1","id":29344877,"node_id":"MDQ6VXNlcjI5MzQ0ODc3","avatar_url":"https://avatars.githubusercontent.com/u/29344877?v=4","gravatar_id":"","url":"https://api.github.com/users/ArbaazKhan1","html_url":"https://github.com/ArbaazKhan1","followers_url":"https://api.github.com/users/ArbaazKhan1/followers","following_url":"https://api.github.com/users/ArbaazKhan1/following{/other_user}","gists_url":"https://api.github.com/users/ArbaazKhan1/gists{/gist_id}","starred_url":"https://api.github.com/users/ArbaazKhan1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ArbaazKhan1/subscriptions","organizations_url":"https://api.github.com/users/ArbaazKhan1/orgs","repos_url":"https://api.github.com/users/ArbaazKhan1/repos","events_url":"https://api.github.com/users/ArbaazKhan1/events{/privacy}","received_events_url":"https://api.github.com/users/ArbaazKhan1/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-02-28T19:20:04Z","updated_at":"2024-02-28T19:20:04Z","author_association":"CONTRIBUTOR","body":"Mind if I take a look at this","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1969684204/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1969958420","html_url":"https://github.com/apache/accumulo/issues/4318#issuecomment-1969958420","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4318","id":1969958420,"node_id":"IC_kwDOACaFSM51ay4U","user":{"login":"dlmarion","id":567911,"node_id":"MDQ6VXNlcjU2NzkxMQ==","avatar_url":"https://avatars.githubusercontent.com/u/567911?v=4","gravatar_id":"","url":"https://api.github.com/users/dlmarion","html_url":"https://github.com/dlmarion","followers_url":"https://api.github.com/users/dlmarion/followers","following_url":"https://api.github.com/users/dlmarion/following{/other_user}","gists_url":"https://api.github.com/users/dlmarion/gists{/gist_id}","starred_url":"https://api.github.com/users/dlmarion/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dlmarion/subscriptions","organizations_url":"https://api.github.com/users/dlmarion/orgs","repos_url":"https://api.github.com/users/dlmarion/repos","events_url":"https://api.github.com/users/dlmarion/events{/privacy}","received_events_url":"https://api.github.com/users/dlmarion/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-02-28T21:34:33Z","updated_at":"2024-02-28T21:34:33Z","author_association":"CONTRIBUTOR","body":"> If the metadata tables cannot compact, it seems that it could lead to a situation where data loss with the metadata could be increased.\r\n\r\nCould you elaborate on this?","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1969958420/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1969961890","html_url":"https://github.com/apache/accumulo/issues/4321#issuecomment-1969961890","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4321","id":1969961890,"node_id":"IC_kwDOACaFSM51azui","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-02-28T21:37:11Z","updated_at":"2024-02-28T21:40:27Z","author_association":"CONTRIBUTOR","body":"Prior to #4320 fate was not behaving correctly because the versioning iterator was not present.  Test created tables in a different way so did not have this issue. Making the test fate tables use the same config as the real fate table may have uncovered this earlier.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1969961890/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1969962887","html_url":"https://github.com/apache/accumulo/issues/4123#issuecomment-1969962887","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4123","id":1969962887,"node_id":"IC_kwDOACaFSM51az-H","user":{"login":"ctubbsii","id":1280725,"node_id":"MDQ6VXNlcjEyODA3MjU=","avatar_url":"https://avatars.githubusercontent.com/u/1280725?v=4","gravatar_id":"","url":"https://api.github.com/users/ctubbsii","html_url":"https://github.com/ctubbsii","followers_url":"https://api.github.com/users/ctubbsii/followers","following_url":"https://api.github.com/users/ctubbsii/following{/other_user}","gists_url":"https://api.github.com/users/ctubbsii/gists{/gist_id}","starred_url":"https://api.github.com/users/ctubbsii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ctubbsii/subscriptions","organizations_url":"https://api.github.com/users/ctubbsii/orgs","repos_url":"https://api.github.com/users/ctubbsii/repos","events_url":"https://api.github.com/users/ctubbsii/events{/privacy}","received_events_url":"https://api.github.com/users/ctubbsii/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-02-28T21:37:53Z","updated_at":"2024-02-28T21:37:53Z","author_association":"MEMBER","body":"I'm not so sure we should do this. This would require a new API, so it can't be done in 2.1 where it'd be most useful. Users already have the ability to clone and efficiently truncate a table. That efficiency is limited in 2.1, due to chop compactions, which go away in 3.1. In 3.1, it'd probably be better to implement support for allowing range deletion to occur on an offline table, since it doesn't need to be online for chop compactions. That would support an offline truncate, for the situations where users don't want to bring the table online and host it in order to perform the operation. For the elasticity branch, I believe the truncate operation can already happen on an unhosted table, so it's not needed there.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1969962887/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1969987337","html_url":"https://github.com/apache/accumulo/issues/4315#issuecomment-1969987337","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4315","id":1969987337,"node_id":"IC_kwDOACaFSM51a58J","user":{"login":"dlmarion","id":567911,"node_id":"MDQ6VXNlcjU2NzkxMQ==","avatar_url":"https://avatars.githubusercontent.com/u/567911?v=4","gravatar_id":"","url":"https://api.github.com/users/dlmarion","html_url":"https://github.com/dlmarion","followers_url":"https://api.github.com/users/dlmarion/followers","following_url":"https://api.github.com/users/dlmarion/following{/other_user}","gists_url":"https://api.github.com/users/dlmarion/gists{/gist_id}","starred_url":"https://api.github.com/users/dlmarion/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dlmarion/subscriptions","organizations_url":"https://api.github.com/users/dlmarion/orgs","repos_url":"https://api.github.com/users/dlmarion/repos","events_url":"https://api.github.com/users/dlmarion/events{/privacy}","received_events_url":"https://api.github.com/users/dlmarion/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-02-28T21:56:43Z","updated_at":"2024-02-28T21:56:43Z","author_association":"CONTRIBUTOR","body":"I made a comment somewhere , but I can't find it right now. It was something that I thought of while working on #4289. The basic gist of the comment was that configuration properties that are defined outside of Property.java can't be validated. My proposal, for which I apparently didn't create a ticket for, was to create a base interface for all SPI interface classes. That base interface would have a method that would accept the configuration as a parameter and implementation should validate that the properties are correct.\r\n\r\nI think one issue with this approach is that we don't know which SPI implementation are in use. We have PropertyType.CLASSNAME, but I'm not sure that in all cases the class is an SPI implementation. We could possibly create a PropertyType.SPI_IMPL type and then call the validate method on those classes. But I'm still not sure that this would catch all cases.\r\n\r\nIn any case, the scope of this problem is larger than described in this issue.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1969987337/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1970029925","html_url":"https://github.com/apache/accumulo/issues/4316#issuecomment-1970029925","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4316","id":1970029925,"node_id":"IC_kwDOACaFSM51bEVl","user":{"login":"dlmarion","id":567911,"node_id":"MDQ6VXNlcjU2NzkxMQ==","avatar_url":"https://avatars.githubusercontent.com/u/567911?v=4","gravatar_id":"","url":"https://api.github.com/users/dlmarion","html_url":"https://github.com/dlmarion","followers_url":"https://api.github.com/users/dlmarion/followers","following_url":"https://api.github.com/users/dlmarion/following{/other_user}","gists_url":"https://api.github.com/users/dlmarion/gists{/gist_id}","starred_url":"https://api.github.com/users/dlmarion/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dlmarion/subscriptions","organizations_url":"https://api.github.com/users/dlmarion/orgs","repos_url":"https://api.github.com/users/dlmarion/repos","events_url":"https://api.github.com/users/dlmarion/events{/privacy}","received_events_url":"https://api.github.com/users/dlmarion/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-02-28T22:30:46Z","updated_at":"2024-02-28T22:30:46Z","author_association":"CONTRIBUTOR","body":"I wonder if we really need to cache the Id object. Each Id is a wrapper around a String. I wonder if the following would be sufficient:\r\n\r\n```\r\n   protected AbstractId(final String canonical) {\r\n-    this.canonical = Objects.requireNonNull(canonical, \"canonical cannot be null\");\r\n+    this.canonical = Objects.requireNonNull(canonical, \"canonical cannot be null\").intern();\r\n   }\r\n```\r\n\r\nI realize that by Caching the Id object we are saving the time it takes to create it, but we are also incurring the overhead of having a Cache for each Id type.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1970029925/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1970034095","html_url":"https://github.com/apache/accumulo/issues/4316#issuecomment-1970034095","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4316","id":1970034095,"node_id":"IC_kwDOACaFSM51bFWv","user":{"login":"dlmarion","id":567911,"node_id":"MDQ6VXNlcjU2NzkxMQ==","avatar_url":"https://avatars.githubusercontent.com/u/567911?v=4","gravatar_id":"","url":"https://api.github.com/users/dlmarion","html_url":"https://github.com/dlmarion","followers_url":"https://api.github.com/users/dlmarion/followers","following_url":"https://api.github.com/users/dlmarion/following{/other_user}","gists_url":"https://api.github.com/users/dlmarion/gists{/gist_id}","starred_url":"https://api.github.com/users/dlmarion/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dlmarion/subscriptions","organizations_url":"https://api.github.com/users/dlmarion/orgs","repos_url":"https://api.github.com/users/dlmarion/repos","events_url":"https://api.github.com/users/dlmarion/events{/privacy}","received_events_url":"https://api.github.com/users/dlmarion/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-02-28T22:34:17Z","updated_at":"2024-02-28T22:34:17Z","author_association":"CONTRIBUTOR","body":"Also, I'm not sure that we want to cache things like FateId which could be short-lived. We likely also want to have Id expire after some period of time (a day?)","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1970034095/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1970073556","html_url":"https://github.com/apache/accumulo/issues/4321#issuecomment-1970073556","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4321","id":1970073556,"node_id":"IC_kwDOACaFSM51bO_U","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-02-28T23:12:31Z","updated_at":"2024-02-28T23:12:31Z","author_association":"CONTRIBUTOR","body":"Also need to update AccumuloStoreFateIT. \r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1970073556/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1970094617","html_url":"https://github.com/apache/accumulo/issues/4321#issuecomment-1970094617","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4321","id":1970094617,"node_id":"IC_kwDOACaFSM51bUIZ","user":{"login":"cshannon","id":123009,"node_id":"MDQ6VXNlcjEyMzAwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/123009?v=4","gravatar_id":"","url":"https://api.github.com/users/cshannon","html_url":"https://github.com/cshannon","followers_url":"https://api.github.com/users/cshannon/followers","following_url":"https://api.github.com/users/cshannon/following{/other_user}","gists_url":"https://api.github.com/users/cshannon/gists{/gist_id}","starred_url":"https://api.github.com/users/cshannon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cshannon/subscriptions","organizations_url":"https://api.github.com/users/cshannon/orgs","repos_url":"https://api.github.com/users/cshannon/repos","events_url":"https://api.github.com/users/cshannon/events{/privacy}","received_events_url":"https://api.github.com/users/cshannon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-02-28T23:34:32Z","updated_at":"2024-02-28T23:34:32Z","author_association":"CONTRIBUTOR","body":"> Also need to update AccumuloStoreFateIT.\r\n\r\nI opened up #4322 to add a test to make sure the real system table is correctly configured with the iterator going forward. I can work on that issue and also I will take this issue and update AccumuloStoreIT and AccumuloStoreFateIT","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1970094617/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1970149852","html_url":"https://github.com/apache/accumulo/issues/4318#issuecomment-1970149852","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4318","id":1970149852,"node_id":"IC_kwDOACaFSM51bhnc","user":{"login":"EdColeman","id":7047700,"node_id":"MDQ6VXNlcjcwNDc3MDA=","avatar_url":"https://avatars.githubusercontent.com/u/7047700?v=4","gravatar_id":"","url":"https://api.github.com/users/EdColeman","html_url":"https://github.com/EdColeman","followers_url":"https://api.github.com/users/EdColeman/followers","following_url":"https://api.github.com/users/EdColeman/following{/other_user}","gists_url":"https://api.github.com/users/EdColeman/gists{/gist_id}","starred_url":"https://api.github.com/users/EdColeman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/EdColeman/subscriptions","organizations_url":"https://api.github.com/users/EdColeman/orgs","repos_url":"https://api.github.com/users/EdColeman/repos","events_url":"https://api.github.com/users/EdColeman/events{/privacy}","received_events_url":"https://api.github.com/users/EdColeman/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-02-29T00:17:03Z","updated_at":"2024-02-29T13:11:26Z","author_association":"CONTRIBUTOR","body":"The metadata is periodically flushed.  If compactions do not run, then the number of files will continue to grow.  Keeping the number of files to a minimum would reduce potential impact to metadata scan performance as well as reduce recovery time.  If the number of files increased unbounded, then that could stress things to the point where metadata recovery may have issues?  Ideally any error conditions are currently handled, but those paths may not be as robust as we assume.\r\n\r\nTo put some concrete numbers on this.  The default gc cycle delay is 5 minutes.  Depending on the setting of `GC_USE_FULL_COMPACTION` property, the metadata table will be flushed (and possibly a compaction scheduled) depending if the property is set to `flush` or `compact`.  That would result in 288 files in a day, over 800 in three days if no external compaction service was available to compact the metadata table.\r\n\r\nThis is speculative, but we currently strive to keep the metadata compacted to maintain performance.  If we are not compacting regularly, then things could be pushed to a tipping point that we can prevent if we have some guarantee that metadata compactions are occurring, loudly calling attention if they are not, and as a last step, take some action that places a bound on how bad we let things get before we get pushed into uncharted territory.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1970149852/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1971311193","html_url":"https://github.com/apache/accumulo/issues/4316#issuecomment-1971311193","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4316","id":1971311193,"node_id":"IC_kwDOACaFSM51f9JZ","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-02-29T14:52:33Z","updated_at":"2024-02-29T14:52:33Z","author_association":"CONTRIBUTOR","body":"Probably do not want to cache high cardinality short lived ids like FateId and ExternalCompactionId.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1971311193/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1971344540","html_url":"https://github.com/apache/accumulo/issues/4316#issuecomment-1971344540","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4316","id":1971344540,"node_id":"IC_kwDOACaFSM51gFSc","user":{"login":"DomGarguilo","id":47725857,"node_id":"MDQ6VXNlcjQ3NzI1ODU3","avatar_url":"https://avatars.githubusercontent.com/u/47725857?v=4","gravatar_id":"","url":"https://api.github.com/users/DomGarguilo","html_url":"https://github.com/DomGarguilo","followers_url":"https://api.github.com/users/DomGarguilo/followers","following_url":"https://api.github.com/users/DomGarguilo/following{/other_user}","gists_url":"https://api.github.com/users/DomGarguilo/gists{/gist_id}","starred_url":"https://api.github.com/users/DomGarguilo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DomGarguilo/subscriptions","organizations_url":"https://api.github.com/users/DomGarguilo/orgs","repos_url":"https://api.github.com/users/DomGarguilo/repos","events_url":"https://api.github.com/users/DomGarguilo/events{/privacy}","received_events_url":"https://api.github.com/users/DomGarguilo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-02-29T15:08:42Z","updated_at":"2024-02-29T15:08:42Z","author_association":"MEMBER","body":"> We likely also want to have Id expire after some period of time (a day?)\r\n\r\nAre you suggesting this for the existing objects that are cached? Or if new ones are added?","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1971344540/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1971559575","html_url":"https://github.com/apache/accumulo/issues/4111#issuecomment-1971559575","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4111","id":1971559575,"node_id":"IC_kwDOACaFSM51g5yX","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-02-29T16:54:27Z","updated_at":"2024-02-29T16:54:40Z","author_association":"CONTRIBUTOR","body":"#4323 handles this issue for split. While working on the issue realized the problem was a bit broader than just bulk and compaction columns, realized that every tablet metadata column that exists needs to be considered in the split code.   Similar work still needs to be done for the merge code.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1971559575/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1971673766","html_url":"https://github.com/apache/accumulo/issues/4324#issuecomment-1971673766","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4324","id":1971673766,"node_id":"IC_kwDOACaFSM51hVqm","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-02-29T18:02:32Z","updated_at":"2024-02-29T18:02:32Z","author_association":"CONTRIBUTOR","body":"In 2.1 and 3.1 there is a metadata table compaction time iterator that does something similar for bulk load markers.  This iterator was removed in the elasticity branch because it was not needed.  However changes to how bulk import does clean up and the introduction of the compaction markers mean something like this probably still needed. IMO the compaction time iterator in 2.1 and 31. is not a very clean way to do this because it reads from ZK. In elasticity doing this w/ a compaction time iterator would not be possible because fate ids will need to be read from ZK or the new fate table.  Would not want a metadata compaction iterator attempting to read from the new fate table.\n\nThis new check should run periodically in the manager or GC. IMO the GC process seems like the best place.  Whichever process it runs in the code should be self contained and easily moved to another process.\n\nRealized this was an issue while working on #4323","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1971673766/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1971725916","html_url":"https://github.com/apache/accumulo/issues/4324#issuecomment-1971725916","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4324","id":1971725916,"node_id":"IC_kwDOACaFSM51hiZc","user":{"login":"ArbaazKhan1","id":29344877,"node_id":"MDQ6VXNlcjI5MzQ0ODc3","avatar_url":"https://avatars.githubusercontent.com/u/29344877?v=4","gravatar_id":"","url":"https://api.github.com/users/ArbaazKhan1","html_url":"https://github.com/ArbaazKhan1","followers_url":"https://api.github.com/users/ArbaazKhan1/followers","following_url":"https://api.github.com/users/ArbaazKhan1/following{/other_user}","gists_url":"https://api.github.com/users/ArbaazKhan1/gists{/gist_id}","starred_url":"https://api.github.com/users/ArbaazKhan1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ArbaazKhan1/subscriptions","organizations_url":"https://api.github.com/users/ArbaazKhan1/orgs","repos_url":"https://api.github.com/users/ArbaazKhan1/repos","events_url":"https://api.github.com/users/ArbaazKhan1/events{/privacy}","received_events_url":"https://api.github.com/users/ArbaazKhan1/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-02-29T18:35:45Z","updated_at":"2024-02-29T18:35:45Z","author_association":"CONTRIBUTOR","body":"I can take a look at this","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1971725916/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1973102524","html_url":"https://github.com/apache/accumulo/issues/4316#issuecomment-1973102524","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4316","id":1973102524,"node_id":"IC_kwDOACaFSM51mye8","user":{"login":"dlmarion","id":567911,"node_id":"MDQ6VXNlcjU2NzkxMQ==","avatar_url":"https://avatars.githubusercontent.com/u/567911?v=4","gravatar_id":"","url":"https://api.github.com/users/dlmarion","html_url":"https://github.com/dlmarion","followers_url":"https://api.github.com/users/dlmarion/followers","following_url":"https://api.github.com/users/dlmarion/following{/other_user}","gists_url":"https://api.github.com/users/dlmarion/gists{/gist_id}","starred_url":"https://api.github.com/users/dlmarion/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dlmarion/subscriptions","organizations_url":"https://api.github.com/users/dlmarion/orgs","repos_url":"https://api.github.com/users/dlmarion/repos","events_url":"https://api.github.com/users/dlmarion/events{/privacy}","received_events_url":"https://api.github.com/users/dlmarion/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-01T12:27:19Z","updated_at":"2024-03-01T12:27:19Z","author_association":"CONTRIBUTOR","body":"> > We likely also want to have Id expire after some period of time (a day?)\r\n> \r\n> Are you suggesting this for the existing objects that are cached? Or if new ones are added?\r\n\r\nSorry, I wasn't clear. I was suggesting that if we are going to cache Ids, that we may want to have them expire from the cache after some period of time. Adding a cache in the AbstractId implementations will affect the server and client. I think we want to be mindful of consuming client side memory for long periods of time for something that might not be used.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1973102524/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1973278839","html_url":"https://github.com/apache/accumulo/pull/4328#issuecomment-1973278839","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4328","id":1973278839,"node_id":"IC_kwDOACaFSM51ndh3","user":{"login":"cshannon","id":123009,"node_id":"MDQ6VXNlcjEyMzAwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/123009?v=4","gravatar_id":"","url":"https://api.github.com/users/cshannon","html_url":"https://github.com/cshannon","followers_url":"https://api.github.com/users/cshannon/followers","following_url":"https://api.github.com/users/cshannon/following{/other_user}","gists_url":"https://api.github.com/users/cshannon/gists{/gist_id}","starred_url":"https://api.github.com/users/cshannon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cshannon/subscriptions","organizations_url":"https://api.github.com/users/cshannon/orgs","repos_url":"https://api.github.com/users/cshannon/repos","events_url":"https://api.github.com/users/cshannon/events{/privacy}","received_events_url":"https://api.github.com/users/cshannon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-01T14:13:36Z","updated_at":"2024-03-01T14:13:36Z","author_association":"CONTRIBUTOR","body":"I took a shot at picking the properties I figured were most important to check but if there are others we should add or some we can drop let me know. ","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1973278839/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1973386368","html_url":"https://github.com/apache/accumulo/pull/4306#issuecomment-1973386368","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4306","id":1973386368,"node_id":"IC_kwDOACaFSM51n3yA","user":{"login":"dlmarion","id":567911,"node_id":"MDQ6VXNlcjU2NzkxMQ==","avatar_url":"https://avatars.githubusercontent.com/u/567911?v=4","gravatar_id":"","url":"https://api.github.com/users/dlmarion","html_url":"https://github.com/dlmarion","followers_url":"https://api.github.com/users/dlmarion/followers","following_url":"https://api.github.com/users/dlmarion/following{/other_user}","gists_url":"https://api.github.com/users/dlmarion/gists{/gist_id}","starred_url":"https://api.github.com/users/dlmarion/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dlmarion/subscriptions","organizations_url":"https://api.github.com/users/dlmarion/orgs","repos_url":"https://api.github.com/users/dlmarion/repos","events_url":"https://api.github.com/users/dlmarion/events{/privacy}","received_events_url":"https://api.github.com/users/dlmarion/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-01T15:27:07Z","updated_at":"2024-03-01T15:27:07Z","author_association":"CONTRIBUTOR","body":"Closing in favor of #4309 ","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1973386368/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1973547607","html_url":"https://github.com/apache/accumulo/pull/4329#issuecomment-1973547607","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4329","id":1973547607,"node_id":"IC_kwDOACaFSM51ofJX","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-01T17:00:07Z","updated_at":"2024-03-01T17:00:07Z","author_association":"CONTRIBUTOR","body":"Was looking at how the script uses NUM_TSERVERS and saw the following line\r\n\r\nhttps://github.com/apache/accumulo/blob/4c4d4c6ec4f31d365d4ef638a09cf4cc024ca625/assemble/bin/accumulo-cluster#L142\r\n\r\nI noticed its different than the following compactor line.  However not sure if that matters because I don't understand what the line is doing.  Does it need to be the same? What is that line doing?","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1973547607/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1973556685","html_url":"https://github.com/apache/accumulo/pull/4323#issuecomment-1973556685","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4323","id":1973556685,"node_id":"IC_kwDOACaFSM51ohXN","user":{"login":"cshannon","id":123009,"node_id":"MDQ6VXNlcjEyMzAwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/123009?v=4","gravatar_id":"","url":"https://api.github.com/users/cshannon","html_url":"https://github.com/cshannon","followers_url":"https://api.github.com/users/cshannon/followers","following_url":"https://api.github.com/users/cshannon/following{/other_user}","gists_url":"https://api.github.com/users/cshannon/gists{/gist_id}","starred_url":"https://api.github.com/users/cshannon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cshannon/subscriptions","organizations_url":"https://api.github.com/users/cshannon/orgs","repos_url":"https://api.github.com/users/cshannon/repos","events_url":"https://api.github.com/users/cshannon/events{/privacy}","received_events_url":"https://api.github.com/users/cshannon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-01T17:04:37Z","updated_at":"2024-03-01T17:05:04Z","author_association":"CONTRIBUTOR","body":"This is probably something to do as a follow on when the merge test is looked at, but you could try to move common code related to mocking TabletMetadata to a central place like a utility class to be reused. My assumption is a lot of setup for all of the mocks could be re-used for testing that merge handles all the columns. It should make it easier to update the tests when adding new columns that need to be considered for both split and merge.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1973556685/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1973712131","html_url":"https://github.com/apache/accumulo/pull/4323#issuecomment-1973712131","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4323","id":1973712131,"node_id":"IC_kwDOACaFSM51pHUD","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-01T18:25:09Z","updated_at":"2024-03-01T18:25:09Z","author_association":"CONTRIBUTOR","body":">  I'm wondering if we could get into a weird state where we just start rapidly throwing exceptions in a loop as it tries to split over and over and keeps failing so it would be good to test what the outcome is if there's unexpected columns that show up and that it's acceptable behavior for the system. \r\n\r\nIt would be good to add an IT for this.  Could manually add an unexpected column to a tablet in an IT and then attempt to split it.  I'll add that in this PR.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1973712131/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1973741709","html_url":"https://github.com/apache/accumulo/pull/4329#issuecomment-1973741709","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4329","id":1973741709,"node_id":"IC_kwDOACaFSM51pOiN","user":{"login":"dlmarion","id":567911,"node_id":"MDQ6VXNlcjU2NzkxMQ==","avatar_url":"https://avatars.githubusercontent.com/u/567911?v=4","gravatar_id":"","url":"https://api.github.com/users/dlmarion","html_url":"https://github.com/dlmarion","followers_url":"https://api.github.com/users/dlmarion/followers","following_url":"https://api.github.com/users/dlmarion/following{/other_user}","gists_url":"https://api.github.com/users/dlmarion/gists{/gist_id}","starred_url":"https://api.github.com/users/dlmarion/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dlmarion/subscriptions","organizations_url":"https://api.github.com/users/dlmarion/orgs","repos_url":"https://api.github.com/users/dlmarion/repos","events_url":"https://api.github.com/users/dlmarion/events{/privacy}","received_events_url":"https://api.github.com/users/dlmarion/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-01T18:47:53Z","updated_at":"2024-03-01T18:47:53Z","author_association":"CONTRIBUTOR","body":"> Was looking at how the script uses NUM_TSERVERS and saw the following line\r\n> \r\n> https://github.com/apache/accumulo/blob/4c4d4c6ec4f31d365d4ef638a09cf4cc024ca625/assemble/bin/accumulo-cluster#L142\r\n> \r\n> I noticed its different than the following compactor line. However not sure if that matters because I don't understand what the line is doing. Does it need to be the same? What is that line doing?\r\n\r\nSo, first, let's talk about how it's used. It's used [here](https://github.com/apache/accumulo/blob/2.1/assemble/bin/accumulo-service#L76) in 2.1 for helping to determine the name of the output file. In 1.10 and earlier versions using Log4J v1, it was used like [this](https://github.com/apache/accumulo/blob/rel/1.10.4/assemble/conf/templates/generic_logger.xml#L23). \r\n\r\nRegarding the the lines you referenced in the `accumulo-cluster`:\r\n```\r\n  for ((inst_id = 1; inst_id <= last_instance_id; inst_id++)); do\r\n    ACCUMULO_SERVICE_INSTANCE=\"\"\r\n    [[ $service == \"tserver\" && ${NUM_TSERVERS:-1} -gt 1 ]] && ACCUMULO_SERVICE_INSTANCE=${inst_id}\r\n    [[ $service == \"compactor\" ]] && ACCUMULO_SERVICE_INSTANCE=\"${inst_id}_${5}\"\r\n    [[ $service == \"sserver\" && ${NUM_SSERVERS:-1} -gt 1 ]] && ACCUMULO_SERVICE_INSTANCE=${inst_id}\r\n```\r\n\r\nIn the case of NUM_TSERVERS and NUM_SSERVERS, they are setting `ACCUMULO_SERVICE_INSTANCE` to the current `inst_id` when NUM_TSERVERS and NUM_SSERVERS is larger than one. When the value of `NUMX` is 1, then the logfile name will not have a number (e.g. `sserver.out`) and when the value of `NUMX` is larger than 1, then the logfile name will have a number (e.g. `sserver1.log`, `sserver2.log`, ...)\r\n\r\nIn the case of Compactors, it always sets `ACCUMULO_SERVICE_INSTANCE` to `${inst_id}_${5}`. The fifth parameter in this case is the group name. So compactors will have output file names of the pattern `compactor1_default.out` for example.\r\n\r\nIn elasticity the code looks like below, so the order has changed a little with respect to resource group and instance number:\r\n```\r\n  for ((inst_id = 1; inst_id <= last_instance_id; inst_id++)); do\r\n    ACCUMULO_SERVICE_INSTANCE=\"\"\r\n    [[ $service == \"tserver\" && ${NUM_TSERVERS:-1} -gt 1 ]] && ACCUMULO_SERVICE_INSTANCE=\"_${group}_${inst_id}\"\r\n    [[ $service == \"compactor\" ]] && ACCUMULO_SERVICE_INSTANCE=\"_${group}_${inst_id}\"\r\n    [[ $service == \"sserver\" && ${NUM_SSERVERS:-1} -gt 1 ]] && ACCUMULO_SERVICE_INSTANCE=\"_${group}_${inst_id}\"\r\n```","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1973741709/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1973789478","html_url":"https://github.com/apache/accumulo/pull/4309#issuecomment-1973789478","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4309","id":1973789478,"node_id":"IC_kwDOACaFSM51paMm","user":{"login":"dlmarion","id":567911,"node_id":"MDQ6VXNlcjU2NzkxMQ==","avatar_url":"https://avatars.githubusercontent.com/u/567911?v=4","gravatar_id":"","url":"https://api.github.com/users/dlmarion","html_url":"https://github.com/dlmarion","followers_url":"https://api.github.com/users/dlmarion/followers","following_url":"https://api.github.com/users/dlmarion/following{/other_user}","gists_url":"https://api.github.com/users/dlmarion/gists{/gist_id}","starred_url":"https://api.github.com/users/dlmarion/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dlmarion/subscriptions","organizations_url":"https://api.github.com/users/dlmarion/orgs","repos_url":"https://api.github.com/users/dlmarion/repos","events_url":"https://api.github.com/users/dlmarion/events{/privacy}","received_events_url":"https://api.github.com/users/dlmarion/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-01T19:27:11Z","updated_at":"2024-03-01T19:27:11Z","author_association":"CONTRIBUTOR","body":"Full IT build based off commit aecd79064602b2dca413e4274e2c1ba98bbfc048 passed successfully.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1973789478/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1973960011","html_url":"https://github.com/apache/accumulo/pull/4332#issuecomment-1973960011","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4332","id":1973960011,"node_id":"IC_kwDOACaFSM51qD1L","user":{"login":"cshannon","id":123009,"node_id":"MDQ6VXNlcjEyMzAwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/123009?v=4","gravatar_id":"","url":"https://api.github.com/users/cshannon","html_url":"https://github.com/cshannon","followers_url":"https://api.github.com/users/cshannon/followers","following_url":"https://api.github.com/users/cshannon/following{/other_user}","gists_url":"https://api.github.com/users/cshannon/gists{/gist_id}","starred_url":"https://api.github.com/users/cshannon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cshannon/subscriptions","organizations_url":"https://api.github.com/users/cshannon/orgs","repos_url":"https://api.github.com/users/cshannon/repos","events_url":"https://api.github.com/users/cshannon/events{/privacy}","received_events_url":"https://api.github.com/users/cshannon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-01T21:38:30Z","updated_at":"2024-03-01T21:38:30Z","author_association":"CONTRIBUTOR","body":"Also note that when this gets merged forward there will be some changes needed as some refactoring was done with where the root and metadata name and ids are stored. Also elasticity will need an extra check added to verify the availability goal is hosted on all tablets","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1973960011/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1974057531","html_url":"https://github.com/apache/accumulo/pull/4329#issuecomment-1974057531","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4329","id":1974057531,"node_id":"IC_kwDOACaFSM51qbo7","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-01T23:14:11Z","updated_at":"2024-03-01T23:14:11Z","author_association":"CONTRIBUTOR","body":"@dlmarion thanks for the explanation, it was very helpful.  So if I run 2 compactors per host AND have two groups GA,GB that both include a host, when I look on that host I would see 4 logs like :\r\n\r\n  1. compactor1_GA.log\r\n  2. compactor2_GA.log\r\n  3. compactor1_GB.log \r\n  4. compactor2_GB.log ","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1974057531/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1974074548","html_url":"https://github.com/apache/accumulo/pull/4333#issuecomment-1974074548","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4333","id":1974074548,"node_id":"IC_kwDOACaFSM51qfy0","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-01T23:33:56Z","updated_at":"2024-03-01T23:33:56Z","author_association":"CONTRIBUTOR","body":"I have been looking at logs at lot and running test while making this change.  While doing this realized that it would be nice to link fate id and external compaction ids in a single line.  This change does that linking.  Below is some output from running `CompactionIT.testMultiStepCompactionThatDeletesAll()`.  This test initiates a table compaction on a tablet that has more files than a single compaction will process.\r\n\r\n\r\n```\r\n$ grep 4a66e792f3b4760a Manager_1145795413.out \r\n2024-03-01T17:40:01,940 82 [fate.Fate] INFO : Seeding FATE:USER:4a66e792f3b4760a TABLE_COMPACT Compact table (1) with config [iterators=[name:GrepIterator, priority:100, class:org.apache.accumulo.core.iterators.user.GrepIterator, properties:{term=keep}]]\r\n2024-03-01T17:40:01,966 113 [tableOps.Utils] INFO : namespace +default FATE:USER:4a66e792f3b4760a locked for READ operation: COMPACT\r\n2024-03-01T17:40:01,971 113 [tableOps.Utils] INFO : table 1 FATE:USER:4a66e792f3b4760a locked for READ operation: COMPACT\r\n2024-03-01T17:40:02,009 111 [tablet.files] TRACE: Selected files 1<< FATE:USER:4a66e792f3b4760a [F0000004.rf, F0000005.rf, F0000006.rf, F0000007.rf, F0000008.rf, F0000009.rf, F000000a.rf, F000000b.rf, F000000c.rf, F000000d.rf, F000000e.rf, F000000f.rf, F000000g.rf, F000000h.rf, F000000i.rf, F000000j.rf, F000000k.rf, F000000l.rf, F000000m.rf, F000000n.rf, F000000o.rf, F000000p.rf, F000000q.rf, F000000r.rf, F000000s.rf, F000000t.rf, F000000u.rf, F000000v.rf, F000000w.rf, F000000x.rf, F000000y.rf, F000000z.rf, F0000010.rf, F0000011.rf, F0000012.rf, F0000013.rf, F0000014.rf, F0000015.rf, F0000016.rf, F0000017.rf, F0000018.rf, F0000019.rf, F000001a.rf, F000001b.rf, F000001c.rf, F000001d.rf, F000001e.rf, F000001f.rf, F000001g.rf, F000001h.rf, F000001i.rf, F000001j.rf, F000001k.rf, F000001l.rf, F000001m.rf, F000001n.rf, F000001o.rf, F000001p.rf, F000001q.rf, F000001r.rf]\r\n2024-03-01T17:40:02,009 111 [compact.CompactionDriver] DEBUG: FATE:USER:4a66e792f3b4760a tablet stats, total:1 complete:0 selected_now:1 selected_prev:0 selected_by_other:0 no_files:0 none_selected:0 user_compaction_requested:0 user_compaction_waiting:0 opids:0 scan_update_time:17ms\r\n2024-03-01T17:40:02,009 111 [manager.EventCoordinator] DEBUG: FATE:USER:4a66e792f3b4760a selected files for compaction for 1 tablets\r\n2024-03-01T17:40:02,067 83 [tablet.files] DEBUG: Compacting 1<< driver:FATE:USER:4a66e792f3b4760a id:ECID-bfff40f4-2dbd-43c0-a5a0-b3ce2b667618 group:default compactor:localhost:9134 priority:-2933 size:2 KB kind:USER files:[F000000c.rf, F000000b.rf, F0000008.rf, F0000007.rf, F000000a.rf, F0000006.rf, F0000005.rf, F000000d.rf, F0000004.rf, F0000009.rf]\r\n2024-03-01T17:40:02,248 78 [tablet.files] DEBUG: Compacting 1<< driver:FATE:USER:4a66e792f3b4760a id:ECID-c9c9be4c-464f-45ce-b85d-f1af0a5bcc03 group:default compactor:localhost:9134 priority:-2943 size:2 KB kind:USER files:[F000000i.rf, F000000h.rf, F000000n.rf, F000000g.rf, F000000f.rf, F000000m.rf, F000000l.rf, F000000e.rf, F000000k.rf, F000000j.rf]\r\n2024-03-01T17:40:02,368 58 [tablet.files] DEBUG: Compacting 1<< driver:FATE:USER:4a66e792f3b4760a id:ECID-5a8cf71d-9ce1-462a-893e-9f65519b3293 group:default compactor:localhost:9134 priority:-2953 size:2 KB kind:USER files:[F000000x.rf, F000000w.rf, F000000p.rf, F000000o.rf, F000000v.rf, F000000u.rf, F000000t.rf, F000000s.rf, F000000r.rf, F000000q.rf]\r\n2024-03-01T17:40:02,471 74 [tablet.files] DEBUG: Compacting 1<< driver:FATE:USER:4a66e792f3b4760a id:ECID-0e31175d-eedf-4c38-8b06-4f7f9cf5ee46 group:default compactor:localhost:9134 priority:-2963 size:2 KB kind:USER files:[F0000015.rf, F0000014.rf, F0000013.rf, F0000012.rf, F000000z.rf, F000000y.rf, F0000011.rf, F0000010.rf, F0000017.rf, F0000016.rf]\r\n2024-03-01T17:40:02,525 111 [compact.CompactionDriver] DEBUG: FATE:USER:4a66e792f3b4760a tablet stats, total:1 complete:0 selected_now:0 selected_prev:1 selected_by_other:0 no_files:0 none_selected:0 user_compaction_requested:0 user_compaction_waiting:0 opids:0 scan_update_time:5ms\r\n2024-03-01T17:40:02,576 73 [tablet.files] DEBUG: Compacting 1<< driver:FATE:USER:4a66e792f3b4760a id:ECID-ba089e00-d6d3-47ee-ab77-dcaace7dfd21 group:default compactor:localhost:9134 priority:-2973 size:2 KB kind:USER files:[F000001f.rf, F000001e.rf, F000001d.rf, F000001c.rf, F0000019.rf, F0000018.rf, F000001b.rf, F000001a.rf, F000001h.rf, F000001g.rf]\r\n2024-03-01T17:40:02,758 64 [tablet.files] DEBUG: Compacting 1<< driver:FATE:USER:4a66e792f3b4760a id:ECID-57ca0286-9fbf-4e88-9f98-c261754e7e79 group:default compactor:localhost:9134 priority:-2983 size:2 KB kind:USER files:[F000001m.rf, F000001l.rf, F000001k.rf, F000001r.rf, F000001j.rf, F000001q.rf, F000001p.rf, F000001i.rf, F000001o.rf, F000001n.rf]\r\n2024-03-01T17:40:02,816 112 [commit.CommitCompaction] DEBUG: All selected files compacted for 1<< setting compacted for FATE:USER:4a66e792f3b4760a\r\n2024-03-01T17:40:03,043 114 [compact.CompactionDriver] DEBUG: FATE:USER:4a66e792f3b4760a tablet stats, total:1 complete:1 selected_now:0 selected_prev:0 selected_by_other:0 no_files:0 none_selected:0 user_compaction_requested:0 user_compaction_waiting:0 opids:0 scan_update_time:3ms\r\n2024-03-01T17:40:03,083 111 [compact.CleanUp] DEBUG: FATE:USER:4a66e792f3b4760a removed 1 of 1 compacted markers for 1 tablets in 1ms\r\n```\r\n\r\n * The fate op `FATE:USER:4a66e792f3b4760a` drives the table compaction\r\n * The fate operation selects a bunch of files for the only tablet in the table. Can see that in the new log message ` [tablet.files] TRACE: Selected files 1<< FATE:USER:4a66e792f3b4760a [F0000004.rf, `\r\n * The selected files on the tablet cause compactions to start happening.  Can see these starting with messages like `Compacting 1<< driver:FATE:USER:4a66e792f3b4760a id:ECID-ba089e00-d6d3-47ee-ab77-dcaace7dfd21 `  This log message links the fate id driving the table compaction to individual compaction ids.\r\n\r\n\r\nCan take one of the  compaction ids linked from the fate operation and grep for it to get more information.\r\n\r\n```\r\n$ grep ECID-0e31175d-eedf-4c38-8b06-4f7f9cf5ee46 Manager_1145795413.out \r\n2024-03-01T17:40:02,471 74 [tablet.files] DEBUG: Compacting 1<< driver:FATE:USER:4a66e792f3b4760a id:ECID-0e31175d-eedf-4c38-8b06-4f7f9cf5ee46 group:default compactor:localhost:9134 priority:-2963 size:2 KB kind:USER files:[F0000015.rf, F0000014.rf, F0000013.rf, F0000012.rf, F000000z.rf, F000000y.rf, F0000011.rf, F0000010.rf, F0000017.rf, F0000016.rf]\r\n2024-03-01T17:40:02,473 62 [coordinator.CompactionCoordinator] DEBUG: Compaction status update, id: ECID-0e31175d-eedf-4c38-8b06-4f7f9cf5ee46, timestamp: 1709332802472, update: TCompactionStatusUpdate(state:STARTED, message:Compaction started, entriesToBeCompacted:-1, entriesRead:-1, entriesWritten:-1)\r\n2024-03-01T17:40:02,490 65 [coordinator.CompactionCoordinator] DEBUG: Compaction status update, id: ECID-0e31175d-eedf-4c38-8b06-4f7f9cf5ee46, timestamp: 1709332802490, update: TCompactionStatusUpdate(state:SUCCEEDED, message:Compaction completed successfully, entriesToBeCompacted:-1, entriesRead:-1, entriesWritten:-1)\r\n2024-03-01T17:40:02,491 78 [coordinator.CompactionCoordinator] INFO : Compaction completed, id: ECID-0e31175d-eedf-4c38-8b06-4f7f9cf5ee46, stats: TCompactionStats(entriesRead:10, entriesWritten:0, fileSize:145), extent: 1<<\r\n2024-03-01T17:40:02,500 78 [fate.Fate] INFO : Seeding FATE:USER:6efa9c0980b8b4b2 Commit compaction ECID-0e31175d-eedf-4c38-8b06-4f7f9cf5ee46\r\n2024-03-01T17:40:02,543 114 [tablet.files] DEBUG: ECID-0e31175d-eedf-4c38-8b06-4f7f9cf5ee46 compacted 1<< for USER created no output from [F000000z.rf, F0000014.rf, F000000y.rf, F0000015.rf, F0000016.rf, F0000017.rf, F0000011.rf, F0000013.rf, F0000010.rf, F0000012.rf]\r\n```","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1974074548/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1974873310","html_url":"https://github.com/apache/accumulo/pull/4317#issuecomment-1974873310","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4317","id":1974873310,"node_id":"IC_kwDOACaFSM51tize","user":{"login":"cshannon","id":123009,"node_id":"MDQ6VXNlcjEyMzAwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/123009?v=4","gravatar_id":"","url":"https://api.github.com/users/cshannon","html_url":"https://github.com/cshannon","followers_url":"https://api.github.com/users/cshannon/followers","following_url":"https://api.github.com/users/cshannon/following{/other_user}","gists_url":"https://api.github.com/users/cshannon/gists{/gist_id}","starred_url":"https://api.github.com/users/cshannon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cshannon/subscriptions","organizations_url":"https://api.github.com/users/cshannon/orgs","repos_url":"https://api.github.com/users/cshannon/repos","events_url":"https://api.github.com/users/cshannon/events{/privacy}","received_events_url":"https://api.github.com/users/cshannon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-02T18:32:50Z","updated_at":"2024-03-02T18:32:50Z","author_association":"CONTRIBUTOR","body":"@keith-turner - This is ready for another review, I realized I had to add a recheck in the FindSplits repo to see if we still are above the split threshold if no split points are found and the marker already exists. This is because the tablet management iterator will now try and split anytime there is a metadata change for an unsplittable tablet and it's possible we no longer need to split (like after a compaction) and we need to clear the marker. Before this change the marker was only cleared after a split was done.\r\n\r\nI also added tests for TabletManagement and constraints as well as a couple ITs. There is one IT that will test that the marker is set and then that it is cleared after splits run successfully and a second test that will test that the marker is set and then cleared if we no longer need to split such as the split threshold increasing but no split was done.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1974873310/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1974879288","html_url":"https://github.com/apache/accumulo/pull/4317#issuecomment-1974879288","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4317","id":1974879288,"node_id":"IC_kwDOACaFSM51tkQ4","user":{"login":"cshannon","id":123009,"node_id":"MDQ6VXNlcjEyMzAwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/123009?v=4","gravatar_id":"","url":"https://api.github.com/users/cshannon","html_url":"https://github.com/cshannon","followers_url":"https://api.github.com/users/cshannon/followers","following_url":"https://api.github.com/users/cshannon/following{/other_user}","gists_url":"https://api.github.com/users/cshannon/gists{/gist_id}","starred_url":"https://api.github.com/users/cshannon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cshannon/subscriptions","organizations_url":"https://api.github.com/users/cshannon/orgs","repos_url":"https://api.github.com/users/cshannon/repos","events_url":"https://api.github.com/users/cshannon/events{/privacy}","received_events_url":"https://api.github.com/users/cshannon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-02T19:00:18Z","updated_at":"2024-03-02T19:00:18Z","author_association":"CONTRIBUTOR","body":"One thing to mention is now that FindSplits fate repo has to recheck if a split is needed to clear the marker, it requires having the same logic for checking the threshold in multiple spots so I am wondering if we should consolidate that. For example, now [SplitUtils](https://github.com/apache/accumulo/blob/cb0f9959de1d223d6d76fbb13ffed7cc5e144867/server/manager/src/main/java/org/apache/accumulo/manager/split/SplitUtils.java#L215), [FindSplits](https://github.com/apache/accumulo/blob/cb0f9959de1d223d6d76fbb13ffed7cc5e144867/server/manager/src/main/java/org/apache/accumulo/manager/tableOps/split/FindSplits.java#L153), and [TabletManagementIterator](https://github.com/apache/accumulo/blob/cb0f9959de1d223d6d76fbb13ffed7cc5e144867/server/base/src/main/java/org/apache/accumulo/server/manager/state/TabletManagementIterator.java#L95) all do checks on the split threshold and it seems error prone if we change the logic in the future and one spot is updated and not the others.\r\n\r\nAlso, all of those spots now need to compute the size by iterating over the files so I was wondering if we should move this into `TabletMetadata` class itself so it could be cached and re-used. Currently I updated the SplitUtils [findSplits](https://github.com/apache/accumulo/blob/cb0f9959de1d223d6d76fbb13ffed7cc5e144867/server/manager/src/main/java/org/apache/accumulo/manager/split/SplitUtils.java#L205)() method to now take the estimatedSize as an argument so it's not computed more than once in FindSplits but that seems a bit odd. I was wondering if maybe we should add a getter that can compute the size and cache it (we could use Suppliers.memoize()) and then if any calling code needs to get the size of the files it could just call something like `tabletMetadata.getFileSize()`. The supplier could default to just returning 0 if files are not loaded.\r\n\r\nI was also trying to think if we could simplify having to recheck the threshold in the condition of no splits found and the marker exists. SplitUtils findSplits() is already called before that point and already does the threshold check (as noted above) but it doesn't return why it found no splits. Another option is to return a reason from that method for finding no splits (besides the empty set currently) as if the reason returned was the threshold wasn't met then we could avoid having to recheck.\r\n\r\nThe only other thing was I was trying to think of if there are more test cases we should write.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1974879288/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1974916053","html_url":"https://github.com/apache/accumulo/issues/3412#issuecomment-1974916053","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3412","id":1974916053,"node_id":"IC_kwDOACaFSM51ttPV","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-02T21:39:32Z","updated_at":"2024-06-03T20:10:04Z","author_association":"CONTRIBUTOR","body":"Prior to elasticity a compaction or split operation could never run unless a tablet was hosted.  Now these operations can run on unhosted tablets.  Taking a table offline assumed that once all the tablets were no longer hosted that splits or compactions would no longer happen.  The fate split operation does not need to get a lock, instead I think the following needs to be done.\r\n\r\n * The offline API has a wait operation, we could change the wait operation to wait for no compactions to be runnning, no splits to be running, and no tablets to be hosted.  Currently it only waits for all tablets to be unhosted.\r\n * We could make sure that new split and compaction operations do not start on offline tables. \r\n\r\nFor making operations not start, these checks can be done early to avoid work which is where #4335 comes in.  Then the checks can be done as late as possible which is where #4334 comes in, it adds a check immediately before setting the compaction id in the tablet.  Thinking the following needs to be done to make split (and compaction) work well with taking a table offline.\r\n\r\n- [x]  Add  code to offline wait operation that scans tables metadata and waits for no location, no external compaction id, and no operation ids.  To make this change, modify [this code](https://github.com/apache/accumulo/blob/afe2857935b42067cbce86ad93e85c567df70f52/core/src/main/java/org/apache/accumulo/core/clientImpl/TableOperationsImpl.java#L1272) to wait if OPID or ECOMP columns are present. Could open an issue for this, or just use this checklist.\r\n- [x] Add code to the Split fate operation that will not set an opid if the table is offline.  This is the late check for split. Could open an issue for this, or just use this checklist. Opened #4401\r\n- [x] #4335  this is the early check for split and compaction, avoids queuing up unnecessary work\r\n- [x] #4334 this is the late check for compaction\r\n- [x] I believe that running compactions periodically check if the table is offline and fail if it is.  Need to verify this is the case and see if it is covered by test.\r\n","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1974916053/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1976464207","html_url":"https://github.com/apache/accumulo/pull/4329#issuecomment-1976464207","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4329","id":1976464207,"node_id":"IC_kwDOACaFSM51znNP","user":{"login":"dlmarion","id":567911,"node_id":"MDQ6VXNlcjU2NzkxMQ==","avatar_url":"https://avatars.githubusercontent.com/u/567911?v=4","gravatar_id":"","url":"https://api.github.com/users/dlmarion","html_url":"https://github.com/dlmarion","followers_url":"https://api.github.com/users/dlmarion/followers","following_url":"https://api.github.com/users/dlmarion/following{/other_user}","gists_url":"https://api.github.com/users/dlmarion/gists{/gist_id}","starred_url":"https://api.github.com/users/dlmarion/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dlmarion/subscriptions","organizations_url":"https://api.github.com/users/dlmarion/orgs","repos_url":"https://api.github.com/users/dlmarion/repos","events_url":"https://api.github.com/users/dlmarion/events{/privacy}","received_events_url":"https://api.github.com/users/dlmarion/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-04T12:22:08Z","updated_at":"2024-03-04T12:22:08Z","author_association":"CONTRIBUTOR","body":"> @dlmarion thanks for the explanation, it was very helpful. So if I run 2 compactors per host AND have two groups GA,GB that both include a host, when I look on that host I would see 4 logs like :\r\n> \r\n> 1. compactor1_GA.log\r\n> 2. compactor2_GA.log\r\n> 3. compactor1_GB.log\r\n> 4. compactor2_GB.log\r\n\r\nYes, that should be the case.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1976464207/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1976558851","html_url":"https://github.com/apache/accumulo/issues/4336#issuecomment-1976558851","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4336","id":1976558851,"node_id":"IC_kwDOACaFSM51z-UD","user":{"login":"dlmarion","id":567911,"node_id":"MDQ6VXNlcjU2NzkxMQ==","avatar_url":"https://avatars.githubusercontent.com/u/567911?v=4","gravatar_id":"","url":"https://api.github.com/users/dlmarion","html_url":"https://github.com/dlmarion","followers_url":"https://api.github.com/users/dlmarion/followers","following_url":"https://api.github.com/users/dlmarion/following{/other_user}","gists_url":"https://api.github.com/users/dlmarion/gists{/gist_id}","starred_url":"https://api.github.com/users/dlmarion/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dlmarion/subscriptions","organizations_url":"https://api.github.com/users/dlmarion/orgs","repos_url":"https://api.github.com/users/dlmarion/repos","events_url":"https://api.github.com/users/dlmarion/events{/privacy}","received_events_url":"https://api.github.com/users/dlmarion/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-04T13:15:28Z","updated_at":"2024-03-04T13:15:28Z","author_association":"CONTRIBUTOR","body":"It looks like a CompactionJobGenerator is also created in the TabletManagementIterator, so we end up creating Caffeine Cache's in the Manager and TabletServers that we likely don't need.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1976558851/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1976584326","html_url":"https://github.com/apache/accumulo/pull/4334#issuecomment-1976584326","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4334","id":1976584326,"node_id":"IC_kwDOACaFSM510EiG","user":{"login":"dlmarion","id":567911,"node_id":"MDQ6VXNlcjU2NzkxMQ==","avatar_url":"https://avatars.githubusercontent.com/u/567911?v=4","gravatar_id":"","url":"https://api.github.com/users/dlmarion","html_url":"https://github.com/dlmarion","followers_url":"https://api.github.com/users/dlmarion/followers","following_url":"https://api.github.com/users/dlmarion/following{/other_user}","gists_url":"https://api.github.com/users/dlmarion/gists{/gist_id}","starred_url":"https://api.github.com/users/dlmarion/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dlmarion/subscriptions","organizations_url":"https://api.github.com/users/dlmarion/orgs","repos_url":"https://api.github.com/users/dlmarion/repos","events_url":"https://api.github.com/users/dlmarion/events{/privacy}","received_events_url":"https://api.github.com/users/dlmarion/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-04T13:28:59Z","updated_at":"2024-03-04T13:28:59Z","author_association":"CONTRIBUTOR","body":"The TabletGroupWatcher will host tablets for a table if it's has walogs (not sure if this will happen for an offline table or not). I'm just wondering if there is a case where a table is offline'd but due to the existence of walogs the tablets are recovered but not compacted.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1976584326/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1976599098","html_url":"https://github.com/apache/accumulo/issues/4274#issuecomment-1976599098","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4274","id":1976599098,"node_id":"IC_kwDOACaFSM510II6","user":{"login":"kevinrr888","id":43969518,"node_id":"MDQ6VXNlcjQzOTY5NTE4","avatar_url":"https://avatars.githubusercontent.com/u/43969518?v=4","gravatar_id":"","url":"https://api.github.com/users/kevinrr888","html_url":"https://github.com/kevinrr888","followers_url":"https://api.github.com/users/kevinrr888/followers","following_url":"https://api.github.com/users/kevinrr888/following{/other_user}","gists_url":"https://api.github.com/users/kevinrr888/gists{/gist_id}","starred_url":"https://api.github.com/users/kevinrr888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kevinrr888/subscriptions","organizations_url":"https://api.github.com/users/kevinrr888/orgs","repos_url":"https://api.github.com/users/kevinrr888/repos","events_url":"https://api.github.com/users/kevinrr888/events{/privacy}","received_events_url":"https://api.github.com/users/kevinrr888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-04T13:36:49Z","updated_at":"2024-03-04T13:36:49Z","author_association":"MEMBER","body":"I originally thought this issue would be different than [issue#4168](https://github.com/apache/accumulo/issues/4168), but this is redundant. Closing.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1976599098/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1976846329","html_url":"https://github.com/apache/accumulo/pull/4334#issuecomment-1976846329","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4334","id":1976846329,"node_id":"IC_kwDOACaFSM511Ef5","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-04T15:29:19Z","updated_at":"2024-03-04T15:29:47Z","author_association":"CONTRIBUTOR","body":"> The TabletGroupWatcher will host tablets for a table if it's has walogs (not sure if this will happen for an offline table or not)\r\n\r\nI think it will recover even if offline, but not sure. We should probably have a test for that behavior to see if it works and prevent regressions.  We may have test for it, not sure.\r\n\r\n>  I'm just wondering if there is a case where a table is offline'd but due to the existence of walogs the tablets are recovered but not compacted.\r\n\r\nYeah that could happen.  IMO that is ok because even w/o log recovery there could be tablets that need compaction and will not be compacted in an offline table.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1976846329/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1976900977","html_url":"https://github.com/apache/accumulo/issues/4336#issuecomment-1976900977","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4336","id":1976900977,"node_id":"IC_kwDOACaFSM511R1x","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-04T15:53:42Z","updated_at":"2024-03-04T15:53:42Z","author_association":"CONTRIBUTOR","body":"> TabletGroupWatcher.manageTablets creates a new CompactionJobGenerator each time the method is called (each iteration of processing the metadata table tablets for user tables, for example)\r\n\r\nLooking at the caches, I think they are still useful in this situation.  Lots of tablets pass through the CompactionJobGenerator after its created and the caches help avoid redoing work for each tablet.  I am not sure what the implication of constantly recreating the caches are for the metrics code though.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1976900977/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1976915443","html_url":"https://github.com/apache/accumulo/issues/4336#issuecomment-1976915443","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4336","id":1976915443,"node_id":"IC_kwDOACaFSM511VXz","user":{"login":"EdColeman","id":7047700,"node_id":"MDQ6VXNlcjcwNDc3MDA=","avatar_url":"https://avatars.githubusercontent.com/u/7047700?v=4","gravatar_id":"","url":"https://api.github.com/users/EdColeman","html_url":"https://github.com/EdColeman","followers_url":"https://api.github.com/users/EdColeman/followers","following_url":"https://api.github.com/users/EdColeman/following{/other_user}","gists_url":"https://api.github.com/users/EdColeman/gists{/gist_id}","starred_url":"https://api.github.com/users/EdColeman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/EdColeman/subscriptions","organizations_url":"https://api.github.com/users/EdColeman/orgs","repos_url":"https://api.github.com/users/EdColeman/repos","events_url":"https://api.github.com/users/EdColeman/events{/privacy}","received_events_url":"https://api.github.com/users/EdColeman/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-04T16:00:16Z","updated_at":"2024-03-04T16:00:16Z","author_association":"CONTRIBUTOR","body":"From the description it does not seem that cache metrics for this function would provide much information to the end users - would they even have way to adjust it?  Possibly higher level, tracking jobs would provide better insight?","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1976915443/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1976928850","html_url":"https://github.com/apache/accumulo/issues/4316#issuecomment-1976928850","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4316","id":1976928850,"node_id":"IC_kwDOACaFSM511YpS","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-04T16:06:34Z","updated_at":"2024-03-04T16:06:34Z","author_association":"CONTRIBUTOR","body":"> Sorry, I wasn't clear. I was suggesting that if we are going to cache Ids, that we may want to have them expire from the cache after some period of time. \r\n\r\nThe reason behind the caching is that it is expected that some ids are low cardinality and used very frequently.  With this in mind, wondering if we should have size limited and time limited caches.  The point of the caches is that we expect it to be small, size limiting it would guard against exceptions to that expectation.  Time limiting clears out junk that is not being used any more (like a table id for a table that was deleted).","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1976928850/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1978737678","html_url":"https://github.com/apache/accumulo/issues/4312#issuecomment-1978737678","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4312","id":1978737678,"node_id":"IC_kwDOACaFSM518SQO","user":{"login":"dlmarion","id":567911,"node_id":"MDQ6VXNlcjU2NzkxMQ==","avatar_url":"https://avatars.githubusercontent.com/u/567911?v=4","gravatar_id":"","url":"https://api.github.com/users/dlmarion","html_url":"https://github.com/dlmarion","followers_url":"https://api.github.com/users/dlmarion/followers","following_url":"https://api.github.com/users/dlmarion/following{/other_user}","gists_url":"https://api.github.com/users/dlmarion/gists{/gist_id}","starred_url":"https://api.github.com/users/dlmarion/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dlmarion/subscriptions","organizations_url":"https://api.github.com/users/dlmarion/orgs","repos_url":"https://api.github.com/users/dlmarion/repos","events_url":"https://api.github.com/users/dlmarion/events{/privacy}","received_events_url":"https://api.github.com/users/dlmarion/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-05T13:05:50Z","updated_at":"2024-03-05T13:05:50Z","author_association":"CONTRIBUTOR","body":"Closed by #4329 ","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1978737678/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1979317298","html_url":"https://github.com/apache/accumulo/pull/4338#issuecomment-1979317298","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4338","id":1979317298,"node_id":"IC_kwDOACaFSM51-fwy","user":{"login":"dlmarion","id":567911,"node_id":"MDQ6VXNlcjU2NzkxMQ==","avatar_url":"https://avatars.githubusercontent.com/u/567911?v=4","gravatar_id":"","url":"https://api.github.com/users/dlmarion","html_url":"https://github.com/dlmarion","followers_url":"https://api.github.com/users/dlmarion/followers","following_url":"https://api.github.com/users/dlmarion/following{/other_user}","gists_url":"https://api.github.com/users/dlmarion/gists{/gist_id}","starred_url":"https://api.github.com/users/dlmarion/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dlmarion/subscriptions","organizations_url":"https://api.github.com/users/dlmarion/orgs","repos_url":"https://api.github.com/users/dlmarion/repos","events_url":"https://api.github.com/users/dlmarion/events{/privacy}","received_events_url":"https://api.github.com/users/dlmarion/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-05T17:49:11Z","updated_at":"2024-03-05T17:49:11Z","author_association":"CONTRIBUTOR","body":"I figured I would put up a straw-man implementation for the comment I made in #4315. The idea here is to provide some configuration validation mechanism for classes that use custom properties. This should also likely be done at startup and not just upgrade as configurations will change over time.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1979317298/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1979351709","html_url":"https://github.com/apache/accumulo/pull/4338#issuecomment-1979351709","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4338","id":1979351709,"node_id":"IC_kwDOACaFSM51-oKd","user":{"login":"dlmarion","id":567911,"node_id":"MDQ6VXNlcjU2NzkxMQ==","avatar_url":"https://avatars.githubusercontent.com/u/567911?v=4","gravatar_id":"","url":"https://api.github.com/users/dlmarion","html_url":"https://github.com/dlmarion","followers_url":"https://api.github.com/users/dlmarion/followers","following_url":"https://api.github.com/users/dlmarion/following{/other_user}","gists_url":"https://api.github.com/users/dlmarion/gists{/gist_id}","starred_url":"https://api.github.com/users/dlmarion/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dlmarion/subscriptions","organizations_url":"https://api.github.com/users/dlmarion/orgs","repos_url":"https://api.github.com/users/dlmarion/repos","events_url":"https://api.github.com/users/dlmarion/events{/privacy}","received_events_url":"https://api.github.com/users/dlmarion/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-05T18:09:38Z","updated_at":"2024-03-05T18:09:38Z","author_association":"CONTRIBUTOR","body":"@EdColeman - I assume that your approval means that you think this approach is good to move forward? Obviously this PR is incomplete, I think many more SPI classes need to be modified.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1979351709/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1979371394","html_url":"https://github.com/apache/accumulo/pull/4338#issuecomment-1979371394","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4338","id":1979371394,"node_id":"IC_kwDOACaFSM51-s-C","user":{"login":"EdColeman","id":7047700,"node_id":"MDQ6VXNlcjcwNDc3MDA=","avatar_url":"https://avatars.githubusercontent.com/u/7047700?v=4","gravatar_id":"","url":"https://api.github.com/users/EdColeman","html_url":"https://github.com/EdColeman","followers_url":"https://api.github.com/users/EdColeman/followers","following_url":"https://api.github.com/users/EdColeman/following{/other_user}","gists_url":"https://api.github.com/users/EdColeman/gists{/gist_id}","starred_url":"https://api.github.com/users/EdColeman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/EdColeman/subscriptions","organizations_url":"https://api.github.com/users/EdColeman/orgs","repos_url":"https://api.github.com/users/EdColeman/repos","events_url":"https://api.github.com/users/EdColeman/events{/privacy}","received_events_url":"https://api.github.com/users/EdColeman/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-05T18:17:47Z","updated_at":"2024-03-05T18:17:47Z","author_association":"CONTRIBUTOR","body":"Yes - these changes seem reason and worthwhile to proceed forward.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1979371394/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1979471454","html_url":"https://github.com/apache/accumulo/pull/4338#issuecomment-1979471454","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4338","id":1979471454,"node_id":"IC_kwDOACaFSM51_FZe","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-05T19:17:58Z","updated_at":"2024-03-05T19:21:00Z","author_association":"CONTRIBUTOR","body":"I like this concept.  I was wondering if we could add default methods to existing interfaces for this new validation that calls init() for some plugins.   Experimented with doing that in [this commit](https://github.com/keith-turner/accumulo/commit/649fd0ed3487e9eb2ab53183facb5eec1a91fca0) on [this branch](https://github.com/keith-turner/accumulo/tree/4315-spi-configuration-validation).   From this I learned that some plugins are per table, so we may want to facilitate validating them.  Also learned that some plugins may want to know the property that contained the class name.  Tried to deal with these issues.\r\n\r\nFor the per table config, thinking we could iterate over all tables validating any plugins configured for the table.  Not sure where this should actually run?  Maybe only the manager should do this validation? ","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1979471454/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1979478769","html_url":"https://github.com/apache/accumulo/pull/4338#issuecomment-1979478769","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4338","id":1979478769,"node_id":"IC_kwDOACaFSM51_HLx","user":{"login":"dlmarion","id":567911,"node_id":"MDQ6VXNlcjU2NzkxMQ==","avatar_url":"https://avatars.githubusercontent.com/u/567911?v=4","gravatar_id":"","url":"https://api.github.com/users/dlmarion","html_url":"https://github.com/dlmarion","followers_url":"https://api.github.com/users/dlmarion/followers","following_url":"https://api.github.com/users/dlmarion/following{/other_user}","gists_url":"https://api.github.com/users/dlmarion/gists{/gist_id}","starred_url":"https://api.github.com/users/dlmarion/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dlmarion/subscriptions","organizations_url":"https://api.github.com/users/dlmarion/orgs","repos_url":"https://api.github.com/users/dlmarion/repos","events_url":"https://api.github.com/users/dlmarion/events{/privacy}","received_events_url":"https://api.github.com/users/dlmarion/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-05T19:23:01Z","updated_at":"2024-03-05T19:26:14Z","author_association":"CONTRIBUTOR","body":"> I like this concept. I was wondering if we could add default methods to existing interfaces for this new validation that calls init() for some plugins. \r\n\r\nI'm not a huge fan of default methods in general, because if you forget to override them then it may be incorrect.\r\n\r\n> \r\n> For the per table config, thinking we could iterate over all tables validating any plugins configured for the table. Not sure where this should actually run? Maybe only the manager should do this validation?\r\n\r\nI have some local changes that I have not pushed yet - but could if you want to see them. Locally I moved the validation to ServerContext so that the validation is performed on server start.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1979478769/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1979487914","html_url":"https://github.com/apache/accumulo/pull/4338#issuecomment-1979487914","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4338","id":1979487914,"node_id":"IC_kwDOACaFSM51_Jaq","user":{"login":"ddanielr","id":12480877,"node_id":"MDQ6VXNlcjEyNDgwODc3","avatar_url":"https://avatars.githubusercontent.com/u/12480877?v=4","gravatar_id":"","url":"https://api.github.com/users/ddanielr","html_url":"https://github.com/ddanielr","followers_url":"https://api.github.com/users/ddanielr/followers","following_url":"https://api.github.com/users/ddanielr/following{/other_user}","gists_url":"https://api.github.com/users/ddanielr/gists{/gist_id}","starred_url":"https://api.github.com/users/ddanielr/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ddanielr/subscriptions","organizations_url":"https://api.github.com/users/ddanielr/orgs","repos_url":"https://api.github.com/users/ddanielr/repos","events_url":"https://api.github.com/users/ddanielr/events{/privacy}","received_events_url":"https://api.github.com/users/ddanielr/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-05T19:29:11Z","updated_at":"2024-03-05T19:29:29Z","author_association":"CONTRIBUTOR","body":"> I like this concept. I was wondering if we could add default methods to existing interfaces for this new validation that calls init() for some plugins. Experimented with doing that in [this commit](https://github.com/keith-turner/accumulo/commit/649fd0ed3487e9eb2ab53183facb5eec1a91fca0) on [this branch](https://github.com/keith-turner/accumulo/tree/4315-spi-configuration-validation). From this I learned that some plugins are per table, so we may want to facilitate validating them. Also learned that some plugins may want to know the property that contained the class name. Tried to deal with these issues.\r\n> \r\n> For the per table config, thinking we could iterate over all tables validating any plugins configured for the table. Not sure where this should actually run? Maybe only the manager should do this validation?\r\n\r\nI removed this code with my changes in #4273 since the config is no longer across multiple properties. But would it make sense to add some sort of on-demand SPI validation utility? https://github.com/apache/accumulo/blob/2.1/server/base/src/main/java/org/apache/accumulo/server/conf/CheckCompactionConfig.java","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1979487914/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1979492961","html_url":"https://github.com/apache/accumulo/pull/4338#issuecomment-1979492961","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4338","id":1979492961,"node_id":"IC_kwDOACaFSM51_Kph","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-05T19:32:40Z","updated_at":"2024-03-05T19:32:40Z","author_association":"CONTRIBUTOR","body":"> I have some local changes that I have not pushed yet - but could if you want to see them. Locally I moved the validation to ServerContext so that the validation is performed on server start.\r\n\r\nI think it makes sense to have every server validate the system properties.  However uncertain about this for the per table properties, seems like having every server validate those could place a surge of load on ZK.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1979492961/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1979493928","html_url":"https://github.com/apache/accumulo/pull/4338#issuecomment-1979493928","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4338","id":1979493928,"node_id":"IC_kwDOACaFSM51_K4o","user":{"login":"dlmarion","id":567911,"node_id":"MDQ6VXNlcjU2NzkxMQ==","avatar_url":"https://avatars.githubusercontent.com/u/567911?v=4","gravatar_id":"","url":"https://api.github.com/users/dlmarion","html_url":"https://github.com/dlmarion","followers_url":"https://api.github.com/users/dlmarion/followers","following_url":"https://api.github.com/users/dlmarion/following{/other_user}","gists_url":"https://api.github.com/users/dlmarion/gists{/gist_id}","starred_url":"https://api.github.com/users/dlmarion/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dlmarion/subscriptions","organizations_url":"https://api.github.com/users/dlmarion/orgs","repos_url":"https://api.github.com/users/dlmarion/repos","events_url":"https://api.github.com/users/dlmarion/events{/privacy}","received_events_url":"https://api.github.com/users/dlmarion/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-05T19:33:18Z","updated_at":"2024-03-05T19:33:18Z","author_association":"CONTRIBUTOR","body":"> I removed this code with my changes in #4273 since the config is no longer across multiple properties. But would it make sense to add some sort of on-demand SPI validation utility? https://github.com/apache/accumulo/blob/2.1/server/base/src/main/java/org/apache/accumulo/server/conf/CheckCompactionConfig.java\r\n\r\nThe CompactionPlanner is an SPI, so DefaultCompactionPlanner could implement the validation interface and it would be validated on startup.\r\n","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1979493928/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1979496028","html_url":"https://github.com/apache/accumulo/pull/4338#issuecomment-1979496028","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4338","id":1979496028,"node_id":"IC_kwDOACaFSM51_LZc","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-05T19:34:37Z","updated_at":"2024-03-05T19:34:52Z","author_association":"CONTRIBUTOR","body":"> I'm not a huge fan of default methods in general, because if you forget to override them then it may be incorrect.\r\n\r\nI agree with that in general.  I think this case is a bit different through because its an optional interface that has to be extended/implemented. ","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1979496028/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1979501692","html_url":"https://github.com/apache/accumulo/pull/4338#issuecomment-1979501692","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4338","id":1979501692,"node_id":"IC_kwDOACaFSM51_Mx8","user":{"login":"dlmarion","id":567911,"node_id":"MDQ6VXNlcjU2NzkxMQ==","avatar_url":"https://avatars.githubusercontent.com/u/567911?v=4","gravatar_id":"","url":"https://api.github.com/users/dlmarion","html_url":"https://github.com/dlmarion","followers_url":"https://api.github.com/users/dlmarion/followers","following_url":"https://api.github.com/users/dlmarion/following{/other_user}","gists_url":"https://api.github.com/users/dlmarion/gists{/gist_id}","starred_url":"https://api.github.com/users/dlmarion/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dlmarion/subscriptions","organizations_url":"https://api.github.com/users/dlmarion/orgs","repos_url":"https://api.github.com/users/dlmarion/repos","events_url":"https://api.github.com/users/dlmarion/events{/privacy}","received_events_url":"https://api.github.com/users/dlmarion/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-05T19:38:32Z","updated_at":"2024-03-05T19:38:32Z","author_association":"CONTRIBUTOR","body":"> I think it makes sense to have every server validate the system properties. However uncertain about this for the per table properties, seems like having every server validate those could place a surge of load on ZK.\r\n\r\nSince it's part of ServerContext (changed in ab116dc), we could add options to the ServerContext constructor to enable/disable certain validation. Then we can enable some only in the Manager to address your concern about ZK load.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1979501692/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1979504778","html_url":"https://github.com/apache/accumulo/pull/4338#issuecomment-1979504778","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4338","id":1979504778,"node_id":"IC_kwDOACaFSM51_NiK","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-05T19:40:43Z","updated_at":"2024-03-05T19:43:08Z","author_association":"CONTRIBUTOR","body":"> I'm not a huge fan of default methods in general, because if you forget to override them then it may be incorrect.\r\n\r\nInstead of adding the default method to interfaces we could instead make all of accumulo own plugin impls in 2.1 implement the interface.  In 3.1 we could make all SPI interfaces extend the validation interface w/o providing a default impl, this would be a breaking change in 3.1 that would make the method mandatory for all plugins.  So in 2.1 implementing the interface would be optional and in 3.1 it would be required.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1979504778/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1979508578","html_url":"https://github.com/apache/accumulo/pull/4338#issuecomment-1979508578","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4338","id":1979508578,"node_id":"IC_kwDOACaFSM51_Odi","user":{"login":"dlmarion","id":567911,"node_id":"MDQ6VXNlcjU2NzkxMQ==","avatar_url":"https://avatars.githubusercontent.com/u/567911?v=4","gravatar_id":"","url":"https://api.github.com/users/dlmarion","html_url":"https://github.com/dlmarion","followers_url":"https://api.github.com/users/dlmarion/followers","following_url":"https://api.github.com/users/dlmarion/following{/other_user}","gists_url":"https://api.github.com/users/dlmarion/gists{/gist_id}","starred_url":"https://api.github.com/users/dlmarion/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dlmarion/subscriptions","organizations_url":"https://api.github.com/users/dlmarion/orgs","repos_url":"https://api.github.com/users/dlmarion/repos","events_url":"https://api.github.com/users/dlmarion/events{/privacy}","received_events_url":"https://api.github.com/users/dlmarion/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-05T19:43:23Z","updated_at":"2024-03-05T19:43:23Z","author_association":"CONTRIBUTOR","body":"One thing to note is that this currently doesn't validate SPI configuration when the configuration changes at runtime. I think there is code that handles this for non-SPI classes, but not sure where this is. @EdColeman might know.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1979508578/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1979542399","html_url":"https://github.com/apache/accumulo/pull/4338#issuecomment-1979542399","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4338","id":1979542399,"node_id":"IC_kwDOACaFSM51_Wt_","user":{"login":"ddanielr","id":12480877,"node_id":"MDQ6VXNlcjEyNDgwODc3","avatar_url":"https://avatars.githubusercontent.com/u/12480877?v=4","gravatar_id":"","url":"https://api.github.com/users/ddanielr","html_url":"https://github.com/ddanielr","followers_url":"https://api.github.com/users/ddanielr/followers","following_url":"https://api.github.com/users/ddanielr/following{/other_user}","gists_url":"https://api.github.com/users/ddanielr/gists{/gist_id}","starred_url":"https://api.github.com/users/ddanielr/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ddanielr/subscriptions","organizations_url":"https://api.github.com/users/ddanielr/orgs","repos_url":"https://api.github.com/users/ddanielr/repos","events_url":"https://api.github.com/users/ddanielr/events{/privacy}","received_events_url":"https://api.github.com/users/ddanielr/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-05T20:06:59Z","updated_at":"2024-03-05T20:06:59Z","author_association":"CONTRIBUTOR","body":"> > I removed this code with my changes in #4273 since the config is no longer across multiple properties. But would it make sense to add some sort of on-demand SPI validation utility? https://github.com/apache/accumulo/blob/2.1/server/base/src/main/java/org/apache/accumulo/server/conf/CheckCompactionConfig.java\r\n> \r\n> The CompactionPlanner is an SPI, so DefaultCompactionPlanner could implement the validation interface and it would be validated on startup.\r\n\r\nRight, I understand that from these changes. I think that's a great benefit. I was trying to point out that the current compaction SPI validation utility uses a specific file path which allows for validation of proposed property changes without modifying ZK state. \r\n \r\nhttps://github.com/apache/accumulo/blob/d91d0162115ae66112a104278bcd14e8085936d3/server/base/src/main/java/org/apache/accumulo/server/conf/CheckCompactionConfig.java#L96\r\n\r\nSo instead dealing with multiple failed startups, a user could have faster feedback by populating a config file with the proposed property set and then running `./accumulo spi-validate <path to prop file>`. \r\n\r\nThis allows the user to test a SPI related change without impacting the system.\r\n\r\nWith the current changes in #4338 , `CheckCompactionConfig` could be removed in 2.1 in favor of a generic `prop validation` or `spi-validation` command which just runs the same validation code as ServerContext.\r\n\r\nI also looked at `CheckServerConfig` but that doesn't take in a filepath as an option.\r\nhttps://github.com/apache/accumulo/blob/d91d0162115ae66112a104278bcd14e8085936d3/server/base/src/main/java/org/apache/accumulo/server/conf/CheckServerConfig.java#L30-L34","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1979542399/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1979579216","html_url":"https://github.com/apache/accumulo/pull/4337#issuecomment-1979579216","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4337","id":1979579216,"node_id":"IC_kwDOACaFSM51_ftQ","user":{"login":"DomGarguilo","id":47725857,"node_id":"MDQ6VXNlcjQ3NzI1ODU3","avatar_url":"https://avatars.githubusercontent.com/u/47725857?v=4","gravatar_id":"","url":"https://api.github.com/users/DomGarguilo","html_url":"https://github.com/DomGarguilo","followers_url":"https://api.github.com/users/DomGarguilo/followers","following_url":"https://api.github.com/users/DomGarguilo/following{/other_user}","gists_url":"https://api.github.com/users/DomGarguilo/gists{/gist_id}","starred_url":"https://api.github.com/users/DomGarguilo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DomGarguilo/subscriptions","organizations_url":"https://api.github.com/users/DomGarguilo/orgs","repos_url":"https://api.github.com/users/DomGarguilo/repos","events_url":"https://api.github.com/users/DomGarguilo/events{/privacy}","received_events_url":"https://api.github.com/users/DomGarguilo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-05T20:25:20Z","updated_at":"2024-03-06T15:12:09Z","author_association":"MEMBER","body":"One question I have run into while trying to add more tests is how do we handle when the `incrementBy` value is 0. We can't really calculate the total number of retries that can happen within a duration when that is the case.\r\n\r\nEDIT:\r\nI think I was misunderstanding how things work here. Making some changes.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1979579216/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1979608701","html_url":"https://github.com/apache/accumulo/pull/4338#issuecomment-1979608701","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4338","id":1979608701,"node_id":"IC_kwDOACaFSM51_m59","user":{"login":"dlmarion","id":567911,"node_id":"MDQ6VXNlcjU2NzkxMQ==","avatar_url":"https://avatars.githubusercontent.com/u/567911?v=4","gravatar_id":"","url":"https://api.github.com/users/dlmarion","html_url":"https://github.com/dlmarion","followers_url":"https://api.github.com/users/dlmarion/followers","following_url":"https://api.github.com/users/dlmarion/following{/other_user}","gists_url":"https://api.github.com/users/dlmarion/gists{/gist_id}","starred_url":"https://api.github.com/users/dlmarion/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dlmarion/subscriptions","organizations_url":"https://api.github.com/users/dlmarion/orgs","repos_url":"https://api.github.com/users/dlmarion/repos","events_url":"https://api.github.com/users/dlmarion/events{/privacy}","received_events_url":"https://api.github.com/users/dlmarion/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-05T20:46:36Z","updated_at":"2024-03-05T21:16:47Z","author_association":"CONTRIBUTOR","body":"If CheckServerConfig to a file that it applied last, as a set property overrides, then I don't think you would need CheckCompactionConfig. It would be a generic check configuration utility.\r\n\r\nUpdate: Actually, [SiteConfiguration](https://github.com/apache/accumulo/blob/2.1/core/src/main/java/org/apache/accumulo/core/conf/SiteConfiguration.java#L52) uses the system property `accumulo.properties` to load a custom configuration file. If it's not specified, then the file `accumulo.properties` is found on the classpath. So, someone could copy the existing `accumulo.properties` to a new location, edit it, then set the system property and run CheckServerConfig.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1979608701/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1979857505","html_url":"https://github.com/apache/accumulo/issues/4340#issuecomment-1979857505","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4340","id":1979857505,"node_id":"IC_kwDOACaFSM52Ajph","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-06T00:22:09Z","updated_at":"2024-03-06T00:22:09Z","author_association":"CONTRIBUTOR","body":"Noticed this while working on #4339.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1979857505/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1981441097","html_url":"https://github.com/apache/accumulo/issues/4324#issuecomment-1981441097","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4324","id":1981441097,"node_id":"IC_kwDOACaFSM52GmRJ","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-06T17:39:44Z","updated_at":"2024-03-06T17:39:44Z","author_association":"CONTRIBUTOR","body":"@ctubbsii suggested expanding the compaction range to match table split points to avoid having to do the periodic cleanup of compaction tablet metadata mentioned in this issue.  I think this will work and will be much simpler.  I think all that needs to be done is [at this point in the code](https://github.com/apache/accumulo/blob/1688cecd5a8889bcb41cec2bdb45d2f063d1d9a9/server/manager/src/main/java/org/apache/accumulo/manager/tableOps/compact/CompactRange.java#L86) do the following.\r\n\r\n * if startRow is not null then find the tablet containing startRow and pass its prev row to the ComactionDriver constructor\r\n * if endRow is not null then find the tablet containing endRow and pass its end row to the CompactionDriver constructor.\r\n\r\nGoing to look at the bulk import code next.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1981441097/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1981500464","html_url":"https://github.com/apache/accumulo/issues/4324#issuecomment-1981500464","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4324","id":1981500464,"node_id":"IC_kwDOACaFSM52G0ww","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-06T18:09:05Z","updated_at":"2024-03-06T18:09:05Z","author_association":"CONTRIBUTOR","body":"I looked at the bulk import code and it is already using table split points for it cleanup of its temporary tablet metadata, so it should not need any additional cleanup.  Closing this issue in favor of #4341","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1981500464/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1981530289","html_url":"https://github.com/apache/accumulo/issues/4341#issuecomment-1981530289","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4341","id":1981530289,"node_id":"IC_kwDOACaFSM52G8Cx","user":{"login":"ArbaazKhan1","id":29344877,"node_id":"MDQ6VXNlcjI5MzQ0ODc3","avatar_url":"https://avatars.githubusercontent.com/u/29344877?v=4","gravatar_id":"","url":"https://api.github.com/users/ArbaazKhan1","html_url":"https://github.com/ArbaazKhan1","followers_url":"https://api.github.com/users/ArbaazKhan1/followers","following_url":"https://api.github.com/users/ArbaazKhan1/following{/other_user}","gists_url":"https://api.github.com/users/ArbaazKhan1/gists{/gist_id}","starred_url":"https://api.github.com/users/ArbaazKhan1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ArbaazKhan1/subscriptions","organizations_url":"https://api.github.com/users/ArbaazKhan1/orgs","repos_url":"https://api.github.com/users/ArbaazKhan1/repos","events_url":"https://api.github.com/users/ArbaazKhan1/events{/privacy}","received_events_url":"https://api.github.com/users/ArbaazKhan1/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-06T18:28:23Z","updated_at":"2024-03-06T18:28:23Z","author_association":"CONTRIBUTOR","body":"I can take a look at this\r\n","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1981530289/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1981584438","html_url":"https://github.com/apache/accumulo/pull/4342#issuecomment-1981584438","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4342","id":1981584438,"node_id":"IC_kwDOACaFSM52HJQ2","user":{"login":"ctubbsii","id":1280725,"node_id":"MDQ6VXNlcjEyODA3MjU=","avatar_url":"https://avatars.githubusercontent.com/u/1280725?v=4","gravatar_id":"","url":"https://api.github.com/users/ctubbsii","html_url":"https://github.com/ctubbsii","followers_url":"https://api.github.com/users/ctubbsii/followers","following_url":"https://api.github.com/users/ctubbsii/following{/other_user}","gists_url":"https://api.github.com/users/ctubbsii/gists{/gist_id}","starred_url":"https://api.github.com/users/ctubbsii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ctubbsii/subscriptions","organizations_url":"https://api.github.com/users/ctubbsii/orgs","repos_url":"https://api.github.com/users/ctubbsii/repos","events_url":"https://api.github.com/users/ctubbsii/events{/privacy}","received_events_url":"https://api.github.com/users/ctubbsii/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-06T19:03:20Z","updated_at":"2024-03-06T19:03:20Z","author_association":"MEMBER","body":"One thing I'm not 100% certain about is whether there's any risk of starting these thread pools late, after the service starts up on its port. Is there any risk of these missing important work that came in after the service started, but before these thread pools started? I'm not sure.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1981584438/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1981780214","html_url":"https://github.com/apache/accumulo/pull/4317#issuecomment-1981780214","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4317","id":1981780214,"node_id":"IC_kwDOACaFSM52H5D2","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-06T21:02:02Z","updated_at":"2024-03-06T21:02:02Z","author_association":"CONTRIBUTOR","body":">  I was wondering if maybe we should add a getter that can compute the size and cache it (we could use Suppliers.memoize()) and then if any calling code needs to get the size of the files it could just call something like tabletMetadata.getFileSize(). The supplier could default to just returning 0 if files are not loaded.\r\n\r\nThat sounds nice, could  throw an exception instead of return zero if files were not fetched.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1981780214/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1981797807","html_url":"https://github.com/apache/accumulo/pull/4317#issuecomment-1981797807","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4317","id":1981797807,"node_id":"IC_kwDOACaFSM52H9Wv","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-06T21:14:50Z","updated_at":"2024-03-06T21:14:50Z","author_association":"CONTRIBUTOR","body":"> One thing to mention is now that FindSplits fate repo has to recheck if a split is needed to clear the marker, it requires having the same logic for checking the threshold in multiple spots so I am wondering if we should consolidate that. For example, now [SplitUtils](https://github.com/apache/accumulo/blob/cb0f9959de1d223d6d76fbb13ffed7cc5e144867/server/manager/src/main/java/org/apache/accumulo/manager/split/SplitUtils.java#L215), [FindSplits](https://github.com/apache/accumulo/blob/cb0f9959de1d223d6d76fbb13ffed7cc5e144867/server/manager/src/main/java/org/apache/accumulo/manager/tableOps/split/FindSplits.java#L153), and [TabletManagementIterator](https://github.com/apache/accumulo/blob/cb0f9959de1d223d6d76fbb13ffed7cc5e144867/server/base/src/main/java/org/apache/accumulo/server/manager/state/TabletManagementIterator.java#L95) all do checks on the split threshold and it seems error prone if we change the logic in the future and one spot is updated and not the others.\r\n\r\nConsolidating that decision logic to a single class would be really nice and less error prone.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1981797807/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1984166699","html_url":"https://github.com/apache/accumulo/pull/4346#issuecomment-1984166699","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4346","id":1984166699,"node_id":"IC_kwDOACaFSM52Q_sr","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-07T18:22:39Z","updated_at":"2024-03-07T18:22:39Z","author_association":"CONTRIBUTOR","body":"Realized that something I thought was  a bug was actually not a bug. Reverted the change in e4de44d and added comments.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1984166699/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1985583548","html_url":"https://github.com/apache/accumulo/pull/4317#issuecomment-1985583548","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4317","id":1985583548,"node_id":"IC_kwDOACaFSM52WZm8","user":{"login":"cshannon","id":123009,"node_id":"MDQ6VXNlcjEyMzAwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/123009?v=4","gravatar_id":"","url":"https://api.github.com/users/cshannon","html_url":"https://github.com/cshannon","followers_url":"https://api.github.com/users/cshannon/followers","following_url":"https://api.github.com/users/cshannon/following{/other_user}","gists_url":"https://api.github.com/users/cshannon/gists{/gist_id}","starred_url":"https://api.github.com/users/cshannon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cshannon/subscriptions","organizations_url":"https://api.github.com/users/cshannon/orgs","repos_url":"https://api.github.com/users/cshannon/repos","events_url":"https://api.github.com/users/cshannon/events{/privacy}","received_events_url":"https://api.github.com/users/cshannon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-08T12:09:06Z","updated_at":"2024-03-08T12:09:06Z","author_association":"CONTRIBUTOR","body":"@keith-turner - looks like your new test in #4323 caused this PR to break...which is good news as that was the intent. I will update this PR to add the column to the test\r\n\r\n```\r\n[INFO] Results:\r\n[INFO] \r\n[ERROR] Failures: \r\n[ERROR]   UpdateTabletsTest.checkColumns:100 The split code does not know how to handle UNSPLITTABLE ==> expected: <true> but was: <false>\r\n[ERROR]   UpdateTabletsTest.testManyColumns:363 \r\n  Unexpected method call TabletMetadata.getUnSplittable():\r\n[INFO] \r\n[ERROR] Tests run: 56, Failures: 2, Errors: 0, Skipped: 0\r\n```\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1985583548/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1986075875","html_url":"https://github.com/apache/accumulo/issues/4316#issuecomment-1986075875","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4316","id":1986075875,"node_id":"IC_kwDOACaFSM52YRzj","user":{"login":"ctubbsii","id":1280725,"node_id":"MDQ6VXNlcjEyODA3MjU=","avatar_url":"https://avatars.githubusercontent.com/u/1280725?v=4","gravatar_id":"","url":"https://api.github.com/users/ctubbsii","html_url":"https://github.com/ctubbsii","followers_url":"https://api.github.com/users/ctubbsii/followers","following_url":"https://api.github.com/users/ctubbsii/following{/other_user}","gists_url":"https://api.github.com/users/ctubbsii/gists{/gist_id}","starred_url":"https://api.github.com/users/ctubbsii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ctubbsii/subscriptions","organizations_url":"https://api.github.com/users/ctubbsii/orgs","repos_url":"https://api.github.com/users/ctubbsii/repos","events_url":"https://api.github.com/users/ctubbsii/events{/privacy}","received_events_url":"https://api.github.com/users/ctubbsii/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-08T17:04:30Z","updated_at":"2024-03-08T17:04:30Z","author_association":"MEMBER","body":"The purpose of the existing caches is de-duplication, not rapid on-demand access, like we think of most caches. When these IDs were just String types, we could use something similar to String.intern, but as a concrete type, we need the weak values cache to de-duplicate the wrapper object around the String canonical form. Expiring due to size or time would only cause duplicates to start appearing, which defeats the purpose of the cache. Sure, it would keep the cache smaller, but the objects already get removed from the cache when they are garbage collected, and removing the reference in the cache isn't going to remove the memory used by the object that's still in the JVM. I believe we already have unit tests to make sure the weak values caching mechanism is working correctly with garbage collection.\r\n\r\nSo, for the existing caches, I don't think any change needs to be made.\r\n\r\nThat said, this ticket is about caching more types, not necessarily changing the existing caching. In that context, it's important to note that the de-duplication caches really only benefit objects that are frequently duplicated (regardless of cardinality, though types with low-cardinality relative to the frequency of object creation will benefit the most from de-duplication). These typically come from instantiation of the wrapper concrete type when deserializing the canonical representation from user input, ZooKeeper, the metadata table, or similar. Things like TableId and NamespaceId clearly benefit from these. However, not all of these ID types are prone to duplication due to deserialization of their canonical forms. Each one would have to be evaluated to determine if they are subject to frequent duplication, and would benefit from a de-duplication cache, on a case-by-case basis.\r\n\r\nIt's also possible that some of these would benefit from a different kind of cache that might have something like time or size limits, but again, that would require each type to be evaluated on a case-by-case basis in the context of that cache's purpose.\r\n\r\nIf a cache is added, it should be done because it's clear that it would benefit from a the cache being added, whether it's a de-duplication cache to limit memory usage for frequently deserialized IDs with low cardinality, or if it's a cache for some other purpose.\r\n\r\nRight now, I'm not sure we have any reason to believe any of these other ID types would benefit from additional caching. So, we could probably just close this issue, or somebody could dive in and do some experimentation and analysis to see if the other types would benefit from a cache. I suspect that it's unlikely they will benefit, but have not done the analysis myself, so it's only a suspicion.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1986075875/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1986642937","html_url":"https://github.com/apache/accumulo/pull/4339#issuecomment-1986642937","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4339","id":1986642937,"node_id":"IC_kwDOACaFSM52acP5","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-09T00:52:16Z","updated_at":"2024-03-09T00:52:16Z","author_association":"CONTRIBUTOR","body":"@cshannon  wrote up the comments in ff1e051 after chatting about race conditions.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1986642937/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1986876239","html_url":"https://github.com/apache/accumulo/issues/4340#issuecomment-1986876239","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4340","id":1986876239,"node_id":"IC_kwDOACaFSM52bVNP","user":{"login":"cshannon","id":123009,"node_id":"MDQ6VXNlcjEyMzAwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/123009?v=4","gravatar_id":"","url":"https://api.github.com/users/cshannon","html_url":"https://github.com/cshannon","followers_url":"https://api.github.com/users/cshannon/followers","following_url":"https://api.github.com/users/cshannon/following{/other_user}","gists_url":"https://api.github.com/users/cshannon/gists{/gist_id}","starred_url":"https://api.github.com/users/cshannon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cshannon/subscriptions","organizations_url":"https://api.github.com/users/cshannon/orgs","repos_url":"https://api.github.com/users/cshannon/repos","events_url":"https://api.github.com/users/cshannon/events{/privacy}","received_events_url":"https://api.github.com/users/cshannon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-09T14:49:18Z","updated_at":"2024-03-09T14:49:18Z","author_association":"CONTRIBUTOR","body":"I will take a look at this","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1986876239/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1987311097","html_url":"https://github.com/apache/accumulo/pull/4354#issuecomment-1987311097","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4354","id":1987311097,"node_id":"IC_kwDOACaFSM52c_X5","user":{"login":"cshannon","id":123009,"node_id":"MDQ6VXNlcjEyMzAwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/123009?v=4","gravatar_id":"","url":"https://api.github.com/users/cshannon","html_url":"https://github.com/cshannon","followers_url":"https://api.github.com/users/cshannon/followers","following_url":"https://api.github.com/users/cshannon/following{/other_user}","gists_url":"https://api.github.com/users/cshannon/gists{/gist_id}","starred_url":"https://api.github.com/users/cshannon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cshannon/subscriptions","organizations_url":"https://api.github.com/users/cshannon/orgs","repos_url":"https://api.github.com/users/cshannon/repos","events_url":"https://api.github.com/users/cshannon/events{/privacy}","received_events_url":"https://api.github.com/users/cshannon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-10T17:59:23Z","updated_at":"2024-03-10T17:59:23Z","author_association":"CONTRIBUTOR","body":"@keith-turner - I pushed an update which groups the compactions by data level when processing with the mutator since as you pointed out, the conditional mutator does not support multiple data levels. I also refactored the tests and I added a new test that creates dead compactions for all 3 levels at the same time to verify it works. I verified the new test failed before my change and now works with the grouping.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1987311097/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1988331313","html_url":"https://github.com/apache/accumulo/pull/4354#issuecomment-1988331313","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4354","id":1988331313,"node_id":"IC_kwDOACaFSM52g4cx","user":{"login":"cshannon","id":123009,"node_id":"MDQ6VXNlcjEyMzAwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/123009?v=4","gravatar_id":"","url":"https://api.github.com/users/cshannon","html_url":"https://github.com/cshannon","followers_url":"https://api.github.com/users/cshannon/followers","following_url":"https://api.github.com/users/cshannon/following{/other_user}","gists_url":"https://api.github.com/users/cshannon/gists{/gist_id}","starred_url":"https://api.github.com/users/cshannon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cshannon/subscriptions","organizations_url":"https://api.github.com/users/cshannon/orgs","repos_url":"https://api.github.com/users/cshannon/repos","events_url":"https://api.github.com/users/cshannon/events{/privacy}","received_events_url":"https://api.github.com/users/cshannon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-11T12:29:56Z","updated_at":"2024-03-11T12:29:56Z","author_association":"CONTRIBUTOR","body":"I should also add that I chose to just partition the extents into buckets at the end when processing the remaining compactions that were considered as dead and passed to the mutator. It made things a lot simpler as the rest of the code didn't have to deal with 3 different buckets/groups and there should be minimal performance hit because my assumption is dead compactions should not be very common so there shouldn't be many items to have to process and partition.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1988331313/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1989294302","html_url":"https://github.com/apache/accumulo/issues/4336#issuecomment-1989294302","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4336","id":1989294302,"node_id":"IC_kwDOACaFSM52kjje","user":{"login":"dlmarion","id":567911,"node_id":"MDQ6VXNlcjU2NzkxMQ==","avatar_url":"https://avatars.githubusercontent.com/u/567911?v=4","gravatar_id":"","url":"https://api.github.com/users/dlmarion","html_url":"https://github.com/dlmarion","followers_url":"https://api.github.com/users/dlmarion/followers","following_url":"https://api.github.com/users/dlmarion/following{/other_user}","gists_url":"https://api.github.com/users/dlmarion/gists{/gist_id}","starred_url":"https://api.github.com/users/dlmarion/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dlmarion/subscriptions","organizations_url":"https://api.github.com/users/dlmarion/orgs","repos_url":"https://api.github.com/users/dlmarion/repos","events_url":"https://api.github.com/users/dlmarion/events{/privacy}","received_events_url":"https://api.github.com/users/dlmarion/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-11T19:42:18Z","updated_at":"2024-03-11T19:42:18Z","author_association":"CONTRIBUTOR","body":"> From the description it does not seem that cache metrics for this function would provide much information to the end users - would they even have way to adjust it? Possibly higher level, tracking jobs would provide better insight?\n\nIt looks like metrics is already disabled for these Caches.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1989294302/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1989329870","html_url":"https://github.com/apache/accumulo/issues/4336#issuecomment-1989329870","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4336","id":1989329870,"node_id":"IC_kwDOACaFSM52ksPO","user":{"login":"dlmarion","id":567911,"node_id":"MDQ6VXNlcjU2NzkxMQ==","avatar_url":"https://avatars.githubusercontent.com/u/567911?v=4","gravatar_id":"","url":"https://api.github.com/users/dlmarion","html_url":"https://github.com/dlmarion","followers_url":"https://api.github.com/users/dlmarion/followers","following_url":"https://api.github.com/users/dlmarion/following{/other_user}","gists_url":"https://api.github.com/users/dlmarion/gists{/gist_id}","starred_url":"https://api.github.com/users/dlmarion/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dlmarion/subscriptions","organizations_url":"https://api.github.com/users/dlmarion/orgs","repos_url":"https://api.github.com/users/dlmarion/repos","events_url":"https://api.github.com/users/dlmarion/events{/privacy}","received_events_url":"https://api.github.com/users/dlmarion/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-11T20:02:27Z","updated_at":"2024-03-11T20:02:27Z","author_association":"CONTRIBUTOR","body":"> Looking at the caches, I think they are still useful in this situation.\r\n\r\nClosing this based on this comment.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1989329870/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1989346735","html_url":"https://github.com/apache/accumulo/pull/4358#issuecomment-1989346735","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4358","id":1989346735,"node_id":"IC_kwDOACaFSM52kwWv","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-11T20:11:10Z","updated_at":"2024-03-11T20:15:12Z","author_association":"CONTRIBUTOR","body":"Using nanoTime is more correct than currentTimeMillis, but using nanoTime correctly is tricky.  Thinking we may benefit from having an internal  class that wraps nanoTime and limits what can be done with it to operations that are known to work well with nanoTime.  Maybe something like the following.\r\n\r\n\r\n```java\r\npackage org.apache.accumulo.core.util;\r\n\r\nimport java.time.Duration;\r\n\r\npublic class NanoInstant {\r\n    private final long nanoTime;\r\n    \r\n    private NanoInstant(long nanoTime) {\r\n        this.nanoTime = nanoTime;\r\n    }\r\n    \r\n    public NanoInstant add(Duration duration) {\r\n        return new NanoInstant(nanoTime+duration.toNanos());\r\n    }\r\n    \r\n    // elapsed is the terminology used in the nanoTime javadoc\r\n    public Duration elapsed(NanoInstant since) {\r\n        return Duration.ofNanos(nanoTime - since.nanoTime);\r\n    }\r\n    \r\n    public static NanoInstant now(){\r\n        return new NanoInstant(System.nanoTime());\r\n    }\r\n}\r\n```","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1989346735/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1991523073","html_url":"https://github.com/apache/accumulo/pull/4338#issuecomment-1991523073","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4338","id":1991523073,"node_id":"IC_kwDOACaFSM52tDsB","user":{"login":"dlmarion","id":567911,"node_id":"MDQ6VXNlcjU2NzkxMQ==","avatar_url":"https://avatars.githubusercontent.com/u/567911?v=4","gravatar_id":"","url":"https://api.github.com/users/dlmarion","html_url":"https://github.com/dlmarion","followers_url":"https://api.github.com/users/dlmarion/followers","following_url":"https://api.github.com/users/dlmarion/following{/other_user}","gists_url":"https://api.github.com/users/dlmarion/gists{/gist_id}","starred_url":"https://api.github.com/users/dlmarion/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dlmarion/subscriptions","organizations_url":"https://api.github.com/users/dlmarion/orgs","repos_url":"https://api.github.com/users/dlmarion/repos","events_url":"https://api.github.com/users/dlmarion/events{/privacy}","received_events_url":"https://api.github.com/users/dlmarion/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-12T12:19:09Z","updated_at":"2024-03-12T12:19:09Z","author_association":"CONTRIBUTOR","body":"Kicked off a full IT build","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1991523073/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1991663008","html_url":"https://github.com/apache/accumulo/issues/4360#issuecomment-1991663008","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4360","id":1991663008,"node_id":"IC_kwDOACaFSM52tl2g","user":{"login":"EdColeman","id":7047700,"node_id":"MDQ6VXNlcjcwNDc3MDA=","avatar_url":"https://avatars.githubusercontent.com/u/7047700?v=4","gravatar_id":"","url":"https://api.github.com/users/EdColeman","html_url":"https://github.com/EdColeman","followers_url":"https://api.github.com/users/EdColeman/followers","following_url":"https://api.github.com/users/EdColeman/following{/other_user}","gists_url":"https://api.github.com/users/EdColeman/gists{/gist_id}","starred_url":"https://api.github.com/users/EdColeman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/EdColeman/subscriptions","organizations_url":"https://api.github.com/users/EdColeman/orgs","repos_url":"https://api.github.com/users/EdColeman/repos","events_url":"https://api.github.com/users/EdColeman/events{/privacy}","received_events_url":"https://api.github.com/users/EdColeman/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-12T13:32:37Z","updated_at":"2024-03-12T13:32:37Z","author_association":"CONTRIBUTOR","body":"It may help if it can be explained how this is an improvement over using the standard Java Instant class before going down this route,","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1991663008/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1991670512","html_url":"https://github.com/apache/accumulo/issues/4360#issuecomment-1991670512","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4360","id":1991670512,"node_id":"IC_kwDOACaFSM52tnrw","user":{"login":"DomGarguilo","id":47725857,"node_id":"MDQ6VXNlcjQ3NzI1ODU3","avatar_url":"https://avatars.githubusercontent.com/u/47725857?v=4","gravatar_id":"","url":"https://api.github.com/users/DomGarguilo","html_url":"https://github.com/DomGarguilo","followers_url":"https://api.github.com/users/DomGarguilo/followers","following_url":"https://api.github.com/users/DomGarguilo/following{/other_user}","gists_url":"https://api.github.com/users/DomGarguilo/gists{/gist_id}","starred_url":"https://api.github.com/users/DomGarguilo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DomGarguilo/subscriptions","organizations_url":"https://api.github.com/users/DomGarguilo/orgs","repos_url":"https://api.github.com/users/DomGarguilo/repos","events_url":"https://api.github.com/users/DomGarguilo/events{/privacy}","received_events_url":"https://api.github.com/users/DomGarguilo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-12T13:36:07Z","updated_at":"2024-03-12T13:36:07Z","author_association":"MEMBER","body":"Additional context:\r\n\r\n> There is also a java.time.Instant class that seems like it could be useful in this situation as the value for the map. Having looked into it in the past, found Instant was also not good to use w/ System.nanoTime, but I can not remember the specifics.\r\n\r\n_Originally posted by @keith-turner in https://github.com/apache/accumulo/pull/4358#discussion_r1520026952_\r\n\r\nI can try looking into why Instant is not good to use with nanoTime.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1991670512/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1991750607","html_url":"https://github.com/apache/accumulo/issues/4361#issuecomment-1991750607","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4361","id":1991750607,"node_id":"IC_kwDOACaFSM52t7PP","user":{"login":"DomGarguilo","id":47725857,"node_id":"MDQ6VXNlcjQ3NzI1ODU3","avatar_url":"https://avatars.githubusercontent.com/u/47725857?v=4","gravatar_id":"","url":"https://api.github.com/users/DomGarguilo","html_url":"https://github.com/DomGarguilo","followers_url":"https://api.github.com/users/DomGarguilo/followers","following_url":"https://api.github.com/users/DomGarguilo/following{/other_user}","gists_url":"https://api.github.com/users/DomGarguilo/gists{/gist_id}","starred_url":"https://api.github.com/users/DomGarguilo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DomGarguilo/subscriptions","organizations_url":"https://api.github.com/users/DomGarguilo/orgs","repos_url":"https://api.github.com/users/DomGarguilo/repos","events_url":"https://api.github.com/users/DomGarguilo/events{/privacy}","received_events_url":"https://api.github.com/users/DomGarguilo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-12T14:13:51Z","updated_at":"2024-03-12T14:13:51Z","author_association":"MEMBER","body":"This ticket should probably wait until #4360 is either completed or closed.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1991750607/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1991933610","html_url":"https://github.com/apache/accumulo/issues/4361#issuecomment-1991933610","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4361","id":1991933610,"node_id":"IC_kwDOACaFSM52un6q","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-12T15:33:33Z","updated_at":"2024-03-12T15:33:33Z","author_association":"CONTRIBUTOR","body":"I don't think we should make this change to the public API methods if we would deprecated the existing methods because it would introduce work for those who have written code written against these APIs w/o offering them a strong benefit for that work.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1991933610/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1992070377","html_url":"https://github.com/apache/accumulo/issues/4256#issuecomment-1992070377","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4256","id":1992070377,"node_id":"IC_kwDOACaFSM52vJTp","user":{"login":"dlmarion","id":567911,"node_id":"MDQ6VXNlcjU2NzkxMQ==","avatar_url":"https://avatars.githubusercontent.com/u/567911?v=4","gravatar_id":"","url":"https://api.github.com/users/dlmarion","html_url":"https://github.com/dlmarion","followers_url":"https://api.github.com/users/dlmarion/followers","following_url":"https://api.github.com/users/dlmarion/following{/other_user}","gists_url":"https://api.github.com/users/dlmarion/gists{/gist_id}","starred_url":"https://api.github.com/users/dlmarion/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dlmarion/subscriptions","organizations_url":"https://api.github.com/users/dlmarion/orgs","repos_url":"https://api.github.com/users/dlmarion/repos","events_url":"https://api.github.com/users/dlmarion/events{/privacy}","received_events_url":"https://api.github.com/users/dlmarion/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-12T16:27:19Z","updated_at":"2024-03-12T16:27:19Z","author_association":"CONTRIBUTOR","body":"I removed the special logic in #4363 and kicked off a full IT build. I'm not sure that it's necessary any more. ","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1992070377/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1992134841","html_url":"https://github.com/apache/accumulo/issues/4360#issuecomment-1992134841","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4360","id":1992134841,"node_id":"IC_kwDOACaFSM52vZC5","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-12T16:59:23Z","updated_at":"2024-03-12T17:01:46Z","author_association":"CONTRIBUTOR","body":"Below are two reasons why using the Instant class is problematic if backed by nanoTime.\r\n\r\n * According to nanoTime java docs one should never compare two nanoTimes.  Instant extends `Comparable<Instant>`, so the interface supports an operation that should never be done w/ nanoTime.\r\n * According to nanoTime javadoc it does not represent wall time.  So even if converting the unit from nanos to millis, one should never compare currentTimeMillis() return to a nanoTime return.    The Instant class has a heavy feel of wall time w/ concepts like timezones in its API.  Comparing a wall time Instant and nanoTime derived Instant may compile but would be incorrect.\r\n\r\nFor the utiity name, `NanoInstant` is probably not good because its related to a java type that has much wider capabilities than System.nanoTime could ever support.  Should probably just call the type `NanoTime` to tightly couple it to the very unique and narrow behavior of System.nanoTme.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1992134841/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1992166471","html_url":"https://github.com/apache/accumulo/issues/4360#issuecomment-1992166471","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4360","id":1992166471,"node_id":"IC_kwDOACaFSM52vgxH","user":{"login":"EdColeman","id":7047700,"node_id":"MDQ6VXNlcjcwNDc3MDA=","avatar_url":"https://avatars.githubusercontent.com/u/7047700?v=4","gravatar_id":"","url":"https://api.github.com/users/EdColeman","html_url":"https://github.com/EdColeman","followers_url":"https://api.github.com/users/EdColeman/followers","following_url":"https://api.github.com/users/EdColeman/following{/other_user}","gists_url":"https://api.github.com/users/EdColeman/gists{/gist_id}","starred_url":"https://api.github.com/users/EdColeman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/EdColeman/subscriptions","organizations_url":"https://api.github.com/users/EdColeman/orgs","repos_url":"https://api.github.com/users/EdColeman/repos","events_url":"https://api.github.com/users/EdColeman/events{/privacy}","received_events_url":"https://api.github.com/users/EdColeman/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-12T17:16:10Z","updated_at":"2024-03-12T17:16:10Z","author_association":"CONTRIBUTOR","body":"If Instant was use consistently instead of trying to mix System.nanoTime and Instant would the issues go away?  Instead of `long now = System.nanoTime` and then needing to convert to a delta and the duration, if it was `Instant now = Instant.now()` and then comparing with another instant should not be a problem to use compare or any math operation available on instant (isBefore, isAfter...)\r\n\r\nInstant may be heavy-weight, but when compared to a custom class it may not be that much more,\r\n\r\nAlso, the TZ and wall-clock support could be handy if we wanted to log an instant. In cases where the Instant could be log lived (say something over 15 minutes) then logging a date-time stamp looking thing could help looking at logs.   Reporting an instant was created 900,000 millis ago is not as helpful as saying 15 minutes ago or maybe better created at 12:15:00.000 UTC. ","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1992166471/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1992181362","html_url":"https://github.com/apache/accumulo/issues/4360#issuecomment-1992181362","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4360","id":1992181362,"node_id":"IC_kwDOACaFSM52vkZy","user":{"login":"EdColeman","id":7047700,"node_id":"MDQ6VXNlcjcwNDc3MDA=","avatar_url":"https://avatars.githubusercontent.com/u/7047700?v=4","gravatar_id":"","url":"https://api.github.com/users/EdColeman","html_url":"https://github.com/EdColeman","followers_url":"https://api.github.com/users/EdColeman/followers","following_url":"https://api.github.com/users/EdColeman/following{/other_user}","gists_url":"https://api.github.com/users/EdColeman/gists{/gist_id}","starred_url":"https://api.github.com/users/EdColeman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/EdColeman/subscriptions","organizations_url":"https://api.github.com/users/EdColeman/orgs","repos_url":"https://api.github.com/users/EdColeman/repos","events_url":"https://api.github.com/users/EdColeman/events{/privacy}","received_events_url":"https://api.github.com/users/EdColeman/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-12T17:24:10Z","updated_at":"2024-03-12T17:24:35Z","author_association":"CONTRIBUTOR","body":"A light-weight approach may be to use static helper methods to do the conversions / comparisons and then keep the local variables as a long (nanoseconds).","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1992181362/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1992268791","html_url":"https://github.com/apache/accumulo/issues/4360#issuecomment-1992268791","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4360","id":1992268791,"node_id":"IC_kwDOACaFSM52v5v3","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-12T18:11:42Z","updated_at":"2024-03-12T18:11:42Z","author_association":"CONTRIBUTOR","body":"> Instant may be heavy-weight, but when compared to a custom class it may not be that much more,\r\n\r\nUsing Instant.now() would have the same problem as using System.currentTimeMillis for computing elapsed time.   System.nanoTime is the most robust way to compute elapsed time in java and that is why we use it.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1992268791/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1992310694","html_url":"https://github.com/apache/accumulo/issues/4361#issuecomment-1992310694","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4361","id":1992310694,"node_id":"IC_kwDOACaFSM52wD-m","user":{"login":"DomGarguilo","id":47725857,"node_id":"MDQ6VXNlcjQ3NzI1ODU3","avatar_url":"https://avatars.githubusercontent.com/u/47725857?v=4","gravatar_id":"","url":"https://api.github.com/users/DomGarguilo","html_url":"https://github.com/DomGarguilo","followers_url":"https://api.github.com/users/DomGarguilo/followers","following_url":"https://api.github.com/users/DomGarguilo/following{/other_user}","gists_url":"https://api.github.com/users/DomGarguilo/gists{/gist_id}","starred_url":"https://api.github.com/users/DomGarguilo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DomGarguilo/subscriptions","organizations_url":"https://api.github.com/users/DomGarguilo/orgs","repos_url":"https://api.github.com/users/DomGarguilo/repos","events_url":"https://api.github.com/users/DomGarguilo/events{/privacy}","received_events_url":"https://api.github.com/users/DomGarguilo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-12T18:37:32Z","updated_at":"2024-03-12T18:37:32Z","author_association":"MEMBER","body":"> I don't think we should make this change to the public API methods if we would deprecated the existing methods because it would introduce work for those who have written code written against these APIs w/o offering them a strong benefit for that work.\r\n\r\nGood point. I have edited the description to cross those out. There are just a few remaining now. I'll look around to see if there would be a good reason to not change these.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1992310694/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1992478761","html_url":"https://github.com/apache/accumulo/issues/4361#issuecomment-1992478761","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4361","id":1992478761,"node_id":"IC_kwDOACaFSM52wtAp","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-12T20:04:17Z","updated_at":"2024-03-12T20:04:17Z","author_association":"CONTRIBUTOR","body":"In #4364 I made some changes to Manager to use Duration and the new NanoTime type.  While working on that realized that AccumuloConfiguration.getTimeInMillis() could be a candidate for switching to Duration.  Or we could introduce a new AccumuloConfiguration.getDuration() method.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1992478761/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1992490478","html_url":"https://github.com/apache/accumulo/pull/4364#issuecomment-1992490478","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4364","id":1992490478,"node_id":"IC_kwDOACaFSM52wv3u","user":{"login":"EdColeman","id":7047700,"node_id":"MDQ6VXNlcjcwNDc3MDA=","avatar_url":"https://avatars.githubusercontent.com/u/7047700?v=4","gravatar_id":"","url":"https://api.github.com/users/EdColeman","html_url":"https://github.com/EdColeman","followers_url":"https://api.github.com/users/EdColeman/followers","following_url":"https://api.github.com/users/EdColeman/following{/other_user}","gists_url":"https://api.github.com/users/EdColeman/gists{/gist_id}","starred_url":"https://api.github.com/users/EdColeman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/EdColeman/subscriptions","organizations_url":"https://api.github.com/users/EdColeman/orgs","repos_url":"https://api.github.com/users/EdColeman/repos","events_url":"https://api.github.com/users/EdColeman/events{/privacy}","received_events_url":"https://api.github.com/users/EdColeman/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-12T20:07:57Z","updated_at":"2024-03-12T20:23:24Z","author_association":"CONTRIBUTOR","body":"Could consider implementing Comparable<NanoTime> - the method could just delegate to `Long.comparable`  and possibly eqauls, hashCode ?\r\n\r\nThinking about this delegating to Long.comparable may not work when the nanos are negative.  But maybe something based on this.nanoSinceAO - other,nanoSinceAO ?","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1992490478/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1992514214","html_url":"https://github.com/apache/accumulo/pull/4364#issuecomment-1992514214","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4364","id":1992514214,"node_id":"IC_kwDOACaFSM52w1qm","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-12T20:23:27Z","updated_at":"2024-03-12T20:23:27Z","author_association":"CONTRIBUTOR","body":"> Could consider implementing Comparable - the method could just delegate to Long.comparable and possibly eqauls, hashCode ?\r\n\r\nadded equals and hashcode, can not add Comparable as its not safe to compare nano times","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1992514214/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1992531226","html_url":"https://github.com/apache/accumulo/pull/4364#issuecomment-1992531226","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4364","id":1992531226,"node_id":"IC_kwDOACaFSM52w50a","user":{"login":"EdColeman","id":7047700,"node_id":"MDQ6VXNlcjcwNDc3MDA=","avatar_url":"https://avatars.githubusercontent.com/u/7047700?v=4","gravatar_id":"","url":"https://api.github.com/users/EdColeman","html_url":"https://github.com/EdColeman","followers_url":"https://api.github.com/users/EdColeman/followers","following_url":"https://api.github.com/users/EdColeman/following{/other_user}","gists_url":"https://api.github.com/users/EdColeman/gists{/gist_id}","starred_url":"https://api.github.com/users/EdColeman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/EdColeman/subscriptions","organizations_url":"https://api.github.com/users/EdColeman/orgs","repos_url":"https://api.github.com/users/EdColeman/repos","events_url":"https://api.github.com/users/EdColeman/events{/privacy}","received_events_url":"https://api.github.com/users/EdColeman/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-12T20:35:29Z","updated_at":"2024-03-12T20:35:29Z","author_association":"CONTRIBUTOR","body":"` its not safe to compare nano times `  \r\n\r\nTwo nano measurements, in the same vm can be compared to determine before, after and equal by using the delta between the two values.  The use case would be if you were trying to find the oldest / newest NanoTime between two instances (or in a list / set)\r\n\r\nThis is highlights that maybe it should be documented that instances of NanoTime should not be persisted and cannot be shared across processes.  The nano measurement is only valid within the runtime and is determined at the start of the JVM.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1992531226/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1992544578","html_url":"https://github.com/apache/accumulo/pull/4364#issuecomment-1992544578","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4364","id":1992544578,"node_id":"IC_kwDOACaFSM52w9FC","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-12T20:44:19Z","updated_at":"2024-03-12T20:44:19Z","author_association":"CONTRIBUTOR","body":"> can not add Comparable as its not safe to compare nano times\r\n\r\nActually we could add a compareTo method that may be safe by doing the following.  However I don't think I will add that now unless there is a need.\r\n\r\n```java\r\n  @Override\r\n  public int compareTo(NanoTime other) {\r\n    long now = System.nanoTime();\r\n    // all operations w/ nanoTimes must compute elapsed times first\r\n    long elapsed1 = now - nanosSinceAO;\r\n    long elapsed2 = now - other.nanosSinceAO;\r\n    return Long.compare(elapsed1, elapsed2);\r\n  }\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1992544578/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1992583270","html_url":"https://github.com/apache/accumulo/pull/4364#issuecomment-1992583270","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4364","id":1992583270,"node_id":"IC_kwDOACaFSM52xGhm","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-12T21:01:55Z","updated_at":"2024-03-12T21:02:17Z","author_association":"CONTRIBUTOR","body":"I added the compareTo method, was thinking about it and it would be useful to have.  I think I need to add some unit test, will add those to this PR.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1992583270/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1992593369","html_url":"https://github.com/apache/accumulo/pull/4364#issuecomment-1992593369","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4364","id":1992593369,"node_id":"IC_kwDOACaFSM52xI_Z","user":{"login":"EdColeman","id":7047700,"node_id":"MDQ6VXNlcjcwNDc3MDA=","avatar_url":"https://avatars.githubusercontent.com/u/7047700?v=4","gravatar_id":"","url":"https://api.github.com/users/EdColeman","html_url":"https://github.com/EdColeman","followers_url":"https://api.github.com/users/EdColeman/followers","following_url":"https://api.github.com/users/EdColeman/following{/other_user}","gists_url":"https://api.github.com/users/EdColeman/gists{/gist_id}","starred_url":"https://api.github.com/users/EdColeman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/EdColeman/subscriptions","organizations_url":"https://api.github.com/users/EdColeman/orgs","repos_url":"https://api.github.com/users/EdColeman/repos","events_url":"https://api.github.com/users/EdColeman/events{/privacy}","received_events_url":"https://api.github.com/users/EdColeman/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-12T21:09:24Z","updated_at":"2024-03-12T21:09:24Z","author_association":"CONTRIBUTOR","body":"I approved the changes - but see you intend to add tests,  I'll wait until those are available.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1992593369/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1992648867","html_url":"https://github.com/apache/accumulo/pull/4367#issuecomment-1992648867","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4367","id":1992648867,"node_id":"IC_kwDOACaFSM52xWij","user":{"login":"EdColeman","id":7047700,"node_id":"MDQ6VXNlcjcwNDc3MDA=","avatar_url":"https://avatars.githubusercontent.com/u/7047700?v=4","gravatar_id":"","url":"https://api.github.com/users/EdColeman","html_url":"https://github.com/EdColeman","followers_url":"https://api.github.com/users/EdColeman/followers","following_url":"https://api.github.com/users/EdColeman/following{/other_user}","gists_url":"https://api.github.com/users/EdColeman/gists{/gist_id}","starred_url":"https://api.github.com/users/EdColeman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/EdColeman/subscriptions","organizations_url":"https://api.github.com/users/EdColeman/orgs","repos_url":"https://api.github.com/users/EdColeman/repos","events_url":"https://api.github.com/users/EdColeman/events{/privacy}","received_events_url":"https://api.github.com/users/EdColeman/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-12T21:53:23Z","updated_at":"2024-03-12T21:53:23Z","author_association":"CONTRIBUTOR","body":"Would a comment help on why the modernizer needed to be suppressed?  Once whatever that is, then could the suppression be unnecessary?","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1992648867/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1992653154","html_url":"https://github.com/apache/accumulo/pull/4367#issuecomment-1992653154","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4367","id":1992653154,"node_id":"IC_kwDOACaFSM52xXli","user":{"login":"dlmarion","id":567911,"node_id":"MDQ6VXNlcjU2NzkxMQ==","avatar_url":"https://avatars.githubusercontent.com/u/567911?v=4","gravatar_id":"","url":"https://api.github.com/users/dlmarion","html_url":"https://github.com/dlmarion","followers_url":"https://api.github.com/users/dlmarion/followers","following_url":"https://api.github.com/users/dlmarion/following{/other_user}","gists_url":"https://api.github.com/users/dlmarion/gists{/gist_id}","starred_url":"https://api.github.com/users/dlmarion/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dlmarion/subscriptions","organizations_url":"https://api.github.com/users/dlmarion/orgs","repos_url":"https://api.github.com/users/dlmarion/repos","events_url":"https://api.github.com/users/dlmarion/events{/privacy}","received_events_url":"https://api.github.com/users/dlmarion/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-12T21:57:09Z","updated_at":"2024-03-12T21:57:09Z","author_association":"CONTRIBUTOR","body":"> Would a comment help on why the modernizer needed to be suppressed? Once whatever that is, then could the suppression be unnecessary?\r\n\r\nSure - Stream.concat() only takes two arguments, whereas Iterables.concat has several versions to include one that accepts varargs. The modernizer plugin complains about it. After I pushed I realized that I could just iterate over the collections independently and then I would not need to use any concat methods. I can change to that version if people feel strongly about it.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1992653154/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1992655343","html_url":"https://github.com/apache/accumulo/pull/4367#issuecomment-1992655343","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4367","id":1992655343,"node_id":"IC_kwDOACaFSM52xYHv","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-03-12T21:59:06Z","updated_at":"2024-03-12T21:59:06Z","author_association":"CONTRIBUTOR","body":"There is already #4354","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1992655343/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]