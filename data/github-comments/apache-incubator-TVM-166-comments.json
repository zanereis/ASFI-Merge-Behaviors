[{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595107872","html_url":"https://github.com/apache/tvm/pull/4990#issuecomment-595107872","issue_url":"https://api.github.com/repos/apache/tvm/issues/4990","id":595107872,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTEwNzg3Mg==","user":{"login":"FrozenGene","id":7287321,"node_id":"MDQ6VXNlcjcyODczMjE=","avatar_url":"https://avatars.githubusercontent.com/u/7287321?v=4","gravatar_id":"","url":"https://api.github.com/users/FrozenGene","html_url":"https://github.com/FrozenGene","followers_url":"https://api.github.com/users/FrozenGene/followers","following_url":"https://api.github.com/users/FrozenGene/following{/other_user}","gists_url":"https://api.github.com/users/FrozenGene/gists{/gist_id}","starred_url":"https://api.github.com/users/FrozenGene/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/FrozenGene/subscriptions","organizations_url":"https://api.github.com/users/FrozenGene/orgs","repos_url":"https://api.github.com/users/FrozenGene/repos","events_url":"https://api.github.com/users/FrozenGene/events{/privacy}","received_events_url":"https://api.github.com/users/FrozenGene/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-05T08:58:45Z","updated_at":"2020-03-05T08:58:45Z","author_association":"MEMBER","body":"I think we needn't add `_empty_for_training_mode_inference`. If we find `mean` / `variance` is `VarNode`, we should call `Mean` and `Variance`.\r\n\r\nI don't think we should add `is_training` flag to relay `BatchNorm`. This should be done by users to make sure TF's model `BatchNorm`'s `is_training` flag be false. However, we still have user cases like you mention, so we could support as current implementation and don't add attribute to `BatchNorm`.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595107872/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595147201","html_url":"https://github.com/apache/tvm/pull/4990#issuecomment-595147201","issue_url":"https://api.github.com/repos/apache/tvm/issues/4990","id":595147201,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTE0NzIwMQ==","user":{"login":"lfengad","id":13271164,"node_id":"MDQ6VXNlcjEzMjcxMTY0","avatar_url":"https://avatars.githubusercontent.com/u/13271164?v=4","gravatar_id":"","url":"https://api.github.com/users/lfengad","html_url":"https://github.com/lfengad","followers_url":"https://api.github.com/users/lfengad/followers","following_url":"https://api.github.com/users/lfengad/following{/other_user}","gists_url":"https://api.github.com/users/lfengad/gists{/gist_id}","starred_url":"https://api.github.com/users/lfengad/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lfengad/subscriptions","organizations_url":"https://api.github.com/users/lfengad/orgs","repos_url":"https://api.github.com/users/lfengad/repos","events_url":"https://api.github.com/users/lfengad/events{/privacy}","received_events_url":"https://api.github.com/users/lfengad/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-05T10:16:50Z","updated_at":"2020-03-05T10:16:50Z","author_association":"CONTRIBUTOR","body":"> I think we needn't add `_empty_for_training_mode_inference`. If we find `mean` / `variance` is `VarNode`, we should call `Mean` and `Variance`.\r\n> \r\n> I don't think we should add `is_training` flag to relay `BatchNorm`. This should be done by users to make sure TF's model `BatchNorm`'s `is_training` flag be false. However, we still have user cases like you mention, so we could support as current implementation and don't add attribute to `BatchNorm`.\r\n\r\nThank you so much for the quick reply!  \r\nYeah, our current implementation is just to check whether `mean` / `variance` is empty `VarNode` (with zero dimension),  and then call `Mean` and `Variance` in BatchNormToInferUnpack.  Also as I understand, if `mean` / `variance` is `VarNode` but with non-zero dimension, it still has the possibility to hold the given pre-defined constant values and thus cannot be replaced with `Mean` \\ `Variance`.   \r\nThank you for the discussion!","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595147201/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595156271","html_url":"https://github.com/apache/tvm/pull/4990#issuecomment-595156271","issue_url":"https://api.github.com/repos/apache/tvm/issues/4990","id":595156271,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTE1NjI3MQ==","user":{"login":"FrozenGene","id":7287321,"node_id":"MDQ6VXNlcjcyODczMjE=","avatar_url":"https://avatars.githubusercontent.com/u/7287321?v=4","gravatar_id":"","url":"https://api.github.com/users/FrozenGene","html_url":"https://github.com/FrozenGene","followers_url":"https://api.github.com/users/FrozenGene/followers","following_url":"https://api.github.com/users/FrozenGene/following{/other_user}","gists_url":"https://api.github.com/users/FrozenGene/gists{/gist_id}","starred_url":"https://api.github.com/users/FrozenGene/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/FrozenGene/subscriptions","organizations_url":"https://api.github.com/users/FrozenGene/orgs","repos_url":"https://api.github.com/users/FrozenGene/repos","events_url":"https://api.github.com/users/FrozenGene/events{/privacy}","received_events_url":"https://api.github.com/users/FrozenGene/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-05T10:34:54Z","updated_at":"2020-03-05T10:34:54Z","author_association":"MEMBER","body":"> Yeah, our current implementation is just to check whether `mean` / `variance` is empty `VarNode` (with zero dimension), and then call `Mean` and `Variance` in BatchNormToInferUnpack.\r\n\r\nI think our pr could remove `name_hint` too.\r\n\r\n>  if mean / variance is VarNode but with non-zero dimension, it still has the possibility to hold the given pre-defined constant values and thus cannot be replaced with Mean \\ Variance.\r\n\r\nCould you give us an example of this condition? I could only imagine models have empty or full pre-defined values. So we should only to calculate it by calling `Mean` / `Variance` feed by `data` or our current implementation of `BatchNormToInferUnpack `.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595156271/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595191104","html_url":"https://github.com/apache/tvm/pull/4828#issuecomment-595191104","issue_url":"https://api.github.com/repos/apache/tvm/issues/4828","id":595191104,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTE5MTEwNA==","user":{"login":"fwd4","id":19797985,"node_id":"MDQ6VXNlcjE5Nzk3OTg1","avatar_url":"https://avatars.githubusercontent.com/u/19797985?v=4","gravatar_id":"","url":"https://api.github.com/users/fwd4","html_url":"https://github.com/fwd4","followers_url":"https://api.github.com/users/fwd4/followers","following_url":"https://api.github.com/users/fwd4/following{/other_user}","gists_url":"https://api.github.com/users/fwd4/gists{/gist_id}","starred_url":"https://api.github.com/users/fwd4/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fwd4/subscriptions","organizations_url":"https://api.github.com/users/fwd4/orgs","repos_url":"https://api.github.com/users/fwd4/repos","events_url":"https://api.github.com/users/fwd4/events{/privacy}","received_events_url":"https://api.github.com/users/fwd4/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-05T11:51:54Z","updated_at":"2020-03-05T11:51:54Z","author_association":"CONTRIBUTOR","body":"The problem is located and solved. The discrepancy comes from average pooling calculation when input is integral type. tflite does a UPWARD rounding after the division in avg_pool but current topi implementation of avg_pool does of FLOOR after the division.\r\n\r\nThe fix is added and tested locally on cpu. Now the qnn tests in tflite test_forward has rtol and atol set to 0, which should meet the bit-exact exectution requirement. \r\n\r\n@FrozenGene @anijain2305 @tqchen @u99127 Please have another look, thanks!","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595191104/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595200848","html_url":"https://github.com/apache/tvm/pull/4828#issuecomment-595200848","issue_url":"https://api.github.com/repos/apache/tvm/issues/4828","id":595200848,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTIwMDg0OA==","user":{"login":"FrozenGene","id":7287321,"node_id":"MDQ6VXNlcjcyODczMjE=","avatar_url":"https://avatars.githubusercontent.com/u/7287321?v=4","gravatar_id":"","url":"https://api.github.com/users/FrozenGene","html_url":"https://github.com/FrozenGene","followers_url":"https://api.github.com/users/FrozenGene/followers","following_url":"https://api.github.com/users/FrozenGene/following{/other_user}","gists_url":"https://api.github.com/users/FrozenGene/gists{/gist_id}","starred_url":"https://api.github.com/users/FrozenGene/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/FrozenGene/subscriptions","organizations_url":"https://api.github.com/users/FrozenGene/orgs","repos_url":"https://api.github.com/users/FrozenGene/repos","events_url":"https://api.github.com/users/FrozenGene/events{/privacy}","received_events_url":"https://api.github.com/users/FrozenGene/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-05T12:18:39Z","updated_at":"2020-03-05T12:18:39Z","author_association":"MEMBER","body":"> The problem is located and solved. The discrepancy comes from average pooling calculation when input is integral type. tflite does a UPWARD rounding after the division in avg_pool but current topi implementation of avg_pool does of FLOOR after the division.\r\n> \r\n> The fix is added and tested locally on cpu. Now the qnn tests in tflite test_forward has rtol and atol set to 0, which should meet the bit-exact exectution requirement.\r\n> \r\n> @FrozenGene @anijain2305 @tqchen @u99127 Please have another look, thanks!\r\n\r\nThanks @LiangHao151941 !\r\n\r\nMaybe we have to handle it a bit more. Please see: https://github.com/tensorflow/tensorflow/blob/master/tensorflow/lite/kernels/internal/optimized/integer_ops/pooling.h#L300\r\n\r\nThe default behaviour of TFLite is `optimize`, so TFLite will run `optimzed` of `kernel` directory. For average pool, it has two conditions. The type of `acc` will be `uint16` if `params.filter_height * params.filter_width <= 16 * 16` , otherwise, the type of `acc` will be `int32` as our implementation. If we want to keep bit-exact result, we should handle it here too. You remind me this situation, I met this bug before if we don't handle it.\r\n\r\n> Another way is we provide rounding args for qnn.add / qnn.mul / qnn.conconcate, because they use requantize in fact too, so they need rounding.\r\n\r\nWe should handle these ops too.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595200848/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595210343","html_url":"https://github.com/apache/tvm/pull/4828#issuecomment-595210343","issue_url":"https://api.github.com/repos/apache/tvm/issues/4828","id":595210343,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTIxMDM0Mw==","user":{"login":"fwd4","id":19797985,"node_id":"MDQ6VXNlcjE5Nzk3OTg1","avatar_url":"https://avatars.githubusercontent.com/u/19797985?v=4","gravatar_id":"","url":"https://api.github.com/users/fwd4","html_url":"https://github.com/fwd4","followers_url":"https://api.github.com/users/fwd4/followers","following_url":"https://api.github.com/users/fwd4/following{/other_user}","gists_url":"https://api.github.com/users/fwd4/gists{/gist_id}","starred_url":"https://api.github.com/users/fwd4/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fwd4/subscriptions","organizations_url":"https://api.github.com/users/fwd4/orgs","repos_url":"https://api.github.com/users/fwd4/repos","events_url":"https://api.github.com/users/fwd4/events{/privacy}","received_events_url":"https://api.github.com/users/fwd4/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-05T12:45:28Z","updated_at":"2020-03-05T12:45:28Z","author_association":"CONTRIBUTOR","body":"> Maybe we have to handle it a bit more. Please see: https://github.com/tensorflow/tensorflow/blob/master/tensorflow/lite/kernels/internal/optimized/integer_ops/pooling.h#L300\r\n> \r\n> The default behaviour of TFLite is `optimize`, so TFLite will run `optimzed` of `kernel` directory. For average pool, it has two conditions. The type of `acc` will be `uint16` if `params.filter_height * params.filter_width <= 16 * 16` , otherwise, the type of `acc` will be `int32` as our implementation. If we want to keep bit-exact result, we should handle it here too. You remind me this situation, I met this bug before if we don't handle it.\r\n\r\nI think acc being uint16 is fine, as in that case largest acc value will be 256*255 < 65535, where there should not be any overflow problems (and of course int32 is fine as well). So that might not be a problem. \r\n\r\n> Another way is we provide rounding args for qnn.add / qnn.mul / qnn.conconcate, because they use requantize in fact too, so they need rounding.\r\n\r\nMaybe we can mark these as todos due to lack of testcases for now, as make it for the next pr?\r\n\r\nA new problem is that changing the default pooling behavior fails some pool op tests. I'm going to add an tflite_mode bool flag for relay.nn.avg_pool2d, how do you think? @FrozenGene ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595210343/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595214366","html_url":"https://github.com/apache/tvm/pull/4828#issuecomment-595214366","issue_url":"https://api.github.com/repos/apache/tvm/issues/4828","id":595214366,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTIxNDM2Ng==","user":{"login":"FrozenGene","id":7287321,"node_id":"MDQ6VXNlcjcyODczMjE=","avatar_url":"https://avatars.githubusercontent.com/u/7287321?v=4","gravatar_id":"","url":"https://api.github.com/users/FrozenGene","html_url":"https://github.com/FrozenGene","followers_url":"https://api.github.com/users/FrozenGene/followers","following_url":"https://api.github.com/users/FrozenGene/following{/other_user}","gists_url":"https://api.github.com/users/FrozenGene/gists{/gist_id}","starred_url":"https://api.github.com/users/FrozenGene/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/FrozenGene/subscriptions","organizations_url":"https://api.github.com/users/FrozenGene/orgs","repos_url":"https://api.github.com/users/FrozenGene/repos","events_url":"https://api.github.com/users/FrozenGene/events{/privacy}","received_events_url":"https://api.github.com/users/FrozenGene/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-05T12:55:21Z","updated_at":"2020-03-05T12:55:21Z","author_association":"MEMBER","body":"> Maybe we can mark these as todos due to lack of testcases for now, as make it for the next pr?\r\n\r\nWe could mark it #TODO in tflite.py to remind us. Personally I wish we could handle it in a short time so that we don't forget it :-)\r\n\r\n> A new problem is that changing the default pooling behavior fails some pool op tests. I'm going to add an tflite_mode bool flag for relay.nn.avg_pool2d, how do you think? @FrozenGene \r\n\r\nYes. I think we have to do it. But we should keep the default value as our previous implementation.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595214366/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595224938","html_url":"https://github.com/apache/tvm/pull/4992#issuecomment-595224938","issue_url":"https://api.github.com/repos/apache/tvm/issues/4992","id":595224938,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTIyNDkzOA==","user":{"login":"jjohnson-arm","id":34247471,"node_id":"MDQ6VXNlcjM0MjQ3NDcx","avatar_url":"https://avatars.githubusercontent.com/u/34247471?v=4","gravatar_id":"","url":"https://api.github.com/users/jjohnson-arm","html_url":"https://github.com/jjohnson-arm","followers_url":"https://api.github.com/users/jjohnson-arm/followers","following_url":"https://api.github.com/users/jjohnson-arm/following{/other_user}","gists_url":"https://api.github.com/users/jjohnson-arm/gists{/gist_id}","starred_url":"https://api.github.com/users/jjohnson-arm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jjohnson-arm/subscriptions","organizations_url":"https://api.github.com/users/jjohnson-arm/orgs","repos_url":"https://api.github.com/users/jjohnson-arm/repos","events_url":"https://api.github.com/users/jjohnson-arm/events{/privacy}","received_events_url":"https://api.github.com/users/jjohnson-arm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-05T13:19:40Z","updated_at":"2020-03-05T13:19:40Z","author_association":"CONTRIBUTOR","body":"Fix for: https://discuss.tvm.ai/t/pytorch-wrongly-defined-graph-input-names-cause-keyerror/5866","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595224938/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595305194","html_url":"https://github.com/apache/tvm/pull/4977#issuecomment-595305194","issue_url":"https://api.github.com/repos/apache/tvm/issues/4977","id":595305194,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTMwNTE5NA==","user":{"login":"greysteil","id":1144873,"node_id":"MDQ6VXNlcjExNDQ4NzM=","avatar_url":"https://avatars.githubusercontent.com/u/1144873?v=4","gravatar_id":"","url":"https://api.github.com/users/greysteil","html_url":"https://github.com/greysteil","followers_url":"https://api.github.com/users/greysteil/followers","following_url":"https://api.github.com/users/greysteil/following{/other_user}","gists_url":"https://api.github.com/users/greysteil/gists{/gist_id}","starred_url":"https://api.github.com/users/greysteil/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/greysteil/subscriptions","organizations_url":"https://api.github.com/users/greysteil/orgs","repos_url":"https://api.github.com/users/greysteil/repos","events_url":"https://api.github.com/users/greysteil/events{/privacy}","received_events_url":"https://api.github.com/users/greysteil/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-05T15:59:24Z","updated_at":"2020-03-05T15:59:24Z","author_association":"NONE","body":"FYI, this issue (the change in commit author) got escalated to me at GitHub. We have a bug in our squash and merge logic right now (introduced yesterday) which causes the original PR author to be removed from the list of commit co-authors in some cases. We're working on a fix now.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595305194/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595313695","html_url":"https://github.com/apache/tvm/pull/4988#issuecomment-595313695","issue_url":"https://api.github.com/repos/apache/tvm/issues/4988","id":595313695,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTMxMzY5NQ==","user":{"login":"zhiics","id":5145158,"node_id":"MDQ6VXNlcjUxNDUxNTg=","avatar_url":"https://avatars.githubusercontent.com/u/5145158?v=4","gravatar_id":"","url":"https://api.github.com/users/zhiics","html_url":"https://github.com/zhiics","followers_url":"https://api.github.com/users/zhiics/followers","following_url":"https://api.github.com/users/zhiics/following{/other_user}","gists_url":"https://api.github.com/users/zhiics/gists{/gist_id}","starred_url":"https://api.github.com/users/zhiics/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zhiics/subscriptions","organizations_url":"https://api.github.com/users/zhiics/orgs","repos_url":"https://api.github.com/users/zhiics/repos","events_url":"https://api.github.com/users/zhiics/events{/privacy}","received_events_url":"https://api.github.com/users/zhiics/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-05T16:15:34Z","updated_at":"2020-03-05T16:15:34Z","author_association":"MEMBER","body":"Thanks @comaniac @tqchen @wweic ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595313695/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595320437","html_url":"https://github.com/apache/tvm/pull/4979#issuecomment-595320437","issue_url":"https://api.github.com/repos/apache/tvm/issues/4979","id":595320437,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTMyMDQzNw==","user":{"login":"maheshambule","id":15611578,"node_id":"MDQ6VXNlcjE1NjExNTc4","avatar_url":"https://avatars.githubusercontent.com/u/15611578?v=4","gravatar_id":"","url":"https://api.github.com/users/maheshambule","html_url":"https://github.com/maheshambule","followers_url":"https://api.github.com/users/maheshambule/followers","following_url":"https://api.github.com/users/maheshambule/following{/other_user}","gists_url":"https://api.github.com/users/maheshambule/gists{/gist_id}","starred_url":"https://api.github.com/users/maheshambule/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/maheshambule/subscriptions","organizations_url":"https://api.github.com/users/maheshambule/orgs","repos_url":"https://api.github.com/users/maheshambule/repos","events_url":"https://api.github.com/users/maheshambule/events{/privacy}","received_events_url":"https://api.github.com/users/maheshambule/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-05T16:29:11Z","updated_at":"2020-03-05T16:29:11Z","author_association":"CONTRIBUTOR","body":"@MarisaKirisame, could you please elaborate more on outputting the new seed?  Does it mean that in case if seed is not provided Relay should generate (and not the operator to keep it pure) a new seed,  pass it to the operator and then store it in a global mutable reference at Relay level. And in case if seed is provided just pass it to the operator.  ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595320437/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595330595","html_url":"https://github.com/apache/tvm/pull/4979#issuecomment-595330595","issue_url":"https://api.github.com/repos/apache/tvm/issues/4979","id":595330595,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTMzMDU5NQ==","user":{"login":"MarisaKirisame","id":3397377,"node_id":"MDQ6VXNlcjMzOTczNzc=","avatar_url":"https://avatars.githubusercontent.com/u/3397377?v=4","gravatar_id":"","url":"https://api.github.com/users/MarisaKirisame","html_url":"https://github.com/MarisaKirisame","followers_url":"https://api.github.com/users/MarisaKirisame/followers","following_url":"https://api.github.com/users/MarisaKirisame/following{/other_user}","gists_url":"https://api.github.com/users/MarisaKirisame/gists{/gist_id}","starred_url":"https://api.github.com/users/MarisaKirisame/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/MarisaKirisame/subscriptions","organizations_url":"https://api.github.com/users/MarisaKirisame/orgs","repos_url":"https://api.github.com/users/MarisaKirisame/repos","events_url":"https://api.github.com/users/MarisaKirisame/events{/privacy}","received_events_url":"https://api.github.com/users/MarisaKirisame/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-05T16:47:51Z","updated_at":"2020-03-05T16:47:51Z","author_association":"CONTRIBUTOR","body":"I am proposing the following design:\r\nthe tvm operator randomuniform take a seed, and return a random uniform tensor paired with the new seed.\r\nrelay has a global reference holding a seed.\r\nthere are relay helper function that, read the seed, call randomuniform, write the new seed to the reference, and returning the tensor.\r\nthis way, the tvm level can be kept pure, which is beneficial for optimization, while the relay level provide effectful api that is easy to use.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595330595/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595344454","html_url":"https://github.com/apache/tvm/pull/4805#issuecomment-595344454","issue_url":"https://api.github.com/repos/apache/tvm/issues/4805","id":595344454,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTM0NDQ1NA==","user":{"login":"inadob","id":55383260,"node_id":"MDQ6VXNlcjU1MzgzMjYw","avatar_url":"https://avatars.githubusercontent.com/u/55383260?v=4","gravatar_id":"","url":"https://api.github.com/users/inadob","html_url":"https://github.com/inadob","followers_url":"https://api.github.com/users/inadob/followers","following_url":"https://api.github.com/users/inadob/following{/other_user}","gists_url":"https://api.github.com/users/inadob/gists{/gist_id}","starred_url":"https://api.github.com/users/inadob/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/inadob/subscriptions","organizations_url":"https://api.github.com/users/inadob/orgs","repos_url":"https://api.github.com/users/inadob/repos","events_url":"https://api.github.com/users/inadob/events{/privacy}","received_events_url":"https://api.github.com/users/inadob/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-05T17:14:57Z","updated_at":"2020-03-05T17:14:57Z","author_association":"CONTRIBUTOR","body":"> Can you show me code example here? I have typically used float numbers like 1.0 or 6.0 to work with `a_min` or `a_max`\r\n\r\n```c++\r\nExpr ClipQnnCanonicalize(const Attrs& attrs, const Array<Expr>& new_args,\r\n                               const Array<tvm::relay::Type>& arg_types) {\r\n  CHECK_EQ(new_args.size(), 7);\r\n  auto& input_tensor = new_args[0];\r\n  auto& input_scale = new_args[1]; // in fp\r\n  auto& input_zero_point = new_args[2]; // in int32\r\n  auto& clip_min = new_args[3];  // value is in fp\r\n  auto& clip_max = new_args[4];  // value is in fp\r\n  auto& output_scale = new_args[5];\r\n  auto& output_zero_point = new_args[6];\r\n\r\n  // Get the input dtype and shape.\r\n  CHECK_EQ(arg_types.size(), 8);\r\n  auto tensor_type = arg_types[0].as<TensorTypeNode>();\r\n  CHECK(tensor_type != nullptr);\r\n  auto input_dtype = tensor_type->dtype;\r\n  auto input_shape = tensor_type->shape;\r\n\r\n\r\n  // shift the input by subtracting the input zero_point\r\n  auto shifted_input = Subtract(Cast(input_tensor, DataType::Int(32)), input_zero_point);\r\n\r\n  // do the clipping in int32\r\n  // auto clipped_tensor = Clip(shifted_input, clip_min, clip_max)\r\n  auto clipped_tensor = Clip(shifted_input, Cast(clip_min, DataType::Float(64)), Cast(clip_max, DataType::Float(64)))\r\n  // shift the input back by adding the zero_point\r\n  clipped_tensor = Add(clipped_tensor, input_zero_point);\r\n\r\n  // requantize the output if needed\r\n  auto requantized_output = clipped_tensor;\r\n  if (!IsEqualScalar(input_scale, output_scale) ||\r\n      !IsEqualScalar(input_zero_point, output_zero_point)) {\r\n     requantized_output = Requantize(clipped_tensor, input_shape, input_scale, input_zero_point, output_scale,\r\n                                     output_zero_point, DataType::Int(32));\r\n    }\r\n\r\n  // Go back to lower precision.\r\n  auto q_min = GetQmin(input_dtype);\r\n  auto q_max = GetQmax(input_dtype);\r\n  requantized_output = Clip(requantized_output, q_min, q_max); \r\n  return Cast(requantized_output, input_dtype);\r\n}\r\n```\r\nAnd I am getting a complaint about **double dtype**...\r\n```\r\n/workspace/src/relay/qnn/op/clip.cc:61:117: error: cannot convert 'tvm::relay::Expr {aka tvm::RelayExpr}' to 'double' for argument '2' to 'tvm::relay::Expr tvm::relay::Clip(tvm::relay::Expr, double, double)'\r\n   auto clipped_tensor = Clip(shifted_input, Cast(clip_min, DataType::Float(64)), Cast(clip_max, DataType::Float(64)))\r\n\r\n```\r\n\r\nThe commented out line where I directly do clip() without casting to float64 didn't work too.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595344454/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595347242","html_url":"https://github.com/apache/tvm/pull/4828#issuecomment-595347242","issue_url":"https://api.github.com/repos/apache/tvm/issues/4828","id":595347242,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTM0NzI0Mg==","user":{"login":"anijain2305","id":13822661,"node_id":"MDQ6VXNlcjEzODIyNjYx","avatar_url":"https://avatars.githubusercontent.com/u/13822661?v=4","gravatar_id":"","url":"https://api.github.com/users/anijain2305","html_url":"https://github.com/anijain2305","followers_url":"https://api.github.com/users/anijain2305/followers","following_url":"https://api.github.com/users/anijain2305/following{/other_user}","gists_url":"https://api.github.com/users/anijain2305/gists{/gist_id}","starred_url":"https://api.github.com/users/anijain2305/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/anijain2305/subscriptions","organizations_url":"https://api.github.com/users/anijain2305/orgs","repos_url":"https://api.github.com/users/anijain2305/repos","events_url":"https://api.github.com/users/anijain2305/events{/privacy}","received_events_url":"https://api.github.com/users/anijain2305/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-05T17:20:55Z","updated_at":"2020-03-05T17:20:55Z","author_association":"CONTRIBUTOR","body":"Good finding @LiangHao151941 \r\n\r\nI don't think we should add tflite_mode attr to Pool2D op. It seems adhoc to me.\r\n\r\nI think we can directly implement the UPWARD rounding in pooling, **whenever the datatype is interger**. For integer division, it is valid to implement rounding by default.\r\n\r\nIf the tests fail for integer pool, we can change those tests as well. I added those tests in https://github.com/apache/incubator-tvm/pull/3607. Prior to that integer computation in pooling was wrong.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595347242/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595390387","html_url":"https://github.com/apache/tvm/pull/4986#issuecomment-595390387","issue_url":"https://api.github.com/repos/apache/tvm/issues/4986","id":595390387,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTM5MDM4Nw==","user":{"login":"pasqoc","id":61704028,"node_id":"MDQ6VXNlcjYxNzA0MDI4","avatar_url":"https://avatars.githubusercontent.com/u/61704028?v=4","gravatar_id":"","url":"https://api.github.com/users/pasqoc","html_url":"https://github.com/pasqoc","followers_url":"https://api.github.com/users/pasqoc/followers","following_url":"https://api.github.com/users/pasqoc/following{/other_user}","gists_url":"https://api.github.com/users/pasqoc/gists{/gist_id}","starred_url":"https://api.github.com/users/pasqoc/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pasqoc/subscriptions","organizations_url":"https://api.github.com/users/pasqoc/orgs","repos_url":"https://api.github.com/users/pasqoc/repos","events_url":"https://api.github.com/users/pasqoc/events{/privacy}","received_events_url":"https://api.github.com/users/pasqoc/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-05T18:56:30Z","updated_at":"2020-03-05T18:58:35Z","author_association":"CONTRIBUTOR","body":"Last commit addresses previous comments.\r\nsbt scalafmt --test is still open since it changes code.\r\nPlease let me know what you think.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595390387/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595393925","html_url":"https://github.com/apache/tvm/pull/4979#issuecomment-595393925","issue_url":"https://api.github.com/repos/apache/tvm/issues/4979","id":595393925,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTM5MzkyNQ==","user":{"login":"maheshambule","id":15611578,"node_id":"MDQ6VXNlcjE1NjExNTc4","avatar_url":"https://avatars.githubusercontent.com/u/15611578?v=4","gravatar_id":"","url":"https://api.github.com/users/maheshambule","html_url":"https://github.com/maheshambule","followers_url":"https://api.github.com/users/maheshambule/followers","following_url":"https://api.github.com/users/maheshambule/following{/other_user}","gists_url":"https://api.github.com/users/maheshambule/gists{/gist_id}","starred_url":"https://api.github.com/users/maheshambule/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/maheshambule/subscriptions","organizations_url":"https://api.github.com/users/maheshambule/orgs","repos_url":"https://api.github.com/users/maheshambule/repos","events_url":"https://api.github.com/users/maheshambule/events{/privacy}","received_events_url":"https://api.github.com/users/maheshambule/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-05T19:04:40Z","updated_at":"2020-03-05T19:04:40Z","author_association":"CONTRIBUTOR","body":"Thanks @MarisaKirisame. I understand that We want to keep TVM operator pure and Relay can have side effects. But I am not able to figure out Why do we want the operator to return the new seed? And how that new seed will get generated? ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595393925/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595427659","html_url":"https://github.com/apache/tvm/pull/3934#issuecomment-595427659","issue_url":"https://api.github.com/repos/apache/tvm/issues/3934","id":595427659,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTQyNzY1OQ==","user":{"login":"tmoreau89","id":5974488,"node_id":"MDQ6VXNlcjU5NzQ0ODg=","avatar_url":"https://avatars.githubusercontent.com/u/5974488?v=4","gravatar_id":"","url":"https://api.github.com/users/tmoreau89","html_url":"https://github.com/tmoreau89","followers_url":"https://api.github.com/users/tmoreau89/followers","following_url":"https://api.github.com/users/tmoreau89/following{/other_user}","gists_url":"https://api.github.com/users/tmoreau89/gists{/gist_id}","starred_url":"https://api.github.com/users/tmoreau89/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tmoreau89/subscriptions","organizations_url":"https://api.github.com/users/tmoreau89/orgs","repos_url":"https://api.github.com/users/tmoreau89/repos","events_url":"https://api.github.com/users/tmoreau89/events{/privacy}","received_events_url":"https://api.github.com/users/tmoreau89/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-05T20:19:43Z","updated_at":"2020-03-05T20:19:43Z","author_association":"CONTRIBUTOR","body":"Excellent, thanks for adding this to CI so quickly! I was able to reproduce the demo by typing in `make demo`; it ran for the most part successfully, but I got an illegal instruction error in the end:\r\n\r\n```$ make demo\r\npython3 build_model.py -o build\r\nINFO:root:Model file not found. Downloading to /Users/moreau/.mxnet/models/mobilenet0.25-9f83e440.params.\r\nDownloading /Users/moreau/.mxnet/models/mobilenet0.25-9f83e440.zip from https://apache-mxnet.s3-accelerate.dualstack.amazonaws.com/gluon/models/mobilenet0.25-9f83e440.zip...\r\nINFO:autotvm:Download pre-tuned parameters package from https://raw.githubusercontent.com/uwsampl/tvm-distro/master/tophub/llvm_v0.04.log\r\n...100%, 0.02 MB, 121 KB/s, 0 seconds passed\r\nINFO:compile_engine:Use implementation injective.cpu for op add\r\nINFO:compile_engine:Use implementation injective.cpu for op sqrt\r\nINFO:compile_engine:Use implementation injective.cpu for op divide\r\nINFO:compile_engine:Use implementation injective.cpu for op multiply\r\nINFO:compile_engine:Use implementation injective.cpu for op expand_dims\r\nINFO:compile_engine:Use implementation injective.cpu for op negative\r\nINFO:compile_engine:Use implementation injective.cpu for op add\r\nINFO:compile_engine:Use implementation injective.cpu for op add\r\nINFO:compile_engine:Use implementation injective.cpu for op sqrt\r\nINFO:compile_engine:Use implementation injective.cpu for op divide\r\nINFO:compile_engine:Use implementation injective.cpu for op multiply\r\nINFO:compile_engine:Use implementation injective.cpu for op expand_dims\r\nINFO:compile_engine:Use implementation injective.cpu for op negative\r\nINFO:compile_engine:Use implementation injective.cpu for op add\r\nINFO:compile_engine:Use implementation injective.cpu for op add\r\nINFO:compile_engine:Use implementation injective.cpu for op sqrt\r\nINFO:compile_engine:Use implementation injective.cpu for op divide\r\nINFO:compile_engine:Use implementation injective.cpu for op multiply\r\nINFO:compile_engine:Use implementation injective.cpu for op expand_dims\r\nINFO:compile_engine:Use implementation injective.cpu for op negative\r\nINFO:compile_engine:Use implementation injective.cpu for op add\r\nINFO:compile_engine:Use implementation injective.cpu for op add\r\nINFO:compile_engine:Use implementation injective.cpu for op sqrt\r\nINFO:compile_engine:Use implementation injective.cpu for op divide\r\nINFO:compile_engine:Use implementation injective.cpu for op multiply\r\nINFO:compile_engine:Use implementation injective.cpu for op expand_dims\r\nINFO:compile_engine:Use implementation injective.cpu for op negative\r\nINFO:compile_engine:Use implementation injective.cpu for op add\r\nINFO:compile_engine:Use implementation injective.cpu for op add\r\nINFO:compile_engine:Use implementation injective.cpu for op sqrt\r\nINFO:compile_engine:Use implementation injective.cpu for op divide\r\nINFO:compile_engine:Use implementation injective.cpu for op multiply\r\nINFO:compile_engine:Use implementation injective.cpu for op expand_dims\r\nINFO:compile_engine:Use implementation injective.cpu for op negative\r\nINFO:compile_engine:Use implementation injective.cpu for op add\r\nINFO:compile_engine:Use implementation injective.cpu for op add\r\nINFO:compile_engine:Use implementation injective.cpu for op sqrt\r\nINFO:compile_engine:Use implementation injective.cpu for op divide\r\nINFO:compile_engine:Use implementation injective.cpu for op multiply\r\nINFO:compile_engine:Use implementation injective.cpu for op expand_dims\r\nINFO:compile_engine:Use implementation injective.cpu for op negative\r\nINFO:compile_engine:Use implementation injective.cpu for op add\r\nINFO:compile_engine:Use implementation injective.cpu for op squeeze\r\nINFO:compile_engine:Use implementation injective.cpu for op expand_dims\r\nINFO:compile_engine:Use implementation injective.cpu for op multiply\r\nINFO:compile_engine:Use implementation injective.cpu for op multiply\r\nINFO:compile_engine:Use implementation injective.cpu for op squeeze\r\nINFO:compile_engine:Use implementation injective.cpu for op expand_dims\r\nINFO:compile_engine:Use implementation injective.cpu for op multiply\r\nINFO:compile_engine:Use implementation injective.cpu for op multiply\r\nINFO:compile_engine:Use implementation injective.cpu for op squeeze\r\nINFO:compile_engine:Use implementation injective.cpu for op expand_dims\r\nINFO:compile_engine:Use implementation injective.cpu for op multiply\r\nINFO:compile_engine:Use implementation injective.cpu for op multiply\r\nINFO:compile_engine:Use implementation injective.cpu for op multiply\r\nINFO:compile_engine:Use implementation injective.cpu for op squeeze\r\nINFO:compile_engine:Use implementation injective.cpu for op expand_dims\r\nINFO:compile_engine:Use implementation injective.cpu for op multiply\r\nINFO:compile_engine:Use implementation injective.cpu for op multiply\r\nINFO:compile_engine:Use implementation injective.cpu for op multiply\r\nINFO:compile_engine:Use implementation injective.cpu for op squeeze\r\nINFO:compile_engine:Use implementation injective.cpu for op expand_dims\r\nINFO:compile_engine:Use implementation injective.cpu for op multiply\r\nINFO:compile_engine:Use implementation injective.cpu for op multiply\r\nINFO:compile_engine:Use implementation injective.cpu for op multiply\r\nINFO:compile_engine:Use implementation injective.cpu for op squeeze\r\nINFO:compile_engine:Use implementation injective.cpu for op expand_dims\r\nINFO:compile_engine:Use implementation injective.cpu for op multiply\r\nINFO:compile_engine:Use implementation injective.cpu for op multiply\r\nINFO:compile_engine:Use implementation injective.cpu for op multiply\r\nWARNING:autotvm:Cannot find config for target=llvm --system-lib, workload=('conv2d_NCHWc.x86', ('TENSOR', (1, 3, 224, 224), 'float32'), ('TENSOR', (8, 3, 3, 3), 'float32'), (2, 2), (1, 1, 1, 1), (1, 1), 'NCHW', 'NCHW', 'float32'). A fallback configuration is used, which may bring great performance regression.\r\nWARNING:autotvm:Cannot find config for target=llvm --system-lib, workload=('depthwise_conv2d_NCHWc.x86', ('TENSOR', (1, 8, 112, 112), 'float32'), ('TENSOR', (8, 1, 3, 3), 'float32'), (1, 1), (1, 1, 1, 1), (1, 1), 'NCHW', 'NCHW', 'float32'). A fallback configuration is used, which may bring great performance regression.\r\nWARNING:autotvm:Cannot find config for target=llvm --system-lib, workload=('conv2d_NCHWc.x86', ('TENSOR', (1, 8, 112, 112), 'float32'), ('TENSOR', (16, 8, 1, 1), 'float32'), (1, 1), (0, 0, 0, 0), (1, 1), 'NCHW', 'NCHW', 'float32'). A fallback configuration is used, which may bring great performance regression.\r\nWARNING:autotvm:Cannot find config for target=llvm --system-lib, workload=('depthwise_conv2d_NCHWc.x86', ('TENSOR', (1, 16, 112, 112), 'float32'), ('TENSOR', (16, 1, 3, 3), 'float32'), (2, 2), (1, 1, 1, 1), (1, 1), 'NCHW', 'NCHW', 'float32'). A fallback configuration is used, which may bring great performance regression.\r\nWARNING:autotvm:Cannot find config for target=llvm --system-lib, workload=('conv2d_NCHWc.x86', ('TENSOR', (1, 16, 56, 56), 'float32'), ('TENSOR', (32, 16, 1, 1), 'float32'), (1, 1), (0, 0, 0, 0), (1, 1), 'NCHW', 'NCHW', 'float32'). A fallback configuration is used, which may bring great performance regression.\r\nWARNING:autotvm:Cannot find config for target=llvm --system-lib, workload=('depthwise_conv2d_NCHWc.x86', ('TENSOR', (1, 32, 56, 56), 'float32'), ('TENSOR', (32, 1, 3, 3), 'float32'), (1, 1), (1, 1, 1, 1), (1, 1), 'NCHW', 'NCHW', 'float32'). A fallback configuration is used, which may bring great performance regression.\r\nWARNING:autotvm:Cannot find config for target=llvm --system-lib, workload=('conv2d_NCHWc.x86', ('TENSOR', (1, 32, 56, 56), 'float32'), ('TENSOR', (32, 32, 1, 1), 'float32'), (1, 1), (0, 0, 0, 0), (1, 1), 'NCHW', 'NCHW', 'float32'). A fallback configuration is used, which may bring great performance regression.\r\nWARNING:autotvm:Cannot find config for target=llvm --system-lib, workload=('depthwise_conv2d_NCHWc.x86', ('TENSOR', (1, 32, 56, 56), 'float32'), ('TENSOR', (32, 1, 3, 3), 'float32'), (2, 2), (1, 1, 1, 1), (1, 1), 'NCHW', 'NCHW', 'float32'). A fallback configuration is used, which may bring great performance regression.\r\nWARNING:autotvm:Cannot find config for target=llvm --system-lib, workload=('conv2d_NCHWc.x86', ('TENSOR', (1, 32, 28, 28), 'float32'), ('TENSOR', (64, 32, 1, 1), 'float32'), (1, 1), (0, 0, 0, 0), (1, 1), 'NCHW', 'NCHW', 'float32'). A fallback configuration is used, which may bring great performance regression.\r\nWARNING:autotvm:Cannot find config for target=llvm --system-lib, workload=('depthwise_conv2d_NCHWc.x86', ('TENSOR', (1, 64, 28, 28), 'float32'), ('TENSOR', (64, 1, 3, 3), 'float32'), (1, 1), (1, 1, 1, 1), (1, 1), 'NCHW', 'NCHW', 'float32'). A fallback configuration is used, which may bring great performance regression.\r\nWARNING:autotvm:Cannot find config for target=llvm --system-lib, workload=('conv2d_NCHWc.x86', ('TENSOR', (1, 64, 28, 28), 'float32'), ('TENSOR', (64, 64, 1, 1), 'float32'), (1, 1), (0, 0, 0, 0), (1, 1), 'NCHW', 'NCHW', 'float32'). A fallback configuration is used, which may bring great performance regression.\r\nWARNING:autotvm:Cannot find config for target=llvm --system-lib, workload=('depthwise_conv2d_NCHWc.x86', ('TENSOR', (1, 64, 28, 28), 'float32'), ('TENSOR', (64, 1, 3, 3), 'float32'), (2, 2), (1, 1, 1, 1), (1, 1), 'NCHW', 'NCHW', 'float32'). A fallback configuration is used, which may bring great performance regression.\r\nWARNING:autotvm:Cannot find config for target=llvm --system-lib, workload=('conv2d_NCHWc.x86', ('TENSOR', (1, 64, 14, 14), 'float32'), ('TENSOR', (128, 64, 1, 1), 'float32'), (1, 1), (0, 0, 0, 0), (1, 1), 'NCHW', 'NCHW', 'float32'). A fallback configuration is used, which may bring great performance regression.\r\nWARNING:autotvm:Cannot find config for target=llvm --system-lib, workload=('depthwise_conv2d_NCHWc.x86', ('TENSOR', (1, 128, 14, 14), 'float32'), ('TENSOR', (128, 1, 3, 3), 'float32'), (1, 1), (1, 1, 1, 1), (1, 1), 'NCHW', 'NCHW', 'float32'). A fallback configuration is used, which may bring great performance regression.\r\nWARNING:autotvm:Cannot find config for target=llvm --system-lib, workload=('conv2d_NCHWc.x86', ('TENSOR', (1, 128, 14, 14), 'float32'), ('TENSOR', (128, 128, 1, 1), 'float32'), (1, 1), (0, 0, 0, 0), (1, 1), 'NCHW', 'NCHW', 'float32'). A fallback configuration is used, which may bring great performance regression.\r\nWARNING:autotvm:Cannot find config for target=llvm --system-lib, workload=('depthwise_conv2d_NCHWc.x86', ('TENSOR', (1, 128, 14, 14), 'float32'), ('TENSOR', (128, 1, 3, 3), 'float32'), (2, 2), (1, 1, 1, 1), (1, 1), 'NCHW', 'NCHW', 'float32'). A fallback configuration is used, which may bring great performance regression.\r\nWARNING:autotvm:Cannot find config for target=llvm --system-lib, workload=('conv2d_NCHWc.x86', ('TENSOR', (1, 128, 7, 7), 'float32'), ('TENSOR', (256, 128, 1, 1), 'float32'), (1, 1), (0, 0, 0, 0), (1, 1), 'NCHW', 'NCHW', 'float32'). A fallback configuration is used, which may bring great performance regression.\r\nWARNING:autotvm:Cannot find config for target=llvm --system-lib, workload=('depthwise_conv2d_NCHWc.x86', ('TENSOR', (1, 256, 7, 7), 'float32'), ('TENSOR', (256, 1, 3, 3), 'float32'), (1, 1), (1, 1, 1, 1), (1, 1), 'NCHW', 'NCHW', 'float32'). A fallback configuration is used, which may bring great performance regression.\r\nWARNING:autotvm:Cannot find config for target=llvm --system-lib, workload=('conv2d_NCHWc.x86', ('TENSOR', (1, 256, 7, 7), 'float32'), ('TENSOR', (256, 256, 1, 1), 'float32'), (1, 1), (0, 0, 0, 0), (1, 1), 'NCHW', 'NCHW', 'float32'). A fallback configuration is used, which may bring great performance regression.\r\nINFO:compile_engine:Use implementation injective.cpu for op layout_transform\r\nINFO:compile_engine:Use implementation injective.cpu for op expand_dims\r\nINFO:compile_engine:Use implementation injective.cpu for op layout_transform\r\nINFO:compile_engine:Use implementation injective.cpu for op layout_transform\r\nINFO:compile_engine:Use implementation injective.cpu for op layout_transform\r\nINFO:compile_engine:Use implementation injective.cpu for op expand_dims\r\nINFO:compile_engine:Use implementation injective.cpu for op layout_transform\r\nINFO:compile_engine:Use implementation injective.cpu for op layout_transform\r\nINFO:compile_engine:Use implementation injective.cpu for op layout_transform\r\nINFO:compile_engine:Use implementation injective.cpu for op expand_dims\r\nINFO:compile_engine:Use implementation injective.cpu for op layout_transform\r\nINFO:compile_engine:Use implementation injective.cpu for op layout_transform\r\nINFO:compile_engine:Use implementation injective.cpu for op layout_transform\r\nINFO:compile_engine:Use implementation injective.cpu for op layout_transform\r\nINFO:compile_engine:Use implementation injective.cpu for op expand_dims\r\nINFO:compile_engine:Use implementation injective.cpu for op layout_transform\r\nINFO:compile_engine:Use implementation injective.cpu for op layout_transform\r\nINFO:compile_engine:Use implementation injective.cpu for op layout_transform\r\nINFO:compile_engine:Use implementation injective.cpu for op layout_transform\r\nINFO:compile_engine:Use implementation injective.cpu for op expand_dims\r\nINFO:compile_engine:Use implementation injective.cpu for op layout_transform\r\nINFO:compile_engine:Use implementation injective.cpu for op layout_transform\r\nINFO:compile_engine:Use implementation injective.cpu for op layout_transform\r\nINFO:compile_engine:Use implementation injective.cpu for op layout_transform\r\nINFO:compile_engine:Use implementation injective.cpu for op expand_dims\r\nINFO:compile_engine:Use implementation injective.cpu for op layout_transform\r\nINFO:compile_engine:Use implementation injective.cpu for op layout_transform\r\nINFO:compile_engine:Use implementation injective.cpu for op layout_transform\r\nINFO:compile_engine:Use implementation softmax.cpu for op nn.softmax\r\nWARNING:autotvm:Cannot find config for target=llvm --system-lib, workload=('dense_nopack.x86', ('TENSOR', (1, 256), 'float32'), ('TENSOR', (1000, 256), 'float32'), None, 'float32'). A fallback configuration is used, which may bring great performance regression.\r\nINFO:compile_engine:Use implementation dense_nopack.x86 for op nn.dense\r\nINFO:compile_engine:Use implementation injective.cpu for op add\r\nINFO:compile_engine:Use implementation injective.cpu for op layout_transform\r\nINFO:compile_engine:Use implementation injective.cpu for op nn.batch_flatten\r\nINFO:compile_engine:Use implementation injective.cpu for op nn.batch_flatten\r\nINFO:compile_engine:Use implementation adaptive_pool.cpu for op nn.global_avg_pool2d\r\nINFO:compile_engine:Use implementation conv2d_NCHWc.x86 for op nn.contrib_conv2d_NCHWc\r\nINFO:compile_engine:Use implementation injective.cpu for op add\r\nINFO:compile_engine:Use implementation injective.cpu for op nn.relu\r\nINFO:compile_engine:Use implementation depthwise_conv2d_NCHWc.x86 for op nn.contrib_depthwise_conv2d_NCHWc\r\nINFO:compile_engine:Use implementation injective.cpu for op add\r\nINFO:compile_engine:Use implementation injective.cpu for op nn.relu\r\nINFO:compile_engine:Use implementation conv2d_NCHWc.x86 for op nn.contrib_conv2d_NCHWc\r\nINFO:compile_engine:Use implementation injective.cpu for op add\r\nINFO:compile_engine:Use implementation injective.cpu for op nn.relu\r\nINFO:compile_engine:Use implementation depthwise_conv2d_NCHWc.x86 for op nn.contrib_depthwise_conv2d_NCHWc\r\nINFO:compile_engine:Use implementation injective.cpu for op add\r\nINFO:compile_engine:Use implementation injective.cpu for op nn.relu\r\nINFO:compile_engine:Use implementation conv2d_NCHWc.x86 for op nn.contrib_conv2d_NCHWc\r\nINFO:compile_engine:Use implementation injective.cpu for op add\r\nINFO:compile_engine:Use implementation injective.cpu for op nn.relu\r\nINFO:compile_engine:Use implementation depthwise_conv2d_NCHWc.x86 for op nn.contrib_depthwise_conv2d_NCHWc\r\nINFO:compile_engine:Use implementation injective.cpu for op add\r\nINFO:compile_engine:Use implementation injective.cpu for op nn.relu\r\nINFO:compile_engine:Use implementation conv2d_NCHWc.x86 for op nn.contrib_conv2d_NCHWc\r\nINFO:compile_engine:Use implementation injective.cpu for op add\r\nINFO:compile_engine:Use implementation injective.cpu for op nn.relu\r\nINFO:compile_engine:Use implementation depthwise_conv2d_NCHWc.x86 for op nn.contrib_depthwise_conv2d_NCHWc\r\nINFO:compile_engine:Use implementation injective.cpu for op add\r\nINFO:compile_engine:Use implementation injective.cpu for op nn.relu\r\nINFO:compile_engine:Use implementation conv2d_NCHWc.x86 for op nn.contrib_conv2d_NCHWc\r\nINFO:compile_engine:Use implementation injective.cpu for op add\r\nINFO:compile_engine:Use implementation injective.cpu for op nn.relu\r\nINFO:compile_engine:Use implementation depthwise_conv2d_NCHWc.x86 for op nn.contrib_depthwise_conv2d_NCHWc\r\nINFO:compile_engine:Use implementation injective.cpu for op add\r\nINFO:compile_engine:Use implementation injective.cpu for op nn.relu\r\nINFO:compile_engine:Use implementation conv2d_NCHWc.x86 for op nn.contrib_conv2d_NCHWc\r\nINFO:compile_engine:Use implementation injective.cpu for op add\r\nINFO:compile_engine:Use implementation injective.cpu for op nn.relu\r\nINFO:compile_engine:Use implementation depthwise_conv2d_NCHWc.x86 for op nn.contrib_depthwise_conv2d_NCHWc\r\nINFO:compile_engine:Use implementation injective.cpu for op add\r\nINFO:compile_engine:Use implementation injective.cpu for op nn.relu\r\nINFO:compile_engine:Use implementation conv2d_NCHWc.x86 for op nn.contrib_conv2d_NCHWc\r\nINFO:compile_engine:Use implementation injective.cpu for op add\r\nINFO:compile_engine:Use implementation injective.cpu for op nn.relu\r\nINFO:compile_engine:Use implementation depthwise_conv2d_NCHWc.x86 for op nn.contrib_depthwise_conv2d_NCHWc\r\nINFO:compile_engine:Use implementation injective.cpu for op add\r\nINFO:compile_engine:Use implementation injective.cpu for op nn.relu\r\nINFO:compile_engine:Use implementation conv2d_NCHWc.x86 for op nn.contrib_conv2d_NCHWc\r\nINFO:compile_engine:Use implementation injective.cpu for op add\r\nINFO:compile_engine:Use implementation injective.cpu for op nn.relu\r\nINFO:compile_engine:Use implementation depthwise_conv2d_NCHWc.x86 for op nn.contrib_depthwise_conv2d_NCHWc\r\nINFO:compile_engine:Use implementation injective.cpu for op add\r\nINFO:compile_engine:Use implementation injective.cpu for op nn.relu\r\nINFO:compile_engine:Use implementation conv2d_NCHWc.x86 for op nn.contrib_conv2d_NCHWc\r\nINFO:compile_engine:Use implementation injective.cpu for op add\r\nINFO:compile_engine:Use implementation injective.cpu for op nn.relu\r\nINFO:compile_engine:Use implementation depthwise_conv2d_NCHWc.x86 for op nn.contrib_depthwise_conv2d_NCHWc\r\nINFO:compile_engine:Use implementation injective.cpu for op add\r\nINFO:compile_engine:Use implementation injective.cpu for op nn.relu\r\nINFO:compile_engine:Use implementation conv2d_NCHWc.x86 for op nn.contrib_conv2d_NCHWc\r\nINFO:compile_engine:Use implementation injective.cpu for op add\r\nINFO:compile_engine:Use implementation injective.cpu for op nn.relu\r\nINFO:compile_engine:Use implementation injective.cpu for op layout_transform\r\nDownloading from url https://homes.cs.washington.edu/~moreau/media/vta/cat.jpg to /Users/moreau/Documents/Projects/tvm-misra/apps/bundle_deploy/build/cat.png\r\n...100%, 0.12 MB, 2633 KB/s, 0 seconds passed\r\nx (1, 3, 224, 224)\r\nxxd -i build/graph.json  > build/graph.json.c\r\nxxd -i build/params.bin  > build/params.bin.c\r\ng++ -std=c++14 -O2 -fPIC -I/Users/moreau/Documents/Projects/tvm-misra/include -I/Users/moreau/Documents/Projects/tvm-misra/3rdparty/dmlc-core/include -I/Users/moreau/Documents/Projects/tvm-misra/3rdparty/dlpack/include -o build/demo  demo.cc -ldl\r\ng++ -shared -std=c++14 -O2 -fPIC -I/Users/moreau/Documents/Projects/tvm-misra/include -I/Users/moreau/Documents/Projects/tvm-misra/3rdparty/dmlc-core/include -I/Users/moreau/Documents/Projects/tvm-misra/3rdparty/dlpack/include -fvisibility=hidden -o build/bundle.so  bundle.cc runtime.cc build/model.o -pthread\r\ngcc -shared -std=c99 -O2 -fPIC -I/Users/moreau/Documents/Projects/tvm-misra/include -I/Users/moreau/Documents/Projects/tvm-misra/3rdparty/dmlc-core/include -I/Users/moreau/Documents/Projects/tvm-misra/3rdparty/dlpack/include -fvisibility=hidden -o build/bundle_c.so  bundle.c runtime.c build/model.o -pthread\r\nIn file included from runtime.c:47:\r\nIn file included from ./../../src/runtime/crt/crt_runtime_api.c:28:\r\nIn file included from ./../../src/runtime/crt/graph_runtime.h:31:\r\n./../../src/runtime/crt/packed_func.h:105:3: warning: redefinition of typedef 'TVMPackedFunc' is a C11 feature [-Wtypedef-redefinition]\r\n} TVMPackedFunc;\r\n  ^\r\n./../../src/runtime/crt/module.h:31:30: note: previous definition is here\r\ntypedef struct TVMPackedFunc TVMPackedFunc;\r\n                             ^\r\nIn file included from runtime.c:47:\r\n./../../src/runtime/crt/crt_runtime_api.c:82:12: warning: expression result unused [-Wunused-value]\r\n    status -1;\r\n    ~~~~~~ ^~\r\nIn file included from runtime.c:48:\r\n./../../src/runtime/crt/crt_backend_api.c:55:82: warning: format string is not a string literal (potentially insecure) [-Wformat-security]\r\n  snprintf(g_fexecs[g_fexecs_count].name, sizeof(g_fexecs[g_fexecs_count].name), name);\r\n                                                                                 ^~~~\r\n/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/secure/_stdio.h:57:62: note: expanded from macro 'snprintf'\r\n  __builtin___snprintf_chk (str, len, 0, __darwin_obsz(str), __VA_ARGS__)\r\n                                                             ^~~~~~~~~~~\r\n./../../src/runtime/crt/crt_backend_api.c:55:82: note: treat the string as an argument to avoid this\r\n  snprintf(g_fexecs[g_fexecs_count].name, sizeof(g_fexecs[g_fexecs_count].name), name);\r\n                                                                                 ^\r\n                                                                                 \"%s\",\r\n/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/secure/_stdio.h:57:62: note: expanded from macro 'snprintf'\r\n  __builtin___snprintf_chk (str, len, 0, __darwin_obsz(str), __VA_ARGS__)\r\n                                                             ^\r\nIn file included from runtime.c:49:\r\n./../../src/runtime/crt/graph_runtime.c:542:84: warning: format specifies type 'int' but the argument has type 'size_t' (aka 'unsigned long') [-Wformat]\r\n      fprintf(stderr, \"fail to create for node with idx=%d, storage_id=%d\\n\", idx, storage_id);\r\n                                                                       ~~          ^~~~~~~~~~\r\n                                                                       %zu\r\nIn file included from runtime.c:51:\r\n./../../src/runtime/crt/ndarray.c:95:13: warning: format specifies type 'long' but the argument has type 'int64_t' (aka 'long long') [-Wformat]\r\n            data_byte_size, (num_elems * elem_bytes));\r\n            ^~~~~~~~~~~~~~\r\n./../../src/runtime/crt/ndarray.c:95:29: warning: format specifies type 'long' but the argument has type 'long long' [-Wformat]\r\n            data_byte_size, (num_elems * elem_bytes));\r\n                            ^~~~~~~~~~~~~~~~~~~~~~~~\r\n6 warnings generated.\r\nbuild/demo build/bundle.so build/cat.bin\r\nThe maximum position in output vector is: 278, with max-value 0.613490.\r\ntiming: 5.07 ms (create), 0.74 ms (set_input), 3.60 ms (run), 0.01 ms (get_output), 0.10 ms (destroy)\r\nbuild/demo build/bundle_c.so build/cat.bin\r\nmake: *** [demo] Illegal instruction: 4```","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595427659/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595428050","html_url":"https://github.com/apache/tvm/pull/3934#issuecomment-595428050","issue_url":"https://api.github.com/repos/apache/tvm/issues/3934","id":595428050,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTQyODA1MA==","user":{"login":"tmoreau89","id":5974488,"node_id":"MDQ6VXNlcjU5NzQ0ODg=","avatar_url":"https://avatars.githubusercontent.com/u/5974488?v=4","gravatar_id":"","url":"https://api.github.com/users/tmoreau89","html_url":"https://github.com/tmoreau89","followers_url":"https://api.github.com/users/tmoreau89/followers","following_url":"https://api.github.com/users/tmoreau89/following{/other_user}","gists_url":"https://api.github.com/users/tmoreau89/gists{/gist_id}","starred_url":"https://api.github.com/users/tmoreau89/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tmoreau89/subscriptions","organizations_url":"https://api.github.com/users/tmoreau89/orgs","repos_url":"https://api.github.com/users/tmoreau89/repos","events_url":"https://api.github.com/users/tmoreau89/events{/privacy}","received_events_url":"https://api.github.com/users/tmoreau89/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-05T20:20:45Z","updated_at":"2020-03-05T20:20:45Z","author_association":"CONTRIBUTOR","body":"Also @u99127 and @weberlo may be interested in this PR","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595428050/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595428966","html_url":"https://github.com/apache/tvm/pull/4988#issuecomment-595428966","issue_url":"https://api.github.com/repos/apache/tvm/issues/4988","id":595428966,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTQyODk2Ng==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-05T20:23:03Z","updated_at":"2020-03-05T20:23:03Z","author_association":"MEMBER","body":"@zhiics seems this change breaks the master ci, please look into it","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595428966/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595431009","html_url":"https://github.com/apache/tvm/pull/4992#issuecomment-595431009","issue_url":"https://api.github.com/repos/apache/tvm/issues/4992","id":595431009,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTQzMTAwOQ==","user":{"login":"masahi","id":1776403,"node_id":"MDQ6VXNlcjE3NzY0MDM=","avatar_url":"https://avatars.githubusercontent.com/u/1776403?v=4","gravatar_id":"","url":"https://api.github.com/users/masahi","html_url":"https://github.com/masahi","followers_url":"https://api.github.com/users/masahi/followers","following_url":"https://api.github.com/users/masahi/following{/other_user}","gists_url":"https://api.github.com/users/masahi/gists{/gist_id}","starred_url":"https://api.github.com/users/masahi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/masahi/subscriptions","organizations_url":"https://api.github.com/users/masahi/orgs","repos_url":"https://api.github.com/users/masahi/repos","events_url":"https://api.github.com/users/masahi/events{/privacy}","received_events_url":"https://api.github.com/users/masahi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-05T20:28:16Z","updated_at":"2020-03-05T20:28:16Z","author_association":"MEMBER","body":"Let's wait until the github bug is fixed","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595431009/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595436882","html_url":"https://github.com/apache/tvm/pull/4988#issuecomment-595436882","issue_url":"https://api.github.com/repos/apache/tvm/issues/4988","id":595436882,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTQzNjg4Mg==","user":{"login":"zhiics","id":5145158,"node_id":"MDQ6VXNlcjUxNDUxNTg=","avatar_url":"https://avatars.githubusercontent.com/u/5145158?v=4","gravatar_id":"","url":"https://api.github.com/users/zhiics","html_url":"https://github.com/zhiics","followers_url":"https://api.github.com/users/zhiics/followers","following_url":"https://api.github.com/users/zhiics/following{/other_user}","gists_url":"https://api.github.com/users/zhiics/gists{/gist_id}","starred_url":"https://api.github.com/users/zhiics/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zhiics/subscriptions","organizations_url":"https://api.github.com/users/zhiics/orgs","repos_url":"https://api.github.com/users/zhiics/repos","events_url":"https://api.github.com/users/zhiics/events{/privacy}","received_events_url":"https://api.github.com/users/zhiics/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-05T20:42:44Z","updated_at":"2020-03-05T20:42:44Z","author_association":"MEMBER","body":"Okay. I will. Thanks for reminding. ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595436882/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595457431","html_url":"https://github.com/apache/tvm/pull/4988#issuecomment-595457431","issue_url":"https://api.github.com/repos/apache/tvm/issues/4988","id":595457431,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTQ1NzQzMQ==","user":{"login":"zhiics","id":5145158,"node_id":"MDQ6VXNlcjUxNDUxNTg=","avatar_url":"https://avatars.githubusercontent.com/u/5145158?v=4","gravatar_id":"","url":"https://api.github.com/users/zhiics","html_url":"https://github.com/zhiics","followers_url":"https://api.github.com/users/zhiics/followers","following_url":"https://api.github.com/users/zhiics/following{/other_user}","gists_url":"https://api.github.com/users/zhiics/gists{/gist_id}","starred_url":"https://api.github.com/users/zhiics/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zhiics/subscriptions","organizations_url":"https://api.github.com/users/zhiics/orgs","repos_url":"https://api.github.com/users/zhiics/repos","events_url":"https://api.github.com/users/zhiics/events{/privacy}","received_events_url":"https://api.github.com/users/zhiics/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-05T21:31:01Z","updated_at":"2020-03-05T21:31:01Z","author_association":"MEMBER","body":"hmm, this actually revealed that the gcn tutorial didn't pass mod. We need to bind params when adding the function to the mod. Interestingly, it didn't fail for the last two runs before merging. #4994 ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595457431/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595457508","html_url":"https://github.com/apache/tvm/pull/4986#issuecomment-595457508","issue_url":"https://api.github.com/repos/apache/tvm/issues/4986","id":595457508,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTQ1NzUwOA==","user":{"login":"pasqoc","id":61704028,"node_id":"MDQ6VXNlcjYxNzA0MDI4","avatar_url":"https://avatars.githubusercontent.com/u/61704028?v=4","gravatar_id":"","url":"https://api.github.com/users/pasqoc","html_url":"https://github.com/pasqoc","followers_url":"https://api.github.com/users/pasqoc/followers","following_url":"https://api.github.com/users/pasqoc/following{/other_user}","gists_url":"https://api.github.com/users/pasqoc/gists{/gist_id}","starred_url":"https://api.github.com/users/pasqoc/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pasqoc/subscriptions","organizations_url":"https://api.github.com/users/pasqoc/orgs","repos_url":"https://api.github.com/users/pasqoc/repos","events_url":"https://api.github.com/users/pasqoc/events{/privacy}","received_events_url":"https://api.github.com/users/pasqoc/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-05T21:31:12Z","updated_at":"2020-03-05T21:31:12Z","author_association":"CONTRIBUTOR","body":"General question.\r\nI see the CI jenkins merge-hook build fails for reasons other than the PR itself (not right now, I need to change include order to pass lint after the last commit).\r\nIs it a requirement to have this build pass? ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595457508/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595474164","html_url":"https://github.com/apache/tvm/pull/4986#issuecomment-595474164","issue_url":"https://api.github.com/repos/apache/tvm/issues/4986","id":595474164,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTQ3NDE2NA==","user":{"login":"tmoreau89","id":5974488,"node_id":"MDQ6VXNlcjU5NzQ0ODg=","avatar_url":"https://avatars.githubusercontent.com/u/5974488?v=4","gravatar_id":"","url":"https://api.github.com/users/tmoreau89","html_url":"https://github.com/tmoreau89","followers_url":"https://api.github.com/users/tmoreau89/followers","following_url":"https://api.github.com/users/tmoreau89/following{/other_user}","gists_url":"https://api.github.com/users/tmoreau89/gists{/gist_id}","starred_url":"https://api.github.com/users/tmoreau89/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tmoreau89/subscriptions","organizations_url":"https://api.github.com/users/tmoreau89/orgs","repos_url":"https://api.github.com/users/tmoreau89/repos","events_url":"https://api.github.com/users/tmoreau89/events{/privacy}","received_events_url":"https://api.github.com/users/tmoreau89/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-05T22:14:20Z","updated_at":"2020-03-05T22:14:20Z","author_association":"CONTRIBUTOR","body":"It looks like at the moment the cpp lint test is failing: https://ci.tvm.ai/blue/organizations/jenkins/tvm/detail/PR-4986/5/pipeline\r\n\r\nYou may have to go in and address the lint errors in `vta/src/de10nano/de10nano_mgr.h`","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595474164/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595486181","html_url":"https://github.com/apache/tvm/pull/4995#issuecomment-595486181","issue_url":"https://api.github.com/repos/apache/tvm/issues/4995","id":595486181,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTQ4NjE4MQ==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-05T22:50:30Z","updated_at":"2020-03-05T22:50:30Z","author_association":"MEMBER","body":"The main reason to adopt the RPC runner is for the process isolation -- because we cannot guarantee that the local runner won't crash and as a result crash the AutoTVM process itself. \r\n\r\nIt might be useful though to have a persistent RPC server over the tuning process ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595486181/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595489617","html_url":"https://github.com/apache/tvm/pull/4996#issuecomment-595489617","issue_url":"https://api.github.com/repos/apache/tvm/issues/4996","id":595489617,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTQ4OTYxNw==","user":{"login":"zhiics","id":5145158,"node_id":"MDQ6VXNlcjUxNDUxNTg=","avatar_url":"https://avatars.githubusercontent.com/u/5145158?v=4","gravatar_id":"","url":"https://api.github.com/users/zhiics","html_url":"https://github.com/zhiics","followers_url":"https://api.github.com/users/zhiics/followers","following_url":"https://api.github.com/users/zhiics/following{/other_user}","gists_url":"https://api.github.com/users/zhiics/gists{/gist_id}","starred_url":"https://api.github.com/users/zhiics/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zhiics/subscriptions","organizations_url":"https://api.github.com/users/zhiics/orgs","repos_url":"https://api.github.com/users/zhiics/repos","events_url":"https://api.github.com/users/zhiics/events{/privacy}","received_events_url":"https://api.github.com/users/zhiics/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-05T23:01:56Z","updated_at":"2020-03-05T23:01:56Z","author_association":"MEMBER","body":"cc @comaniac @mbaret @soiferj @tqchen @icemelon9 @masahi ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595489617/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595502268","html_url":"https://github.com/apache/tvm/pull/4986#issuecomment-595502268","issue_url":"https://api.github.com/repos/apache/tvm/issues/4986","id":595502268,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTUwMjI2OA==","user":{"login":"pasqoc","id":61704028,"node_id":"MDQ6VXNlcjYxNzA0MDI4","avatar_url":"https://avatars.githubusercontent.com/u/61704028?v=4","gravatar_id":"","url":"https://api.github.com/users/pasqoc","html_url":"https://github.com/pasqoc","followers_url":"https://api.github.com/users/pasqoc/followers","following_url":"https://api.github.com/users/pasqoc/following{/other_user}","gists_url":"https://api.github.com/users/pasqoc/gists{/gist_id}","starred_url":"https://api.github.com/users/pasqoc/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pasqoc/subscriptions","organizations_url":"https://api.github.com/users/pasqoc/orgs","repos_url":"https://api.github.com/users/pasqoc/repos","events_url":"https://api.github.com/users/pasqoc/events{/privacy}","received_events_url":"https://api.github.com/users/pasqoc/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-05T23:47:02Z","updated_at":"2020-03-05T23:47:02Z","author_association":"CONTRIBUTOR","body":"Right now the build is failing in runtime.cc, not sure why.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595502268/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595503657","html_url":"https://github.com/apache/tvm/pull/4995#issuecomment-595503657","issue_url":"https://api.github.com/repos/apache/tvm/issues/4995","id":595503657,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTUwMzY1Nw==","user":{"login":"comaniac","id":8262694,"node_id":"MDQ6VXNlcjgyNjI2OTQ=","avatar_url":"https://avatars.githubusercontent.com/u/8262694?v=4","gravatar_id":"","url":"https://api.github.com/users/comaniac","html_url":"https://github.com/comaniac","followers_url":"https://api.github.com/users/comaniac/followers","following_url":"https://api.github.com/users/comaniac/following{/other_user}","gists_url":"https://api.github.com/users/comaniac/gists{/gist_id}","starred_url":"https://api.github.com/users/comaniac/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/comaniac/subscriptions","organizations_url":"https://api.github.com/users/comaniac/orgs","repos_url":"https://api.github.com/users/comaniac/repos","events_url":"https://api.github.com/users/comaniac/events{/privacy}","received_events_url":"https://api.github.com/users/comaniac/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-05T23:52:34Z","updated_at":"2020-03-05T23:52:34Z","author_association":"CONTRIBUTOR","body":"> The main reason to adopt the RPC runner is for the process isolation -- because we cannot guarantee that the local runner won't crash and as a result crash the AutoTVM process itself.\r\n> \r\n> It might be useful though to have a persistent RPC server over the tuning process\r\n\r\nWhile I do agree with you that we should make sure the failure of a measurement won't crash the tuning process itself, I still don't think local RPC is the only and the best solution when considering its overhead and reliability. For example, we can use a separate thread to run `time_evaluator` locally and catch the exception if failed, just like what we did for task extraction.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595503657/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595504375","html_url":"https://github.com/apache/tvm/pull/4986#issuecomment-595504375","issue_url":"https://api.github.com/repos/apache/tvm/issues/4986","id":595504375,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTUwNDM3NQ==","user":{"login":"pasqoc","id":61704028,"node_id":"MDQ6VXNlcjYxNzA0MDI4","avatar_url":"https://avatars.githubusercontent.com/u/61704028?v=4","gravatar_id":"","url":"https://api.github.com/users/pasqoc","html_url":"https://github.com/pasqoc","followers_url":"https://api.github.com/users/pasqoc/followers","following_url":"https://api.github.com/users/pasqoc/following{/other_user}","gists_url":"https://api.github.com/users/pasqoc/gists{/gist_id}","starred_url":"https://api.github.com/users/pasqoc/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pasqoc/subscriptions","organizations_url":"https://api.github.com/users/pasqoc/orgs","repos_url":"https://api.github.com/users/pasqoc/repos","events_url":"https://api.github.com/users/pasqoc/events{/privacy}","received_events_url":"https://api.github.com/users/pasqoc/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-05T23:55:18Z","updated_at":"2020-03-05T23:55:18Z","author_association":"CONTRIBUTOR","body":"Any chance the docker image maybe using python2 instead of python3.\r\nNot running docker so not able to reproduce, but it seems the f string is not recognized.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595504375/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595508666","html_url":"https://github.com/apache/tvm/pull/4995#issuecomment-595508666","issue_url":"https://api.github.com/repos/apache/tvm/issues/4995","id":595508666,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTUwODY2Ng==","user":{"login":"merrymercy","id":15100009,"node_id":"MDQ6VXNlcjE1MTAwMDA5","avatar_url":"https://avatars.githubusercontent.com/u/15100009?v=4","gravatar_id":"","url":"https://api.github.com/users/merrymercy","html_url":"https://github.com/merrymercy","followers_url":"https://api.github.com/users/merrymercy/followers","following_url":"https://api.github.com/users/merrymercy/following{/other_user}","gists_url":"https://api.github.com/users/merrymercy/gists{/gist_id}","starred_url":"https://api.github.com/users/merrymercy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/merrymercy/subscriptions","organizations_url":"https://api.github.com/users/merrymercy/orgs","repos_url":"https://api.github.com/users/merrymercy/repos","events_url":"https://api.github.com/users/merrymercy/events{/privacy}","received_events_url":"https://api.github.com/users/merrymercy/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-06T00:10:37Z","updated_at":"2020-03-06T00:10:37Z","author_association":"MEMBER","body":"Did you test GPU tuning? There are runtime issues like we cannot do fork after initializing CUDA runtime","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595508666/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595512579","html_url":"https://github.com/apache/tvm/pull/4995#issuecomment-595512579","issue_url":"https://api.github.com/repos/apache/tvm/issues/4995","id":595512579,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTUxMjU3OQ==","user":{"login":"comaniac","id":8262694,"node_id":"MDQ6VXNlcjgyNjI2OTQ=","avatar_url":"https://avatars.githubusercontent.com/u/8262694?v=4","gravatar_id":"","url":"https://api.github.com/users/comaniac","html_url":"https://github.com/comaniac","followers_url":"https://api.github.com/users/comaniac/followers","following_url":"https://api.github.com/users/comaniac/following{/other_user}","gists_url":"https://api.github.com/users/comaniac/gists{/gist_id}","starred_url":"https://api.github.com/users/comaniac/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/comaniac/subscriptions","organizations_url":"https://api.github.com/users/comaniac/orgs","repos_url":"https://api.github.com/users/comaniac/repos","events_url":"https://api.github.com/users/comaniac/events{/privacy}","received_events_url":"https://api.github.com/users/comaniac/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-06T00:24:08Z","updated_at":"2020-03-06T00:24:08Z","author_association":"CONTRIBUTOR","body":"> Did you test GPU tuning? There are runtime issues like we cannot do fork after initializing CUDA runtime\r\n\r\nThat's a good point. I'll find a GPU instance to test it.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595512579/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595512678","html_url":"https://github.com/apache/tvm/pull/4986#issuecomment-595512678","issue_url":"https://api.github.com/repos/apache/tvm/issues/4986","id":595512678,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTUxMjY3OA==","user":{"login":"vegaluisjose","id":2478335,"node_id":"MDQ6VXNlcjI0NzgzMzU=","avatar_url":"https://avatars.githubusercontent.com/u/2478335?v=4","gravatar_id":"","url":"https://api.github.com/users/vegaluisjose","html_url":"https://github.com/vegaluisjose","followers_url":"https://api.github.com/users/vegaluisjose/followers","following_url":"https://api.github.com/users/vegaluisjose/following{/other_user}","gists_url":"https://api.github.com/users/vegaluisjose/gists{/gist_id}","starred_url":"https://api.github.com/users/vegaluisjose/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vegaluisjose/subscriptions","organizations_url":"https://api.github.com/users/vegaluisjose/orgs","repos_url":"https://api.github.com/users/vegaluisjose/repos","events_url":"https://api.github.com/users/vegaluisjose/events{/privacy}","received_events_url":"https://api.github.com/users/vegaluisjose/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-06T00:24:29Z","updated_at":"2020-03-06T00:24:29Z","author_association":"MEMBER","body":"I was running into the same issue with the `f-strings` in your code. I think the problem is that we are running `python2` in the [cmake](https://github.com/apache/incubator-tvm/blob/master/cmake/modules/VTA.cmake#L19-L28) maybe @tmoreau89 ?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595512678/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595514049","html_url":"https://github.com/apache/tvm/pull/4986#issuecomment-595514049","issue_url":"https://api.github.com/repos/apache/tvm/issues/4986","id":595514049,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTUxNDA0OQ==","user":{"login":"pasqoc","id":61704028,"node_id":"MDQ6VXNlcjYxNzA0MDI4","avatar_url":"https://avatars.githubusercontent.com/u/61704028?v=4","gravatar_id":"","url":"https://api.github.com/users/pasqoc","html_url":"https://github.com/pasqoc","followers_url":"https://api.github.com/users/pasqoc/followers","following_url":"https://api.github.com/users/pasqoc/following{/other_user}","gists_url":"https://api.github.com/users/pasqoc/gists{/gist_id}","starred_url":"https://api.github.com/users/pasqoc/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pasqoc/subscriptions","organizations_url":"https://api.github.com/users/pasqoc/orgs","repos_url":"https://api.github.com/users/pasqoc/repos","events_url":"https://api.github.com/users/pasqoc/events{/privacy}","received_events_url":"https://api.github.com/users/pasqoc/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-06T00:28:24Z","updated_at":"2020-03-06T00:28:24Z","author_association":"CONTRIBUTOR","body":"Just removed them, but f strings are so much better .....\r\nAny particular reason why python 2 is still used?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595514049/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595516892","html_url":"https://github.com/apache/tvm/pull/4986#issuecomment-595516892","issue_url":"https://api.github.com/repos/apache/tvm/issues/4986","id":595516892,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTUxNjg5Mg==","user":{"login":"vegaluisjose","id":2478335,"node_id":"MDQ6VXNlcjI0NzgzMzU=","avatar_url":"https://avatars.githubusercontent.com/u/2478335?v=4","gravatar_id":"","url":"https://api.github.com/users/vegaluisjose","html_url":"https://github.com/vegaluisjose","followers_url":"https://api.github.com/users/vegaluisjose/followers","following_url":"https://api.github.com/users/vegaluisjose/following{/other_user}","gists_url":"https://api.github.com/users/vegaluisjose/gists{/gist_id}","starred_url":"https://api.github.com/users/vegaluisjose/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vegaluisjose/subscriptions","organizations_url":"https://api.github.com/users/vegaluisjose/orgs","repos_url":"https://api.github.com/users/vegaluisjose/repos","events_url":"https://api.github.com/users/vegaluisjose/events{/privacy}","received_events_url":"https://api.github.com/users/vegaluisjose/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-06T00:38:39Z","updated_at":"2020-03-06T00:38:39Z","author_association":"MEMBER","body":"This is an error on that cmake file actually because everything should be python3 by now. In fact, f-strings are used in other parts of the python codebase. This is a good find.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595516892/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595517463","html_url":"https://github.com/apache/tvm/pull/4986#issuecomment-595517463","issue_url":"https://api.github.com/repos/apache/tvm/issues/4986","id":595517463,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTUxNzQ2Mw==","user":{"login":"pasqoc","id":61704028,"node_id":"MDQ6VXNlcjYxNzA0MDI4","avatar_url":"https://avatars.githubusercontent.com/u/61704028?v=4","gravatar_id":"","url":"https://api.github.com/users/pasqoc","html_url":"https://github.com/pasqoc","followers_url":"https://api.github.com/users/pasqoc/followers","following_url":"https://api.github.com/users/pasqoc/following{/other_user}","gists_url":"https://api.github.com/users/pasqoc/gists{/gist_id}","starred_url":"https://api.github.com/users/pasqoc/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pasqoc/subscriptions","organizations_url":"https://api.github.com/users/pasqoc/orgs","repos_url":"https://api.github.com/users/pasqoc/repos","events_url":"https://api.github.com/users/pasqoc/events{/privacy}","received_events_url":"https://api.github.com/users/pasqoc/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-06T00:40:43Z","updated_at":"2020-03-06T00:40:43Z","author_association":"CONTRIBUTOR","body":"Do you want me to remove python from \r\nfind_program(PYTHON NAMES python python3 python3.6)\r\nin cmake/modules/VTA.cmake?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595517463/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595522233","html_url":"https://github.com/apache/tvm/pull/4986#issuecomment-595522233","issue_url":"https://api.github.com/repos/apache/tvm/issues/4986","id":595522233,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTUyMjIzMw==","user":{"login":"vegaluisjose","id":2478335,"node_id":"MDQ6VXNlcjI0NzgzMzU=","avatar_url":"https://avatars.githubusercontent.com/u/2478335?v=4","gravatar_id":"","url":"https://api.github.com/users/vegaluisjose","html_url":"https://github.com/vegaluisjose","followers_url":"https://api.github.com/users/vegaluisjose/followers","following_url":"https://api.github.com/users/vegaluisjose/following{/other_user}","gists_url":"https://api.github.com/users/vegaluisjose/gists{/gist_id}","starred_url":"https://api.github.com/users/vegaluisjose/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vegaluisjose/subscriptions","organizations_url":"https://api.github.com/users/vegaluisjose/orgs","repos_url":"https://api.github.com/users/vegaluisjose/repos","events_url":"https://api.github.com/users/vegaluisjose/events{/privacy}","received_events_url":"https://api.github.com/users/vegaluisjose/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-06T00:58:04Z","updated_at":"2020-03-06T00:58:04Z","author_association":"MEMBER","body":"I think it would be nice to do that in a separate PR.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595522233/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595537526","html_url":"https://github.com/apache/tvm/pull/4938#issuecomment-595537526","issue_url":"https://api.github.com/repos/apache/tvm/issues/4938","id":595537526,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTUzNzUyNg==","user":{"login":"kevinthesun","id":15520525,"node_id":"MDQ6VXNlcjE1NTIwNTI1","avatar_url":"https://avatars.githubusercontent.com/u/15520525?v=4","gravatar_id":"","url":"https://api.github.com/users/kevinthesun","html_url":"https://github.com/kevinthesun","followers_url":"https://api.github.com/users/kevinthesun/followers","following_url":"https://api.github.com/users/kevinthesun/following{/other_user}","gists_url":"https://api.github.com/users/kevinthesun/gists{/gist_id}","starred_url":"https://api.github.com/users/kevinthesun/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kevinthesun/subscriptions","organizations_url":"https://api.github.com/users/kevinthesun/orgs","repos_url":"https://api.github.com/users/kevinthesun/repos","events_url":"https://api.github.com/users/kevinthesun/events{/privacy}","received_events_url":"https://api.github.com/users/kevinthesun/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-06T01:17:49Z","updated_at":"2020-03-06T01:17:49Z","author_association":"CONTRIBUTOR","body":"@notoraptor Thanks!","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595537526/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595541216","html_url":"https://github.com/apache/tvm/pull/4938#issuecomment-595541216","issue_url":"https://api.github.com/repos/apache/tvm/issues/4938","id":595541216,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTU0MTIxNg==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-06T01:20:15Z","updated_at":"2020-03-06T01:20:15Z","author_association":"MEMBER","body":"NOTE: the git commit message messed up today due to github issue https://discuss.tvm.ai/t/github-issue-the-commit-author-is-wrong-since-today/5880/15 we should refrain from merging others' PR until tomorrow","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595541216/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595562012","html_url":"https://github.com/apache/tvm/pull/4990#issuecomment-595562012","issue_url":"https://api.github.com/repos/apache/tvm/issues/4990","id":595562012,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTU2MjAxMg==","user":{"login":"lfengad","id":13271164,"node_id":"MDQ6VXNlcjEzMjcxMTY0","avatar_url":"https://avatars.githubusercontent.com/u/13271164?v=4","gravatar_id":"","url":"https://api.github.com/users/lfengad","html_url":"https://github.com/lfengad","followers_url":"https://api.github.com/users/lfengad/followers","following_url":"https://api.github.com/users/lfengad/following{/other_user}","gists_url":"https://api.github.com/users/lfengad/gists{/gist_id}","starred_url":"https://api.github.com/users/lfengad/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lfengad/subscriptions","organizations_url":"https://api.github.com/users/lfengad/orgs","repos_url":"https://api.github.com/users/lfengad/repos","events_url":"https://api.github.com/users/lfengad/events{/privacy}","received_events_url":"https://api.github.com/users/lfengad/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-06T02:11:06Z","updated_at":"2020-03-06T05:08:42Z","author_association":"CONTRIBUTOR","body":"> > Yeah, our current implementation is just to check whether `mean` / `variance` is empty `VarNode` (with zero dimension), and then call `Mean` and `Variance` in BatchNormToInferUnpack.\r\n> \r\n>> I think our pr could remove `name_hint` too.\r\n\r\nYeah, I agree that the better way should be removing `name_hint` and just checking whether the `mean` and `variance` are empty inside `BatchNormToInferUnpack`, with no need to modify the tensorflow frontend. Previously I have tried this way but got come compilation errors related with data shape checking. If we plan to do in this way, we need to modify the `BatchNormRel` for data shape assignment, since the current `batch_norm` relay operator only accept `mean` and `variance` with the same shape as the `channel` dimension. We need to make this relay operator accept `mean` and `variance` with empty shape by doing more modifications.  \r\n> \r\n> > if mean / variance is VarNode but with non-zero dimension, it still has the possibility to hold the given pre-defined constant values and thus cannot be replaced with Mean \\ Variance.\r\n> \r\n> >Could you give us an example of this condition? I could only imagine models have empty or full pre-defined values. So we should only to calculate it by calling `Mean` / `Variance` feed by `data` or our current implementation of `BatchNormToInferUnpack `.\r\n\r\nWhat I mean is that for both cases the `mean` and `variance` are `VarNode`. In one case the `VarNode` is empty without pre-defined values, while in the other case the `VarNode` is not empty with pre-defined values. \r\nThank you for the discussion!\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595562012/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595563667","html_url":"https://github.com/apache/tvm/pull/4995#issuecomment-595563667","issue_url":"https://api.github.com/repos/apache/tvm/issues/4995","id":595563667,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTU2MzY2Nw==","user":{"login":"masahi","id":1776403,"node_id":"MDQ6VXNlcjE3NzY0MDM=","avatar_url":"https://avatars.githubusercontent.com/u/1776403?v=4","gravatar_id":"","url":"https://api.github.com/users/masahi","html_url":"https://github.com/masahi","followers_url":"https://api.github.com/users/masahi/followers","following_url":"https://api.github.com/users/masahi/following{/other_user}","gists_url":"https://api.github.com/users/masahi/gists{/gist_id}","starred_url":"https://api.github.com/users/masahi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/masahi/subscriptions","organizations_url":"https://api.github.com/users/masahi/orgs","repos_url":"https://api.github.com/users/masahi/repos","events_url":"https://api.github.com/users/masahi/events{/privacy}","received_events_url":"https://api.github.com/users/masahi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-06T02:17:35Z","updated_at":"2020-03-06T02:17:35Z","author_association":"MEMBER","body":"AMDGPU also needs RPC runner for autotvm, if I remember correctly","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595563667/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595568771","html_url":"https://github.com/apache/tvm/pull/4938#issuecomment-595568771","issue_url":"https://api.github.com/repos/apache/tvm/issues/4938","id":595568771,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTU2ODc3MQ==","user":{"login":"kevinthesun","id":15520525,"node_id":"MDQ6VXNlcjE1NTIwNTI1","avatar_url":"https://avatars.githubusercontent.com/u/15520525?v=4","gravatar_id":"","url":"https://api.github.com/users/kevinthesun","html_url":"https://github.com/kevinthesun","followers_url":"https://api.github.com/users/kevinthesun/followers","following_url":"https://api.github.com/users/kevinthesun/following{/other_user}","gists_url":"https://api.github.com/users/kevinthesun/gists{/gist_id}","starred_url":"https://api.github.com/users/kevinthesun/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kevinthesun/subscriptions","organizations_url":"https://api.github.com/users/kevinthesun/orgs","repos_url":"https://api.github.com/users/kevinthesun/repos","events_url":"https://api.github.com/users/kevinthesun/events{/privacy}","received_events_url":"https://api.github.com/users/kevinthesun/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-06T02:37:46Z","updated_at":"2020-03-06T02:37:46Z","author_association":"CONTRIBUTOR","body":"@tqchen Do we need to do something for this PR?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595568771/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595590569","html_url":"https://github.com/apache/tvm/pull/4986#issuecomment-595590569","issue_url":"https://api.github.com/repos/apache/tvm/issues/4986","id":595590569,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTU5MDU2OQ==","user":{"login":"vegaluisjose","id":2478335,"node_id":"MDQ6VXNlcjI0NzgzMzU=","avatar_url":"https://avatars.githubusercontent.com/u/2478335?v=4","gravatar_id":"","url":"https://api.github.com/users/vegaluisjose","html_url":"https://github.com/vegaluisjose","followers_url":"https://api.github.com/users/vegaluisjose/followers","following_url":"https://api.github.com/users/vegaluisjose/following{/other_user}","gists_url":"https://api.github.com/users/vegaluisjose/gists{/gist_id}","starred_url":"https://api.github.com/users/vegaluisjose/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vegaluisjose/subscriptions","organizations_url":"https://api.github.com/users/vegaluisjose/orgs","repos_url":"https://api.github.com/users/vegaluisjose/repos","events_url":"https://api.github.com/users/vegaluisjose/events{/privacy}","received_events_url":"https://api.github.com/users/vegaluisjose/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-06T04:08:17Z","updated_at":"2020-03-06T04:08:17Z","author_association":"MEMBER","body":"Hey @pasqoc ,\r\n\r\nI just ran/build everything in both Linux/Mac but it seems to be failing consistently in `resnet18v1`. I am getting the following\r\n\r\n```\r\n[traced 408M cycles]\r\n\r\nExecution statistics:\r\n        cycle_count     :         31427003\r\n\r\nresnet18_v1 prediction for sample 0\r\n        #1: grocery store, grocery, food market, market\r\n        #2: scale, weighing machine\r\n        #3: banana\r\n        #4: punching bag, punch bag, punching ball, punchball\r\n        #5: cleaver, meat cleaver, chopper\r\nTraceback (most recent call last):\r\n\r\n  File \"deploy_classification.py\", line 290, in <module>\r\n    assert(cat_detected)\r\n\r\nAssertionError\r\n```\r\nPerhaps I am missing something? I built everything directly from your `de10-nano` branch ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595590569/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595593538","html_url":"https://github.com/apache/tvm/pull/4986#issuecomment-595593538","issue_url":"https://api.github.com/repos/apache/tvm/issues/4986","id":595593538,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTU5MzUzOA==","user":{"login":"tmoreau89","id":5974488,"node_id":"MDQ6VXNlcjU5NzQ0ODg=","avatar_url":"https://avatars.githubusercontent.com/u/5974488?v=4","gravatar_id":"","url":"https://api.github.com/users/tmoreau89","html_url":"https://github.com/tmoreau89","followers_url":"https://api.github.com/users/tmoreau89/followers","following_url":"https://api.github.com/users/tmoreau89/following{/other_user}","gists_url":"https://api.github.com/users/tmoreau89/gists{/gist_id}","starred_url":"https://api.github.com/users/tmoreau89/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tmoreau89/subscriptions","organizations_url":"https://api.github.com/users/tmoreau89/orgs","repos_url":"https://api.github.com/users/tmoreau89/repos","events_url":"https://api.github.com/users/tmoreau89/events{/privacy}","received_events_url":"https://api.github.com/users/tmoreau89/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-06T04:23:24Z","updated_at":"2020-03-06T04:23:24Z","author_association":"CONTRIBUTOR","body":"Agree with @vegaluisjose on the separate PR; if you submit it, we'll work to merge it quickly so you can rebase against master and get those changes in","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595593538/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595596630","html_url":"https://github.com/apache/tvm/pull/4998#issuecomment-595596630","issue_url":"https://api.github.com/repos/apache/tvm/issues/4998","id":595596630,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTU5NjYzMA==","user":{"login":"tmoreau89","id":5974488,"node_id":"MDQ6VXNlcjU5NzQ0ODg=","avatar_url":"https://avatars.githubusercontent.com/u/5974488?v=4","gravatar_id":"","url":"https://api.github.com/users/tmoreau89","html_url":"https://github.com/tmoreau89","followers_url":"https://api.github.com/users/tmoreau89/followers","following_url":"https://api.github.com/users/tmoreau89/following{/other_user}","gists_url":"https://api.github.com/users/tmoreau89/gists{/gist_id}","starred_url":"https://api.github.com/users/tmoreau89/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tmoreau89/subscriptions","organizations_url":"https://api.github.com/users/tmoreau89/orgs","repos_url":"https://api.github.com/users/tmoreau89/repos","events_url":"https://api.github.com/users/tmoreau89/events{/privacy}","received_events_url":"https://api.github.com/users/tmoreau89/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-06T04:39:36Z","updated_at":"2020-03-06T04:39:36Z","author_association":"CONTRIBUTOR","body":"Thanks @liangfu ; let us know when it's ready for a merge.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595596630/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595597598","html_url":"https://github.com/apache/tvm/pull/4998#issuecomment-595597598","issue_url":"https://api.github.com/repos/apache/tvm/issues/4998","id":595597598,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTU5NzU5OA==","user":{"login":"liangfu","id":857821,"node_id":"MDQ6VXNlcjg1NzgyMQ==","avatar_url":"https://avatars.githubusercontent.com/u/857821?v=4","gravatar_id":"","url":"https://api.github.com/users/liangfu","html_url":"https://github.com/liangfu","followers_url":"https://api.github.com/users/liangfu/followers","following_url":"https://api.github.com/users/liangfu/following{/other_user}","gists_url":"https://api.github.com/users/liangfu/gists{/gist_id}","starred_url":"https://api.github.com/users/liangfu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/liangfu/subscriptions","organizations_url":"https://api.github.com/users/liangfu/orgs","repos_url":"https://api.github.com/users/liangfu/repos","events_url":"https://api.github.com/users/liangfu/events{/privacy}","received_events_url":"https://api.github.com/users/liangfu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-06T04:44:35Z","updated_at":"2020-03-06T04:44:35Z","author_association":"MEMBER","body":"@tmoreau89 @vegaluisjose Thanks for the review. I think this is now ready for a merge, and let's wait for the CI testing results.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595597598/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595598371","html_url":"https://github.com/apache/tvm/pull/4979#issuecomment-595598371","issue_url":"https://api.github.com/repos/apache/tvm/issues/4979","id":595598371,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTU5ODM3MQ==","user":{"login":"MarisaKirisame","id":3397377,"node_id":"MDQ6VXNlcjMzOTczNzc=","avatar_url":"https://avatars.githubusercontent.com/u/3397377?v=4","gravatar_id":"","url":"https://api.github.com/users/MarisaKirisame","html_url":"https://github.com/MarisaKirisame","followers_url":"https://api.github.com/users/MarisaKirisame/followers","following_url":"https://api.github.com/users/MarisaKirisame/following{/other_user}","gists_url":"https://api.github.com/users/MarisaKirisame/gists{/gist_id}","starred_url":"https://api.github.com/users/MarisaKirisame/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/MarisaKirisame/subscriptions","organizations_url":"https://api.github.com/users/MarisaKirisame/orgs","repos_url":"https://api.github.com/users/MarisaKirisame/repos","events_url":"https://api.github.com/users/MarisaKirisame/events{/privacy}","received_events_url":"https://api.github.com/users/MarisaKirisame/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-06T04:48:12Z","updated_at":"2020-03-06T04:48:12Z","author_association":"CONTRIBUTOR","body":"Because if there is only one seed, every random uniform call will return the same result for the same tensor size.\r\nInternally, the random computation proceed already by using a random number genrator and advancing the seed. This is the implementation detail of the PRNG.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595598371/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595611551","html_url":"https://github.com/apache/tvm/pull/4990#issuecomment-595611551","issue_url":"https://api.github.com/repos/apache/tvm/issues/4990","id":595611551,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTYxMTU1MQ==","user":{"login":"lfengad","id":13271164,"node_id":"MDQ6VXNlcjEzMjcxMTY0","avatar_url":"https://avatars.githubusercontent.com/u/13271164?v=4","gravatar_id":"","url":"https://api.github.com/users/lfengad","html_url":"https://github.com/lfengad","followers_url":"https://api.github.com/users/lfengad/followers","following_url":"https://api.github.com/users/lfengad/following{/other_user}","gists_url":"https://api.github.com/users/lfengad/gists{/gist_id}","starred_url":"https://api.github.com/users/lfengad/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lfengad/subscriptions","organizations_url":"https://api.github.com/users/lfengad/orgs","repos_url":"https://api.github.com/users/lfengad/repos","events_url":"https://api.github.com/users/lfengad/events{/privacy}","received_events_url":"https://api.github.com/users/lfengad/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-06T05:49:17Z","updated_at":"2020-03-06T05:50:09Z","author_association":"CONTRIBUTOR","body":"> > Yeah, our current implementation is just to check whether `mean` / `variance` is empty `VarNode` (with zero dimension), and then call `Mean` and `Variance` in BatchNormToInferUnpack.\r\n> \r\n> I think our pr could remove `name_hint` too.\r\n> \r\n> > if mean / variance is VarNode but with non-zero dimension, it still has the possibility to hold the given pre-defined constant values and thus cannot be replaced with Mean \\ Variance.\r\n> \r\n> Could you give us an example of this condition? I could only imagine models have empty or full pre-defined values. So we should only to calculate it by calling `Mean` / `Variance` feed by `data` or our current implementation of `BatchNormToInferUnpack `.\r\n\r\nThanks for your discussion! According to our discussion, I have rewritten the code as in the newest commit. This time, the function `BatchNormToInferUnpack` is not modified. We only modify the tensorflow frontend for `_fused_batch_norm`. If `mean` and `variance` are empty, we directly add `Mean` and `Variance` relay operators before the `batch_norm` relay operator in the frontend graph, without modifying the `batch_norm` relay operator at all.\r\nThank you for the suggestions!","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595611551/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595612183","html_url":"https://github.com/apache/tvm/pull/4998#issuecomment-595612183","issue_url":"https://api.github.com/repos/apache/tvm/issues/4998","id":595612183,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTYxMjE4Mw==","user":{"login":"liangfu","id":857821,"node_id":"MDQ6VXNlcjg1NzgyMQ==","avatar_url":"https://avatars.githubusercontent.com/u/857821?v=4","gravatar_id":"","url":"https://api.github.com/users/liangfu","html_url":"https://github.com/liangfu","followers_url":"https://api.github.com/users/liangfu/followers","following_url":"https://api.github.com/users/liangfu/following{/other_user}","gists_url":"https://api.github.com/users/liangfu/gists{/gist_id}","starred_url":"https://api.github.com/users/liangfu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/liangfu/subscriptions","organizations_url":"https://api.github.com/users/liangfu/orgs","repos_url":"https://api.github.com/users/liangfu/repos","events_url":"https://api.github.com/users/liangfu/events{/privacy}","received_events_url":"https://api.github.com/users/liangfu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-06T05:52:01Z","updated_at":"2020-03-06T05:53:25Z","author_association":"MEMBER","body":"In addition, based on the suggestions in the linter, I made some final changes in fixing indentation errors, here is a typical example:\r\n```diff\r\ndiff --git a/vta/hardware/chisel/src/main/scala/core/Load.scala b/vta/hardware/chisel/src/main/scala/core/Load.scala\r\nindex 7c79498bd..50c26bb8e 100644\r\n--- a/vta/hardware/chisel/src/main/scala/core/Load.scala\r\n+++ b/vta/hardware/chisel/src/main/scala/core/Load.scala\r\n@@ -25,12 +25,12 @@ import vta.util.config._\r\n import vta.shell._\r\n \r\n /** Load.\r\n-  *\r\n-  * Load inputs and weights from memory (DRAM) into scratchpads (SRAMs).\r\n-  * This module instantiate the TensorLoad unit which is in charge of\r\n-  * loading 1D and 2D tensors to scratchpads, so it can be used by\r\n-  * other modules such as Compute.\r\n-  */\r\n+ *\r\n+ * Load inputs and weights from memory (DRAM) into scratchpads (SRAMs).\r\n+ * This module instantiate the TensorLoad unit which is in charge of\r\n+ * loading 1D and 2D tensors to scratchpads, so it can be used by\r\n+ * other modules such as Compute.\r\n+ */\r\n class Load(debug: Boolean = false)(implicit p: Parameters) extends Module {\r\n   val mp = p(ShellKey).memParams\r\n   val io = IO(new Bundle {\r\n@@ -110,11 +110,10 @@ class Load(debug: Boolean = false)(implicit p: Parameters) extends Module {\r\n       when(dec.io.isSync) {\r\n         printf(\"[Load] start sync\\n\")\r\n       }.elsewhen(dec.io.isInput) {\r\n-          printf(\"[Load] start input\\n\")\r\n-        }\r\n-        .elsewhen(dec.io.isWeight) {\r\n-          printf(\"[Load] start weight\\n\")\r\n-        }\r\n+        printf(\"[Load] start input\\n\")\r\n+      }.elsewhen(dec.io.isWeight) {\r\n+        printf(\"[Load] start weight\\n\")\r\n+      }\r\n     }\r\n     // done\r\n     when(state === sSync) {\r\n```\r\nPlease take another look.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595612183/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595650436","html_url":"https://github.com/apache/tvm/pull/2498#issuecomment-595650436","issue_url":"https://api.github.com/repos/apache/tvm/issues/2498","id":595650436,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTY1MDQzNg==","user":{"login":"yzhliu","id":631860,"node_id":"MDQ6VXNlcjYzMTg2MA==","avatar_url":"https://avatars.githubusercontent.com/u/631860?v=4","gravatar_id":"","url":"https://api.github.com/users/yzhliu","html_url":"https://github.com/yzhliu","followers_url":"https://api.github.com/users/yzhliu/followers","following_url":"https://api.github.com/users/yzhliu/following{/other_user}","gists_url":"https://api.github.com/users/yzhliu/gists{/gist_id}","starred_url":"https://api.github.com/users/yzhliu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yzhliu/subscriptions","organizations_url":"https://api.github.com/users/yzhliu/orgs","repos_url":"https://api.github.com/users/yzhliu/repos","events_url":"https://api.github.com/users/yzhliu/events{/privacy}","received_events_url":"https://api.github.com/users/yzhliu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-06T08:04:45Z","updated_at":"2020-03-06T08:04:45Z","author_association":"MEMBER","body":"@sgrechanik-h I have difficulty understand [this part](https://github.com/sgrechanik-h/tvm/blob/autodiff-dev/src/pass/zero_elimination.cc#L1641-L1645), would be helpful if you can provide some guide,\r\n\r\nsay we have `A x = b =>  U^T S V^T x = b` the solution for `x` is `V S^{-1} U b + K z`, in which `K` is the right `m-r` columns of `V` and `z` is arbitrary vector.  in my understanding,\r\n\r\n* `old_to_new` is `V^T`\r\n* `matrix` is `S`\r\n* `rhs` is `U b`\r\n* `solution[]` in the code is  `V^T V S^{-1} U b + V^T K z`\r\n\r\nThen the for-loops in the code calculates `V^T * solution`, how does it equal to original `x` ?\r\n","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595650436/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595685643","html_url":"https://github.com/apache/tvm/pull/5001#issuecomment-595685643","issue_url":"https://api.github.com/repos/apache/tvm/issues/5001","id":595685643,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTY4NTY0Mw==","user":{"login":"masahi","id":1776403,"node_id":"MDQ6VXNlcjE3NzY0MDM=","avatar_url":"https://avatars.githubusercontent.com/u/1776403?v=4","gravatar_id":"","url":"https://api.github.com/users/masahi","html_url":"https://github.com/masahi","followers_url":"https://api.github.com/users/masahi/followers","following_url":"https://api.github.com/users/masahi/following{/other_user}","gists_url":"https://api.github.com/users/masahi/gists{/gist_id}","starred_url":"https://api.github.com/users/masahi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/masahi/subscriptions","organizations_url":"https://api.github.com/users/masahi/orgs","repos_url":"https://api.github.com/users/masahi/repos","events_url":"https://api.github.com/users/masahi/events{/privacy}","received_events_url":"https://api.github.com/users/masahi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-06T09:40:07Z","updated_at":"2020-03-06T09:40:07Z","author_association":"MEMBER","body":"I'll merge after the github bug is resolved.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595685643/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":1,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595735969","html_url":"https://github.com/apache/tvm/pull/4979#issuecomment-595735969","issue_url":"https://api.github.com/repos/apache/tvm/issues/4979","id":595735969,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTczNTk2OQ==","user":{"login":"deepakbabel","id":56834470,"node_id":"MDQ6VXNlcjU2ODM0NDcw","avatar_url":"https://avatars.githubusercontent.com/u/56834470?v=4","gravatar_id":"","url":"https://api.github.com/users/deepakbabel","html_url":"https://github.com/deepakbabel","followers_url":"https://api.github.com/users/deepakbabel/followers","following_url":"https://api.github.com/users/deepakbabel/following{/other_user}","gists_url":"https://api.github.com/users/deepakbabel/gists{/gist_id}","starred_url":"https://api.github.com/users/deepakbabel/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/deepakbabel/subscriptions","organizations_url":"https://api.github.com/users/deepakbabel/orgs","repos_url":"https://api.github.com/users/deepakbabel/repos","events_url":"https://api.github.com/users/deepakbabel/events{/privacy}","received_events_url":"https://api.github.com/users/deepakbabel/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-06T11:55:26Z","updated_at":"2020-03-06T12:01:32Z","author_association":"NONE","body":"Hi @MarisaKirisame \r\nI understand now that in the new design proposed by you, we want to enforce unique random sequences every-time even if the input seed provided by user is same between multiple session executions. We are internally using C++11 std::mt19937 generator for PRNG generation. There are no such API available in this generator which returns a new random seed value along with the output RNG object. Please see \"src/runtime/contrib/random/mt_random_engine.cc\" for more details.\r\nIn such case how do you propose getting the new random seed. Also this piece of tvm code for PRNG generation(mt_random_engine.cc, random.cc) was pre-existing in contrib layer, we have just provided support in relay and topi layers so that it can be called by both these layers.\r\nHope you are not referring to getting back the current seed(user provided seed). If so, then can use GetSeed() method of our RandomEngine class.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595735969/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595740583","html_url":"https://github.com/apache/tvm/pull/4979#issuecomment-595740583","issue_url":"https://api.github.com/repos/apache/tvm/issues/4979","id":595740583,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTc0MDU4Mw==","user":{"login":"deepakbabel","id":56834470,"node_id":"MDQ6VXNlcjU2ODM0NDcw","avatar_url":"https://avatars.githubusercontent.com/u/56834470?v=4","gravatar_id":"","url":"https://api.github.com/users/deepakbabel","html_url":"https://github.com/deepakbabel","followers_url":"https://api.github.com/users/deepakbabel/followers","following_url":"https://api.github.com/users/deepakbabel/following{/other_user}","gists_url":"https://api.github.com/users/deepakbabel/gists{/gist_id}","starred_url":"https://api.github.com/users/deepakbabel/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/deepakbabel/subscriptions","organizations_url":"https://api.github.com/users/deepakbabel/orgs","repos_url":"https://api.github.com/users/deepakbabel/repos","events_url":"https://api.github.com/users/deepakbabel/events{/privacy}","received_events_url":"https://api.github.com/users/deepakbabel/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-06T12:08:56Z","updated_at":"2020-03-06T12:11:41Z","author_association":"NONE","body":"![tf_random](https://user-images.githubusercontent.com/56834470/76082372-3b8b2600-5fd1-11ea-8293-977aa3c3c662.png)\r\n@MarisaKirisame : By the way when I had explored Tensorflow, I had observed that we get the same sequence even when we use the previous seeds(global and operation seeds) again in conjunction across multiple session calls","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595740583/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595744320","html_url":"https://github.com/apache/tvm/pull/4996#issuecomment-595744320","issue_url":"https://api.github.com/repos/apache/tvm/issues/4996","id":595744320,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTc0NDMyMA==","user":{"login":"masahi","id":1776403,"node_id":"MDQ6VXNlcjE3NzY0MDM=","avatar_url":"https://avatars.githubusercontent.com/u/1776403?v=4","gravatar_id":"","url":"https://api.github.com/users/masahi","html_url":"https://github.com/masahi","followers_url":"https://api.github.com/users/masahi/followers","following_url":"https://api.github.com/users/masahi/following{/other_user}","gists_url":"https://api.github.com/users/masahi/gists{/gist_id}","starred_url":"https://api.github.com/users/masahi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/masahi/subscriptions","organizations_url":"https://api.github.com/users/masahi/orgs","repos_url":"https://api.github.com/users/masahi/repos","events_url":"https://api.github.com/users/masahi/events{/privacy}","received_events_url":"https://api.github.com/users/masahi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-06T12:20:21Z","updated_at":"2020-03-06T12:20:21Z","author_association":"MEMBER","body":"How about adding batch norm to the test to make sure it is still there after opt passes? ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595744320/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595830052","html_url":"https://github.com/apache/tvm/pull/4828#issuecomment-595830052","issue_url":"https://api.github.com/repos/apache/tvm/issues/4828","id":595830052,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTgzMDA1Mg==","user":{"login":"fwd4","id":19797985,"node_id":"MDQ6VXNlcjE5Nzk3OTg1","avatar_url":"https://avatars.githubusercontent.com/u/19797985?v=4","gravatar_id":"","url":"https://api.github.com/users/fwd4","html_url":"https://github.com/fwd4","followers_url":"https://api.github.com/users/fwd4/followers","following_url":"https://api.github.com/users/fwd4/following{/other_user}","gists_url":"https://api.github.com/users/fwd4/gists{/gist_id}","starred_url":"https://api.github.com/users/fwd4/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fwd4/subscriptions","organizations_url":"https://api.github.com/users/fwd4/orgs","repos_url":"https://api.github.com/users/fwd4/repos","events_url":"https://api.github.com/users/fwd4/events{/privacy}","received_events_url":"https://api.github.com/users/fwd4/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-06T15:50:38Z","updated_at":"2020-03-06T15:50:38Z","author_association":"CONTRIBUTOR","body":"> I don't think we should add tflite_mode attr to Pool2D op. It seems adhoc to me.\r\n> \r\n> I think we can directly implement the UPWARD rounding in pooling, **whenever the datatype is interger**. For integer division, it is valid to implement rounding by default.\r\n> \r\n> If the tests fail for integer pool, we can change those tests as well. I added those tests in #3607. Prior to that integer computation in pooling was wrong.\r\n\r\nI like the idea, default pooling implementation is updated. Please have a look @anijain2305 @FrozenGene \r\n\r\nI think one more thing is left that one of the qnn full net will trigger gpu test related segment fault, not quite familiar with gpu part of code, you guys have any ideas on this? I think we have the problem since tflite rounding mode is introduced. ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595830052/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595855406","html_url":"https://github.com/apache/tvm/pull/4990#issuecomment-595855406","issue_url":"https://api.github.com/repos/apache/tvm/issues/4990","id":595855406,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTg1NTQwNg==","user":{"login":"FrozenGene","id":7287321,"node_id":"MDQ6VXNlcjcyODczMjE=","avatar_url":"https://avatars.githubusercontent.com/u/7287321?v=4","gravatar_id":"","url":"https://api.github.com/users/FrozenGene","html_url":"https://github.com/FrozenGene","followers_url":"https://api.github.com/users/FrozenGene/followers","following_url":"https://api.github.com/users/FrozenGene/following{/other_user}","gists_url":"https://api.github.com/users/FrozenGene/gists{/gist_id}","starred_url":"https://api.github.com/users/FrozenGene/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/FrozenGene/subscriptions","organizations_url":"https://api.github.com/users/FrozenGene/orgs","repos_url":"https://api.github.com/users/FrozenGene/repos","events_url":"https://api.github.com/users/FrozenGene/events{/privacy}","received_events_url":"https://api.github.com/users/FrozenGene/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-06T16:44:20Z","updated_at":"2020-03-06T16:44:20Z","author_association":"MEMBER","body":"Let us wait CI green.\r\n\r\nAs GitHub has issue: https://discuss.tvm.ai/t/github-issue-the-commit-author-is-wrong-since-today/5880/15 I will merge it after it is solved.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595855406/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595856735","html_url":"https://github.com/apache/tvm/pull/4990#issuecomment-595856735","issue_url":"https://api.github.com/repos/apache/tvm/issues/4990","id":595856735,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTg1NjczNQ==","user":{"login":"lfengad","id":13271164,"node_id":"MDQ6VXNlcjEzMjcxMTY0","avatar_url":"https://avatars.githubusercontent.com/u/13271164?v=4","gravatar_id":"","url":"https://api.github.com/users/lfengad","html_url":"https://github.com/lfengad","followers_url":"https://api.github.com/users/lfengad/followers","following_url":"https://api.github.com/users/lfengad/following{/other_user}","gists_url":"https://api.github.com/users/lfengad/gists{/gist_id}","starred_url":"https://api.github.com/users/lfengad/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lfengad/subscriptions","organizations_url":"https://api.github.com/users/lfengad/orgs","repos_url":"https://api.github.com/users/lfengad/repos","events_url":"https://api.github.com/users/lfengad/events{/privacy}","received_events_url":"https://api.github.com/users/lfengad/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-06T16:47:10Z","updated_at":"2020-03-06T16:47:10Z","author_association":"CONTRIBUTOR","body":"> Let us wait CI green.\r\n> \r\n> As GitHub has issue: https://discuss.tvm.ai/t/github-issue-the-commit-author-is-wrong-since-today/5880/15 I will merge it after it is solved.\r\n\r\nOkay, thank you so much for the efforts! ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595856735/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595856878","html_url":"https://github.com/apache/tvm/pull/2498#issuecomment-595856878","issue_url":"https://api.github.com/repos/apache/tvm/issues/2498","id":595856878,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTg1Njg3OA==","user":{"login":"sergei-grechanik","id":1084979,"node_id":"MDQ6VXNlcjEwODQ5Nzk=","avatar_url":"https://avatars.githubusercontent.com/u/1084979?v=4","gravatar_id":"","url":"https://api.github.com/users/sergei-grechanik","html_url":"https://github.com/sergei-grechanik","followers_url":"https://api.github.com/users/sergei-grechanik/followers","following_url":"https://api.github.com/users/sergei-grechanik/following{/other_user}","gists_url":"https://api.github.com/users/sergei-grechanik/gists{/gist_id}","starred_url":"https://api.github.com/users/sergei-grechanik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sergei-grechanik/subscriptions","organizations_url":"https://api.github.com/users/sergei-grechanik/orgs","repos_url":"https://api.github.com/users/sergei-grechanik/repos","events_url":"https://api.github.com/users/sergei-grechanik/events{/privacy}","received_events_url":"https://api.github.com/users/sergei-grechanik/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-06T16:47:28Z","updated_at":"2020-03-06T16:47:28Z","author_association":"CONTRIBUTOR","body":"@yzhliu `solution` in my code seems to be `S^{-1} U b + V^{-1} K z`, i.e. it is the solution for `y` of `S y = U b` (where `y = V^{-1} x`). Sorry for the confusing naming.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595856878/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595867732","html_url":"https://github.com/apache/tvm/pull/4986#issuecomment-595867732","issue_url":"https://api.github.com/repos/apache/tvm/issues/4986","id":595867732,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTg2NzczMg==","user":{"login":"pasqoc","id":61704028,"node_id":"MDQ6VXNlcjYxNzA0MDI4","avatar_url":"https://avatars.githubusercontent.com/u/61704028?v=4","gravatar_id":"","url":"https://api.github.com/users/pasqoc","html_url":"https://github.com/pasqoc","followers_url":"https://api.github.com/users/pasqoc/followers","following_url":"https://api.github.com/users/pasqoc/following{/other_user}","gists_url":"https://api.github.com/users/pasqoc/gists{/gist_id}","starred_url":"https://api.github.com/users/pasqoc/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pasqoc/subscriptions","organizations_url":"https://api.github.com/users/pasqoc/orgs","repos_url":"https://api.github.com/users/pasqoc/repos","events_url":"https://api.github.com/users/pasqoc/events{/privacy}","received_events_url":"https://api.github.com/users/pasqoc/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-06T17:10:19Z","updated_at":"2020-03-06T17:10:19Z","author_association":"CONTRIBUTOR","body":"One think I forgot to mention (and I did not change the deploy_classification.py code in the branch) is that currently you must avoid using the timer when doing inference.\r\nThere is some interaction I have not debugged yet that makes the runs started by timer subsequent to the first one fail for all chisel based targets.\r\nRight now you must call the model once directly, i.e. disable the timer object and call m.run() instead of timer() on line 255.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595867732/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595869497","html_url":"https://github.com/apache/tvm/pull/4828#issuecomment-595869497","issue_url":"https://api.github.com/repos/apache/tvm/issues/4828","id":595869497,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTg2OTQ5Nw==","user":{"login":"anijain2305","id":13822661,"node_id":"MDQ6VXNlcjEzODIyNjYx","avatar_url":"https://avatars.githubusercontent.com/u/13822661?v=4","gravatar_id":"","url":"https://api.github.com/users/anijain2305","html_url":"https://github.com/anijain2305","followers_url":"https://api.github.com/users/anijain2305/followers","following_url":"https://api.github.com/users/anijain2305/following{/other_user}","gists_url":"https://api.github.com/users/anijain2305/gists{/gist_id}","starred_url":"https://api.github.com/users/anijain2305/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/anijain2305/subscriptions","organizations_url":"https://api.github.com/users/anijain2305/orgs","repos_url":"https://api.github.com/users/anijain2305/repos","events_url":"https://api.github.com/users/anijain2305/events{/privacy}","received_events_url":"https://api.github.com/users/anijain2305/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-06T17:13:57Z","updated_at":"2020-03-06T17:13:57Z","author_association":"CONTRIBUTOR","body":"@LiangHao151941 Thanks for your perseverance. This is very tedious. Kudos!\r\n\r\nDo you think it will be good if you send a separate PR for pooling op? I think it is more like a bug of pooling op integer implementation. It will also make this PR just take care of TFLite rounding.\r\n\r\nRegarding GPU, let me take a look today. I am little confused why that is happening.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595869497/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595869553","html_url":"https://github.com/apache/tvm/pull/4998#issuecomment-595869553","issue_url":"https://api.github.com/repos/apache/tvm/issues/4998","id":595869553,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTg2OTU1Mw==","user":{"login":"tmoreau89","id":5974488,"node_id":"MDQ6VXNlcjU5NzQ0ODg=","avatar_url":"https://avatars.githubusercontent.com/u/5974488?v=4","gravatar_id":"","url":"https://api.github.com/users/tmoreau89","html_url":"https://github.com/tmoreau89","followers_url":"https://api.github.com/users/tmoreau89/followers","following_url":"https://api.github.com/users/tmoreau89/following{/other_user}","gists_url":"https://api.github.com/users/tmoreau89/gists{/gist_id}","starred_url":"https://api.github.com/users/tmoreau89/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tmoreau89/subscriptions","organizations_url":"https://api.github.com/users/tmoreau89/orgs","repos_url":"https://api.github.com/users/tmoreau89/repos","events_url":"https://api.github.com/users/tmoreau89/events{/privacy}","received_events_url":"https://api.github.com/users/tmoreau89/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-06T17:14:03Z","updated_at":"2020-03-06T17:14:03Z","author_association":"CONTRIBUTOR","body":"Thanks for the diff @liangfu ; this looks great.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595869553/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595869658","html_url":"https://github.com/apache/tvm/pull/4986#issuecomment-595869658","issue_url":"https://api.github.com/repos/apache/tvm/issues/4986","id":595869658,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTg2OTY1OA==","user":{"login":"pasqoc","id":61704028,"node_id":"MDQ6VXNlcjYxNzA0MDI4","avatar_url":"https://avatars.githubusercontent.com/u/61704028?v=4","gravatar_id":"","url":"https://api.github.com/users/pasqoc","html_url":"https://github.com/pasqoc","followers_url":"https://api.github.com/users/pasqoc/followers","following_url":"https://api.github.com/users/pasqoc/following{/other_user}","gists_url":"https://api.github.com/users/pasqoc/gists{/gist_id}","starred_url":"https://api.github.com/users/pasqoc/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pasqoc/subscriptions","organizations_url":"https://api.github.com/users/pasqoc/orgs","repos_url":"https://api.github.com/users/pasqoc/repos","events_url":"https://api.github.com/users/pasqoc/events{/privacy}","received_events_url":"https://api.github.com/users/pasqoc/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-06T17:14:17Z","updated_at":"2020-03-06T17:14:17Z","author_association":"CONTRIBUTOR","body":"I suggest changing the timer object to avoid performing the \"warming run\" job and enable running a single job. \r\nThis is also what you may want to do if you add resnet18 tsim to CI and don't want the test to run for ages.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595869658/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595869914","html_url":"https://github.com/apache/tvm/pull/4998#issuecomment-595869914","issue_url":"https://api.github.com/repos/apache/tvm/issues/4998","id":595869914,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTg2OTkxNA==","user":{"login":"tmoreau89","id":5974488,"node_id":"MDQ6VXNlcjU5NzQ0ODg=","avatar_url":"https://avatars.githubusercontent.com/u/5974488?v=4","gravatar_id":"","url":"https://api.github.com/users/tmoreau89","html_url":"https://github.com/tmoreau89","followers_url":"https://api.github.com/users/tmoreau89/followers","following_url":"https://api.github.com/users/tmoreau89/following{/other_user}","gists_url":"https://api.github.com/users/tmoreau89/gists{/gist_id}","starred_url":"https://api.github.com/users/tmoreau89/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tmoreau89/subscriptions","organizations_url":"https://api.github.com/users/tmoreau89/orgs","repos_url":"https://api.github.com/users/tmoreau89/repos","events_url":"https://api.github.com/users/tmoreau89/events{/privacy}","received_events_url":"https://api.github.com/users/tmoreau89/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-06T17:14:54Z","updated_at":"2020-03-06T17:14:54Z","author_association":"CONTRIBUTOR","body":"Looks like CI failed on one of the unit tests","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595869914/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595876055","html_url":"https://github.com/apache/tvm/pull/4828#issuecomment-595876055","issue_url":"https://api.github.com/repos/apache/tvm/issues/4828","id":595876055,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTg3NjA1NQ==","user":{"login":"anijain2305","id":13822661,"node_id":"MDQ6VXNlcjEzODIyNjYx","avatar_url":"https://avatars.githubusercontent.com/u/13822661?v=4","gravatar_id":"","url":"https://api.github.com/users/anijain2305","html_url":"https://github.com/anijain2305","followers_url":"https://api.github.com/users/anijain2305/followers","following_url":"https://api.github.com/users/anijain2305/following{/other_user}","gists_url":"https://api.github.com/users/anijain2305/gists{/gist_id}","starred_url":"https://api.github.com/users/anijain2305/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/anijain2305/subscriptions","organizations_url":"https://api.github.com/users/anijain2305/orgs","repos_url":"https://api.github.com/users/anijain2305/repos","events_url":"https://api.github.com/users/anijain2305/events{/privacy}","received_events_url":"https://api.github.com/users/anijain2305/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-06T17:29:19Z","updated_at":"2020-03-06T17:29:19Z","author_association":"CONTRIBUTOR","body":"@LiangHao151941 I looked at this\r\nhttps://ci.tvm.ai/blue/organizations/jenkins/tvm/detail/PR-4828/16/pipeline/247\r\n\r\nI think you are confusing the GPU container with GPU target. The tests are still running on CPU.\r\n\r\n* You might have done this already. But have you run mobilenetv2 locally?\r\n* If it passes locally, then lets check the LLVM version. And re-run with whatever container is running with. \r\n* You can also try change the target from `llvm` to `llvm -mcpu=core-avx2' in TFLite tests. There is a LLVM bug which might be causing this - https://discuss.tvm.ai/t/segfault-in-llvm/3567\r\n\r\n\r\n\r\n\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595876055/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595876389","html_url":"https://github.com/apache/tvm/pull/4986#issuecomment-595876389","issue_url":"https://api.github.com/repos/apache/tvm/issues/4986","id":595876389,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTg3NjM4OQ==","user":{"login":"pasqoc","id":61704028,"node_id":"MDQ6VXNlcjYxNzA0MDI4","avatar_url":"https://avatars.githubusercontent.com/u/61704028?v=4","gravatar_id":"","url":"https://api.github.com/users/pasqoc","html_url":"https://github.com/pasqoc","followers_url":"https://api.github.com/users/pasqoc/followers","following_url":"https://api.github.com/users/pasqoc/following{/other_user}","gists_url":"https://api.github.com/users/pasqoc/gists{/gist_id}","starred_url":"https://api.github.com/users/pasqoc/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pasqoc/subscriptions","organizations_url":"https://api.github.com/users/pasqoc/orgs","repos_url":"https://api.github.com/users/pasqoc/repos","events_url":"https://api.github.com/users/pasqoc/events{/privacy}","received_events_url":"https://api.github.com/users/pasqoc/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-06T17:30:04Z","updated_at":"2020-03-06T17:30:04Z","author_association":"CONTRIBUTOR","body":"Resnet18_v1 should only take 31M cycles for one run and around 5 minutes, so you are running 12 jobs in around an hour.\r\nAlso if you want to cross reference the results reported on the table I have used a tabby cat image directly downloaded from ImageNet because I wanted to be sure to get the correct expected result.\r\nUsing the default cat image may give you a tiger cat instead ...","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595876389/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595877573","html_url":"https://github.com/apache/tvm/pull/4986#issuecomment-595877573","issue_url":"https://api.github.com/repos/apache/tvm/issues/4986","id":595877573,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTg3NzU3Mw==","user":{"login":"pasqoc","id":61704028,"node_id":"MDQ6VXNlcjYxNzA0MDI4","avatar_url":"https://avatars.githubusercontent.com/u/61704028?v=4","gravatar_id":"","url":"https://api.github.com/users/pasqoc","html_url":"https://github.com/pasqoc","followers_url":"https://api.github.com/users/pasqoc/followers","following_url":"https://api.github.com/users/pasqoc/following{/other_user}","gists_url":"https://api.github.com/users/pasqoc/gists{/gist_id}","starred_url":"https://api.github.com/users/pasqoc/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pasqoc/subscriptions","organizations_url":"https://api.github.com/users/pasqoc/orgs","repos_url":"https://api.github.com/users/pasqoc/repos","events_url":"https://api.github.com/users/pasqoc/events{/privacy}","received_events_url":"https://api.github.com/users/pasqoc/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-06T17:33:01Z","updated_at":"2020-03-06T17:33:01Z","author_association":"CONTRIBUTOR","body":"I can add the changes to timer if you want me to, and then changing num = rep = 1 in deploy_classification.py should make the test pass.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595877573/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595885814","html_url":"https://github.com/apache/tvm/pull/4986#issuecomment-595885814","issue_url":"https://api.github.com/repos/apache/tvm/issues/4986","id":595885814,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTg4NTgxNA==","user":{"login":"vegaluisjose","id":2478335,"node_id":"MDQ6VXNlcjI0NzgzMzU=","avatar_url":"https://avatars.githubusercontent.com/u/2478335?v=4","gravatar_id":"","url":"https://api.github.com/users/vegaluisjose","html_url":"https://github.com/vegaluisjose","followers_url":"https://api.github.com/users/vegaluisjose/followers","following_url":"https://api.github.com/users/vegaluisjose/following{/other_user}","gists_url":"https://api.github.com/users/vegaluisjose/gists{/gist_id}","starred_url":"https://api.github.com/users/vegaluisjose/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vegaluisjose/subscriptions","organizations_url":"https://api.github.com/users/vegaluisjose/orgs","repos_url":"https://api.github.com/users/vegaluisjose/repos","events_url":"https://api.github.com/users/vegaluisjose/events{/privacy}","received_events_url":"https://api.github.com/users/vegaluisjose/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-06T17:54:02Z","updated_at":"2020-03-06T17:54:02Z","author_association":"MEMBER","body":"Hey @pasqoc ,\r\n\r\nYou are right, that makes the test work. It works for me without changing the number of repetitions. \r\n\r\nThoughts on this `timer()` @tmoreau89 and @liangfu ?\r\n\r\nHere is the trace\r\n\r\n```\r\nresnet18_v1 inference graph built in 8.82s!\r\nFile synset.txt exists, skip.\r\nFile cat.png exists, skip.\r\n[traced 1M cycles]\r\n[traced 2M cycles]\r\n[traced 3M cycles]\r\n[traced 4M cycles]\r\n[traced 5M cycles]\r\n[traced 6M cycles]\r\n[traced 7M cycles]\r\n[traced 8M cycles]\r\n[traced 9M cycles]\r\n[traced 10M cycles]\r\n[traced 11M cycles]\r\n[traced 12M cycles]\r\n[traced 13M cycles]\r\n[traced 14M cycles]\r\n[traced 15M cycles]\r\n[traced 16M cycles]\r\n[traced 17M cycles]\r\n[traced 18M cycles]\r\n[traced 19M cycles]\r\n[traced 20M cycles]\r\n[traced 21M cycles]\r\n[traced 22M cycles]\r\n[traced 23M cycles]\r\n[traced 24M cycles]\r\n[traced 25M cycles]\r\n[traced 26M cycles]\r\n[traced 27M cycles]\r\n[traced 28M cycles]\r\n[traced 29M cycles]\r\n[traced 30M cycles]\r\n[traced 31M cycles]\r\n\r\nExecution statistics:\r\n        cycle_count     :          2417775\r\n\r\nresnet18_v1 prediction for sample 0\r\n        #1: tiger cat\r\n        #2: Egyptian cat\r\n        #3: tabby, tabby cat\r\n        #4: lynx, catamount\r\n        #5: weasel\r\n```","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595885814/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595887207","html_url":"https://github.com/apache/tvm/pull/4996#issuecomment-595887207","issue_url":"https://api.github.com/repos/apache/tvm/issues/4996","id":595887207,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTg4NzIwNw==","user":{"login":"zhiics","id":5145158,"node_id":"MDQ6VXNlcjUxNDUxNTg=","avatar_url":"https://avatars.githubusercontent.com/u/5145158?v=4","gravatar_id":"","url":"https://api.github.com/users/zhiics","html_url":"https://github.com/zhiics","followers_url":"https://api.github.com/users/zhiics/followers","following_url":"https://api.github.com/users/zhiics/following{/other_user}","gists_url":"https://api.github.com/users/zhiics/gists{/gist_id}","starred_url":"https://api.github.com/users/zhiics/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zhiics/subscriptions","organizations_url":"https://api.github.com/users/zhiics/orgs","repos_url":"https://api.github.com/users/zhiics/repos","events_url":"https://api.github.com/users/zhiics/events{/privacy}","received_events_url":"https://api.github.com/users/zhiics/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-06T17:57:31Z","updated_at":"2020-03-06T17:57:31Z","author_association":"MEMBER","body":"@masahi Good point. Done","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595887207/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595890287","html_url":"https://github.com/apache/tvm/issues/1996#issuecomment-595890287","issue_url":"https://api.github.com/repos/apache/tvm/issues/1996","id":595890287,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTg5MDI4Nw==","user":{"login":"MarisaKirisame","id":3397377,"node_id":"MDQ6VXNlcjMzOTczNzc=","avatar_url":"https://avatars.githubusercontent.com/u/3397377?v=4","gravatar_id":"","url":"https://api.github.com/users/MarisaKirisame","html_url":"https://github.com/MarisaKirisame","followers_url":"https://api.github.com/users/MarisaKirisame/followers","following_url":"https://api.github.com/users/MarisaKirisame/following{/other_user}","gists_url":"https://api.github.com/users/MarisaKirisame/gists{/gist_id}","starred_url":"https://api.github.com/users/MarisaKirisame/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/MarisaKirisame/subscriptions","organizations_url":"https://api.github.com/users/MarisaKirisame/orgs","repos_url":"https://api.github.com/users/MarisaKirisame/repos","events_url":"https://api.github.com/users/MarisaKirisame/events{/privacy}","received_events_url":"https://api.github.com/users/MarisaKirisame/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-06T18:05:13Z","updated_at":"2020-03-06T18:05:13Z","author_association":"CONTRIBUTOR","body":"I see fundamental problem in this PR.\r\n\r\nJacobian(Y, W):\r\ntensor compute.jacobian{0x165b360}[0] : float32 [32, 3000, 3000, 10000]\r\naxes (i : [0, 31], j : [0, 2999], jac_i0 : [0, 2999], jac_i1 : [0, 9999])\r\nReduction\r\n    identity [0.000000f]\r\n    lhs [x.der]  rhs [y.der]\r\n    combiner [(x.der + y.der)]\r\n    axes (k : [0, 9999])\r\n    condition (uint1)1\r\n    source[0] = (X(i, k)*float32(((jac_i0 == j) && (jac_i1 == k))))\r\n\r\nThis is a really, really big tensor, and the approach this PR take has a \"cliff of death\" performance chart.\r\n\r\nThis PR then rely on simplification to eliminate all those tensor. If any tensor is not eliminated(which seems to be the case for more complex tensor) the performance will be very bad.\r\n\r\nReverse mode automatic differentiation should only calculate vector jacobian product. \r\n\r\nThe jacobian of Y, W, should be dW times jacobian Y W. the Jacobian should simply never be manifested.\r\n\r\ncan this be fixed so the algorithm will not be algorithmically slower without optimization?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595890287/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595904266","html_url":"https://github.com/apache/tvm/issues/1996#issuecomment-595904266","issue_url":"https://api.github.com/repos/apache/tvm/issues/1996","id":595904266,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTkwNDI2Ng==","user":{"login":"yzhliu","id":631860,"node_id":"MDQ6VXNlcjYzMTg2MA==","avatar_url":"https://avatars.githubusercontent.com/u/631860?v=4","gravatar_id":"","url":"https://api.github.com/users/yzhliu","html_url":"https://github.com/yzhliu","followers_url":"https://api.github.com/users/yzhliu/followers","following_url":"https://api.github.com/users/yzhliu/following{/other_user}","gists_url":"https://api.github.com/users/yzhliu/gists{/gist_id}","starred_url":"https://api.github.com/users/yzhliu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yzhliu/subscriptions","organizations_url":"https://api.github.com/users/yzhliu/orgs","repos_url":"https://api.github.com/users/yzhliu/repos","events_url":"https://api.github.com/users/yzhliu/events{/privacy}","received_events_url":"https://api.github.com/users/yzhliu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-06T18:40:36Z","updated_at":"2020-03-06T18:40:36Z","author_association":"MEMBER","body":"@MarisaKirisame could you elaborate \"The jacobian of Y, W, should be dW times jacobian Y W\" ? not sure I correctly understand the symbol you use.\r\nI think the main challenge is to infer the bound for Jacobian's axis, under the scenario where output axes can be arbitrary linear combination of its input tensors' axes","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595904266/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595910286","html_url":"https://github.com/apache/tvm/pull/2498#issuecomment-595910286","issue_url":"https://api.github.com/repos/apache/tvm/issues/2498","id":595910286,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTkxMDI4Ng==","user":{"login":"yzhliu","id":631860,"node_id":"MDQ6VXNlcjYzMTg2MA==","avatar_url":"https://avatars.githubusercontent.com/u/631860?v=4","gravatar_id":"","url":"https://api.github.com/users/yzhliu","html_url":"https://github.com/yzhliu","followers_url":"https://api.github.com/users/yzhliu/followers","following_url":"https://api.github.com/users/yzhliu/following{/other_user}","gists_url":"https://api.github.com/users/yzhliu/gists{/gist_id}","starred_url":"https://api.github.com/users/yzhliu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yzhliu/subscriptions","organizations_url":"https://api.github.com/users/yzhliu/orgs","repos_url":"https://api.github.com/users/yzhliu/repos","events_url":"https://api.github.com/users/yzhliu/events{/privacy}","received_events_url":"https://api.github.com/users/yzhliu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-06T18:55:58Z","updated_at":"2020-03-06T18:55:58Z","author_association":"MEMBER","body":"@sgrechanik-h thanks for reply. that's the same as what I thought. if `solution = V^{-1} x`, what does `old_to_new * solution` mean? In my understanding `old_to_new = V^{-1}`, then `old_to_new * solution = V^{-2} x`, did I miss something?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595910286/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595914989","html_url":"https://github.com/apache/tvm/pull/5002#issuecomment-595914989","issue_url":"https://api.github.com/repos/apache/tvm/issues/5002","id":595914989,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTkxNDk4OQ==","user":{"login":"jmorrill","id":6867609,"node_id":"MDQ6VXNlcjY4Njc2MDk=","avatar_url":"https://avatars.githubusercontent.com/u/6867609?v=4","gravatar_id":"","url":"https://api.github.com/users/jmorrill","html_url":"https://github.com/jmorrill","followers_url":"https://api.github.com/users/jmorrill/followers","following_url":"https://api.github.com/users/jmorrill/following{/other_user}","gists_url":"https://api.github.com/users/jmorrill/gists{/gist_id}","starred_url":"https://api.github.com/users/jmorrill/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jmorrill/subscriptions","organizations_url":"https://api.github.com/users/jmorrill/orgs","repos_url":"https://api.github.com/users/jmorrill/repos","events_url":"https://api.github.com/users/jmorrill/events{/privacy}","received_events_url":"https://api.github.com/users/jmorrill/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-06T19:06:58Z","updated_at":"2020-03-06T19:07:42Z","author_association":"CONTRIBUTOR","body":"@soiferj  This is where it gets a little embarrassing for me.  I've never been able to get a good link to tvm_runtime.dll, even using tvm_runtime_pack.cc without some other changes...So like killing a a fly with a rocket launcher, I work off this CMake change:\r\n\r\nhttps://github.com/jmorrill/tvm/blob/cc0b1e750512b690bbecc9e98a30f7a9945843b1/CMakeLists.txt#L282 aka \"export everything\"\r\n\r\nI can try again to get this tvm_runtime_pack.cc method to give me a link and then see if your fix solves it :).\r\n","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595914989/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595916237","html_url":"https://github.com/apache/tvm/pull/4986#issuecomment-595916237","issue_url":"https://api.github.com/repos/apache/tvm/issues/4986","id":595916237,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTkxNjIzNw==","user":{"login":"tmoreau89","id":5974488,"node_id":"MDQ6VXNlcjU5NzQ0ODg=","avatar_url":"https://avatars.githubusercontent.com/u/5974488?v=4","gravatar_id":"","url":"https://api.github.com/users/tmoreau89","html_url":"https://github.com/tmoreau89","followers_url":"https://api.github.com/users/tmoreau89/followers","following_url":"https://api.github.com/users/tmoreau89/following{/other_user}","gists_url":"https://api.github.com/users/tmoreau89/gists{/gist_id}","starred_url":"https://api.github.com/users/tmoreau89/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tmoreau89/subscriptions","organizations_url":"https://api.github.com/users/tmoreau89/orgs","repos_url":"https://api.github.com/users/tmoreau89/repos","events_url":"https://api.github.com/users/tmoreau89/events{/privacy}","received_events_url":"https://api.github.com/users/tmoreau89/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-06T19:09:56Z","updated_at":"2020-03-06T19:09:56Z","author_association":"CONTRIBUTOR","body":"@pasqoc I suggest that we change the script in the CI to not use the timer and just invoke `m.run()` for simulation based targets. The warmup round is needed for hardware targets for stable performance measurements. I think it's totally fine to use m.run for sim targets, and the timer for FPGA runs. I agree that we shouldn't run 12 rounds of simulation in the CI that's definitely overkill :)","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595916237/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595919391","html_url":"https://github.com/apache/tvm/pull/2498#issuecomment-595919391","issue_url":"https://api.github.com/repos/apache/tvm/issues/2498","id":595919391,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTkxOTM5MQ==","user":{"login":"sergei-grechanik","id":1084979,"node_id":"MDQ6VXNlcjEwODQ5Nzk=","avatar_url":"https://avatars.githubusercontent.com/u/1084979?v=4","gravatar_id":"","url":"https://api.github.com/users/sergei-grechanik","html_url":"https://github.com/sergei-grechanik","followers_url":"https://api.github.com/users/sergei-grechanik/followers","following_url":"https://api.github.com/users/sergei-grechanik/following{/other_user}","gists_url":"https://api.github.com/users/sergei-grechanik/gists{/gist_id}","starred_url":"https://api.github.com/users/sergei-grechanik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sergei-grechanik/subscriptions","organizations_url":"https://api.github.com/users/sergei-grechanik/orgs","repos_url":"https://api.github.com/users/sergei-grechanik/repos","events_url":"https://api.github.com/users/sergei-grechanik/events{/privacy}","received_events_url":"https://api.github.com/users/sergei-grechanik/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-06T19:17:31Z","updated_at":"2020-03-06T19:17:31Z","author_association":"CONTRIBUTOR","body":"@yzhliu Oh, I guess `old_to_new` must be `V` then, not `V^{-1}`","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595919391/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595919837","html_url":"https://github.com/apache/tvm/pull/4986#issuecomment-595919837","issue_url":"https://api.github.com/repos/apache/tvm/issues/4986","id":595919837,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTkxOTgzNw==","user":{"login":"pasqoc","id":61704028,"node_id":"MDQ6VXNlcjYxNzA0MDI4","avatar_url":"https://avatars.githubusercontent.com/u/61704028?v=4","gravatar_id":"","url":"https://api.github.com/users/pasqoc","html_url":"https://github.com/pasqoc","followers_url":"https://api.github.com/users/pasqoc/followers","following_url":"https://api.github.com/users/pasqoc/following{/other_user}","gists_url":"https://api.github.com/users/pasqoc/gists{/gist_id}","starred_url":"https://api.github.com/users/pasqoc/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pasqoc/subscriptions","organizations_url":"https://api.github.com/users/pasqoc/orgs","repos_url":"https://api.github.com/users/pasqoc/repos","events_url":"https://api.github.com/users/pasqoc/events{/privacy}","received_events_url":"https://api.github.com/users/pasqoc/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-06T19:18:39Z","updated_at":"2020-03-06T19:18:39Z","author_association":"CONTRIBUTOR","body":"The same problem happens for de10nano as well, not just sim.\r\nTo make it simple we could add another option warm_up with default true to timer so you can just set timer in CI runs or other tests, without changing anything else.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595919837/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595952667","html_url":"https://github.com/apache/tvm/pull/5002#issuecomment-595952667","issue_url":"https://api.github.com/repos/apache/tvm/issues/5002","id":595952667,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTk1MjY2Nw==","user":{"login":"jmorrill","id":6867609,"node_id":"MDQ6VXNlcjY4Njc2MDk=","avatar_url":"https://avatars.githubusercontent.com/u/6867609?v=4","gravatar_id":"","url":"https://api.github.com/users/jmorrill","html_url":"https://github.com/jmorrill","followers_url":"https://api.github.com/users/jmorrill/followers","following_url":"https://api.github.com/users/jmorrill/following{/other_user}","gists_url":"https://api.github.com/users/jmorrill/gists{/gist_id}","starred_url":"https://api.github.com/users/jmorrill/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jmorrill/subscriptions","organizations_url":"https://api.github.com/users/jmorrill/orgs","repos_url":"https://api.github.com/users/jmorrill/repos","events_url":"https://api.github.com/users/jmorrill/events{/privacy}","received_events_url":"https://api.github.com/users/jmorrill/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-06T20:30:18Z","updated_at":"2020-03-06T20:30:18Z","author_association":"CONTRIBUTOR","body":"@soiferj  Thank you.  This fixes my need to have `set(CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS ON)` and can re-enable INTERPROCEDURAL_OPTIMIZATION on it.\r\n\r\ntvm_runtime.dll links fine on VS2019!\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595952667/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595961932","html_url":"https://github.com/apache/tvm/pull/5002#issuecomment-595961932","issue_url":"https://api.github.com/repos/apache/tvm/issues/5002","id":595961932,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTk2MTkzMg==","user":{"login":"soiferj","id":3534847,"node_id":"MDQ6VXNlcjM1MzQ4NDc=","avatar_url":"https://avatars.githubusercontent.com/u/3534847?v=4","gravatar_id":"","url":"https://api.github.com/users/soiferj","html_url":"https://github.com/soiferj","followers_url":"https://api.github.com/users/soiferj/followers","following_url":"https://api.github.com/users/soiferj/following{/other_user}","gists_url":"https://api.github.com/users/soiferj/gists{/gist_id}","starred_url":"https://api.github.com/users/soiferj/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/soiferj/subscriptions","organizations_url":"https://api.github.com/users/soiferj/orgs","repos_url":"https://api.github.com/users/soiferj/repos","events_url":"https://api.github.com/users/soiferj/events{/privacy}","received_events_url":"https://api.github.com/users/soiferj/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-06T20:56:32Z","updated_at":"2020-03-06T20:56:32Z","author_association":"CONTRIBUTOR","body":"Awesome! Thanks @jmorrill. Would you mind approving the PR if it looks good? :)","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595961932/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595967041","html_url":"https://github.com/apache/tvm/pull/4986#issuecomment-595967041","issue_url":"https://api.github.com/repos/apache/tvm/issues/4986","id":595967041,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTk2NzA0MQ==","user":{"login":"tmoreau89","id":5974488,"node_id":"MDQ6VXNlcjU5NzQ0ODg=","avatar_url":"https://avatars.githubusercontent.com/u/5974488?v=4","gravatar_id":"","url":"https://api.github.com/users/tmoreau89","html_url":"https://github.com/tmoreau89","followers_url":"https://api.github.com/users/tmoreau89/followers","following_url":"https://api.github.com/users/tmoreau89/following{/other_user}","gists_url":"https://api.github.com/users/tmoreau89/gists{/gist_id}","starred_url":"https://api.github.com/users/tmoreau89/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tmoreau89/subscriptions","organizations_url":"https://api.github.com/users/tmoreau89/orgs","repos_url":"https://api.github.com/users/tmoreau89/repos","events_url":"https://api.github.com/users/tmoreau89/events{/privacy}","received_events_url":"https://api.github.com/users/tmoreau89/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-06T21:11:24Z","updated_at":"2020-03-06T21:11:24Z","author_association":"CONTRIBUTOR","body":"I see, if this affects the behavior of the de10nano runs then it's probably a bug on the hardware side (things are not being re-initialized properly)?\r\nThe bug fix can be followed up in a subsequent PR, but adding a corner case check to bypass the timer, with a FIXME, or TODO to mention that timer breaks correctness on DE10nano is a way to make sure it's documented and will be followed up on.\r\n","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595967041/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595969480","html_url":"https://github.com/apache/tvm/pull/4986#issuecomment-595969480","issue_url":"https://api.github.com/repos/apache/tvm/issues/4986","id":595969480,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTk2OTQ4MA==","user":{"login":"pasqoc","id":61704028,"node_id":"MDQ6VXNlcjYxNzA0MDI4","avatar_url":"https://avatars.githubusercontent.com/u/61704028?v=4","gravatar_id":"","url":"https://api.github.com/users/pasqoc","html_url":"https://github.com/pasqoc","followers_url":"https://api.github.com/users/pasqoc/followers","following_url":"https://api.github.com/users/pasqoc/following{/other_user}","gists_url":"https://api.github.com/users/pasqoc/gists{/gist_id}","starred_url":"https://api.github.com/users/pasqoc/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pasqoc/subscriptions","organizations_url":"https://api.github.com/users/pasqoc/orgs","repos_url":"https://api.github.com/users/pasqoc/repos","events_url":"https://api.github.com/users/pasqoc/events{/privacy}","received_events_url":"https://api.github.com/users/pasqoc/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-06T21:18:36Z","updated_at":"2020-03-06T21:18:36Z","author_association":"CONTRIBUTOR","body":"It happens with both TSIM and DE10 so most likely it is a runtime issue with Chisel based targets.\r\nI just have not had the time to look into it, this PR only took me already a long time ...\r\nSo FIXME needs to be documented for both TSIM and DE10.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595969480/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595970177","html_url":"https://github.com/apache/tvm/pull/4986#issuecomment-595970177","issue_url":"https://api.github.com/repos/apache/tvm/issues/4986","id":595970177,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTk3MDE3Nw==","user":{"login":"tmoreau89","id":5974488,"node_id":"MDQ6VXNlcjU5NzQ0ODg=","avatar_url":"https://avatars.githubusercontent.com/u/5974488?v=4","gravatar_id":"","url":"https://api.github.com/users/tmoreau89","html_url":"https://github.com/tmoreau89","followers_url":"https://api.github.com/users/tmoreau89/followers","following_url":"https://api.github.com/users/tmoreau89/following{/other_user}","gists_url":"https://api.github.com/users/tmoreau89/gists{/gist_id}","starred_url":"https://api.github.com/users/tmoreau89/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tmoreau89/subscriptions","organizations_url":"https://api.github.com/users/tmoreau89/orgs","repos_url":"https://api.github.com/users/tmoreau89/repos","events_url":"https://api.github.com/users/tmoreau89/events{/privacy}","received_events_url":"https://api.github.com/users/tmoreau89/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-06T21:20:44Z","updated_at":"2020-03-06T21:20:44Z","author_association":"CONTRIBUTOR","body":"That's a fair assessment, let's go with m.run() as default with a comment about timer causing failures on the Chisel based designs. It's fine if you choose not to address/investigate the bug; do you mind creating a Github issue for it? thanks","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595970177/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595971376","html_url":"https://github.com/apache/tvm/pull/4986#issuecomment-595971376","issue_url":"https://api.github.com/repos/apache/tvm/issues/4986","id":595971376,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTk3MTM3Ng==","user":{"login":"pasqoc","id":61704028,"node_id":"MDQ6VXNlcjYxNzA0MDI4","avatar_url":"https://avatars.githubusercontent.com/u/61704028?v=4","gravatar_id":"","url":"https://api.github.com/users/pasqoc","html_url":"https://github.com/pasqoc","followers_url":"https://api.github.com/users/pasqoc/followers","following_url":"https://api.github.com/users/pasqoc/following{/other_user}","gists_url":"https://api.github.com/users/pasqoc/gists{/gist_id}","starred_url":"https://api.github.com/users/pasqoc/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pasqoc/subscriptions","organizations_url":"https://api.github.com/users/pasqoc/orgs","repos_url":"https://api.github.com/users/pasqoc/repos","events_url":"https://api.github.com/users/pasqoc/events{/privacy}","received_events_url":"https://api.github.com/users/pasqoc/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-06T21:24:07Z","updated_at":"2020-03-06T21:24:07Z","author_association":"CONTRIBUTOR","body":"Sure, no problem.\r\nI'll give it a stab if I have time anyway :-)","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595971376/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595976611","html_url":"https://github.com/apache/tvm/pull/4986#issuecomment-595976611","issue_url":"https://api.github.com/repos/apache/tvm/issues/4986","id":595976611,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTk3NjYxMQ==","user":{"login":"pasqoc","id":61704028,"node_id":"MDQ6VXNlcjYxNzA0MDI4","avatar_url":"https://avatars.githubusercontent.com/u/61704028?v=4","gravatar_id":"","url":"https://api.github.com/users/pasqoc","html_url":"https://github.com/pasqoc","followers_url":"https://api.github.com/users/pasqoc/followers","following_url":"https://api.github.com/users/pasqoc/following{/other_user}","gists_url":"https://api.github.com/users/pasqoc/gists{/gist_id}","starred_url":"https://api.github.com/users/pasqoc/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pasqoc/subscriptions","organizations_url":"https://api.github.com/users/pasqoc/orgs","repos_url":"https://api.github.com/users/pasqoc/repos","events_url":"https://api.github.com/users/pasqoc/events{/privacy}","received_events_url":"https://api.github.com/users/pasqoc/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-06T21:39:56Z","updated_at":"2020-03-06T21:40:20Z","author_association":"CONTRIBUTOR","body":"Hi @tmoreau89, actually I observe the same problem with pynq as well, just tried.\r\nIf I use m.run() everything works (see results in table), every time, but when I use timer() everything breaks.\r\nWhen was the last time you tested deploy_classification with pynq?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595976611/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595980942","html_url":"https://github.com/apache/tvm/issues/1996#issuecomment-595980942","issue_url":"https://api.github.com/repos/apache/tvm/issues/1996","id":595980942,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTk4MDk0Mg==","user":{"login":"MarisaKirisame","id":3397377,"node_id":"MDQ6VXNlcjMzOTczNzc=","avatar_url":"https://avatars.githubusercontent.com/u/3397377?v=4","gravatar_id":"","url":"https://api.github.com/users/MarisaKirisame","html_url":"https://github.com/MarisaKirisame","followers_url":"https://api.github.com/users/MarisaKirisame/followers","following_url":"https://api.github.com/users/MarisaKirisame/following{/other_user}","gists_url":"https://api.github.com/users/MarisaKirisame/gists{/gist_id}","starred_url":"https://api.github.com/users/MarisaKirisame/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/MarisaKirisame/subscriptions","organizations_url":"https://api.github.com/users/MarisaKirisame/orgs","repos_url":"https://api.github.com/users/MarisaKirisame/repos","events_url":"https://api.github.com/users/MarisaKirisame/events{/privacy}","received_events_url":"https://api.github.com/users/MarisaKirisame/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-06T21:53:15Z","updated_at":"2020-03-06T21:53:15Z","author_association":"CONTRIBUTOR","body":"@yzhliu let me explain it another way.\r\nsuppose we work only at the scalar level. people had proved that reverse mode only take 3x more computation. This does not need any optimization - the gradient of f will only be a (small, typicallty less then 10) constant factor times slower then the computation of f itself.\r\n\r\nIn this PR, the gradient of f might be MANY times more expensive.\r\nThis is because it is calculating the jacobian, rather then the product of a vector/matrix/tensor with that jacobian, which can be fused, so the computation can be expressed in a way simpler form.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595980942/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595981655","html_url":"https://github.com/apache/tvm/issues/1996#issuecomment-595981655","issue_url":"https://api.github.com/repos/apache/tvm/issues/1996","id":595981655,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTk4MTY1NQ==","user":{"login":"sergei-grechanik","id":1084979,"node_id":"MDQ6VXNlcjEwODQ5Nzk=","avatar_url":"https://avatars.githubusercontent.com/u/1084979?v=4","gravatar_id":"","url":"https://api.github.com/users/sergei-grechanik","html_url":"https://github.com/sergei-grechanik","followers_url":"https://api.github.com/users/sergei-grechanik/followers","following_url":"https://api.github.com/users/sergei-grechanik/following{/other_user}","gists_url":"https://api.github.com/users/sergei-grechanik/gists{/gist_id}","starred_url":"https://api.github.com/users/sergei-grechanik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sergei-grechanik/subscriptions","organizations_url":"https://api.github.com/users/sergei-grechanik/orgs","repos_url":"https://api.github.com/users/sergei-grechanik/repos","events_url":"https://api.github.com/users/sergei-grechanik/events{/privacy}","received_events_url":"https://api.github.com/users/sergei-grechanik/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-06T21:55:20Z","updated_at":"2020-03-06T21:55:20Z","author_association":"CONTRIBUTOR","body":"@MarisaKirisame One approach that I know of is to differentiate by literally reversing the computation, replacing loads with stores (with `+=` actually) and vice versa. This is usually considered a worse approach because it leads to synchronization problems, but it should be better for some ops, and I guess the worst case performance shouldn't be that horrible.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595981655/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595981693","html_url":"https://github.com/apache/tvm/issues/4999#issuecomment-595981693","issue_url":"https://api.github.com/repos/apache/tvm/issues/4999","id":595981693,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTk4MTY5Mw==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-06T21:55:26Z","updated_at":"2020-03-06T21:55:26Z","author_association":"MEMBER","body":"It would be great if the related discussions are moved to https://discuss.tvm.ai/ :) Please open a new thread there","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595981693/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595981808","html_url":"https://github.com/apache/tvm/issues/4997#issuecomment-595981808","issue_url":"https://api.github.com/repos/apache/tvm/issues/4997","id":595981808,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTk4MTgwOA==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-06T21:55:46Z","updated_at":"2020-03-06T21:55:46Z","author_association":"MEMBER","body":"cc @icemelon9 @wweic @jroesch ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595981808/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595984335","html_url":"https://github.com/apache/tvm/pull/4986#issuecomment-595984335","issue_url":"https://api.github.com/repos/apache/tvm/issues/4986","id":595984335,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTk4NDMzNQ==","user":{"login":"tmoreau89","id":5974488,"node_id":"MDQ6VXNlcjU5NzQ0ODg=","avatar_url":"https://avatars.githubusercontent.com/u/5974488?v=4","gravatar_id":"","url":"https://api.github.com/users/tmoreau89","html_url":"https://github.com/tmoreau89","followers_url":"https://api.github.com/users/tmoreau89/followers","following_url":"https://api.github.com/users/tmoreau89/following{/other_user}","gists_url":"https://api.github.com/users/tmoreau89/gists{/gist_id}","starred_url":"https://api.github.com/users/tmoreau89/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tmoreau89/subscriptions","organizations_url":"https://api.github.com/users/tmoreau89/orgs","repos_url":"https://api.github.com/users/tmoreau89/repos","events_url":"https://api.github.com/users/tmoreau89/events{/privacy}","received_events_url":"https://api.github.com/users/tmoreau89/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-06T22:03:25Z","updated_at":"2020-03-06T22:03:25Z","author_association":"CONTRIBUTOR","body":"@pasqoc I haven't run the full test recently, but I can do it on my end. Are you using a bitstream generated from Chisel or generated from HLS (e.g. the default one that ships with the example)?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595984335/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595985613","html_url":"https://github.com/apache/tvm/pull/4986#issuecomment-595985613","issue_url":"https://api.github.com/repos/apache/tvm/issues/4986","id":595985613,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTk4NTYxMw==","user":{"login":"pasqoc","id":61704028,"node_id":"MDQ6VXNlcjYxNzA0MDI4","avatar_url":"https://avatars.githubusercontent.com/u/61704028?v=4","gravatar_id":"","url":"https://api.github.com/users/pasqoc","html_url":"https://github.com/pasqoc","followers_url":"https://api.github.com/users/pasqoc/followers","following_url":"https://api.github.com/users/pasqoc/following{/other_user}","gists_url":"https://api.github.com/users/pasqoc/gists{/gist_id}","starred_url":"https://api.github.com/users/pasqoc/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pasqoc/subscriptions","organizations_url":"https://api.github.com/users/pasqoc/orgs","repos_url":"https://api.github.com/users/pasqoc/repos","events_url":"https://api.github.com/users/pasqoc/events{/privacy}","received_events_url":"https://api.github.com/users/pasqoc/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-06T22:07:30Z","updated_at":"2020-03-06T22:07:30Z","author_association":"CONTRIBUTOR","body":"For pynq I use a locally generated HLS bitstream.\r\nBut I do not get consistent results with pynq.\r\nWith m.run() always works, with timer() sometimes it works.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595985613/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595986283","html_url":"https://github.com/apache/tvm/pull/4986#issuecomment-595986283","issue_url":"https://api.github.com/repos/apache/tvm/issues/4986","id":595986283,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTk4NjI4Mw==","user":{"login":"tmoreau89","id":5974488,"node_id":"MDQ6VXNlcjU5NzQ0ODg=","avatar_url":"https://avatars.githubusercontent.com/u/5974488?v=4","gravatar_id":"","url":"https://api.github.com/users/tmoreau89","html_url":"https://github.com/tmoreau89","followers_url":"https://api.github.com/users/tmoreau89/followers","following_url":"https://api.github.com/users/tmoreau89/following{/other_user}","gists_url":"https://api.github.com/users/tmoreau89/gists{/gist_id}","starred_url":"https://api.github.com/users/tmoreau89/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tmoreau89/subscriptions","organizations_url":"https://api.github.com/users/tmoreau89/orgs","repos_url":"https://api.github.com/users/tmoreau89/repos","events_url":"https://api.github.com/users/tmoreau89/events{/privacy}","received_events_url":"https://api.github.com/users/tmoreau89/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-06T22:09:51Z","updated_at":"2020-03-06T22:09:51Z","author_association":"CONTRIBUTOR","body":"Does the default HLS generated bitstream produce the right results then? It could very well be a broader issue with the Chisel design and therefore may not even be DE10 specific.\r\n\r\nIf you create the issue, @liangfu , @vegaluisjose and I can look into it and investigate.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595986283/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595989200","html_url":"https://github.com/apache/tvm/pull/4986#issuecomment-595989200","issue_url":"https://api.github.com/repos/apache/tvm/issues/4986","id":595989200,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTk4OTIwMA==","user":{"login":"pasqoc","id":61704028,"node_id":"MDQ6VXNlcjYxNzA0MDI4","avatar_url":"https://avatars.githubusercontent.com/u/61704028?v=4","gravatar_id":"","url":"https://api.github.com/users/pasqoc","html_url":"https://github.com/pasqoc","followers_url":"https://api.github.com/users/pasqoc/followers","following_url":"https://api.github.com/users/pasqoc/following{/other_user}","gists_url":"https://api.github.com/users/pasqoc/gists{/gist_id}","starred_url":"https://api.github.com/users/pasqoc/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pasqoc/subscriptions","organizations_url":"https://api.github.com/users/pasqoc/orgs","repos_url":"https://api.github.com/users/pasqoc/repos","events_url":"https://api.github.com/users/pasqoc/events{/privacy}","received_events_url":"https://api.github.com/users/pasqoc/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-06T22:19:14Z","updated_at":"2020-03-06T22:19:14Z","author_association":"CONTRIBUTOR","body":"After restarting the pynq board both downloaded and local bitstreams seem to work now. I need to remember to power cycle the pynq after attempts to run Resnet34, 50, 101, by my benchmark script. That seems to break the pynq ..... But I am not entirely sure since I did not run the benchmarks recently and pynq was fine ... mmmh\r\nI will create the issue, but you can already reproduce as @vegaluisjose has done with TSIM.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595989200/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595991256","html_url":"https://github.com/apache/tvm/pull/4986#issuecomment-595991256","issue_url":"https://api.github.com/repos/apache/tvm/issues/4986","id":595991256,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTk5MTI1Ng==","user":{"login":"tmoreau89","id":5974488,"node_id":"MDQ6VXNlcjU5NzQ0ODg=","avatar_url":"https://avatars.githubusercontent.com/u/5974488?v=4","gravatar_id":"","url":"https://api.github.com/users/tmoreau89","html_url":"https://github.com/tmoreau89","followers_url":"https://api.github.com/users/tmoreau89/followers","following_url":"https://api.github.com/users/tmoreau89/following{/other_user}","gists_url":"https://api.github.com/users/tmoreau89/gists{/gist_id}","starred_url":"https://api.github.com/users/tmoreau89/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tmoreau89/subscriptions","organizations_url":"https://api.github.com/users/tmoreau89/orgs","repos_url":"https://api.github.com/users/tmoreau89/repos","events_url":"https://api.github.com/users/tmoreau89/events{/privacy}","received_events_url":"https://api.github.com/users/tmoreau89/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-06T22:26:27Z","updated_at":"2020-03-06T22:26:27Z","author_association":"CONTRIBUTOR","body":"It's possible that some failed experiments left the pynq in a stale state. The CMA drivers that perform pinned page allocation can have a stale state if processes exit without a cleanup / freeing of those pinned pages. It causes subsequent experiments to fail and therefore require a power cycle. ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595991256/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595991392","html_url":"https://github.com/apache/tvm/pull/4986#issuecomment-595991392","issue_url":"https://api.github.com/repos/apache/tvm/issues/4986","id":595991392,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTk5MTM5Mg==","user":{"login":"pasqoc","id":61704028,"node_id":"MDQ6VXNlcjYxNzA0MDI4","avatar_url":"https://avatars.githubusercontent.com/u/61704028?v=4","gravatar_id":"","url":"https://api.github.com/users/pasqoc","html_url":"https://github.com/pasqoc","followers_url":"https://api.github.com/users/pasqoc/followers","following_url":"https://api.github.com/users/pasqoc/following{/other_user}","gists_url":"https://api.github.com/users/pasqoc/gists{/gist_id}","starred_url":"https://api.github.com/users/pasqoc/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pasqoc/subscriptions","organizations_url":"https://api.github.com/users/pasqoc/orgs","repos_url":"https://api.github.com/users/pasqoc/repos","events_url":"https://api.github.com/users/pasqoc/events{/privacy}","received_events_url":"https://api.github.com/users/pasqoc/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-06T22:27:03Z","updated_at":"2020-03-06T22:27:03Z","author_association":"CONTRIBUTOR","body":"Just created Issue #5003 .","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595991392/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595992450","html_url":"https://github.com/apache/tvm/pull/4986#issuecomment-595992450","issue_url":"https://api.github.com/repos/apache/tvm/issues/4986","id":595992450,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTk5MjQ1MA==","user":{"login":"tmoreau89","id":5974488,"node_id":"MDQ6VXNlcjU5NzQ0ODg=","avatar_url":"https://avatars.githubusercontent.com/u/5974488?v=4","gravatar_id":"","url":"https://api.github.com/users/tmoreau89","html_url":"https://github.com/tmoreau89","followers_url":"https://api.github.com/users/tmoreau89/followers","following_url":"https://api.github.com/users/tmoreau89/following{/other_user}","gists_url":"https://api.github.com/users/tmoreau89/gists{/gist_id}","starred_url":"https://api.github.com/users/tmoreau89/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tmoreau89/subscriptions","organizations_url":"https://api.github.com/users/tmoreau89/orgs","repos_url":"https://api.github.com/users/tmoreau89/repos","events_url":"https://api.github.com/users/tmoreau89/events{/privacy}","received_events_url":"https://api.github.com/users/tmoreau89/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-06T22:30:30Z","updated_at":"2020-03-06T22:30:30Z","author_association":"CONTRIBUTOR","body":"Nice, thanks! So we'll wait for @liangfu 's linter PR to merge, land that so we can re-enable the linter in your PR.\r\n\r\nSeems like we have the Chisel design passing in hardware, and sims; including the CI tests passing.\r\n\r\n@liangfu @vegaluisjose can you approve the PR if your comments have been addressed?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595992450/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595993460","html_url":"https://github.com/apache/tvm/pull/4986#issuecomment-595993460","issue_url":"https://api.github.com/repos/apache/tvm/issues/4986","id":595993460,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTk5MzQ2MA==","user":{"login":"pasqoc","id":61704028,"node_id":"MDQ6VXNlcjYxNzA0MDI4","avatar_url":"https://avatars.githubusercontent.com/u/61704028?v=4","gravatar_id":"","url":"https://api.github.com/users/pasqoc","html_url":"https://github.com/pasqoc","followers_url":"https://api.github.com/users/pasqoc/followers","following_url":"https://api.github.com/users/pasqoc/following{/other_user}","gists_url":"https://api.github.com/users/pasqoc/gists{/gist_id}","starred_url":"https://api.github.com/users/pasqoc/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pasqoc/subscriptions","organizations_url":"https://api.github.com/users/pasqoc/orgs","repos_url":"https://api.github.com/users/pasqoc/repos","events_url":"https://api.github.com/users/pasqoc/events{/privacy}","received_events_url":"https://api.github.com/users/pasqoc/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-06T22:34:16Z","updated_at":"2020-03-06T22:34:16Z","author_association":"CONTRIBUTOR","body":"Let me commit the changes requested by @vegaluisjose.\r\nI also have the VTA_PYNQ_* to VTA_* renamed variables tested.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595993460/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595993915","html_url":"https://github.com/apache/tvm/pull/4986#issuecomment-595993915","issue_url":"https://api.github.com/repos/apache/tvm/issues/4986","id":595993915,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTk5MzkxNQ==","user":{"login":"tmoreau89","id":5974488,"node_id":"MDQ6VXNlcjU5NzQ0ODg=","avatar_url":"https://avatars.githubusercontent.com/u/5974488?v=4","gravatar_id":"","url":"https://api.github.com/users/tmoreau89","html_url":"https://github.com/tmoreau89","followers_url":"https://api.github.com/users/tmoreau89/followers","following_url":"https://api.github.com/users/tmoreau89/following{/other_user}","gists_url":"https://api.github.com/users/tmoreau89/gists{/gist_id}","starred_url":"https://api.github.com/users/tmoreau89/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tmoreau89/subscriptions","organizations_url":"https://api.github.com/users/tmoreau89/orgs","repos_url":"https://api.github.com/users/tmoreau89/repos","events_url":"https://api.github.com/users/tmoreau89/events{/privacy}","received_events_url":"https://api.github.com/users/tmoreau89/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-06T22:36:02Z","updated_at":"2020-03-06T22:36:02Z","author_association":"CONTRIBUTOR","body":"Once this PR lands, I'll add e2e unit testing in TSIM on a variant of the ResNet-18 tutorial\r\n","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595993915/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595994939","html_url":"https://github.com/apache/tvm/pull/4986#issuecomment-595994939","issue_url":"https://api.github.com/repos/apache/tvm/issues/4986","id":595994939,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTk5NDkzOQ==","user":{"login":"pasqoc","id":61704028,"node_id":"MDQ6VXNlcjYxNzA0MDI4","avatar_url":"https://avatars.githubusercontent.com/u/61704028?v=4","gravatar_id":"","url":"https://api.github.com/users/pasqoc","html_url":"https://github.com/pasqoc","followers_url":"https://api.github.com/users/pasqoc/followers","following_url":"https://api.github.com/users/pasqoc/following{/other_user}","gists_url":"https://api.github.com/users/pasqoc/gists{/gist_id}","starred_url":"https://api.github.com/users/pasqoc/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pasqoc/subscriptions","organizations_url":"https://api.github.com/users/pasqoc/orgs","repos_url":"https://api.github.com/users/pasqoc/repos","events_url":"https://api.github.com/users/pasqoc/events{/privacy}","received_events_url":"https://api.github.com/users/pasqoc/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-06T22:39:43Z","updated_at":"2020-03-06T22:39:43Z","author_association":"CONTRIBUTOR","body":"I have put the linter back in, BTW, so the new linter should not gate this PR.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595994939/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595995212","html_url":"https://github.com/apache/tvm/pull/4986#issuecomment-595995212","issue_url":"https://api.github.com/repos/apache/tvm/issues/4986","id":595995212,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTk5NTIxMg==","user":{"login":"tmoreau89","id":5974488,"node_id":"MDQ6VXNlcjU5NzQ0ODg=","avatar_url":"https://avatars.githubusercontent.com/u/5974488?v=4","gravatar_id":"","url":"https://api.github.com/users/tmoreau89","html_url":"https://github.com/tmoreau89","followers_url":"https://api.github.com/users/tmoreau89/followers","following_url":"https://api.github.com/users/tmoreau89/following{/other_user}","gists_url":"https://api.github.com/users/tmoreau89/gists{/gist_id}","starred_url":"https://api.github.com/users/tmoreau89/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tmoreau89/subscriptions","organizations_url":"https://api.github.com/users/tmoreau89/orgs","repos_url":"https://api.github.com/users/tmoreau89/repos","events_url":"https://api.github.com/users/tmoreau89/events{/privacy}","received_events_url":"https://api.github.com/users/tmoreau89/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-06T22:40:40Z","updated_at":"2020-03-06T22:40:40Z","author_association":"CONTRIBUTOR","body":"> I have put the linter back in, BTW, so the new linter should not gate this PR.\r\n\r\nack","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595995212/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595998520","html_url":"https://github.com/apache/tvm/pull/4995#issuecomment-595998520","issue_url":"https://api.github.com/repos/apache/tvm/issues/4995","id":595998520,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTk5ODUyMA==","user":{"login":"comaniac","id":8262694,"node_id":"MDQ6VXNlcjgyNjI2OTQ=","avatar_url":"https://avatars.githubusercontent.com/u/8262694?v=4","gravatar_id":"","url":"https://api.github.com/users/comaniac","html_url":"https://github.com/comaniac","followers_url":"https://api.github.com/users/comaniac/followers","following_url":"https://api.github.com/users/comaniac/following{/other_user}","gists_url":"https://api.github.com/users/comaniac/gists{/gist_id}","starred_url":"https://api.github.com/users/comaniac/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/comaniac/subscriptions","organizations_url":"https://api.github.com/users/comaniac/orgs","repos_url":"https://api.github.com/users/comaniac/repos","events_url":"https://api.github.com/users/comaniac/events{/privacy}","received_events_url":"https://api.github.com/users/comaniac/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-06T22:52:22Z","updated_at":"2020-03-06T22:52:22Z","author_association":"CONTRIBUTOR","body":"@merrymercy I tested the local runner on Nvidia T4 and observed the issue you mentioned, so I put the get device attributes logic to a separate process so that the master process will not access the GPU context at all.\r\n\r\nOn the other hand, there's still an issue. The tuning process may still encounter initialization errors after a number of trials. I need to further investigate the root cause.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595998520/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595998821","html_url":"https://github.com/apache/tvm/issues/1996#issuecomment-595998821","issue_url":"https://api.github.com/repos/apache/tvm/issues/1996","id":595998821,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTk5ODgyMQ==","user":{"login":"MarisaKirisame","id":3397377,"node_id":"MDQ6VXNlcjMzOTczNzc=","avatar_url":"https://avatars.githubusercontent.com/u/3397377?v=4","gravatar_id":"","url":"https://api.github.com/users/MarisaKirisame","html_url":"https://github.com/MarisaKirisame","followers_url":"https://api.github.com/users/MarisaKirisame/followers","following_url":"https://api.github.com/users/MarisaKirisame/following{/other_user}","gists_url":"https://api.github.com/users/MarisaKirisame/gists{/gist_id}","starred_url":"https://api.github.com/users/MarisaKirisame/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/MarisaKirisame/subscriptions","organizations_url":"https://api.github.com/users/MarisaKirisame/orgs","repos_url":"https://api.github.com/users/MarisaKirisame/repos","events_url":"https://api.github.com/users/MarisaKirisame/events{/privacy}","received_events_url":"https://api.github.com/users/MarisaKirisame/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-06T22:53:38Z","updated_at":"2020-03-06T22:53:38Z","author_association":"CONTRIBUTOR","body":"@sergei-grechanik that is what ppl do. the problem of parallel ad is shared read become shared write, but you can pull optimization tricks to turn shared write into a single write (for example, https://people.csail.mit.edu/tzumao/gradient_halide/).\r\nI think this is a smarter approach, for when their optimization failed, they only have write sync, but when ours optimization failed, we have giant tensors.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/595998821/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/596002645","html_url":"https://github.com/apache/tvm/pull/4995#issuecomment-596002645","issue_url":"https://api.github.com/repos/apache/tvm/issues/4995","id":596002645,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NjAwMjY0NQ==","user":{"login":"jmorrill","id":6867609,"node_id":"MDQ6VXNlcjY4Njc2MDk=","avatar_url":"https://avatars.githubusercontent.com/u/6867609?v=4","gravatar_id":"","url":"https://api.github.com/users/jmorrill","html_url":"https://github.com/jmorrill","followers_url":"https://api.github.com/users/jmorrill/followers","following_url":"https://api.github.com/users/jmorrill/following{/other_user}","gists_url":"https://api.github.com/users/jmorrill/gists{/gist_id}","starred_url":"https://api.github.com/users/jmorrill/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jmorrill/subscriptions","organizations_url":"https://api.github.com/users/jmorrill/orgs","repos_url":"https://api.github.com/users/jmorrill/repos","events_url":"https://api.github.com/users/jmorrill/events{/privacy}","received_events_url":"https://api.github.com/users/jmorrill/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-06T23:08:27Z","updated_at":"2020-03-06T23:08:27Z","author_association":"CONTRIBUTOR","body":"@comaniac When I was working on the Windows RPC server, my first design was to run the trials all in the same process as Windows doesn't `fork(...)`.  It did indeed have a speed improvement.\r\n\r\nAfter running CUDA autotune a while it looked like there was a GPU memory leak (some trial made it jump hundreds of megs).  I spent a long time looking for a leak in the C++ code, but couldn't find anything.  With my very limited understanding, it seemed as if the failed/slow cuda kernels it would test, were themselves leaking.  Only killing the process would free the GPU memory.\r\n\r\nI abandoned the in-process running of trials and moved to a similar design as the Linux current implementation.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/596002645/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/596005630","html_url":"https://github.com/apache/tvm/pull/4996#issuecomment-596005630","issue_url":"https://api.github.com/repos/apache/tvm/issues/4996","id":596005630,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NjAwNTYzMA==","user":{"login":"masahi","id":1776403,"node_id":"MDQ6VXNlcjE3NzY0MDM=","avatar_url":"https://avatars.githubusercontent.com/u/1776403?v=4","gravatar_id":"","url":"https://api.github.com/users/masahi","html_url":"https://github.com/masahi","followers_url":"https://api.github.com/users/masahi/followers","following_url":"https://api.github.com/users/masahi/following{/other_user}","gists_url":"https://api.github.com/users/masahi/gists{/gist_id}","starred_url":"https://api.github.com/users/masahi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/masahi/subscriptions","organizations_url":"https://api.github.com/users/masahi/orgs","repos_url":"https://api.github.com/users/masahi/repos","events_url":"https://api.github.com/users/masahi/events{/privacy}","received_events_url":"https://api.github.com/users/masahi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-06T23:20:58Z","updated_at":"2020-03-06T23:20:58Z","author_association":"MEMBER","body":"Will wait for @mbaret's approval.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/596005630/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]