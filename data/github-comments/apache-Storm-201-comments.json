[{"url":"https://api.github.com/repos/apache/storm/issues/comments/201204396","html_url":"https://github.com/apache/storm/pull/464#issuecomment-201204396","issue_url":"https://api.github.com/repos/apache/storm/issues/464","id":201204396,"node_id":"MDEyOklzc3VlQ29tbWVudDIwMTIwNDM5Ng==","user":{"login":"salimane","id":403938,"node_id":"MDQ6VXNlcjQwMzkzOA==","avatar_url":"https://avatars.githubusercontent.com/u/403938?v=4","gravatar_id":"","url":"https://api.github.com/users/salimane","html_url":"https://github.com/salimane","followers_url":"https://api.github.com/users/salimane/followers","following_url":"https://api.github.com/users/salimane/following{/other_user}","gists_url":"https://api.github.com/users/salimane/gists{/gist_id}","starred_url":"https://api.github.com/users/salimane/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/salimane/subscriptions","organizations_url":"https://api.github.com/users/salimane/orgs","repos_url":"https://api.github.com/users/salimane/repos","events_url":"https://api.github.com/users/salimane/events{/privacy}","received_events_url":"https://api.github.com/users/salimane/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-25T08:48:23Z","updated_at":"2016-03-25T08:48:23Z","author_association":"NONE","body":"@harshach  i can't seem to find the upload rest api in the rest api docs anymore. Has anything changed ?\nThanks\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/201204396/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612518970","html_url":"https://github.com/apache/storm/issues/4456#issuecomment-2612518970","issue_url":"https://api.github.com/repos/apache/storm/issues/4456","id":2612518970,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1MTg5NzA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-25T08:48:24Z","updated_at":"2025-01-24T13:21:23Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user salimane commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/464#issuecomment-201204396\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/464#issuecomment-201204396</a></p>\n\n<p>    @harshach  i can't seem to find the upload rest api in the rest api docs anymore. Has anything changed ?<br/>\n    Thanks</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612518970/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/201211786","html_url":"https://github.com/apache/storm/pull/1248#issuecomment-201211786","issue_url":"https://api.github.com/repos/apache/storm/issues/1248","id":201211786,"node_id":"MDEyOklzc3VlQ29tbWVudDIwMTIxMTc4Ng==","user":{"login":"HeartSaVioR","id":1317309,"node_id":"MDQ6VXNlcjEzMTczMDk=","avatar_url":"https://avatars.githubusercontent.com/u/1317309?v=4","gravatar_id":"","url":"https://api.github.com/users/HeartSaVioR","html_url":"https://github.com/HeartSaVioR","followers_url":"https://api.github.com/users/HeartSaVioR/followers","following_url":"https://api.github.com/users/HeartSaVioR/following{/other_user}","gists_url":"https://api.github.com/users/HeartSaVioR/gists{/gist_id}","starred_url":"https://api.github.com/users/HeartSaVioR/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HeartSaVioR/subscriptions","organizations_url":"https://api.github.com/users/HeartSaVioR/orgs","repos_url":"https://api.github.com/users/HeartSaVioR/repos","events_url":"https://api.github.com/users/HeartSaVioR/events{/privacy}","received_events_url":"https://api.github.com/users/HeartSaVioR/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-25T09:03:12Z","updated_at":"2016-03-25T09:03:12Z","author_association":"CONTRIBUTOR","body":"@harshach Please also review and vote #1247. Thanks!\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/201211786/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612885180","html_url":"https://github.com/apache/storm/issues/5465#issuecomment-2612885180","issue_url":"https://api.github.com/repos/apache/storm/issues/5465","id":2612885180,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4ODUxODA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-25T09:03:13Z","updated_at":"2025-01-24T16:07:57Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user HeartSaVioR commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1248#issuecomment-201211786\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1248#issuecomment-201211786</a></p>\n\n<p>    @harshach Please also review and vote #1247. Thanks!</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612885180/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612889144","html_url":"https://github.com/apache/storm/issues/5490#issuecomment-2612889144","issue_url":"https://api.github.com/repos/apache/storm/issues/5490","id":2612889144,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4ODkxNDQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-25T09:09:21Z","updated_at":"2025-01-24T16:09:52Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user asfgit closed the pull request at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1253\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1253</a></p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612889144/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612889149","html_url":"https://github.com/apache/storm/issues/5490#issuecomment-2612889149","issue_url":"https://api.github.com/repos/apache/storm/issues/5490","id":2612889149,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4ODkxNDk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-25T09:09:58Z","updated_at":"2025-01-24T16:09:52Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user asfgit closed the pull request at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1254\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1254</a></p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612889149/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612889154","html_url":"https://github.com/apache/storm/issues/5490#issuecomment-2612889154","issue_url":"https://api.github.com/repos/apache/storm/issues/5490","id":2612889154,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4ODkxNTQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-25T09:10:15Z","updated_at":"2025-01-24T16:09:52Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=kabhwan\">kabhwan</a>:</i>\n<p>Merged into master and 1.x-branch.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612889154/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/201216440","html_url":"https://github.com/apache/storm/pull/1157#issuecomment-201216440","issue_url":"https://api.github.com/repos/apache/storm/issues/1157","id":201216440,"node_id":"MDEyOklzc3VlQ29tbWVudDIwMTIxNjQ0MA==","user":{"login":"abhishekagarwal87","id":1477457,"node_id":"MDQ6VXNlcjE0Nzc0NTc=","avatar_url":"https://avatars.githubusercontent.com/u/1477457?v=4","gravatar_id":"","url":"https://api.github.com/users/abhishekagarwal87","html_url":"https://github.com/abhishekagarwal87","followers_url":"https://api.github.com/users/abhishekagarwal87/followers","following_url":"https://api.github.com/users/abhishekagarwal87/following{/other_user}","gists_url":"https://api.github.com/users/abhishekagarwal87/gists{/gist_id}","starred_url":"https://api.github.com/users/abhishekagarwal87/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/abhishekagarwal87/subscriptions","organizations_url":"https://api.github.com/users/abhishekagarwal87/orgs","repos_url":"https://api.github.com/users/abhishekagarwal87/repos","events_url":"https://api.github.com/users/abhishekagarwal87/events{/privacy}","received_events_url":"https://api.github.com/users/abhishekagarwal87/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-25T09:23:32Z","updated_at":"2016-03-25T09:23:32Z","author_association":"CONTRIBUTOR","body":"@harshach This PR is moot now after the documentation changes @revans2 has made. @revans2 can confirm?\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/201216440/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612877122","html_url":"https://github.com/apache/storm/issues/5416#issuecomment-2612877122","issue_url":"https://api.github.com/repos/apache/storm/issues/5416","id":2612877122,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4NzcxMjI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-25T09:23:33Z","updated_at":"2025-01-24T16:04:28Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user abhishekagarwal87 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1157#issuecomment-201216440\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1157#issuecomment-201216440</a></p>\n\n<p>    @harshach This PR is moot now after the documentation changes @revans2 has made. @revans2 can confirm?</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612877122/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/201221161","html_url":"https://github.com/apache/storm/pull/1157#issuecomment-201221161","issue_url":"https://api.github.com/repos/apache/storm/issues/1157","id":201221161,"node_id":"MDEyOklzc3VlQ29tbWVudDIwMTIyMTE2MQ==","user":{"login":"HeartSaVioR","id":1317309,"node_id":"MDQ6VXNlcjEzMTczMDk=","avatar_url":"https://avatars.githubusercontent.com/u/1317309?v=4","gravatar_id":"","url":"https://api.github.com/users/HeartSaVioR","html_url":"https://github.com/HeartSaVioR","followers_url":"https://api.github.com/users/HeartSaVioR/followers","following_url":"https://api.github.com/users/HeartSaVioR/following{/other_user}","gists_url":"https://api.github.com/users/HeartSaVioR/gists{/gist_id}","starred_url":"https://api.github.com/users/HeartSaVioR/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HeartSaVioR/subscriptions","organizations_url":"https://api.github.com/users/HeartSaVioR/orgs","repos_url":"https://api.github.com/users/HeartSaVioR/repos","events_url":"https://api.github.com/users/HeartSaVioR/events{/privacy}","received_events_url":"https://api.github.com/users/HeartSaVioR/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-25T09:38:08Z","updated_at":"2016-03-25T09:38:08Z","author_association":"CONTRIBUTOR","body":"Release specific docs are in their branch, but other docs are only in svn.\nI believe `how to expose other docs to contributors` is very important to lead active contributions, so we may have to discuss about this.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/201221161/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612877126","html_url":"https://github.com/apache/storm/issues/5416#issuecomment-2612877126","issue_url":"https://api.github.com/repos/apache/storm/issues/5416","id":2612877126,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4NzcxMjY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-25T09:38:09Z","updated_at":"2025-01-24T16:04:28Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user HeartSaVioR commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1157#issuecomment-201221161\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1157#issuecomment-201221161</a></p>\n\n<p>    Release specific docs are in their branch, but other docs are only in svn.<br/>\n    I believe `how to expose other docs to contributors` is very important to lead active contributions, so we may have to discuss about this.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612877126/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/201223287","html_url":"https://github.com/apache/storm/pull/1157#issuecomment-201223287","issue_url":"https://api.github.com/repos/apache/storm/issues/1157","id":201223287,"node_id":"MDEyOklzc3VlQ29tbWVudDIwMTIyMzI4Nw==","user":{"login":"abhishekagarwal87","id":1477457,"node_id":"MDQ6VXNlcjE0Nzc0NTc=","avatar_url":"https://avatars.githubusercontent.com/u/1477457?v=4","gravatar_id":"","url":"https://api.github.com/users/abhishekagarwal87","html_url":"https://github.com/abhishekagarwal87","followers_url":"https://api.github.com/users/abhishekagarwal87/followers","following_url":"https://api.github.com/users/abhishekagarwal87/following{/other_user}","gists_url":"https://api.github.com/users/abhishekagarwal87/gists{/gist_id}","starred_url":"https://api.github.com/users/abhishekagarwal87/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/abhishekagarwal87/subscriptions","organizations_url":"https://api.github.com/users/abhishekagarwal87/orgs","repos_url":"https://api.github.com/users/abhishekagarwal87/repos","events_url":"https://api.github.com/users/abhishekagarwal87/events{/privacy}","received_events_url":"https://api.github.com/users/abhishekagarwal87/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-25T09:48:30Z","updated_at":"2016-03-25T09:48:30Z","author_association":"CONTRIBUTOR","body":"@HeartSaVioR - At the moment, what will be the procedure of modifying a doc and publishing it? I am not familiar with storm site generation and hence this question. \n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/201223287/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612877130","html_url":"https://github.com/apache/storm/issues/5416#issuecomment-2612877130","issue_url":"https://api.github.com/repos/apache/storm/issues/5416","id":2612877130,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4NzcxMzA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-25T09:48:32Z","updated_at":"2025-01-24T16:04:28Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user abhishekagarwal87 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1157#issuecomment-201223287\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1157#issuecomment-201223287</a></p>\n\n<p>    @HeartSaVioR - At the moment, what will be the procedure of modifying a doc and publishing it? I am not familiar with storm site generation and hence this question. </p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612877130/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/201271418","html_url":"https://github.com/apache/storm/pull/1230#issuecomment-201271418","issue_url":"https://api.github.com/repos/apache/storm/issues/1230","id":201271418,"node_id":"MDEyOklzc3VlQ29tbWVudDIwMTI3MTQxOA==","user":{"login":"vesense","id":6711230,"node_id":"MDQ6VXNlcjY3MTEyMzA=","avatar_url":"https://avatars.githubusercontent.com/u/6711230?v=4","gravatar_id":"","url":"https://api.github.com/users/vesense","html_url":"https://github.com/vesense","followers_url":"https://api.github.com/users/vesense/followers","following_url":"https://api.github.com/users/vesense/following{/other_user}","gists_url":"https://api.github.com/users/vesense/gists{/gist_id}","starred_url":"https://api.github.com/users/vesense/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vesense/subscriptions","organizations_url":"https://api.github.com/users/vesense/orgs","repos_url":"https://api.github.com/users/vesense/repos","events_url":"https://api.github.com/users/vesense/events{/privacy}","received_events_url":"https://api.github.com/users/vesense/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-25T13:08:02Z","updated_at":"2016-03-25T13:08:02Z","author_association":"MEMBER","body":"ping @harshach \n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/201271418/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612875855","html_url":"https://github.com/apache/storm/issues/5408#issuecomment-2612875855","issue_url":"https://api.github.com/repos/apache/storm/issues/5408","id":2612875855,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4NzU4NTU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-25T13:08:03Z","updated_at":"2025-01-24T16:03:52Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user vesense commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1230#issuecomment-201271418\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1230#issuecomment-201271418</a></p>\n\n<p>    ping @harshach </p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612875855/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612652909","html_url":"https://github.com/apache/storm/issues/5108#issuecomment-2612652909","issue_url":"https://api.github.com/repos/apache/storm/issues/5108","id":2612652909,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NTI5MDk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-25T13:40:25Z","updated_at":"2025-01-24T14:23:52Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1249#discussion_r57444330\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1249#discussion_r57444330</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/daemon/Task.java &#8212;<br/>\n    @@ -0,0 +1,246 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.daemon;<br/>\n    +<br/>\n    +import org.apache.storm.Config;<br/>\n    +import org.apache.storm.Thrift;<br/>\n    +import org.apache.storm.daemon.metrics.BuiltinMetrics;<br/>\n    +import org.apache.storm.daemon.metrics.BuiltinMetricsUtil;<br/>\n    +import org.apache.storm.generated.Bolt;<br/>\n    +import org.apache.storm.generated.ComponentObject;<br/>\n    +import org.apache.storm.generated.JavaObject;<br/>\n    +import org.apache.storm.generated.ShellComponent;<br/>\n    +import org.apache.storm.generated.SpoutSpec;<br/>\n    +import org.apache.storm.generated.StateSpoutSpec;<br/>\n    +import org.apache.storm.generated.StormTopology;<br/>\n    +import org.apache.storm.grouping.LoadMapping;<br/>\n    +import org.apache.storm.hooks.ITaskHook;<br/>\n    +import org.apache.storm.hooks.info.EmitInfo;<br/>\n    +import org.apache.storm.metric.api.IMetric;<br/>\n    +import org.apache.storm.spout.ShellSpout;<br/>\n    +import org.apache.storm.stats.CommonStats;<br/>\n    +import org.apache.storm.task.ShellBolt;<br/>\n    +import org.apache.storm.task.TopologyContext;<br/>\n    +import org.apache.storm.task.WorkerTopologyContext;<br/>\n    +import org.apache.storm.tuple.Fields;<br/>\n    +import org.apache.storm.tuple.Tuple;<br/>\n    +import org.apache.storm.tuple.TupleImpl;<br/>\n    +import org.apache.storm.utils.ConfigUtils;<br/>\n    +import org.apache.storm.utils.Utils;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +import java.io.IOException;<br/>\n    +import java.util.ArrayList;<br/>\n    +import java.util.Collections;<br/>\n    +import java.util.List;<br/>\n    +import java.util.Map;<br/>\n    +import java.util.concurrent.Callable;<br/>\n    +<br/>\n    +public class Task {<br/>\n    +<br/>\n    +    private static final Logger LOG = LoggerFactory.getLogger(Task.class);<br/>\n    +<br/>\n    +    private Map executorData;<br/>\n    +    private Map workerData;<br/>\n    +    private TopologyContext systemTopologyContext;<br/>\n    +    private TopologyContext userTopologyContext;<br/>\n    +    private WorkerTopologyContext workerTopologyContext;<br/>\n    +    private LoadMapping loadMapping;<br/>\n    +    private Integer taskId;<br/>\n    +    private String componentId;<br/>\n    +    private Object taskObject;<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    It might be nice to have some javadocs explaining that this is the actual bolt/spout instance that is being executed.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612652909/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612652915","html_url":"https://github.com/apache/storm/issues/5108#issuecomment-2612652915","issue_url":"https://api.github.com/repos/apache/storm/issues/5108","id":2612652915,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NTI5MTU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-25T13:42:25Z","updated_at":"2025-01-24T14:23:53Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1249#discussion_r57444482\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1249#discussion_r57444482</a></p>\n\n<p>    &#8212; Diff: storm-core/src/clj/org/apache/storm/daemon/executor.clj &#8212;<br/>\n    @@ -15,6 +15,7 @@<br/>\n     ;; limitations under the License.<br/>\n     (ns org.apache.storm.daemon.executor<br/>\n       (:use <span class=\"error\">&#91;org.apache.storm.daemon common&#93;</span>)<br/>\n    +  (:use <span class=\"error\">&#91;clojure.walk&#93;</span>)<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    I don't see where this import is used.  Is it needed?</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612652915/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612652920","html_url":"https://github.com/apache/storm/issues/5108#issuecomment-2612652920","issue_url":"https://api.github.com/repos/apache/storm/issues/5108","id":2612652920,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NTI5MjA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-25T13:46:51Z","updated_at":"2025-01-24T14:23:53Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user abhishekagarwal87 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1249#discussion_r57444794\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1249#discussion_r57444794</a></p>\n\n<p>    &#8212; Diff: storm-core/src/clj/org/apache/storm/daemon/executor.clj &#8212;<br/>\n    @@ -15,6 +15,7 @@<br/>\n     ;; limitations under the License.<br/>\n     (ns org.apache.storm.daemon.executor<br/>\n       (:use <span class=\"error\">&#91;org.apache.storm.daemon common&#93;</span>)<br/>\n    +  (:use <span class=\"error\">&#91;clojure.walk&#93;</span>)<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1249/files#diff-6e352b8cfa5485b01db59718464c2dd1R324\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1249/files#diff-6e352b8cfa5485b01db59718464c2dd1R324</a> `stringify-keys`</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612652920/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612652928","html_url":"https://github.com/apache/storm/issues/5108#issuecomment-2612652928","issue_url":"https://api.github.com/repos/apache/storm/issues/5108","id":2612652928,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NTI5Mjg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-25T13:49:14Z","updated_at":"2025-01-24T14:23:53Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user abhishekagarwal87 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1249#discussion_r57444981\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1249#discussion_r57444981</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/daemon/Task.java &#8212;<br/>\n    @@ -0,0 +1,246 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.daemon;<br/>\n    +<br/>\n    +import org.apache.storm.Config;<br/>\n    +import org.apache.storm.Thrift;<br/>\n    +import org.apache.storm.daemon.metrics.BuiltinMetrics;<br/>\n    +import org.apache.storm.daemon.metrics.BuiltinMetricsUtil;<br/>\n    +import org.apache.storm.generated.Bolt;<br/>\n    +import org.apache.storm.generated.ComponentObject;<br/>\n    +import org.apache.storm.generated.JavaObject;<br/>\n    +import org.apache.storm.generated.ShellComponent;<br/>\n    +import org.apache.storm.generated.SpoutSpec;<br/>\n    +import org.apache.storm.generated.StateSpoutSpec;<br/>\n    +import org.apache.storm.generated.StormTopology;<br/>\n    +import org.apache.storm.grouping.LoadMapping;<br/>\n    +import org.apache.storm.hooks.ITaskHook;<br/>\n    +import org.apache.storm.hooks.info.EmitInfo;<br/>\n    +import org.apache.storm.metric.api.IMetric;<br/>\n    +import org.apache.storm.spout.ShellSpout;<br/>\n    +import org.apache.storm.stats.CommonStats;<br/>\n    +import org.apache.storm.task.ShellBolt;<br/>\n    +import org.apache.storm.task.TopologyContext;<br/>\n    +import org.apache.storm.task.WorkerTopologyContext;<br/>\n    +import org.apache.storm.tuple.Fields;<br/>\n    +import org.apache.storm.tuple.Tuple;<br/>\n    +import org.apache.storm.tuple.TupleImpl;<br/>\n    +import org.apache.storm.utils.ConfigUtils;<br/>\n    +import org.apache.storm.utils.Utils;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +import java.io.IOException;<br/>\n    +import java.util.ArrayList;<br/>\n    +import java.util.Collections;<br/>\n    +import java.util.List;<br/>\n    +import java.util.Map;<br/>\n    +import java.util.concurrent.Callable;<br/>\n    +<br/>\n    +public class Task {<br/>\n    +<br/>\n    +    private static final Logger LOG = LoggerFactory.getLogger(Task.class);<br/>\n    +<br/>\n    +    private Map executorData;<br/>\n    +    private Map workerData;<br/>\n    +    private TopologyContext systemTopologyContext;<br/>\n    +    private TopologyContext userTopologyContext;<br/>\n    +    private WorkerTopologyContext workerTopologyContext;<br/>\n    +    private LoadMapping loadMapping;<br/>\n    +    private Integer taskId;<br/>\n    +    private String componentId;<br/>\n    +    private Object taskObject;<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    I agree, the name is a bit confusing. I was thinking of renaming it to componentObject but that may again be confusing. Any suggestions? I will add the javadoc nonetheless</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612652928/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612652934","html_url":"https://github.com/apache/storm/issues/5108#issuecomment-2612652934","issue_url":"https://api.github.com/repos/apache/storm/issues/5108","id":2612652934,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NTI5MzQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-25T13:51:39Z","updated_at":"2025-01-24T14:23:53Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1249#discussion_r57445169\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1249#discussion_r57445169</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/daemon/Grouper.java &#8212;<br/>\n    @@ -0,0 +1,111 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.daemon;<br/>\n    +<br/>\n    +import org.apache.storm.Config;<br/>\n    +import org.apache.storm.Thrift;<br/>\n    +import org.apache.storm.generated.GlobalStreamId;<br/>\n    +import org.apache.storm.generated.Grouping;<br/>\n    +import org.apache.storm.grouping.CustomStreamGrouping;<br/>\n    +import org.apache.storm.grouping.LoadAwareShuffleGrouping;<br/>\n    +import org.apache.storm.grouping.LoadMapping;<br/>\n    +import org.apache.storm.grouping.ShuffleGrouping;<br/>\n    +import org.apache.storm.task.WorkerTopologyContext;<br/>\n    +import org.apache.storm.tuple.Fields;<br/>\n    +import org.apache.storm.utils.TupleUtils;<br/>\n    +<br/>\n    +import java.util.Collections;<br/>\n    +import java.util.List;<br/>\n    +import java.util.Map;<br/>\n    +<br/>\n    +public abstract class Grouper {<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Why is this not a `LoadAwareCustomStreamGrouping`?  Or perhaps better a different interface that LoadAwareCustomStreamGrouping can extend?</p>\n\n<p>    That way we would not need as much glue code to make custom groupings work.  It also would make it more consistent in the naming of methods with `chooseTasks` instead of `outTasks`.  This is minor, and a bit for my curiosity if you had a reason because adding in more class hierarchy has its drawbacks as well.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612652934/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612652944","html_url":"https://github.com/apache/storm/issues/5108#issuecomment-2612652944","issue_url":"https://api.github.com/repos/apache/storm/issues/5108","id":2612652944,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NTI5NDQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-25T14:00:38Z","updated_at":"2025-01-24T14:23:53Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1249#discussion_r57445892\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1249#discussion_r57445892</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/daemon/Grouper.java &#8212;<br/>\n    @@ -0,0 +1,111 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.daemon;<br/>\n    +<br/>\n    +import org.apache.storm.Config;<br/>\n    +import org.apache.storm.Thrift;<br/>\n    +import org.apache.storm.generated.GlobalStreamId;<br/>\n    +import org.apache.storm.generated.Grouping;<br/>\n    +import org.apache.storm.grouping.CustomStreamGrouping;<br/>\n    +import org.apache.storm.grouping.LoadAwareShuffleGrouping;<br/>\n    +import org.apache.storm.grouping.LoadMapping;<br/>\n    +import org.apache.storm.grouping.ShuffleGrouping;<br/>\n    +import org.apache.storm.task.WorkerTopologyContext;<br/>\n    +import org.apache.storm.tuple.Fields;<br/>\n    +import org.apache.storm.utils.TupleUtils;<br/>\n    +<br/>\n    +import java.util.Collections;<br/>\n    +import java.util.List;<br/>\n    +import java.util.Map;<br/>\n    +<br/>\n    +public abstract class Grouper {<br/>\n    +<br/>\n    +    public abstract List<Integer> outTasks(Integer taskId, List<Object> values, LoadMapping load);<br/>\n    +<br/>\n    +    public static class FieldsGrouper extends Grouper {<br/>\n    +<br/>\n    +private final Fields outFields;<br/>\n    +private final List<Integer> targetTasks;<br/>\n    +private final Fields groupFields;<br/>\n    +private final int numTasks;<br/>\n    +<br/>\n    +public FieldsGrouper(Fields outFields, Grouping thriftGrouping,<br/>\n    +     List<Integer> targetTasks) </p>\n{\n    +    this.outFields = outFields;\n    +    this.targetTasks = targetTasks;\n    +    this.groupFields = new Fields(Thrift.fieldGrouping(thriftGrouping));\n    +    this.numTasks = targetTasks.size();\n    +}\n<p>    +<br/>\n    +@Override<br/>\n    +public List<Integer> outTasks(Integer taskId, List<Object> values, LoadMapping load) </p>\n{\n    +    int targetTaskIndex = Math.abs(TupleUtils.listHashCode(outFields.select(groupFields, values))) % numTasks;\n    +    return Collections.singletonList(targetTasks.get(targetTaskIndex));\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    public static class ShuffleGrouper extends Grouper {<br/>\n    +<br/>\n    +private Grouper delegate;<br/>\n    +<br/>\n    +public ShuffleGrouper(WorkerTopologyContext context, String componentId, String streamId,<br/>\n    +      List<Integer> targetTasks, Map topoConf) {<br/>\n    +    if (null != topoConf.get(Config.TOPOLOGY_DISABLE_LOADAWARE_MESSAGING) && (boolean) topoConf<br/>\n    +.get(Config.TOPOLOGY_DISABLE_LOADAWARE_MESSAGING)) </p>\n{\n    +delegate = new CustomGrouper(new ShuffleGrouping(), context, componentId, streamId, targetTasks);\n    +    }\n<p> else </p>\n{\n    +delegate = new LoadAwareCustomGrouper(new LoadAwareShuffleGrouping(), context, componentId, streamId, targetTasks);\n    +    }\n<p>    +}<br/>\n    +<br/>\n    +@Override<br/>\n    +public List<Integer> outTasks(Integer taskId, List<Object> values, LoadMapping load) </p>\n{\n    +    return delegate.outTasks(taskId, values, load);\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    public static class CustomGrouper extends Grouper {<br/>\n    +<br/>\n    +protected final CustomStreamGrouping customStreamGrouping;<br/>\n    +<br/>\n    +public CustomGrouper(CustomStreamGrouping customStreamGrouping, WorkerTopologyContext context, String componentId, String streamId,<br/>\n    +     List<Integer> targetTasks) </p>\n{\n    +    this.customStreamGrouping = customStreamGrouping;\n    +    this.customStreamGrouping.prepare(context, new GlobalStreamId(componentId, streamId), targetTasks);\n    +}\n<p>    +<br/>\n    +@Override<br/>\n    +public List<Integer> outTasks(Integer taskId, List<Object> values, LoadMapping load) </p>\n{\n    +    return customStreamGrouping.chooseTasks(taskId, values);\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    public static class LoadAwareCustomGrouper extends CustomGrouper {<br/>\n    +<br/>\n    +public LoadAwareCustomGrouper(LoadAwareShuffleGrouping customStreamGrouping, WorkerTopologyContext context, String componentId,<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    `LoadAwareShuffleGrouping` should be `LoadAwareCustomStreamGrouping` instead.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612652944/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612652951","html_url":"https://github.com/apache/storm/issues/5108#issuecomment-2612652951","issue_url":"https://api.github.com/repos/apache/storm/issues/5108","id":2612652951,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NTI5NTE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-25T14:01:21Z","updated_at":"2025-01-24T14:23:53Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1249#discussion_r57445950\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1249#discussion_r57445950</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/daemon/GrouperFactory.java &#8212;<br/>\n    @@ -0,0 +1,110 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.daemon;<br/>\n    +<br/>\n    +import com.google.common.collect.Ordering;<br/>\n    +import com.google.common.collect.Sets;<br/>\n    +<br/>\n    +import org.apache.storm.Thrift;<br/>\n    +import org.apache.storm.generated.Grouping;<br/>\n    +import org.apache.storm.grouping.CustomStreamGrouping;<br/>\n    +import org.apache.storm.grouping.LoadMapping;<br/>\n    +import org.apache.storm.task.WorkerTopologyContext;<br/>\n    +import org.apache.storm.tuple.Fields;<br/>\n    +import org.apache.storm.utils.Utils;<br/>\n    +<br/>\n    +import java.util.ArrayList;<br/>\n    +import java.util.Collections;<br/>\n    +import java.util.List;<br/>\n    +import java.util.Map;<br/>\n    +import java.util.Random;<br/>\n    +import java.util.Set;<br/>\n    +<br/>\n    +public class GrouperFactory {<br/>\n    +<br/>\n    +    // A no-op grouper<br/>\n    +    public static Grouper DIRECT = new Grouper() {<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    final</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612652951/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612652957","html_url":"https://github.com/apache/storm/issues/5108#issuecomment-2612652957","issue_url":"https://api.github.com/repos/apache/storm/issues/5108","id":2612652957,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NTI5NTc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-25T14:16:46Z","updated_at":"2025-01-24T14:23:53Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1249#discussion_r57447253\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1249#discussion_r57447253</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/daemon/GrouperFactory.java &#8212;<br/>\n    @@ -0,0 +1,110 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.daemon;<br/>\n    +<br/>\n    +import com.google.common.collect.Ordering;<br/>\n    +import com.google.common.collect.Sets;<br/>\n    +<br/>\n    +import org.apache.storm.Thrift;<br/>\n    +import org.apache.storm.generated.Grouping;<br/>\n    +import org.apache.storm.grouping.CustomStreamGrouping;<br/>\n    +import org.apache.storm.grouping.LoadMapping;<br/>\n    +import org.apache.storm.task.WorkerTopologyContext;<br/>\n    +import org.apache.storm.tuple.Fields;<br/>\n    +import org.apache.storm.utils.Utils;<br/>\n    +<br/>\n    +import java.util.ArrayList;<br/>\n    +import java.util.Collections;<br/>\n    +import java.util.List;<br/>\n    +import java.util.Map;<br/>\n    +import java.util.Random;<br/>\n    +import java.util.Set;<br/>\n    +<br/>\n    +public class GrouperFactory {<br/>\n    +<br/>\n    +    // A no-op grouper<br/>\n    +    public static Grouper DIRECT = new Grouper() {<br/>\n    +@Override<br/>\n    +public List<Integer> outTasks(Integer taskId, List<Object> values, LoadMapping load) </p>\n{\n    +    return null;\n    +}\n<p>    +    };<br/>\n    +<br/>\n    +    public static Grouper mkGrouper(WorkerTopologyContext context, String componentId, String streamId, Fields outFields,<br/>\n    +    Grouping thriftGrouping,<br/>\n    +    List<Integer> unsortedTargetTasks,<br/>\n    +    Map topoConf) {<br/>\n    +final Random random = new Random();<br/>\n    +final List<Integer> targetTasks = Ordering.natural().sortedCopy(unsortedTargetTasks);<br/>\n    +final int numTasks = targetTasks.size();<br/>\n    +switch (Thrift.groupingType(thriftGrouping)) {<br/>\n    +    case FIELDS:<br/>\n    +if (Thrift.isGlobalGrouping(thriftGrouping)) {<br/>\n    +    return new Grouper() {<br/>\n    +@Override<br/>\n    +public List<Integer> outTasks(Integer taskId, List value, LoadMapping load) {<br/>\n    +    if (targetTasks.isEmpty()) </p>\n{\n    +return null;\n    +    }\n<p>    +    // It's possible for target to have multiple tasks if it reads multiple sources<br/>\n    +    return Collections.singletonList(targetTasks.get(0));<br/>\n    +}<br/>\n    +    };<br/>\n    +}<br/>\n    +return new Grouper.FieldsGrouper(outFields, thriftGrouping, targetTasks);<br/>\n    +    case SHUFFLE:<br/>\n    +return new Grouper.ShuffleGrouper(context, componentId, streamId, targetTasks, topoConf);<br/>\n    +    case ALL:<br/>\n    +return new Grouper() {<br/>\n    +    @Override<br/>\n    +    public List<Integer> outTasks(Integer taskId, List<Object> values, LoadMapping load) </p>\n{\n    +return targetTasks;\n    +    }\n<p>    +};<br/>\n    +    case LOCAL_OR_SHUFFLE:<br/>\n    +Set<Integer> sameTasks = Sets.intersection(Sets.newHashSet(targetTasks), Sets.newHashSet(context.getThisWorkerTasks()));<br/>\n    +if (sameTasks.isEmpty()) </p>\n{\n    +    return new Grouper.ShuffleGrouper(context, componentId, streamId, targetTasks, topoConf);\n    +}\n<p> else </p>\n{\n    +    return new Grouper.ShuffleGrouper(context, componentId, streamId, new ArrayList<>(sameTasks), topoConf);\n    +}\n<p>    +    case NONE:<br/>\n    +return new Grouper() {<br/>\n    +    @Override<br/>\n    +    public List<Integer> outTasks(Integer taskId, List<Object> values, LoadMapping load) </p>\n{\n    +int index = random.nextInt(numTasks);\n    +return Collections.singletonList(targetTasks.get(index));\n    +    }\n<p>    +};<br/>\n    +    case CUSTOM_OBJECT:<br/>\n    +CustomStreamGrouping customObject =<br/>\n    +    (CustomStreamGrouping) Thrift.instantiateJavaObject(thriftGrouping.get_custom_object());<br/>\n    +return new Grouper.CustomGrouper(customObject, context, componentId, streamId, targetTasks);<br/>\n    +    case CUSTOM_SERIALIZED:<br/>\n    +CustomStreamGrouping<br/>\n    +    customSerialized =<br/>\n    +    Utils.javaDeserialize(thriftGrouping.get_custom_serialized(), CustomStreamGrouping.class);<br/>\n    +return new Grouper.CustomGrouper(customSerialized, context, componentId, streamId, targetTasks);<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    If someone created a CustormStreamGrouping that was also LoadAwareCustomStreamGrouping the LoadAware portion would never be called, because we are now using constructors instead of the builder pattern.  This really should be.</p>\n\n<p>    ```<br/>\n    case CUSTOM_SERIALIZED:<br/>\n      CustomStreamGrouping<br/>\ncustomGrouping =<br/>\n  Utils.javaDeserialize(thriftGrouping.get_custom_serialized(), CustomStreamGrouping.class);<br/>\nif (customGrouping instanceof CustomLoadAwareStreamGrouping) </p>\n{\n  return new Grouper.LoadAwareCustomGrouper(customSerialized, context, componentId, streamId, targetTasks);\n}\n<p>return new Grouper.CustomGrouper(customSerialized, context, componentId, streamId, targetTasks);<br/>\n    ```</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612652957/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612652962","html_url":"https://github.com/apache/storm/issues/5108#issuecomment-2612652962","issue_url":"https://api.github.com/repos/apache/storm/issues/5108","id":2612652962,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NTI5NjI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-25T14:17:47Z","updated_at":"2025-01-24T14:23:53Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1249#discussion_r57447354\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1249#discussion_r57447354</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/daemon/GrouperFactory.java &#8212;<br/>\n    @@ -0,0 +1,110 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.daemon;<br/>\n    +<br/>\n    +import com.google.common.collect.Ordering;<br/>\n    +import com.google.common.collect.Sets;<br/>\n    +<br/>\n    +import org.apache.storm.Thrift;<br/>\n    +import org.apache.storm.generated.Grouping;<br/>\n    +import org.apache.storm.grouping.CustomStreamGrouping;<br/>\n    +import org.apache.storm.grouping.LoadMapping;<br/>\n    +import org.apache.storm.task.WorkerTopologyContext;<br/>\n    +import org.apache.storm.tuple.Fields;<br/>\n    +import org.apache.storm.utils.Utils;<br/>\n    +<br/>\n    +import java.util.ArrayList;<br/>\n    +import java.util.Collections;<br/>\n    +import java.util.List;<br/>\n    +import java.util.Map;<br/>\n    +import java.util.Random;<br/>\n    +import java.util.Set;<br/>\n    +<br/>\n    +public class GrouperFactory {<br/>\n    +<br/>\n    +    // A no-op grouper<br/>\n    +    public static Grouper DIRECT = new Grouper() {<br/>\n    +@Override<br/>\n    +public List<Integer> outTasks(Integer taskId, List<Object> values, LoadMapping load) </p>\n{\n    +    return null;\n    +}\n<p>    +    };<br/>\n    +<br/>\n    +    public static Grouper mkGrouper(WorkerTopologyContext context, String componentId, String streamId, Fields outFields,<br/>\n    +    Grouping thriftGrouping,<br/>\n    +    List<Integer> unsortedTargetTasks,<br/>\n    +    Map topoConf) {<br/>\n    +final Random random = new Random();<br/>\n    +final List<Integer> targetTasks = Ordering.natural().sortedCopy(unsortedTargetTasks);<br/>\n    +final int numTasks = targetTasks.size();<br/>\n    +switch (Thrift.groupingType(thriftGrouping)) {<br/>\n    +    case FIELDS:<br/>\n    +if (Thrift.isGlobalGrouping(thriftGrouping)) {<br/>\n    +    return new Grouper() {<br/>\n    +@Override<br/>\n    +public List<Integer> outTasks(Integer taskId, List value, LoadMapping load) {<br/>\n    +    if (targetTasks.isEmpty()) </p>\n{\n    +return null;\n    +    }\n<p>    +    // It's possible for target to have multiple tasks if it reads multiple sources<br/>\n    +    return Collections.singletonList(targetTasks.get(0));<br/>\n    +}<br/>\n    +    };<br/>\n    +}<br/>\n    +return new Grouper.FieldsGrouper(outFields, thriftGrouping, targetTasks);<br/>\n    +    case SHUFFLE:<br/>\n    +return new Grouper.ShuffleGrouper(context, componentId, streamId, targetTasks, topoConf);<br/>\n    +    case ALL:<br/>\n    +return new Grouper() {<br/>\n    +    @Override<br/>\n    +    public List<Integer> outTasks(Integer taskId, List<Object> values, LoadMapping load) </p>\n{\n    +return targetTasks;\n    +    }\n<p>    +};<br/>\n    +    case LOCAL_OR_SHUFFLE:<br/>\n    +Set<Integer> sameTasks = Sets.intersection(Sets.newHashSet(targetTasks), Sets.newHashSet(context.getThisWorkerTasks()));<br/>\n    +if (sameTasks.isEmpty()) </p>\n{\n    +    return new Grouper.ShuffleGrouper(context, componentId, streamId, targetTasks, topoConf);\n    +}\n<p> else </p>\n{\n    +    return new Grouper.ShuffleGrouper(context, componentId, streamId, new ArrayList<>(sameTasks), topoConf);\n    +}\n<p>    +    case NONE:<br/>\n    +return new Grouper() {<br/>\n    +    @Override<br/>\n    +    public List<Integer> outTasks(Integer taskId, List<Object> values, LoadMapping load) </p>\n{\n    +int index = random.nextInt(numTasks);\n    +return Collections.singletonList(targetTasks.get(index));\n    +    }\n<p>    +};<br/>\n    +    case CUSTOM_OBJECT:<br/>\n    +CustomStreamGrouping customObject =<br/>\n    +    (CustomStreamGrouping) Thrift.instantiateJavaObject(thriftGrouping.get_custom_object());<br/>\n    +return new Grouper.CustomGrouper(customObject, context, componentId, streamId, targetTasks);<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    If someone created a CustormStreamGrouping that was also LoadAwareCustomStreamGrouping the LoadAware portion would never be called, because we are now using constructors instead of the builder pattern.  This really should be.</p>\n\n<p>    ```<br/>\n    case CUSTOM_OBJECT:<br/>\n      CustomStreamGrouping<br/>\ncustomGrouping =<br/>\n  (CustomStreamGrouping) Thrift.instantiateJavaObject(thriftGrouping.get_custom_object());<br/>\nif (customGrouping instanceof CustomLoadAwareStreamGrouping) </p>\n{\n  return new Grouper.LoadAwareCustomGrouper(customSerialized, context, componentId, streamId, targetTasks);\n}\n<p>return new Grouper.CustomGrouper(customSerialized, context, componentId, streamId, targetTasks);<br/>\n    ```</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612652962/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612652968","html_url":"https://github.com/apache/storm/issues/5108#issuecomment-2612652968","issue_url":"https://api.github.com/repos/apache/storm/issues/5108","id":2612652968,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NTI5Njg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-25T14:21:48Z","updated_at":"2025-01-24T14:23:54Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1249#discussion_r57447684\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1249#discussion_r57447684</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/daemon/Task.java &#8212;<br/>\n    @@ -0,0 +1,246 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.daemon;<br/>\n    +<br/>\n    +import org.apache.storm.Config;<br/>\n    +import org.apache.storm.Thrift;<br/>\n    +import org.apache.storm.daemon.metrics.BuiltinMetrics;<br/>\n    +import org.apache.storm.daemon.metrics.BuiltinMetricsUtil;<br/>\n    +import org.apache.storm.generated.Bolt;<br/>\n    +import org.apache.storm.generated.ComponentObject;<br/>\n    +import org.apache.storm.generated.JavaObject;<br/>\n    +import org.apache.storm.generated.ShellComponent;<br/>\n    +import org.apache.storm.generated.SpoutSpec;<br/>\n    +import org.apache.storm.generated.StateSpoutSpec;<br/>\n    +import org.apache.storm.generated.StormTopology;<br/>\n    +import org.apache.storm.grouping.LoadMapping;<br/>\n    +import org.apache.storm.hooks.ITaskHook;<br/>\n    +import org.apache.storm.hooks.info.EmitInfo;<br/>\n    +import org.apache.storm.metric.api.IMetric;<br/>\n    +import org.apache.storm.spout.ShellSpout;<br/>\n    +import org.apache.storm.stats.CommonStats;<br/>\n    +import org.apache.storm.task.ShellBolt;<br/>\n    +import org.apache.storm.task.TopologyContext;<br/>\n    +import org.apache.storm.task.WorkerTopologyContext;<br/>\n    +import org.apache.storm.tuple.Fields;<br/>\n    +import org.apache.storm.tuple.Tuple;<br/>\n    +import org.apache.storm.tuple.TupleImpl;<br/>\n    +import org.apache.storm.utils.ConfigUtils;<br/>\n    +import org.apache.storm.utils.Utils;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +import java.io.IOException;<br/>\n    +import java.util.ArrayList;<br/>\n    +import java.util.Collections;<br/>\n    +import java.util.List;<br/>\n    +import java.util.Map;<br/>\n    +import java.util.concurrent.Callable;<br/>\n    +<br/>\n    +public class Task {<br/>\n    +<br/>\n    +    private static final Logger LOG = LoggerFactory.getLogger(Task.class);<br/>\n    +<br/>\n    +    private Map executorData;<br/>\n    +    private Map workerData;<br/>\n    +    private TopologyContext systemTopologyContext;<br/>\n    +    private TopologyContext userTopologyContext;<br/>\n    +    private WorkerTopologyContext workerTopologyContext;<br/>\n    +    private LoadMapping loadMapping;<br/>\n    +    private Integer taskId;<br/>\n    +    private String componentId;<br/>\n    +    private Object taskObject;<br/>\n    +    private Map stormConf;<br/>\n    +    private Callable<Boolean> emitSampler;<br/>\n    +    private CommonStats executorStats;<br/>\n    +    private Map<String, Map<String, Grouper>> streamComponentToGrouper;<br/>\n    +    private BuiltinMetrics builtInMetrics;<br/>\n    +    private boolean debug;<br/>\n    +<br/>\n    +    public Task(Map executorData, Integer taskId) throws IOException </p>\n{\n    +this.taskId = taskId;\n    +this.executorData = executorData;\n    +this.workerData = (Map) executorData.get(\"worker\");\n    +this.stormConf = (Map) executorData.get(\"storm-conf\");\n    +this.componentId = (String) executorData.get(\"component-id\");\n    +this.streamComponentToGrouper = (Map<String, Map<String, Grouper>>) executorData.get(\"stream->component->grouper\");\n    +this.executorStats = (CommonStats) executorData.get(\"stats\");\n    +this.builtInMetrics = BuiltinMetricsUtil.mkData((String) executorData.get(\"type\"), this.executorStats);\n    +this.workerTopologyContext = (WorkerTopologyContext) executorData.get(\"worker-context\");\n    +this.emitSampler = ConfigUtils.mkStatsSampler(stormConf);\n    +this.loadMapping = (LoadMapping) workerData.get(\"load-mapping\");\n    +this.systemTopologyContext = mkTopologyContextBuilder((StormTopology) workerData.get(\"system-topology\"));\n    +this.userTopologyContext = mkTopologyContextBuilder((StormTopology) workerData.get(\"topology\"));\n    +this.taskObject = mkTaskObject();\n    +this.debug = stormConf.containsKey(Config.TOPOLOGY_DEBUG) && (Boolean) stormConf.get(Config.TOPOLOGY_DEBUG);\n    +this.addTaskHooks();\n    +    }\n<p>    +<br/>\n    +    public List<Integer> getOutgoingTasks(Integer outTaskId, String stream, List<Object> values) {<br/>\n    +if (debug) {<br/>\n    +    LOG.info(\"Emitting direct: {}; {} {} {} \", outTaskId, componentId, stream, values);<br/>\n    +}<br/>\n    +String targetComponent = workerTopologyContext.getComponentId(outTaskId);<br/>\n    +Map<String, Grouper> componentGrouping = streamComponentToGrouper.get(stream);<br/>\n    +Grouper grouping = componentGrouping.get(targetComponent);<br/>\n    +if (null == grouping) </p>\n{\n    +    outTaskId = null;\n    +}\n<p>    +if (grouping != null && grouping != GrouperFactory.DIRECT) </p>\n{\n    +    throw new IllegalArgumentException(\"Cannot emitDirect to a task expecting a regular grouping\");\n    +}\n<p>    +new EmitInfo(values, stream, taskId, Collections.singletonList(outTaskId)).applyOn(userTopologyContext);<br/>\n    +try {<br/>\n    +    if (emitSampler.call()) {<br/>\n    +executorStats.emittedTuple(stream);<br/>\n    +if (null != outTaskId) </p>\n{\n    +    executorStats.transferredTuples(stream, 1);\n    +}\n<p>    +    }<br/>\n    +} catch (Exception e) </p>\n{\n    +    throw new RuntimeException(e);\n    +}<br/>\n    +if (null != outTaskId) {\n    +    return Collections.singletonList(outTaskId);\n    +}<br/>\n    +return null;<br/>\n    +    }<br/>\n    +<br/>\n    +    public List<Integer> getOutgoingTasks(String stream, List<Object> values) {<br/>\n    +if (debug) {<br/>\n    +    LOG.info(\"Emitting: {} {} {}\", componentId, stream, values);<br/>\n    +}<br/>\n    +List<Integer> outTasks = new ArrayList<>();<br/>\n    +if (!streamComponentToGrouper.containsKey(stream)) {\n    +    throw new IllegalArgumentException(\"Unknown stream ID: \" + stream);\n    +}<br/>\n    +if (null != streamComponentToGrouper.get(stream)) {<br/>\n    +    // null value for __system<br/>\n    +    for (Grouper grouper : streamComponentToGrouper.get(stream).values()) {<br/>\n    +if (grouper == GrouperFactory.DIRECT) {\n    +    throw new IllegalArgumentException(\"Cannot do regular emit to direct stream\");\n    +}<br/>\n    +List<Integer> compTasks = grouper.outTasks(taskId, values, loadMapping);<br/>\n    +outTasks.addAll(compTasks);<br/>\n    +    }<br/>\n    +}<br/>\n    +new EmitInfo(values, stream, taskId, outTasks).applyOn(userTopologyContext);<br/>\n    +try {<br/>\n    +    if (emitSampler.call()) {\n    +executorStats.emittedTuple(stream);\n    +executorStats.transferredTuples(stream, outTasks.size());\n    +    }<br/>\n    +} catch (Exception e) {    +    throw new RuntimeException(e);    +}\n<p>    +return outTasks;<br/>\n    +    }<br/>\n    +<br/>\n    +    public Tuple getTuple(String stream, List values) </p>\n{\n    +return new TupleImpl(systemTopologyContext, values, systemTopologyContext.getThisTaskId(), stream);\n    +    }\n<p>    +<br/>\n    +    public Integer getTaskId() </p>\n{\n    +return taskId;\n    +    }\n<p>    +<br/>\n    +    public String getComponentId() </p>\n{\n    +return componentId;\n    +    }\n<p>    +<br/>\n    +    public TopologyContext getUserContext() throws IOException </p>\n{\n    +return userTopologyContext;\n    +    }\n<p>    +<br/>\n    +    public Object getTaskObject() </p>\n{\n    +return taskObject;\n    +    }\n<p>    +<br/>\n    +    public BuiltinMetrics getBuiltInMetrics() </p>\n{\n    +return builtInMetrics;\n    +    }\n<p>    +<br/>\n    +    private TopologyContext mkTopologyContextBuilder(StormTopology topology) throws IOException {<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    It looks like `mk-topology-context-builder`, `system-topology-context`, and `user-topology-context` all got merged into this.  It probably would be best to just call it `mkTopologyContext`, and eventually have a Constructor on `TopologyContext` that just takes a StormTopology.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612652968/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612652972","html_url":"https://github.com/apache/storm/issues/5108#issuecomment-2612652972","issue_url":"https://api.github.com/repos/apache/storm/issues/5108","id":2612652972,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NTI5NzI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-25T14:23:51Z","updated_at":"2025-01-24T14:23:54Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1249#discussion_r57447877\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1249#discussion_r57447877</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/daemon/Task.java &#8212;<br/>\n    @@ -0,0 +1,246 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.daemon;<br/>\n    +<br/>\n    +import org.apache.storm.Config;<br/>\n    +import org.apache.storm.Thrift;<br/>\n    +import org.apache.storm.daemon.metrics.BuiltinMetrics;<br/>\n    +import org.apache.storm.daemon.metrics.BuiltinMetricsUtil;<br/>\n    +import org.apache.storm.generated.Bolt;<br/>\n    +import org.apache.storm.generated.ComponentObject;<br/>\n    +import org.apache.storm.generated.JavaObject;<br/>\n    +import org.apache.storm.generated.ShellComponent;<br/>\n    +import org.apache.storm.generated.SpoutSpec;<br/>\n    +import org.apache.storm.generated.StateSpoutSpec;<br/>\n    +import org.apache.storm.generated.StormTopology;<br/>\n    +import org.apache.storm.grouping.LoadMapping;<br/>\n    +import org.apache.storm.hooks.ITaskHook;<br/>\n    +import org.apache.storm.hooks.info.EmitInfo;<br/>\n    +import org.apache.storm.metric.api.IMetric;<br/>\n    +import org.apache.storm.spout.ShellSpout;<br/>\n    +import org.apache.storm.stats.CommonStats;<br/>\n    +import org.apache.storm.task.ShellBolt;<br/>\n    +import org.apache.storm.task.TopologyContext;<br/>\n    +import org.apache.storm.task.WorkerTopologyContext;<br/>\n    +import org.apache.storm.tuple.Fields;<br/>\n    +import org.apache.storm.tuple.Tuple;<br/>\n    +import org.apache.storm.tuple.TupleImpl;<br/>\n    +import org.apache.storm.utils.ConfigUtils;<br/>\n    +import org.apache.storm.utils.Utils;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +import java.io.IOException;<br/>\n    +import java.util.ArrayList;<br/>\n    +import java.util.Collections;<br/>\n    +import java.util.List;<br/>\n    +import java.util.Map;<br/>\n    +import java.util.concurrent.Callable;<br/>\n    +<br/>\n    +public class Task {<br/>\n    +<br/>\n    +    private static final Logger LOG = LoggerFactory.getLogger(Task.class);<br/>\n    +<br/>\n    +    private Map executorData;<br/>\n    +    private Map workerData;<br/>\n    +    private TopologyContext systemTopologyContext;<br/>\n    +    private TopologyContext userTopologyContext;<br/>\n    +    private WorkerTopologyContext workerTopologyContext;<br/>\n    +    private LoadMapping loadMapping;<br/>\n    +    private Integer taskId;<br/>\n    +    private String componentId;<br/>\n    +    private Object taskObject;<br/>\n    +    private Map stormConf;<br/>\n    +    private Callable<Boolean> emitSampler;<br/>\n    +    private CommonStats executorStats;<br/>\n    +    private Map<String, Map<String, Grouper>> streamComponentToGrouper;<br/>\n    +    private BuiltinMetrics builtInMetrics;<br/>\n    +    private boolean debug;<br/>\n    +<br/>\n    +    public Task(Map executorData, Integer taskId) throws IOException </p>\n{\n    +this.taskId = taskId;\n    +this.executorData = executorData;\n    +this.workerData = (Map) executorData.get(\"worker\");\n    +this.stormConf = (Map) executorData.get(\"storm-conf\");\n    +this.componentId = (String) executorData.get(\"component-id\");\n    +this.streamComponentToGrouper = (Map<String, Map<String, Grouper>>) executorData.get(\"stream->component->grouper\");\n    +this.executorStats = (CommonStats) executorData.get(\"stats\");\n    +this.builtInMetrics = BuiltinMetricsUtil.mkData((String) executorData.get(\"type\"), this.executorStats);\n    +this.workerTopologyContext = (WorkerTopologyContext) executorData.get(\"worker-context\");\n    +this.emitSampler = ConfigUtils.mkStatsSampler(stormConf);\n    +this.loadMapping = (LoadMapping) workerData.get(\"load-mapping\");\n    +this.systemTopologyContext = mkTopologyContextBuilder((StormTopology) workerData.get(\"system-topology\"));\n    +this.userTopologyContext = mkTopologyContextBuilder((StormTopology) workerData.get(\"topology\"));\n    +this.taskObject = mkTaskObject();\n    +this.debug = stormConf.containsKey(Config.TOPOLOGY_DEBUG) && (Boolean) stormConf.get(Config.TOPOLOGY_DEBUG);\n    +this.addTaskHooks();\n    +    }\n<p>    +<br/>\n    +    public List<Integer> getOutgoingTasks(Integer outTaskId, String stream, List<Object> values) {<br/>\n    +if (debug) {<br/>\n    +    LOG.info(\"Emitting direct: {}; {} {} {} \", outTaskId, componentId, stream, values);<br/>\n    +}<br/>\n    +String targetComponent = workerTopologyContext.getComponentId(outTaskId);<br/>\n    +Map<String, Grouper> componentGrouping = streamComponentToGrouper.get(stream);<br/>\n    +Grouper grouping = componentGrouping.get(targetComponent);<br/>\n    +if (null == grouping) </p>\n{\n    +    outTaskId = null;\n    +}\n<p>    +if (grouping != null && grouping != GrouperFactory.DIRECT) </p>\n{\n    +    throw new IllegalArgumentException(\"Cannot emitDirect to a task expecting a regular grouping\");\n    +}\n<p>    +new EmitInfo(values, stream, taskId, Collections.singletonList(outTaskId)).applyOn(userTopologyContext);<br/>\n    +try {<br/>\n    +    if (emitSampler.call()) {<br/>\n    +executorStats.emittedTuple(stream);<br/>\n    +if (null != outTaskId) </p>\n{\n    +    executorStats.transferredTuples(stream, 1);\n    +}\n<p>    +    }<br/>\n    +} catch (Exception e) </p>\n{\n    +    throw new RuntimeException(e);\n    +}<br/>\n    +if (null != outTaskId) {\n    +    return Collections.singletonList(outTaskId);\n    +}<br/>\n    +return null;<br/>\n    +    }<br/>\n    +<br/>\n    +    public List<Integer> getOutgoingTasks(String stream, List<Object> values) {<br/>\n    +if (debug) {<br/>\n    +    LOG.info(\"Emitting: {} {} {}\", componentId, stream, values);<br/>\n    +}<br/>\n    +List<Integer> outTasks = new ArrayList<>();<br/>\n    +if (!streamComponentToGrouper.containsKey(stream)) {\n    +    throw new IllegalArgumentException(\"Unknown stream ID: \" + stream);\n    +}<br/>\n    +if (null != streamComponentToGrouper.get(stream)) {<br/>\n    +    // null value for __system<br/>\n    +    for (Grouper grouper : streamComponentToGrouper.get(stream).values()) {<br/>\n    +if (grouper == GrouperFactory.DIRECT) {\n    +    throw new IllegalArgumentException(\"Cannot do regular emit to direct stream\");\n    +}<br/>\n    +List<Integer> compTasks = grouper.outTasks(taskId, values, loadMapping);<br/>\n    +outTasks.addAll(compTasks);<br/>\n    +    }<br/>\n    +}<br/>\n    +new EmitInfo(values, stream, taskId, outTasks).applyOn(userTopologyContext);<br/>\n    +try {<br/>\n    +    if (emitSampler.call()) {\n    +executorStats.emittedTuple(stream);\n    +executorStats.transferredTuples(stream, outTasks.size());\n    +    }<br/>\n    +} catch (Exception e) {    +    throw new RuntimeException(e);    +}\n<p>    +return outTasks;<br/>\n    +    }<br/>\n    +<br/>\n    +    public Tuple getTuple(String stream, List values) </p>\n{\n    +return new TupleImpl(systemTopologyContext, values, systemTopologyContext.getThisTaskId(), stream);\n    +    }\n<p>    +<br/>\n    +    public Integer getTaskId() </p>\n{\n    +return taskId;\n    +    }\n<p>    +<br/>\n    +    public String getComponentId() </p>\n{\n    +return componentId;\n    +    }\n<p>    +<br/>\n    +    public TopologyContext getUserContext() throws IOException </p>\n{\n    +return userTopologyContext;\n    +    }\n<p>    +<br/>\n    +    public Object getTaskObject() </p>\n{\n    +return taskObject;\n    +    }\n<p>    +<br/>\n    +    public BuiltinMetrics getBuiltInMetrics() </p>\n{\n    +return builtInMetrics;\n    +    }\n<p>    +<br/>\n    +    private TopologyContext mkTopologyContextBuilder(StormTopology topology) throws IOException {<br/>\n    +Map conf = (Map) workerData.get(\"conf\");<br/>\n    +return new TopologyContext(<br/>\n    +    topology,<br/>\n    +    (Map) workerData.get(\"storm-conf\"),<br/>\n    +    (Map<Integer, String>) workerData.get(\"task->component\"),<br/>\n    +    (Map<String, List<Integer>>) workerData.get(\"component->sorted-tasks\"),<br/>\n    +    (Map<String, Map<String, Fields>>) workerData.get(\"component->stream->fields\"),<br/>\n    +    (String) workerData.get(\"storm-id\"),<br/>\n    +    ConfigUtils.supervisorStormResourcesPath(ConfigUtils.supervisorStormDistRoot(conf, (String) workerData.get(\"storm-id\"))),<br/>\n    +    ConfigUtils.workerPidsRoot(conf, (String) workerData.get(\"worker-id\")),<br/>\n    +    taskId,<br/>\n    +    (Integer) workerData.get(\"port\"),<br/>\n    +    (List<Integer>) workerData.get(\"task-ids\"),<br/>\n    +    (Map<String, Object>) workerData.get(\"default-shared-resources\"),<br/>\n    +    (Map<String, Object>) workerData.get(\"user-shared-resources\"),<br/>\n    +    (Map<String, Object>) executorData.get(\"shared-executor-data\"),<br/>\n    +    (Map<Integer, Map<Integer, Map<String, IMetric>>>) executorData.get(\"interval->task->metric-registry\"),<br/>\n    +    (clojure.lang.Atom) executorData.get(\"open-or-prepare-was-called?\")<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    I assume this will go to AtomicBoolean when Executor goes to java.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612652972/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612652980","html_url":"https://github.com/apache/storm/issues/5108#issuecomment-2612652980","issue_url":"https://api.github.com/repos/apache/storm/issues/5108","id":2612652980,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NTI5ODA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-25T14:38:11Z","updated_at":"2025-01-24T14:23:54Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1249#discussion_r57449306\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1249#discussion_r57449306</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/utils/ConfigUtils.java &#8212;<br/>\n    @@ -135,7 +137,28 @@ public static int samplingRate(Map conf) </p>\n{\n     throw new IllegalArgumentException(\"Illegal topology.stats.sample.rate in conf: \" + rate);\n }\n\n<ul class=\"alternate\" type=\"square\">\n\t<li>// public static mkStatsSampler // depends on Utils.evenSampler() TODO, this is sth we need to do after util<br/>\n    +    public static Callable<Boolean> evenSampler(final int samplingFreq) {<br/>\n    +final int start = 0;<br/>\n    +final Random random = new Random();<br/>\n    +final MutableInt curr = new MutableInt(-1);<br/>\n    +final MutableInt target = new MutableInt(random.nextInt(samplingFreq));\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    The entire reason for the MutableInt was so clojure could ack more like java.  It is going to be a lot faster to just use int instead.</p>\n\n<p>    ```<br/>\npublic static Callable<Boolean> evenSampler(final int samplingFreq) {<br/>\n    final Random random = new Random();<br/>\n    return new Callable<Boolean>() {<br/>\nprivate int curr = -1;<br/>\nprivate int target = random.nextInt(samplingFreq);</p>\n\n<p>@Override<br/>\npublic Boolean call() throws Exception {<br/>\n    curr++;<br/>\n    if (curr >= samplingFreq) </p>\n{\ncurr = 0;\ntarget = random.nextInt(samplingFreq);\n    }\n<p>    return curr == target;<br/>\n}<br/>\n    };<br/>\n    ```</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612652980/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612652984","html_url":"https://github.com/apache/storm/issues/5108#issuecomment-2612652984","issue_url":"https://api.github.com/repos/apache/storm/issues/5108","id":2612652984,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NTI5ODQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-25T14:44:47Z","updated_at":"2025-01-24T14:23:54Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1249#discussion_r57449944\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1249#discussion_r57449944</a></p>\n\n<p>    &#8212; Diff: storm-core/src/clj/org/apache/storm/daemon/executor.clj &#8212;<br/>\n    @@ -15,6 +15,7 @@<br/>\n     ;; limitations under the License.<br/>\n     (ns org.apache.storm.daemon.executor<br/>\n       (:use <span class=\"error\">&#91;org.apache.storm.daemon common&#93;</span>)<br/>\n    +  (:use <span class=\"error\">&#91;clojure.walk&#93;</span>)<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Ah OK.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612652984/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/201319899","html_url":"https://github.com/apache/storm/pull/1249#issuecomment-201319899","issue_url":"https://api.github.com/repos/apache/storm/issues/1249","id":201319899,"node_id":"MDEyOklzc3VlQ29tbWVudDIwMTMxOTg5OQ==","user":{"login":"revans2","id":3441321,"node_id":"MDQ6VXNlcjM0NDEzMjE=","avatar_url":"https://avatars.githubusercontent.com/u/3441321?v=4","gravatar_id":"","url":"https://api.github.com/users/revans2","html_url":"https://github.com/revans2","followers_url":"https://api.github.com/users/revans2/followers","following_url":"https://api.github.com/users/revans2/following{/other_user}","gists_url":"https://api.github.com/users/revans2/gists{/gist_id}","starred_url":"https://api.github.com/users/revans2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/revans2/subscriptions","organizations_url":"https://api.github.com/users/revans2/orgs","repos_url":"https://api.github.com/users/revans2/repos","events_url":"https://api.github.com/users/revans2/events{/privacy}","received_events_url":"https://api.github.com/users/revans2/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-25T14:48:16Z","updated_at":"2016-03-25T14:48:16Z","author_association":"CONTRIBUTOR","body":"Overall it looks really good.  Only one real bug that I could see, but then some nits and design choice questions, mostly around if what we did for clojure still makes since in java, all of the design stuff I see as very minor and we can address it later.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/201319899/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612652991","html_url":"https://github.com/apache/storm/issues/5108#issuecomment-2612652991","issue_url":"https://api.github.com/repos/apache/storm/issues/5108","id":2612652991,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NTI5OTE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-25T14:48:19Z","updated_at":"2025-01-24T14:23:54Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1249#issuecomment-201319899\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1249#issuecomment-201319899</a></p>\n\n<p>    Overall it looks really good.  Only one real bug that I could see, but then some nits and design choice questions, mostly around if what we did for clojure still makes since in java, all of the design stuff I see as very minor and we can address it later.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612652991/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/201345276","html_url":"https://github.com/apache/storm/pull/1195#issuecomment-201345276","issue_url":"https://api.github.com/repos/apache/storm/issues/1195","id":201345276,"node_id":"MDEyOklzc3VlQ29tbWVudDIwMTM0NTI3Ng==","user":{"login":"knusbaum","id":1819836,"node_id":"MDQ6VXNlcjE4MTk4MzY=","avatar_url":"https://avatars.githubusercontent.com/u/1819836?v=4","gravatar_id":"","url":"https://api.github.com/users/knusbaum","html_url":"https://github.com/knusbaum","followers_url":"https://api.github.com/users/knusbaum/followers","following_url":"https://api.github.com/users/knusbaum/following{/other_user}","gists_url":"https://api.github.com/users/knusbaum/gists{/gist_id}","starred_url":"https://api.github.com/users/knusbaum/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/knusbaum/subscriptions","organizations_url":"https://api.github.com/users/knusbaum/orgs","repos_url":"https://api.github.com/users/knusbaum/repos","events_url":"https://api.github.com/users/knusbaum/events{/privacy}","received_events_url":"https://api.github.com/users/knusbaum/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-25T16:04:35Z","updated_at":"2016-03-25T16:04:35Z","author_association":"CONTRIBUTOR","body":"+1\n\nMetrics look great.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/201345276/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612881846","html_url":"https://github.com/apache/storm/issues/5446#issuecomment-2612881846","issue_url":"https://api.github.com/repos/apache/storm/issues/5446","id":2612881846,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4ODE4NDY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-25T16:04:37Z","updated_at":"2025-01-24T16:06:30Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user knusbaum commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1195#issuecomment-201345276\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1195#issuecomment-201345276</a></p>\n\n<p>    +1</p>\n\n<p>    Metrics look great.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612881846/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/201412463","html_url":"https://github.com/apache/storm/pull/1217#issuecomment-201412463","issue_url":"https://api.github.com/repos/apache/storm/issues/1217","id":201412463,"node_id":"MDEyOklzc3VlQ29tbWVudDIwMTQxMjQ2Mw==","user":{"login":"arunmahadevan","id":6792890,"node_id":"MDQ6VXNlcjY3OTI4OTA=","avatar_url":"https://avatars.githubusercontent.com/u/6792890?v=4","gravatar_id":"","url":"https://api.github.com/users/arunmahadevan","html_url":"https://github.com/arunmahadevan","followers_url":"https://api.github.com/users/arunmahadevan/followers","following_url":"https://api.github.com/users/arunmahadevan/following{/other_user}","gists_url":"https://api.github.com/users/arunmahadevan/gists{/gist_id}","starred_url":"https://api.github.com/users/arunmahadevan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/arunmahadevan/subscriptions","organizations_url":"https://api.github.com/users/arunmahadevan/orgs","repos_url":"https://api.github.com/users/arunmahadevan/repos","events_url":"https://api.github.com/users/arunmahadevan/events{/privacy}","received_events_url":"https://api.github.com/users/arunmahadevan/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-25T18:39:32Z","updated_at":"2016-03-25T18:39:32Z","author_association":"CONTRIBUTOR","body":"With the BasicTopology.java uploaded in the Jira I was not getting consistent results and in some cases the throughput without event logger turned out to be less. After going through the spout it appears that with every emit a new Long is created. \n`collector.emit(new Values(new Long(rand.nextInt(Integer.MAX_VALUE))), messageCount);`\n\nWith the spout emitting 400+ Million tuples in 10 mins (the new Long alone eating up 3.2 GB memory), I thought the GC could have distorted the results. So I changed the spout to emit a fixed long value and measured the throughput and heres what I observed.\n\n[No eventlogger](https://cloud.githubusercontent.com/assets/6792890/14049885/1ccdc2ae-f2de-11e5-9f50-231990d629bb.png) 753394 tuples/sec\n[With eventlogger](https://cloud.githubusercontent.com/assets/6792890/14049918/4dd0a902-f2de-11e5-8a77-5c6ba3f20520.png) 736517 tuples/sec  (2.29 % hit)\n[Eventlogger with the patch](https://cloud.githubusercontent.com/assets/6792890/14049934/61fbdce4-f2de-11e5-8454-e27db755fdc3.png) 749492 tuples/sec (0.52 % hit)\n\nThe results with the [patch](https://github.com/arunmahadevan/storm/commit/7eae5ec9f63cee82c49980a3bedf5f0dfe4e3a8d) to reduce the PersistentMap lookup and the modified [BasicTopology](https://github.com/apache/storm/files/189869/BasicTopology.txt) can be validated and if that overhead is not acceptable, we can disable the \"debug\" button by default and show a tooltip on how to enable it.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/201412463/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612885740","html_url":"https://github.com/apache/storm/issues/5467#issuecomment-2612885740","issue_url":"https://api.github.com/repos/apache/storm/issues/5467","id":2612885740,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4ODU3NDA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-25T18:39:33Z","updated_at":"2025-01-24T16:08:11Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user arunmahadevan commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1217#issuecomment-201412463\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1217#issuecomment-201412463</a></p>\n\n<p>    With the BasicTopology.java uploaded in the Jira I was not getting consistent results and in some cases the throughput without event logger turned out to be less. After going through the spout it appears that with every emit a new Long is created. <br/>\n    `collector.emit(new Values(new Long(rand.nextInt(Integer.MAX_VALUE))), messageCount);`</p>\n\n<p>    With the spout emitting 400+ Million tuples in 10 mins (the new Long alone eating up 3.2 GB memory), I thought the GC could have distorted the results. So I changed the spout to emit a fixed long value and measured the throughput and heres what I observed.</p>\n\n<p>    <span class=\"error\">&#91;No eventlogger&#93;</span>(<a href=\"https://cloud.githubusercontent.com/assets/6792890/14049885/1ccdc2ae-f2de-11e5-9f50-231990d629bb.png\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://cloud.githubusercontent.com/assets/6792890/14049885/1ccdc2ae-f2de-11e5-9f50-231990d629bb.png</a>) 753394 tuples/sec<br/>\n    <span class=\"error\">&#91;With eventlogger&#93;</span>(<a href=\"https://cloud.githubusercontent.com/assets/6792890/14049918/4dd0a902-f2de-11e5-8a77-5c6ba3f20520.png\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://cloud.githubusercontent.com/assets/6792890/14049918/4dd0a902-f2de-11e5-8a77-5c6ba3f20520.png</a>) 736517 tuples/sec  (2.29 % hit)<br/>\n    <span class=\"error\">&#91;Eventlogger with the patch&#93;</span>(<a href=\"https://cloud.githubusercontent.com/assets/6792890/14049934/61fbdce4-f2de-11e5-8454-e27db755fdc3.png\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://cloud.githubusercontent.com/assets/6792890/14049934/61fbdce4-f2de-11e5-8454-e27db755fdc3.png</a>) 749492 tuples/sec (0.52 % hit)</p>\n\n<p>    The results with the <span class=\"error\">&#91;patch&#93;</span> (<a href=\"https://github.com/arunmahadevan/storm/commit/7eae5ec9f63cee82c49980a3bedf5f0dfe4e3a8d\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/arunmahadevan/storm/commit/7eae5ec9f63cee82c49980a3bedf5f0dfe4e3a8d</a>) to reduce the PersistentMap lookup and the modified <span class=\"error\">&#91;BasicTopology&#93;</span>(<a href=\"https://github.com/apache/storm/files/189869/BasicTopology.txt\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/files/189869/BasicTopology.txt</a>) can be validated and if that overhead is not acceptable, we can disable the \"debug\" button by default and show a tooltip on how to enable it.</p>\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612885740/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612659580","html_url":"https://github.com/apache/storm/issues/5136#issuecomment-2612659580","issue_url":"https://api.github.com/repos/apache/storm/issues/5136","id":2612659580,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NTk1ODA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-25T20:12:38Z","updated_at":"2025-01-24T14:26:54Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user jerrypeng commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1232#discussion_r57485387\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1232#discussion_r57485387</a></p>\n\n<p>    &#8212; Diff: storm-core/test/jvm/org/apache/storm/scheduler/resource/TestResourceAwareScheduler.java &#8212;<br/>\n    @@ -54,6 +61,681 @@</p>\n\n<p> private static int currentTime = 1450418597;</p>\n\n<p>    +    private static final Config defaultTopologyConf = new Config();<br/>\n    +<br/>\n    +    @BeforeClass<br/>\n    +    public static void initConf() </p>\n{\n    +defaultTopologyConf.put(Config.STORM_NETWORK_TOPOGRAPHY_PLUGIN, \"org.apache.storm.networktopography.DefaultRackDNSToSwitchMapping\");\n    +defaultTopologyConf.put(Config.RESOURCE_AWARE_SCHEDULER_EVICTION_STRATEGY, org.apache.storm.scheduler.resource.strategies.eviction.DefaultEvictionStrategy.class.getName());\n    +defaultTopologyConf.put(Config.RESOURCE_AWARE_SCHEDULER_PRIORITY_STRATEGY, org.apache.storm.scheduler.resource.strategies.priority.DefaultSchedulingPriorityStrategy.class.getName());\n    +\n    +defaultTopologyConf.put(Config.TOPOLOGY_SCHEDULER_STRATEGY, org.apache.storm.scheduler.resource.strategies.scheduling.DefaultResourceAwareStrategy.class.getName());\n    +defaultTopologyConf.put(Config.TOPOLOGY_COMPONENT_CPU_PCORE_PERCENT, 10.0);\n    +defaultTopologyConf.put(Config.TOPOLOGY_COMPONENT_RESOURCES_ONHEAP_MEMORY_MB, 128.0);\n    +defaultTopologyConf.put(Config.TOPOLOGY_COMPONENT_RESOURCES_OFFHEAP_MEMORY_MB, 0.0);\n    +defaultTopologyConf.put(Config.TOPOLOGY_WORKER_MAX_HEAP_SIZE_MB, 8192.0);\n    +defaultTopologyConf.put(Config.TOPOLOGY_PRIORITY, 0);\n    +defaultTopologyConf.put(Config.TOPOLOGY_SUBMITTER_USER, \"zhuo\");\n    +    }\n<p>    +<br/>\n    +    @Test<br/>\n    +    public void testRASNodeSlotAssign() </p>\n{\n    +INimbus iNimbus = new TestUtilsForResourceAwareScheduler.INimbusTest();\n    +Map<String, Number> resourceMap = new HashMap<>();\n    +resourceMap.put(Config.SUPERVISOR_CPU_CAPACITY, 400.0);\n    +resourceMap.put(Config.SUPERVISOR_MEMORY_CAPACITY_MB, 2000.0);\n    +Map<String, SupervisorDetails> supMap = TestUtilsForResourceAwareScheduler.genSupervisors(5, 4, resourceMap);\n    +Topologies topologies = new Topologies(new HashMap<String, TopologyDetails>());\n    +Cluster cluster = new Cluster(iNimbus, supMap, new HashMap<String, SchedulerAssignmentImpl>(), new HashMap());\n    +Map<String, RAS_Node> nodes = RAS_Nodes.getAllNodesFrom(cluster, topologies);\n    +Assert.assertEquals(5, nodes.size());\n    +RAS_Node node = nodes.get(\"sup-0\");\n    +\n    +Assert.assertEquals(\"sup-0\", node.getId());\n    +Assert.assertTrue(node.isAlive());\n    +Assert.assertEquals(0, node.getRunningTopologies().size());\n    +Assert.assertTrue(node.isTotallyFree());\n    +Assert.assertEquals(4, node.totalSlotsFree());\n    +Assert.assertEquals(0, node.totalSlotsUsed());\n    +Assert.assertEquals(4, node.totalSlots());\n    +\n    +TopologyDetails topology1 = TestUtilsForResourceAwareScheduler.getTopology(\"topology1\", new HashMap(), 1, 0, 2, 0, 0, 0);\n    +\n    +List<ExecutorDetails> executors11 = new ArrayList<>();\n    +executors11.add(new ExecutorDetails(1, 1));\n    +node.assign(node.getFreeSlots().iterator().next(), topology1, executors11);\n    +Assert.assertEquals(1, node.getRunningTopologies().size());\n    +Assert.assertFalse(node.isTotallyFree());\n    +Assert.assertEquals(3, node.totalSlotsFree());\n    +Assert.assertEquals(1, node.totalSlotsUsed());\n    +Assert.assertEquals(4, node.totalSlots());\n    +\n    +List<ExecutorDetails> executors12 = new ArrayList<>();\n    +executors12.add(new ExecutorDetails(2, 2));\n    +node.assign(node.getFreeSlots().iterator().next(), topology1, executors12);\n    +Assert.assertEquals(1, node.getRunningTopologies().size());\n    +Assert.assertFalse(node.isTotallyFree());\n    +Assert.assertEquals(2, node.totalSlotsFree());\n    +Assert.assertEquals(2, node.totalSlotsUsed());\n    +Assert.assertEquals(4, node.totalSlots());\n    +\n    +TopologyDetails topology2 = TestUtilsForResourceAwareScheduler.getTopology(\"topology2\", new HashMap(), 1, 0, 2, 0, 0, 0);\n    +\n    +List<ExecutorDetails> executors21 = new ArrayList<>();\n    +executors21.add(new ExecutorDetails(1, 1));\n    +node.assign(node.getFreeSlots().iterator().next(), topology2, executors21);\n    +Assert.assertEquals(2, node.getRunningTopologies().size());\n    +Assert.assertFalse(node.isTotallyFree());\n    +Assert.assertEquals(1, node.totalSlotsFree());\n    +Assert.assertEquals(3, node.totalSlotsUsed());\n    +Assert.assertEquals(4, node.totalSlots());\n    +\n    +List<ExecutorDetails> executors22 = new ArrayList<>();\n    +executors22.add(new ExecutorDetails(2, 2));\n    +node.assign(node.getFreeSlots().iterator().next(), topology2, executors22);\n    +Assert.assertEquals(2, node.getRunningTopologies().size());\n    +Assert.assertFalse(node.isTotallyFree());\n    +Assert.assertEquals(0, node.totalSlotsFree());\n    +Assert.assertEquals(4, node.totalSlotsUsed());\n    +Assert.assertEquals(4, node.totalSlots());\n    +\n    +node.freeAllSlots();\n    +Assert.assertEquals(0, node.getRunningTopologies().size());\n    +Assert.assertTrue(node.isTotallyFree());\n    +Assert.assertEquals(4, node.totalSlotsFree());\n    +Assert.assertEquals(0, node.totalSlotsUsed());\n    +Assert.assertEquals(4, node.totalSlots());\n    +    }\n<p>    +<br/>\n    +    @Test<br/>\n    +    public void sanityTestOfScheduling() {<br/>\n    +INimbus iNimbus = new TestUtilsForResourceAwareScheduler.INimbusTest();<br/>\n    +Map<String, Number> resourceMap = new HashMap<>();<br/>\n    +resourceMap.put(Config.SUPERVISOR_CPU_CAPACITY, 400.0);<br/>\n    +resourceMap.put(Config.SUPERVISOR_MEMORY_CAPACITY_MB, 2000.0);<br/>\n    +Map<String, SupervisorDetails> supMap = TestUtilsForResourceAwareScheduler.genSupervisors(1, 2, resourceMap);<br/>\n    +<br/>\n    +Config config = new Config();<br/>\n    +config.putAll(defaultTopologyConf);<br/>\n    +<br/>\n    +Cluster cluster = new Cluster(iNimbus, supMap, new HashMap<String, SchedulerAssignmentImpl>(), config);<br/>\n    +ResourceAwareScheduler rs = new ResourceAwareScheduler();<br/>\n    +<br/>\n    +TopologyDetails topology1 = TestUtilsForResourceAwareScheduler.getTopology(\"topology1\", config, 1, 1, 1, 1, 0, 0);<br/>\n    +Map<String, TopologyDetails> topoMap = new HashMap<>();<br/>\n    +topoMap.put(topology1.getId(), topology1);<br/>\n    +Topologies topologies = new Topologies(topoMap);<br/>\n    +<br/>\n    +rs.prepare(config);<br/>\n    +rs.schedule(topologies, cluster);<br/>\n    +<br/>\n    +SchedulerAssignment assignment = cluster.getAssignmentById(topology1.getId());<br/>\n    +Set<WorkerSlot> assignedSlots = assignment.getSlots();<br/>\n    +Set<String> nodesIDs = new HashSet<>();<br/>\n    +for (WorkerSlot slot : assignedSlots) </p>\n{\n    +    nodesIDs.add(slot.getNodeId());\n    +}\n<p>    +Collection<ExecutorDetails> executors = assignment.getExecutors();<br/>\n    +<br/>\n    +Assert.assertEquals(1, assignedSlots.size());<br/>\n    +Assert.assertEquals(1, nodesIDs.size());<br/>\n    +Assert.assertEquals(2, executors.size());<br/>\n    +Assert.assertEquals(\"Running - Fully Scheduled by DefaultResourceAwareStrategy\", cluster.getStatusMap().get(topology1.getId()));<br/>\n    +    }<br/>\n    +<br/>\n    +    @Test<br/>\n    +    public void testTopologyWithMultipleSpouts() {<br/>\n    +INimbus iNimbus = new TestUtilsForResourceAwareScheduler.INimbusTest();<br/>\n    +Map<String, Number> resourceMap = new HashMap<>();<br/>\n    +resourceMap.put(Config.SUPERVISOR_CPU_CAPACITY, 400.0);<br/>\n    +resourceMap.put(Config.SUPERVISOR_MEMORY_CAPACITY_MB, 2000.0);<br/>\n    +Map<String, SupervisorDetails> supMap = TestUtilsForResourceAwareScheduler.genSupervisors(2, 4, resourceMap);<br/>\n    +<br/>\n    +TopologyBuilder builder1 = new TopologyBuilder(); // a topology with multiple spouts<br/>\n    +builder1.setSpout(\"wordSpout1\", new TestWordSpout(), 1);<br/>\n    +builder1.setSpout(\"wordSpout2\", new TestWordSpout(), 1);<br/>\n    +builder1.setBolt(\"wordCountBolt1\", new TestWordCounter(), 1).shuffleGrouping(\"wordSpout1\").shuffleGrouping(\"wordSpout2\");<br/>\n    +builder1.setBolt(\"wordCountBolt2\", new TestWordCounter(), 1).shuffleGrouping(\"wordCountBolt1\");<br/>\n    +builder1.setBolt(\"wordCountBolt3\", new TestWordCounter(), 1).shuffleGrouping(\"wordCountBolt1\");<br/>\n    +builder1.setBolt(\"wordCountBolt4\", new TestWordCounter(), 1).shuffleGrouping(\"wordCountBolt2\");<br/>\n    +builder1.setBolt(\"wordCountBolt5\", new TestWordCounter(), 1).shuffleGrouping(\"wordSpout2\");<br/>\n    +StormTopology stormTopology1 = builder1.createTopology();<br/>\n    +<br/>\n    +Config config = new Config();<br/>\n    +config.putAll(defaultTopologyConf);<br/>\n    +Map<ExecutorDetails, String> executorMap1 = TestUtilsForResourceAwareScheduler.genExecsAndComps(stormTopology1, 1, 1);<br/>\n    +TopologyDetails topology1 = new TopologyDetails(\"topology1\", config, stormTopology1, 0, executorMap1, 0);<br/>\n    +<br/>\n    +TopologyBuilder builder2 = new TopologyBuilder(); // a topology with two unconnected partitions<br/>\n    +builder2.setSpout(\"wordSpoutX\", new TestWordSpout(), 1);<br/>\n    +builder2.setSpout(\"wordSpoutY\", new TestWordSpout(), 1);<br/>\n    +StormTopology stormTopology2 = builder2.createTopology();<br/>\n    +Map<ExecutorDetails, String> executorMap2 = TestUtilsForResourceAwareScheduler.genExecsAndComps(stormTopology2, 1, 0);<br/>\n    +TopologyDetails topology2 = new TopologyDetails(\"topology2\", config, stormTopology2, 0, executorMap2, 0);<br/>\n    +<br/>\n    +Cluster cluster = new Cluster(iNimbus, supMap, new HashMap<String, SchedulerAssignmentImpl>(), config);<br/>\n    +ResourceAwareScheduler rs = new ResourceAwareScheduler();<br/>\n    +<br/>\n    +Map<String, TopologyDetails> topoMap = new HashMap<>();<br/>\n    +topoMap.put(topology1.getId(), topology1);<br/>\n    +topoMap.put(topology2.getId(), topology2);<br/>\n    +Topologies topologies = new Topologies(topoMap);<br/>\n    +<br/>\n    +rs.prepare(config);<br/>\n    +rs.schedule(topologies, cluster);<br/>\n    +<br/>\n    +SchedulerAssignment assignment1 = cluster.getAssignmentById(topology1.getId());<br/>\n    +Set<WorkerSlot> assignedSlots1 = assignment1.getSlots();<br/>\n    +Set<String> nodesIDs1 = new HashSet<>();<br/>\n    +for (WorkerSlot slot : assignedSlots1) </p>\n{\n    +    nodesIDs1.add(slot.getNodeId());\n    +}\n<p>    +Collection<ExecutorDetails> executors1 = assignment1.getExecutors();<br/>\n    +<br/>\n    +Assert.assertEquals(1, assignedSlots1.size());<br/>\n    +Assert.assertEquals(1, nodesIDs1.size());<br/>\n    +Assert.assertEquals(7, executors1.size());<br/>\n    +Assert.assertEquals(\"Running - Fully Scheduled by DefaultResourceAwareStrategy\", cluster.getStatusMap().get(topology1.getId()));<br/>\n    +<br/>\n    +SchedulerAssignment assignment2 = cluster.getAssignmentById(topology2.getId());<br/>\n    +Set<WorkerSlot> assignedSlots2 = assignment2.getSlots();<br/>\n    +Set<String> nodesIDs2 = new HashSet<>();<br/>\n    +for (WorkerSlot slot : assignedSlots2) </p>\n{\n    +    nodesIDs2.add(slot.getNodeId());\n    +}\n<p>    +Collection<ExecutorDetails> executors2 = assignment2.getExecutors();<br/>\n    +<br/>\n    +Assert.assertEquals(1, assignedSlots2.size());<br/>\n    +Assert.assertEquals(1, nodesIDs2.size());<br/>\n    +Assert.assertEquals(2, executors2.size());<br/>\n    +Assert.assertEquals(\"Running - Fully Scheduled by DefaultResourceAwareStrategy\", cluster.getStatusMap().get(topology2.getId()));<br/>\n    +    }<br/>\n    +<br/>\n    +    @Test<br/>\n    +    public void testTopologySetCpuAndMemLoad() {<br/>\n    +INimbus iNimbus = new TestUtilsForResourceAwareScheduler.INimbusTest();<br/>\n    +Map<String, Number> resourceMap = new HashMap<>();<br/>\n    +resourceMap.put(Config.SUPERVISOR_CPU_CAPACITY, 400.0);<br/>\n    +resourceMap.put(Config.SUPERVISOR_MEMORY_CAPACITY_MB, 2000.0);<br/>\n    +Map<String, SupervisorDetails> supMap = TestUtilsForResourceAwareScheduler.genSupervisors(2, 2, resourceMap);<br/>\n    +<br/>\n    +TopologyBuilder builder1 = new TopologyBuilder(); // a topology with multiple spouts<br/>\n    +builder1.setSpout(\"wordSpout\", new TestWordSpout(), 1).setCPULoad(20.0).setMemoryLoad(200.0);<br/>\n    +builder1.setBolt(\"wordCountBolt\", new TestWordCounter(), 1).shuffleGrouping(\"wordSpout\").setCPULoad(20.0).setMemoryLoad(200.0);<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    In the original clojure code with set the the memory load to be 110.0.  Is there a reason why we changed this?</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612659580/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612659584","html_url":"https://github.com/apache/storm/issues/5136#issuecomment-2612659584","issue_url":"https://api.github.com/repos/apache/storm/issues/5136","id":2612659584,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NTk1ODQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-25T20:13:32Z","updated_at":"2025-01-24T14:26:54Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user jerrypeng commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1232#discussion_r57485480\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1232#discussion_r57485480</a></p>\n\n<p>    &#8212; Diff: storm-core/test/jvm/org/apache/storm/scheduler/resource/TestResourceAwareScheduler.java &#8212;<br/>\n    @@ -54,6 +61,681 @@</p>\n\n<p> private static int currentTime = 1450418597;</p>\n\n<p>    +    private static final Config defaultTopologyConf = new Config();<br/>\n    +<br/>\n    +    @BeforeClass<br/>\n    +    public static void initConf() </p>\n{\n    +defaultTopologyConf.put(Config.STORM_NETWORK_TOPOGRAPHY_PLUGIN, \"org.apache.storm.networktopography.DefaultRackDNSToSwitchMapping\");\n    +defaultTopologyConf.put(Config.RESOURCE_AWARE_SCHEDULER_EVICTION_STRATEGY, org.apache.storm.scheduler.resource.strategies.eviction.DefaultEvictionStrategy.class.getName());\n    +defaultTopologyConf.put(Config.RESOURCE_AWARE_SCHEDULER_PRIORITY_STRATEGY, org.apache.storm.scheduler.resource.strategies.priority.DefaultSchedulingPriorityStrategy.class.getName());\n    +\n    +defaultTopologyConf.put(Config.TOPOLOGY_SCHEDULER_STRATEGY, org.apache.storm.scheduler.resource.strategies.scheduling.DefaultResourceAwareStrategy.class.getName());\n    +defaultTopologyConf.put(Config.TOPOLOGY_COMPONENT_CPU_PCORE_PERCENT, 10.0);\n    +defaultTopologyConf.put(Config.TOPOLOGY_COMPONENT_RESOURCES_ONHEAP_MEMORY_MB, 128.0);\n    +defaultTopologyConf.put(Config.TOPOLOGY_COMPONENT_RESOURCES_OFFHEAP_MEMORY_MB, 0.0);\n    +defaultTopologyConf.put(Config.TOPOLOGY_WORKER_MAX_HEAP_SIZE_MB, 8192.0);\n    +defaultTopologyConf.put(Config.TOPOLOGY_PRIORITY, 0);\n    +defaultTopologyConf.put(Config.TOPOLOGY_SUBMITTER_USER, \"zhuo\");\n    +    }\n<p>    +<br/>\n    +    @Test<br/>\n    +    public void testRASNodeSlotAssign() </p>\n{\n    +INimbus iNimbus = new TestUtilsForResourceAwareScheduler.INimbusTest();\n    +Map<String, Number> resourceMap = new HashMap<>();\n    +resourceMap.put(Config.SUPERVISOR_CPU_CAPACITY, 400.0);\n    +resourceMap.put(Config.SUPERVISOR_MEMORY_CAPACITY_MB, 2000.0);\n    +Map<String, SupervisorDetails> supMap = TestUtilsForResourceAwareScheduler.genSupervisors(5, 4, resourceMap);\n    +Topologies topologies = new Topologies(new HashMap<String, TopologyDetails>());\n    +Cluster cluster = new Cluster(iNimbus, supMap, new HashMap<String, SchedulerAssignmentImpl>(), new HashMap());\n    +Map<String, RAS_Node> nodes = RAS_Nodes.getAllNodesFrom(cluster, topologies);\n    +Assert.assertEquals(5, nodes.size());\n    +RAS_Node node = nodes.get(\"sup-0\");\n    +\n    +Assert.assertEquals(\"sup-0\", node.getId());\n    +Assert.assertTrue(node.isAlive());\n    +Assert.assertEquals(0, node.getRunningTopologies().size());\n    +Assert.assertTrue(node.isTotallyFree());\n    +Assert.assertEquals(4, node.totalSlotsFree());\n    +Assert.assertEquals(0, node.totalSlotsUsed());\n    +Assert.assertEquals(4, node.totalSlots());\n    +\n    +TopologyDetails topology1 = TestUtilsForResourceAwareScheduler.getTopology(\"topology1\", new HashMap(), 1, 0, 2, 0, 0, 0);\n    +\n    +List<ExecutorDetails> executors11 = new ArrayList<>();\n    +executors11.add(new ExecutorDetails(1, 1));\n    +node.assign(node.getFreeSlots().iterator().next(), topology1, executors11);\n    +Assert.assertEquals(1, node.getRunningTopologies().size());\n    +Assert.assertFalse(node.isTotallyFree());\n    +Assert.assertEquals(3, node.totalSlotsFree());\n    +Assert.assertEquals(1, node.totalSlotsUsed());\n    +Assert.assertEquals(4, node.totalSlots());\n    +\n    +List<ExecutorDetails> executors12 = new ArrayList<>();\n    +executors12.add(new ExecutorDetails(2, 2));\n    +node.assign(node.getFreeSlots().iterator().next(), topology1, executors12);\n    +Assert.assertEquals(1, node.getRunningTopologies().size());\n    +Assert.assertFalse(node.isTotallyFree());\n    +Assert.assertEquals(2, node.totalSlotsFree());\n    +Assert.assertEquals(2, node.totalSlotsUsed());\n    +Assert.assertEquals(4, node.totalSlots());\n    +\n    +TopologyDetails topology2 = TestUtilsForResourceAwareScheduler.getTopology(\"topology2\", new HashMap(), 1, 0, 2, 0, 0, 0);\n    +\n    +List<ExecutorDetails> executors21 = new ArrayList<>();\n    +executors21.add(new ExecutorDetails(1, 1));\n    +node.assign(node.getFreeSlots().iterator().next(), topology2, executors21);\n    +Assert.assertEquals(2, node.getRunningTopologies().size());\n    +Assert.assertFalse(node.isTotallyFree());\n    +Assert.assertEquals(1, node.totalSlotsFree());\n    +Assert.assertEquals(3, node.totalSlotsUsed());\n    +Assert.assertEquals(4, node.totalSlots());\n    +\n    +List<ExecutorDetails> executors22 = new ArrayList<>();\n    +executors22.add(new ExecutorDetails(2, 2));\n    +node.assign(node.getFreeSlots().iterator().next(), topology2, executors22);\n    +Assert.assertEquals(2, node.getRunningTopologies().size());\n    +Assert.assertFalse(node.isTotallyFree());\n    +Assert.assertEquals(0, node.totalSlotsFree());\n    +Assert.assertEquals(4, node.totalSlotsUsed());\n    +Assert.assertEquals(4, node.totalSlots());\n    +\n    +node.freeAllSlots();\n    +Assert.assertEquals(0, node.getRunningTopologies().size());\n    +Assert.assertTrue(node.isTotallyFree());\n    +Assert.assertEquals(4, node.totalSlotsFree());\n    +Assert.assertEquals(0, node.totalSlotsUsed());\n    +Assert.assertEquals(4, node.totalSlots());\n    +    }\n<p>    +<br/>\n    +    @Test<br/>\n    +    public void sanityTestOfScheduling() {<br/>\n    +INimbus iNimbus = new TestUtilsForResourceAwareScheduler.INimbusTest();<br/>\n    +Map<String, Number> resourceMap = new HashMap<>();<br/>\n    +resourceMap.put(Config.SUPERVISOR_CPU_CAPACITY, 400.0);<br/>\n    +resourceMap.put(Config.SUPERVISOR_MEMORY_CAPACITY_MB, 2000.0);<br/>\n    +Map<String, SupervisorDetails> supMap = TestUtilsForResourceAwareScheduler.genSupervisors(1, 2, resourceMap);<br/>\n    +<br/>\n    +Config config = new Config();<br/>\n    +config.putAll(defaultTopologyConf);<br/>\n    +<br/>\n    +Cluster cluster = new Cluster(iNimbus, supMap, new HashMap<String, SchedulerAssignmentImpl>(), config);<br/>\n    +ResourceAwareScheduler rs = new ResourceAwareScheduler();<br/>\n    +<br/>\n    +TopologyDetails topology1 = TestUtilsForResourceAwareScheduler.getTopology(\"topology1\", config, 1, 1, 1, 1, 0, 0);<br/>\n    +Map<String, TopologyDetails> topoMap = new HashMap<>();<br/>\n    +topoMap.put(topology1.getId(), topology1);<br/>\n    +Topologies topologies = new Topologies(topoMap);<br/>\n    +<br/>\n    +rs.prepare(config);<br/>\n    +rs.schedule(topologies, cluster);<br/>\n    +<br/>\n    +SchedulerAssignment assignment = cluster.getAssignmentById(topology1.getId());<br/>\n    +Set<WorkerSlot> assignedSlots = assignment.getSlots();<br/>\n    +Set<String> nodesIDs = new HashSet<>();<br/>\n    +for (WorkerSlot slot : assignedSlots) </p>\n{\n    +    nodesIDs.add(slot.getNodeId());\n    +}\n<p>    +Collection<ExecutorDetails> executors = assignment.getExecutors();<br/>\n    +<br/>\n    +Assert.assertEquals(1, assignedSlots.size());<br/>\n    +Assert.assertEquals(1, nodesIDs.size());<br/>\n    +Assert.assertEquals(2, executors.size());<br/>\n    +Assert.assertEquals(\"Running - Fully Scheduled by DefaultResourceAwareStrategy\", cluster.getStatusMap().get(topology1.getId()));<br/>\n    +    }<br/>\n    +<br/>\n    +    @Test<br/>\n    +    public void testTopologyWithMultipleSpouts() {<br/>\n    +INimbus iNimbus = new TestUtilsForResourceAwareScheduler.INimbusTest();<br/>\n    +Map<String, Number> resourceMap = new HashMap<>();<br/>\n    +resourceMap.put(Config.SUPERVISOR_CPU_CAPACITY, 400.0);<br/>\n    +resourceMap.put(Config.SUPERVISOR_MEMORY_CAPACITY_MB, 2000.0);<br/>\n    +Map<String, SupervisorDetails> supMap = TestUtilsForResourceAwareScheduler.genSupervisors(2, 4, resourceMap);<br/>\n    +<br/>\n    +TopologyBuilder builder1 = new TopologyBuilder(); // a topology with multiple spouts<br/>\n    +builder1.setSpout(\"wordSpout1\", new TestWordSpout(), 1);<br/>\n    +builder1.setSpout(\"wordSpout2\", new TestWordSpout(), 1);<br/>\n    +builder1.setBolt(\"wordCountBolt1\", new TestWordCounter(), 1).shuffleGrouping(\"wordSpout1\").shuffleGrouping(\"wordSpout2\");<br/>\n    +builder1.setBolt(\"wordCountBolt2\", new TestWordCounter(), 1).shuffleGrouping(\"wordCountBolt1\");<br/>\n    +builder1.setBolt(\"wordCountBolt3\", new TestWordCounter(), 1).shuffleGrouping(\"wordCountBolt1\");<br/>\n    +builder1.setBolt(\"wordCountBolt4\", new TestWordCounter(), 1).shuffleGrouping(\"wordCountBolt2\");<br/>\n    +builder1.setBolt(\"wordCountBolt5\", new TestWordCounter(), 1).shuffleGrouping(\"wordSpout2\");<br/>\n    +StormTopology stormTopology1 = builder1.createTopology();<br/>\n    +<br/>\n    +Config config = new Config();<br/>\n    +config.putAll(defaultTopologyConf);<br/>\n    +Map<ExecutorDetails, String> executorMap1 = TestUtilsForResourceAwareScheduler.genExecsAndComps(stormTopology1, 1, 1);<br/>\n    +TopologyDetails topology1 = new TopologyDetails(\"topology1\", config, stormTopology1, 0, executorMap1, 0);<br/>\n    +<br/>\n    +TopologyBuilder builder2 = new TopologyBuilder(); // a topology with two unconnected partitions<br/>\n    +builder2.setSpout(\"wordSpoutX\", new TestWordSpout(), 1);<br/>\n    +builder2.setSpout(\"wordSpoutY\", new TestWordSpout(), 1);<br/>\n    +StormTopology stormTopology2 = builder2.createTopology();<br/>\n    +Map<ExecutorDetails, String> executorMap2 = TestUtilsForResourceAwareScheduler.genExecsAndComps(stormTopology2, 1, 0);<br/>\n    +TopologyDetails topology2 = new TopologyDetails(\"topology2\", config, stormTopology2, 0, executorMap2, 0);<br/>\n    +<br/>\n    +Cluster cluster = new Cluster(iNimbus, supMap, new HashMap<String, SchedulerAssignmentImpl>(), config);<br/>\n    +ResourceAwareScheduler rs = new ResourceAwareScheduler();<br/>\n    +<br/>\n    +Map<String, TopologyDetails> topoMap = new HashMap<>();<br/>\n    +topoMap.put(topology1.getId(), topology1);<br/>\n    +topoMap.put(topology2.getId(), topology2);<br/>\n    +Topologies topologies = new Topologies(topoMap);<br/>\n    +<br/>\n    +rs.prepare(config);<br/>\n    +rs.schedule(topologies, cluster);<br/>\n    +<br/>\n    +SchedulerAssignment assignment1 = cluster.getAssignmentById(topology1.getId());<br/>\n    +Set<WorkerSlot> assignedSlots1 = assignment1.getSlots();<br/>\n    +Set<String> nodesIDs1 = new HashSet<>();<br/>\n    +for (WorkerSlot slot : assignedSlots1) </p>\n{\n    +    nodesIDs1.add(slot.getNodeId());\n    +}\n<p>    +Collection<ExecutorDetails> executors1 = assignment1.getExecutors();<br/>\n    +<br/>\n    +Assert.assertEquals(1, assignedSlots1.size());<br/>\n    +Assert.assertEquals(1, nodesIDs1.size());<br/>\n    +Assert.assertEquals(7, executors1.size());<br/>\n    +Assert.assertEquals(\"Running - Fully Scheduled by DefaultResourceAwareStrategy\", cluster.getStatusMap().get(topology1.getId()));<br/>\n    +<br/>\n    +SchedulerAssignment assignment2 = cluster.getAssignmentById(topology2.getId());<br/>\n    +Set<WorkerSlot> assignedSlots2 = assignment2.getSlots();<br/>\n    +Set<String> nodesIDs2 = new HashSet<>();<br/>\n    +for (WorkerSlot slot : assignedSlots2) </p>\n{\n    +    nodesIDs2.add(slot.getNodeId());\n    +}\n<p>    +Collection<ExecutorDetails> executors2 = assignment2.getExecutors();<br/>\n    +<br/>\n    +Assert.assertEquals(1, assignedSlots2.size());<br/>\n    +Assert.assertEquals(1, nodesIDs2.size());<br/>\n    +Assert.assertEquals(2, executors2.size());<br/>\n    +Assert.assertEquals(\"Running - Fully Scheduled by DefaultResourceAwareStrategy\", cluster.getStatusMap().get(topology2.getId()));<br/>\n    +    }<br/>\n    +<br/>\n    +    @Test<br/>\n    +    public void testTopologySetCpuAndMemLoad() {<br/>\n    +INimbus iNimbus = new TestUtilsForResourceAwareScheduler.INimbusTest();<br/>\n    +Map<String, Number> resourceMap = new HashMap<>();<br/>\n    +resourceMap.put(Config.SUPERVISOR_CPU_CAPACITY, 400.0);<br/>\n    +resourceMap.put(Config.SUPERVISOR_MEMORY_CAPACITY_MB, 2000.0);<br/>\n    +Map<String, SupervisorDetails> supMap = TestUtilsForResourceAwareScheduler.genSupervisors(2, 2, resourceMap);<br/>\n    +<br/>\n    +TopologyBuilder builder1 = new TopologyBuilder(); // a topology with multiple spouts<br/>\n    +builder1.setSpout(\"wordSpout\", new TestWordSpout(), 1).setCPULoad(20.0).setMemoryLoad(200.0);<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    In the original clojure code, we did not set the resource requirement for the spout.  Is there a reason why we are setting it here</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612659584/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612659589","html_url":"https://github.com/apache/storm/issues/5136#issuecomment-2612659589","issue_url":"https://api.github.com/repos/apache/storm/issues/5136","id":2612659589,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NTk1ODk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-25T20:23:52Z","updated_at":"2025-01-24T14:26:54Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user jerrypeng commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1232#discussion_r57486697\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1232#discussion_r57486697</a></p>\n\n<p>    &#8212; Diff: storm-core/test/jvm/org/apache/storm/scheduler/resource/TestResourceAwareScheduler.java &#8212;<br/>\n    @@ -54,6 +61,681 @@</p>\n\n<p> private static int currentTime = 1450418597;</p>\n\n<p>    +    private static final Config defaultTopologyConf = new Config();<br/>\n    +<br/>\n    +    @BeforeClass<br/>\n    +    public static void initConf() </p>\n{\n    +defaultTopologyConf.put(Config.STORM_NETWORK_TOPOGRAPHY_PLUGIN, \"org.apache.storm.networktopography.DefaultRackDNSToSwitchMapping\");\n    +defaultTopologyConf.put(Config.RESOURCE_AWARE_SCHEDULER_EVICTION_STRATEGY, org.apache.storm.scheduler.resource.strategies.eviction.DefaultEvictionStrategy.class.getName());\n    +defaultTopologyConf.put(Config.RESOURCE_AWARE_SCHEDULER_PRIORITY_STRATEGY, org.apache.storm.scheduler.resource.strategies.priority.DefaultSchedulingPriorityStrategy.class.getName());\n    +\n    +defaultTopologyConf.put(Config.TOPOLOGY_SCHEDULER_STRATEGY, org.apache.storm.scheduler.resource.strategies.scheduling.DefaultResourceAwareStrategy.class.getName());\n    +defaultTopologyConf.put(Config.TOPOLOGY_COMPONENT_CPU_PCORE_PERCENT, 10.0);\n    +defaultTopologyConf.put(Config.TOPOLOGY_COMPONENT_RESOURCES_ONHEAP_MEMORY_MB, 128.0);\n    +defaultTopologyConf.put(Config.TOPOLOGY_COMPONENT_RESOURCES_OFFHEAP_MEMORY_MB, 0.0);\n    +defaultTopologyConf.put(Config.TOPOLOGY_WORKER_MAX_HEAP_SIZE_MB, 8192.0);\n    +defaultTopologyConf.put(Config.TOPOLOGY_PRIORITY, 0);\n    +defaultTopologyConf.put(Config.TOPOLOGY_SUBMITTER_USER, \"zhuo\");\n    +    }\n<p>    +<br/>\n    +    @Test<br/>\n    +    public void testRASNodeSlotAssign() </p>\n{\n    +INimbus iNimbus = new TestUtilsForResourceAwareScheduler.INimbusTest();\n    +Map<String, Number> resourceMap = new HashMap<>();\n    +resourceMap.put(Config.SUPERVISOR_CPU_CAPACITY, 400.0);\n    +resourceMap.put(Config.SUPERVISOR_MEMORY_CAPACITY_MB, 2000.0);\n    +Map<String, SupervisorDetails> supMap = TestUtilsForResourceAwareScheduler.genSupervisors(5, 4, resourceMap);\n    +Topologies topologies = new Topologies(new HashMap<String, TopologyDetails>());\n    +Cluster cluster = new Cluster(iNimbus, supMap, new HashMap<String, SchedulerAssignmentImpl>(), new HashMap());\n    +Map<String, RAS_Node> nodes = RAS_Nodes.getAllNodesFrom(cluster, topologies);\n    +Assert.assertEquals(5, nodes.size());\n    +RAS_Node node = nodes.get(\"sup-0\");\n    +\n    +Assert.assertEquals(\"sup-0\", node.getId());\n    +Assert.assertTrue(node.isAlive());\n    +Assert.assertEquals(0, node.getRunningTopologies().size());\n    +Assert.assertTrue(node.isTotallyFree());\n    +Assert.assertEquals(4, node.totalSlotsFree());\n    +Assert.assertEquals(0, node.totalSlotsUsed());\n    +Assert.assertEquals(4, node.totalSlots());\n    +\n    +TopologyDetails topology1 = TestUtilsForResourceAwareScheduler.getTopology(\"topology1\", new HashMap(), 1, 0, 2, 0, 0, 0);\n    +\n    +List<ExecutorDetails> executors11 = new ArrayList<>();\n    +executors11.add(new ExecutorDetails(1, 1));\n    +node.assign(node.getFreeSlots().iterator().next(), topology1, executors11);\n    +Assert.assertEquals(1, node.getRunningTopologies().size());\n    +Assert.assertFalse(node.isTotallyFree());\n    +Assert.assertEquals(3, node.totalSlotsFree());\n    +Assert.assertEquals(1, node.totalSlotsUsed());\n    +Assert.assertEquals(4, node.totalSlots());\n    +\n    +List<ExecutorDetails> executors12 = new ArrayList<>();\n    +executors12.add(new ExecutorDetails(2, 2));\n    +node.assign(node.getFreeSlots().iterator().next(), topology1, executors12);\n    +Assert.assertEquals(1, node.getRunningTopologies().size());\n    +Assert.assertFalse(node.isTotallyFree());\n    +Assert.assertEquals(2, node.totalSlotsFree());\n    +Assert.assertEquals(2, node.totalSlotsUsed());\n    +Assert.assertEquals(4, node.totalSlots());\n    +\n    +TopologyDetails topology2 = TestUtilsForResourceAwareScheduler.getTopology(\"topology2\", new HashMap(), 1, 0, 2, 0, 0, 0);\n    +\n    +List<ExecutorDetails> executors21 = new ArrayList<>();\n    +executors21.add(new ExecutorDetails(1, 1));\n    +node.assign(node.getFreeSlots().iterator().next(), topology2, executors21);\n    +Assert.assertEquals(2, node.getRunningTopologies().size());\n    +Assert.assertFalse(node.isTotallyFree());\n    +Assert.assertEquals(1, node.totalSlotsFree());\n    +Assert.assertEquals(3, node.totalSlotsUsed());\n    +Assert.assertEquals(4, node.totalSlots());\n    +\n    +List<ExecutorDetails> executors22 = new ArrayList<>();\n    +executors22.add(new ExecutorDetails(2, 2));\n    +node.assign(node.getFreeSlots().iterator().next(), topology2, executors22);\n    +Assert.assertEquals(2, node.getRunningTopologies().size());\n    +Assert.assertFalse(node.isTotallyFree());\n    +Assert.assertEquals(0, node.totalSlotsFree());\n    +Assert.assertEquals(4, node.totalSlotsUsed());\n    +Assert.assertEquals(4, node.totalSlots());\n    +\n    +node.freeAllSlots();\n    +Assert.assertEquals(0, node.getRunningTopologies().size());\n    +Assert.assertTrue(node.isTotallyFree());\n    +Assert.assertEquals(4, node.totalSlotsFree());\n    +Assert.assertEquals(0, node.totalSlotsUsed());\n    +Assert.assertEquals(4, node.totalSlots());\n    +    }\n<p>    +<br/>\n    +    @Test<br/>\n    +    public void sanityTestOfScheduling() {<br/>\n    +INimbus iNimbus = new TestUtilsForResourceAwareScheduler.INimbusTest();<br/>\n    +Map<String, Number> resourceMap = new HashMap<>();<br/>\n    +resourceMap.put(Config.SUPERVISOR_CPU_CAPACITY, 400.0);<br/>\n    +resourceMap.put(Config.SUPERVISOR_MEMORY_CAPACITY_MB, 2000.0);<br/>\n    +Map<String, SupervisorDetails> supMap = TestUtilsForResourceAwareScheduler.genSupervisors(1, 2, resourceMap);<br/>\n    +<br/>\n    +Config config = new Config();<br/>\n    +config.putAll(defaultTopologyConf);<br/>\n    +<br/>\n    +Cluster cluster = new Cluster(iNimbus, supMap, new HashMap<String, SchedulerAssignmentImpl>(), config);<br/>\n    +ResourceAwareScheduler rs = new ResourceAwareScheduler();<br/>\n    +<br/>\n    +TopologyDetails topology1 = TestUtilsForResourceAwareScheduler.getTopology(\"topology1\", config, 1, 1, 1, 1, 0, 0);<br/>\n    +Map<String, TopologyDetails> topoMap = new HashMap<>();<br/>\n    +topoMap.put(topology1.getId(), topology1);<br/>\n    +Topologies topologies = new Topologies(topoMap);<br/>\n    +<br/>\n    +rs.prepare(config);<br/>\n    +rs.schedule(topologies, cluster);<br/>\n    +<br/>\n    +SchedulerAssignment assignment = cluster.getAssignmentById(topology1.getId());<br/>\n    +Set<WorkerSlot> assignedSlots = assignment.getSlots();<br/>\n    +Set<String> nodesIDs = new HashSet<>();<br/>\n    +for (WorkerSlot slot : assignedSlots) </p>\n{\n    +    nodesIDs.add(slot.getNodeId());\n    +}\n<p>    +Collection<ExecutorDetails> executors = assignment.getExecutors();<br/>\n    +<br/>\n    +Assert.assertEquals(1, assignedSlots.size());<br/>\n    +Assert.assertEquals(1, nodesIDs.size());<br/>\n    +Assert.assertEquals(2, executors.size());<br/>\n    +Assert.assertEquals(\"Running - Fully Scheduled by DefaultResourceAwareStrategy\", cluster.getStatusMap().get(topology1.getId()));<br/>\n    +    }<br/>\n    +<br/>\n    +    @Test<br/>\n    +    public void testTopologyWithMultipleSpouts() {<br/>\n    +INimbus iNimbus = new TestUtilsForResourceAwareScheduler.INimbusTest();<br/>\n    +Map<String, Number> resourceMap = new HashMap<>();<br/>\n    +resourceMap.put(Config.SUPERVISOR_CPU_CAPACITY, 400.0);<br/>\n    +resourceMap.put(Config.SUPERVISOR_MEMORY_CAPACITY_MB, 2000.0);<br/>\n    +Map<String, SupervisorDetails> supMap = TestUtilsForResourceAwareScheduler.genSupervisors(2, 4, resourceMap);<br/>\n    +<br/>\n    +TopologyBuilder builder1 = new TopologyBuilder(); // a topology with multiple spouts<br/>\n    +builder1.setSpout(\"wordSpout1\", new TestWordSpout(), 1);<br/>\n    +builder1.setSpout(\"wordSpout2\", new TestWordSpout(), 1);<br/>\n    +builder1.setBolt(\"wordCountBolt1\", new TestWordCounter(), 1).shuffleGrouping(\"wordSpout1\").shuffleGrouping(\"wordSpout2\");<br/>\n    +builder1.setBolt(\"wordCountBolt2\", new TestWordCounter(), 1).shuffleGrouping(\"wordCountBolt1\");<br/>\n    +builder1.setBolt(\"wordCountBolt3\", new TestWordCounter(), 1).shuffleGrouping(\"wordCountBolt1\");<br/>\n    +builder1.setBolt(\"wordCountBolt4\", new TestWordCounter(), 1).shuffleGrouping(\"wordCountBolt2\");<br/>\n    +builder1.setBolt(\"wordCountBolt5\", new TestWordCounter(), 1).shuffleGrouping(\"wordSpout2\");<br/>\n    +StormTopology stormTopology1 = builder1.createTopology();<br/>\n    +<br/>\n    +Config config = new Config();<br/>\n    +config.putAll(defaultTopologyConf);<br/>\n    +Map<ExecutorDetails, String> executorMap1 = TestUtilsForResourceAwareScheduler.genExecsAndComps(stormTopology1, 1, 1);<br/>\n    +TopologyDetails topology1 = new TopologyDetails(\"topology1\", config, stormTopology1, 0, executorMap1, 0);<br/>\n    +<br/>\n    +TopologyBuilder builder2 = new TopologyBuilder(); // a topology with two unconnected partitions<br/>\n    +builder2.setSpout(\"wordSpoutX\", new TestWordSpout(), 1);<br/>\n    +builder2.setSpout(\"wordSpoutY\", new TestWordSpout(), 1);<br/>\n    +StormTopology stormTopology2 = builder2.createTopology();<br/>\n    +Map<ExecutorDetails, String> executorMap2 = TestUtilsForResourceAwareScheduler.genExecsAndComps(stormTopology2, 1, 0);<br/>\n    +TopologyDetails topology2 = new TopologyDetails(\"topology2\", config, stormTopology2, 0, executorMap2, 0);<br/>\n    +<br/>\n    +Cluster cluster = new Cluster(iNimbus, supMap, new HashMap<String, SchedulerAssignmentImpl>(), config);<br/>\n    +ResourceAwareScheduler rs = new ResourceAwareScheduler();<br/>\n    +<br/>\n    +Map<String, TopologyDetails> topoMap = new HashMap<>();<br/>\n    +topoMap.put(topology1.getId(), topology1);<br/>\n    +topoMap.put(topology2.getId(), topology2);<br/>\n    +Topologies topologies = new Topologies(topoMap);<br/>\n    +<br/>\n    +rs.prepare(config);<br/>\n    +rs.schedule(topologies, cluster);<br/>\n    +<br/>\n    +SchedulerAssignment assignment1 = cluster.getAssignmentById(topology1.getId());<br/>\n    +Set<WorkerSlot> assignedSlots1 = assignment1.getSlots();<br/>\n    +Set<String> nodesIDs1 = new HashSet<>();<br/>\n    +for (WorkerSlot slot : assignedSlots1) </p>\n{\n    +    nodesIDs1.add(slot.getNodeId());\n    +}\n<p>    +Collection<ExecutorDetails> executors1 = assignment1.getExecutors();<br/>\n    +<br/>\n    +Assert.assertEquals(1, assignedSlots1.size());<br/>\n    +Assert.assertEquals(1, nodesIDs1.size());<br/>\n    +Assert.assertEquals(7, executors1.size());<br/>\n    +Assert.assertEquals(\"Running - Fully Scheduled by DefaultResourceAwareStrategy\", cluster.getStatusMap().get(topology1.getId()));<br/>\n    +<br/>\n    +SchedulerAssignment assignment2 = cluster.getAssignmentById(topology2.getId());<br/>\n    +Set<WorkerSlot> assignedSlots2 = assignment2.getSlots();<br/>\n    +Set<String> nodesIDs2 = new HashSet<>();<br/>\n    +for (WorkerSlot slot : assignedSlots2) </p>\n{\n    +    nodesIDs2.add(slot.getNodeId());\n    +}\n<p>    +Collection<ExecutorDetails> executors2 = assignment2.getExecutors();<br/>\n    +<br/>\n    +Assert.assertEquals(1, assignedSlots2.size());<br/>\n    +Assert.assertEquals(1, nodesIDs2.size());<br/>\n    +Assert.assertEquals(2, executors2.size());<br/>\n    +Assert.assertEquals(\"Running - Fully Scheduled by DefaultResourceAwareStrategy\", cluster.getStatusMap().get(topology2.getId()));<br/>\n    +    }<br/>\n    +<br/>\n    +    @Test<br/>\n    +    public void testTopologySetCpuAndMemLoad() {<br/>\n    +INimbus iNimbus = new TestUtilsForResourceAwareScheduler.INimbusTest();<br/>\n    +Map<String, Number> resourceMap = new HashMap<>();<br/>\n    +resourceMap.put(Config.SUPERVISOR_CPU_CAPACITY, 400.0);<br/>\n    +resourceMap.put(Config.SUPERVISOR_MEMORY_CAPACITY_MB, 2000.0);<br/>\n    +Map<String, SupervisorDetails> supMap = TestUtilsForResourceAwareScheduler.genSupervisors(2, 2, resourceMap);<br/>\n    +<br/>\n    +TopologyBuilder builder1 = new TopologyBuilder(); // a topology with multiple spouts<br/>\n    +builder1.setSpout(\"wordSpout\", new TestWordSpout(), 1).setCPULoad(20.0).setMemoryLoad(200.0);<br/>\n    +builder1.setBolt(\"wordCountBolt\", new TestWordCounter(), 1).shuffleGrouping(\"wordSpout\").setCPULoad(20.0).setMemoryLoad(200.0);<br/>\n    +StormTopology stormTopology1 = builder1.createTopology();<br/>\n    +<br/>\n    +Config config = new Config();<br/>\n    +config.putAll(defaultTopologyConf);<br/>\n    +Map<ExecutorDetails, String> executorMap1 = TestUtilsForResourceAwareScheduler.genExecsAndComps(stormTopology1, 1, 1);<br/>\n    +TopologyDetails topology1 = new TopologyDetails(\"topology1\", config, stormTopology1, 0, executorMap1, 0);<br/>\n    +<br/>\n    +Cluster cluster = new Cluster(iNimbus, supMap, new HashMap<String, SchedulerAssignmentImpl>(), config);<br/>\n    +ResourceAwareScheduler rs = new ResourceAwareScheduler();<br/>\n    +Map<String, TopologyDetails> topoMap = new HashMap<>();<br/>\n    +topoMap.put(topology1.getId(), topology1);<br/>\n    +Topologies topologies = new Topologies(topoMap);<br/>\n    +<br/>\n    +rs.prepare(config);<br/>\n    +rs.schedule(topologies, cluster);<br/>\n    +<br/>\n    +SchedulerAssignment assignment1 = cluster.getAssignmentById(topology1.getId());<br/>\n    +Set<WorkerSlot> assignedSlots1 = assignment1.getSlots();<br/>\n    +double assignedMemory = 0.0;<br/>\n    +double assignedCpu = 0.0;<br/>\n    +Set<String> nodesIDs1 = new HashSet<>();<br/>\n    +for (WorkerSlot slot : assignedSlots1) </p>\n{\n    +    nodesIDs1.add(slot.getNodeId());\n    +    assignedMemory += slot.getAllocatedMemOnHeap() + slot.getAllocatedMemOffHeap();\n    +    assignedCpu += slot.getAllocatedCpu();\n    +\n    +}\n<p>    +Collection<ExecutorDetails> executors1 = assignment1.getExecutors();<br/>\n    +<br/>\n    +Assert.assertEquals(1, assignedSlots1.size());<br/>\n    +Assert.assertEquals(1, nodesIDs1.size());<br/>\n    +Assert.assertEquals(2, executors1.size());<br/>\n    +Assert.assertEquals(400.0, assignedMemory, 0.001);<br/>\n    +Assert.assertEquals(40.0, assignedCpu, 0.001);<br/>\n    +Assert.assertEquals(\"Running - Fully Scheduled by DefaultResourceAwareStrategy\", cluster.getStatusMap().get(topology1.getId()));<br/>\n    +    }<br/>\n    +<br/>\n    +    @Test<br/>\n    +    public void testResourceLimitation() {<br/>\n    +INimbus iNimbus = new TestUtilsForResourceAwareScheduler.INimbusTest();<br/>\n    +Map<String, Number> resourceMap = new HashMap<>();<br/>\n    +resourceMap.put(Config.SUPERVISOR_CPU_CAPACITY, 400.0);<br/>\n    +resourceMap.put(Config.SUPERVISOR_MEMORY_CAPACITY_MB, 2000.0);<br/>\n    +Map<String, SupervisorDetails> supMap = TestUtilsForResourceAwareScheduler.genSupervisors(2, 2, resourceMap);<br/>\n    +<br/>\n    +TopologyBuilder builder1 = new TopologyBuilder(); // a topology with multiple spouts<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    comment seems to be wrong</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612659589/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612659592","html_url":"https://github.com/apache/storm/issues/5136#issuecomment-2612659592","issue_url":"https://api.github.com/repos/apache/storm/issues/5136","id":2612659592,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NTk1OTI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-25T20:32:50Z","updated_at":"2025-01-24T14:26:54Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user zhuoliu commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1232#discussion_r57487640\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1232#discussion_r57487640</a></p>\n\n<p>    &#8212; Diff: storm-core/test/jvm/org/apache/storm/scheduler/resource/TestResourceAwareScheduler.java &#8212;<br/>\n    @@ -54,6 +61,681 @@</p>\n\n<p> private static int currentTime = 1450418597;</p>\n\n<p>    +    private static final Config defaultTopologyConf = new Config();<br/>\n    +<br/>\n    +    @BeforeClass<br/>\n    +    public static void initConf() </p>\n{\n    +defaultTopologyConf.put(Config.STORM_NETWORK_TOPOGRAPHY_PLUGIN, \"org.apache.storm.networktopography.DefaultRackDNSToSwitchMapping\");\n    +defaultTopologyConf.put(Config.RESOURCE_AWARE_SCHEDULER_EVICTION_STRATEGY, org.apache.storm.scheduler.resource.strategies.eviction.DefaultEvictionStrategy.class.getName());\n    +defaultTopologyConf.put(Config.RESOURCE_AWARE_SCHEDULER_PRIORITY_STRATEGY, org.apache.storm.scheduler.resource.strategies.priority.DefaultSchedulingPriorityStrategy.class.getName());\n    +\n    +defaultTopologyConf.put(Config.TOPOLOGY_SCHEDULER_STRATEGY, org.apache.storm.scheduler.resource.strategies.scheduling.DefaultResourceAwareStrategy.class.getName());\n    +defaultTopologyConf.put(Config.TOPOLOGY_COMPONENT_CPU_PCORE_PERCENT, 10.0);\n    +defaultTopologyConf.put(Config.TOPOLOGY_COMPONENT_RESOURCES_ONHEAP_MEMORY_MB, 128.0);\n    +defaultTopologyConf.put(Config.TOPOLOGY_COMPONENT_RESOURCES_OFFHEAP_MEMORY_MB, 0.0);\n    +defaultTopologyConf.put(Config.TOPOLOGY_WORKER_MAX_HEAP_SIZE_MB, 8192.0);\n    +defaultTopologyConf.put(Config.TOPOLOGY_PRIORITY, 0);\n    +defaultTopologyConf.put(Config.TOPOLOGY_SUBMITTER_USER, \"zhuo\");\n    +    }\n<p>    +<br/>\n    +    @Test<br/>\n    +    public void testRASNodeSlotAssign() </p>\n{\n    +INimbus iNimbus = new TestUtilsForResourceAwareScheduler.INimbusTest();\n    +Map<String, Number> resourceMap = new HashMap<>();\n    +resourceMap.put(Config.SUPERVISOR_CPU_CAPACITY, 400.0);\n    +resourceMap.put(Config.SUPERVISOR_MEMORY_CAPACITY_MB, 2000.0);\n    +Map<String, SupervisorDetails> supMap = TestUtilsForResourceAwareScheduler.genSupervisors(5, 4, resourceMap);\n    +Topologies topologies = new Topologies(new HashMap<String, TopologyDetails>());\n    +Cluster cluster = new Cluster(iNimbus, supMap, new HashMap<String, SchedulerAssignmentImpl>(), new HashMap());\n    +Map<String, RAS_Node> nodes = RAS_Nodes.getAllNodesFrom(cluster, topologies);\n    +Assert.assertEquals(5, nodes.size());\n    +RAS_Node node = nodes.get(\"sup-0\");\n    +\n    +Assert.assertEquals(\"sup-0\", node.getId());\n    +Assert.assertTrue(node.isAlive());\n    +Assert.assertEquals(0, node.getRunningTopologies().size());\n    +Assert.assertTrue(node.isTotallyFree());\n    +Assert.assertEquals(4, node.totalSlotsFree());\n    +Assert.assertEquals(0, node.totalSlotsUsed());\n    +Assert.assertEquals(4, node.totalSlots());\n    +\n    +TopologyDetails topology1 = TestUtilsForResourceAwareScheduler.getTopology(\"topology1\", new HashMap(), 1, 0, 2, 0, 0, 0);\n    +\n    +List<ExecutorDetails> executors11 = new ArrayList<>();\n    +executors11.add(new ExecutorDetails(1, 1));\n    +node.assign(node.getFreeSlots().iterator().next(), topology1, executors11);\n    +Assert.assertEquals(1, node.getRunningTopologies().size());\n    +Assert.assertFalse(node.isTotallyFree());\n    +Assert.assertEquals(3, node.totalSlotsFree());\n    +Assert.assertEquals(1, node.totalSlotsUsed());\n    +Assert.assertEquals(4, node.totalSlots());\n    +\n    +List<ExecutorDetails> executors12 = new ArrayList<>();\n    +executors12.add(new ExecutorDetails(2, 2));\n    +node.assign(node.getFreeSlots().iterator().next(), topology1, executors12);\n    +Assert.assertEquals(1, node.getRunningTopologies().size());\n    +Assert.assertFalse(node.isTotallyFree());\n    +Assert.assertEquals(2, node.totalSlotsFree());\n    +Assert.assertEquals(2, node.totalSlotsUsed());\n    +Assert.assertEquals(4, node.totalSlots());\n    +\n    +TopologyDetails topology2 = TestUtilsForResourceAwareScheduler.getTopology(\"topology2\", new HashMap(), 1, 0, 2, 0, 0, 0);\n    +\n    +List<ExecutorDetails> executors21 = new ArrayList<>();\n    +executors21.add(new ExecutorDetails(1, 1));\n    +node.assign(node.getFreeSlots().iterator().next(), topology2, executors21);\n    +Assert.assertEquals(2, node.getRunningTopologies().size());\n    +Assert.assertFalse(node.isTotallyFree());\n    +Assert.assertEquals(1, node.totalSlotsFree());\n    +Assert.assertEquals(3, node.totalSlotsUsed());\n    +Assert.assertEquals(4, node.totalSlots());\n    +\n    +List<ExecutorDetails> executors22 = new ArrayList<>();\n    +executors22.add(new ExecutorDetails(2, 2));\n    +node.assign(node.getFreeSlots().iterator().next(), topology2, executors22);\n    +Assert.assertEquals(2, node.getRunningTopologies().size());\n    +Assert.assertFalse(node.isTotallyFree());\n    +Assert.assertEquals(0, node.totalSlotsFree());\n    +Assert.assertEquals(4, node.totalSlotsUsed());\n    +Assert.assertEquals(4, node.totalSlots());\n    +\n    +node.freeAllSlots();\n    +Assert.assertEquals(0, node.getRunningTopologies().size());\n    +Assert.assertTrue(node.isTotallyFree());\n    +Assert.assertEquals(4, node.totalSlotsFree());\n    +Assert.assertEquals(0, node.totalSlotsUsed());\n    +Assert.assertEquals(4, node.totalSlots());\n    +    }\n<p>    +<br/>\n    +    @Test<br/>\n    +    public void sanityTestOfScheduling() {<br/>\n    +INimbus iNimbus = new TestUtilsForResourceAwareScheduler.INimbusTest();<br/>\n    +Map<String, Number> resourceMap = new HashMap<>();<br/>\n    +resourceMap.put(Config.SUPERVISOR_CPU_CAPACITY, 400.0);<br/>\n    +resourceMap.put(Config.SUPERVISOR_MEMORY_CAPACITY_MB, 2000.0);<br/>\n    +Map<String, SupervisorDetails> supMap = TestUtilsForResourceAwareScheduler.genSupervisors(1, 2, resourceMap);<br/>\n    +<br/>\n    +Config config = new Config();<br/>\n    +config.putAll(defaultTopologyConf);<br/>\n    +<br/>\n    +Cluster cluster = new Cluster(iNimbus, supMap, new HashMap<String, SchedulerAssignmentImpl>(), config);<br/>\n    +ResourceAwareScheduler rs = new ResourceAwareScheduler();<br/>\n    +<br/>\n    +TopologyDetails topology1 = TestUtilsForResourceAwareScheduler.getTopology(\"topology1\", config, 1, 1, 1, 1, 0, 0);<br/>\n    +Map<String, TopologyDetails> topoMap = new HashMap<>();<br/>\n    +topoMap.put(topology1.getId(), topology1);<br/>\n    +Topologies topologies = new Topologies(topoMap);<br/>\n    +<br/>\n    +rs.prepare(config);<br/>\n    +rs.schedule(topologies, cluster);<br/>\n    +<br/>\n    +SchedulerAssignment assignment = cluster.getAssignmentById(topology1.getId());<br/>\n    +Set<WorkerSlot> assignedSlots = assignment.getSlots();<br/>\n    +Set<String> nodesIDs = new HashSet<>();<br/>\n    +for (WorkerSlot slot : assignedSlots) </p>\n{\n    +    nodesIDs.add(slot.getNodeId());\n    +}\n<p>    +Collection<ExecutorDetails> executors = assignment.getExecutors();<br/>\n    +<br/>\n    +Assert.assertEquals(1, assignedSlots.size());<br/>\n    +Assert.assertEquals(1, nodesIDs.size());<br/>\n    +Assert.assertEquals(2, executors.size());<br/>\n    +Assert.assertEquals(\"Running - Fully Scheduled by DefaultResourceAwareStrategy\", cluster.getStatusMap().get(topology1.getId()));<br/>\n    +    }<br/>\n    +<br/>\n    +    @Test<br/>\n    +    public void testTopologyWithMultipleSpouts() {<br/>\n    +INimbus iNimbus = new TestUtilsForResourceAwareScheduler.INimbusTest();<br/>\n    +Map<String, Number> resourceMap = new HashMap<>();<br/>\n    +resourceMap.put(Config.SUPERVISOR_CPU_CAPACITY, 400.0);<br/>\n    +resourceMap.put(Config.SUPERVISOR_MEMORY_CAPACITY_MB, 2000.0);<br/>\n    +Map<String, SupervisorDetails> supMap = TestUtilsForResourceAwareScheduler.genSupervisors(2, 4, resourceMap);<br/>\n    +<br/>\n    +TopologyBuilder builder1 = new TopologyBuilder(); // a topology with multiple spouts<br/>\n    +builder1.setSpout(\"wordSpout1\", new TestWordSpout(), 1);<br/>\n    +builder1.setSpout(\"wordSpout2\", new TestWordSpout(), 1);<br/>\n    +builder1.setBolt(\"wordCountBolt1\", new TestWordCounter(), 1).shuffleGrouping(\"wordSpout1\").shuffleGrouping(\"wordSpout2\");<br/>\n    +builder1.setBolt(\"wordCountBolt2\", new TestWordCounter(), 1).shuffleGrouping(\"wordCountBolt1\");<br/>\n    +builder1.setBolt(\"wordCountBolt3\", new TestWordCounter(), 1).shuffleGrouping(\"wordCountBolt1\");<br/>\n    +builder1.setBolt(\"wordCountBolt4\", new TestWordCounter(), 1).shuffleGrouping(\"wordCountBolt2\");<br/>\n    +builder1.setBolt(\"wordCountBolt5\", new TestWordCounter(), 1).shuffleGrouping(\"wordSpout2\");<br/>\n    +StormTopology stormTopology1 = builder1.createTopology();<br/>\n    +<br/>\n    +Config config = new Config();<br/>\n    +config.putAll(defaultTopologyConf);<br/>\n    +Map<ExecutorDetails, String> executorMap1 = TestUtilsForResourceAwareScheduler.genExecsAndComps(stormTopology1, 1, 1);<br/>\n    +TopologyDetails topology1 = new TopologyDetails(\"topology1\", config, stormTopology1, 0, executorMap1, 0);<br/>\n    +<br/>\n    +TopologyBuilder builder2 = new TopologyBuilder(); // a topology with two unconnected partitions<br/>\n    +builder2.setSpout(\"wordSpoutX\", new TestWordSpout(), 1);<br/>\n    +builder2.setSpout(\"wordSpoutY\", new TestWordSpout(), 1);<br/>\n    +StormTopology stormTopology2 = builder2.createTopology();<br/>\n    +Map<ExecutorDetails, String> executorMap2 = TestUtilsForResourceAwareScheduler.genExecsAndComps(stormTopology2, 1, 0);<br/>\n    +TopologyDetails topology2 = new TopologyDetails(\"topology2\", config, stormTopology2, 0, executorMap2, 0);<br/>\n    +<br/>\n    +Cluster cluster = new Cluster(iNimbus, supMap, new HashMap<String, SchedulerAssignmentImpl>(), config);<br/>\n    +ResourceAwareScheduler rs = new ResourceAwareScheduler();<br/>\n    +<br/>\n    +Map<String, TopologyDetails> topoMap = new HashMap<>();<br/>\n    +topoMap.put(topology1.getId(), topology1);<br/>\n    +topoMap.put(topology2.getId(), topology2);<br/>\n    +Topologies topologies = new Topologies(topoMap);<br/>\n    +<br/>\n    +rs.prepare(config);<br/>\n    +rs.schedule(topologies, cluster);<br/>\n    +<br/>\n    +SchedulerAssignment assignment1 = cluster.getAssignmentById(topology1.getId());<br/>\n    +Set<WorkerSlot> assignedSlots1 = assignment1.getSlots();<br/>\n    +Set<String> nodesIDs1 = new HashSet<>();<br/>\n    +for (WorkerSlot slot : assignedSlots1) </p>\n{\n    +    nodesIDs1.add(slot.getNodeId());\n    +}\n<p>    +Collection<ExecutorDetails> executors1 = assignment1.getExecutors();<br/>\n    +<br/>\n    +Assert.assertEquals(1, assignedSlots1.size());<br/>\n    +Assert.assertEquals(1, nodesIDs1.size());<br/>\n    +Assert.assertEquals(7, executors1.size());<br/>\n    +Assert.assertEquals(\"Running - Fully Scheduled by DefaultResourceAwareStrategy\", cluster.getStatusMap().get(topology1.getId()));<br/>\n    +<br/>\n    +SchedulerAssignment assignment2 = cluster.getAssignmentById(topology2.getId());<br/>\n    +Set<WorkerSlot> assignedSlots2 = assignment2.getSlots();<br/>\n    +Set<String> nodesIDs2 = new HashSet<>();<br/>\n    +for (WorkerSlot slot : assignedSlots2) </p>\n{\n    +    nodesIDs2.add(slot.getNodeId());\n    +}\n<p>    +Collection<ExecutorDetails> executors2 = assignment2.getExecutors();<br/>\n    +<br/>\n    +Assert.assertEquals(1, assignedSlots2.size());<br/>\n    +Assert.assertEquals(1, nodesIDs2.size());<br/>\n    +Assert.assertEquals(2, executors2.size());<br/>\n    +Assert.assertEquals(\"Running - Fully Scheduled by DefaultResourceAwareStrategy\", cluster.getStatusMap().get(topology2.getId()));<br/>\n    +    }<br/>\n    +<br/>\n    +    @Test<br/>\n    +    public void testTopologySetCpuAndMemLoad() {<br/>\n    +INimbus iNimbus = new TestUtilsForResourceAwareScheduler.INimbusTest();<br/>\n    +Map<String, Number> resourceMap = new HashMap<>();<br/>\n    +resourceMap.put(Config.SUPERVISOR_CPU_CAPACITY, 400.0);<br/>\n    +resourceMap.put(Config.SUPERVISOR_MEMORY_CAPACITY_MB, 2000.0);<br/>\n    +Map<String, SupervisorDetails> supMap = TestUtilsForResourceAwareScheduler.genSupervisors(2, 2, resourceMap);<br/>\n    +<br/>\n    +TopologyBuilder builder1 = new TopologyBuilder(); // a topology with multiple spouts<br/>\n    +builder1.setSpout(\"wordSpout\", new TestWordSpout(), 1).setCPULoad(20.0).setMemoryLoad(200.0);<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Hi @jerrypeng , the original clj test only tests slot and executor number where the cpu/mem load number does not actually matter. This test set a specific number for cpu and mem so that we can verify the assigned memory and cpu in the end (either 110 or 200 will work).<br/>\n    +Assert.assertEquals(400.0, assignedMemory, 0.001);<br/>\n    +Assert.assertEquals(40.0, assignedCpu, 0.001);</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612659592/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/201490715","html_url":"https://github.com/apache/storm/pull/1044#issuecomment-201490715","issue_url":"https://api.github.com/repos/apache/storm/issues/1044","id":201490715,"node_id":"MDEyOklzc3VlQ29tbWVudDIwMTQ5MDcxNQ==","user":{"login":"dossett","id":7207582,"node_id":"MDQ6VXNlcjcyMDc1ODI=","avatar_url":"https://avatars.githubusercontent.com/u/7207582?v=4","gravatar_id":"","url":"https://api.github.com/users/dossett","html_url":"https://github.com/dossett","followers_url":"https://api.github.com/users/dossett/followers","following_url":"https://api.github.com/users/dossett/following{/other_user}","gists_url":"https://api.github.com/users/dossett/gists{/gist_id}","starred_url":"https://api.github.com/users/dossett/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dossett/subscriptions","organizations_url":"https://api.github.com/users/dossett/orgs","repos_url":"https://api.github.com/users/dossett/repos","events_url":"https://api.github.com/users/dossett/events{/privacy}","received_events_url":"https://api.github.com/users/dossett/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-25T20:44:46Z","updated_at":"2016-03-25T20:44:46Z","author_association":"CONTRIBUTOR","body":"@arunmahadevan @harshach Are you both still +1.  I can merge, but want to double check first.  Thanks.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/201490715/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612699800","html_url":"https://github.com/apache/storm/issues/5299#issuecomment-2612699800","issue_url":"https://api.github.com/repos/apache/storm/issues/5299","id":2612699800,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTk4MDA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-25T20:44:48Z","updated_at":"2025-01-24T14:44:11Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user dossett commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1044#issuecomment-201490715\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1044#issuecomment-201490715</a></p>\n\n<p>    @arunmahadevan @harshach Are you both still +1.  I can merge, but want to double check first.  Thanks.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612699800/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/201500082","html_url":"https://github.com/apache/storm/pull/1157#issuecomment-201500082","issue_url":"https://api.github.com/repos/apache/storm/issues/1157","id":201500082,"node_id":"MDEyOklzc3VlQ29tbWVudDIwMTUwMDA4Mg==","user":{"login":"revans2","id":3441321,"node_id":"MDQ6VXNlcjM0NDEzMjE=","avatar_url":"https://avatars.githubusercontent.com/u/3441321?v=4","gravatar_id":"","url":"https://api.github.com/users/revans2","html_url":"https://github.com/revans2","followers_url":"https://api.github.com/users/revans2/followers","following_url":"https://api.github.com/users/revans2/following{/other_user}","gists_url":"https://api.github.com/users/revans2/gists{/gist_id}","starred_url":"https://api.github.com/users/revans2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/revans2/subscriptions","organizations_url":"https://api.github.com/users/revans2/orgs","repos_url":"https://api.github.com/users/revans2/repos","events_url":"https://api.github.com/users/revans2/events{/privacy}","received_events_url":"https://api.github.com/users/revans2/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-25T21:01:25Z","updated_at":"2016-03-25T21:01:25Z","author_association":"CONTRIBUTOR","body":"@abhishekagarwal87 yes I modified most of the docs so they are release specific and under the docs directory again.\n\nI should add some meta documentation about the docs themselves (I'll try to take this and update the README.md in all of them.\n\nIn subversion release specific documentation is placed under the releases directory, in a sub directory named after the release.  The \"current\" release should be pointed to by a symlink in that directory called current.\n\nhttp://svn.apache.org/viewvc/storm/site/releases/\n\nInside the git docs directory all of the markdown files are supposed to be release specific.\n\nI added a jekyll plugin that automates generating data for and about the release pages.\n\nhttps://github.com/apache/storm/blob/master/docs/_plugins/releases.rb\n\nIt sets three things for all of the release documentation pages.\nversion - the version number of the  \ngit-tree-base - a link to a directory in github that this version is on\ngit-blob-base - a link to to where on github that this version is on, but should be used when pointing to files.\n\nIt also sets/augments a dataset for each release.  `site.data.releases` \neach release in the list includes the following, and each can be set in `_data/releases.yml` to override what is automatically generated by the plugin.\n\ngit-tag-or-branch - tag or branch name on github/apache/storm\ngit-tree-base - a link to a directory in github that this version is on\ngit-blob-base - a link to to where on github that this version is on, but should be used when pointing to files.\nbase-name - name of the release files to download, without the .tar.gz\nhas-download - if this is an official release and a download link should be created.\n\nAlso I think I have updated all of the javadoc and github links to point to the proper place for each release.  So 1.0.0-SNAPSHOT is pointing to org.apache.storm, and 2.0.0-SNAPSHOT is updated to point to java files where they have moved.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/201500082/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612877136","html_url":"https://github.com/apache/storm/issues/5416#issuecomment-2612877136","issue_url":"https://api.github.com/repos/apache/storm/issues/5416","id":2612877136,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4NzcxMzY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-25T21:01:26Z","updated_at":"2025-01-24T16:04:28Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1157#issuecomment-201500082\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1157#issuecomment-201500082</a></p>\n\n<p>    @abhishekagarwal87 yes I modified most of the docs so they are release specific and under the docs directory again.</p>\n\n<p>    I should add some meta documentation about the docs themselves (I'll try to take this and update the README.md in all of them.</p>\n\n<p>    In subversion release specific documentation is placed under the releases directory, in a sub directory named after the release.  The \"current\" release should be pointed to by a symlink in that directory called current.</p>\n\n<p>    <a href=\"http://svn.apache.org/viewvc/storm/site/releases/\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://svn.apache.org/viewvc/storm/site/releases/</a></p>\n\n<p>    Inside the git docs directory all of the markdown files are supposed to be release specific.</p>\n\n<p>    I added a jekyll plugin that automates generating data for and about the release pages.</p>\n\n<p>    <a href=\"https://github.com/apache/storm/blob/master/docs/_plugins/releases.rb\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/blob/master/docs/_plugins/releases.rb</a></p>\n\n<p>    It sets three things for all of the release documentation pages.<br/>\n    version - the version number of the  <br/>\n    git-tree-base - a link to a directory in github that this version is on<br/>\n    git-blob-base - a link to to where on github that this version is on, but should be used when pointing to files.</p>\n\n<p>    It also sets/augments a dataset for each release.  `site.data.releases` <br/>\n    each release in the list includes the following, and each can be set in `_data/releases.yml` to override what is automatically generated by the plugin.</p>\n\n<p>    git-tag-or-branch - tag or branch name on github/apache/storm<br/>\n    git-tree-base - a link to a directory in github that this version is on<br/>\n    git-blob-base - a link to to where on github that this version is on, but should be used when pointing to files.<br/>\n    base-name - name of the release files to download, without the .tar.gz<br/>\n    has-download - if this is an official release and a download link should be created.</p>\n\n<p>    Also I think I have updated all of the javadoc and github links to point to the proper place for each release.  So 1.0.0-SNAPSHOT is pointing to org.apache.storm, and 2.0.0-SNAPSHOT is updated to point to java files where they have moved.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612877136/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612659595","html_url":"https://github.com/apache/storm/issues/5136#issuecomment-2612659595","issue_url":"https://api.github.com/repos/apache/storm/issues/5136","id":2612659595,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NTk1OTU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-25T21:09:22Z","updated_at":"2025-01-24T14:26:54Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user jerrypeng commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1232#discussion_r57491392\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1232#discussion_r57491392</a></p>\n\n<p>    &#8212; Diff: storm-core/test/jvm/org/apache/storm/scheduler/resource/TestResourceAwareScheduler.java &#8212;<br/>\n    @@ -54,6 +61,681 @@</p>\n\n<p> private static int currentTime = 1450418597;</p>\n\n<p>    +    private static final Config defaultTopologyConf = new Config();<br/>\n    +<br/>\n    +    @BeforeClass<br/>\n    +    public static void initConf() </p>\n{\n    +defaultTopologyConf.put(Config.STORM_NETWORK_TOPOGRAPHY_PLUGIN, \"org.apache.storm.networktopography.DefaultRackDNSToSwitchMapping\");\n    +defaultTopologyConf.put(Config.RESOURCE_AWARE_SCHEDULER_EVICTION_STRATEGY, org.apache.storm.scheduler.resource.strategies.eviction.DefaultEvictionStrategy.class.getName());\n    +defaultTopologyConf.put(Config.RESOURCE_AWARE_SCHEDULER_PRIORITY_STRATEGY, org.apache.storm.scheduler.resource.strategies.priority.DefaultSchedulingPriorityStrategy.class.getName());\n    +\n    +defaultTopologyConf.put(Config.TOPOLOGY_SCHEDULER_STRATEGY, org.apache.storm.scheduler.resource.strategies.scheduling.DefaultResourceAwareStrategy.class.getName());\n    +defaultTopologyConf.put(Config.TOPOLOGY_COMPONENT_CPU_PCORE_PERCENT, 10.0);\n    +defaultTopologyConf.put(Config.TOPOLOGY_COMPONENT_RESOURCES_ONHEAP_MEMORY_MB, 128.0);\n    +defaultTopologyConf.put(Config.TOPOLOGY_COMPONENT_RESOURCES_OFFHEAP_MEMORY_MB, 0.0);\n    +defaultTopologyConf.put(Config.TOPOLOGY_WORKER_MAX_HEAP_SIZE_MB, 8192.0);\n    +defaultTopologyConf.put(Config.TOPOLOGY_PRIORITY, 0);\n    +defaultTopologyConf.put(Config.TOPOLOGY_SUBMITTER_USER, \"zhuo\");\n    +    }\n<p>    +<br/>\n    +    @Test<br/>\n    +    public void testRASNodeSlotAssign() </p>\n{\n    +INimbus iNimbus = new TestUtilsForResourceAwareScheduler.INimbusTest();\n    +Map<String, Number> resourceMap = new HashMap<>();\n    +resourceMap.put(Config.SUPERVISOR_CPU_CAPACITY, 400.0);\n    +resourceMap.put(Config.SUPERVISOR_MEMORY_CAPACITY_MB, 2000.0);\n    +Map<String, SupervisorDetails> supMap = TestUtilsForResourceAwareScheduler.genSupervisors(5, 4, resourceMap);\n    +Topologies topologies = new Topologies(new HashMap<String, TopologyDetails>());\n    +Cluster cluster = new Cluster(iNimbus, supMap, new HashMap<String, SchedulerAssignmentImpl>(), new HashMap());\n    +Map<String, RAS_Node> nodes = RAS_Nodes.getAllNodesFrom(cluster, topologies);\n    +Assert.assertEquals(5, nodes.size());\n    +RAS_Node node = nodes.get(\"sup-0\");\n    +\n    +Assert.assertEquals(\"sup-0\", node.getId());\n    +Assert.assertTrue(node.isAlive());\n    +Assert.assertEquals(0, node.getRunningTopologies().size());\n    +Assert.assertTrue(node.isTotallyFree());\n    +Assert.assertEquals(4, node.totalSlotsFree());\n    +Assert.assertEquals(0, node.totalSlotsUsed());\n    +Assert.assertEquals(4, node.totalSlots());\n    +\n    +TopologyDetails topology1 = TestUtilsForResourceAwareScheduler.getTopology(\"topology1\", new HashMap(), 1, 0, 2, 0, 0, 0);\n    +\n    +List<ExecutorDetails> executors11 = new ArrayList<>();\n    +executors11.add(new ExecutorDetails(1, 1));\n    +node.assign(node.getFreeSlots().iterator().next(), topology1, executors11);\n    +Assert.assertEquals(1, node.getRunningTopologies().size());\n    +Assert.assertFalse(node.isTotallyFree());\n    +Assert.assertEquals(3, node.totalSlotsFree());\n    +Assert.assertEquals(1, node.totalSlotsUsed());\n    +Assert.assertEquals(4, node.totalSlots());\n    +\n    +List<ExecutorDetails> executors12 = new ArrayList<>();\n    +executors12.add(new ExecutorDetails(2, 2));\n    +node.assign(node.getFreeSlots().iterator().next(), topology1, executors12);\n    +Assert.assertEquals(1, node.getRunningTopologies().size());\n    +Assert.assertFalse(node.isTotallyFree());\n    +Assert.assertEquals(2, node.totalSlotsFree());\n    +Assert.assertEquals(2, node.totalSlotsUsed());\n    +Assert.assertEquals(4, node.totalSlots());\n    +\n    +TopologyDetails topology2 = TestUtilsForResourceAwareScheduler.getTopology(\"topology2\", new HashMap(), 1, 0, 2, 0, 0, 0);\n    +\n    +List<ExecutorDetails> executors21 = new ArrayList<>();\n    +executors21.add(new ExecutorDetails(1, 1));\n    +node.assign(node.getFreeSlots().iterator().next(), topology2, executors21);\n    +Assert.assertEquals(2, node.getRunningTopologies().size());\n    +Assert.assertFalse(node.isTotallyFree());\n    +Assert.assertEquals(1, node.totalSlotsFree());\n    +Assert.assertEquals(3, node.totalSlotsUsed());\n    +Assert.assertEquals(4, node.totalSlots());\n    +\n    +List<ExecutorDetails> executors22 = new ArrayList<>();\n    +executors22.add(new ExecutorDetails(2, 2));\n    +node.assign(node.getFreeSlots().iterator().next(), topology2, executors22);\n    +Assert.assertEquals(2, node.getRunningTopologies().size());\n    +Assert.assertFalse(node.isTotallyFree());\n    +Assert.assertEquals(0, node.totalSlotsFree());\n    +Assert.assertEquals(4, node.totalSlotsUsed());\n    +Assert.assertEquals(4, node.totalSlots());\n    +\n    +node.freeAllSlots();\n    +Assert.assertEquals(0, node.getRunningTopologies().size());\n    +Assert.assertTrue(node.isTotallyFree());\n    +Assert.assertEquals(4, node.totalSlotsFree());\n    +Assert.assertEquals(0, node.totalSlotsUsed());\n    +Assert.assertEquals(4, node.totalSlots());\n    +    }\n<p>    +<br/>\n    +    @Test<br/>\n    +    public void sanityTestOfScheduling() {<br/>\n    +INimbus iNimbus = new TestUtilsForResourceAwareScheduler.INimbusTest();<br/>\n    +Map<String, Number> resourceMap = new HashMap<>();<br/>\n    +resourceMap.put(Config.SUPERVISOR_CPU_CAPACITY, 400.0);<br/>\n    +resourceMap.put(Config.SUPERVISOR_MEMORY_CAPACITY_MB, 2000.0);<br/>\n    +Map<String, SupervisorDetails> supMap = TestUtilsForResourceAwareScheduler.genSupervisors(1, 2, resourceMap);<br/>\n    +<br/>\n    +Config config = new Config();<br/>\n    +config.putAll(defaultTopologyConf);<br/>\n    +<br/>\n    +Cluster cluster = new Cluster(iNimbus, supMap, new HashMap<String, SchedulerAssignmentImpl>(), config);<br/>\n    +ResourceAwareScheduler rs = new ResourceAwareScheduler();<br/>\n    +<br/>\n    +TopologyDetails topology1 = TestUtilsForResourceAwareScheduler.getTopology(\"topology1\", config, 1, 1, 1, 1, 0, 0);<br/>\n    +Map<String, TopologyDetails> topoMap = new HashMap<>();<br/>\n    +topoMap.put(topology1.getId(), topology1);<br/>\n    +Topologies topologies = new Topologies(topoMap);<br/>\n    +<br/>\n    +rs.prepare(config);<br/>\n    +rs.schedule(topologies, cluster);<br/>\n    +<br/>\n    +SchedulerAssignment assignment = cluster.getAssignmentById(topology1.getId());<br/>\n    +Set<WorkerSlot> assignedSlots = assignment.getSlots();<br/>\n    +Set<String> nodesIDs = new HashSet<>();<br/>\n    +for (WorkerSlot slot : assignedSlots) </p>\n{\n    +    nodesIDs.add(slot.getNodeId());\n    +}\n<p>    +Collection<ExecutorDetails> executors = assignment.getExecutors();<br/>\n    +<br/>\n    +Assert.assertEquals(1, assignedSlots.size());<br/>\n    +Assert.assertEquals(1, nodesIDs.size());<br/>\n    +Assert.assertEquals(2, executors.size());<br/>\n    +Assert.assertEquals(\"Running - Fully Scheduled by DefaultResourceAwareStrategy\", cluster.getStatusMap().get(topology1.getId()));<br/>\n    +    }<br/>\n    +<br/>\n    +    @Test<br/>\n    +    public void testTopologyWithMultipleSpouts() {<br/>\n    +INimbus iNimbus = new TestUtilsForResourceAwareScheduler.INimbusTest();<br/>\n    +Map<String, Number> resourceMap = new HashMap<>();<br/>\n    +resourceMap.put(Config.SUPERVISOR_CPU_CAPACITY, 400.0);<br/>\n    +resourceMap.put(Config.SUPERVISOR_MEMORY_CAPACITY_MB, 2000.0);<br/>\n    +Map<String, SupervisorDetails> supMap = TestUtilsForResourceAwareScheduler.genSupervisors(2, 4, resourceMap);<br/>\n    +<br/>\n    +TopologyBuilder builder1 = new TopologyBuilder(); // a topology with multiple spouts<br/>\n    +builder1.setSpout(\"wordSpout1\", new TestWordSpout(), 1);<br/>\n    +builder1.setSpout(\"wordSpout2\", new TestWordSpout(), 1);<br/>\n    +builder1.setBolt(\"wordCountBolt1\", new TestWordCounter(), 1).shuffleGrouping(\"wordSpout1\").shuffleGrouping(\"wordSpout2\");<br/>\n    +builder1.setBolt(\"wordCountBolt2\", new TestWordCounter(), 1).shuffleGrouping(\"wordCountBolt1\");<br/>\n    +builder1.setBolt(\"wordCountBolt3\", new TestWordCounter(), 1).shuffleGrouping(\"wordCountBolt1\");<br/>\n    +builder1.setBolt(\"wordCountBolt4\", new TestWordCounter(), 1).shuffleGrouping(\"wordCountBolt2\");<br/>\n    +builder1.setBolt(\"wordCountBolt5\", new TestWordCounter(), 1).shuffleGrouping(\"wordSpout2\");<br/>\n    +StormTopology stormTopology1 = builder1.createTopology();<br/>\n    +<br/>\n    +Config config = new Config();<br/>\n    +config.putAll(defaultTopologyConf);<br/>\n    +Map<ExecutorDetails, String> executorMap1 = TestUtilsForResourceAwareScheduler.genExecsAndComps(stormTopology1, 1, 1);<br/>\n    +TopologyDetails topology1 = new TopologyDetails(\"topology1\", config, stormTopology1, 0, executorMap1, 0);<br/>\n    +<br/>\n    +TopologyBuilder builder2 = new TopologyBuilder(); // a topology with two unconnected partitions<br/>\n    +builder2.setSpout(\"wordSpoutX\", new TestWordSpout(), 1);<br/>\n    +builder2.setSpout(\"wordSpoutY\", new TestWordSpout(), 1);<br/>\n    +StormTopology stormTopology2 = builder2.createTopology();<br/>\n    +Map<ExecutorDetails, String> executorMap2 = TestUtilsForResourceAwareScheduler.genExecsAndComps(stormTopology2, 1, 0);<br/>\n    +TopologyDetails topology2 = new TopologyDetails(\"topology2\", config, stormTopology2, 0, executorMap2, 0);<br/>\n    +<br/>\n    +Cluster cluster = new Cluster(iNimbus, supMap, new HashMap<String, SchedulerAssignmentImpl>(), config);<br/>\n    +ResourceAwareScheduler rs = new ResourceAwareScheduler();<br/>\n    +<br/>\n    +Map<String, TopologyDetails> topoMap = new HashMap<>();<br/>\n    +topoMap.put(topology1.getId(), topology1);<br/>\n    +topoMap.put(topology2.getId(), topology2);<br/>\n    +Topologies topologies = new Topologies(topoMap);<br/>\n    +<br/>\n    +rs.prepare(config);<br/>\n    +rs.schedule(topologies, cluster);<br/>\n    +<br/>\n    +SchedulerAssignment assignment1 = cluster.getAssignmentById(topology1.getId());<br/>\n    +Set<WorkerSlot> assignedSlots1 = assignment1.getSlots();<br/>\n    +Set<String> nodesIDs1 = new HashSet<>();<br/>\n    +for (WorkerSlot slot : assignedSlots1) </p>\n{\n    +    nodesIDs1.add(slot.getNodeId());\n    +}<br/>\n    +Collection<ExecutorDetails> executors1 = assignment1.getExecutors();<br/>\n    +<br/>\n    +Assert.assertEquals(1, assignedSlots1.size());<br/>\n    +Assert.assertEquals(1, nodesIDs1.size());<br/>\n    +Assert.assertEquals(7, executors1.size());<br/>\n    +Assert.assertEquals(\"Running - Fully Scheduled by DefaultResourceAwareStrategy\", cluster.getStatusMap().get(topology1.getId()));<br/>\n    +<br/>\n    +SchedulerAssignment assignment2 = cluster.getAssignmentById(topology2.getId());<br/>\n    +Set<WorkerSlot> assignedSlots2 = assignment2.getSlots();<br/>\n    +Set<String> nodesIDs2 = new HashSet<>();<br/>\n    +for (WorkerSlot slot : assignedSlots2) {\n    +    nodesIDs2.add(slot.getNodeId());\n    +}<br/>\n    +Collection<ExecutorDetails> executors2 = assignment2.getExecutors();<br/>\n    +<br/>\n    +Assert.assertEquals(1, assignedSlots2.size());<br/>\n    +Assert.assertEquals(1, nodesIDs2.size());<br/>\n    +Assert.assertEquals(2, executors2.size());<br/>\n    +Assert.assertEquals(\"Running - Fully Scheduled by DefaultResourceAwareStrategy\", cluster.getStatusMap().get(topology2.getId()));<br/>\n    +    }<br/>\n    +<br/>\n    +    @Test<br/>\n    +    public void testTopologySetCpuAndMemLoad() {<br/>\n    +INimbus iNimbus = new TestUtilsForResourceAwareScheduler.INimbusTest();<br/>\n    +Map<String, Number> resourceMap = new HashMap<>();<br/>\n    +resourceMap.put(Config.SUPERVISOR_CPU_CAPACITY, 400.0);<br/>\n    +resourceMap.put(Config.SUPERVISOR_MEMORY_CAPACITY_MB, 2000.0);<br/>\n    +Map<String, SupervisorDetails> supMap = TestUtilsForResourceAwareScheduler.genSupervisors(2, 2, resourceMap);<br/>\n    +<br/>\n    +TopologyBuilder builder1 = new TopologyBuilder(); // a topology with multiple spouts<br/>\n    +builder1.setSpout(\"wordSpout\", new TestWordSpout(), 1).setCPULoad(20.0).setMemoryLoad(200.0);<br/>\n    +builder1.setBolt(\"wordCountBolt\", new TestWordCounter(), 1).shuffleGrouping(\"wordSpout\").setCPULoad(20.0).setMemoryLoad(200.0);<br/>\n    +StormTopology stormTopology1 = builder1.createTopology();<br/>\n    +<br/>\n    +Config config = new Config();<br/>\n    +config.putAll(defaultTopologyConf);<br/>\n    +Map<ExecutorDetails, String> executorMap1 = TestUtilsForResourceAwareScheduler.genExecsAndComps(stormTopology1, 1, 1);<br/>\n    +TopologyDetails topology1 = new TopologyDetails(\"topology1\", config, stormTopology1, 0, executorMap1, 0);<br/>\n    +<br/>\n    +Cluster cluster = new Cluster(iNimbus, supMap, new HashMap<String, SchedulerAssignmentImpl>(), config);<br/>\n    +ResourceAwareScheduler rs = new ResourceAwareScheduler();<br/>\n    +Map<String, TopologyDetails> topoMap = new HashMap<>();<br/>\n    +topoMap.put(topology1.getId(), topology1);<br/>\n    +Topologies topologies = new Topologies(topoMap);<br/>\n    +<br/>\n    +rs.prepare(config);<br/>\n    +rs.schedule(topologies, cluster);<br/>\n    +<br/>\n    +SchedulerAssignment assignment1 = cluster.getAssignmentById(topology1.getId());<br/>\n    +Set<WorkerSlot> assignedSlots1 = assignment1.getSlots();<br/>\n    +double assignedMemory = 0.0;<br/>\n    +double assignedCpu = 0.0;<br/>\n    +Set<String> nodesIDs1 = new HashSet<>();<br/>\n    +for (WorkerSlot slot : assignedSlots1) {\n    +    nodesIDs1.add(slot.getNodeId());\n    +    assignedMemory += slot.getAllocatedMemOnHeap() + slot.getAllocatedMemOffHeap();\n    +    assignedCpu += slot.getAllocatedCpu();\n    +\n    +}<br/>\n    +Collection<ExecutorDetails> executors1 = assignment1.getExecutors();<br/>\n    +<br/>\n    +Assert.assertEquals(1, assignedSlots1.size());<br/>\n    +Assert.assertEquals(1, nodesIDs1.size());<br/>\n    +Assert.assertEquals(2, executors1.size());<br/>\n    +Assert.assertEquals(400.0, assignedMemory, 0.001);<br/>\n    +Assert.assertEquals(40.0, assignedCpu, 0.001);<br/>\n    +Assert.assertEquals(\"Running - Fully Scheduled by DefaultResourceAwareStrategy\", cluster.getStatusMap().get(topology1.getId()));<br/>\n    +    }<br/>\n    +<br/>\n    +    @Test<br/>\n    +    public void testResourceLimitation() {<br/>\n    +INimbus iNimbus = new TestUtilsForResourceAwareScheduler.INimbusTest();<br/>\n    +Map<String, Number> resourceMap = new HashMap<>();<br/>\n    +resourceMap.put(Config.SUPERVISOR_CPU_CAPACITY, 400.0);<br/>\n    +resourceMap.put(Config.SUPERVISOR_MEMORY_CAPACITY_MB, 2000.0);<br/>\n    +Map<String, SupervisorDetails> supMap = TestUtilsForResourceAwareScheduler.genSupervisors(2, 2, resourceMap);<br/>\n    +<br/>\n    +TopologyBuilder builder1 = new TopologyBuilder(); // a topology with multiple spouts<br/>\n    +builder1.setSpout(\"wordSpout\", new TestWordSpout(), 2).setCPULoad(250.0).setMemoryLoad(1000.0, 200.0);<br/>\n    +builder1.setBolt(\"wordCountBolt\", new TestWordCounter(), 1).shuffleGrouping(\"wordSpout\").setCPULoad(100.0).setMemoryLoad(500.0, 100.0);<br/>\n    +StormTopology stormTopology1 = builder1.createTopology();<br/>\n    +<br/>\n    +Config config = new Config();<br/>\n    +config.putAll(defaultTopologyConf);<br/>\n    +Map<ExecutorDetails, String> executorMap1 = TestUtilsForResourceAwareScheduler.genExecsAndComps(stormTopology1, 2, 1);<br/>\n    +TopologyDetails topology1 = new TopologyDetails(\"topology1\", config, stormTopology1, 2, executorMap1, 0);<br/>\n    +<br/>\n    +Cluster cluster = new Cluster(iNimbus, supMap, new HashMap<String, SchedulerAssignmentImpl>(), config);<br/>\n    +ResourceAwareScheduler rs = new ResourceAwareScheduler();<br/>\n    +Map<String, TopologyDetails> topoMap = new HashMap<>();<br/>\n    +topoMap.put(topology1.getId(), topology1);<br/>\n    +Topologies topologies = new Topologies(topoMap);<br/>\n    +<br/>\n    +rs.prepare(config);<br/>\n    +rs.schedule(topologies, cluster);<br/>\n    +<br/>\n    +SchedulerAssignment assignment1 = cluster.getAssignmentById(topology1.getId());<br/>\n    +Set<WorkerSlot> assignedSlots1 = assignment1.getSlots();<br/>\n    +Set<String> nodesIDs1 = new HashSet<>();<br/>\n    +for (WorkerSlot slot : assignedSlots1) {    +    nodesIDs1.add(slot.getNodeId());    +}\n<p>    +Collection<ExecutorDetails> executors1 = assignment1.getExecutors();<br/>\n    +List<Double> assignedExecutorMemory = new ArrayList<>();<br/>\n    +List<Double> assignedExecutorCpu = new ArrayList<>();<br/>\n    +for (ExecutorDetails executor : executors1) </p>\n{\n    +    assignedExecutorMemory.add(topology1.getTotalMemReqTask(executor));\n    +    assignedExecutorCpu.add(topology1.getTotalCpuReqTask(executor));\n    +}\n<p>    +Collections.sort(assignedExecutorCpu);<br/>\n    +Collections.sort(assignedExecutorMemory);<br/>\n    +<br/>\n    +Map<ExecutorDetails, SupervisorDetails> executorToSupervisor = new HashMap<>();<br/>\n    +Map<SupervisorDetails, List<ExecutorDetails>> supervisorToExecutors = new HashMap<>();<br/>\n    +Map<Double, Double> cpuAvailableToUsed = new HashMap();<br/>\n    +Map<Double, Double> memoryAvailableToUsed = new HashMap();<br/>\n    +<br/>\n    +for (Map.Entry<ExecutorDetails, WorkerSlot> entry : assignment1.getExecutorToSlot().entrySet()) </p>\n{\n    +    executorToSupervisor.put(entry.getKey(), cluster.getSupervisorById(entry.getValue().getNodeId()));\n    +}\n<p>    +for (Map.Entry<ExecutorDetails, SupervisorDetails> entry : executorToSupervisor.entrySet()) {<br/>\n    +    List<ExecutorDetails> executorsOnSupervisor = supervisorToExecutors.get(entry.getValue());<br/>\n    +    if (executorsOnSupervisor == null) </p>\n{\n    +executorsOnSupervisor = new ArrayList<>();\n    +supervisorToExecutors.put(entry.getValue(), executorsOnSupervisor);\n    +    }\n<p>    +    executorsOnSupervisor.add(entry.getKey());<br/>\n    +}<br/>\n    +for (Map.Entry<SupervisorDetails, List<ExecutorDetails>> entry : supervisorToExecutors.entrySet()) {<br/>\n    +    Double supervisorTotalCpu = entry.getKey().getTotalCPU();<br/>\n    +    Double supervisorTotalMemory = entry.getKey().getTotalMemory();<br/>\n    +    Double supervisorUsedCpu = 0.0;<br/>\n    +    Double supervisorUsedMemory = 0.0;<br/>\n    +    for (ExecutorDetails executor: entry.getValue()) </p>\n{\n    +supervisorUsedMemory += topology1.getTotalCpuReqTask(executor);\n    +supervisorTotalCpu += topology1.getTotalMemReqTask(executor);\n    +    }\n<p>    +    cpuAvailableToUsed.put(supervisorTotalCpu, supervisorUsedCpu);<br/>\n    +    memoryAvailableToUsed.put(supervisorTotalMemory, supervisorUsedMemory);<br/>\n    +}<br/>\n    +// executor0 resides one one worker (on one), executor1 and executor2 on another worker (on the other node)<br/>\n    +Assert.assertEquals(2, assignedSlots1.size());<br/>\n    +Assert.assertEquals(2, nodesIDs1.size());<br/>\n    +Assert.assertEquals(3, executors1.size());<br/>\n    +<br/>\n    +Assert.assertEquals(100.0, assignedExecutorCpu.get(0), 0.001);<br/>\n    +Assert.assertEquals(250.0, assignedExecutorCpu.get(1), 0.001);<br/>\n    +Assert.assertEquals(250.0, assignedExecutorCpu.get(2), 0.001);<br/>\n    +Assert.assertEquals(600.0, assignedExecutorMemory.get(0), 0.001);<br/>\n    +Assert.assertEquals(1200.0, assignedExecutorMemory.get(1), 0.001);<br/>\n    +Assert.assertEquals(1200.0, assignedExecutorMemory.get(2), 0.001);<br/>\n    +<br/>\n    +for (Map.Entry<Double, Double> entry : memoryAvailableToUsed.entrySet()) </p>\n{\n    +    Assert.assertTrue(entry.getKey()- entry.getValue() >= 0);\n    +}<br/>\n    +for (Map.Entry<Double, Double> entry : cpuAvailableToUsed.entrySet()) {    +    Assert.assertTrue(entry.getKey()- entry.getValue() >= 0);    +}\n<p>    +Assert.assertEquals(\"Running - Fully Scheduled by DefaultResourceAwareStrategy\", cluster.getStatusMap().get(topology1.getId()));<br/>\n    +    }<br/>\n    +<br/>\n    +    @Test<br/>\n    +    public void testScheduleResilience() {<br/>\n    +INimbus iNimbus = new TestUtilsForResourceAwareScheduler.INimbusTest();<br/>\n    +Map<String, Number> resourceMap = new HashMap<>();<br/>\n    +resourceMap.put(Config.SUPERVISOR_CPU_CAPACITY, 400.0);<br/>\n    +resourceMap.put(Config.SUPERVISOR_MEMORY_CAPACITY_MB, 2000.0);<br/>\n    +Map<String, SupervisorDetails> supMap = TestUtilsForResourceAwareScheduler.genSupervisors(2, 2, resourceMap);<br/>\n    +<br/>\n    +TopologyBuilder builder1 = new TopologyBuilder();<br/>\n    +builder1.setSpout(\"wordSpout1\", new TestWordSpout(), 3);<br/>\n    +StormTopology stormTopology1 = builder1.createTopology();<br/>\n    +Config config1 = new Config();<br/>\n    +config1.putAll(defaultTopologyConf);<br/>\n    +Map<ExecutorDetails, String> executorMap1 = TestUtilsForResourceAwareScheduler.genExecsAndComps(stormTopology1, 3, 0);<br/>\n    +TopologyDetails topology1 = new TopologyDetails(\"topology1\", config1, stormTopology1, 3, executorMap1, 0);<br/>\n    +<br/>\n    +TopologyBuilder builder2 = new TopologyBuilder();<br/>\n    +builder2.setSpout(\"wordSpout2\", new TestWordSpout(), 2);<br/>\n    +StormTopology stormTopology2 = builder2.createTopology();<br/>\n    +Config config2 = new Config();<br/>\n    +config2.putAll(defaultTopologyConf);<br/>\n    +// memory requirement is large enough so that two executors can not be fully assigned to one node<br/>\n    +config2.put(Config.TOPOLOGY_COMPONENT_RESOURCES_ONHEAP_MEMORY_MB, 1280.0);<br/>\n    +Map<ExecutorDetails, String> executorMap2 = TestUtilsForResourceAwareScheduler.genExecsAndComps(stormTopology1, 2, 0);<br/>\n    +TopologyDetails topology2 = new TopologyDetails(\"topology2\", config2, stormTopology2, 2, executorMap2, 0);<br/>\n    +<br/>\n    +// Test1: When a worker fails, RAS does not alter existing assignments on healthy workers<br/>\n    +Cluster cluster = new Cluster(iNimbus, supMap, new HashMap<String, SchedulerAssignmentImpl>(), config1);<br/>\n    +ResourceAwareScheduler rs = new ResourceAwareScheduler();<br/>\n    +Map<String, TopologyDetails> topoMap = new HashMap<>();<br/>\n    +topoMap.put(topology2.getId(), topology2);<br/>\n    +Topologies topologies = new Topologies(topoMap);<br/>\n    +<br/>\n    +rs.prepare(config1);<br/>\n    +rs.schedule(topologies, cluster);<br/>\n    +<br/>\n    +SchedulerAssignmentImpl assignment = (SchedulerAssignmentImpl)cluster.getAssignmentById(topology2.getId());<br/>\n    +// pick a worker to mock as failed<br/>\n    +WorkerSlot failedWorker = new ArrayList<WorkerSlot>(assignment.getSlots()).get(0);<br/>\n    +Map<ExecutorDetails, WorkerSlot> executorToSlot = assignment.getExecutorToSlot();<br/>\n    +List<ExecutorDetails> failedExecutors = new ArrayList<>();<br/>\n    +for (Map.Entry<ExecutorDetails, WorkerSlot> entry : executorToSlot.entrySet()) {<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    There is a method in SchedulerAssignmentImpl call getSlotToExecutors that you can use</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612659595/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/201568283","html_url":"https://github.com/apache/storm/pull/1131#issuecomment-201568283","issue_url":"https://api.github.com/repos/apache/storm/issues/1131","id":201568283,"node_id":"MDEyOklzc3VlQ29tbWVudDIwMTU2ODI4Mw==","user":{"login":"hmcl","id":10284328,"node_id":"MDQ6VXNlcjEwMjg0MzI4","avatar_url":"https://avatars.githubusercontent.com/u/10284328?v=4","gravatar_id":"","url":"https://api.github.com/users/hmcl","html_url":"https://github.com/hmcl","followers_url":"https://api.github.com/users/hmcl/followers","following_url":"https://api.github.com/users/hmcl/following{/other_user}","gists_url":"https://api.github.com/users/hmcl/gists{/gist_id}","starred_url":"https://api.github.com/users/hmcl/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hmcl/subscriptions","organizations_url":"https://api.github.com/users/hmcl/orgs","repos_url":"https://api.github.com/users/hmcl/repos","events_url":"https://api.github.com/users/hmcl/events{/privacy}","received_events_url":"https://api.github.com/users/hmcl/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-25T22:59:27Z","updated_at":"2016-03-25T22:59:27Z","author_association":"CONTRIBUTOR","body":"@harshach @revans2 @abhishekagarwal87 I believe the current implementation addressed everything that we discussed. Can you please take a look and give some feedback.\n\nThe changes to not keep ConsumerRecords state inside the Spout are in a new commit such that you can compare the two and have the flexibility to merge the initial commit (thoroughly reviewed) first, if one wants to do so.\n\n@abhishekagarwal87 I thought about this thoroughly and my conclusion is that `OutputFields` are are associated with `Streams` and the logic to `build tuples` is associated with `topics`. The current implementation supports multiple topics emitting to the same stream, whereas the previous KafkaSpout didn't. The logic to build tuples is related, but independent from the `OutputFields'. That is because we may declare 10`OutputFields`but yet for particular topic we may wish to build tuples with only one`Field`. My current implementation follows this approach.\n\nThanks!\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/201568283/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/201612733","html_url":"https://github.com/apache/storm/pull/1217#issuecomment-201612733","issue_url":"https://api.github.com/repos/apache/storm/issues/1217","id":201612733,"node_id":"MDEyOklzc3VlQ29tbWVudDIwMTYxMjczMw==","user":{"login":"roshannaik","id":2366541,"node_id":"MDQ6VXNlcjIzNjY1NDE=","avatar_url":"https://avatars.githubusercontent.com/u/2366541?v=4","gravatar_id":"","url":"https://api.github.com/users/roshannaik","html_url":"https://github.com/roshannaik","followers_url":"https://api.github.com/users/roshannaik/followers","following_url":"https://api.github.com/users/roshannaik/following{/other_user}","gists_url":"https://api.github.com/users/roshannaik/gists{/gist_id}","starred_url":"https://api.github.com/users/roshannaik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/roshannaik/subscriptions","organizations_url":"https://api.github.com/users/roshannaik/orgs","repos_url":"https://api.github.com/users/roshannaik/repos","events_url":"https://api.github.com/users/roshannaik/events{/privacy}","received_events_url":"https://api.github.com/users/roshannaik/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-26T00:25:34Z","updated_at":"2016-03-26T00:25:34Z","author_association":"CONTRIBUTOR","body":"@arunmahadevan :-)  the Java mem mgmt and GC do not work like that... it wont be \"eating up 3.2 GB\"\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/201612733/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612885743","html_url":"https://github.com/apache/storm/issues/5467#issuecomment-2612885743","issue_url":"https://api.github.com/repos/apache/storm/issues/5467","id":2612885743,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4ODU3NDM=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-26T00:25:35Z","updated_at":"2025-01-24T16:08:12Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user roshannaik commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1217#issuecomment-201612733\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1217#issuecomment-201612733</a></p>\n\n<p>    @arunmahadevan <img class=\"emoticon\" src=\"https://issues.apache.org/jira/images/icons/emoticons/smile.png\" height=\"16\" width=\"16\" align=\"absmiddle\" alt=\"\" border=\"0\"/>  the Java mem mgmt and GC do not work like that... it wont be \"eating up 3.2 GB\"</p>\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612885743/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612502693","html_url":"https://github.com/apache/storm/issues/4357#issuecomment-2612502693","issue_url":"https://api.github.com/repos/apache/storm/issues/4357","id":2612502693,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1MDI2OTM=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-26T00:39:24Z","updated_at":"2025-01-24T13:13:10Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>GitHub user brymaven opened a pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1262\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1262</a></p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-515\" title=\"Clojure documentation and examples\" class=\"issue-link\" data-issue-key=\"STORM-515\"><del>STORM-515</del></a>: Clojure documentation and examples</p>\n\n<p>    Add some more examples with Clojure, which show using parameters with config and global grouping.<br/>\n    Also add tests for all clojure bolts.</p>\n\n<p>You can merge this pull request into a Git repository by running:</p>\n\n<p>    $ git pull <a href=\"https://github.com/brymaven/storm\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/brymaven/storm</a> <a href=\"https://issues.apache.org/jira/browse/STORM-515\" title=\"Clojure documentation and examples\" class=\"issue-link\" data-issue-key=\"STORM-515\"><del>STORM-515</del></a></p>\n\n<p>Alternatively you can review and apply these changes as the patch at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1262.patch\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1262.patch</a></p>\n\n<p>To close this pull request, make a commit to your master/trunk branch<br/>\nwith (at least) the following in the commit message:</p>\n\n<p>    This closes #1262</p>\n\n<hr />\n<p>commit 8c31e4ddf9012eaf13d76e6c16684037b31fe5ef<br/>\nAuthor: Bryant <brymaven@gmail.com><br/>\nDate:   2016-03-21T00:15:12Z</p>\n\n<p>    Correct typo on example javadoc</p>\n\n<p>commit 843d6904369ab7db584bcef6e9a62e6be2845b7a<br/>\nAuthor: Bryant <brymaven@gmail.com><br/>\nDate:   2016-03-24T20:37:20Z</p>\n\n<p>    Fix indent on clojure testing function</p>\n\n<p>commit 3b7c4a81d7c5111eb6d506bef7cedf9254bf91d0<br/>\nAuthor: Bryant <brymaven@gmail.com><br/>\nDate:   2016-03-24T20:42:45Z</p>\n\n<p>    Add Clojure examples for rolling top words and exclamation</p>\n\n<hr />","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612502693/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/201632410","html_url":"https://github.com/apache/storm/pull/1217#issuecomment-201632410","issue_url":"https://api.github.com/repos/apache/storm/issues/1217","id":201632410,"node_id":"MDEyOklzc3VlQ29tbWVudDIwMTYzMjQxMA==","user":{"login":"roshannaik","id":2366541,"node_id":"MDQ6VXNlcjIzNjY1NDE=","avatar_url":"https://avatars.githubusercontent.com/u/2366541?v=4","gravatar_id":"","url":"https://api.github.com/users/roshannaik","html_url":"https://github.com/roshannaik","followers_url":"https://api.github.com/users/roshannaik/followers","following_url":"https://api.github.com/users/roshannaik/following{/other_user}","gists_url":"https://api.github.com/users/roshannaik/gists{/gist_id}","starred_url":"https://api.github.com/users/roshannaik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/roshannaik/subscriptions","organizations_url":"https://api.github.com/users/roshannaik/orgs","repos_url":"https://api.github.com/users/roshannaik/repos","events_url":"https://api.github.com/users/roshannaik/events{/privacy}","received_events_url":"https://api.github.com/users/roshannaik/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-26T00:59:26Z","updated_at":"2016-03-26T00:59:26Z","author_association":"CONTRIBUTOR","body":"@harshach  my numbers for this rewritten topology were ..\n**EL=1,  Acker=0 :**     641,202 acks/sec,      1,282,413  emits/sec \n**EL=0 , Acker=0 :**   719,399  acks/sec,      1,438,798  emits/sec\n\nApprox 12% improvement over EL=0\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/201632410/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612885747","html_url":"https://github.com/apache/storm/issues/5467#issuecomment-2612885747","issue_url":"https://api.github.com/repos/apache/storm/issues/5467","id":2612885747,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4ODU3NDc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-26T00:59:27Z","updated_at":"2025-01-24T16:08:12Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user roshannaik commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1217#issuecomment-201632410\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1217#issuecomment-201632410</a></p>\n\n<p>    @harshach  my numbers for this rewritten topology were ..<br/>\n    *<b>EL=1,  Acker=0 :</b>*     641,202 acks/sec,      1,282,413  emits/sec <br/>\n    *<b>EL=0 , Acker=0 :</b>*   719,399  acks/sec,      1,438,798  emits/sec</p>\n\n<p>    Approx 12% improvement over EL=0</p>\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612885747/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/201637760","html_url":"https://github.com/apache/storm/pull/1217#issuecomment-201637760","issue_url":"https://api.github.com/repos/apache/storm/issues/1217","id":201637760,"node_id":"MDEyOklzc3VlQ29tbWVudDIwMTYzNzc2MA==","user":{"login":"roshannaik","id":2366541,"node_id":"MDQ6VXNlcjIzNjY1NDE=","avatar_url":"https://avatars.githubusercontent.com/u/2366541?v=4","gravatar_id":"","url":"https://api.github.com/users/roshannaik","html_url":"https://github.com/roshannaik","followers_url":"https://api.github.com/users/roshannaik/followers","following_url":"https://api.github.com/users/roshannaik/following{/other_user}","gists_url":"https://api.github.com/users/roshannaik/gists{/gist_id}","starred_url":"https://api.github.com/users/roshannaik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/roshannaik/subscriptions","organizations_url":"https://api.github.com/users/roshannaik/orgs","repos_url":"https://api.github.com/users/roshannaik/repos","events_url":"https://api.github.com/users/roshannaik/events{/privacy}","received_events_url":"https://api.github.com/users/roshannaik/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-26T01:07:37Z","updated_at":"2016-03-26T01:07:37Z","author_association":"CONTRIBUTOR","body":"@HeartSaVioR the topology is internally overriding some of those values like worker count. You will need to comment it out if you'd like to try varying them from cmd line.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/201637760/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612885757","html_url":"https://github.com/apache/storm/issues/5467#issuecomment-2612885757","issue_url":"https://api.github.com/repos/apache/storm/issues/5467","id":2612885757,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4ODU3NTc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-26T01:07:38Z","updated_at":"2025-01-24T16:08:12Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user roshannaik commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1217#issuecomment-201637760\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1217#issuecomment-201637760</a></p>\n\n<p>    @HeartSaVioR the topology is internally overriding some of those values like worker count. You will need to comment it out if you'd like to try varying them from cmd line.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612885757/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/201686721","html_url":"https://github.com/apache/storm/pull/1252#issuecomment-201686721","issue_url":"https://api.github.com/repos/apache/storm/issues/1252","id":201686721,"node_id":"MDEyOklzc3VlQ29tbWVudDIwMTY4NjcyMQ==","user":{"login":"HeartSaVioR","id":1317309,"node_id":"MDQ6VXNlcjEzMTczMDk=","avatar_url":"https://avatars.githubusercontent.com/u/1317309?v=4","gravatar_id":"","url":"https://api.github.com/users/HeartSaVioR","html_url":"https://github.com/HeartSaVioR","followers_url":"https://api.github.com/users/HeartSaVioR/followers","following_url":"https://api.github.com/users/HeartSaVioR/following{/other_user}","gists_url":"https://api.github.com/users/HeartSaVioR/gists{/gist_id}","starred_url":"https://api.github.com/users/HeartSaVioR/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HeartSaVioR/subscriptions","organizations_url":"https://api.github.com/users/HeartSaVioR/orgs","repos_url":"https://api.github.com/users/HeartSaVioR/repos","events_url":"https://api.github.com/users/HeartSaVioR/events{/privacy}","received_events_url":"https://api.github.com/users/HeartSaVioR/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-26T02:44:40Z","updated_at":"2016-03-26T02:44:40Z","author_association":"CONTRIBUTOR","body":"Already merged. Closing.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/201686721/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612889025","html_url":"https://github.com/apache/storm/issues/5489#issuecomment-2612889025","issue_url":"https://api.github.com/repos/apache/storm/issues/5489","id":2612889025,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4ODkwMjU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-26T02:44:42Z","updated_at":"2025-01-24T16:09:49Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user HeartSaVioR commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1252#issuecomment-201686721\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1252#issuecomment-201686721</a></p>\n\n<p>    Already merged. Closing.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612889025/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612889028","html_url":"https://github.com/apache/storm/issues/5489#issuecomment-2612889028","issue_url":"https://api.github.com/repos/apache/storm/issues/5489","id":2612889028,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4ODkwMjg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-26T02:44:42Z","updated_at":"2025-01-24T16:09:49Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user HeartSaVioR closed the pull request at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1252\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1252</a></p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612889028/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/201689685","html_url":"https://github.com/apache/storm/pull/1217#issuecomment-201689685","issue_url":"https://api.github.com/repos/apache/storm/issues/1217","id":201689685,"node_id":"MDEyOklzc3VlQ29tbWVudDIwMTY4OTY4NQ==","user":{"login":"HeartSaVioR","id":1317309,"node_id":"MDQ6VXNlcjEzMTczMDk=","avatar_url":"https://avatars.githubusercontent.com/u/1317309?v=4","gravatar_id":"","url":"https://api.github.com/users/HeartSaVioR","html_url":"https://github.com/HeartSaVioR","followers_url":"https://api.github.com/users/HeartSaVioR/followers","following_url":"https://api.github.com/users/HeartSaVioR/following{/other_user}","gists_url":"https://api.github.com/users/HeartSaVioR/gists{/gist_id}","starred_url":"https://api.github.com/users/HeartSaVioR/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HeartSaVioR/subscriptions","organizations_url":"https://api.github.com/users/HeartSaVioR/orgs","repos_url":"https://api.github.com/users/HeartSaVioR/repos","events_url":"https://api.github.com/users/HeartSaVioR/events{/privacy}","received_events_url":"https://api.github.com/users/HeartSaVioR/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-26T02:51:50Z","updated_at":"2016-03-26T02:51:50Z","author_association":"CONTRIBUTOR","body":"@roshannaik \nCommand line options override existing configurations.\nhttps://github.com/apache/storm/blob/master/storm-core/src/jvm/org/apache/storm/utils/Utils.java#L452\n\n```\n895  [main] INFO  o.a.s.StormSubmitter - Submitting topology BasicTopology in distributed mode with conf {\"topology.acker.executors\":0,\"storm.zookeeper.topology.auth.scheme\":\"digest\",\"topology.workers\":2,\"topology.debug\":false,\"storm.zookeeper.topology.auth.payload\":\"-6295626850175862189:-8269401123970688630\",\"topology.disruptor.batch.size\":10000,\"topology.eventlogger.executors\":0,\"topology.max.task.parallelism\":1}\n1118 [main] INFO  o.a.s.StormSubmitter - Finished submitting topology: BasicTopology\n```\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/201689685/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612885762","html_url":"https://github.com/apache/storm/issues/5467#issuecomment-2612885762","issue_url":"https://api.github.com/repos/apache/storm/issues/5467","id":2612885762,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4ODU3NjI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-26T02:51:51Z","updated_at":"2025-01-24T16:08:12Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user HeartSaVioR commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1217#issuecomment-201689685\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1217#issuecomment-201689685</a></p>\n\n<p>    @roshannaik <br/>\n    Command line options override existing configurations.<br/>\n    <a href=\"https://github.com/apache/storm/blob/master/storm-core/src/jvm/org/apache/storm/utils/Utils.java#L452\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/blob/master/storm-core/src/jvm/org/apache/storm/utils/Utils.java#L452</a></p>\n\n<p>    ```<br/>\n    895  <span class=\"error\">&#91;main&#93;</span> INFO  o.a.s.StormSubmitter - Submitting topology BasicTopology in distributed mode with conf </p>\n{\"topology.acker.executors\":0,\"storm.zookeeper.topology.auth.scheme\":\"digest\",\"topology.workers\":2,\"topology.debug\":false,\"storm.zookeeper.topology.auth.payload\":\"-6295626850175862189:-8269401123970688630\",\"topology.disruptor.batch.size\":10000,\"topology.eventlogger.executors\":0,\"topology.max.task.parallelism\":1}\n<p>    1118 <span class=\"error\">&#91;main&#93;</span> INFO  o.a.s.StormSubmitter - Finished submitting topology: BasicTopology<br/>\n    ```</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612885762/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/201709299","html_url":"https://github.com/apache/storm/pull/1217#issuecomment-201709299","issue_url":"https://api.github.com/repos/apache/storm/issues/1217","id":201709299,"node_id":"MDEyOklzc3VlQ29tbWVudDIwMTcwOTI5OQ==","user":{"login":"HeartSaVioR","id":1317309,"node_id":"MDQ6VXNlcjEzMTczMDk=","avatar_url":"https://avatars.githubusercontent.com/u/1317309?v=4","gravatar_id":"","url":"https://api.github.com/users/HeartSaVioR","html_url":"https://github.com/HeartSaVioR","followers_url":"https://api.github.com/users/HeartSaVioR/followers","following_url":"https://api.github.com/users/HeartSaVioR/following{/other_user}","gists_url":"https://api.github.com/users/HeartSaVioR/gists{/gist_id}","starred_url":"https://api.github.com/users/HeartSaVioR/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HeartSaVioR/subscriptions","organizations_url":"https://api.github.com/users/HeartSaVioR/orgs","repos_url":"https://api.github.com/users/HeartSaVioR/repos","events_url":"https://api.github.com/users/HeartSaVioR/events{/privacy}","received_events_url":"https://api.github.com/users/HeartSaVioR/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-26T05:48:37Z","updated_at":"2016-03-26T07:06:21Z","author_association":"CONTRIBUTOR","body":"I guess @arunmahadevan removes not only instantiation of Long but also Random.randInt() which makes sense to me.\n\n@roshannaik @arunmahadevan \nBtw, please change your BasicTopology to here,\n- Roshan's: https://gist.github.com/HeartSaVioR/9fd277307d4d5efcd47f\n- Arun's: https://gist.github.com/HeartSaVioR/0e2555633a5f7d12cb68\n\n```\nuptime: 30 duration: 30 secs\nspout emitted: 11197080 (total: 11197080) emitted/sec (in duration): 373236.0\nbolt emitted: 11195560 (total: 11195560) emitted/sec (in duration): 373185.3333333333\nuptime: 60 duration: 30 secs\nspout emitted: 21304500 (total: 32501580) emitted/sec (in duration): 710150.0\nbolt emitted: 21304340 (total: 32499900) emitted/sec (in duration): 710144.6666666666\nuptime: 90 duration: 30 secs\nspout emitted: 24283780 (total: 56785360) emitted/sec (in duration): 809459.3333333334\nbolt emitted: 24283800 (total: 56783700) emitted/sec (in duration): 809460.0\nuptime: 120 duration: 30 secs\nspout emitted: 24474380 (total: 81259740) emitted/sec (in duration): 815812.6666666666\nbolt emitted: 24474320 (total: 81258020) emitted/sec (in duration): 815810.6666666666\nuptime: 150 duration: 30 secs\nspout emitted: 24125940 (total: 105385680) emitted/sec (in duration): 804198.0\nbolt emitted: 24126000 (total: 105384020) emitted/sec (in duration): 804200.0\nuptime: 180 duration: 30 secs\nspout emitted: 23901220 (total: 129286900) emitted/sec (in duration): 796707.3333333334\nbolt emitted: 23901500 (total: 129285520) emitted/sec (in duration): 796716.6666666666\n...\n```\n\nI pasted functionality about printing metrics from cluster information periodically. (It came from FastWordCountTopology, and I modified some.)\nWhy this change is necessary is because we should get rid of numbers before warmup while calculating, and speed is getting increased and metric numbers are changed continuously so when exactly you refreshed UI can change your numbers. (Please note that 10m is changed, too)\n\nYou may want to increase your benchmark period long enough (by modifying loop count in main) to see when its speed becomes stabilized. You may also want to make period as argument.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/201709299/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612885768","html_url":"https://github.com/apache/storm/issues/5467#issuecomment-2612885768","issue_url":"https://api.github.com/repos/apache/storm/issues/5467","id":2612885768,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4ODU3Njg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-26T05:48:38Z","updated_at":"2025-01-24T16:08:12Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user HeartSaVioR commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1217#issuecomment-201709299\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1217#issuecomment-201709299</a></p>\n\n<p>    I guess @arunmahadevan removes not only instantiation of Long but also Random.randInt() which makes sense to me.</p>\n\n<p>    @roshannaik @arunmahadevan <br/>\n    Btw, please change your BasicTopology to here,</p>\n\n<ul class=\"alternate\" type=\"square\">\n\t<li>Roshan's: <a href=\"https://gist.github.com/HeartSaVioR/9fd277307d4d5efcd47f\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://gist.github.com/HeartSaVioR/9fd277307d4d5efcd47f</a></li>\n\t<li>Arun's: <a href=\"https://gist.github.com/HeartSaVioR/0e2555633a5f7d12cb68\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://gist.github.com/HeartSaVioR/0e2555633a5f7d12cb68</a></li>\n</ul>\n\n\n<p>    I pasted functionality about printing metrics from cluster information periodically. (It came from FastWordCountTopology.)<br/>\n    Why this change is necessary is because I saw the behavior that throughput of topology from Roshan isn't be consistent even after 10 mins (it's increasing), so when exactly you refreshed UI can change your numbers. (Please note that 10m is changed, too)</p>\n\n<p>    You may want to increase your benchmark period long enough (by modifying loop count in main) to see when its speed becomes stabilized. You may also want to make period as argument.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612885768/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/201716320","html_url":"https://github.com/apache/storm/pull/1217#issuecomment-201716320","issue_url":"https://api.github.com/repos/apache/storm/issues/1217","id":201716320,"node_id":"MDEyOklzc3VlQ29tbWVudDIwMTcxNjMyMA==","user":{"login":"HeartSaVioR","id":1317309,"node_id":"MDQ6VXNlcjEzMTczMDk=","avatar_url":"https://avatars.githubusercontent.com/u/1317309?v=4","gravatar_id":"","url":"https://api.github.com/users/HeartSaVioR","html_url":"https://github.com/HeartSaVioR","followers_url":"https://api.github.com/users/HeartSaVioR/followers","following_url":"https://api.github.com/users/HeartSaVioR/following{/other_user}","gists_url":"https://api.github.com/users/HeartSaVioR/gists{/gist_id}","starred_url":"https://api.github.com/users/HeartSaVioR/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HeartSaVioR/subscriptions","organizations_url":"https://api.github.com/users/HeartSaVioR/orgs","repos_url":"https://api.github.com/users/HeartSaVioR/repos","events_url":"https://api.github.com/users/HeartSaVioR/events{/privacy}","received_events_url":"https://api.github.com/users/HeartSaVioR/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-26T06:11:56Z","updated_at":"2016-03-26T06:29:51Z","author_association":"CONTRIBUTOR","body":"@arunmahadevan \nPlease post pull request with your patch.\nI forgot your patch and tried to fix myself by changing the way to update debug information via pushing system tuple to each executor. It increases throughput for EL=1, but it also decreases throughput for EL=0 compared to before. \nI'll try to improve my approach if your patch doesn't help much, but according to your number it seems to end up this long conversation.\n\n@roshannaik \nCould you please apply @arunmahadevan patch and do benchmarks again? Thanks in advance!\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/201716320/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612885772","html_url":"https://github.com/apache/storm/issues/5467#issuecomment-2612885772","issue_url":"https://api.github.com/repos/apache/storm/issues/5467","id":2612885772,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4ODU3NzI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-26T06:11:57Z","updated_at":"2025-01-24T16:08:12Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user HeartSaVioR commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1217#issuecomment-201716320\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1217#issuecomment-201716320</a></p>\n\n<p>    @arunmahadevan <br/>\n    Please post pull request with your patch.<br/>\n    I tried to change the way to update debug information from executor by pushing system tuple, and it increases throughput for EL=1, but it also decreases throughput for EL=0 compared to before. <br/>\n    I'll try to improve my approach if your patch doesn't help much, but according to your number it seems to end up this long conversation.</p>\n\n<p>    @roshannaik <br/>\n    Could you please apply @arunmahadevan patch and do benchmarks again? Thanks in advance!</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612885772/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612885185","html_url":"https://github.com/apache/storm/issues/5465#issuecomment-2612885185","issue_url":"https://api.github.com/repos/apache/storm/issues/5465","id":2612885185,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4ODUxODU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-26T06:22:35Z","updated_at":"2025-01-24T16:07:57Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user asfgit closed the pull request at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1248\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1248</a></p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612885185/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/201717957","html_url":"https://github.com/apache/storm/pull/1247#issuecomment-201717957","issue_url":"https://api.github.com/repos/apache/storm/issues/1247","id":201717957,"node_id":"MDEyOklzc3VlQ29tbWVudDIwMTcxNzk1Nw==","user":{"login":"HeartSaVioR","id":1317309,"node_id":"MDQ6VXNlcjEzMTczMDk=","avatar_url":"https://avatars.githubusercontent.com/u/1317309?v=4","gravatar_id":"","url":"https://api.github.com/users/HeartSaVioR","html_url":"https://github.com/HeartSaVioR","followers_url":"https://api.github.com/users/HeartSaVioR/followers","following_url":"https://api.github.com/users/HeartSaVioR/following{/other_user}","gists_url":"https://api.github.com/users/HeartSaVioR/gists{/gist_id}","starred_url":"https://api.github.com/users/HeartSaVioR/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HeartSaVioR/subscriptions","organizations_url":"https://api.github.com/users/HeartSaVioR/orgs","repos_url":"https://api.github.com/users/HeartSaVioR/repos","events_url":"https://api.github.com/users/HeartSaVioR/events{/privacy}","received_events_url":"https://api.github.com/users/HeartSaVioR/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-26T06:24:24Z","updated_at":"2016-03-26T06:24:24Z","author_association":"CONTRIBUTOR","body":"It's just forward port (actually backport, but vote is there) and I got +1 from #1220, too.\nI'll merge this.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/201717957/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612885191","html_url":"https://github.com/apache/storm/issues/5465#issuecomment-2612885191","issue_url":"https://api.github.com/repos/apache/storm/issues/5465","id":2612885191,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4ODUxOTE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-26T06:24:26Z","updated_at":"2025-01-24T16:07:57Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user HeartSaVioR commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1247#issuecomment-201717957\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1247#issuecomment-201717957</a></p>\n\n<p>    It's just forward port (actually backport, but vote is there) and I got +1 from #1220, too.<br/>\n    I'll merge this.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612885191/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612885200","html_url":"https://github.com/apache/storm/issues/5465#issuecomment-2612885200","issue_url":"https://api.github.com/repos/apache/storm/issues/5465","id":2612885200,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4ODUyMDA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-26T06:25:42Z","updated_at":"2025-01-24T16:07:57Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user asfgit closed the pull request at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1247\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1247</a></p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612885200/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612885201","html_url":"https://github.com/apache/storm/issues/5465#issuecomment-2612885201","issue_url":"https://api.github.com/repos/apache/storm/issues/5465","id":2612885201,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4ODUyMDE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-26T06:27:51Z","updated_at":"2025-01-24T16:07:57Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=kabhwan\">kabhwan</a>:</i>\n<p>Merged into master and 1.x-branch.</p>\n\n<p>As <a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=revans2\" class=\"user-hover\" rel=\"revans2\">Robert Joseph Evans</a> is arranging website doc now, I'll wait and update the doc to website, or lend a hand to him.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612885201/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/201879790","html_url":"https://github.com/apache/storm/pull/1072#issuecomment-201879790","issue_url":"https://api.github.com/repos/apache/storm/issues/1072","id":201879790,"node_id":"MDEyOklzc3VlQ29tbWVudDIwMTg3OTc5MA==","user":{"login":"harshach","id":38649,"node_id":"MDQ6VXNlcjM4NjQ5","avatar_url":"https://avatars.githubusercontent.com/u/38649?v=4","gravatar_id":"","url":"https://api.github.com/users/harshach","html_url":"https://github.com/harshach","followers_url":"https://api.github.com/users/harshach/followers","following_url":"https://api.github.com/users/harshach/following{/other_user}","gists_url":"https://api.github.com/users/harshach/gists{/gist_id}","starred_url":"https://api.github.com/users/harshach/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/harshach/subscriptions","organizations_url":"https://api.github.com/users/harshach/orgs","repos_url":"https://api.github.com/users/harshach/repos","events_url":"https://api.github.com/users/harshach/events{/privacy}","received_events_url":"https://api.github.com/users/harshach/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-26T16:18:38Z","updated_at":"2016-03-26T16:18:38Z","author_association":"CONTRIBUTOR","body":"@satishd can you open a PR against 1.x-branch as well.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/201879790/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612526832","html_url":"https://github.com/apache/storm/issues/4517#issuecomment-2612526832","issue_url":"https://api.github.com/repos/apache/storm/issues/4517","id":2612526832,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1MjY4MzI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-26T16:18:40Z","updated_at":"2025-01-24T13:25:33Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user harshach commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1072#issuecomment-201879790\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1072#issuecomment-201879790</a></p>\n\n<p>    @satishd can you open a PR against 1.x-branch as well.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612526832/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/201882512","html_url":"https://github.com/apache/storm/pull/1072#issuecomment-201882512","issue_url":"https://api.github.com/repos/apache/storm/issues/1072","id":201882512,"node_id":"MDEyOklzc3VlQ29tbWVudDIwMTg4MjUxMg==","user":{"login":"harshach","id":38649,"node_id":"MDQ6VXNlcjM4NjQ5","avatar_url":"https://avatars.githubusercontent.com/u/38649?v=4","gravatar_id":"","url":"https://api.github.com/users/harshach","html_url":"https://github.com/harshach","followers_url":"https://api.github.com/users/harshach/followers","following_url":"https://api.github.com/users/harshach/following{/other_user}","gists_url":"https://api.github.com/users/harshach/gists{/gist_id}","starred_url":"https://api.github.com/users/harshach/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/harshach/subscriptions","organizations_url":"https://api.github.com/users/harshach/orgs","repos_url":"https://api.github.com/users/harshach/repos","events_url":"https://api.github.com/users/harshach/events{/privacy}","received_events_url":"https://api.github.com/users/harshach/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-26T16:25:51Z","updated_at":"2016-03-26T16:25:51Z","author_association":"CONTRIBUTOR","body":"@satishd \n\"[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.1:compile (default-compile) on project storm-hbase: Compilation failure: Compilation failure:\n[ERROR] /Users/harsha/code/apache/storm/external/storm-hbase/src/main/java/org/apache/storm/hbase/trident/windowing/HBaseWindowsStore.java:[210,25] unreported exception java.io.IOException; must be caught or declared to be thrown\n[ERROR] /Users/harsha/code/apache/storm/external/storm-hbase/src/main/java/org/apache/storm/hbase/trident/windowing/HBaseWindowsStore.java:[229,25] unreported exception java.io.IOException; must be caught or declared to be thrown\n[ERROR] -> [Help 1]\"\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/201882512/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612526835","html_url":"https://github.com/apache/storm/issues/4517#issuecomment-2612526835","issue_url":"https://api.github.com/repos/apache/storm/issues/4517","id":2612526835,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1MjY4MzU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-26T16:25:53Z","updated_at":"2025-01-24T13:25:33Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user harshach commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1072#issuecomment-201882512\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1072#issuecomment-201882512</a></p>\n\n<p>    @satishd <br/>\n    \"<span class=\"error\">&#91;ERROR&#93;</span> Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.1:compile (default-compile) on project storm-hbase: Compilation failure: Compilation failure:<br/>\n    <span class=\"error\">&#91;ERROR&#93;</span> /Users/harsha/code/apache/storm/external/storm-hbase/src/main/java/org/apache/storm/hbase/trident/windowing/HBaseWindowsStore.java:<span class=\"error\">&#91;210,25&#93;</span> unreported exception java.io.IOException; must be caught or declared to be thrown<br/>\n    <span class=\"error\">&#91;ERROR&#93;</span> /Users/harsha/code/apache/storm/external/storm-hbase/src/main/java/org/apache/storm/hbase/trident/windowing/HBaseWindowsStore.java:<span class=\"error\">&#91;229,25&#93;</span> unreported exception java.io.IOException; must be caught or declared to be thrown<br/>\n    <span class=\"error\">&#91;ERROR&#93;</span> -> <span class=\"error\">&#91;Help 1&#93;</span>\"</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612526835/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/201904903","html_url":"https://github.com/apache/storm/pull/1072#issuecomment-201904903","issue_url":"https://api.github.com/repos/apache/storm/issues/1072","id":201904903,"node_id":"MDEyOklzc3VlQ29tbWVudDIwMTkwNDkwMw==","user":{"login":"satishd","id":2577761,"node_id":"MDQ6VXNlcjI1Nzc3NjE=","avatar_url":"https://avatars.githubusercontent.com/u/2577761?v=4","gravatar_id":"","url":"https://api.github.com/users/satishd","html_url":"https://github.com/satishd","followers_url":"https://api.github.com/users/satishd/followers","following_url":"https://api.github.com/users/satishd/following{/other_user}","gists_url":"https://api.github.com/users/satishd/gists{/gist_id}","starred_url":"https://api.github.com/users/satishd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/satishd/subscriptions","organizations_url":"https://api.github.com/users/satishd/orgs","repos_url":"https://api.github.com/users/satishd/repos","events_url":"https://api.github.com/users/satishd/events{/privacy}","received_events_url":"https://api.github.com/users/satishd/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-26T17:45:48Z","updated_at":"2016-03-26T17:45:48Z","author_association":"MEMBER","body":"@harshach Upmerged and refactored HBase put APIs with recent hbase version upgrade in the master branch.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/201904903/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612526837","html_url":"https://github.com/apache/storm/issues/4517#issuecomment-2612526837","issue_url":"https://api.github.com/repos/apache/storm/issues/4517","id":2612526837,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1MjY4Mzc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-26T17:45:49Z","updated_at":"2025-01-24T13:25:33Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user satishd commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1072#issuecomment-201904903\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1072#issuecomment-201904903</a></p>\n\n<p>    @harshach Upmerged and refactored HBase put APIs with recent hbase version upgrade in the master branch.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612526837/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612526840","html_url":"https://github.com/apache/storm/issues/4517#issuecomment-2612526840","issue_url":"https://api.github.com/repos/apache/storm/issues/4517","id":2612526840,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1MjY4NDA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-27T05:23:26Z","updated_at":"2025-01-24T13:25:33Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>GitHub user satishd opened a pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1263\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1263</a></p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-676\" title=\"Storm Trident support for sliding/tumbling windows\" class=\"issue-link\" data-issue-key=\"STORM-676\"><del>STORM-676</del></a>:  Trident implementation for sliding and tumbling windows for 1.x-branch</p>\n\n<p>    This PR is cherry-picked form master PR <a href=\"https://github.com/apache/storm/pull/1072\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1072</a></p>\n\n<p>You can merge this pull request into a Git repository by running:</p>\n\n<p>    $ git pull <a href=\"https://github.com/satishd/storm\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/satishd/storm</a> <a href=\"https://issues.apache.org/jira/browse/STORM-676\" title=\"Storm Trident support for sliding/tumbling windows\" class=\"issue-link\" data-issue-key=\"STORM-676\"><del>STORM-676</del></a>-1.x</p>\n\n<p>Alternatively you can review and apply these changes as the patch at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1263.patch\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1263.patch</a></p>\n\n<p>To close this pull request, make a commit to your master/trunk branch<br/>\nwith (at least) the following in the commit message:</p>\n\n<p>    This closes #1263</p>\n\n<hr />\n<p>commit 89c03b83e990aa7fbc732caf055e6bd09e2fc479<br/>\nAuthor: Satish Duggana <sduggana@hortonworks.com><br/>\nDate:   2016-03-23T06:50:21Z</p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-676\" title=\"Storm Trident support for sliding/tumbling windows\" class=\"issue-link\" data-issue-key=\"STORM-676\"><del>STORM-676</del></a> Upmerged and resolved conflicts</p>\n\n<p>commit 532bb79b30fdfee04c24d7ed04f63b65c4c44862<br/>\nAuthor: Satish Duggana <sduggana@hortonworks.com><br/>\nDate:   2016-03-13T04:55:21Z</p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-676\" title=\"Storm Trident support for sliding/tumbling windows\" class=\"issue-link\" data-issue-key=\"STORM-676\"><del>STORM-676</del></a> addressed review comments</p>\n\n<p>commit dd02bcfdcfe6f92fef055a933722a7b485c8e613<br/>\nAuthor: Satish Duggana <sduggana@hortonworks.com><br/>\nDate:   2016-03-15T08:48:30Z</p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-676\" title=\"Storm Trident support for sliding/tumbling windows\" class=\"issue-link\" data-issue-key=\"STORM-676\"><del>STORM-676</del></a> Addressed review comments on API aligning with core window API</p>\n\n<p>commit 3a96f20f09b3eaccc59d333a581c3b0c7d345ccc<br/>\nAuthor: Satish Duggana <sduggana@hortonworks.com><br/>\nDate:   2016-03-23T06:05:37Z</p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-676\" title=\"Storm Trident support for sliding/tumbling windows\" class=\"issue-link\" data-issue-key=\"STORM-676\"><del>STORM-676</del></a> Addressed review comments from Arun</p>\n\n<p>commit b08d7eaf7099e4da74010501a189818ec11b00bc<br/>\nAuthor: Satish Duggana <sduggana@hortonworks.com><br/>\nDate:   2016-03-23T13:33:55Z</p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-676\" title=\"Storm Trident support for sliding/tumbling windows\" class=\"issue-link\" data-issue-key=\"STORM-676\"><del>STORM-676</del></a> Addressed review comments</p>\n\n<p>commit 8c263c7c08a3ebd11a1d5df4996b7e12422cd721<br/>\nAuthor: Satish Duggana <sduggana@hortonworks.com><br/>\nDate:   2016-03-23T17:05:08Z</p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-676\" title=\"Storm Trident support for sliding/tumbling windows\" class=\"issue-link\" data-issue-key=\"STORM-676\"><del>STORM-676</del></a> Refactoring of WindowConfig APIs</p>\n\n<hr />","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612526840/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/201992895","html_url":"https://github.com/apache/storm/pull/1072#issuecomment-201992895","issue_url":"https://api.github.com/repos/apache/storm/issues/1072","id":201992895,"node_id":"MDEyOklzc3VlQ29tbWVudDIwMTk5Mjg5NQ==","user":{"login":"satishd","id":2577761,"node_id":"MDQ6VXNlcjI1Nzc3NjE=","avatar_url":"https://avatars.githubusercontent.com/u/2577761?v=4","gravatar_id":"","url":"https://api.github.com/users/satishd","html_url":"https://github.com/satishd","followers_url":"https://api.github.com/users/satishd/followers","following_url":"https://api.github.com/users/satishd/following{/other_user}","gists_url":"https://api.github.com/users/satishd/gists{/gist_id}","starred_url":"https://api.github.com/users/satishd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/satishd/subscriptions","organizations_url":"https://api.github.com/users/satishd/orgs","repos_url":"https://api.github.com/users/satishd/repos","events_url":"https://api.github.com/users/satishd/events{/privacy}","received_events_url":"https://api.github.com/users/satishd/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-27T05:24:09Z","updated_at":"2016-03-27T05:24:21Z","author_association":"MEMBER","body":"@harshach Raised PR https://github.com/apache/storm/pull/1263 on 1.x-branch.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/201992895/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612526844","html_url":"https://github.com/apache/storm/issues/4517#issuecomment-2612526844","issue_url":"https://api.github.com/repos/apache/storm/issues/4517","id":2612526844,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1MjY4NDQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-27T05:24:10Z","updated_at":"2025-01-24T13:25:33Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user satishd commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1072#issuecomment-201992895\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1072#issuecomment-201992895</a></p>\n\n<p>    @harshach Raised <a href=\"https://github.com/apache/storm/pull/1263\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1263</a> on 1.x-branch.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612526844/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612889680","html_url":"https://github.com/apache/storm/issues/5494#issuecomment-2612889680","issue_url":"https://api.github.com/repos/apache/storm/issues/5494","id":2612889680,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4ODk2ODA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-27T07:29:38Z","updated_at":"2025-01-24T16:10:09Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>GitHub user vesense opened a pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1264\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1264</a></p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1659\" title=\"Add documents for external projects\" class=\"issue-link\" data-issue-key=\"STORM-1659\"><del>STORM-1659</del></a>:Add documents for external projects</p>\n\n\n\n<p>You can merge this pull request into a Git repository by running:</p>\n\n<p>    $ git pull <a href=\"https://github.com/vesense/storm\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/vesense/storm</a> <a href=\"https://issues.apache.org/jira/browse/STORM-1659\" title=\"Add documents for external projects\" class=\"issue-link\" data-issue-key=\"STORM-1659\"><del>STORM-1659</del></a>-DOCS</p>\n\n<p>Alternatively you can review and apply these changes as the patch at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1264.patch\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1264.patch</a></p>\n\n<p>To close this pull request, make a commit to your master/trunk branch<br/>\nwith (at least) the following in the commit message:</p>\n\n<p>    This closes #1264</p>\n\n<hr />\n<p>commit 3eb4ef805b3cd4fced6785d4f296cdebbb47ddd8<br/>\nAuthor: wangxin <wangxin@wangxin-pc><br/>\nDate:   2016-03-27T07:33:45Z</p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1659\" title=\"Add documents for external projects\" class=\"issue-link\" data-issue-key=\"STORM-1659\"><del>STORM-1659</del></a>:Add documents for external projects</p>\n\n<hr />","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612889680/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612889689","html_url":"https://github.com/apache/storm/issues/5494#issuecomment-2612889689","issue_url":"https://api.github.com/repos/apache/storm/issues/5494","id":2612889689,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4ODk2ODk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-27T07:56:00Z","updated_at":"2025-01-24T16:10:09Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user vesense closed the pull request at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1264\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1264</a></p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612889689/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612889697","html_url":"https://github.com/apache/storm/issues/5494#issuecomment-2612889697","issue_url":"https://api.github.com/repos/apache/storm/issues/5494","id":2612889697,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4ODk2OTc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-27T08:05:52Z","updated_at":"2025-01-24T16:10:09Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>GitHub user vesense reopened a pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1264\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1264</a></p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1659\" title=\"Add documents for external projects\" class=\"issue-link\" data-issue-key=\"STORM-1659\"><del>STORM-1659</del></a>:Add documents for external projects</p>\n\n\n\n<p>You can merge this pull request into a Git repository by running:</p>\n\n<p>    $ git pull <a href=\"https://github.com/vesense/storm\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/vesense/storm</a> <a href=\"https://issues.apache.org/jira/browse/STORM-1659\" title=\"Add documents for external projects\" class=\"issue-link\" data-issue-key=\"STORM-1659\"><del>STORM-1659</del></a>-DOCS</p>\n\n<p>Alternatively you can review and apply these changes as the patch at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1264.patch\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1264.patch</a></p>\n\n<p>To close this pull request, make a commit to your master/trunk branch<br/>\nwith (at least) the following in the commit message:</p>\n\n<p>    This closes #1264</p>\n\n<hr />\n<p>commit 941d91ba0ef695422a0ad0dbc7d6d9f7626c1703<br/>\nAuthor: Xin Wang <best.wangxin@163.com><br/>\nDate:   2016-03-27T08:04:38Z</p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1659\" title=\"Add documents for external projects\" class=\"issue-link\" data-issue-key=\"STORM-1659\"><del>STORM-1659</del></a>:Add documents for external projects</p>\n\n<p>commit 18f10410dddb5247726d72ec7e21d19d7a469f85<br/>\nAuthor: Xin Wang <best.wangxin@163.com><br/>\nDate:   2016-03-27T08:09:07Z</p>\n\n<p>    minor fix</p>\n\n<hr />","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612889697/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/202014788","html_url":"https://github.com/apache/storm/pull/1264#issuecomment-202014788","issue_url":"https://api.github.com/repos/apache/storm/issues/1264","id":202014788,"node_id":"MDEyOklzc3VlQ29tbWVudDIwMjAxNDc4OA==","user":{"login":"HeartSaVioR","id":1317309,"node_id":"MDQ6VXNlcjEzMTczMDk=","avatar_url":"https://avatars.githubusercontent.com/u/1317309?v=4","gravatar_id":"","url":"https://api.github.com/users/HeartSaVioR","html_url":"https://github.com/HeartSaVioR","followers_url":"https://api.github.com/users/HeartSaVioR/followers","following_url":"https://api.github.com/users/HeartSaVioR/following{/other_user}","gists_url":"https://api.github.com/users/HeartSaVioR/gists{/gist_id}","starred_url":"https://api.github.com/users/HeartSaVioR/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HeartSaVioR/subscriptions","organizations_url":"https://api.github.com/users/HeartSaVioR/orgs","repos_url":"https://api.github.com/users/HeartSaVioR/repos","events_url":"https://api.github.com/users/HeartSaVioR/events{/privacy}","received_events_url":"https://api.github.com/users/HeartSaVioR/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-27T08:19:26Z","updated_at":"2016-03-27T08:19:26Z","author_association":"CONTRIBUTOR","body":"@vesense \n+1. Thanks for finding missed spot!\nCould you craft PR against 1.x-branch, too?\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/202014788/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612889703","html_url":"https://github.com/apache/storm/issues/5494#issuecomment-2612889703","issue_url":"https://api.github.com/repos/apache/storm/issues/5494","id":2612889703,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4ODk3MDM=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-27T08:19:27Z","updated_at":"2025-01-24T16:10:09Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user HeartSaVioR commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1264#issuecomment-202014788\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1264#issuecomment-202014788</a></p>\n\n<p>    @vesense <br/>\n    +1. Thanks for finding missed spot!<br/>\n    Could you craft PR against 1.x-branch, too?</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612889703/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/202014901","html_url":"https://github.com/apache/storm/pull/1264#issuecomment-202014901","issue_url":"https://api.github.com/repos/apache/storm/issues/1264","id":202014901,"node_id":"MDEyOklzc3VlQ29tbWVudDIwMjAxNDkwMQ==","user":{"login":"vesense","id":6711230,"node_id":"MDQ6VXNlcjY3MTEyMzA=","avatar_url":"https://avatars.githubusercontent.com/u/6711230?v=4","gravatar_id":"","url":"https://api.github.com/users/vesense","html_url":"https://github.com/vesense","followers_url":"https://api.github.com/users/vesense/followers","following_url":"https://api.github.com/users/vesense/following{/other_user}","gists_url":"https://api.github.com/users/vesense/gists{/gist_id}","starred_url":"https://api.github.com/users/vesense/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vesense/subscriptions","organizations_url":"https://api.github.com/users/vesense/orgs","repos_url":"https://api.github.com/users/vesense/repos","events_url":"https://api.github.com/users/vesense/events{/privacy}","received_events_url":"https://api.github.com/users/vesense/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-27T08:23:50Z","updated_at":"2016-03-27T08:23:50Z","author_association":"MEMBER","body":"@HeartSaVioR OK\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/202014901/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612889709","html_url":"https://github.com/apache/storm/issues/5494#issuecomment-2612889709","issue_url":"https://api.github.com/repos/apache/storm/issues/5494","id":2612889709,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4ODk3MDk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-27T08:23:51Z","updated_at":"2025-01-24T16:10:09Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user vesense commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1264#issuecomment-202014901\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1264#issuecomment-202014901</a></p>\n\n<p>    @HeartSaVioR OK</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612889709/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612889718","html_url":"https://github.com/apache/storm/issues/5494#issuecomment-2612889718","issue_url":"https://api.github.com/repos/apache/storm/issues/5494","id":2612889718,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4ODk3MTg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-27T08:39:34Z","updated_at":"2025-01-24T16:10:10Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>GitHub user vesense opened a pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1265\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1265</a></p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1659\" title=\"Add documents for external projects\" class=\"issue-link\" data-issue-key=\"STORM-1659\"><del>STORM-1659</del></a>:Add documents for external projects</p>\n\n<p>    for 1.x-branch</p>\n\n<p>You can merge this pull request into a Git repository by running:</p>\n\n<p>    $ git pull <a href=\"https://github.com/vesense/storm\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/vesense/storm</a> <a href=\"https://issues.apache.org/jira/browse/STORM-1659\" title=\"Add documents for external projects\" class=\"issue-link\" data-issue-key=\"STORM-1659\"><del>STORM-1659</del></a>-1.x</p>\n\n<p>Alternatively you can review and apply these changes as the patch at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1265.patch\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1265.patch</a></p>\n\n<p>To close this pull request, make a commit to your master/trunk branch<br/>\nwith (at least) the following in the commit message:</p>\n\n<p>    This closes #1265</p>\n\n<hr />\n<p>commit ad1d732459d3e2bb3f67484f625af1fa589fd94f<br/>\nAuthor: Xin Wang <best.wangxin@163.com><br/>\nDate:   2016-03-27T08:04:38Z</p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1659\" title=\"Add documents for external projects\" class=\"issue-link\" data-issue-key=\"STORM-1659\"><del>STORM-1659</del></a>:Add documents for external projects</p>\n\n<hr />","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612889718/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/202016176","html_url":"https://github.com/apache/storm/pull/1264#issuecomment-202016176","issue_url":"https://api.github.com/repos/apache/storm/issues/1264","id":202016176,"node_id":"MDEyOklzc3VlQ29tbWVudDIwMjAxNjE3Ng==","user":{"login":"vesense","id":6711230,"node_id":"MDQ6VXNlcjY3MTEyMzA=","avatar_url":"https://avatars.githubusercontent.com/u/6711230?v=4","gravatar_id":"","url":"https://api.github.com/users/vesense","html_url":"https://github.com/vesense","followers_url":"https://api.github.com/users/vesense/followers","following_url":"https://api.github.com/users/vesense/following{/other_user}","gists_url":"https://api.github.com/users/vesense/gists{/gist_id}","starred_url":"https://api.github.com/users/vesense/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vesense/subscriptions","organizations_url":"https://api.github.com/users/vesense/orgs","repos_url":"https://api.github.com/users/vesense/repos","events_url":"https://api.github.com/users/vesense/events{/privacy}","received_events_url":"https://api.github.com/users/vesense/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-27T08:45:36Z","updated_at":"2016-03-27T08:45:36Z","author_association":"MEMBER","body":"@HeartSaVioR Done. see https://github.com/apache/storm/pull/1265\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/202016176/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612889722","html_url":"https://github.com/apache/storm/issues/5494#issuecomment-2612889722","issue_url":"https://api.github.com/repos/apache/storm/issues/5494","id":2612889722,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4ODk3MjI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-27T08:45:37Z","updated_at":"2025-01-24T16:10:10Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user vesense commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1264#issuecomment-202016176\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1264#issuecomment-202016176</a></p>\n\n<p>    @HeartSaVioR Done. see <a href=\"https://github.com/apache/storm/pull/1265\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1265</a></p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612889722/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612875859","html_url":"https://github.com/apache/storm/issues/5408#issuecomment-2612875859","issue_url":"https://api.github.com/repos/apache/storm/issues/5408","id":2612875859,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4NzU4NTk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-27T08:52:37Z","updated_at":"2025-01-24T16:03:52Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>GitHub user vesense opened a pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1266\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1266</a></p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1573\" title=\"Add batch support for MongoInsertBolt\" class=\"issue-link\" data-issue-key=\"STORM-1573\"><del>STORM-1573</del></a> (1.x): Add batch support for MongoInsertBolt</p>\n\n\n\n<p>You can merge this pull request into a Git repository by running:</p>\n\n<p>    $ git pull <a href=\"https://github.com/vesense/storm\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/vesense/storm</a> <a href=\"https://issues.apache.org/jira/browse/STORM-1573\" title=\"Add batch support for MongoInsertBolt\" class=\"issue-link\" data-issue-key=\"STORM-1573\"><del>STORM-1573</del></a>-1.x</p>\n\n<p>Alternatively you can review and apply these changes as the patch at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1266.patch\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1266.patch</a></p>\n\n<p>To close this pull request, make a commit to your master/trunk branch<br/>\nwith (at least) the following in the commit message:</p>\n\n<p>    This closes #1266</p>\n\n<hr />\n<p>commit 7927efb7c1f894efcd8159e397ab6cffc60a0ef1<br/>\nAuthor: vesense <best.wangxin@163.com><br/>\nDate:   2016-03-17T12:51:51Z</p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1573\" title=\"Add batch support for MongoInsertBolt\" class=\"issue-link\" data-issue-key=\"STORM-1573\"><del>STORM-1573</del></a>: Add batch support for MongoInsertBolt</p>\n\n<hr />","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612875859/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612889813","html_url":"https://github.com/apache/storm/issues/5495#issuecomment-2612889813","issue_url":"https://api.github.com/repos/apache/storm/issues/5495","id":2612889813,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4ODk4MTM=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-27T09:41:23Z","updated_at":"2025-01-24T16:10:13Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>GitHub user vesense opened a pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1267\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1267</a></p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1660\" title=\"remove flux gitignore file and move rules to top level gitignore\" class=\"issue-link\" data-issue-key=\"STORM-1660\"><del>STORM-1660</del></a>: remove flux gitignore file and move rules to top level gitignore</p>\n\n<p>    refactor gitignore</p>\n\n<p>You can merge this pull request into a Git repository by running:</p>\n\n<p>    $ git pull <a href=\"https://github.com/vesense/storm\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/vesense/storm</a> <a href=\"https://issues.apache.org/jira/browse/STORM-1660\" title=\"remove flux gitignore file and move rules to top level gitignore\" class=\"issue-link\" data-issue-key=\"STORM-1660\"><del>STORM-1660</del></a></p>\n\n<p>Alternatively you can review and apply these changes as the patch at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1267.patch\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1267.patch</a></p>\n\n<p>To close this pull request, make a commit to your master/trunk branch<br/>\nwith (at least) the following in the commit message:</p>\n\n<p>    This closes #1267</p>\n\n<hr />\n<p>commit e58c67aef255ee54f392814f1ac998da7d29ba51<br/>\nAuthor: Xin Wang <best.wangxin@163.com><br/>\nDate:   2016-03-27T09:37:40Z</p>\n\n<p>    refactor gitignore</p>\n\n<hr />","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612889813/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/202041278","html_url":"https://github.com/apache/storm/pull/1265#issuecomment-202041278","issue_url":"https://api.github.com/repos/apache/storm/issues/1265","id":202041278,"node_id":"MDEyOklzc3VlQ29tbWVudDIwMjA0MTI3OA==","user":{"login":"HeartSaVioR","id":1317309,"node_id":"MDQ6VXNlcjEzMTczMDk=","avatar_url":"https://avatars.githubusercontent.com/u/1317309?v=4","gravatar_id":"","url":"https://api.github.com/users/HeartSaVioR","html_url":"https://github.com/HeartSaVioR","followers_url":"https://api.github.com/users/HeartSaVioR/followers","following_url":"https://api.github.com/users/HeartSaVioR/following{/other_user}","gists_url":"https://api.github.com/users/HeartSaVioR/gists{/gist_id}","starred_url":"https://api.github.com/users/HeartSaVioR/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HeartSaVioR/subscriptions","organizations_url":"https://api.github.com/users/HeartSaVioR/orgs","repos_url":"https://api.github.com/users/HeartSaVioR/repos","events_url":"https://api.github.com/users/HeartSaVioR/events{/privacy}","received_events_url":"https://api.github.com/users/HeartSaVioR/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-27T11:17:42Z","updated_at":"2016-03-27T11:17:42Z","author_association":"CONTRIBUTOR","body":"+1\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/202041278/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612889729","html_url":"https://github.com/apache/storm/issues/5494#issuecomment-2612889729","issue_url":"https://api.github.com/repos/apache/storm/issues/5494","id":2612889729,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4ODk3Mjk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-27T11:17:43Z","updated_at":"2025-01-24T16:10:10Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user HeartSaVioR commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1265#issuecomment-202041278\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1265#issuecomment-202041278</a></p>\n\n<p>    +1</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612889729/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612889732","html_url":"https://github.com/apache/storm/issues/5494#issuecomment-2612889732","issue_url":"https://api.github.com/repos/apache/storm/issues/5494","id":2612889732,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4ODk3MzI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-27T11:26:51Z","updated_at":"2025-01-24T16:10:10Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user asfgit closed the pull request at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1264\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1264</a></p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612889732/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612889734","html_url":"https://github.com/apache/storm/issues/5494#issuecomment-2612889734","issue_url":"https://api.github.com/repos/apache/storm/issues/5494","id":2612889734,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4ODk3MzQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-27T11:28:48Z","updated_at":"2025-01-24T16:10:10Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user asfgit closed the pull request at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1265\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1265</a></p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612889734/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612889739","html_url":"https://github.com/apache/storm/issues/5494#issuecomment-2612889739","issue_url":"https://api.github.com/repos/apache/storm/issues/5494","id":2612889739,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4ODk3Mzk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-27T11:30:40Z","updated_at":"2025-01-24T16:10:10Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=kabhwan\">kabhwan</a>:</i>\n<p>Thanks <a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=vesense\" class=\"user-hover\" rel=\"vesense\">Xin Wang</a>, I merged into master and 1.x-branch.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612889739/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/202079469","html_url":"https://github.com/apache/storm/pull/1266#issuecomment-202079469","issue_url":"https://api.github.com/repos/apache/storm/issues/1266","id":202079469,"node_id":"MDEyOklzc3VlQ29tbWVudDIwMjA3OTQ2OQ==","user":{"login":"vesense","id":6711230,"node_id":"MDQ6VXNlcjY3MTEyMzA=","avatar_url":"https://avatars.githubusercontent.com/u/6711230?v=4","gravatar_id":"","url":"https://api.github.com/users/vesense","html_url":"https://github.com/vesense","followers_url":"https://api.github.com/users/vesense/followers","following_url":"https://api.github.com/users/vesense/following{/other_user}","gists_url":"https://api.github.com/users/vesense/gists{/gist_id}","starred_url":"https://api.github.com/users/vesense/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vesense/subscriptions","organizations_url":"https://api.github.com/users/vesense/orgs","repos_url":"https://api.github.com/users/vesense/repos","events_url":"https://api.github.com/users/vesense/events{/privacy}","received_events_url":"https://api.github.com/users/vesense/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-27T14:48:37Z","updated_at":"2016-03-27T14:48:37Z","author_association":"MEMBER","body":"master: https://github.com/apache/storm/pull/1230\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/202079469/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612875863","html_url":"https://github.com/apache/storm/issues/5408#issuecomment-2612875863","issue_url":"https://api.github.com/repos/apache/storm/issues/5408","id":2612875863,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4NzU4NjM=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-27T14:48:41Z","updated_at":"2025-01-24T16:03:52Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user vesense commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1266#issuecomment-202079469\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1266#issuecomment-202079469</a></p>\n\n<p>    master: <a href=\"https://github.com/apache/storm/pull/1230\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1230</a></p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612875863/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/202183403","html_url":"https://github.com/apache/storm/pull/1267#issuecomment-202183403","issue_url":"https://api.github.com/repos/apache/storm/issues/1267","id":202183403,"node_id":"MDEyOklzc3VlQ29tbWVudDIwMjE4MzQwMw==","user":{"login":"vesense","id":6711230,"node_id":"MDQ6VXNlcjY3MTEyMzA=","avatar_url":"https://avatars.githubusercontent.com/u/6711230?v=4","gravatar_id":"","url":"https://api.github.com/users/vesense","html_url":"https://github.com/vesense","followers_url":"https://api.github.com/users/vesense/followers","following_url":"https://api.github.com/users/vesense/following{/other_user}","gists_url":"https://api.github.com/users/vesense/gists{/gist_id}","starred_url":"https://api.github.com/users/vesense/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vesense/subscriptions","organizations_url":"https://api.github.com/users/vesense/orgs","repos_url":"https://api.github.com/users/vesense/repos","events_url":"https://api.github.com/users/vesense/events{/privacy}","received_events_url":"https://api.github.com/users/vesense/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-28T01:24:56Z","updated_at":"2016-03-28T01:24:56Z","author_association":"MEMBER","body":"This PR can be merged to both master and 1.x branch.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/202183403/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612889816","html_url":"https://github.com/apache/storm/issues/5495#issuecomment-2612889816","issue_url":"https://api.github.com/repos/apache/storm/issues/5495","id":2612889816,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4ODk4MTY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-28T01:24:57Z","updated_at":"2025-01-24T16:10:13Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user vesense commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1267#issuecomment-202183403\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1267#issuecomment-202183403</a></p>\n\n<p>    This PR can be merged to both master and 1.x branch.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612889816/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/202233180","html_url":"https://github.com/apache/storm/pull/1267#issuecomment-202233180","issue_url":"https://api.github.com/repos/apache/storm/issues/1267","id":202233180,"node_id":"MDEyOklzc3VlQ29tbWVudDIwMjIzMzE4MA==","user":{"login":"hustfxj","id":7270212,"node_id":"MDQ6VXNlcjcyNzAyMTI=","avatar_url":"https://avatars.githubusercontent.com/u/7270212?v=4","gravatar_id":"","url":"https://api.github.com/users/hustfxj","html_url":"https://github.com/hustfxj","followers_url":"https://api.github.com/users/hustfxj/followers","following_url":"https://api.github.com/users/hustfxj/following{/other_user}","gists_url":"https://api.github.com/users/hustfxj/gists{/gist_id}","starred_url":"https://api.github.com/users/hustfxj/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hustfxj/subscriptions","organizations_url":"https://api.github.com/users/hustfxj/orgs","repos_url":"https://api.github.com/users/hustfxj/repos","events_url":"https://api.github.com/users/hustfxj/events{/privacy}","received_events_url":"https://api.github.com/users/hustfxj/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-28T04:57:59Z","updated_at":"2016-03-28T04:57:59Z","author_association":"CONTRIBUTOR","body":"+1\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/202233180/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612889821","html_url":"https://github.com/apache/storm/issues/5495#issuecomment-2612889821","issue_url":"https://api.github.com/repos/apache/storm/issues/5495","id":2612889821,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4ODk4MjE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-28T04:58:00Z","updated_at":"2025-01-24T16:10:13Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user hustfxj commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1267#issuecomment-202233180\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1267#issuecomment-202233180</a></p>\n\n<p>    +1</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612889821/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612526847","html_url":"https://github.com/apache/storm/issues/4517#issuecomment-2612526847","issue_url":"https://api.github.com/repos/apache/storm/issues/4517","id":2612526847,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1MjY4NDc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-28T05:11:52Z","updated_at":"2025-01-24T13:25:33Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user asfgit closed the pull request at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1072\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1072</a></p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612526847/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612526848","html_url":"https://github.com/apache/storm/issues/4517#issuecomment-2612526848","issue_url":"https://api.github.com/repos/apache/storm/issues/4517","id":2612526848,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1MjY4NDg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-28T06:07:29Z","updated_at":"2025-01-24T13:25:34Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user asfgit closed the pull request at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1263\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1263</a></p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612526848/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/202250432","html_url":"https://github.com/apache/storm/pull/1072#issuecomment-202250432","issue_url":"https://api.github.com/repos/apache/storm/issues/1072","id":202250432,"node_id":"MDEyOklzc3VlQ29tbWVudDIwMjI1MDQzMg==","user":{"login":"harshach","id":38649,"node_id":"MDQ6VXNlcjM4NjQ5","avatar_url":"https://avatars.githubusercontent.com/u/38649?v=4","gravatar_id":"","url":"https://api.github.com/users/harshach","html_url":"https://github.com/harshach","followers_url":"https://api.github.com/users/harshach/followers","following_url":"https://api.github.com/users/harshach/following{/other_user}","gists_url":"https://api.github.com/users/harshach/gists{/gist_id}","starred_url":"https://api.github.com/users/harshach/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/harshach/subscriptions","organizations_url":"https://api.github.com/users/harshach/orgs","repos_url":"https://api.github.com/users/harshach/repos","events_url":"https://api.github.com/users/harshach/events{/privacy}","received_events_url":"https://api.github.com/users/harshach/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-03-28T06:07:52Z","updated_at":"2016-03-28T06:07:52Z","author_association":"CONTRIBUTOR","body":"Great work @satishd . Merged into 1.x and master\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/202250432/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]