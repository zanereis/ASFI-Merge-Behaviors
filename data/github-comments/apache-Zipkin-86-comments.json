[{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/477830263","html_url":"https://github.com/openzipkin/zipkin/issues/2475#issuecomment-477830263","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/2475","id":477830263,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3NzgzMDI2Mw==","user":{"login":"tacigar","id":19551419,"node_id":"MDQ6VXNlcjE5NTUxNDE5","avatar_url":"https://avatars.githubusercontent.com/u/19551419?v=4","gravatar_id":"","url":"https://api.github.com/users/tacigar","html_url":"https://github.com/tacigar","followers_url":"https://api.github.com/users/tacigar/followers","following_url":"https://api.github.com/users/tacigar/following{/other_user}","gists_url":"https://api.github.com/users/tacigar/gists{/gist_id}","starred_url":"https://api.github.com/users/tacigar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tacigar/subscriptions","organizations_url":"https://api.github.com/users/tacigar/orgs","repos_url":"https://api.github.com/users/tacigar/repos","events_url":"https://api.github.com/users/tacigar/events{/privacy}","received_events_url":"https://api.github.com/users/tacigar/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-29T01:27:50Z","updated_at":"2019-03-29T01:27:50Z","author_association":"MEMBER","body":"I'll try to implement it and make a PR.\r\nPlease give me feedback after that 🙇 ","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/477830263/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/477838509","html_url":"https://github.com/openzipkin/zipkin/issues/2475#issuecomment-477838509","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/2475","id":477838509,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3NzgzODUwOQ==","user":{"login":"jcarres-mdsol","id":1803073,"node_id":"MDQ6VXNlcjE4MDMwNzM=","avatar_url":"https://avatars.githubusercontent.com/u/1803073?v=4","gravatar_id":"","url":"https://api.github.com/users/jcarres-mdsol","html_url":"https://github.com/jcarres-mdsol","followers_url":"https://api.github.com/users/jcarres-mdsol/followers","following_url":"https://api.github.com/users/jcarres-mdsol/following{/other_user}","gists_url":"https://api.github.com/users/jcarres-mdsol/gists{/gist_id}","starred_url":"https://api.github.com/users/jcarres-mdsol/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jcarres-mdsol/subscriptions","organizations_url":"https://api.github.com/users/jcarres-mdsol/orgs","repos_url":"https://api.github.com/users/jcarres-mdsol/repos","events_url":"https://api.github.com/users/jcarres-mdsol/events{/privacy}","received_events_url":"https://api.github.com/users/jcarres-mdsol/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-29T02:10:52Z","updated_at":"2019-03-29T02:10:52Z","author_association":"CONTRIBUTOR","body":"I think both are real. Yeah, hand draw FTW","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/477838509/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/477869801","html_url":"https://github.com/openzipkin/zipkin/issues/2475#issuecomment-477869801","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/2475","id":477869801,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3Nzg2OTgwMQ==","user":{"login":"drolando","id":3317638,"node_id":"MDQ6VXNlcjMzMTc2Mzg=","avatar_url":"https://avatars.githubusercontent.com/u/3317638?v=4","gravatar_id":"","url":"https://api.github.com/users/drolando","html_url":"https://github.com/drolando","followers_url":"https://api.github.com/users/drolando/followers","following_url":"https://api.github.com/users/drolando/following{/other_user}","gists_url":"https://api.github.com/users/drolando/gists{/gist_id}","starred_url":"https://api.github.com/users/drolando/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/drolando/subscriptions","organizations_url":"https://api.github.com/users/drolando/orgs","repos_url":"https://api.github.com/users/drolando/repos","events_url":"https://api.github.com/users/drolando/events{/privacy}","received_events_url":"https://api.github.com/users/drolando/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-29T05:11:15Z","updated_at":"2019-03-29T05:11:15Z","author_association":"CONTRIBUTOR","body":"@tacigar do you want to completely remove the left sidebar?","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/477869801/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/477870708","html_url":"https://github.com/openzipkin/zipkin/issues/2475#issuecomment-477870708","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/2475","id":477870708,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3Nzg3MDcwOA==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-29T05:16:24Z","updated_at":"2019-03-29T05:16:24Z","author_association":"MEMBER","body":"> do you want to completely remove the left sidebar?\r\n\r\ninteresting.. I kindof like the idea","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/477870708/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/477870724","html_url":"https://github.com/openzipkin/zipkin/issues/2475#issuecomment-477870724","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/2475","id":477870724,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3Nzg3MDcyNA==","user":{"login":"drolando","id":3317638,"node_id":"MDQ6VXNlcjMzMTc2Mzg=","avatar_url":"https://avatars.githubusercontent.com/u/3317638?v=4","gravatar_id":"","url":"https://api.github.com/users/drolando","html_url":"https://github.com/drolando","followers_url":"https://api.github.com/users/drolando/followers","following_url":"https://api.github.com/users/drolando/following{/other_user}","gists_url":"https://api.github.com/users/drolando/gists{/gist_id}","starred_url":"https://api.github.com/users/drolando/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/drolando/subscriptions","organizations_url":"https://api.github.com/users/drolando/orgs","repos_url":"https://api.github.com/users/drolando/repos","events_url":"https://api.github.com/users/drolando/events{/privacy}","received_events_url":"https://api.github.com/users/drolando/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-29T05:16:31Z","updated_at":"2019-03-29T05:16:31Z","author_association":"CONTRIBUTOR","body":"I'm +1 on moving the search button out of the search box and maybe having it a bit bigger than now so that's it's more obvious.\r\n\r\nI don't have any particular opinion on the dependency button as I don't use it. However we'd now have a pretty empty left sidebar. Maybe make it more narrow if we don't need to have any text there anymore and only icons?\r\n\r\nWhat about that `?` button? What would it show?\r\n\r\nAgreed that the new icons already look great! :D","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/477870724/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/477902645","html_url":"https://github.com/openzipkin/zipkin/issues/2475#issuecomment-477902645","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/2475","id":477902645,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3NzkwMjY0NQ==","user":{"login":"tacigar","id":19551419,"node_id":"MDQ6VXNlcjE5NTUxNDE5","avatar_url":"https://avatars.githubusercontent.com/u/19551419?v=4","gravatar_id":"","url":"https://api.github.com/users/tacigar","html_url":"https://github.com/tacigar","followers_url":"https://api.github.com/users/tacigar/followers","following_url":"https://api.github.com/users/tacigar/following{/other_user}","gists_url":"https://api.github.com/users/tacigar/gists{/gist_id}","starred_url":"https://api.github.com/users/tacigar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tacigar/subscriptions","organizations_url":"https://api.github.com/users/tacigar/orgs","repos_url":"https://api.github.com/users/tacigar/repos","events_url":"https://api.github.com/users/tacigar/events{/privacy}","received_events_url":"https://api.github.com/users/tacigar/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-29T07:50:53Z","updated_at":"2019-03-29T07:50:53Z","author_association":"MEMBER","body":"> do you want to completely remove the left sidebar?\r\n\r\nGreat idea!\r\nI'll remove the left sidebar👍 \r\nand I move the rest icons of the left sidebar to the footer.\r\n\r\n> What about that ? button? What would it show?\r\n\r\nSorry, I forgot to explain that.\r\nBecause the screen will become a bit more complex, I want to add tooltip.\r\n`?` button shows that.\r\n","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/477902645/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/478008066","html_url":"https://github.com/openzipkin/zipkin/issues/2477#issuecomment-478008066","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/2477","id":478008066,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3ODAwODA2Ng==","user":{"login":"devinsba","id":139938,"node_id":"MDQ6VXNlcjEzOTkzOA==","avatar_url":"https://avatars.githubusercontent.com/u/139938?v=4","gravatar_id":"","url":"https://api.github.com/users/devinsba","html_url":"https://github.com/devinsba","followers_url":"https://api.github.com/users/devinsba/followers","following_url":"https://api.github.com/users/devinsba/following{/other_user}","gists_url":"https://api.github.com/users/devinsba/gists{/gist_id}","starred_url":"https://api.github.com/users/devinsba/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/devinsba/subscriptions","organizations_url":"https://api.github.com/users/devinsba/orgs","repos_url":"https://api.github.com/users/devinsba/repos","events_url":"https://api.github.com/users/devinsba/events{/privacy}","received_events_url":"https://api.github.com/users/devinsba/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-29T14:00:55Z","updated_at":"2019-03-29T14:01:14Z","author_association":"MEMBER","body":"Agreed, makes sense to make the field that is sorted by (by default) be the one that is read first left-to-right","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/478008066/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/478107389","html_url":"https://github.com/openzipkin/zipkin/issues/2478#issuecomment-478107389","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/2478","id":478107389,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3ODEwNzM4OQ==","user":{"login":"devinsba","id":139938,"node_id":"MDQ6VXNlcjEzOTkzOA==","avatar_url":"https://avatars.githubusercontent.com/u/139938?v=4","gravatar_id":"","url":"https://api.github.com/users/devinsba","html_url":"https://github.com/devinsba","followers_url":"https://api.github.com/users/devinsba/followers","following_url":"https://api.github.com/users/devinsba/following{/other_user}","gists_url":"https://api.github.com/users/devinsba/gists{/gist_id}","starred_url":"https://api.github.com/users/devinsba/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/devinsba/subscriptions","organizations_url":"https://api.github.com/users/devinsba/orgs","repos_url":"https://api.github.com/users/devinsba/repos","events_url":"https://api.github.com/users/devinsba/events{/privacy}","received_events_url":"https://api.github.com/users/devinsba/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-29T18:40:55Z","updated_at":"2019-03-29T18:40:55Z","author_association":"MEMBER","body":"A couple things:\r\n\r\n1. Is there a reason you can't run the server that we release as an executable jar and docker container? Our release includes kafka support built in https://github.com/openzipkin/zipkin/tree/master/zipkin-server#zipkin-server\r\n2. `@EnableZipkinServer` is deprecated and our small community is not able to provide support for building custom servers\r\n\r\nIf after trying our server releases you still have problems please reach out to us in our support room: https://gitter.im/openzipkin/zipkin or on our users mailing list: users@zipkin.incubator.apache.org ","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/478107389/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/478113280","html_url":"https://github.com/openzipkin/zipkin/issues/2478#issuecomment-478113280","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/2478","id":478113280,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3ODExMzI4MA==","user":{"login":"aniketvsawant","id":3583504,"node_id":"MDQ6VXNlcjM1ODM1MDQ=","avatar_url":"https://avatars.githubusercontent.com/u/3583504?v=4","gravatar_id":"","url":"https://api.github.com/users/aniketvsawant","html_url":"https://github.com/aniketvsawant","followers_url":"https://api.github.com/users/aniketvsawant/followers","following_url":"https://api.github.com/users/aniketvsawant/following{/other_user}","gists_url":"https://api.github.com/users/aniketvsawant/gists{/gist_id}","starred_url":"https://api.github.com/users/aniketvsawant/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/aniketvsawant/subscriptions","organizations_url":"https://api.github.com/users/aniketvsawant/orgs","repos_url":"https://api.github.com/users/aniketvsawant/repos","events_url":"https://api.github.com/users/aniketvsawant/events{/privacy}","received_events_url":"https://api.github.com/users/aniketvsawant/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-29T18:59:52Z","updated_at":"2019-03-29T18:59:52Z","author_association":"NONE","body":"@devinsba Even i tried with zipkin kafka collector but still having same issue. I am running zipkin server as a spring boot fatjar.\r\n\r\nFYI : Same thing is working over Web transport. But stopped working when changed to Kafka.\r\n\r\ndependencies\r\n```\r\n  compile \"io.zipkin.java:zipkin-server:2.12.5\"\r\n  compile \"io.zipkin.java:zipkin-autoconfigure-ui:2.12.6\"\r\n  compile \"io.zipkin.java:zipkin-autoconfigure-collector-kafka:2.12.6\"\r\n```\r\n\r\napplication.properties\r\n```\r\nzipkin:\r\n  collector:\r\n    kafka:\r\n      bootstrap-servers: localhost:9092\r\n      topic: zipkin\r\n      group-id: zipkin\r\n      streams: 1\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/478113280/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/478116773","html_url":"https://github.com/openzipkin/zipkin/issues/2478#issuecomment-478116773","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/2478","id":478116773,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3ODExNjc3Mw==","user":{"login":"devinsba","id":139938,"node_id":"MDQ6VXNlcjEzOTkzOA==","avatar_url":"https://avatars.githubusercontent.com/u/139938?v=4","gravatar_id":"","url":"https://api.github.com/users/devinsba","html_url":"https://github.com/devinsba","followers_url":"https://api.github.com/users/devinsba/followers","following_url":"https://api.github.com/users/devinsba/following{/other_user}","gists_url":"https://api.github.com/users/devinsba/gists{/gist_id}","starred_url":"https://api.github.com/users/devinsba/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/devinsba/subscriptions","organizations_url":"https://api.github.com/users/devinsba/orgs","repos_url":"https://api.github.com/users/devinsba/repos","events_url":"https://api.github.com/users/devinsba/events{/privacy}","received_events_url":"https://api.github.com/users/devinsba/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-29T19:11:18Z","updated_at":"2019-03-29T19:11:18Z","author_association":"MEMBER","body":"Again, we can't support custom servers. Please try with the default server before trying to build anything custom","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/478116773/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/478116995","html_url":"https://github.com/openzipkin/zipkin/issues/2478#issuecomment-478116995","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/2478","id":478116995,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3ODExNjk5NQ==","user":{"login":"aniketvsawant","id":3583504,"node_id":"MDQ6VXNlcjM1ODM1MDQ=","avatar_url":"https://avatars.githubusercontent.com/u/3583504?v=4","gravatar_id":"","url":"https://api.github.com/users/aniketvsawant","html_url":"https://github.com/aniketvsawant","followers_url":"https://api.github.com/users/aniketvsawant/followers","following_url":"https://api.github.com/users/aniketvsawant/following{/other_user}","gists_url":"https://api.github.com/users/aniketvsawant/gists{/gist_id}","starred_url":"https://api.github.com/users/aniketvsawant/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/aniketvsawant/subscriptions","organizations_url":"https://api.github.com/users/aniketvsawant/orgs","repos_url":"https://api.github.com/users/aniketvsawant/repos","events_url":"https://api.github.com/users/aniketvsawant/events{/privacy}","received_events_url":"https://api.github.com/users/aniketvsawant/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-29T19:12:07Z","updated_at":"2019-03-29T19:12:07Z","author_association":"NONE","body":"@devinsba Sure. Thanks.","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/478116995/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/478177471","html_url":"https://github.com/openzipkin/zipkin/issues/2471#issuecomment-478177471","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/2471","id":478177471,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3ODE3NzQ3MQ==","user":{"login":"jeqo","id":6180701,"node_id":"MDQ6VXNlcjYxODA3MDE=","avatar_url":"https://avatars.githubusercontent.com/u/6180701?v=4","gravatar_id":"","url":"https://api.github.com/users/jeqo","html_url":"https://github.com/jeqo","followers_url":"https://api.github.com/users/jeqo/followers","following_url":"https://api.github.com/users/jeqo/following{/other_user}","gists_url":"https://api.github.com/users/jeqo/gists{/gist_id}","starred_url":"https://api.github.com/users/jeqo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jeqo/subscriptions","organizations_url":"https://api.github.com/users/jeqo/orgs","repos_url":"https://api.github.com/users/jeqo/repos","events_url":"https://api.github.com/users/jeqo/events{/privacy}","received_events_url":"https://api.github.com/users/jeqo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-29T23:18:57Z","updated_at":"2019-03-29T23:18:57Z","author_association":"MEMBER","body":"@zackzhangzz this looks similar to https://stackoverflow.com/a/45757197 could you give a try and check if it solves your issue? ","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/478177471/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/478304547","html_url":"https://github.com/openzipkin/zipkin/pull/2476#issuecomment-478304547","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/2476","id":478304547,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3ODMwNDU0Nw==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-31T01:53:06Z","updated_at":"2019-03-31T01:53:06Z","author_association":"MEMBER","body":"I'm not sure if this was an accident? Did you mean to raise this as a pull request?","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/478304547/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/478309334","html_url":"https://github.com/openzipkin/zipkin/pull/2479#issuecomment-478309334","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/2479","id":478309334,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3ODMwOTMzNA==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-31T03:42:30Z","updated_at":"2019-03-31T03:42:30Z","author_association":"MEMBER","body":"See https://github.com/openzipkin/zipkin/issues/2467 as this version of armeria support TLS setup. Note: we need a actual test case to imply this works.","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/478309334/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/478316763","html_url":"https://github.com/openzipkin/zipkin/issues/2461#issuecomment-478316763","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/2461","id":478316763,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3ODMxNjc2Mw==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-31T06:47:50Z","updated_at":"2019-03-31T06:47:50Z","author_association":"MEMBER","body":"I asked @trustin about it\r\n\r\n> Armeria is HTTP only, so it cannot replace non-HTTP Thrift servers.\r\n`ThriftCallService` is a `Service<RpcRequest, RpcResponse>` which must be wrapped by a `Service<HttpRequest, HttpResponse>`. `THttpService` implements `Service<HttpRequest, HttpResponse>` and works as an adaptation layer to call `Service<RpcRequest, RpcResponse>`.\r\nIt is not entirely impossible though. We will have to implement some networking related stuff and emulate an HTTP request.\r\n\r\nIt seems either this would happen or we'd have to consider using apache thrift directly again (we didn't  last time as its network stack wasn't on par with swift's). I don't think we can forever depend on a dead library, though.. facebook swift was last updated in october of 2016.","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/478316763/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/478347770","html_url":"https://github.com/openzipkin/zipkin/issues/2467#issuecomment-478347770","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/2467","id":478347770,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3ODM0Nzc3MA==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-03-31T14:40:25Z","updated_at":"2019-03-31T14:40:25Z","author_association":"MEMBER","body":"what's going out as 2.12.7 can configure SSL. just added a test case to prove it https://github.com/openzipkin/zipkin/pull/2480\r\n\r\nbasic auth can definitely be done, and authenticating POST via spring-security managed credentials is likely not a big deal. I will make an example once release goes through\r\n\r\nHowever, full-bore spring-security authorization is beyond the scope of what we'd do in this repo. I'd recommend anyone interested to raise an issue for armeria if they desire that level after seeing the basic example.\r\n\r\nI'll leave this issue open until there's a code example of how to self-support basic auth on the POST endpoint.","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/478347770/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/478428905","html_url":"https://github.com/openzipkin/zipkin/issues/2471#issuecomment-478428905","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/2471","id":478428905,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3ODQyODkwNQ==","user":{"login":"zackzhangzz","id":12493936,"node_id":"MDQ6VXNlcjEyNDkzOTM2","avatar_url":"https://avatars.githubusercontent.com/u/12493936?v=4","gravatar_id":"","url":"https://api.github.com/users/zackzhangzz","html_url":"https://github.com/zackzhangzz","followers_url":"https://api.github.com/users/zackzhangzz/followers","following_url":"https://api.github.com/users/zackzhangzz/following{/other_user}","gists_url":"https://api.github.com/users/zackzhangzz/gists{/gist_id}","starred_url":"https://api.github.com/users/zackzhangzz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zackzhangzz/subscriptions","organizations_url":"https://api.github.com/users/zackzhangzz/orgs","repos_url":"https://api.github.com/users/zackzhangzz/repos","events_url":"https://api.github.com/users/zackzhangzz/events{/privacy}","received_events_url":"https://api.github.com/users/zackzhangzz/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-01T04:11:22Z","updated_at":"2019-04-01T04:11:22Z","author_association":"NONE","body":"java -Dzipkin.collector.kafka.overrides.sasl.mechanism=PLAIN -Dzipkin.collector.kafka.overrides.security.protocol=SASL_PLAINTEXT -Dzipkin.collector.kafka.overrides.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule\\ required\\ username=\"test\"\\ password=\"test\"  -jar zipkin.jar  --KAFKA_BOOTSTRAP_SERVERS=ip:port\r\n\r\n\r\n2019-04-01 12:09:47.117  WARN 1721 --- [pool-2-thread-1] z.c.k.KafkaCollectorWorker               : Unexpected error in polling loop spans\r\n\r\norg.apache.kafka.common.KafkaException: Failed to construct kafka consumer\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.<init>(KafkaConsumer.java:799) ~[kafka-clients-2.0.1.jar!/:?]\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.<init>(KafkaConsumer.java:650) ~[kafka-clients-2.0.1.jar!/:?]\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.<init>(KafkaConsumer.java:630) ~[kafka-clients-2.0.1.jar!/:?]\r\n\tat zipkin2.collector.kafka.KafkaCollectorWorker.run(KafkaCollectorWorker.java:66) ~[zipkin-collector-kafka-2.12.2.jar!/:?]\r\n\tat zipkin2.collector.kafka.KafkaCollector$LazyKafkaWorkers.lambda$guardFailures$0(KafkaCollector.java:252) ~[zipkin-collector-kafka-2.12.2.jar!/:?]\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_161]\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_161]\r\n\tat java.lang.Thread.run(Thread.java:748) [?:1.8.0_161]\r\nCaused by: java.lang.IllegalArgumentException: JAAS config entry not terminated by semi-colon\r\n\tat org.apache.kafka.common.security.JaasConfig.parseAppConfigurationEntry(JaasConfig.java:121) ~[kafka-clients-2.0.1.jar!/:?]\r\n\tat org.apache.kafka.common.security.JaasConfig.<init>(JaasConfig.java:63) ~[kafka-clients-2.0.1.jar!/:?]\r\n\tat org.apache.kafka.common.security.JaasContext.load(JaasContext.java:90) ~[kafka-clients-2.0.1.jar!/:?]\r\n\tat org.apache.kafka.common.security.JaasContext.loadClientContext(JaasContext.java:84) ~[kafka-clients-2.0.1.jar!/:?]\r\n\tat org.apache.kafka.common.network.ChannelBuilders.create(ChannelBuilders.java:119) ~[kafka-clients-2.0.1.jar!/:?]\r\n\tat org.apache.kafka.common.network.ChannelBuilders.clientChannelBuilder(ChannelBuilders.java:65) ~[kafka-clients-2.0.1.jar!/:?]\r\n\tat org.apache.kafka.clients.ClientUtils.createChannelBuilder(ClientUtils.java:88) ~[kafka-clients-2.0.1.jar!/:?]\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.<init>(KafkaConsumer.java:713) ~[kafka-clients-2.0.1.jar!/:?]\r\n\t... 7 more\r\n\r\n2019-04-01 12:09:47.124  INFO 1721 --- [pool-2-thread-1] z.c.k.KafkaCollectorWorker               : Kafka consumer polling loop stopped.\r\n2019-04-01 12:09:47.124  INFO 1721 --- [pool-2-thread-1] z.c.k.KafkaCollectorWorker               : Closing Kafka consumer...\r\n2019-04-01 12:09:47.124  INFO 1721 --- [pool-2-thread-1] z.c.k.KafkaCollectorWorker               : Kafka consumer closed.\r\n2019-04-01 12:09:47.124 ERROR 1721 --- [pool-2-thread-1] z.c.k.KafkaCollector                     : Kafka worker exited with exception\r\n\r\norg.apache.kafka.common.KafkaException: Failed to construct kafka consumer\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.<init>(KafkaConsumer.java:799) ~[kafka-clients-2.0.1.jar!/:?]\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.<init>(KafkaConsumer.java:650) ~[kafka-clients-2.0.1.jar!/:?]\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.<init>(KafkaConsumer.java:630) ~[kafka-clients-2.0.1.jar!/:?]\r\n\tat zipkin2.collector.kafka.KafkaCollectorWorker.run(KafkaCollectorWorker.java:66) ~[zipkin-collector-kafka-2.12.2.jar!/:?]\r\n\tat zipkin2.collector.kafka.KafkaCollector$LazyKafkaWorkers.lambda$guardFailures$0(KafkaCollector.java:252) ~[zipkin-collector-kafka-2.12.2.jar!/:?]\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_161]\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_161]\r\n\tat java.lang.Thread.run(Thread.java:748) [?:1.8.0_161]\r\nCaused by: java.lang.IllegalArgumentException: JAAS config entry not terminated by semi-colon\r\n\tat org.apache.kafka.common.security.JaasConfig.parseAppConfigurationEntry(JaasConfig.java:121) ~[kafka-clients-2.0.1.jar!/:?]\r\n\tat org.apache.kafka.common.security.JaasConfig.<init>(JaasConfig.java:63) ~[kafka-clients-2.0.1.jar!/:?]\r\n\tat org.apache.kafka.common.security.JaasContext.load(JaasContext.java:90) ~[kafka-clients-2.0.1.jar!/:?]\r\n\tat org.apache.kafka.common.security.JaasContext.loadClientContext(JaasContext.java:84) ~[kafka-clients-2.0.1.jar!/:?]\r\n\tat org.apache.kafka.common.network.ChannelBuilders.create(ChannelBuilders.java:119) ~[kafka-clients-2.0.1.jar!/:?]\r\n\tat org.apache.kafka.common.network.ChannelBuilders.clientChannelBuilder(ChannelBuilders.java:65) ~[kafka-clients-2.0.1.jar!/:?]\r\n\tat org.apache.kafka.clients.ClientUtils.createChannelBuilder(ClientUtils.java:88) ~[kafka-clients-2.0.1.jar!/:?]\r\n\tat org.apache.kafka.clients.consumer.KafkaConsumer.<init>(KafkaConsumer.java:713) ~[kafka-clients-2.0.1.jar!/:?]\r\n","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/478428905/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/478429492","html_url":"https://github.com/openzipkin/zipkin/issues/2471#issuecomment-478429492","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/2471","id":478429492,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3ODQyOTQ5Mg==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-01T04:15:35Z","updated_at":"2019-04-01T04:15:35Z","author_association":"MEMBER","body":"it seems possible that using a spring properties file for more awkward values could br better. sorry I cannot hunt the how to link right now but it shouldn't be hard to find","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/478429492/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/478462398","html_url":"https://github.com/openzipkin/zipkin/issues/2471#issuecomment-478462398","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/2471","id":478462398,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3ODQ2MjM5OA==","user":{"login":"zackzhangzz","id":12493936,"node_id":"MDQ6VXNlcjEyNDkzOTM2","avatar_url":"https://avatars.githubusercontent.com/u/12493936?v=4","gravatar_id":"","url":"https://api.github.com/users/zackzhangzz","html_url":"https://github.com/zackzhangzz","followers_url":"https://api.github.com/users/zackzhangzz/followers","following_url":"https://api.github.com/users/zackzhangzz/following{/other_user}","gists_url":"https://api.github.com/users/zackzhangzz/gists{/gist_id}","starred_url":"https://api.github.com/users/zackzhangzz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zackzhangzz/subscriptions","organizations_url":"https://api.github.com/users/zackzhangzz/orgs","repos_url":"https://api.github.com/users/zackzhangzz/repos","events_url":"https://api.github.com/users/zackzhangzz/events{/privacy}","received_events_url":"https://api.github.com/users/zackzhangzz/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-01T07:11:15Z","updated_at":"2019-04-01T07:11:15Z","author_association":"NONE","body":"Do you mean like this?\r\n\r\napplication.properties:\r\nspring.kafka.bootstrap-servers=ip:port\r\nspring.kafka.properties.security.protocol=SASL_PLAINTEXT\r\nspring.kafka.properties.sasl.mechanism=PLAIN\r\nspring.kafka.properties.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username=\"\" password=\"\";\r\n\r\nWill zipkin auto load   application.properties?","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/478462398/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/478465754","html_url":"https://github.com/openzipkin/zipkin/issues/2471#issuecomment-478465754","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/2471","id":478465754,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3ODQ2NTc1NA==","user":{"login":"zackzhangzz","id":12493936,"node_id":"MDQ6VXNlcjEyNDkzOTM2","avatar_url":"https://avatars.githubusercontent.com/u/12493936?v=4","gravatar_id":"","url":"https://api.github.com/users/zackzhangzz","html_url":"https://github.com/zackzhangzz","followers_url":"https://api.github.com/users/zackzhangzz/followers","following_url":"https://api.github.com/users/zackzhangzz/following{/other_user}","gists_url":"https://api.github.com/users/zackzhangzz/gists{/gist_id}","starred_url":"https://api.github.com/users/zackzhangzz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zackzhangzz/subscriptions","organizations_url":"https://api.github.com/users/zackzhangzz/orgs","repos_url":"https://api.github.com/users/zackzhangzz/repos","events_url":"https://api.github.com/users/zackzhangzz/events{/privacy}","received_events_url":"https://api.github.com/users/zackzhangzz/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-01T07:24:12Z","updated_at":"2019-04-01T07:24:12Z","author_association":"NONE","body":"java -Dzipkin.collector.kafka.overrides.sasl.mechanism=PLAIN -Dzipkin.collector.kafka.overrides.security.protocol=SASL_PLAINTEXT -Djava.security.auth.login.config=/jaas.conf  -jar zipkin.jar  --KAFKA_BOOTSTRAP_SERVERS=ip:port \r\n\r\nI try this. It works! Thanks.","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/478465754/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/478475466","html_url":"https://github.com/openzipkin/zipkin/issues/2477#issuecomment-478475466","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/2477","id":478475466,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3ODQ3NTQ2Ng==","user":{"login":"tacigar","id":19551419,"node_id":"MDQ6VXNlcjE5NTUxNDE5","avatar_url":"https://avatars.githubusercontent.com/u/19551419?v=4","gravatar_id":"","url":"https://api.github.com/users/tacigar","html_url":"https://github.com/tacigar","followers_url":"https://api.github.com/users/tacigar/followers","following_url":"https://api.github.com/users/tacigar/following{/other_user}","gists_url":"https://api.github.com/users/tacigar/gists{/gist_id}","starred_url":"https://api.github.com/users/tacigar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tacigar/subscriptions","organizations_url":"https://api.github.com/users/tacigar/orgs","repos_url":"https://api.github.com/users/tacigar/repos","events_url":"https://api.github.com/users/tacigar/events{/privacy}","received_events_url":"https://api.github.com/users/tacigar/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-01T07:57:29Z","updated_at":"2019-04-01T07:57:29Z","author_association":"MEMBER","body":"I agree with you.\r\nCould you make a PR?","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/478475466/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/478529594","html_url":"https://github.com/openzipkin/zipkin/issues/2477#issuecomment-478529594","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/2477","id":478529594,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3ODUyOTU5NA==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-01T10:45:39Z","updated_at":"2019-04-01T10:45:39Z","author_association":"MEMBER","body":"well done igarashi! it is a good idea to encourage others to help with the\ncode.\n\nOn Mon, Apr 1, 2019, 2:57 PM tacigar <notifications@github.com> wrote:\n\n> I agree with you.\n> Could you make a PR?\n>\n> —\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/openzipkin/zipkin/issues/2477#issuecomment-478475466>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AAD612RePD6VuxKJsre3r6HF7T2bV6Vwks5vcbvrgaJpZM4cSU-l>\n> .\n>\n","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/478529594/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/478824631","html_url":"https://github.com/openzipkin/zipkin/issues/2475#issuecomment-478824631","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/2475","id":478824631,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3ODgyNDYzMQ==","user":{"login":"drolando","id":3317638,"node_id":"MDQ6VXNlcjMzMTc2Mzg=","avatar_url":"https://avatars.githubusercontent.com/u/3317638?v=4","gravatar_id":"","url":"https://api.github.com/users/drolando","html_url":"https://github.com/drolando","followers_url":"https://api.github.com/users/drolando/followers","following_url":"https://api.github.com/users/drolando/following{/other_user}","gists_url":"https://api.github.com/users/drolando/gists{/gist_id}","starred_url":"https://api.github.com/users/drolando/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/drolando/subscriptions","organizations_url":"https://api.github.com/users/drolando/orgs","repos_url":"https://api.github.com/users/drolando/repos","events_url":"https://api.github.com/users/drolando/events{/privacy}","received_events_url":"https://api.github.com/users/drolando/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-02T02:58:29Z","updated_at":"2019-04-02T02:58:29Z","author_association":"CONTRIBUTOR","body":">  I'll remove the left sideba and move the rest icons of the left sidebar to the footer.\r\n\r\nActually I'll downvote my own suggestion. Computer monitors are larger than they are higher and we don't really use the entire width anyway. I'd prefer being able to see more spans in the same screen rather than gain some extra useless space on the sides.","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/478824631/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/478824883","html_url":"https://github.com/openzipkin/zipkin/issues/2461#issuecomment-478824883","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/2461","id":478824883,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3ODgyNDg4Mw==","user":{"login":"drolando","id":3317638,"node_id":"MDQ6VXNlcjMzMTc2Mzg=","avatar_url":"https://avatars.githubusercontent.com/u/3317638?v=4","gravatar_id":"","url":"https://api.github.com/users/drolando","html_url":"https://github.com/drolando","followers_url":"https://api.github.com/users/drolando/followers","following_url":"https://api.github.com/users/drolando/following{/other_user}","gists_url":"https://api.github.com/users/drolando/gists{/gist_id}","starred_url":"https://api.github.com/users/drolando/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/drolando/subscriptions","organizations_url":"https://api.github.com/users/drolando/orgs","repos_url":"https://api.github.com/users/drolando/repos","events_url":"https://api.github.com/users/drolando/events{/privacy}","received_events_url":"https://api.github.com/users/drolando/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-02T02:59:47Z","updated_at":"2019-04-02T02:59:47Z","author_association":"CONTRIBUTOR","body":"> I don't think we can forever depend on a dead library, though\r\n\r\nShould we just drop scribe then? :D It hasn't been updated in 5 years.\r\nDo you know if many (if any) people are still using it?","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/478824883/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/478825188","html_url":"https://github.com/openzipkin/zipkin/issues/2416#issuecomment-478825188","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/2416","id":478825188,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3ODgyNTE4OA==","user":{"login":"drolando","id":3317638,"node_id":"MDQ6VXNlcjMzMTc2Mzg=","avatar_url":"https://avatars.githubusercontent.com/u/3317638?v=4","gravatar_id":"","url":"https://api.github.com/users/drolando","html_url":"https://github.com/drolando","followers_url":"https://api.github.com/users/drolando/followers","following_url":"https://api.github.com/users/drolando/following{/other_user}","gists_url":"https://api.github.com/users/drolando/gists{/gist_id}","starred_url":"https://api.github.com/users/drolando/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/drolando/subscriptions","organizations_url":"https://api.github.com/users/drolando/orgs","repos_url":"https://api.github.com/users/drolando/repos","events_url":"https://api.github.com/users/drolando/events{/privacy}","received_events_url":"https://api.github.com/users/drolando/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-02T03:01:29Z","updated_at":"2019-04-02T03:01:29Z","author_association":"CONTRIBUTOR","body":"Fixed by #2434 ","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/478825188/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/478833300","html_url":"https://github.com/openzipkin/zipkin/issues/2461#issuecomment-478833300","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/2461","id":478833300,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3ODgzMzMwMA==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-02T03:47:07Z","updated_at":"2019-04-02T03:47:07Z","author_association":"MEMBER","body":"Should we just drop scribe then? :D It hasn't been updated in 5 years.\n> Do you know if many (if any) people are still using it?\n>\nI think some do, though not in our site docs. The problem is for example,\nfinagle still defaults to it (presumably because twitter never migrated off\nscribe) and hasn't switched their official otherwise. Defaults hurt.\n\nFor the record, it is no longer in our default server.. One way we could\nconsider is switching to the less performant apache thrift option as a sort\nof penalty for laggards (including twitter). At least thrift itself is\nmaintained. However, it is still a different ecosystem to keep up with. I\nstrongly prefer working with armeria if possible.\n\nAnother option is punting to fluentd which I suppose would require a POC\nshowing that it can work (eg to move scribe messages into http or otherwise\nones)...\n","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/478833300/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/478833678","html_url":"https://github.com/openzipkin/zipkin/issues/2475#issuecomment-478833678","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/2475","id":478833678,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3ODgzMzY3OA==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-02T03:49:12Z","updated_at":"2019-04-02T03:49:12Z","author_association":"MEMBER","body":"My vote will go with the end users on this one... @tacigar @huydx maybe also run by some LINE end users?","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/478833678/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/478873452","html_url":"https://github.com/openzipkin/zipkin/issues/2023#issuecomment-478873452","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/2023","id":478873452,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3ODg3MzQ1Mg==","user":{"login":"pg-yang","id":3917424,"node_id":"MDQ6VXNlcjM5MTc0MjQ=","avatar_url":"https://avatars.githubusercontent.com/u/3917424?v=4","gravatar_id":"","url":"https://api.github.com/users/pg-yang","html_url":"https://github.com/pg-yang","followers_url":"https://api.github.com/users/pg-yang/followers","following_url":"https://api.github.com/users/pg-yang/following{/other_user}","gists_url":"https://api.github.com/users/pg-yang/gists{/gist_id}","starred_url":"https://api.github.com/users/pg-yang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pg-yang/subscriptions","organizations_url":"https://api.github.com/users/pg-yang/orgs","repos_url":"https://api.github.com/users/pg-yang/repos","events_url":"https://api.github.com/users/pg-yang/events{/privacy}","received_events_url":"https://api.github.com/users/pg-yang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-02T07:12:25Z","updated_at":"2019-04-02T07:12:25Z","author_association":"NONE","body":"Has it been fixed?\r\n","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/478873452/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/478875052","html_url":"https://github.com/openzipkin/zipkin/issues/2023#issuecomment-478875052","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/2023","id":478875052,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3ODg3NTA1Mg==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-02T07:18:19Z","updated_at":"2019-04-02T07:18:19Z","author_association":"MEMBER","body":"there is no change. I dont remember last issue we updated on this topic as\nthe discussion split a few times. the main concern\n\n* is knowing that the problem is an underlying resource issue that will\nresolve (as opposed to something that will never resolve). we need a stable\nsignal like an exception type.\n\n* then, change transports that buffer (such as rabbitmq and kafka) to\neither not ack or push back lost spans in scenarios like this.\n\n* then, assemble some back off or rate limiting thing so that we dont\npummel overloaded backend.\n\nthere is engineering work to do in order to resolve this. so far we have\nimplementations left not complete which is in some ways worse than none.\n\nwhat we need is a volunteer to champion this issue\n\nOn Tue, Apr 2, 2019, 2:12 PM Game Over <notifications@github.com> wrote:\n\n> Has it been fixed?\n>\n> —\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/openzipkin/zipkin/issues/2023#issuecomment-478873452>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AAD61xAvTouI_M3EDDI0N19flzbxF0iDks5vcwLcgaJpZM4TlAyl>\n> .\n>\n","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/478875052/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/478954949","html_url":"https://github.com/openzipkin/zipkin/pull/2476#issuecomment-478954949","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/2476","id":478954949,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3ODk1NDk0OQ==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-02T11:28:15Z","updated_at":"2019-04-02T11:28:15Z","author_association":"MEMBER","body":"maybe mistake.. please chat on gitter if not","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/478954949/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/478955187","html_url":"https://github.com/openzipkin/zipkin/pull/2328#issuecomment-478955187","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/2328","id":478955187,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3ODk1NTE4Nw==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-02T11:29:02Z","updated_at":"2019-04-02T11:29:02Z","author_association":"MEMBER","body":"@ewhauser you mind if I mutate your branch?","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/478955187/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/478969419","html_url":"https://github.com/openzipkin/zipkin/pull/2328#issuecomment-478969419","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/2328","id":478969419,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3ODk2OTQxOQ==","user":{"login":"ewhauser","id":131389,"node_id":"MDQ6VXNlcjEzMTM4OQ==","avatar_url":"https://avatars.githubusercontent.com/u/131389?v=4","gravatar_id":"","url":"https://api.github.com/users/ewhauser","html_url":"https://github.com/ewhauser","followers_url":"https://api.github.com/users/ewhauser/followers","following_url":"https://api.github.com/users/ewhauser/following{/other_user}","gists_url":"https://api.github.com/users/ewhauser/gists{/gist_id}","starred_url":"https://api.github.com/users/ewhauser/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ewhauser/subscriptions","organizations_url":"https://api.github.com/users/ewhauser/orgs","repos_url":"https://api.github.com/users/ewhauser/repos","events_url":"https://api.github.com/users/ewhauser/events{/privacy}","received_events_url":"https://api.github.com/users/ewhauser/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-02T12:16:38Z","updated_at":"2019-04-02T12:16:38Z","author_association":"CONTRIBUTOR","body":"Of course not. Little backed up at the moment; but feel free to ping me if\nI can help\n\nOn Tue, Apr 2, 2019 at 4:29 AM Adrian Cole <notifications@github.com> wrote:\n\n> @ewhauser <https://github.com/ewhauser> you mind if I mutate your branch?\n>\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/openzipkin/zipkin/pull/2328#issuecomment-478955187>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AAIBPRWImKtNYlk2uChTxnqxcjP9ZZIgks5vcz8QgaJpZM4ZU_jb>\n> .\n>\n","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/478969419/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/479002220","html_url":"https://github.com/openzipkin/zipkin/issues/2023#issuecomment-479002220","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/2023","id":479002220,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3OTAwMjIyMA==","user":{"login":"Logic-32","id":25107222,"node_id":"MDQ6VXNlcjI1MTA3MjIy","avatar_url":"https://avatars.githubusercontent.com/u/25107222?v=4","gravatar_id":"","url":"https://api.github.com/users/Logic-32","html_url":"https://github.com/Logic-32","followers_url":"https://api.github.com/users/Logic-32/followers","following_url":"https://api.github.com/users/Logic-32/following{/other_user}","gists_url":"https://api.github.com/users/Logic-32/gists{/gist_id}","starred_url":"https://api.github.com/users/Logic-32/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Logic-32/subscriptions","organizations_url":"https://api.github.com/users/Logic-32/orgs","repos_url":"https://api.github.com/users/Logic-32/repos","events_url":"https://api.github.com/users/Logic-32/events{/privacy}","received_events_url":"https://api.github.com/users/Logic-32/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-02T13:44:38Z","updated_at":"2019-04-02T13:44:38Z","author_association":"CONTRIBUTOR","body":"I'm currently working on something that should help minimize the impact of this.  The general idea is to allow Zipkin to do _some_ buffering rather than just have a hard cutoff.  This should help greatly in times of spike requests and sluggishness on the side of ES.\r\n\r\nIt won't address any of the items you mentioned @adriancole, but should still help.  What I need to know, if anyone can offer some advice, is how to get a config property into HttpCall.  Currently it's kind of inferred from OkHttp's configuratoin which is not fantastic for general config properties.","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/479002220/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/479005985","html_url":"https://github.com/openzipkin/zipkin/issues/2023#issuecomment-479005985","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/2023","id":479005985,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3OTAwNTk4NQ==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-02T13:52:29Z","updated_at":"2019-04-02T13:52:29Z","author_association":"MEMBER","body":"hi I think it could break abstraction to shared config between collection\nand very specific storage implementation (okhttp is a very specific part of\nhow we implement ES and ES should not be coupled to transport)\n\ncan you overview what your design is? best to start with design vs a\nspecial case pull request.\n\neven if your plan is to keep some data in memory (at risk of OOM etc) we\ncan consider it.. just would like more details of the approach before\ngetting into specifics like okhttp config.\n\nOn Tue, Apr 2, 2019, 8:44 PM Logic-32 <notifications@github.com> wrote:\n\n> I'm currently working on something that should help minimize the impact of\n> this. The general idea is to allow Zipkin to do *some* buffering rather\n> than just have a hard cutoff. This should help greatly in times of spike\n> requests and sluggishness on the side of ES.\n>\n> It won't address any of the items you mentioned @adriancole\n> <https://github.com/adriancole>, but should still help. What I need to\n> know, if anyone can offer some advice, is how to get a config property into\n> HttpCall. Currently it's kind of inferred from OkHttp's configuratoin which\n> is not fantastic for general config properties.\n>\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/openzipkin/zipkin/issues/2023#issuecomment-479002220>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AAD618YQ9mr4HR134aoGqO0s-y92oxbAks5vc17HgaJpZM4TlAyl>\n> .\n>\n","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/479005985/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/479162089","html_url":"https://github.com/openzipkin/zipkin/issues/2023#issuecomment-479162089","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/2023","id":479162089,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3OTE2MjA4OQ==","user":{"login":"Logic-32","id":25107222,"node_id":"MDQ6VXNlcjI1MTA3MjIy","avatar_url":"https://avatars.githubusercontent.com/u/25107222?v=4","gravatar_id":"","url":"https://api.github.com/users/Logic-32","html_url":"https://github.com/Logic-32","followers_url":"https://api.github.com/users/Logic-32/followers","following_url":"https://api.github.com/users/Logic-32/following{/other_user}","gists_url":"https://api.github.com/users/Logic-32/gists{/gist_id}","starred_url":"https://api.github.com/users/Logic-32/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Logic-32/subscriptions","organizations_url":"https://api.github.com/users/Logic-32/orgs","repos_url":"https://api.github.com/users/Logic-32/repos","events_url":"https://api.github.com/users/Logic-32/events{/privacy}","received_events_url":"https://api.github.com/users/Logic-32/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-02T19:31:48Z","updated_at":"2019-04-02T19:31:48Z","author_association":"CONTRIBUTOR","body":"High level plan is to replace the [existing Semaphore in HttpCall](https://github.com/openzipkin/zipkin/blob/ff8febac0a54032e80b246d83bf17472991df090/zipkin-storage/elasticsearch/src/main/java/zipkin2/elasticsearch/internal/client/HttpCall.java#L59) with something that allows for a queue of some kind.\r\n\r\nMy original plan was to update the [OkHttpClient.Builder in ZipkinElasticsearchOkHttpAutoConfiguration](https://github.com/openzipkin/zipkin/blob/bb4b8002be619b392f08ffd576a639f628579f49/zipkin-autoconfigure/storage-elasticsearch/src/main/java/zipkin2/autoconfigure/storage/elasticsearch/ZipkinElasticsearchOkHttpAutoConfiguration.java#L59) to have a Dispatcher with an ExecutorService that allowed for fixed-length queue.  Then I realized that the Dispatcher maintains it's own unbounded queue (which is a real problem and should be fixed/configurable in OkHttp itself, but I digress) so the ExecutorService doesn't help.\r\n\r\nNow my general idea is to just inspect the Dispatcher queue length to see if we exceed a certain threshold (this is where I want an autoconfigure property but can't easily get one) and drop requests if we do.  Given that ZipkinElasticsearchOkHttpAutoConfiguration exists I assumed it'd be ok to have a setting from it accessible in HttpCall.  But since I'm not seeing any obvious way to do the plumbing I suppose it's better to not.  However, if I don't, then I'm not quite sure where else to put the threshold check.\r\n\r\nI could always wrap everything up in an ExecutorService somewhere (like ElasticsearchSpanConsumer) so that things are easy to control.  But I'm not sure how I'd properly transition all existing configurations over to using that without some unexpected behavior.\r\n\r\nMy main concern here is the usage of the [HttpBulkIndexer in ElasticsearchSpanConsumer](https://github.com/openzipkin/zipkin/blob/120d1a73f2abfb62fd9a41a72cf30ee7e3a5b388/zipkin-storage/elasticsearch/src/main/java/zipkin2/elasticsearch/ElasticsearchSpanConsumer.java#L65).  The reason that is my primary concern is because of the issue that brought about #1760.  The fix for that was, perhaps unfortunately, too broad and limited _any_ interaction with ES.  The change I'm proposing is more focused on the actual collection of spans which can cause back ups and OOM errors.\r\n\r\nTo emphasize one point: the purpose of the queue is to help work through spike-load and semi-sluggish flushing to ES.  OkHttp's unbounded queue seems like the real source of the problem in #1760 and what I think the Semaphore was trying to work around and therefore what I want to as well but in a less aggressive way.\r\n\r\nUnfortunately, I'm not sure how to relate any of this back to Kafka because we report to Zipkin over HTTP and the ElasticsearchSpanConsumer doesn't seem to care about whether you do that or use Kafka.","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/479162089/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/479173029","html_url":"https://github.com/openzipkin/zipkin/issues/2023#issuecomment-479173029","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/2023","id":479173029,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3OTE3MzAyOQ==","user":{"login":"Logic-32","id":25107222,"node_id":"MDQ6VXNlcjI1MTA3MjIy","avatar_url":"https://avatars.githubusercontent.com/u/25107222?v=4","gravatar_id":"","url":"https://api.github.com/users/Logic-32","html_url":"https://github.com/Logic-32","followers_url":"https://api.github.com/users/Logic-32/followers","following_url":"https://api.github.com/users/Logic-32/following{/other_user}","gists_url":"https://api.github.com/users/Logic-32/gists{/gist_id}","starred_url":"https://api.github.com/users/Logic-32/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Logic-32/subscriptions","organizations_url":"https://api.github.com/users/Logic-32/orgs","repos_url":"https://api.github.com/users/Logic-32/repos","events_url":"https://api.github.com/users/Logic-32/events{/privacy}","received_events_url":"https://api.github.com/users/Logic-32/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-02T19:57:15Z","updated_at":"2019-04-02T19:58:47Z","author_association":"CONTRIBUTOR","body":"Until I get a response to my above comment, I think I'll pursue the idea of removing the Semaphore and adding an ExecutorService in ElasticsearchSpanConsumer (or ElasticsearchStorage) to help decouple the ES component from OkHttp.  Hopefully that addresses your initial concern @adriancole.  Regardless, we can always iterate on it a bit.","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/479173029/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/479240655","html_url":"https://github.com/openzipkin/zipkin/issues/2023#issuecomment-479240655","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/2023","id":479240655,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3OTI0MDY1NQ==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-02T22:49:48Z","updated_at":"2019-04-02T22:49:48Z","author_association":"MEMBER","body":"please work in a branch and this type of issue you are working with seems a\nhalf implementation of our asynchronous reporter and likely going to cause\nproblems that the reporter has solved already.\n\nOn Wed, Apr 3, 2019, 2:57 AM Logic-32 <notifications@github.com> wrote:\n\n> Until I get a response to my above comment, I think I'll pursue the idea\n> of removing the Semaphore and adding an ExecutorService in\n> ElasticsearchSpanConsumer to help decouple the ES component from OkHttp.\n> Hopefully that addresses your initial concern @adriancole\n> <https://github.com/adriancole>. Regardless, we can always iterate on it\n> a bit.\n>\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/openzipkin/zipkin/issues/2023#issuecomment-479173029>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AAD6107QWPRBbY-8tR188vtlGSc2-27xks5vc7YdgaJpZM4TlAyl>\n> .\n>\n","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/479240655/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/479243633","html_url":"https://github.com/openzipkin/zipkin/issues/2023#issuecomment-479243633","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/2023","id":479243633,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3OTI0MzYzMw==","user":{"login":"Logic-32","id":25107222,"node_id":"MDQ6VXNlcjI1MTA3MjIy","avatar_url":"https://avatars.githubusercontent.com/u/25107222?v=4","gravatar_id":"","url":"https://api.github.com/users/Logic-32","html_url":"https://github.com/Logic-32","followers_url":"https://api.github.com/users/Logic-32/followers","following_url":"https://api.github.com/users/Logic-32/following{/other_user}","gists_url":"https://api.github.com/users/Logic-32/gists{/gist_id}","starred_url":"https://api.github.com/users/Logic-32/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Logic-32/subscriptions","organizations_url":"https://api.github.com/users/Logic-32/orgs","repos_url":"https://api.github.com/users/Logic-32/repos","events_url":"https://api.github.com/users/Logic-32/events{/privacy}","received_events_url":"https://api.github.com/users/Logic-32/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-02T22:58:22Z","updated_at":"2019-04-02T22:58:22Z","author_association":"CONTRIBUTOR","body":"Going to run it on our servers for a bit before even attempting a pull request to make sure it is stable.  But when I commit it, it'll definitely be on a branch :)\r\n\r\nIs there any reference material on the asynchronous reporter I can review to make sure I'm not reinventing a wheel?  Is there an ETA on when that'll come out?  And you're not talking about the reporter in Brave, correct?","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/479243633/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/479246041","html_url":"https://github.com/openzipkin/zipkin/issues/2023#issuecomment-479246041","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/2023","id":479246041,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3OTI0NjA0MQ==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-02T23:06:13Z","updated_at":"2019-04-02T23:06:13Z","author_association":"MEMBER","body":"@Logic-32 The main thing is that there are so many different types of issues :) They should be addressed independently.\r\n\r\nThe backlog not being properly addressed in #1760 is simply a flaw or oversight. My guess is that you can create this as a test and break it. If it wasn't a fault in our design (letting the queue grow unbounded), then we can also ask okhttp about how to change.. there's sometimes a way. Can you raise an independent issue on the unbounded queue problem with the description you gave?","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/479246041/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/479247816","html_url":"https://github.com/openzipkin/zipkin/issues/2023#issuecomment-479247816","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/2023","id":479247816,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3OTI0NzgxNg==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-02T23:11:55Z","updated_at":"2019-04-02T23:11:55Z","author_association":"MEMBER","body":"on the async reporter.. it has a bundling feature with a size limitation of both the message size to the host and the backlog. What I mean is that if not using a durable queue, then we are back to memory. If in memory, we have to be careful about implementation of the bounded queue so as to not OOM and the AsyncReporter has [code to do this](https://github.com/openzipkin/zipkin-reporter-java/blob/master/core/src/main/java/zipkin2/reporter/ByteBoundedQueue.java). I would suggest possibly a reporter adapter to do the bulk message if we get to this point.\r\n\r\nHowever, there are still the concern of knowing when you should retry which can also be done separately. ES will definitely fail for unknown amounts of time.. So, normalizing the exception will help especially as sometimes the cluster is just dead as opposed to saying my queue is full.\r\n\r\nMain point is that there are several different issues, but opening one per case is a good idea so that they can be tracked. Ex same as you maybe don't care about durable queue, probably those with durable queues might not want the risk of another memory queue :P So, memory-backed collector queue for storage overloads is its own concern IOTW.\r\n\r\nI have to run, but easiest to chat on gitter, too. Thanks for the help.. I think there are some flaws we can fix.","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/479247816/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/479254736","html_url":"https://github.com/openzipkin/zipkin/issues/2481#issuecomment-479254736","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/2481","id":479254736,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3OTI1NDczNg==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-02T23:34:02Z","updated_at":"2019-04-02T23:34:02Z","author_association":"MEMBER","body":"I think you mention earlier a separate issue which was a flaw in the semaphore as it was implemented.. I still think this should be fixed independently and at the call abstraction.\r\n\r\none interesting food for thought. if this includes some concerns about okhttp dispatcher queue, it is similar to ones we had in brave (where traces get lost on backlog) to solve this, we intercept and use Call.Factory as opposed to OkHttpClient this technique might be irrelevant to the issue. https://github.com/openzipkin/brave/issues/292","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/479254736/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/479260143","html_url":"https://github.com/openzipkin/zipkin/issues/2481#issuecomment-479260143","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/2481","id":479260143,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3OTI2MDE0Mw==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-02T23:52:03Z","updated_at":"2019-04-02T23:52:03Z","author_association":"MEMBER","body":"on the direct issue you are discussing here, it sounds like you want a buffer because there is some absolute number of in flight requests, and a surge will go over that, but you think that this surge is short term and ES will quiesce. Put another way, you think we can do a better job back logging than elasticsearch can (because the queue that is overloaded is a configurable length in elasticsearch). Is that correct? In your experience, how big does this queue need to go to be useful (outlast the capacity deficit) in terms of spans messages and bytes? you can look at collector metrics for an idea of how much you are dropping as that would likely tell you","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/479260143/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/479276961","html_url":"https://github.com/openzipkin/zipkin/issues/2023#issuecomment-479276961","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/2023","id":479276961,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3OTI3Njk2MQ==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-03T00:53:05Z","updated_at":"2019-04-03T00:53:05Z","author_association":"MEMBER","body":"Can you look at this and help contribute to it? If you register for a wiki\nuser I can add you write permissions to help elaborate.\nhttps://cwiki.apache.org/confluence/display/ZIPKIN/Collector+surge+and+error+handling\n\nOn Wed, Apr 3, 2019 at 5:58 AM Logic-32 <notifications@github.com> wrote:\n\n> Going to run it on our servers for a bit before even attempting a pull\n> request to make sure it is stable. But when I commit it, it'll definitely\n> be on a branch :)\n>\n> Is there any reference material on the asynchronous reporter I can review\n> to make sure I'm not reinventing a wheel? Is there an ETA on when that'll\n> come out? And you're not talking about the reporter in Brave, correct?\n>\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/openzipkin/zipkin/issues/2023#issuecomment-479243633>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AAD613MSx2kq_AT4rMy96TfqlKjQ61doks5vc-CPgaJpZM4TlAyl>\n> .\n>\n","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/479276961/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/479336551","html_url":"https://github.com/openzipkin/zipkin/issues/1794#issuecomment-479336551","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/1794","id":479336551,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3OTMzNjU1MQ==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-03T04:35:59Z","updated_at":"2019-04-03T04:35:59Z","author_association":"MEMBER","body":"I have started on this and will raise a pull request soon","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/479336551/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/479375184","html_url":"https://github.com/openzipkin/zipkin/pull/2482#issuecomment-479375184","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/2482","id":479375184,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3OTM3NTE4NA==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-03T07:36:46Z","updated_at":"2019-04-03T07:36:46Z","author_association":"MEMBER","body":"So as I understand it, this makes what you are hovering over darker, so it is harder to lose your cursor? Am I missing anything else?","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/479375184/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/479376725","html_url":"https://github.com/openzipkin/zipkin/pull/2482#issuecomment-479376725","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/2482","id":479376725,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3OTM3NjcyNQ==","user":{"login":"tacigar","id":19551419,"node_id":"MDQ6VXNlcjE5NTUxNDE5","avatar_url":"https://avatars.githubusercontent.com/u/19551419?v=4","gravatar_id":"","url":"https://api.github.com/users/tacigar","html_url":"https://github.com/tacigar","followers_url":"https://api.github.com/users/tacigar/followers","following_url":"https://api.github.com/users/tacigar/following{/other_user}","gists_url":"https://api.github.com/users/tacigar/gists{/gist_id}","starred_url":"https://api.github.com/users/tacigar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tacigar/subscriptions","organizations_url":"https://api.github.com/users/tacigar/orgs","repos_url":"https://api.github.com/users/tacigar/repos","events_url":"https://api.github.com/users/tacigar/events{/privacy}","received_events_url":"https://api.github.com/users/tacigar/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-03T07:42:00Z","updated_at":"2019-04-03T07:42:00Z","author_association":"MEMBER","body":"That's all :)","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/479376725/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/479384691","html_url":"https://github.com/openzipkin/zipkin/issues/1794#issuecomment-479384691","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/1794","id":479384691,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3OTM4NDY5MQ==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-03T08:08:00Z","updated_at":"2019-04-03T08:08:00Z","author_association":"MEMBER","body":"@openzipkin/ui so I am working on this now, and it should be done not too long.\r\n\r\n/services -> only local serviceNames\r\n/remoteServices?serviceName=X -> new: only remote serviceNames for auto-complete\r\n/spans?remoteServiceName=X -> new: to restore functionality @llinder mentioned","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/479384691/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/479571048","html_url":"https://github.com/openzipkin/zipkin/issues/2481#issuecomment-479571048","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/2481","id":479571048,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3OTU3MTA0OA==","user":{"login":"Logic-32","id":25107222,"node_id":"MDQ6VXNlcjI1MTA3MjIy","avatar_url":"https://avatars.githubusercontent.com/u/25107222?v=4","gravatar_id":"","url":"https://api.github.com/users/Logic-32","html_url":"https://github.com/Logic-32","followers_url":"https://api.github.com/users/Logic-32/followers","following_url":"https://api.github.com/users/Logic-32/following{/other_user}","gists_url":"https://api.github.com/users/Logic-32/gists{/gist_id}","starred_url":"https://api.github.com/users/Logic-32/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Logic-32/subscriptions","organizations_url":"https://api.github.com/users/Logic-32/orgs","repos_url":"https://api.github.com/users/Logic-32/repos","events_url":"https://api.github.com/users/Logic-32/events{/privacy}","received_events_url":"https://api.github.com/users/Logic-32/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-03T16:51:30Z","updated_at":"2019-04-03T16:51:30Z","author_association":"CONTRIBUTOR","body":"Follow up from conversation in #2023\r\n\r\n> ... this type of issue you are working with seems a\r\nhalf implementation of our asynchronous reporter and likely going to cause\r\nproblems that the reporter has solved already.\r\n\r\nAfter further comments from you I realize you're talking about [AsyncReporter](https://github.com/openzipkin/zipkin-reporter-java/blob/master/core/src/main/java/zipkin2/reporter/AsyncReporter.java) which is in Zipkin, yes, but used in client-side instrumentations for actually reporting to Zipkin.  I just want to confirm that we are using this on the client-side but I am not sure how we'd actually make use of it \"in Zipkin.\"  Though I do see how it could resolve my issues if we were able to.\r\n\r\n> I think you mention earlier a separate issue which was a flaw in the semaphore as it was implemented.. I still think this should be fixed independently and at the call abstraction.\r\n\r\nYes.  But rather than fixing it independently it is my intended focus of this case.  And from what I've been experimenting with, a Call abstraction is definitely helping :)\r\n\r\n> Put another way, you think we can do a better job back logging than elasticsearch can (because the queue that is overloaded is a configurable length in elasticsearch). Is that correct? In your experience, how big does this queue need to go to be useful (outlast the capacity deficit) in terms of spans messages and bytes? you can look at collector metrics for an idea of how much you are dropping as that would likely tell you\r\n\r\nYes, we do think the surge is short term.  But even if it is an excessive surge or longer than anticipated we will still drop messages as needed to keep Zipkin from going OOM.  We're not sure how big the queue will need to be at the moment.  Unfortunately, Prometheus doesn't seem to track `zipkin_collector_messages_dropped_total` properly or we are only dropping spans and not messages.  Initial guess from other metrics would be a queue of 100-ish would be ok but I'm starting my experiment with 500.  Note: this is number of messages, not spans.  I'm not sure what the byte limit on that would be due to the variety in number of spans per message.  And since ByteBoundedQueue isn't a BlockingQueue I can't use it to further ensure no OOM errors happen :(\r\n\r\nFrom [Collector surge and error handling](https://cwiki.apache.org/confluence/display/ZIPKIN/Collector+surge+and+error+handling)\r\n> It is possible that for non-buffered transports like http, we could have a similar async memory queue (possibly the same implementation as application) to coalesce storage requests into fixed size and rate outbound requests to storage. Clearing this queue could be done via an async SpanConsumer call, possibly itself controlled by a semaphore. This buffer can change the problem of http into one similar to how we address kafka, except that the queue is not durable or checkpointed etc.\r\n\r\nI should further elaborate on my 200 server example: in our case, each of those 200 servers will actually be starting/stopping various, independent JVM processes.  Meaning that unlike a single, long-lived web server process, there is no central control point to rate-limit requests to storage.  So, while we are using AsyncReporter, there are actually something more like 600 reporters doing the reporting.\r\n\r\nLots of chaos, not a lot of control :\\  But zipkin-server, at least for us, does have some heap to spare.  Since it is our central point, it seems like we can better do some flow-control there instead of having to stand up/support Kafka.","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/479571048/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/479697515","html_url":"https://github.com/openzipkin/zipkin/issues/2485#issuecomment-479697515","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/2485","id":479697515,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3OTY5NzUxNQ==","user":{"login":"drolando","id":3317638,"node_id":"MDQ6VXNlcjMzMTc2Mzg=","avatar_url":"https://avatars.githubusercontent.com/u/3317638?v=4","gravatar_id":"","url":"https://api.github.com/users/drolando","html_url":"https://github.com/drolando","followers_url":"https://api.github.com/users/drolando/followers","following_url":"https://api.github.com/users/drolando/following{/other_user}","gists_url":"https://api.github.com/users/drolando/gists{/gist_id}","starred_url":"https://api.github.com/users/drolando/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/drolando/subscriptions","organizations_url":"https://api.github.com/users/drolando/orgs","repos_url":"https://api.github.com/users/drolando/repos","events_url":"https://api.github.com/users/drolando/events{/privacy}","received_events_url":"https://api.github.com/users/drolando/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-03T23:45:29Z","updated_at":"2019-04-03T23:45:29Z","author_association":"CONTRIBUTOR","body":"This is @tacigar's  comment on what'd be needed:\r\n\r\n> I use react-select(https://github.com/jedwatson/react-select) to implement global-search component. (Please see https://github.com/openzipkin/zipkin/blob/7ac793e1261c4e03b1f1066cf9718c6c7c740d18/zipkin-lens/src/components/GlobalSearch/SearchCondition.js#L132-L169)\r\nThis component library is not very extensible.\r\nSo I think it is hard to add separator and descriptions to the dropdown as long as we use it.\r\nIt seems that we need to throw away react-select and create similar component ourself…\r\nBut it is a bit hard...","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/479697515/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/479702776","html_url":"https://github.com/openzipkin/zipkin/issues/2481#issuecomment-479702776","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/2481","id":479702776,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3OTcwMjc3Ng==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-04T00:14:26Z","updated_at":"2019-04-04T00:14:26Z","author_association":"MEMBER","body":"Note that ByteBoundedQueue (the backend) is fully intended to stop OOM as it is bounded. We chose to drop instead of block, so the problem is less OOM and more if you want more than you allocated, but I'm not sure that doesn't defeat the point of a bounded q :P","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/479702776/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/479703282","html_url":"https://github.com/openzipkin/zipkin/issues/2481#issuecomment-479703282","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/2481","id":479703282,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3OTcwMzI4Mg==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-04T00:17:28Z","updated_at":"2019-04-04T00:17:28Z","author_association":"MEMBER","body":"@Logic-32 One thing discussed offline is basically I think you want the advantage of a queue, but you don't want to run kafka, rabbit or another queue? The problem is this implies exactly the same complexity here and we are smaller than the Kafka, elasticsearch community etc. It isn't necessarily fair to try to make zipkin also a bounded queue implementor.\r\n\r\nOne alternative you could consider is that we have demand for activemq #2466 which is easy to run, and embeddable. It is possible that we could invert the flow (push to poll) without you needing a custom queue implementation. Can you think about this option?","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/479703282/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/479704166","html_url":"https://github.com/openzipkin/zipkin/issues/2481#issuecomment-479704166","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/2481","id":479704166,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3OTcwNDE2Ng==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-04T00:22:45Z","updated_at":"2019-04-04T00:22:45Z","author_association":"MEMBER","body":"for a custom implementation here I think the closest match to what we can support is re-using what we do client-side somehow. The problem space is exactly the same as client side and it took years to get the async reporter correct (to the degree it is). However, the client reporter also drops spans on problems, so any other handling would need to be considered independently as already mentioned (evaluating which conditions one should push back a message, to avoid putting a poison one back on the queue)","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/479704166/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/479707423","html_url":"https://github.com/openzipkin/zipkin/issues/2485#issuecomment-479707423","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/2485","id":479707423,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3OTcwNzQyMw==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-04T00:41:30Z","updated_at":"2019-04-04T00:42:05Z","author_association":"MEMBER","body":"I agree that for existing sites, they may be confused about which properties of the span are by default searchable. If we want to optimize for this, we could have a separate element for tags including predefined keys or blank to enter your own. Remember also that predefined should one day include site-specific tags that we don't auto-complete values for! ex antennae-id or request id.\r\n\r\non hover it could say how to control this.","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/479707423/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/479708403","html_url":"https://github.com/openzipkin/zipkin/issues/2485#issuecomment-479708403","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/2485","id":479708403,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3OTcwODQwMw==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-04T00:47:22Z","updated_at":"2019-04-04T00:47:22Z","author_association":"MEMBER","body":"what if tags had a tag: or tag. prefix? not necessarily elegant but it\ncould reduce confusion perhaps. other data are top level\n\nOn Thu, Apr 4, 2019, 7:45 AM Daniele <notifications@github.com> wrote:\n\n> This is @tacigar <https://github.com/tacigar>'s comment on what'd be\n> needed:\n>\n> I use react-select(https://github.com/jedwatson/react-select) to\n> implement global-search component. (Please see\n> https://github.com/openzipkin/zipkin/blob/7ac793e1261c4e03b1f1066cf9718c6c7c740d18/zipkin-lens/src/components/GlobalSearch/SearchCondition.js#L132-L169\n> )\n> This component library is not very extensible.\n> So I think it is hard to add separator and descriptions to the dropdown as\n> long as we use it.\n> It seems that we need to throw away react-select and create similar\n> component ourself…\n> But it is a bit hard...\n>\n> —\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/openzipkin/zipkin/issues/2485#issuecomment-479697515>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AAD611-Hu8bcQtt_S7J8XXvYqE2ah2L1ks5vdT0bgaJpZM4cbpaG>\n> .\n>\n","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/479708403/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/479708712","html_url":"https://github.com/openzipkin/zipkin/issues/2485#issuecomment-479708712","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/2485","id":479708712,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3OTcwODcxMg==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-04T00:49:28Z","updated_at":"2019-04-04T00:49:28Z","author_association":"MEMBER","body":"I mean ex duration is really span.duration and name is span.name tag is\nspan.tags.foo\n\npossibly namespacing could clarify, skipping the span. part\n\nOn Thu, Apr 4, 2019, 8:47 AM Adrian Cole <adrian.f.cole@gmail.com> wrote:\n\n> what if tags had a tag: or tag. prefix? not necessarily elegant but it\n> could reduce confusion perhaps. other data are top level\n>\n> On Thu, Apr 4, 2019, 7:45 AM Daniele <notifications@github.com> wrote:\n>\n>> This is @tacigar <https://github.com/tacigar>'s comment on what'd be\n>> needed:\n>>\n>> I use react-select(https://github.com/jedwatson/react-select) to\n>> implement global-search component. (Please see\n>> https://github.com/openzipkin/zipkin/blob/7ac793e1261c4e03b1f1066cf9718c6c7c740d18/zipkin-lens/src/components/GlobalSearch/SearchCondition.js#L132-L169\n>> )\n>> This component library is not very extensible.\n>> So I think it is hard to add separator and descriptions to the dropdown\n>> as long as we use it.\n>> It seems that we need to throw away react-select and create similar\n>> component ourself…\n>> But it is a bit hard...\n>>\n>> —\n>> You are receiving this because you are subscribed to this thread.\n>> Reply to this email directly, view it on GitHub\n>> <https://github.com/openzipkin/zipkin/issues/2485#issuecomment-479697515>,\n>> or mute the thread\n>> <https://github.com/notifications/unsubscribe-auth/AAD611-Hu8bcQtt_S7J8XXvYqE2ah2L1ks5vdT0bgaJpZM4cbpaG>\n>> .\n>>\n>\n","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/479708712/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/479709580","html_url":"https://github.com/openzipkin/zipkin/issues/2485#issuecomment-479709580","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/2485","id":479709580,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3OTcwOTU4MA==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-04T00:54:55Z","updated_at":"2019-04-04T00:54:55Z","author_association":"MEMBER","body":"I think haystack doesn't have this problem because you cannot search on and\nhoc values iirc\n\nOn Thu, Apr 4, 2019, 8:49 AM Adrian Cole <adrian.f.cole@gmail.com> wrote:\n\n> I mean ex duration is really span.duration and name is span.name tag is\n> span.tags.foo\n>\n> possibly namespacing could clarify, skipping the span. part\n>\n> On Thu, Apr 4, 2019, 8:47 AM Adrian Cole <adrian.f.cole@gmail.com> wrote:\n>\n>> what if tags had a tag: or tag. prefix? not necessarily elegant but it\n>> could reduce confusion perhaps. other data are top level\n>>\n>> On Thu, Apr 4, 2019, 7:45 AM Daniele <notifications@github.com> wrote:\n>>\n>>> This is @tacigar <https://github.com/tacigar>'s comment on what'd be\n>>> needed:\n>>>\n>>> I use react-select(https://github.com/jedwatson/react-select) to\n>>> implement global-search component. (Please see\n>>> https://github.com/openzipkin/zipkin/blob/7ac793e1261c4e03b1f1066cf9718c6c7c740d18/zipkin-lens/src/components/GlobalSearch/SearchCondition.js#L132-L169\n>>> )\n>>> This component library is not very extensible.\n>>> So I think it is hard to add separator and descriptions to the dropdown\n>>> as long as we use it.\n>>> It seems that we need to throw away react-select and create similar\n>>> component ourself…\n>>> But it is a bit hard...\n>>>\n>>> —\n>>> You are receiving this because you are subscribed to this thread.\n>>> Reply to this email directly, view it on GitHub\n>>> <https://github.com/openzipkin/zipkin/issues/2485#issuecomment-479697515>,\n>>> or mute the thread\n>>> <https://github.com/notifications/unsubscribe-auth/AAD611-Hu8bcQtt_S7J8XXvYqE2ah2L1ks5vdT0bgaJpZM4cbpaG>\n>>> .\n>>>\n>>\n","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/479709580/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/479791170","html_url":"https://github.com/openzipkin/zipkin/pull/2484#issuecomment-479791170","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/2484","id":479791170,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3OTc5MTE3MA==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-04T07:55:07Z","updated_at":"2019-04-04T07:55:07Z","author_association":"MEMBER","body":"oh wow.. cassandra tests pass now :) someone quick take a photo!","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/479791170/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/479947979","html_url":"https://github.com/openzipkin/zipkin/issues/2486#issuecomment-479947979","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/2486","id":479947979,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3OTk0Nzk3OQ==","user":{"login":"devinsba","id":139938,"node_id":"MDQ6VXNlcjEzOTkzOA==","avatar_url":"https://avatars.githubusercontent.com/u/139938?v=4","gravatar_id":"","url":"https://api.github.com/users/devinsba","html_url":"https://github.com/devinsba","followers_url":"https://api.github.com/users/devinsba/followers","following_url":"https://api.github.com/users/devinsba/following{/other_user}","gists_url":"https://api.github.com/users/devinsba/gists{/gist_id}","starred_url":"https://api.github.com/users/devinsba/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/devinsba/subscriptions","organizations_url":"https://api.github.com/users/devinsba/orgs","repos_url":"https://api.github.com/users/devinsba/repos","events_url":"https://api.github.com/users/devinsba/events{/privacy}","received_events_url":"https://api.github.com/users/devinsba/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-04T15:34:36Z","updated_at":"2019-04-04T15:34:36Z","author_association":"MEMBER","body":"Just want to make sure, have you configured CORS on the server: https://github.com/openzipkin/zipkin/tree/master/zipkin-server#cors-cross-origin-resource-sharing\r\n\r\nIt's possible this broke with the server engine change recently but want to validate","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/479947979/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/479951212","html_url":"https://github.com/openzipkin/zipkin/issues/2481#issuecomment-479951212","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/2481","id":479951212,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3OTk1MTIxMg==","user":{"login":"Logic-32","id":25107222,"node_id":"MDQ6VXNlcjI1MTA3MjIy","avatar_url":"https://avatars.githubusercontent.com/u/25107222?v=4","gravatar_id":"","url":"https://api.github.com/users/Logic-32","html_url":"https://github.com/Logic-32","followers_url":"https://api.github.com/users/Logic-32/followers","following_url":"https://api.github.com/users/Logic-32/following{/other_user}","gists_url":"https://api.github.com/users/Logic-32/gists{/gist_id}","starred_url":"https://api.github.com/users/Logic-32/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Logic-32/subscriptions","organizations_url":"https://api.github.com/users/Logic-32/orgs","repos_url":"https://api.github.com/users/Logic-32/repos","events_url":"https://api.github.com/users/Logic-32/events{/privacy}","received_events_url":"https://api.github.com/users/Logic-32/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-04T15:42:27Z","updated_at":"2019-04-04T15:42:27Z","author_association":"CONTRIBUTOR","body":"> One thing discussed offline is basically I think you want the advantage of a queue, but you don't want to run kafka, rabbit or another queue? The problem is this implies exactly the same complexity here and we are smaller than the Kafka, elasticsearch community etc. It isn't necessarily fair to try to make zipkin also a bounded queue implementor.\r\n\r\nI feel as though we're on slightly different pages in some respect.  To hopefully help clarify, yes, I think using Kafka (or RMQ, which our company does use already) would be a better solution overall.  However, as #2023 showed, even pushing with Kafka right now can cause the \"over capacity\" message as a result of not being able to push back on the MQ and tell it to slow down.  Even ignoring that case, there are probably others using RPC that have this issue as well.\r\n\r\nMy goal here is not to reinvent the MQ wheel but simply allow for a little more tolerance in how quickly the \"over capacity\" error is thrown.  How familiar with ExecutorServices are you?  They actually have a very convenient feature for this behavior.  Take [TheadPoolExecutor](https://docs.oracle.com/javase/7/docs/api/java/util/concurrent/ThreadPoolExecutor.html) for instance; looking at the constructor arguments:\r\n- BlockingQueue (workQueue): this can be a \"bounded queue\" like [LinkedBlockingQueue](https://docs.oracle.com/javase/7/docs/api/java/util/concurrent/LinkedBlockingQueue.html).  In this sense, \"bounded\" means a hard-limit (which can be passed in via AutoConfiguration) on the total number of Runnables (messages) in it.  Realistically, there is probably no reason ByteBoundedQueue can't be updated to implement BlockingQueue and we use that in the ExecutorService instead but that feels a little more like trying to reinvent an MQ protocol.\r\n- RejectedExecutionHandler (handler): when the ExecutorService is fully saturated and the queue is full, this determines how to handle additional Runnables that tried to get enqueued but can't be.  The default policy being [AbortPolicy](https://docs.oracle.com/javase/7/docs/api/java/util/concurrent/ThreadPoolExecutor.AbortPolicy.html)\r\n\r\nGiven that review, I want to restate that my goal is not necessarily to have any kind of excessively-reliable queue but merely a moderate buffer to reduce issues from spike-load.  \"Over capacity\" errors (or, RejectedExecutionExceptions in this case) will still get thrown but hopefully less frequently.  No retries will be attempted (though, I believe this would give us a hook for retries if that is something we wanted to pursue later).\r\n\r\nI also understand this may not be a feature the Zipkin team wants to maintain internally and am fully comfortable having a pull request rejected.\r\n\r\n> It is possible that we could invert the flow (push to poll) without you needing a custom queue implementation. Can you think about this option?\r\n\r\nYou mean have Zipkin poll for messages from something instead of directly issuing RPC requests to it?  Zipkin already has support for various MQs so I would suggest simply switching from RPC to an AMQ protocol before going down that road.  Or did I misunderstand the question?\r\n\r\nLastly, I'm definitely more than happy to discuss design options here as this discussion has already yielded a solution I'm personally more happy with.  However, since I think communication sometimes works better in code, I would at least like to send you a patch/pull request for review before wholesale rejecting the idea.","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/479951212/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/479958002","html_url":"https://github.com/openzipkin/zipkin/issues/2481#issuecomment-479958002","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/2481","id":479958002,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3OTk1ODAwMg==","user":{"login":"devinsba","id":139938,"node_id":"MDQ6VXNlcjEzOTkzOA==","avatar_url":"https://avatars.githubusercontent.com/u/139938?v=4","gravatar_id":"","url":"https://api.github.com/users/devinsba","html_url":"https://github.com/devinsba","followers_url":"https://api.github.com/users/devinsba/followers","following_url":"https://api.github.com/users/devinsba/following{/other_user}","gists_url":"https://api.github.com/users/devinsba/gists{/gist_id}","starred_url":"https://api.github.com/users/devinsba/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/devinsba/subscriptions","organizations_url":"https://api.github.com/users/devinsba/orgs","repos_url":"https://api.github.com/users/devinsba/repos","events_url":"https://api.github.com/users/devinsba/events{/privacy}","received_events_url":"https://api.github.com/users/devinsba/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-04T15:58:21Z","updated_at":"2019-04-04T15:58:21Z","author_association":"MEMBER","body":"Based on previous discussion here and the issue you linked above #2023 my opinion (and I think partially Adrian's) is we should solve this at the library and configuration level, where it applies to all collectors that are pull based and all storage options. HTTP collector being mostly an outlier here, most collectors are pull based.\r\n\r\nThe intent being that all storage engines can create a well known error that can then be taken as a signal at the collector level to both retry the request that was dropped (ie: don't advance our cursor) and slow down.","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/479958002/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/479958439","html_url":"https://github.com/openzipkin/zipkin/issues/2486#issuecomment-479958439","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/2486","id":479958439,"node_id":"MDEyOklzc3VlQ29tbWVudDQ3OTk1ODQzOQ==","user":{"login":"JonasVerhofste","id":25819942,"node_id":"MDQ6VXNlcjI1ODE5OTQy","avatar_url":"https://avatars.githubusercontent.com/u/25819942?v=4","gravatar_id":"","url":"https://api.github.com/users/JonasVerhofste","html_url":"https://github.com/JonasVerhofste","followers_url":"https://api.github.com/users/JonasVerhofste/followers","following_url":"https://api.github.com/users/JonasVerhofste/following{/other_user}","gists_url":"https://api.github.com/users/JonasVerhofste/gists{/gist_id}","starred_url":"https://api.github.com/users/JonasVerhofste/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JonasVerhofste/subscriptions","organizations_url":"https://api.github.com/users/JonasVerhofste/orgs","repos_url":"https://api.github.com/users/JonasVerhofste/repos","events_url":"https://api.github.com/users/JonasVerhofste/events{/privacy}","received_events_url":"https://api.github.com/users/JonasVerhofste/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-04T15:59:31Z","updated_at":"2019-04-04T15:59:31Z","author_association":"NONE","body":"I was using the docker container (both the version from two weeks ago and the newest one) and didn't touch the defaults. Seeing as the default is to allow all endpoints under `/api/v2`, I don't see why it shouldn't work.\r\n\r\nCould be a problem with zipkin-js, but the response headers from the server are a tad strange, see the referenced issue, that's why I moved the issue here, as per @adriancole's request.","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/479958439/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/480091675","html_url":"https://github.com/openzipkin/zipkin/issues/2481#issuecomment-480091675","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/2481","id":480091675,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4MDA5MTY3NQ==","user":{"login":"Logic-32","id":25107222,"node_id":"MDQ6VXNlcjI1MTA3MjIy","avatar_url":"https://avatars.githubusercontent.com/u/25107222?v=4","gravatar_id":"","url":"https://api.github.com/users/Logic-32","html_url":"https://github.com/Logic-32","followers_url":"https://api.github.com/users/Logic-32/followers","following_url":"https://api.github.com/users/Logic-32/following{/other_user}","gists_url":"https://api.github.com/users/Logic-32/gists{/gist_id}","starred_url":"https://api.github.com/users/Logic-32/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Logic-32/subscriptions","organizations_url":"https://api.github.com/users/Logic-32/orgs","repos_url":"https://api.github.com/users/Logic-32/repos","events_url":"https://api.github.com/users/Logic-32/events{/privacy}","received_events_url":"https://api.github.com/users/Logic-32/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-04T22:53:26Z","updated_at":"2019-04-04T22:53:26Z","author_association":"CONTRIBUTOR","body":"So focus my changes on ZipkinHttpCollector instead of ElasticsearchSpanConsumer?  That definitely seems like a plausible thing to attempt.  I'm thinking just have it wrap whatever Collector it gets in one which uses the ExecutorService to throttle things still.  Then put the AutoConfig properties for queue size/etc... under `zipkin.collector.http`?  The only catch with doing that is, I'm not sure how I'd make sure the number of requests the Collector can attempt doesn't get out of sync with `zipkin.elasticsearch.max-requests`?\r\n\r\n> The intent being that all storage engines can create a well known error that can then be taken as a signal at the collector level to both retry the request that was dropped (ie: don't advance our cursor) and slow down.\r\n\r\nI take that as: if we are \"over capacity\", make sure Callback.onError() sets a status of 429 (Too Many Requests) on the HttpServerExchange (instead of 500) or something similar.  Does that sound reasonable?","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/480091675/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/480104333","html_url":"https://github.com/openzipkin/zipkin/issues/2481#issuecomment-480104333","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/2481","id":480104333,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4MDEwNDMzMw==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-05T00:00:10Z","updated_at":"2019-04-05T00:00:10Z","author_association":"MEMBER","body":"If we had a reliable signal, and we were acting on it in the server, and there was a smart way to flip the state to green, we could push it back yes.\r\n\r\nKeep in mind, the POST endpoint is async: the response is sent prior to the storage consumer. So there would be some non-synchronous delay sending that back (ex an atomic state variable checked before consuming the request).","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/480104333/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/480104854","html_url":"https://github.com/openzipkin/zipkin/issues/2481#issuecomment-480104854","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/2481","id":480104854,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4MDEwNDg1NA==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-05T00:03:06Z","updated_at":"2019-04-05T00:03:06Z","author_association":"MEMBER","body":"@Logic-32 any chance you can help us spend some synchronous time (pun intended) at our upcoming workshop to review any work you've done here? Eventhough the focus is UI, we can carve time (just grab a slot that works for you). https://cwiki.apache.org/confluence/display/ZIPKIN/2019-04-17+UX+workshop+and+Lens+GA+planning+at+LINE+Fukuoka","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/480104854/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/480125051","html_url":"https://github.com/openzipkin/zipkin/issues/2481#issuecomment-480125051","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/2481","id":480125051,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4MDEyNTA1MQ==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-05T02:10:59Z","updated_at":"2019-04-05T02:10:59Z","author_association":"MEMBER","body":"for you specifically I know you are only interested in http collector.\n\nas a project we have to maintain code for all collectors, so literally the\ncollector library is the best place to put relevant code imho.\n\nthe main concern is again exactly the same as the asynchronous reporter.\nyou have a bundling concern (which translates to how many spans per bulk\nrequest). above that you have a concern of how many simultaneous bulk\nrequests (that the semaphore should control).\n\nyou also want some other things like error handling to not drop spans etc.\nI would recommend splitting problems into parts this avoids a lot of\nrehashing as you notice the issue is just like many others and some of this\ntakes longer to rehash than code.\n\nOn Fri, Apr 5, 2019, 6:53 AM Logic-32 <notifications@github.com> wrote:\n\n> So focus my changes on ZipkinHttpCollector instead of\n> ElasticsearchSpanConsumer? That definitely seems like a plausible thing to\n> attempt. I'm thinking just have it wrap whatever Collector it gets in one\n> which uses the ExecutorService to throttle things still. Then put the\n> AutoConfig properties for queue size/etc... under zipkin.collector.http?\n> The only catch with doing that is, I'm not sure how I'd make sure the\n> number of requests the Collector can attempt doesn't get out of sync with\n> zipkin.elasticsearch.max-requests?\n>\n> The intent being that all storage engines can create a well known error\n> that can then be taken as a signal at the collector level to both retry the\n> request that was dropped (ie: don't advance our cursor) and slow down.\n>\n> I take that as: if we are \"over capacity\", make sure Callback.onError()\n> sets a status of 429 (Too Many Requests) on the HttpServerExchange (instead\n> of 500) or something similar. Does that sound reasonable?\n>\n> —\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/openzipkin/zipkin/issues/2481#issuecomment-480091675>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AAD616YoFUnJeptbh51CVPcPgSzJD4Jkks5vdoJogaJpZM4cZTlQ>\n> .\n>\n","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/480125051/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/480126286","html_url":"https://github.com/openzipkin/zipkin/issues/2481#issuecomment-480126286","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/2481","id":480126286,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4MDEyNjI4Ng==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-05T02:18:47Z","updated_at":"2019-04-05T02:18:47Z","author_association":"MEMBER","body":"ps if it helps you unlock..  in case you dont want to solve at the\nabstraction that is important for the project, you can disable our http\ncollector and write your own component. you can see how the autoconfig\nworks for this by looking at scribe here or zipkin-aws  for the kinesis or\nsqs collectors.\n\nfor here we have a lot of unfinished work to complete and you can see\nchange related to what you discuss in our PR queue. for example the Netflix\nrate limiter PR. many change like this become abandoned which is why I try\nto make a wiki this time to properly inventory things because sometimes\npeople forget common problems and explaining across N issues takes our time\naway.\n\nOn Fri, Apr 5, 2019, 10:11 AM Adrian Cole <adrian.f.cole@gmail.com> wrote:\n\n> for you specifically I know you are only interested in http collector.\n>\n> as a project we have to maintain code for all collectors, so literally the\n> collector library is the best place to put relevant code imho.\n>\n> the main concern is again exactly the same as the asynchronous reporter.\n> you have a bundling concern (which translates to how many spans per bulk\n> request). above that you have a concern of how many simultaneous bulk\n> requests (that the semaphore should control).\n>\n> you also want some other things like error handling to not drop spans etc.\n> I would recommend splitting problems into parts this avoids a lot of\n> rehashing as you notice the issue is just like many others and some of this\n> takes longer to rehash than code.\n>\n> On Fri, Apr 5, 2019, 6:53 AM Logic-32 <notifications@github.com> wrote:\n>\n>> So focus my changes on ZipkinHttpCollector instead of\n>> ElasticsearchSpanConsumer? That definitely seems like a plausible thing to\n>> attempt. I'm thinking just have it wrap whatever Collector it gets in one\n>> which uses the ExecutorService to throttle things still. Then put the\n>> AutoConfig properties for queue size/etc... under zipkin.collector.http?\n>> The only catch with doing that is, I'm not sure how I'd make sure the\n>> number of requests the Collector can attempt doesn't get out of sync with\n>> zipkin.elasticsearch.max-requests?\n>>\n>> The intent being that all storage engines can create a well known error\n>> that can then be taken as a signal at the collector level to both retry the\n>> request that was dropped (ie: don't advance our cursor) and slow down.\n>>\n>> I take that as: if we are \"over capacity\", make sure Callback.onError()\n>> sets a status of 429 (Too Many Requests) on the HttpServerExchange (instead\n>> of 500) or something similar. Does that sound reasonable?\n>>\n>> —\n>> You are receiving this because you commented.\n>> Reply to this email directly, view it on GitHub\n>> <https://github.com/openzipkin/zipkin/issues/2481#issuecomment-480091675>,\n>> or mute the thread\n>> <https://github.com/notifications/unsubscribe-auth/AAD616YoFUnJeptbh51CVPcPgSzJD4Jkks5vdoJogaJpZM4cZTlQ>\n>> .\n>>\n>\n","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/480126286/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/480217581","html_url":"https://github.com/openzipkin/zipkin/pull/2484#issuecomment-480217581","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/2484","id":480217581,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4MDIxNzU4MQ==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-05T09:53:58Z","updated_at":"2019-04-05T09:53:58Z","author_association":"MEMBER","body":"I am nearly done the hard parts. just have to implement query support for cassandra and cassandra v1. after that, it is easy","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/480217581/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/480287339","html_url":"https://github.com/openzipkin/zipkin/pull/2489#issuecomment-480287339","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/2489","id":480287339,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4MDI4NzMzOQ==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-05T14:04:15Z","updated_at":"2019-04-05T14:04:15Z","author_association":"MEMBER","body":"I verified this by building off the branch locally then running the angular example on FF, chrome and safari. cc @ewhauser \r\n\r\n## Building locally\r\n\r\nTo build and run the server from the currently checked out source, enter the following.\r\n```bash\r\n# Build the server and also make its dependencies\r\n$ ./mvnw -Dlicense.skip=true -DskipTests --also-make -pl zipkin-server clean install\r\n# Run the server\r\n$ java -jar ./zipkin-server/target/zipkin-server-*exec.jar\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/480287339/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/480302420","html_url":"https://github.com/openzipkin/zipkin/pull/2489#issuecomment-480302420","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/2489","id":480302420,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4MDMwMjQyMA==","user":{"login":"chlab","id":1931446,"node_id":"MDQ6VXNlcjE5MzE0NDY=","avatar_url":"https://avatars.githubusercontent.com/u/1931446?v=4","gravatar_id":"","url":"https://api.github.com/users/chlab","html_url":"https://github.com/chlab","followers_url":"https://api.github.com/users/chlab/followers","following_url":"https://api.github.com/users/chlab/following{/other_user}","gists_url":"https://api.github.com/users/chlab/gists{/gist_id}","starred_url":"https://api.github.com/users/chlab/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/chlab/subscriptions","organizations_url":"https://api.github.com/users/chlab/orgs","repos_url":"https://api.github.com/users/chlab/repos","events_url":"https://api.github.com/users/chlab/events{/privacy}","received_events_url":"https://api.github.com/users/chlab/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-05T14:45:11Z","updated_at":"2019-04-05T14:45:11Z","author_association":"NONE","body":"@adriancole thanks for fixing this. I'm coming from https://github.com/ewhauser/angular-tracing/issues/11 and just ran into that same problem. How do I update my docker image to get this fix? Or will this be released at some later date?","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/480302420/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/480454393","html_url":"https://github.com/openzipkin/zipkin/pull/2489#issuecomment-480454393","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/2489","id":480454393,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4MDQ1NDM5Mw==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-05T23:52:17Z","updated_at":"2019-04-05T23:52:17Z","author_association":"MEMBER","body":"@chlab this isn't released yet, but we will release something in the next few days.","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/480454393/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/480454565","html_url":"https://github.com/openzipkin/zipkin/pull/2489#issuecomment-480454565","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/2489","id":480454565,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4MDQ1NDU2NQ==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-05T23:53:47Z","updated_at":"2019-04-05T23:53:47Z","author_association":"MEMBER","body":"@chlab an option for you now is to \"java -jar\" the -exec jar here. http://oss.jfrog.org/oss-snapshot-local/io/zipkin/java/zipkin-server/2.12.8-SNAPSHOT/\r\n\r\nnote.. don't try until +45m from now the change just merge hasn't published, yet","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/480454565/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/480455491","html_url":"https://github.com/openzipkin/zipkin/pull/2482#issuecomment-480455491","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/2482","id":480455491,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4MDQ1NTQ5MQ==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-06T00:01:14Z","updated_at":"2019-04-06T00:01:14Z","author_association":"MEMBER","body":"thank you so much!","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/480455491/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/480465542","html_url":"https://github.com/openzipkin/zipkin/pull/2484#issuecomment-480465542","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/2484","id":480465542,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4MDQ2NTU0Mg==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-06T02:06:33Z","updated_at":"2019-04-09T05:32:13Z","author_association":"MEMBER","body":"@openzipkin/cassandra I'm a little stuck on the best way to model the remoteServiceName=X query.\r\n\r\nI'm thinking about adding this for the remote service index. only other option I can think of is adding a SASI field on spans of r_service. thoughts?\r\n\r\n\r\n```\r\nCREATE TABLE IF NOT EXISTS zipkin2.trace_by_service_remote_service (\r\n    service       text,             //-- service name, or blank to support queries without service name\r\n    remote_service  text,             //-- remote service name\r\n    bucket        int,              //-- time bucket, calculated as ts/interval (in microseconds), for some pre-configured interval like 1 day.\r\n    ts            timeuuid,         //-- start timestamp of the span, truncated to millisecond precision\r\n    trace_id      text,             //-- trace ID\r\n    PRIMARY KEY ((service, remote_service, bucket), ts)\r\n)\r\n   WITH CLUSTERING ORDER BY (ts DESC)\r\n    AND compaction = {'class': 'org.apache.cassandra.db.compaction.TimeWindowCompactionStrategy'}\r\n    AND default_time_to_live =  259200\r\n    AND gc_grace_seconds = 3600\r\n    AND read_repair_chance = 0\r\n    AND dclocal_read_repair_chance = 0\r\n    AND speculative_retry = '95percentile'\r\n    AND comment = 'Secondary table for looking up a trace by remote service name. service column may be blank (when only looking up by remote_service). bucket column adds time bucketing to the partition key, values are microseconds rounded to a pre-configured interval (typically one day). ts column is start timestamp of the span as time-uuid, truncated to millisecond precision.';\r\n```\r\nNote: this would be in addition to [trace_by_service_span](https://github.com/openzipkin/zipkin/blob/master/zipkin-storage/cassandra/src/main/resources/zipkin2-schema-upgrade-1.cql), and require a client-side join if other parameters are sent (similar to how we do with annotation query).\r\n\r\nAnother option is to extend trace_by_service_span multiplying rows there by remote service name. This would be simpler to query... Not sure what's better? throwing this out to get feedback.","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/480465542/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/480471284","html_url":"https://github.com/openzipkin/zipkin/issues/2486#issuecomment-480471284","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/2486","id":480471284,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4MDQ3MTI4NA==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-06T03:46:11Z","updated_at":"2019-04-06T03:46:11Z","author_association":"MEMBER","body":"please try zipkin 2.12.8!","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/480471284/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/480472840","html_url":"https://github.com/openzipkin/zipkin/issues/2481#issuecomment-480472840","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/2481","id":480472840,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4MDQ3Mjg0MA==","user":{"login":"Logic-32","id":25107222,"node_id":"MDQ6VXNlcjI1MTA3MjIy","avatar_url":"https://avatars.githubusercontent.com/u/25107222?v=4","gravatar_id":"","url":"https://api.github.com/users/Logic-32","html_url":"https://github.com/Logic-32","followers_url":"https://api.github.com/users/Logic-32/followers","following_url":"https://api.github.com/users/Logic-32/following{/other_user}","gists_url":"https://api.github.com/users/Logic-32/gists{/gist_id}","starred_url":"https://api.github.com/users/Logic-32/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Logic-32/subscriptions","organizations_url":"https://api.github.com/users/Logic-32/orgs","repos_url":"https://api.github.com/users/Logic-32/repos","events_url":"https://api.github.com/users/Logic-32/events{/privacy}","received_events_url":"https://api.github.com/users/Logic-32/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-06T04:19:36Z","updated_at":"2019-04-12T21:53:26Z","author_association":"CONTRIBUTOR","body":"> Keep in mind, the POST endpoint is async: the response is sent prior to the storage consumer. So there would be some non-synchronous delay sending that back (ex an atomic state variable checked before consuming the request).\r\n\r\nTrue, it is async.  But the determination of whether we're over capacity (at least according to the current Semaphore implementation) is made before things actually go async.  So sending a 429 is still possible.\r\n\r\n> ... any chance you can help us spend some synchronous time (pun intended) at our upcoming workshop ...\r\n\r\nI'm UTC-6 and I see you have 10:30 picked out for this?  ~~15:30 would be the earliest I could do and hope that work doesn't get in my way.  So basically, I'd like to help but would need to be awake to do so ;)~~ (Edit: 10:30 am = 7:30 pm, was looking at wrong time conversion earlier; no promise on making this time but I'll try)\r\n\r\n> for here we have a lot of unfinished work to complete and you can see\r\nchange related to what you discuss in our PR queue. for example the Netflix\r\nrate limiter PR. many change like this become abandoned which is why I try\r\nto make a wiki this time to properly inventory things because sometimes\r\npeople forget common problems and explaining across N issues takes our time\r\naway.\r\n\r\nThank you for reminding me to go have a look at those!  I didn't realize work was already being done on this since nothing was called out in the other issue.  Both #2169 and #2166 are definitely \"stepping on my toes\" (or me theirs, but the point remains).  I left a comment on https://github.com/openzipkin/zipkin/pull/2166/commits/3ba76c255febdf115a02dd1c26264a6ca3f4394b#r272783016, hopefully we can work to come up with a mutual solution.\r\n\r\n> the main concern is again exactly the same as the asynchronous reporter.\r\nyou have a bundling concern (which translates to how many spans per bulk\r\nrequest). above that you have a concern of how many simultaneous bulk\r\nrequests (that the semaphore should control).\r\n>\r\n> you also want some other things like error handling to not drop spans etc.\r\nI would recommend splitting problems into parts this avoids a lot of\r\nrehashing as you notice the issue is just like many others and some of this\r\ntakes longer to rehash than code.\r\n\r\nIf it helps ease your concerns, I could always have the Queue default to a size of 0.  Then, the ExecutorService would act exactly like the Semaphore with the exception of it not being in HttpCall but a higher layer that is probably more appropriate.  Outside of that, I definitely agree there are potentially many issues here.  Hopefully collaborating on one of the above mentioned pull requests will result in something more palatable.  Either way, I will try to help with the [wiki page](https://cwiki.apache.org/confluence/display/ZIPKIN/Collector+surge+and+error+handling) you put together for this and the workshop as best I can.  But I'm afraid I don't have the capacity to assist with much outside of the spike load issue (meaning no push back to try and throttle things on the Reporter side) outside of assisting in integration with the other existing pull requests.","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/480472840/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/480473038","html_url":"https://github.com/openzipkin/zipkin/issues/2481#issuecomment-480473038","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/2481","id":480473038,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4MDQ3MzAzOA==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-06T04:24:23Z","updated_at":"2019-04-06T04:24:23Z","author_association":"MEMBER","body":"thanks for all the notes. I wasn't sure about the timezone so just chose\narbitrarily. we can move it to later. when you get a wiki ID reply back and\nI'll add you edit access. Thanks for taking the time to survey things and\nrespond back so much.\n\nOn Sat, Apr 6, 2019 at 12:19 PM Logic-32 <notifications@github.com> wrote:\n\n> Keep in mind, the POST endpoint is async: the response is sent prior to\n> the storage consumer. So there would be some non-synchronous delay sending\n> that back (ex an atomic state variable checked before consuming the\n> request).\n>\n> True, it is async. But the determination of whether we're over capacity\n> (at least according to the current Semaphore implementation) is made before\n> things actually go async. So sending a 429 is still possible.\n>\n> ... any chance you can help us spend some synchronous time (pun intended)\n> at our upcoming workshop ...\n>\n> I'm UTC-6 and I see you have 10:30 picked out for this? 15:30 would be the\n> earliest I could do and hope that work doesn't get in my way. So basically,\n> I'd like to help but would need to be awake to do so ;)\n>\n> for here we have a lot of unfinished work to complete and you can see\n> change related to what you discuss in our PR queue. for example the Netflix\n> rate limiter PR. many change like this become abandoned which is why I try\n> to make a wiki this time to properly inventory things because sometimes\n> people forget common problems and explaining across N issues takes our time\n> away.\n>\n> Thank you for reminding me to go have a look at those! I didn't realize\n> work was already being done on this since nothing was called out in the\n> other issue. Both #2169 <https://github.com/openzipkin/zipkin/pull/2169>\n> and #2166 <https://github.com/openzipkin/zipkin/pull/2166> are definitely\n> \"stepping on my toes\" (or me theirs, but the point remains). I left a\n> comment on 3ba76c2#r272783016\n> <https://github.com/openzipkin/zipkin/commit/3ba76c255febdf115a02dd1c26264a6ca3f4394b#r272783016>,\n> hopefully we can work to come up with a mutual solution.\n>\n> the main concern is again exactly the same as the asynchronous reporter.\n> you have a bundling concern (which translates to how many spans per bulk\n> request). above that you have a concern of how many simultaneous bulk\n> requests (that the semaphore should control).\n>\n> you also want some other things like error handling to not drop spans etc.\n> I would recommend splitting problems into parts this avoids a lot of\n> rehashing as you notice the issue is just like many others and some of this\n> takes longer to rehash than code.\n>\n> If it helps ease your concerns, I could always have the Queue default to a\n> size of 0. Then, the ExecutorService would act exactly like the Semaphore\n> with the exception of it not being in HttpCall but a higher layer that is\n> probably more appropriate. Outside of that, I definitely agree there are\n> potentially many issues here. Hopefully collaborating on one of the above\n> mentioned pull requests will result in something more palatable. Either\n> way, I will try to help with the wiki page\n> <https://cwiki.apache.org/confluence/display/ZIPKIN/Collector+surge+and+error+handling>\n> you put together for this and the workshop as best I can. But I'm afraid I\n> don't have the capacity to assist with much outside of the spike load issue\n> (meaning no push back to try and throttle things on the Reporter side)\n> outside of assisting in integration with the other existing pull requests.\n>\n> —\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/openzipkin/zipkin/issues/2481#issuecomment-480472840>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AAD6196dmkKBuoDgugJmACXlDf0jATXkks5veCBZgaJpZM4cZTlQ>\n> .\n>\n","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/480473038/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/480478837","html_url":"https://github.com/openzipkin/zipkin/pull/2166#issuecomment-480478837","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/2166","id":480478837,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4MDQ3ODgzNw==","user":{"login":"malonso1976","id":6059834,"node_id":"MDQ6VXNlcjYwNTk4MzQ=","avatar_url":"https://avatars.githubusercontent.com/u/6059834?v=4","gravatar_id":"","url":"https://api.github.com/users/malonso1976","html_url":"https://github.com/malonso1976","followers_url":"https://api.github.com/users/malonso1976/followers","following_url":"https://api.github.com/users/malonso1976/following{/other_user}","gists_url":"https://api.github.com/users/malonso1976/gists{/gist_id}","starred_url":"https://api.github.com/users/malonso1976/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/malonso1976/subscriptions","organizations_url":"https://api.github.com/users/malonso1976/orgs","repos_url":"https://api.github.com/users/malonso1976/repos","events_url":"https://api.github.com/users/malonso1976/events{/privacy}","received_events_url":"https://api.github.com/users/malonso1976/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-06T06:30:58Z","updated_at":"2019-04-06T06:30:58Z","author_association":"NONE","body":"Hi,\n  I submitted 2 pr. The first one  #2166\n<https://github.com/openzipkin/zipkin/pull/2166> is our current fix in our\nproduction environment, but it does not protect http api span feed.\n  The second one #2169 <https://github.com/openzipkin/zipkin/pull/2169> is\nnot tested properly and surely will need some fix. Let me review it next\nweek and we can talk about what needs to be adjusted and explain the ideas\nbehind the pr  and also regarding Kafka message consumption which I am sure\nis not well done.\n\n  Regarding the fork question, feel free to fork any branch and I will have\na look at your contribution\n\nKind regards,\n\nMariano\n\nEl El sáb, 6 abr 2019 a las 6:07, Logic-32 <notifications@github.com>\nescribió:\n\n> *@Logic-32* commented on this pull request.\n> ------------------------------\n>\n> In zipkin-collector/core/src/main/java/zipkin2/collector/Collector.java\n> <https://github.com/openzipkin/zipkin/pull/2166#discussion_r272783016>:\n>\n> > @@ -147,7 +156,11 @@ public void acceptSpans(\n>    }\n>\n>    void record(List<Span> sampled, Callback<Void> callback) {\n> -    storage.spanConsumer().accept(sampled).enqueue(callback);\n> +    if(blockOnStorage) {\n>\n> @malonso1976 <https://github.com/malonso1976>, @adriancole\n> <https://github.com/adriancole>, two things here:\n>\n>    1. The code here mimics the code in #2169\n>    <https://github.com/openzipkin/zipkin/pull/2169>, meaning that if both\n>    get merged a conflict will have to be resolved. The obvious resolution\n>    being to make multiple if-conditions. I would recommend that, instead of\n>    having any if-statements, we make use of some composition and wrap the\n>    spanConsumer() in some abstractions that do the appropriate things\n>    based on the settings.\n>    2. I think what I've been describing in #2166\n>    <https://github.com/openzipkin/zipkin/pull/2166> can actually help\n>    resolve the current complication of what to do with the Semaphore while\n>    also giving Kafka a hook to indicate it needs to slow down. Basically, the\n>    idea would be to us an ExecutorService with a custom\n>    RejectedExecutionHandler that would call any specific method to say slow\n>    down/retry. I'm not familiar with Kafka so I can't say what that'd look\n>    like. But it's an idea.\n>       - Further, it looks like the concurrency limiter in #2169\n>       <https://github.com/openzipkin/zipkin/pull/2169> already has an\n>       ExecutorService internally. If that were made a little more accessible to\n>       external configuration then we could directly share it for the purposes of\n>       pushing back on Kafka and making use of Netflix's limiter\n>       - It would also give me a place to put a non-zero length queue for\n>       my issue (spike load in the HTTP Collector) but could probably default to 0\n>       for most other purposes.\n>\n> I may be a bit off-base with this comment. Especially since I'm not\n> entirely sure if there is intent to merge both this and the Netflix limiter\n> eventually or just one of them. I figured I'd at least point out the\n> conflict at the very least and hope the ExecutorService could help out.\n>\n> @malonso1976 <https://github.com/malonso1976>, if you don't mind, I could\n> checkout (or fork) this branch and make the change so you could see what it\n> would look like. As I have it implemented (locally) it already separates\n> bulk indexing requests from GET requests so there are no load conflicts\n> there. Which you mentioned as a problem and I've seen myself as well.\n>\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/openzipkin/zipkin/pull/2166#discussion_r272783016>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AFx3OocsFo_ecmVp9i_QJdW2G1sBjrPZks5veB18gaJpZM4V30Tb>\n> .\n>\n","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/480478837/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/481069163","html_url":"https://github.com/openzipkin/zipkin/issues/2451#issuecomment-481069163","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/2451","id":481069163,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4MTA2OTE2Mw==","user":{"login":"zeagord","id":4723376,"node_id":"MDQ6VXNlcjQ3MjMzNzY=","avatar_url":"https://avatars.githubusercontent.com/u/4723376?v=4","gravatar_id":"","url":"https://api.github.com/users/zeagord","html_url":"https://github.com/zeagord","followers_url":"https://api.github.com/users/zeagord/followers","following_url":"https://api.github.com/users/zeagord/following{/other_user}","gists_url":"https://api.github.com/users/zeagord/gists{/gist_id}","starred_url":"https://api.github.com/users/zeagord/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zeagord/subscriptions","organizations_url":"https://api.github.com/users/zeagord/orgs","repos_url":"https://api.github.com/users/zeagord/repos","events_url":"https://api.github.com/users/zeagord/events{/privacy}","received_events_url":"https://api.github.com/users/zeagord/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-09T01:44:19Z","updated_at":"2019-04-09T01:44:19Z","author_association":"MEMBER","body":"I think it is nice to use the css frameworks such as semantic-ui or material-ui. It will quicken the development and visually pleasing as well. Let me know if you need any help from my end.","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/481069163/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/481081400","html_url":"https://github.com/openzipkin/zipkin/pull/2030#issuecomment-481081400","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/2030","id":481081400,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4MTA4MTQwMA==","user":{"login":"shakuzen","id":8924140,"node_id":"MDQ6VXNlcjg5MjQxNDA=","avatar_url":"https://avatars.githubusercontent.com/u/8924140?v=4","gravatar_id":"","url":"https://api.github.com/users/shakuzen","html_url":"https://github.com/shakuzen","followers_url":"https://api.github.com/users/shakuzen/followers","following_url":"https://api.github.com/users/shakuzen/following{/other_user}","gists_url":"https://api.github.com/users/shakuzen/gists{/gist_id}","starred_url":"https://api.github.com/users/shakuzen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/shakuzen/subscriptions","organizations_url":"https://api.github.com/users/shakuzen/orgs","repos_url":"https://api.github.com/users/shakuzen/repos","events_url":"https://api.github.com/users/shakuzen/events{/privacy}","received_events_url":"https://api.github.com/users/shakuzen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-09T02:52:04Z","updated_at":"2019-04-09T02:52:04Z","author_association":"MEMBER","body":"@WiFeng could you share the reasoning why you are outputting trace data to a log file rather than using a Zipkin reporter directly to Kafka?","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/481081400/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/481091352","html_url":"https://github.com/openzipkin/zipkin/pull/2328#issuecomment-481091352","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/2328","id":481091352,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4MTA5MTM1Mg==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-09T03:51:54Z","updated_at":"2019-04-09T03:51:54Z","author_association":"MEMBER","body":"ok I rebased this over master and did some refactoring in the last commit. \r\n\r\ncc @openzipkin/armeria \r\n\r\nA cheap test to show that the service mounted\r\n```bash\r\n$ curl -X POST localhost:9411/zipkin.proto3.SpanService/Report -H'Content-Type: application/grpc' -v\r\n*   Trying ::1...\r\n* TCP_NODELAY set\r\n* Connected to localhost (::1) port 9411 (#0)\r\n> POST /zipkin.proto3.SpanService/Report HTTP/1.1\r\n> Host: localhost:9411\r\n> User-Agent: curl/7.54.0\r\n> Accept: */*\r\n> Content-Type: application/grpc\r\n> \r\n< HTTP/1.1 200 OK\r\n< content-type: application/grpc+proto\r\n< grpc-status: 13\r\n< grpc-message: Half-closed without a request\r\n< content-length: 0\r\n< \r\n* Connection #0 to host localhost left intact\r\n```","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/481091352/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/481106859","html_url":"https://github.com/openzipkin/zipkin/pull/2328#issuecomment-481106859","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/2328","id":481106859,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4MTEwNjg1OQ==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-09T05:24:45Z","updated_at":"2019-04-09T05:24:45Z","author_association":"MEMBER","body":"here's the change to the proto https://github.com/openzipkin/zipkin-api/pull/59","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/481106859/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/481432401","html_url":"https://github.com/openzipkin/zipkin/issues/2481#issuecomment-481432401","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/2481","id":481432401,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4MTQzMjQwMQ==","user":{"login":"Logic-32","id":25107222,"node_id":"MDQ6VXNlcjI1MTA3MjIy","avatar_url":"https://avatars.githubusercontent.com/u/25107222?v=4","gravatar_id":"","url":"https://api.github.com/users/Logic-32","html_url":"https://github.com/Logic-32","followers_url":"https://api.github.com/users/Logic-32/followers","following_url":"https://api.github.com/users/Logic-32/following{/other_user}","gists_url":"https://api.github.com/users/Logic-32/gists{/gist_id}","starred_url":"https://api.github.com/users/Logic-32/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Logic-32/subscriptions","organizations_url":"https://api.github.com/users/Logic-32/orgs","repos_url":"https://api.github.com/users/Logic-32/repos","events_url":"https://api.github.com/users/Logic-32/events{/privacy}","received_events_url":"https://api.github.com/users/Logic-32/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-09T20:56:25Z","updated_at":"2019-04-09T20:56:25Z","author_association":"CONTRIBUTOR","body":"@adriancole, I just signed up as \"logic32\" :)","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/481432401/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/481475608","html_url":"https://github.com/openzipkin/zipkin/pull/2169#issuecomment-481475608","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/2169","id":481475608,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4MTQ3NTYwOA==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-09T23:21:44Z","updated_at":"2019-04-09T23:21:44Z","author_association":"MEMBER","body":"zipkin-collector is java 8 for this reason. we can shade some smaller deps\nif needed\n\nOn Wed, Apr 10, 2019, 7:53 AM Logic-32 <notifications@github.com> wrote:\n\n> *@Logic-32* commented on this pull request.\n> ------------------------------\n>\n> In pom.xml\n> <https://github.com/openzipkin/zipkin/pull/2169#discussion_r273735223>:\n>\n> > @@ -64,6 +64,7 @@\n>      <!-- Be careful to set this as a provided dep, so that it doesn't interfere with dependencies\n>           from other projects. For example, cassandra and spring boot set guava versions -->\n>      <guava.version>19.0</guava.version>\n> +    <netflix.concurrency.limits.version>0.0.49</netflix.concurrency.limits.version>\n>\n> Never mind, made a new artifact outside of zipkin-core so it's not subject\n> to this limitation. Affords me some other luxuries around not-shading\n> dependencies as well :)\n>\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/openzipkin/zipkin/pull/2169#discussion_r273735223>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AAD611-pgR227k6QeCjFbcjaT_sdWxVJks5vfRn8gaJpZM4WCgvm>\n> .\n>\n","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/481475608/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/481482792","html_url":"https://github.com/openzipkin/zipkin/issues/1794#issuecomment-481482792","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/1794","id":481482792,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4MTQ4Mjc5Mg==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-09T23:58:17Z","updated_at":"2019-04-09T23:58:17Z","author_association":"MEMBER","body":"one thing important here is how to handle trace query where remoteServiceName is present and serviceName is not.\r\n\r\nRight now, the span name list is dependent on service name. However the trace query against span name works even if there is no service name indicated. This has cost to it. I plan to follow the same model (allowing queries by remote service even lacking a local service name) unless someone mentions otherwise. Personally, I can see it both ways..\r\n\r\nOn one hand, the UI will never access this index because the field values are auto-complete and they are only auto-completed when a service name is present. It seems not great to optimize and incur cost on a type of query the UI won't make\r\n\r\nOn the other hand, we do support this same thing with span names and those using api directly may have a need.\r\n\r\nPersonally, I don't like supporting it because of the cost and additional indexing complexity. However, path of least surprise seems to allow \"remote service even lacking a local service name\", which is why I'd proceed that route unless someone says no.","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/481482792/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/481486495","html_url":"https://github.com/openzipkin/zipkin/issues/2481#issuecomment-481486495","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/2481","id":481486495,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4MTQ4NjQ5NQ==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-10T00:17:06Z","updated_at":"2019-04-10T00:17:06Z","author_association":"MEMBER","body":"thanks you now have access!\n\nOn Wed, Apr 10, 2019 at 4:56 AM Logic-32 <notifications@github.com> wrote:\n>\n> @adriancole, I just signed up as \"logic32\" :)\n>\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub, or mute the thread.\n","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/481486495/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/481493761","html_url":"https://github.com/openzipkin/zipkin/issues/2481#issuecomment-481493761","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/2481","id":481493761,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4MTQ5Mzc2MQ==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-10T01:02:19Z","updated_at":"2019-04-10T01:02:19Z","author_association":"MEMBER","body":"@Logic-32 PS your account is somewhat.. anonymous :)\r\n\r\nAs this repository will shortly move to the Apache Software Foundation (ASF) and I suspect you will end up with non-trivial code to merge, you should probably prepare by sending a contributor agreement to the ASF. If you have already done this in the past, no work to do. This is a once in life thing.\r\n\r\nIf you haven't already, easiest way is to download the ICLA template. After filling the [icla.pdf](https://www.apache.org/licenses/icla.pdf) with personal information correctly, print, sign, scan, and send it in mail as an attachment to the secretary (secretary@apache.org)\r\n\r\n","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/481493761/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/481494012","html_url":"https://github.com/openzipkin/zipkin/pull/2466#issuecomment-481494012","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/2466","id":481494012,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4MTQ5NDAxMg==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-10T01:03:49Z","updated_at":"2019-04-10T01:03:49Z","author_association":"MEMBER","body":"@ImFlog PS we are still waiting for another person to mention they will test this.\r\n\r\nAs this repository will shortly move to the Apache Software Foundation (ASF) and this is non-trivial code, you should probably prepare by sending a contributor agreement to the ASF. If you have already done this in the past, no work to do. This is a once in life thing.\r\n\r\nIf you haven't already, easiest way is to download the ICLA template. After filling the [icla.pdf](https://www.apache.org/licenses/icla.pdf) with personal information correctly, print, sign, scan, and send it in mail as an attachment to the secretary (secretary@apache.org)","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/481494012/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/481494075","html_url":"https://github.com/openzipkin/zipkin/pull/2466#issuecomment-481494075","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/2466","id":481494075,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4MTQ5NDA3NQ==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-10T01:04:11Z","updated_at":"2019-04-10T01:04:11Z","author_association":"MEMBER","body":"whoops I meant @IAMTJW not @ImFlog !","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/481494075/reactions","total_count":1,"+1":0,"-1":0,"laugh":1,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/481509176","html_url":"https://github.com/openzipkin/zipkin/pull/2484#issuecomment-481509176","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/2484","id":481509176,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4MTUwOTE3Ng==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-10T02:29:16Z","updated_at":"2019-04-10T02:29:16Z","author_association":"MEMBER","body":"cassandra 3.11.3+ done (except some unit tests which all around need to be added but saving for later)\r\nnext up cassandra 2.2+ impl (cassandra-v1)","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/481509176/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/481514677","html_url":"https://github.com/openzipkin/zipkin/pull/2466#issuecomment-481514677","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/2466","id":481514677,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4MTUxNDY3Nw==","user":{"login":"tian-junwei","id":5380488,"node_id":"MDQ6VXNlcjUzODA0ODg=","avatar_url":"https://avatars.githubusercontent.com/u/5380488?v=4","gravatar_id":"","url":"https://api.github.com/users/tian-junwei","html_url":"https://github.com/tian-junwei","followers_url":"https://api.github.com/users/tian-junwei/followers","following_url":"https://api.github.com/users/tian-junwei/following{/other_user}","gists_url":"https://api.github.com/users/tian-junwei/gists{/gist_id}","starred_url":"https://api.github.com/users/tian-junwei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tian-junwei/subscriptions","organizations_url":"https://api.github.com/users/tian-junwei/orgs","repos_url":"https://api.github.com/users/tian-junwei/repos","events_url":"https://api.github.com/users/tian-junwei/events{/privacy}","received_events_url":"https://api.github.com/users/tian-junwei/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-10T03:01:32Z","updated_at":"2019-04-10T03:01:32Z","author_association":"CONTRIBUTOR","body":"> whoops I meant @IAMTJW not @ImFlog !\r\n\r\nI  have send mail to secretary@apache.org","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/481514677/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/481521667","html_url":"https://github.com/openzipkin/zipkin/pull/2484#issuecomment-481521667","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/2484","id":481521667,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4MTUyMTY2Nw==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-10T03:44:58Z","updated_at":"2019-04-10T03:44:58Z","author_association":"MEMBER","body":"will merge this prior to the cassandra v1 impl as it was too hard to see what changed https://github.com/openzipkin/zipkin/pull/2492","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/481521667/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/481546588","html_url":"https://github.com/openzipkin/zipkin/pull/2484#issuecomment-481546588","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/2484","id":481546588,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4MTU0NjU4OA==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-10T06:06:26Z","updated_at":"2019-04-10T06:06:26Z","author_association":"MEMBER","body":"ok cassandra v1 \"done\" (same quality caveat)\r\n\r\nnow I will do a quality sweep including unit tests and README updates. if the build is green, it is testable","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/481546588/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/481681493","html_url":"https://github.com/openzipkin/zipkin/issues/2023#issuecomment-481681493","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/2023","id":481681493,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4MTY4MTQ5Mw==","user":{"login":"DanMelman","id":33516253,"node_id":"MDQ6VXNlcjMzNTE2MjUz","avatar_url":"https://avatars.githubusercontent.com/u/33516253?v=4","gravatar_id":"","url":"https://api.github.com/users/DanMelman","html_url":"https://github.com/DanMelman","followers_url":"https://api.github.com/users/DanMelman/followers","following_url":"https://api.github.com/users/DanMelman/following{/other_user}","gists_url":"https://api.github.com/users/DanMelman/gists{/gist_id}","starred_url":"https://api.github.com/users/DanMelman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DanMelman/subscriptions","organizations_url":"https://api.github.com/users/DanMelman/orgs","repos_url":"https://api.github.com/users/DanMelman/repos","events_url":"https://api.github.com/users/DanMelman/events{/privacy}","received_events_url":"https://api.github.com/users/DanMelman/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-10T13:03:08Z","updated_at":"2019-04-10T13:03:08Z","author_association":"NONE","body":"> The `tryAcquire()` approach with a timeout should not have any negative impact on those using the HTTP API as long as the timeout is kept reasonable. I'm not sure what reasonable is but <= 1m should be good. That'll give Elasticsearch enough time to flush some stuff but not cause a huge backup on HTTP buffer items.\r\n> \r\n> If I get a chance I'll try and it on my end and see what happens. No promises on timeline :(\r\n\r\nSorry for the delay, would you like me to open a PR on that small adjustment (I know it is not the full solution you're looking for, but it does help in the case of HTTP)?","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/481681493/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/481861629","html_url":"https://github.com/openzipkin/zipkin/issues/2255#issuecomment-481861629","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/2255","id":481861629,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4MTg2MTYyOQ==","user":{"login":"ivangfr","id":10564548,"node_id":"MDQ6VXNlcjEwNTY0NTQ4","avatar_url":"https://avatars.githubusercontent.com/u/10564548?v=4","gravatar_id":"","url":"https://api.github.com/users/ivangfr","html_url":"https://github.com/ivangfr","followers_url":"https://api.github.com/users/ivangfr/followers","following_url":"https://api.github.com/users/ivangfr/following{/other_user}","gists_url":"https://api.github.com/users/ivangfr/gists{/gist_id}","starred_url":"https://api.github.com/users/ivangfr/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ivangfr/subscriptions","organizations_url":"https://api.github.com/users/ivangfr/orgs","repos_url":"https://api.github.com/users/ivangfr/repos","events_url":"https://api.github.com/users/ivangfr/events{/privacy}","received_events_url":"https://api.github.com/users/ivangfr/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-10T20:55:06Z","updated_at":"2019-04-10T20:55:25Z","author_association":"NONE","body":"@duanhairuo @adriancole I am having the same problem. Did you guys find the reason and, mainly, how to fix it? Best,","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/481861629/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/481897826","html_url":"https://github.com/openzipkin/zipkin/issues/2023#issuecomment-481897826","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/2023","id":481897826,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4MTg5NzgyNg==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-10T22:55:12Z","updated_at":"2019-04-10T22:55:12Z","author_association":"MEMBER","body":"> The tryAcquire() approach with a timeout should not have any negative impact on those using the HTTP API as long as the timeout is kept reasonable. I'm not sure what reasonable is but <= 1m should be good. That'll give Elasticsearch enough time to flush some stuff but not cause a huge backup on HTTP buffer items.\n\nmore common use of http api is things like span reporters. if you look\nat the asyncreporter there is 1 thread in a blocking loop. if you\nblock this for 1 minute, unless it is very low traffic the buffer will\nfill and spans drop on that side. I don't think blocking clients is in\ngeneral something nice to do for telemetry systems. For example, to\nnot block clients led to storage being async, and that was a for\nconcerns much shorter than a second. keep this in mind!\n","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/481897826/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/481906626","html_url":"https://github.com/openzipkin/zipkin/issues/2255#issuecomment-481906626","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/2255","id":481906626,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4MTkwNjYyNg==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-10T23:25:49Z","updated_at":"2019-04-10T23:25:49Z","author_association":"MEMBER","body":"I have the same feedback. it isn't clear how this problem relates to the code in this repo. Please join gitter if you'd like to discuss  https://gitter.im/openzipkin/zipkin","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/481906626/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/481923762","html_url":"https://github.com/openzipkin/zipkin/pull/2328#issuecomment-481923762","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/2328","id":481923762,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4MTkyMzc2Mg==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-11T00:49:55Z","updated_at":"2019-04-11T00:49:55Z","author_association":"MEMBER","body":"the jar grew a lot again. will track things I can't control here in https://github.com/line/armeria/issues/1703\r\n\r\ncc @trustin @anuraaga \r\n\r\n```bash\r\n$ du -k zipkin-nogrpc.jar\r\n47396\tzipkin-nogrpc.jar\r\n$ du -k  zipkin-grpc.jar\r\n55840\tzipkin-grpc.jar\r\n```\r\n\r\ndiff zipkin-nogrpc.jars zipkin-grpc.jars\r\n```diff\r\n1a2\r\n> 3277212 BOOT-INF/lib/byte-buddy-1.9.12.jar\r\n9a11\r\n> 1424558 BOOT-INF/lib/protobuf-java-3.7.0.jar\r\n13a16\r\n> 1200130 BOOT-INF/lib/proto-google-common-protos-1.12.0.jar\r\n15a19\r\n> 825158 BOOT-INF/lib/grpc-services-1.19.0.jar\r\n16a21\r\n> 766263 BOOT-INF/lib/grpc-core-1.19.0.jar\r\n35a41\r\n> 327600 BOOT-INF/lib/opencensus-api-0.19.2.jar\r\n41a48\r\n> 241622 BOOT-INF/lib/gson-2.8.5.jar\r\n43c50\r\n< 226228 BOOT-INF/lib/zipkin-2.12.9-SNAPSHOT.jar\r\n---\r\n> 226229 BOOT-INF/lib/zipkin-2.12.9-SNAPSHOT.jar\r\n46a54\r\n> 142031 BOOT-INF/lib/armeria-grpc-0.83.0.jar\r\n51a60\r\n> 126747 BOOT-INF/lib/re2j-1.2.jar\r\n53a63\r\n> 113966 BOOT-INF/lib/protobuf-jackson-0.3.1.jar\r\n61a72\r\n> 68840 BOOT-INF/lib/protobuf-java-util-3.6.1.jar\r\n70a82\r\n> 39549 BOOT-INF/lib/grpc-stub-1.19.0.jar\r\n77a90\r\n> 29016 BOOT-INF/lib/grpc-context-1.19.0.jar\r\n89a103\r\n> 14961 BOOT-INF/lib/opencensus-contrib-grpc-metrics-0.19.2.jar\r\n91a106\r\n> 13694 BOOT-INF/lib/error_prone_annotations-2.2.0.jar\r\n98a114\r\n> 7614 BOOT-INF/lib/grpc-protobuf-lite-1.19.0.jar\r\n99a116,117\r\n> 6834 BOOT-INF/lib/zipkin-proto3-0.2.0.jar\r\n> 6684 BOOT-INF/lib/zipkin-collector-grpc-2.12.9-SNAPSHOT.jar\r\n105a124\r\n> 4994 BOOT-INF/lib/grpc-protobuf-1.19.0.jar\r\n108a128\r\n> 3448 BOOT-INF/lib/animal-sniffer-annotations-1.17.jar\r\n109a130\r\n> 2363 BOOT-INF/lib/zipkin-autoconfigure-collector-grpc-2.12.9-SNAPSHOT.jar\r\n```","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/481923762/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/481924022","html_url":"https://github.com/openzipkin/zipkin/pull/2328#issuecomment-481924022","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/2328","id":481924022,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4MTkyNDAyMg==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-11T00:51:23Z","updated_at":"2019-04-11T00:51:23Z","author_association":"MEMBER","body":"note that almost all of the big jars should be unnecessary as our service endpoint is well defined and can parse its own message without the help of google's proto libraries","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/481924022/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/481925286","html_url":"https://github.com/openzipkin/zipkin/pull/2328#issuecomment-481925286","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/2328","id":481925286,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4MTkyNTI4Ng==","user":{"login":"ewhauser","id":131389,"node_id":"MDQ6VXNlcjEzMTM4OQ==","avatar_url":"https://avatars.githubusercontent.com/u/131389?v=4","gravatar_id":"","url":"https://api.github.com/users/ewhauser","html_url":"https://github.com/ewhauser","followers_url":"https://api.github.com/users/ewhauser/followers","following_url":"https://api.github.com/users/ewhauser/following{/other_user}","gists_url":"https://api.github.com/users/ewhauser/gists{/gist_id}","starred_url":"https://api.github.com/users/ewhauser/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ewhauser/subscriptions","organizations_url":"https://api.github.com/users/ewhauser/orgs","repos_url":"https://api.github.com/users/ewhauser/repos","events_url":"https://api.github.com/users/ewhauser/events{/privacy}","received_events_url":"https://api.github.com/users/ewhauser/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-11T00:58:20Z","updated_at":"2019-04-11T00:58:20Z","author_association":"CONTRIBUTOR","body":"The way I was trying to do this previously was make the gRPC endpoint optional - similar to how the storage integrations work. Obviously, a tradeoff there.","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/481925286/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/481927172","html_url":"https://github.com/openzipkin/zipkin/pull/2328#issuecomment-481927172","issue_url":"https://api.github.com/repos/openzipkin/zipkin/issues/2328","id":481927172,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4MTkyNzE3Mg==","user":{"login":"codefromthecrypt","id":64215,"node_id":"MDQ6VXNlcjY0MjE1","avatar_url":"https://avatars.githubusercontent.com/u/64215?v=4","gravatar_id":"","url":"https://api.github.com/users/codefromthecrypt","html_url":"https://github.com/codefromthecrypt","followers_url":"https://api.github.com/users/codefromthecrypt/followers","following_url":"https://api.github.com/users/codefromthecrypt/following{/other_user}","gists_url":"https://api.github.com/users/codefromthecrypt/gists{/gist_id}","starred_url":"https://api.github.com/users/codefromthecrypt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codefromthecrypt/subscriptions","organizations_url":"https://api.github.com/users/codefromthecrypt/orgs","repos_url":"https://api.github.com/users/codefromthecrypt/repos","events_url":"https://api.github.com/users/codefromthecrypt/events{/privacy}","received_events_url":"https://api.github.com/users/codefromthecrypt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-11T01:09:02Z","updated_at":"2019-04-11T01:09:02Z","author_association":"MEMBER","body":"@ewhauser ack we could do that. I should have mentioned the goal I'm trying for here is to not pollute our maven namespace at all, and embed the grpc listener in the server impl. That way, layered integrations such as zipkin-aws and zipkin-gcp magically can use it without module composition (which would likely lead to more dep clashes)","reactions":{"url":"https://api.github.com/repos/openzipkin/zipkin/issues/comments/481927172/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]