[{"url":"https://api.github.com/repos/apache/cxf/issues/comments/648260657","html_url":"https://github.com/apache/cxf/pull/580#issuecomment-648260657","issue_url":"https://api.github.com/repos/apache/cxf/issues/580","id":648260657,"node_id":"MDEyOklzc3VlQ29tbWVudDY0ODI2MDY1Nw==","user":{"login":"coheigea","id":472162,"node_id":"MDQ6VXNlcjQ3MjE2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/472162?v=4","gravatar_id":"","url":"https://api.github.com/users/coheigea","html_url":"https://github.com/coheigea","followers_url":"https://api.github.com/users/coheigea/followers","following_url":"https://api.github.com/users/coheigea/following{/other_user}","gists_url":"https://api.github.com/users/coheigea/gists{/gist_id}","starred_url":"https://api.github.com/users/coheigea/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coheigea/subscriptions","organizations_url":"https://api.github.com/users/coheigea/orgs","repos_url":"https://api.github.com/users/coheigea/repos","events_url":"https://api.github.com/users/coheigea/events{/privacy}","received_events_url":"https://api.github.com/users/coheigea/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-06-23T16:05:26Z","updated_at":"2020-06-23T16:05:26Z","author_association":"CONTRIBUTOR","body":"Also, there is a merge conflict with CustomParameterTest.","reactions":{"url":"https://api.github.com/repos/apache/cxf/issues/comments/648260657/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/cxf/issues/comments/650703405","html_url":"https://github.com/apache/cxf/pull/681#issuecomment-650703405","issue_url":"https://api.github.com/repos/apache/cxf/issues/681","id":650703405,"node_id":"MDEyOklzc3VlQ29tbWVudDY1MDcwMzQwNQ==","user":{"login":"asdf913","id":2301325,"node_id":"MDQ6VXNlcjIzMDEzMjU=","avatar_url":"https://avatars.githubusercontent.com/u/2301325?v=4","gravatar_id":"","url":"https://api.github.com/users/asdf913","html_url":"https://github.com/asdf913","followers_url":"https://api.github.com/users/asdf913/followers","following_url":"https://api.github.com/users/asdf913/following{/other_user}","gists_url":"https://api.github.com/users/asdf913/gists{/gist_id}","starred_url":"https://api.github.com/users/asdf913/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/asdf913/subscriptions","organizations_url":"https://api.github.com/users/asdf913/orgs","repos_url":"https://api.github.com/users/asdf913/repos","events_url":"https://api.github.com/users/asdf913/events{/privacy}","received_events_url":"https://api.github.com/users/asdf913/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-06-28T06:14:55Z","updated_at":"2020-06-28T06:16:48Z","author_association":"NONE","body":"transform() method not found in **org.apache.cxf.ext.logging.AbstractLoggingInterceptor** in **org.apache.cxf:cxf-rt-features-logging:3.3.7** dependency\r\n\r\n![image](https://user-images.githubusercontent.com/2301325/85939615-a6c68280-b949-11ea-88d3-c33fc40d371e.png)\r\n","reactions":{"url":"https://api.github.com/repos/apache/cxf/issues/comments/650703405/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/cxf/issues/comments/650980582","html_url":"https://github.com/apache/cxf/pull/682#issuecomment-650980582","issue_url":"https://api.github.com/repos/apache/cxf/issues/682","id":650980582,"node_id":"MDEyOklzc3VlQ29tbWVudDY1MDk4MDU4Mg==","user":{"login":"coheigea","id":472162,"node_id":"MDQ6VXNlcjQ3MjE2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/472162?v=4","gravatar_id":"","url":"https://api.github.com/users/coheigea","html_url":"https://github.com/coheigea","followers_url":"https://api.github.com/users/coheigea/followers","following_url":"https://api.github.com/users/coheigea/following{/other_user}","gists_url":"https://api.github.com/users/coheigea/gists{/gist_id}","starred_url":"https://api.github.com/users/coheigea/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coheigea/subscriptions","organizations_url":"https://api.github.com/users/coheigea/orgs","repos_url":"https://api.github.com/users/coheigea/repos","events_url":"https://api.github.com/users/coheigea/events{/privacy}","received_events_url":"https://api.github.com/users/coheigea/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-06-29T07:21:08Z","updated_at":"2020-06-29T07:21:08Z","author_association":"CONTRIBUTOR","body":"There are some failing tests in systests/jaxrs to do with swagger still.","reactions":{"url":"https://api.github.com/repos/apache/cxf/issues/comments/650980582/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/cxf/issues/comments/651389614","html_url":"https://github.com/apache/cxf/pull/681#issuecomment-651389614","issue_url":"https://api.github.com/repos/apache/cxf/issues/681","id":651389614,"node_id":"MDEyOklzc3VlQ29tbWVudDY1MTM4OTYxNA==","user":{"login":"ashakirin","id":2254222,"node_id":"MDQ6VXNlcjIyNTQyMjI=","avatar_url":"https://avatars.githubusercontent.com/u/2254222?v=4","gravatar_id":"","url":"https://api.github.com/users/ashakirin","html_url":"https://github.com/ashakirin","followers_url":"https://api.github.com/users/ashakirin/followers","following_url":"https://api.github.com/users/ashakirin/following{/other_user}","gists_url":"https://api.github.com/users/ashakirin/gists{/gist_id}","starred_url":"https://api.github.com/users/ashakirin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ashakirin/subscriptions","organizations_url":"https://api.github.com/users/ashakirin/orgs","repos_url":"https://api.github.com/users/ashakirin/repos","events_url":"https://api.github.com/users/ashakirin/events{/privacy}","received_events_url":"https://api.github.com/users/ashakirin/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-06-29T21:53:56Z","updated_at":"2020-06-29T21:53:56Z","author_association":"CONTRIBUTOR","body":"> transform() method not found in **org.apache.cxf.ext.logging.AbstractLoggingInterceptor** in **org.apache.cxf:cxf-rt-features-logging:3.3.7** dependency\r\n\r\ntransform() method was recently introduced and exists only in 3.4.0-SNAPSHOT version\r\n","reactions":{"url":"https://api.github.com/repos/apache/cxf/issues/comments/651389614/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/cxf/issues/comments/651413265","html_url":"https://github.com/apache/cxf/pull/682#issuecomment-651413265","issue_url":"https://api.github.com/repos/apache/cxf/issues/682","id":651413265,"node_id":"MDEyOklzc3VlQ29tbWVudDY1MTQxMzI2NQ==","user":{"login":"reta","id":509855,"node_id":"MDQ6VXNlcjUwOTg1NQ==","avatar_url":"https://avatars.githubusercontent.com/u/509855?v=4","gravatar_id":"","url":"https://api.github.com/users/reta","html_url":"https://github.com/reta","followers_url":"https://api.github.com/users/reta/followers","following_url":"https://api.github.com/users/reta/following{/other_user}","gists_url":"https://api.github.com/users/reta/gists{/gist_id}","starred_url":"https://api.github.com/users/reta/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/reta/subscriptions","organizations_url":"https://api.github.com/users/reta/orgs","repos_url":"https://api.github.com/users/reta/repos","events_url":"https://api.github.com/users/reta/events{/privacy}","received_events_url":"https://api.github.com/users/reta/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-06-29T23:03:15Z","updated_at":"2020-06-29T23:03:15Z","author_association":"MEMBER","body":"Thanks @coheigea, on it, Swagger is never easy :-)","reactions":{"url":"https://api.github.com/repos/apache/cxf/issues/comments/651413265/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/cxf/issues/comments/651424816","html_url":"https://github.com/apache/cxf/pull/682#issuecomment-651424816","issue_url":"https://api.github.com/repos/apache/cxf/issues/682","id":651424816,"node_id":"MDEyOklzc3VlQ29tbWVudDY1MTQyNDgxNg==","user":{"login":"reta","id":509855,"node_id":"MDQ6VXNlcjUwOTg1NQ==","avatar_url":"https://avatars.githubusercontent.com/u/509855?v=4","gravatar_id":"","url":"https://api.github.com/users/reta","html_url":"https://github.com/reta","followers_url":"https://api.github.com/users/reta/followers","following_url":"https://api.github.com/users/reta/following{/other_user}","gists_url":"https://api.github.com/users/reta/gists{/gist_id}","starred_url":"https://api.github.com/users/reta/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/reta/subscriptions","organizations_url":"https://api.github.com/users/reta/orgs","repos_url":"https://api.github.com/users/reta/repos","events_url":"https://api.github.com/users/reta/events{/privacy}","received_events_url":"https://api.github.com/users/reta/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-06-29T23:40:55Z","updated_at":"2020-06-29T23:40:55Z","author_association":"MEMBER","body":"Ok, figured out, we need to wait for Swagger `1.6.2` release to migrate to Jackson `2.11.x` ","reactions":{"url":"https://api.github.com/repos/apache/cxf/issues/comments/651424816/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/cxf/issues/comments/651683537","html_url":"https://github.com/apache/cxf/pull/681#issuecomment-651683537","issue_url":"https://api.github.com/repos/apache/cxf/issues/681","id":651683537,"node_id":"MDEyOklzc3VlQ29tbWVudDY1MTY4MzUzNw==","user":{"login":"asdf913","id":2301325,"node_id":"MDQ6VXNlcjIzMDEzMjU=","avatar_url":"https://avatars.githubusercontent.com/u/2301325?v=4","gravatar_id":"","url":"https://api.github.com/users/asdf913","html_url":"https://github.com/asdf913","followers_url":"https://api.github.com/users/asdf913/followers","following_url":"https://api.github.com/users/asdf913/following{/other_user}","gists_url":"https://api.github.com/users/asdf913/gists{/gist_id}","starred_url":"https://api.github.com/users/asdf913/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/asdf913/subscriptions","organizations_url":"https://api.github.com/users/asdf913/orgs","repos_url":"https://api.github.com/users/asdf913/repos","events_url":"https://api.github.com/users/asdf913/events{/privacy}","received_events_url":"https://api.github.com/users/asdf913/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-06-30T09:40:14Z","updated_at":"2020-06-30T09:40:14Z","author_association":"NONE","body":"Thanks you for your work!!","reactions":{"url":"https://api.github.com/repos/apache/cxf/issues/comments/651683537/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/cxf/issues/comments/658595891","html_url":"https://github.com/apache/cxf/pull/672#issuecomment-658595891","issue_url":"https://api.github.com/repos/apache/cxf/issues/672","id":658595891,"node_id":"MDEyOklzc3VlQ29tbWVudDY1ODU5NTg5MQ==","user":{"login":"coheigea","id":472162,"node_id":"MDQ6VXNlcjQ3MjE2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/472162?v=4","gravatar_id":"","url":"https://api.github.com/users/coheigea","html_url":"https://github.com/coheigea","followers_url":"https://api.github.com/users/coheigea/followers","following_url":"https://api.github.com/users/coheigea/following{/other_user}","gists_url":"https://api.github.com/users/coheigea/gists{/gist_id}","starred_url":"https://api.github.com/users/coheigea/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coheigea/subscriptions","organizations_url":"https://api.github.com/users/coheigea/orgs","repos_url":"https://api.github.com/users/coheigea/repos","events_url":"https://api.github.com/users/coheigea/events{/privacy}","received_events_url":"https://api.github.com/users/coheigea/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-15T07:26:13Z","updated_at":"2020-07-15T07:26:13Z","author_association":"CONTRIBUTOR","body":"@amarkevich Can you rebase the branch off master?","reactions":{"url":"https://api.github.com/repos/apache/cxf/issues/comments/658595891/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/cxf/issues/comments/658639695","html_url":"https://github.com/apache/cxf/pull/672#issuecomment-658639695","issue_url":"https://api.github.com/repos/apache/cxf/issues/672","id":658639695,"node_id":"MDEyOklzc3VlQ29tbWVudDY1ODYzOTY5NQ==","user":{"login":"amarkevich","id":62415,"node_id":"MDQ6VXNlcjYyNDE1","avatar_url":"https://avatars.githubusercontent.com/u/62415?v=4","gravatar_id":"","url":"https://api.github.com/users/amarkevich","html_url":"https://github.com/amarkevich","followers_url":"https://api.github.com/users/amarkevich/followers","following_url":"https://api.github.com/users/amarkevich/following{/other_user}","gists_url":"https://api.github.com/users/amarkevich/gists{/gist_id}","starred_url":"https://api.github.com/users/amarkevich/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/amarkevich/subscriptions","organizations_url":"https://api.github.com/users/amarkevich/orgs","repos_url":"https://api.github.com/users/amarkevich/repos","events_url":"https://api.github.com/users/amarkevich/events{/privacy}","received_events_url":"https://api.github.com/users/amarkevich/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-15T08:55:18Z","updated_at":"2020-07-15T08:55:18Z","author_association":"CONTRIBUTOR","body":"@coheigea done","reactions":{"url":"https://api.github.com/repos/apache/cxf/issues/comments/658639695/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/cxf/issues/comments/658878762","html_url":"https://github.com/apache/cxf/pull/672#issuecomment-658878762","issue_url":"https://api.github.com/repos/apache/cxf/issues/672","id":658878762,"node_id":"MDEyOklzc3VlQ29tbWVudDY1ODg3ODc2Mg==","user":{"login":"coheigea","id":472162,"node_id":"MDQ6VXNlcjQ3MjE2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/472162?v=4","gravatar_id":"","url":"https://api.github.com/users/coheigea","html_url":"https://github.com/coheigea","followers_url":"https://api.github.com/users/coheigea/followers","following_url":"https://api.github.com/users/coheigea/following{/other_user}","gists_url":"https://api.github.com/users/coheigea/gists{/gist_id}","starred_url":"https://api.github.com/users/coheigea/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coheigea/subscriptions","organizations_url":"https://api.github.com/users/coheigea/orgs","repos_url":"https://api.github.com/users/coheigea/repos","events_url":"https://api.github.com/users/coheigea/events{/privacy}","received_events_url":"https://api.github.com/users/coheigea/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-15T16:52:21Z","updated_at":"2020-07-15T16:52:21Z","author_association":"CONTRIBUTOR","body":"@ffang  - Any objections?","reactions":{"url":"https://api.github.com/repos/apache/cxf/issues/comments/658878762/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/cxf/issues/comments/658945511","html_url":"https://github.com/apache/cxf/pull/672#issuecomment-658945511","issue_url":"https://api.github.com/repos/apache/cxf/issues/672","id":658945511,"node_id":"MDEyOklzc3VlQ29tbWVudDY1ODk0NTUxMQ==","user":{"login":"ffang","id":663583,"node_id":"MDQ6VXNlcjY2MzU4Mw==","avatar_url":"https://avatars.githubusercontent.com/u/663583?v=4","gravatar_id":"","url":"https://api.github.com/users/ffang","html_url":"https://github.com/ffang","followers_url":"https://api.github.com/users/ffang/followers","following_url":"https://api.github.com/users/ffang/following{/other_user}","gists_url":"https://api.github.com/users/ffang/gists{/gist_id}","starred_url":"https://api.github.com/users/ffang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ffang/subscriptions","organizations_url":"https://api.github.com/users/ffang/orgs","repos_url":"https://api.github.com/users/ffang/repos","events_url":"https://api.github.com/users/ffang/events{/privacy}","received_events_url":"https://api.github.com/users/ffang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-15T19:00:15Z","updated_at":"2020-07-15T19:00:15Z","author_association":"CONTRIBUTOR","body":"@amarkevich @coheigea \r\nSorry for the late reply.\r\n\r\nI tested OSGi related tests both with JDK8 and 11, all passed, so I think we are good to go!\r\n\r\nFreeman","reactions":{"url":"https://api.github.com/repos/apache/cxf/issues/comments/658945511/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/cxf/issues/comments/659714742","html_url":"https://github.com/apache/cxf/pull/683#issuecomment-659714742","issue_url":"https://api.github.com/repos/apache/cxf/issues/683","id":659714742,"node_id":"MDEyOklzc3VlQ29tbWVudDY1OTcxNDc0Mg==","user":{"login":"reta","id":509855,"node_id":"MDQ6VXNlcjUwOTg1NQ==","avatar_url":"https://avatars.githubusercontent.com/u/509855?v=4","gravatar_id":"","url":"https://api.github.com/users/reta","html_url":"https://github.com/reta","followers_url":"https://api.github.com/users/reta/followers","following_url":"https://api.github.com/users/reta/following{/other_user}","gists_url":"https://api.github.com/users/reta/gists{/gist_id}","starred_url":"https://api.github.com/users/reta/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/reta/subscriptions","organizations_url":"https://api.github.com/users/reta/orgs","repos_url":"https://api.github.com/users/reta/repos","events_url":"https://api.github.com/users/reta/events{/privacy}","received_events_url":"https://api.github.com/users/reta/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-16T22:41:31Z","updated_at":"2020-07-16T22:41:31Z","author_association":"MEMBER","body":"Thanks a lot, @andymc12 !","reactions":{"url":"https://api.github.com/repos/apache/cxf/issues/comments/659714742/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/cxf/issues/comments/663380207","html_url":"https://github.com/apache/cxf/pull/685#issuecomment-663380207","issue_url":"https://api.github.com/repos/apache/cxf/issues/685","id":663380207,"node_id":"MDEyOklzc3VlQ29tbWVudDY2MzM4MDIwNw==","user":{"login":"coheigea","id":472162,"node_id":"MDQ6VXNlcjQ3MjE2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/472162?v=4","gravatar_id":"","url":"https://api.github.com/users/coheigea","html_url":"https://github.com/coheigea","followers_url":"https://api.github.com/users/coheigea/followers","following_url":"https://api.github.com/users/coheigea/following{/other_user}","gists_url":"https://api.github.com/users/coheigea/gists{/gist_id}","starred_url":"https://api.github.com/users/coheigea/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coheigea/subscriptions","organizations_url":"https://api.github.com/users/coheigea/orgs","repos_url":"https://api.github.com/users/coheigea/repos","events_url":"https://api.github.com/users/coheigea/events{/privacy}","received_events_url":"https://api.github.com/users/coheigea/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-07-24T07:11:54Z","updated_at":"2020-07-24T07:11:54Z","author_association":"CONTRIBUTOR","body":"I've submitted a PR to AMQ to fix the issue with Spring - https://issues.apache.org/jira/browse/AMQ-8009","reactions":{"url":"https://api.github.com/repos/apache/cxf/issues/comments/663380207/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/cxf/issues/comments/689880156","html_url":"https://github.com/apache/cxf/pull/692#issuecomment-689880156","issue_url":"https://api.github.com/repos/apache/cxf/issues/692","id":689880156,"node_id":"MDEyOklzc3VlQ29tbWVudDY4OTg4MDE1Ng==","user":{"login":"reta","id":509855,"node_id":"MDQ6VXNlcjUwOTg1NQ==","avatar_url":"https://avatars.githubusercontent.com/u/509855?v=4","gravatar_id":"","url":"https://api.github.com/users/reta","html_url":"https://github.com/reta","followers_url":"https://api.github.com/users/reta/followers","following_url":"https://api.github.com/users/reta/following{/other_user}","gists_url":"https://api.github.com/users/reta/gists{/gist_id}","starred_url":"https://api.github.com/users/reta/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/reta/subscriptions","organizations_url":"https://api.github.com/users/reta/orgs","repos_url":"https://api.github.com/users/reta/repos","events_url":"https://api.github.com/users/reta/events{/privacy}","received_events_url":"https://api.github.com/users/reta/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-09T23:38:42Z","updated_at":"2020-09-09T23:38:42Z","author_association":"MEMBER","body":"Thanks a lot for the review, @andymc12 !","reactions":{"url":"https://api.github.com/repos/apache/cxf/issues/comments/689880156/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/cxf/issues/comments/693418230","html_url":"https://github.com/apache/cxf/pull/691#issuecomment-693418230","issue_url":"https://api.github.com/repos/apache/cxf/issues/691","id":693418230,"node_id":"MDEyOklzc3VlQ29tbWVudDY5MzQxODIzMA==","user":{"login":"coheigea","id":472162,"node_id":"MDQ6VXNlcjQ3MjE2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/472162?v=4","gravatar_id":"","url":"https://api.github.com/users/coheigea","html_url":"https://github.com/coheigea","followers_url":"https://api.github.com/users/coheigea/followers","following_url":"https://api.github.com/users/coheigea/following{/other_user}","gists_url":"https://api.github.com/users/coheigea/gists{/gist_id}","starred_url":"https://api.github.com/users/coheigea/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coheigea/subscriptions","organizations_url":"https://api.github.com/users/coheigea/orgs","repos_url":"https://api.github.com/users/coheigea/repos","events_url":"https://api.github.com/users/coheigea/events{/privacy}","received_events_url":"https://api.github.com/users/coheigea/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-16T13:49:32Z","updated_at":"2020-09-16T13:49:32Z","author_association":"CONTRIBUTOR","body":"Thanks, but we have since updated to 4.1.52.Final.","reactions":{"url":"https://api.github.com/repos/apache/cxf/issues/comments/693418230/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/cxf/issues/comments/693439855","html_url":"https://github.com/apache/cxf/pull/693#issuecomment-693439855","issue_url":"https://api.github.com/repos/apache/cxf/issues/693","id":693439855,"node_id":"MDEyOklzc3VlQ29tbWVudDY5MzQzOTg1NQ==","user":{"login":"jbeckers","id":379626,"node_id":"MDQ6VXNlcjM3OTYyNg==","avatar_url":"https://avatars.githubusercontent.com/u/379626?v=4","gravatar_id":"","url":"https://api.github.com/users/jbeckers","html_url":"https://github.com/jbeckers","followers_url":"https://api.github.com/users/jbeckers/followers","following_url":"https://api.github.com/users/jbeckers/following{/other_user}","gists_url":"https://api.github.com/users/jbeckers/gists{/gist_id}","starred_url":"https://api.github.com/users/jbeckers/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jbeckers/subscriptions","organizations_url":"https://api.github.com/users/jbeckers/orgs","repos_url":"https://api.github.com/users/jbeckers/repos","events_url":"https://api.github.com/users/jbeckers/events{/privacy}","received_events_url":"https://api.github.com/users/jbeckers/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-16T14:23:01Z","updated_at":"2020-09-16T14:23:01Z","author_association":"CONTRIBUTOR","body":"Thanks!","reactions":{"url":"https://api.github.com/repos/apache/cxf/issues/comments/693439855/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/cxf/issues/comments/695909321","html_url":"https://github.com/apache/cxf/pull/695#issuecomment-695909321","issue_url":"https://api.github.com/repos/apache/cxf/issues/695","id":695909321,"node_id":"MDEyOklzc3VlQ29tbWVudDY5NTkwOTMyMQ==","user":{"login":"rmannibucau","id":1249546,"node_id":"MDQ6VXNlcjEyNDk1NDY=","avatar_url":"https://avatars.githubusercontent.com/u/1249546?v=4","gravatar_id":"","url":"https://api.github.com/users/rmannibucau","html_url":"https://github.com/rmannibucau","followers_url":"https://api.github.com/users/rmannibucau/followers","following_url":"https://api.github.com/users/rmannibucau/following{/other_user}","gists_url":"https://api.github.com/users/rmannibucau/gists{/gist_id}","starred_url":"https://api.github.com/users/rmannibucau/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmannibucau/subscriptions","organizations_url":"https://api.github.com/users/rmannibucau/orgs","repos_url":"https://api.github.com/users/rmannibucau/repos","events_url":"https://api.github.com/users/rmannibucau/events{/privacy}","received_events_url":"https://api.github.com/users/rmannibucau/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-21T05:36:42Z","updated_at":"2020-09-21T05:36:42Z","author_association":"CONTRIBUTOR","body":"@reta thanks for the review, fixed the last comment, think others are ok (already \"protected\" by the caller)","reactions":{"url":"https://api.github.com/repos/apache/cxf/issues/comments/695909321/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/cxf/issues/comments/696442516","html_url":"https://github.com/apache/cxf/pull/696#issuecomment-696442516","issue_url":"https://api.github.com/repos/apache/cxf/issues/696","id":696442516,"node_id":"MDEyOklzc3VlQ29tbWVudDY5NjQ0MjUxNg==","user":{"login":"reta","id":509855,"node_id":"MDQ6VXNlcjUwOTg1NQ==","avatar_url":"https://avatars.githubusercontent.com/u/509855?v=4","gravatar_id":"","url":"https://api.github.com/users/reta","html_url":"https://github.com/reta","followers_url":"https://api.github.com/users/reta/followers","following_url":"https://api.github.com/users/reta/following{/other_user}","gists_url":"https://api.github.com/users/reta/gists{/gist_id}","starred_url":"https://api.github.com/users/reta/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/reta/subscriptions","organizations_url":"https://api.github.com/users/reta/orgs","repos_url":"https://api.github.com/users/reta/repos","events_url":"https://api.github.com/users/reta/events{/privacy}","received_events_url":"https://api.github.com/users/reta/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-22T00:00:03Z","updated_at":"2020-09-22T00:00:16Z","author_association":"MEMBER","body":"Thanks a lot for contribution, @andymc12 ! It is indeed very difficult to review since by and large those are unrelated changes, it would be much appreciated to have them splitted, may be by:\r\n - TCK test fixes (we could refer to test suites directly, most recent build https://ci-builds.apache.org/job/CXF/job/CXF-JAXRS-TCK/66/artifact/JTreport/html/failed_gr.html)\r\n - performance improvements\r\n - other issues\r\n\r\nWDYT, does it make sense? ","reactions":{"url":"https://api.github.com/repos/apache/cxf/issues/comments/696442516/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/cxf/issues/comments/696994681","html_url":"https://github.com/apache/cxf/pull/696#issuecomment-696994681","issue_url":"https://api.github.com/repos/apache/cxf/issues/696","id":696994681,"node_id":"MDEyOklzc3VlQ29tbWVudDY5Njk5NDY4MQ==","user":{"login":"andymc12","id":21365299,"node_id":"MDQ6VXNlcjIxMzY1Mjk5","avatar_url":"https://avatars.githubusercontent.com/u/21365299?v=4","gravatar_id":"","url":"https://api.github.com/users/andymc12","html_url":"https://github.com/andymc12","followers_url":"https://api.github.com/users/andymc12/followers","following_url":"https://api.github.com/users/andymc12/following{/other_user}","gists_url":"https://api.github.com/users/andymc12/gists{/gist_id}","starred_url":"https://api.github.com/users/andymc12/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andymc12/subscriptions","organizations_url":"https://api.github.com/users/andymc12/orgs","repos_url":"https://api.github.com/users/andymc12/repos","events_url":"https://api.github.com/users/andymc12/events{/privacy}","received_events_url":"https://api.github.com/users/andymc12/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-22T21:34:37Z","updated_at":"2020-09-22T21:34:37Z","author_association":"CONTRIBUTOR","body":"Thanks @reta - I opened PRs #697 for the `hasEntity` TCK fixes and #698 for URITemplate and related processing changes.  I'll plan to use this PR for the `MessageImpl` performance improvement.","reactions":{"url":"https://api.github.com/repos/apache/cxf/issues/comments/696994681/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/cxf/issues/comments/698845557","html_url":"https://github.com/apache/cxf/pull/700#issuecomment-698845557","issue_url":"https://api.github.com/repos/apache/cxf/issues/700","id":698845557,"node_id":"MDEyOklzc3VlQ29tbWVudDY5ODg0NTU1Nw==","user":{"login":"elguardian","id":6625846,"node_id":"MDQ6VXNlcjY2MjU4NDY=","avatar_url":"https://avatars.githubusercontent.com/u/6625846?v=4","gravatar_id":"","url":"https://api.github.com/users/elguardian","html_url":"https://github.com/elguardian","followers_url":"https://api.github.com/users/elguardian/followers","following_url":"https://api.github.com/users/elguardian/following{/other_user}","gists_url":"https://api.github.com/users/elguardian/gists{/gist_id}","starred_url":"https://api.github.com/users/elguardian/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/elguardian/subscriptions","organizations_url":"https://api.github.com/users/elguardian/orgs","repos_url":"https://api.github.com/users/elguardian/repos","events_url":"https://api.github.com/users/elguardian/events{/privacy}","received_events_url":"https://api.github.com/users/elguardian/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-25T10:08:54Z","updated_at":"2020-09-25T10:08:54Z","author_association":"NONE","body":"this is under testing for integrating with wildfly","reactions":{"url":"https://api.github.com/repos/apache/cxf/issues/comments/698845557/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/cxf/issues/comments/702311356","html_url":"https://github.com/apache/cxf/pull/698#issuecomment-702311356","issue_url":"https://api.github.com/repos/apache/cxf/issues/698","id":702311356,"node_id":"MDEyOklzc3VlQ29tbWVudDcwMjMxMTM1Ng==","user":{"login":"andymc12","id":21365299,"node_id":"MDQ6VXNlcjIxMzY1Mjk5","avatar_url":"https://avatars.githubusercontent.com/u/21365299?v=4","gravatar_id":"","url":"https://api.github.com/users/andymc12","html_url":"https://github.com/andymc12","followers_url":"https://api.github.com/users/andymc12/followers","following_url":"https://api.github.com/users/andymc12/following{/other_user}","gists_url":"https://api.github.com/users/andymc12/gists{/gist_id}","starred_url":"https://api.github.com/users/andymc12/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andymc12/subscriptions","organizations_url":"https://api.github.com/users/andymc12/orgs","repos_url":"https://api.github.com/users/andymc12/repos","events_url":"https://api.github.com/users/andymc12/events{/privacy}","received_events_url":"https://api.github.com/users/andymc12/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-10-01T18:15:11Z","updated_at":"2020-10-01T18:15:11Z","author_association":"CONTRIBUTOR","body":"Rebased from master - was hoping that the force-push would kick off an integration build, but it doesn't seem to have... ","reactions":{"url":"https://api.github.com/repos/apache/cxf/issues/comments/702311356/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/cxf/issues/comments/702338787","html_url":"https://github.com/apache/cxf/pull/698#issuecomment-702338787","issue_url":"https://api.github.com/repos/apache/cxf/issues/698","id":702338787,"node_id":"MDEyOklzc3VlQ29tbWVudDcwMjMzODc4Nw==","user":{"login":"reta","id":509855,"node_id":"MDQ6VXNlcjUwOTg1NQ==","avatar_url":"https://avatars.githubusercontent.com/u/509855?v=4","gravatar_id":"","url":"https://api.github.com/users/reta","html_url":"https://github.com/reta","followers_url":"https://api.github.com/users/reta/followers","following_url":"https://api.github.com/users/reta/following{/other_user}","gists_url":"https://api.github.com/users/reta/gists{/gist_id}","starred_url":"https://api.github.com/users/reta/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/reta/subscriptions","organizations_url":"https://api.github.com/users/reta/orgs","repos_url":"https://api.github.com/users/reta/repos","events_url":"https://api.github.com/users/reta/events{/privacy}","received_events_url":"https://api.github.com/users/reta/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-10-01T19:06:28Z","updated_at":"2020-10-01T19:06:28Z","author_association":"MEMBER","body":"Sorry @andymc12, I haven't had time to review this PR yet (not forgotten), will do that shortly. The integration builds are not triggering right now since the CI server has changed the name (builds.apache.org -> ci-builds.apache.org), I don't have permissions to modify the repository settings to change webhook endpoints, @dkulp / @coheigea do you have admin rights, guys?","reactions":{"url":"https://api.github.com/repos/apache/cxf/issues/comments/702338787/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/cxf/issues/comments/702468584","html_url":"https://github.com/apache/cxf/pull/698#issuecomment-702468584","issue_url":"https://api.github.com/repos/apache/cxf/issues/698","id":702468584,"node_id":"MDEyOklzc3VlQ29tbWVudDcwMjQ2ODU4NA==","user":{"login":"andymc12","id":21365299,"node_id":"MDQ6VXNlcjIxMzY1Mjk5","avatar_url":"https://avatars.githubusercontent.com/u/21365299?v=4","gravatar_id":"","url":"https://api.github.com/users/andymc12","html_url":"https://github.com/andymc12","followers_url":"https://api.github.com/users/andymc12/followers","following_url":"https://api.github.com/users/andymc12/following{/other_user}","gists_url":"https://api.github.com/users/andymc12/gists{/gist_id}","starred_url":"https://api.github.com/users/andymc12/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andymc12/subscriptions","organizations_url":"https://api.github.com/users/andymc12/orgs","repos_url":"https://api.github.com/users/andymc12/repos","events_url":"https://api.github.com/users/andymc12/events{/privacy}","received_events_url":"https://api.github.com/users/andymc12/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-10-02T00:43:47Z","updated_at":"2020-10-02T00:43:47Z","author_association":"CONTRIBUTOR","body":"@reta - no worries - it's a fairly big change, so I wasn't expecting instant turnaround.  :)  Please let me know if you have any questions on these changes.  Thanks!","reactions":{"url":"https://api.github.com/repos/apache/cxf/issues/comments/702468584/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/cxf/issues/comments/702535049","html_url":"https://github.com/apache/cxf/pull/698#issuecomment-702535049","issue_url":"https://api.github.com/repos/apache/cxf/issues/698","id":702535049,"node_id":"MDEyOklzc3VlQ29tbWVudDcwMjUzNTA0OQ==","user":{"login":"coheigea","id":472162,"node_id":"MDQ6VXNlcjQ3MjE2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/472162?v=4","gravatar_id":"","url":"https://api.github.com/users/coheigea","html_url":"https://github.com/coheigea","followers_url":"https://api.github.com/users/coheigea/followers","following_url":"https://api.github.com/users/coheigea/following{/other_user}","gists_url":"https://api.github.com/users/coheigea/gists{/gist_id}","starred_url":"https://api.github.com/users/coheigea/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coheigea/subscriptions","organizations_url":"https://api.github.com/users/coheigea/orgs","repos_url":"https://api.github.com/users/coheigea/repos","events_url":"https://api.github.com/users/coheigea/events{/privacy}","received_events_url":"https://api.github.com/users/coheigea/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-10-02T05:37:15Z","updated_at":"2020-10-02T05:37:15Z","author_association":"CONTRIBUTOR","body":"@reta I think so - what do I need to change?","reactions":{"url":"https://api.github.com/repos/apache/cxf/issues/comments/702535049/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/cxf/issues/comments/702553569","html_url":"https://github.com/apache/cxf/pull/697#issuecomment-702553569","issue_url":"https://api.github.com/repos/apache/cxf/issues/697","id":702553569,"node_id":"MDEyOklzc3VlQ29tbWVudDcwMjU1MzU2OQ==","user":{"login":"coheigea","id":472162,"node_id":"MDQ6VXNlcjQ3MjE2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/472162?v=4","gravatar_id":"","url":"https://api.github.com/users/coheigea","html_url":"https://github.com/coheigea","followers_url":"https://api.github.com/users/coheigea/followers","following_url":"https://api.github.com/users/coheigea/following{/other_user}","gists_url":"https://api.github.com/users/coheigea/gists{/gist_id}","starred_url":"https://api.github.com/users/coheigea/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coheigea/subscriptions","organizations_url":"https://api.github.com/users/coheigea/orgs","repos_url":"https://api.github.com/users/coheigea/repos","events_url":"https://api.github.com/users/coheigea/events{/privacy}","received_events_url":"https://api.github.com/users/coheigea/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-10-02T06:32:54Z","updated_at":"2020-10-02T06:32:54Z","author_association":"CONTRIBUTOR","body":"Hi @andymc12 ,\r\n\r\nThis change is causing quite a few system test failures, e.g. https://ci-builds.apache.org/job/CXF/job/CXF-JDK8/85/#showFailuresLink\r\nCould you take a look? Maybe the tests themselves need to be updated.","reactions":{"url":"https://api.github.com/repos/apache/cxf/issues/comments/702553569/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/cxf/issues/comments/702721108","html_url":"https://github.com/apache/cxf/pull/698#issuecomment-702721108","issue_url":"https://api.github.com/repos/apache/cxf/issues/698","id":702721108,"node_id":"MDEyOklzc3VlQ29tbWVudDcwMjcyMTEwOA==","user":{"login":"reta","id":509855,"node_id":"MDQ6VXNlcjUwOTg1NQ==","avatar_url":"https://avatars.githubusercontent.com/u/509855?v=4","gravatar_id":"","url":"https://api.github.com/users/reta","html_url":"https://github.com/reta","followers_url":"https://api.github.com/users/reta/followers","following_url":"https://api.github.com/users/reta/following{/other_user}","gists_url":"https://api.github.com/users/reta/gists{/gist_id}","starred_url":"https://api.github.com/users/reta/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/reta/subscriptions","organizations_url":"https://api.github.com/users/reta/orgs","repos_url":"https://api.github.com/users/reta/repos","events_url":"https://api.github.com/users/reta/events{/privacy}","received_events_url":"https://api.github.com/users/reta/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-10-02T13:02:03Z","updated_at":"2020-10-02T13:02:03Z","author_association":"MEMBER","body":"> \r\n> \r\n> @reta I think so - what do I need to change?\r\n\r\nthanks @coheigea , there are instructions on wiki: https://cwiki.apache.org/confluence/display/INFRA/Kicking+off+a+Jenkins+build+with+a+GitHub+PR  (please feel free to ping me in private if you need any help). It seems like `builds.apache.org` now redirects to `ci-builds.apache.org`, we probably just need to make sure that webhooks work.","reactions":{"url":"https://api.github.com/repos/apache/cxf/issues/comments/702721108/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/cxf/issues/comments/702721737","html_url":"https://github.com/apache/cxf/pull/699#issuecomment-702721737","issue_url":"https://api.github.com/repos/apache/cxf/issues/699","id":702721737,"node_id":"MDEyOklzc3VlQ29tbWVudDcwMjcyMTczNw==","user":{"login":"reta","id":509855,"node_id":"MDQ6VXNlcjUwOTg1NQ==","avatar_url":"https://avatars.githubusercontent.com/u/509855?v=4","gravatar_id":"","url":"https://api.github.com/users/reta","html_url":"https://github.com/reta","followers_url":"https://api.github.com/users/reta/followers","following_url":"https://api.github.com/users/reta/following{/other_user}","gists_url":"https://api.github.com/users/reta/gists{/gist_id}","starred_url":"https://api.github.com/users/reta/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/reta/subscriptions","organizations_url":"https://api.github.com/users/reta/orgs","repos_url":"https://api.github.com/users/reta/repos","events_url":"https://api.github.com/users/reta/events{/privacy}","received_events_url":"https://api.github.com/users/reta/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-10-02T13:03:22Z","updated_at":"2020-10-02T13:03:22Z","author_association":"MEMBER","body":"@coheigea if you don't mind to take a look, pretty trivial change :) thanks!","reactions":{"url":"https://api.github.com/repos/apache/cxf/issues/comments/702721737/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/cxf/issues/comments/702729299","html_url":"https://github.com/apache/cxf/pull/698#issuecomment-702729299","issue_url":"https://api.github.com/repos/apache/cxf/issues/698","id":702729299,"node_id":"MDEyOklzc3VlQ29tbWVudDcwMjcyOTI5OQ==","user":{"login":"coheigea","id":472162,"node_id":"MDQ6VXNlcjQ3MjE2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/472162?v=4","gravatar_id":"","url":"https://api.github.com/users/coheigea","html_url":"https://github.com/coheigea","followers_url":"https://api.github.com/users/coheigea/followers","following_url":"https://api.github.com/users/coheigea/following{/other_user}","gists_url":"https://api.github.com/users/coheigea/gists{/gist_id}","starred_url":"https://api.github.com/users/coheigea/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coheigea/subscriptions","organizations_url":"https://api.github.com/users/coheigea/orgs","repos_url":"https://api.github.com/users/coheigea/repos","events_url":"https://api.github.com/users/coheigea/events{/privacy}","received_events_url":"https://api.github.com/users/coheigea/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-10-02T13:18:41Z","updated_at":"2020-10-02T13:18:41Z","author_association":"CONTRIBUTOR","body":"@reta For which CXF build on ci-builds should I make those changes in?","reactions":{"url":"https://api.github.com/repos/apache/cxf/issues/comments/702729299/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/cxf/issues/comments/702730919","html_url":"https://github.com/apache/cxf/pull/699#issuecomment-702730919","issue_url":"https://api.github.com/repos/apache/cxf/issues/699","id":702730919,"node_id":"MDEyOklzc3VlQ29tbWVudDcwMjczMDkxOQ==","user":{"login":"coheigea","id":472162,"node_id":"MDQ6VXNlcjQ3MjE2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/472162?v=4","gravatar_id":"","url":"https://api.github.com/users/coheigea","html_url":"https://github.com/coheigea","followers_url":"https://api.github.com/users/coheigea/followers","following_url":"https://api.github.com/users/coheigea/following{/other_user}","gists_url":"https://api.github.com/users/coheigea/gists{/gist_id}","starred_url":"https://api.github.com/users/coheigea/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coheigea/subscriptions","organizations_url":"https://api.github.com/users/coheigea/orgs","repos_url":"https://api.github.com/users/coheigea/repos","events_url":"https://api.github.com/users/coheigea/events{/privacy}","received_events_url":"https://api.github.com/users/coheigea/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-10-02T13:21:57Z","updated_at":"2020-10-02T13:21:57Z","author_association":"CONTRIBUTOR","body":"@reta No objections from me, but the build is currently broken - so I'd prefer to make sure all tests are green before merging.","reactions":{"url":"https://api.github.com/repos/apache/cxf/issues/comments/702730919/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/cxf/issues/comments/702789543","html_url":"https://github.com/apache/cxf/pull/698#issuecomment-702789543","issue_url":"https://api.github.com/repos/apache/cxf/issues/698","id":702789543,"node_id":"MDEyOklzc3VlQ29tbWVudDcwMjc4OTU0Mw==","user":{"login":"reta","id":509855,"node_id":"MDQ6VXNlcjUwOTg1NQ==","avatar_url":"https://avatars.githubusercontent.com/u/509855?v=4","gravatar_id":"","url":"https://api.github.com/users/reta","html_url":"https://github.com/reta","followers_url":"https://api.github.com/users/reta/followers","following_url":"https://api.github.com/users/reta/following{/other_user}","gists_url":"https://api.github.com/users/reta/gists{/gist_id}","starred_url":"https://api.github.com/users/reta/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/reta/subscriptions","organizations_url":"https://api.github.com/users/reta/orgs","repos_url":"https://api.github.com/users/reta/repos","events_url":"https://api.github.com/users/reta/events{/privacy}","received_events_url":"https://api.github.com/users/reta/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-10-02T15:09:21Z","updated_at":"2020-10-02T15:09:35Z","author_association":"MEMBER","body":"> \r\n> \r\n> @reta For which CXF build on ci-builds should I make those changes in?\r\n\r\n@coheigea  https://ci-builds.apache.org/job/CXF/job/CXF-JDK8/, this is out standard one, we could extend it to others later one","reactions":{"url":"https://api.github.com/repos/apache/cxf/issues/comments/702789543/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/cxf/issues/comments/702798069","html_url":"https://github.com/apache/cxf/pull/698#issuecomment-702798069","issue_url":"https://api.github.com/repos/apache/cxf/issues/698","id":702798069,"node_id":"MDEyOklzc3VlQ29tbWVudDcwMjc5ODA2OQ==","user":{"login":"reta","id":509855,"node_id":"MDQ6VXNlcjUwOTg1NQ==","avatar_url":"https://avatars.githubusercontent.com/u/509855?v=4","gravatar_id":"","url":"https://api.github.com/users/reta","html_url":"https://github.com/reta","followers_url":"https://api.github.com/users/reta/followers","following_url":"https://api.github.com/users/reta/following{/other_user}","gists_url":"https://api.github.com/users/reta/gists{/gist_id}","starred_url":"https://api.github.com/users/reta/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/reta/subscriptions","organizations_url":"https://api.github.com/users/reta/orgs","repos_url":"https://api.github.com/users/reta/repos","events_url":"https://api.github.com/users/reta/events{/privacy}","received_events_url":"https://api.github.com/users/reta/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-10-02T15:24:58Z","updated_at":"2020-10-02T15:24:58Z","author_association":"MEMBER","body":"@coheigea sorry, just realized we had a dedicated build previously just for PRs, I could clone https://ci-builds.apache.org/job/CXF/job/CXF-JDK8/, and name it like https://ci-builds.apache.org/job/CXF/job/CXF-JDK8-PR/, would be good for you?","reactions":{"url":"https://api.github.com/repos/apache/cxf/issues/comments/702798069/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/cxf/issues/comments/702800627","html_url":"https://github.com/apache/cxf/pull/698#issuecomment-702800627","issue_url":"https://api.github.com/repos/apache/cxf/issues/698","id":702800627,"node_id":"MDEyOklzc3VlQ29tbWVudDcwMjgwMDYyNw==","user":{"login":"coheigea","id":472162,"node_id":"MDQ6VXNlcjQ3MjE2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/472162?v=4","gravatar_id":"","url":"https://api.github.com/users/coheigea","html_url":"https://github.com/coheigea","followers_url":"https://api.github.com/users/coheigea/followers","following_url":"https://api.github.com/users/coheigea/following{/other_user}","gists_url":"https://api.github.com/users/coheigea/gists{/gist_id}","starred_url":"https://api.github.com/users/coheigea/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coheigea/subscriptions","organizations_url":"https://api.github.com/users/coheigea/orgs","repos_url":"https://api.github.com/users/coheigea/repos","events_url":"https://api.github.com/users/coheigea/events{/privacy}","received_events_url":"https://api.github.com/users/coheigea/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-10-02T15:29:41Z","updated_at":"2020-10-02T15:30:03Z","author_association":"CONTRIBUTOR","body":"Yes please do, I've actually made the change already to \"Check \"Enable Git validated merge support\" and \"Build pull requests to the repository\" in your build config\". Not sure if the other changes are required? Once you copy the changes, I'll revert the changes on the original job...","reactions":{"url":"https://api.github.com/repos/apache/cxf/issues/comments/702800627/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/cxf/issues/comments/702802689","html_url":"https://github.com/apache/cxf/pull/698#issuecomment-702802689","issue_url":"https://api.github.com/repos/apache/cxf/issues/698","id":702802689,"node_id":"MDEyOklzc3VlQ29tbWVudDcwMjgwMjY4OQ==","user":{"login":"reta","id":509855,"node_id":"MDQ6VXNlcjUwOTg1NQ==","avatar_url":"https://avatars.githubusercontent.com/u/509855?v=4","gravatar_id":"","url":"https://api.github.com/users/reta","html_url":"https://github.com/reta","followers_url":"https://api.github.com/users/reta/followers","following_url":"https://api.github.com/users/reta/following{/other_user}","gists_url":"https://api.github.com/users/reta/gists{/gist_id}","starred_url":"https://api.github.com/users/reta/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/reta/subscriptions","organizations_url":"https://api.github.com/users/reta/orgs","repos_url":"https://api.github.com/users/reta/repos","events_url":"https://api.github.com/users/reta/events{/privacy}","received_events_url":"https://api.github.com/users/reta/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-10-02T15:33:28Z","updated_at":"2020-10-02T15:33:28Z","author_association":"MEMBER","body":"@coheigea  done, https://ci-builds.apache.org/job/CXF/job/CXF-JDK8-PR/ ","reactions":{"url":"https://api.github.com/repos/apache/cxf/issues/comments/702802689/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/cxf/issues/comments/702902483","html_url":"https://github.com/apache/cxf/pull/697#issuecomment-702902483","issue_url":"https://api.github.com/repos/apache/cxf/issues/697","id":702902483,"node_id":"MDEyOklzc3VlQ29tbWVudDcwMjkwMjQ4Mw==","user":{"login":"andymc12","id":21365299,"node_id":"MDQ6VXNlcjIxMzY1Mjk5","avatar_url":"https://avatars.githubusercontent.com/u/21365299?v=4","gravatar_id":"","url":"https://api.github.com/users/andymc12","html_url":"https://github.com/andymc12","followers_url":"https://api.github.com/users/andymc12/followers","following_url":"https://api.github.com/users/andymc12/following{/other_user}","gists_url":"https://api.github.com/users/andymc12/gists{/gist_id}","starred_url":"https://api.github.com/users/andymc12/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andymc12/subscriptions","organizations_url":"https://api.github.com/users/andymc12/orgs","repos_url":"https://api.github.com/users/andymc12/repos","events_url":"https://api.github.com/users/andymc12/events{/privacy}","received_events_url":"https://api.github.com/users/andymc12/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-10-02T18:54:51Z","updated_at":"2020-10-02T18:54:51Z","author_association":"CONTRIBUTOR","body":"@coheigea Sorry about that.  I have fixes for the test cases proposed in #703.  Can you take a look at them to verify that you and/or @reta are ok with the changes?  Thanks","reactions":{"url":"https://api.github.com/repos/apache/cxf/issues/comments/702902483/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/cxf/issues/comments/703162944","html_url":"https://github.com/apache/cxf/pull/703#issuecomment-703162944","issue_url":"https://api.github.com/repos/apache/cxf/issues/703","id":703162944,"node_id":"MDEyOklzc3VlQ29tbWVudDcwMzE2Mjk0NA==","user":{"login":"reta","id":509855,"node_id":"MDQ6VXNlcjUwOTg1NQ==","avatar_url":"https://avatars.githubusercontent.com/u/509855?v=4","gravatar_id":"","url":"https://api.github.com/users/reta","html_url":"https://github.com/reta","followers_url":"https://api.github.com/users/reta/followers","following_url":"https://api.github.com/users/reta/following{/other_user}","gists_url":"https://api.github.com/users/reta/gists{/gist_id}","starred_url":"https://api.github.com/users/reta/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/reta/subscriptions","organizations_url":"https://api.github.com/users/reta/orgs","repos_url":"https://api.github.com/users/reta/repos","events_url":"https://api.github.com/users/reta/events{/privacy}","received_events_url":"https://api.github.com/users/reta/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-10-03T20:49:38Z","updated_at":"2020-10-03T20:49:38Z","author_association":"MEMBER","body":"@andymc12 sorry for not having the Github + Jenkins in place to help with test cases validation, we are working on that ","reactions":{"url":"https://api.github.com/repos/apache/cxf/issues/comments/703162944/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/cxf/issues/comments/703341976","html_url":"https://github.com/apache/cxf/pull/703#issuecomment-703341976","issue_url":"https://api.github.com/repos/apache/cxf/issues/703","id":703341976,"node_id":"MDEyOklzc3VlQ29tbWVudDcwMzM0MTk3Ng==","user":{"login":"andymc12","id":21365299,"node_id":"MDQ6VXNlcjIxMzY1Mjk5","avatar_url":"https://avatars.githubusercontent.com/u/21365299?v=4","gravatar_id":"","url":"https://api.github.com/users/andymc12","html_url":"https://github.com/andymc12","followers_url":"https://api.github.com/users/andymc12/followers","following_url":"https://api.github.com/users/andymc12/following{/other_user}","gists_url":"https://api.github.com/users/andymc12/gists{/gist_id}","starred_url":"https://api.github.com/users/andymc12/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andymc12/subscriptions","organizations_url":"https://api.github.com/users/andymc12/orgs","repos_url":"https://api.github.com/users/andymc12/repos","events_url":"https://api.github.com/users/andymc12/events{/privacy}","received_events_url":"https://api.github.com/users/andymc12/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-10-05T00:46:59Z","updated_at":"2020-10-05T00:46:59Z","author_association":"CONTRIBUTOR","body":"> sorry for not having the Github + Jenkins in place to help with test cases validation, we are working on that\r\n\r\nno worries.  sorry for not testing these changes with the systests locally ahead of time.","reactions":{"url":"https://api.github.com/repos/apache/cxf/issues/comments/703341976/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/cxf/issues/comments/703428931","html_url":"https://github.com/apache/cxf/pull/703#issuecomment-703428931","issue_url":"https://api.github.com/repos/apache/cxf/issues/703","id":703428931,"node_id":"MDEyOklzc3VlQ29tbWVudDcwMzQyODkzMQ==","user":{"login":"coheigea","id":472162,"node_id":"MDQ6VXNlcjQ3MjE2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/472162?v=4","gravatar_id":"","url":"https://api.github.com/users/coheigea","html_url":"https://github.com/coheigea","followers_url":"https://api.github.com/users/coheigea/followers","following_url":"https://api.github.com/users/coheigea/following{/other_user}","gists_url":"https://api.github.com/users/coheigea/gists{/gist_id}","starred_url":"https://api.github.com/users/coheigea/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coheigea/subscriptions","organizations_url":"https://api.github.com/users/coheigea/orgs","repos_url":"https://api.github.com/users/coheigea/repos","events_url":"https://api.github.com/users/coheigea/events{/privacy}","received_events_url":"https://api.github.com/users/coheigea/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-10-05T06:34:40Z","updated_at":"2020-10-05T06:34:40Z","author_association":"CONTRIBUTOR","body":"LGTM but can you also check these tests that are also failing in systests/rs-security?\r\n\r\nOIDCNegativeTest.testImplicitFlowNoNonce\r\nOIDCNegativeTest.testImplicitFlowPromptNone","reactions":{"url":"https://api.github.com/repos/apache/cxf/issues/comments/703428931/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/cxf/issues/comments/704629566","html_url":"https://github.com/apache/cxf/pull/703#issuecomment-704629566","issue_url":"https://api.github.com/repos/apache/cxf/issues/703","id":704629566,"node_id":"MDEyOklzc3VlQ29tbWVudDcwNDYyOTU2Ng==","user":{"login":"andymc12","id":21365299,"node_id":"MDQ6VXNlcjIxMzY1Mjk5","avatar_url":"https://avatars.githubusercontent.com/u/21365299?v=4","gravatar_id":"","url":"https://api.github.com/users/andymc12","html_url":"https://github.com/andymc12","followers_url":"https://api.github.com/users/andymc12/followers","following_url":"https://api.github.com/users/andymc12/following{/other_user}","gists_url":"https://api.github.com/users/andymc12/gists{/gist_id}","starred_url":"https://api.github.com/users/andymc12/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andymc12/subscriptions","organizations_url":"https://api.github.com/users/andymc12/orgs","repos_url":"https://api.github.com/users/andymc12/repos","events_url":"https://api.github.com/users/andymc12/events{/privacy}","received_events_url":"https://api.github.com/users/andymc12/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-10-07T00:54:14Z","updated_at":"2020-10-07T00:54:14Z","author_association":"CONTRIBUTOR","body":"> LGTM but can you also check these tests that are also failing in systests/rs-security?\r\n>\r\n> OIDCNegativeTest.testImplicitFlowNoNonce\r\n> OIDCNegativeTest.testImplicitFlowPromptNone\r\n\r\nYes, it looks like these tests were expecting the response to throw an exception rather than return null.  The javadoc is not clear what to expect (null vs ProcessingException that wraps a NoContentException), but the TCK expects that if the passed-in type can be null (i.e. not a primitive), then the readEntity method must return null.   I updated the test to assertNull, and it is passing locally for me.","reactions":{"url":"https://api.github.com/repos/apache/cxf/issues/comments/704629566/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/cxf/issues/comments/705000123","html_url":"https://github.com/apache/cxf/pull/703#issuecomment-705000123","issue_url":"https://api.github.com/repos/apache/cxf/issues/703","id":705000123,"node_id":"MDEyOklzc3VlQ29tbWVudDcwNTAwMDEyMw==","user":{"login":"andymc12","id":21365299,"node_id":"MDQ6VXNlcjIxMzY1Mjk5","avatar_url":"https://avatars.githubusercontent.com/u/21365299?v=4","gravatar_id":"","url":"https://api.github.com/users/andymc12","html_url":"https://github.com/andymc12","followers_url":"https://api.github.com/users/andymc12/followers","following_url":"https://api.github.com/users/andymc12/following{/other_user}","gists_url":"https://api.github.com/users/andymc12/gists{/gist_id}","starred_url":"https://api.github.com/users/andymc12/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andymc12/subscriptions","organizations_url":"https://api.github.com/users/andymc12/orgs","repos_url":"https://api.github.com/users/andymc12/repos","events_url":"https://api.github.com/users/andymc12/events{/privacy}","received_events_url":"https://api.github.com/users/andymc12/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-10-07T15:07:01Z","updated_at":"2020-10-07T15:07:01Z","author_association":"CONTRIBUTOR","body":"I ran into a merge conflict - and I think I've resolved it.  I'd like to wait until Jenkins has finished this CI build before merging, but no need to re-review unless you want to check my merge-conflict-resolution.  Thanks!","reactions":{"url":"https://api.github.com/repos/apache/cxf/issues/comments/705000123/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/cxf/issues/comments/705008148","html_url":"https://github.com/apache/cxf/pull/703#issuecomment-705008148","issue_url":"https://api.github.com/repos/apache/cxf/issues/703","id":705008148,"node_id":"MDEyOklzc3VlQ29tbWVudDcwNTAwODE0OA==","user":{"login":"amarkevich","id":62415,"node_id":"MDQ6VXNlcjYyNDE1","avatar_url":"https://avatars.githubusercontent.com/u/62415?v=4","gravatar_id":"","url":"https://api.github.com/users/amarkevich","html_url":"https://github.com/amarkevich","followers_url":"https://api.github.com/users/amarkevich/followers","following_url":"https://api.github.com/users/amarkevich/following{/other_user}","gists_url":"https://api.github.com/users/amarkevich/gists{/gist_id}","starred_url":"https://api.github.com/users/amarkevich/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/amarkevich/subscriptions","organizations_url":"https://api.github.com/users/amarkevich/orgs","repos_url":"https://api.github.com/users/amarkevich/repos","events_url":"https://api.github.com/users/amarkevich/events{/privacy}","received_events_url":"https://api.github.com/users/amarkevich/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-10-07T15:19:33Z","updated_at":"2020-10-07T15:19:33Z","author_association":"CONTRIBUTOR","body":"@andymc12 Sorry for mess up - found failing tests recently with wrong reason","reactions":{"url":"https://api.github.com/repos/apache/cxf/issues/comments/705008148/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/cxf/issues/comments/705054481","html_url":"https://github.com/apache/cxf/pull/703#issuecomment-705054481","issue_url":"https://api.github.com/repos/apache/cxf/issues/703","id":705054481,"node_id":"MDEyOklzc3VlQ29tbWVudDcwNTA1NDQ4MQ==","user":{"login":"andymc12","id":21365299,"node_id":"MDQ6VXNlcjIxMzY1Mjk5","avatar_url":"https://avatars.githubusercontent.com/u/21365299?v=4","gravatar_id":"","url":"https://api.github.com/users/andymc12","html_url":"https://github.com/andymc12","followers_url":"https://api.github.com/users/andymc12/followers","following_url":"https://api.github.com/users/andymc12/following{/other_user}","gists_url":"https://api.github.com/users/andymc12/gists{/gist_id}","starred_url":"https://api.github.com/users/andymc12/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andymc12/subscriptions","organizations_url":"https://api.github.com/users/andymc12/orgs","repos_url":"https://api.github.com/users/andymc12/repos","events_url":"https://api.github.com/users/andymc12/events{/privacy}","received_events_url":"https://api.github.com/users/andymc12/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-10-07T16:34:19Z","updated_at":"2020-10-07T16:34:19Z","author_association":"CONTRIBUTOR","body":"No worries @amarkevich!\r\n\r\nThere are still some failures in osgi/itests, but they pass for me locally.  Maybe it's an intermittent issue, or something specific to the env/JDK/etc?  I'll go ahead and merge these changes, as they definitely fix more tests than they break.  :). Thanks!","reactions":{"url":"https://api.github.com/repos/apache/cxf/issues/comments/705054481/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/cxf/issues/comments/711043554","html_url":"https://github.com/apache/cxf/pull/642#issuecomment-711043554","issue_url":"https://api.github.com/repos/apache/cxf/issues/642","id":711043554,"node_id":"MDEyOklzc3VlQ29tbWVudDcxMTA0MzU1NA==","user":{"login":"reta","id":509855,"node_id":"MDQ6VXNlcjUwOTg1NQ==","avatar_url":"https://avatars.githubusercontent.com/u/509855?v=4","gravatar_id":"","url":"https://api.github.com/users/reta","html_url":"https://github.com/reta","followers_url":"https://api.github.com/users/reta/followers","following_url":"https://api.github.com/users/reta/following{/other_user}","gists_url":"https://api.github.com/users/reta/gists{/gist_id}","starred_url":"https://api.github.com/users/reta/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/reta/subscriptions","organizations_url":"https://api.github.com/users/reta/orgs","repos_url":"https://api.github.com/users/reta/repos","events_url":"https://api.github.com/users/reta/events{/privacy}","received_events_url":"https://api.github.com/users/reta/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-10-17T16:45:01Z","updated_at":"2020-10-17T16:45:01Z","author_association":"MEMBER","body":"@shark300 thanks a lot for working on that, it looks great, I just have a few comments, looks very good otherwise.","reactions":{"url":"https://api.github.com/repos/apache/cxf/issues/comments/711043554/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/cxf/issues/comments/711062400","html_url":"https://github.com/apache/cxf/pull/642#issuecomment-711062400","issue_url":"https://api.github.com/repos/apache/cxf/issues/642","id":711062400,"node_id":"MDEyOklzc3VlQ29tbWVudDcxMTA2MjQwMA==","user":{"login":"shark300","id":1255546,"node_id":"MDQ6VXNlcjEyNTU1NDY=","avatar_url":"https://avatars.githubusercontent.com/u/1255546?v=4","gravatar_id":"","url":"https://api.github.com/users/shark300","html_url":"https://github.com/shark300","followers_url":"https://api.github.com/users/shark300/followers","following_url":"https://api.github.com/users/shark300/following{/other_user}","gists_url":"https://api.github.com/users/shark300/gists{/gist_id}","starred_url":"https://api.github.com/users/shark300/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/shark300/subscriptions","organizations_url":"https://api.github.com/users/shark300/orgs","repos_url":"https://api.github.com/users/shark300/repos","events_url":"https://api.github.com/users/shark300/events{/privacy}","received_events_url":"https://api.github.com/users/shark300/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-10-17T18:35:20Z","updated_at":"2020-10-17T18:35:20Z","author_association":"CONTRIBUTOR","body":"@reta Thank you, and I'm sorry because fixing review comments takes much time. ","reactions":{"url":"https://api.github.com/repos/apache/cxf/issues/comments/711062400/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/cxf/issues/comments/711068562","html_url":"https://github.com/apache/cxf/pull/642#issuecomment-711068562","issue_url":"https://api.github.com/repos/apache/cxf/issues/642","id":711068562,"node_id":"MDEyOklzc3VlQ29tbWVudDcxMTA2ODU2Mg==","user":{"login":"reta","id":509855,"node_id":"MDQ6VXNlcjUwOTg1NQ==","avatar_url":"https://avatars.githubusercontent.com/u/509855?v=4","gravatar_id":"","url":"https://api.github.com/users/reta","html_url":"https://github.com/reta","followers_url":"https://api.github.com/users/reta/followers","following_url":"https://api.github.com/users/reta/following{/other_user}","gists_url":"https://api.github.com/users/reta/gists{/gist_id}","starred_url":"https://api.github.com/users/reta/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/reta/subscriptions","organizations_url":"https://api.github.com/users/reta/orgs","repos_url":"https://api.github.com/users/reta/repos","events_url":"https://api.github.com/users/reta/events{/privacy}","received_events_url":"https://api.github.com/users/reta/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-10-17T19:27:34Z","updated_at":"2020-10-17T19:27:34Z","author_association":"MEMBER","body":"@shark300 not a problem at all, this is really nice feature, your contribution is greatly appreciated. ","reactions":{"url":"https://api.github.com/repos/apache/cxf/issues/comments/711068562/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/cxf/issues/comments/711074172","html_url":"https://github.com/apache/cxf/pull/642#issuecomment-711074172","issue_url":"https://api.github.com/repos/apache/cxf/issues/642","id":711074172,"node_id":"MDEyOklzc3VlQ29tbWVudDcxMTA3NDE3Mg==","user":{"login":"shark300","id":1255546,"node_id":"MDQ6VXNlcjEyNTU1NDY=","avatar_url":"https://avatars.githubusercontent.com/u/1255546?v=4","gravatar_id":"","url":"https://api.github.com/users/shark300","html_url":"https://github.com/shark300","followers_url":"https://api.github.com/users/shark300/followers","following_url":"https://api.github.com/users/shark300/following{/other_user}","gists_url":"https://api.github.com/users/shark300/gists{/gist_id}","starred_url":"https://api.github.com/users/shark300/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/shark300/subscriptions","organizations_url":"https://api.github.com/users/shark300/orgs","repos_url":"https://api.github.com/users/shark300/repos","events_url":"https://api.github.com/users/shark300/events{/privacy}","received_events_url":"https://api.github.com/users/shark300/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-10-17T20:15:16Z","updated_at":"2020-10-17T20:15:16Z","author_association":"CONTRIBUTOR","body":"@reta I'm not familiar with this project, but I have some questions: who is responsible for documentation update and squashing commits?","reactions":{"url":"https://api.github.com/repos/apache/cxf/issues/comments/711074172/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/cxf/issues/comments/711075015","html_url":"https://github.com/apache/cxf/pull/642#issuecomment-711075015","issue_url":"https://api.github.com/repos/apache/cxf/issues/642","id":711075015,"node_id":"MDEyOklzc3VlQ29tbWVudDcxMTA3NTAxNQ==","user":{"login":"reta","id":509855,"node_id":"MDQ6VXNlcjUwOTg1NQ==","avatar_url":"https://avatars.githubusercontent.com/u/509855?v=4","gravatar_id":"","url":"https://api.github.com/users/reta","html_url":"https://github.com/reta","followers_url":"https://api.github.com/users/reta/followers","following_url":"https://api.github.com/users/reta/following{/other_user}","gists_url":"https://api.github.com/users/reta/gists{/gist_id}","starred_url":"https://api.github.com/users/reta/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/reta/subscriptions","organizations_url":"https://api.github.com/users/reta/orgs","repos_url":"https://api.github.com/users/reta/repos","events_url":"https://api.github.com/users/reta/events{/privacy}","received_events_url":"https://api.github.com/users/reta/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-10-17T20:22:40Z","updated_at":"2020-10-17T20:22:40Z","author_association":"MEMBER","body":"@shark300 maintainers usually squash commits when merging to master (and sometimes cherry-pick to maintenance branches), the documentation is also updated by maintainers.","reactions":{"url":"https://api.github.com/repos/apache/cxf/issues/comments/711075015/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/cxf/issues/comments/711085256","html_url":"https://github.com/apache/cxf/pull/642#issuecomment-711085256","issue_url":"https://api.github.com/repos/apache/cxf/issues/642","id":711085256,"node_id":"MDEyOklzc3VlQ29tbWVudDcxMTA4NTI1Ng==","user":{"login":"reta","id":509855,"node_id":"MDQ6VXNlcjUwOTg1NQ==","avatar_url":"https://avatars.githubusercontent.com/u/509855?v=4","gravatar_id":"","url":"https://api.github.com/users/reta","html_url":"https://github.com/reta","followers_url":"https://api.github.com/users/reta/followers","following_url":"https://api.github.com/users/reta/following{/other_user}","gists_url":"https://api.github.com/users/reta/gists{/gist_id}","starred_url":"https://api.github.com/users/reta/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/reta/subscriptions","organizations_url":"https://api.github.com/users/reta/orgs","repos_url":"https://api.github.com/users/reta/repos","events_url":"https://api.github.com/users/reta/events{/privacy}","received_events_url":"https://api.github.com/users/reta/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-10-17T21:57:39Z","updated_at":"2020-10-17T21:57:39Z","author_association":"MEMBER","body":"@shark300 I have no outstanding comments or concerns left, I just need to take some time to verify / play with this feature in different scenarios before merging it in, sounds good? Thanks again for your work.","reactions":{"url":"https://api.github.com/repos/apache/cxf/issues/comments/711085256/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/cxf/issues/comments/711237640","html_url":"https://github.com/apache/cxf/pull/642#issuecomment-711237640","issue_url":"https://api.github.com/repos/apache/cxf/issues/642","id":711237640,"node_id":"MDEyOklzc3VlQ29tbWVudDcxMTIzNzY0MA==","user":{"login":"shark300","id":1255546,"node_id":"MDQ6VXNlcjEyNTU1NDY=","avatar_url":"https://avatars.githubusercontent.com/u/1255546?v=4","gravatar_id":"","url":"https://api.github.com/users/shark300","html_url":"https://github.com/shark300","followers_url":"https://api.github.com/users/shark300/followers","following_url":"https://api.github.com/users/shark300/following{/other_user}","gists_url":"https://api.github.com/users/shark300/gists{/gist_id}","starred_url":"https://api.github.com/users/shark300/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/shark300/subscriptions","organizations_url":"https://api.github.com/users/shark300/orgs","repos_url":"https://api.github.com/users/shark300/repos","events_url":"https://api.github.com/users/shark300/events{/privacy}","received_events_url":"https://api.github.com/users/shark300/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-10-18T15:43:30Z","updated_at":"2020-10-18T15:43:30Z","author_association":"CONTRIBUTOR","body":"@reta Thank you for your work too :)","reactions":{"url":"https://api.github.com/repos/apache/cxf/issues/comments/711237640/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/cxf/issues/comments/713192022","html_url":"https://github.com/apache/cxf/pull/695#issuecomment-713192022","issue_url":"https://api.github.com/repos/apache/cxf/issues/695","id":713192022,"node_id":"MDEyOklzc3VlQ29tbWVudDcxMzE5MjAyMg==","user":{"login":"reta","id":509855,"node_id":"MDQ6VXNlcjUwOTg1NQ==","avatar_url":"https://avatars.githubusercontent.com/u/509855?v=4","gravatar_id":"","url":"https://api.github.com/users/reta","html_url":"https://github.com/reta","followers_url":"https://api.github.com/users/reta/followers","following_url":"https://api.github.com/users/reta/following{/other_user}","gists_url":"https://api.github.com/users/reta/gists{/gist_id}","starred_url":"https://api.github.com/users/reta/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/reta/subscriptions","organizations_url":"https://api.github.com/users/reta/orgs","repos_url":"https://api.github.com/users/reta/repos","events_url":"https://api.github.com/users/reta/events{/privacy}","received_events_url":"https://api.github.com/users/reta/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-10-20T23:13:37Z","updated_at":"2020-10-20T23:13:37Z","author_association":"MEMBER","body":"@rmannibucau anything outstanding left for this pr? or good to merge?","reactions":{"url":"https://api.github.com/repos/apache/cxf/issues/comments/713192022/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/cxf/issues/comments/713207846","html_url":"https://github.com/apache/cxf/pull/642#issuecomment-713207846","issue_url":"https://api.github.com/repos/apache/cxf/issues/642","id":713207846,"node_id":"MDEyOklzc3VlQ29tbWVudDcxMzIwNzg0Ng==","user":{"login":"reta","id":509855,"node_id":"MDQ6VXNlcjUwOTg1NQ==","avatar_url":"https://avatars.githubusercontent.com/u/509855?v=4","gravatar_id":"","url":"https://api.github.com/users/reta","html_url":"https://github.com/reta","followers_url":"https://api.github.com/users/reta/followers","following_url":"https://api.github.com/users/reta/following{/other_user}","gists_url":"https://api.github.com/users/reta/gists{/gist_id}","starred_url":"https://api.github.com/users/reta/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/reta/subscriptions","organizations_url":"https://api.github.com/users/reta/orgs","repos_url":"https://api.github.com/users/reta/repos","events_url":"https://api.github.com/users/reta/events{/privacy}","received_events_url":"https://api.github.com/users/reta/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-10-21T00:00:23Z","updated_at":"2020-10-21T00:02:43Z","author_association":"MEMBER","body":"@shark300 may I ask you please to:\r\n\r\n1. Merge with latest master (seems like some checks are failing,  `CodeQL / Analyze (java)`)\r\n2. Run `mvn clean verify -Dmaven.test.skip=true -DskipITs=true` on this PR, there are some checkstyle violations (it should be covered by Jenkins job but it seems like it was not run for some reasons).\r\n\r\nWe should be able to merge when checks + checkstyle are \"green\". I also created the documentation template (https://cwiki.apache.org/confluence/display/CXF20DOC/Micrometer) and would ask your help please to review once ready (if you don't mind).","reactions":{"url":"https://api.github.com/repos/apache/cxf/issues/comments/713207846/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/cxf/issues/comments/713317176","html_url":"https://github.com/apache/cxf/pull/695#issuecomment-713317176","issue_url":"https://api.github.com/repos/apache/cxf/issues/695","id":713317176,"node_id":"MDEyOklzc3VlQ29tbWVudDcxMzMxNzE3Ng==","user":{"login":"rmannibucau","id":1249546,"node_id":"MDQ6VXNlcjEyNDk1NDY=","avatar_url":"https://avatars.githubusercontent.com/u/1249546?v=4","gravatar_id":"","url":"https://api.github.com/users/rmannibucau","html_url":"https://github.com/rmannibucau","followers_url":"https://api.github.com/users/rmannibucau/followers","following_url":"https://api.github.com/users/rmannibucau/following{/other_user}","gists_url":"https://api.github.com/users/rmannibucau/gists{/gist_id}","starred_url":"https://api.github.com/users/rmannibucau/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmannibucau/subscriptions","organizations_url":"https://api.github.com/users/rmannibucau/orgs","repos_url":"https://api.github.com/users/rmannibucau/repos","events_url":"https://api.github.com/users/rmannibucau/events{/privacy}","received_events_url":"https://api.github.com/users/rmannibucau/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-10-21T05:41:27Z","updated_at":"2020-10-21T05:41:27Z","author_association":"CONTRIBUTOR","body":"@reta good to merge for me\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/cxf/issues/comments/713317176/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/cxf/issues/comments/713720984","html_url":"https://github.com/apache/cxf/pull/642#issuecomment-713720984","issue_url":"https://api.github.com/repos/apache/cxf/issues/642","id":713720984,"node_id":"MDEyOklzc3VlQ29tbWVudDcxMzcyMDk4NA==","user":{"login":"shark300","id":1255546,"node_id":"MDQ6VXNlcjEyNTU1NDY=","avatar_url":"https://avatars.githubusercontent.com/u/1255546?v=4","gravatar_id":"","url":"https://api.github.com/users/shark300","html_url":"https://github.com/shark300","followers_url":"https://api.github.com/users/shark300/followers","following_url":"https://api.github.com/users/shark300/following{/other_user}","gists_url":"https://api.github.com/users/shark300/gists{/gist_id}","starred_url":"https://api.github.com/users/shark300/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/shark300/subscriptions","organizations_url":"https://api.github.com/users/shark300/orgs","repos_url":"https://api.github.com/users/shark300/repos","events_url":"https://api.github.com/users/shark300/events{/privacy}","received_events_url":"https://api.github.com/users/shark300/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-10-21T17:04:29Z","updated_at":"2020-10-21T17:04:29Z","author_association":"CONTRIBUTOR","body":"@reta \r\nPMD and Checkstyle is OK locally.","reactions":{"url":"https://api.github.com/repos/apache/cxf/issues/comments/713720984/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/cxf/issues/comments/720104127","html_url":"https://github.com/apache/cxf/pull/716#issuecomment-720104127","issue_url":"https://api.github.com/repos/apache/cxf/issues/716","id":720104127,"node_id":"MDEyOklzc3VlQ29tbWVudDcyMDEwNDEyNw==","user":{"login":"shark300","id":1255546,"node_id":"MDQ6VXNlcjEyNTU1NDY=","avatar_url":"https://avatars.githubusercontent.com/u/1255546?v=4","gravatar_id":"","url":"https://api.github.com/users/shark300","html_url":"https://github.com/shark300","followers_url":"https://api.github.com/users/shark300/followers","following_url":"https://api.github.com/users/shark300/following{/other_user}","gists_url":"https://api.github.com/users/shark300/gists{/gist_id}","starred_url":"https://api.github.com/users/shark300/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/shark300/subscriptions","organizations_url":"https://api.github.com/users/shark300/orgs","repos_url":"https://api.github.com/users/shark300/repos","events_url":"https://api.github.com/users/shark300/events{/privacy}","received_events_url":"https://api.github.com/users/shark300/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-11-01T15:16:35Z","updated_at":"2020-11-01T15:16:35Z","author_association":"CONTRIBUTOR","body":"I'm not familiar with JAX-RS, so thank you for your support! ","reactions":{"url":"https://api.github.com/repos/apache/cxf/issues/comments/720104127/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/cxf/issues/comments/720265307","html_url":"https://github.com/apache/cxf/pull/690#issuecomment-720265307","issue_url":"https://api.github.com/repos/apache/cxf/issues/690","id":720265307,"node_id":"MDEyOklzc3VlQ29tbWVudDcyMDI2NTMwNw==","user":{"login":"coheigea","id":472162,"node_id":"MDQ6VXNlcjQ3MjE2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/472162?v=4","gravatar_id":"","url":"https://api.github.com/users/coheigea","html_url":"https://github.com/coheigea","followers_url":"https://api.github.com/users/coheigea/followers","following_url":"https://api.github.com/users/coheigea/following{/other_user}","gists_url":"https://api.github.com/users/coheigea/gists{/gist_id}","starred_url":"https://api.github.com/users/coheigea/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coheigea/subscriptions","organizations_url":"https://api.github.com/users/coheigea/orgs","repos_url":"https://api.github.com/users/coheigea/repos","events_url":"https://api.github.com/users/coheigea/events{/privacy}","received_events_url":"https://api.github.com/users/coheigea/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-11-02T06:27:02Z","updated_at":"2020-11-02T06:27:02Z","author_association":"CONTRIBUTOR","body":"What's the context behind this pull request? Can you create a JIRA describing the problem?","reactions":{"url":"https://api.github.com/repos/apache/cxf/issues/comments/720265307/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/cxf/issues/comments/720270394","html_url":"https://github.com/apache/cxf/pull/690#issuecomment-720270394","issue_url":"https://api.github.com/repos/apache/cxf/issues/690","id":720270394,"node_id":"MDEyOklzc3VlQ29tbWVudDcyMDI3MDM5NA==","user":{"login":"faucct","id":5202503,"node_id":"MDQ6VXNlcjUyMDI1MDM=","avatar_url":"https://avatars.githubusercontent.com/u/5202503?v=4","gravatar_id":"","url":"https://api.github.com/users/faucct","html_url":"https://github.com/faucct","followers_url":"https://api.github.com/users/faucct/followers","following_url":"https://api.github.com/users/faucct/following{/other_user}","gists_url":"https://api.github.com/users/faucct/gists{/gist_id}","starred_url":"https://api.github.com/users/faucct/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/faucct/subscriptions","organizations_url":"https://api.github.com/users/faucct/orgs","repos_url":"https://api.github.com/users/faucct/repos","events_url":"https://api.github.com/users/faucct/events{/privacy}","received_events_url":"https://api.github.com/users/faucct/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-11-02T06:39:30Z","updated_at":"2020-11-02T06:39:30Z","author_association":"NONE","body":"I don't think I remember the whole context, but the problem was that in case of `MediaType.MULTIPART_FORM_DATA_TYPE` the message body was also a stream and was being consumed twice. When debugging this issue I have found this hack and decided to plug in there.","reactions":{"url":"https://api.github.com/repos/apache/cxf/issues/comments/720270394/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/cxf/issues/comments/720329639","html_url":"https://github.com/apache/cxf/pull/717#issuecomment-720329639","issue_url":"https://api.github.com/repos/apache/cxf/issues/717","id":720329639,"node_id":"MDEyOklzc3VlQ29tbWVudDcyMDMyOTYzOQ==","user":{"login":"amarkevich","id":62415,"node_id":"MDQ6VXNlcjYyNDE1","avatar_url":"https://avatars.githubusercontent.com/u/62415?v=4","gravatar_id":"","url":"https://api.github.com/users/amarkevich","html_url":"https://github.com/amarkevich","followers_url":"https://api.github.com/users/amarkevich/followers","following_url":"https://api.github.com/users/amarkevich/following{/other_user}","gists_url":"https://api.github.com/users/amarkevich/gists{/gist_id}","starred_url":"https://api.github.com/users/amarkevich/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/amarkevich/subscriptions","organizations_url":"https://api.github.com/users/amarkevich/orgs","repos_url":"https://api.github.com/users/amarkevich/repos","events_url":"https://api.github.com/users/amarkevich/events{/privacy}","received_events_url":"https://api.github.com/users/amarkevich/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-11-02T08:48:01Z","updated_at":"2020-11-02T08:48:01Z","author_association":"CONTRIBUTOR","body":"Spring version update reverted: https://github.com/apache/cxf/commit/70fef6f5a78bb69548628a4380ac4abb98404dc9","reactions":{"url":"https://api.github.com/repos/apache/cxf/issues/comments/720329639/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/cxf/issues/comments/720858753","html_url":"https://github.com/apache/cxf/pull/718#issuecomment-720858753","issue_url":"https://api.github.com/repos/apache/cxf/issues/718","id":720858753,"node_id":"MDEyOklzc3VlQ29tbWVudDcyMDg1ODc1Mw==","user":{"login":"reta","id":509855,"node_id":"MDQ6VXNlcjUwOTg1NQ==","avatar_url":"https://avatars.githubusercontent.com/u/509855?v=4","gravatar_id":"","url":"https://api.github.com/users/reta","html_url":"https://github.com/reta","followers_url":"https://api.github.com/users/reta/followers","following_url":"https://api.github.com/users/reta/following{/other_user}","gists_url":"https://api.github.com/users/reta/gists{/gist_id}","starred_url":"https://api.github.com/users/reta/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/reta/subscriptions","organizations_url":"https://api.github.com/users/reta/orgs","repos_url":"https://api.github.com/users/reta/repos","events_url":"https://api.github.com/users/reta/events{/privacy}","received_events_url":"https://api.github.com/users/reta/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-11-03T01:52:02Z","updated_at":"2020-11-03T01:52:16Z","author_association":"MEMBER","body":"Thanks for the PR, @ropalka , could you please add  test cases for the change to `AnnotationHandlerChainBuilderTest`, thank you","reactions":{"url":"https://api.github.com/repos/apache/cxf/issues/comments/720858753/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/cxf/issues/comments/721138096","html_url":"https://github.com/apache/cxf/pull/717#issuecomment-721138096","issue_url":"https://api.github.com/repos/apache/cxf/issues/717","id":721138096,"node_id":"MDEyOklzc3VlQ29tbWVudDcyMTEzODA5Ng==","user":{"login":"reta","id":509855,"node_id":"MDQ6VXNlcjUwOTg1NQ==","avatar_url":"https://avatars.githubusercontent.com/u/509855?v=4","gravatar_id":"","url":"https://api.github.com/users/reta","html_url":"https://github.com/reta","followers_url":"https://api.github.com/users/reta/followers","following_url":"https://api.github.com/users/reta/following{/other_user}","gists_url":"https://api.github.com/users/reta/gists{/gist_id}","starred_url":"https://api.github.com/users/reta/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/reta/subscriptions","organizations_url":"https://api.github.com/users/reta/orgs","repos_url":"https://api.github.com/users/reta/repos","events_url":"https://api.github.com/users/reta/events{/privacy}","received_events_url":"https://api.github.com/users/reta/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-11-03T14:09:10Z","updated_at":"2020-11-03T14:09:10Z","author_association":"MEMBER","body":"@davidkarlsen that is correct, thanks @amarkevich, we have reported the regression (https://github.com/spring-projects/spring-framework/issues/25987) which should be fixed in next releases, it does not impact CXF directly but we have a number of tests to verify inter-frameworks integrations and those started to fail.","reactions":{"url":"https://api.github.com/repos/apache/cxf/issues/comments/721138096/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/cxf/issues/comments/721142679","html_url":"https://github.com/apache/cxf/pull/717#issuecomment-721142679","issue_url":"https://api.github.com/repos/apache/cxf/issues/717","id":721142679,"node_id":"MDEyOklzc3VlQ29tbWVudDcyMTE0MjY3OQ==","user":{"login":"coheigea","id":472162,"node_id":"MDQ6VXNlcjQ3MjE2Mg==","avatar_url":"https://avatars.githubusercontent.com/u/472162?v=4","gravatar_id":"","url":"https://api.github.com/users/coheigea","html_url":"https://github.com/coheigea","followers_url":"https://api.github.com/users/coheigea/followers","following_url":"https://api.github.com/users/coheigea/following{/other_user}","gists_url":"https://api.github.com/users/coheigea/gists{/gist_id}","starred_url":"https://api.github.com/users/coheigea/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/coheigea/subscriptions","organizations_url":"https://api.github.com/users/coheigea/orgs","repos_url":"https://api.github.com/users/coheigea/repos","events_url":"https://api.github.com/users/coheigea/events{/privacy}","received_events_url":"https://api.github.com/users/coheigea/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-11-03T14:17:23Z","updated_at":"2020-11-03T14:17:23Z","author_association":"CONTRIBUTOR","body":"@davidkarlsen I already merged this update to master yesterday","reactions":{"url":"https://api.github.com/repos/apache/cxf/issues/comments/721142679/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/cxf/issues/comments/724624482","html_url":"https://github.com/apache/cxf/pull/721#issuecomment-724624482","issue_url":"https://api.github.com/repos/apache/cxf/issues/721","id":724624482,"node_id":"MDEyOklzc3VlQ29tbWVudDcyNDYyNDQ4Mg==","user":{"login":"dufoli","id":202057,"node_id":"MDQ6VXNlcjIwMjA1Nw==","avatar_url":"https://avatars.githubusercontent.com/u/202057?v=4","gravatar_id":"","url":"https://api.github.com/users/dufoli","html_url":"https://github.com/dufoli","followers_url":"https://api.github.com/users/dufoli/followers","following_url":"https://api.github.com/users/dufoli/following{/other_user}","gists_url":"https://api.github.com/users/dufoli/gists{/gist_id}","starred_url":"https://api.github.com/users/dufoli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dufoli/subscriptions","organizations_url":"https://api.github.com/users/dufoli/orgs","repos_url":"https://api.github.com/users/dufoli/repos","events_url":"https://api.github.com/users/dufoli/events{/privacy}","received_events_url":"https://api.github.com/users/dufoli/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-11-10T10:50:51Z","updated_at":"2020-11-10T10:50:51Z","author_association":"CONTRIBUTOR","body":"hello, can I have some review about this PR. I know that I open asmHelper to external class but goal is to speed up performance of boot time of cxf by removing class generation.","reactions":{"url":"https://api.github.com/repos/apache/cxf/issues/comments/724624482/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/cxf/issues/comments/727207914","html_url":"https://github.com/apache/cxf/pull/721#issuecomment-727207914","issue_url":"https://api.github.com/repos/apache/cxf/issues/721","id":727207914,"node_id":"MDEyOklzc3VlQ29tbWVudDcyNzIwNzkxNA==","user":{"login":"dufoli","id":202057,"node_id":"MDQ6VXNlcjIwMjA1Nw==","avatar_url":"https://avatars.githubusercontent.com/u/202057?v=4","gravatar_id":"","url":"https://api.github.com/users/dufoli","html_url":"https://github.com/dufoli","followers_url":"https://api.github.com/users/dufoli/followers","following_url":"https://api.github.com/users/dufoli/following{/other_user}","gists_url":"https://api.github.com/users/dufoli/gists{/gist_id}","starred_url":"https://api.github.com/users/dufoli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dufoli/subscriptions","organizations_url":"https://api.github.com/users/dufoli/orgs","repos_url":"https://api.github.com/users/dufoli/repos","events_url":"https://api.github.com/users/dufoli/events{/privacy}","received_events_url":"https://api.github.com/users/dufoli/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-11-14T13:32:44Z","updated_at":"2020-11-14T13:32:44Z","author_association":"CONTRIBUTOR","body":"@rmannibucau I am close to end. But now test is not woking. I do not know why ... Can you help because no error pop ?","reactions":{"url":"https://api.github.com/repos/apache/cxf/issues/comments/727207914/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/cxf/issues/comments/727208414","html_url":"https://github.com/apache/cxf/pull/721#issuecomment-727208414","issue_url":"https://api.github.com/repos/apache/cxf/issues/721","id":727208414,"node_id":"MDEyOklzc3VlQ29tbWVudDcyNzIwODQxNA==","user":{"login":"dufoli","id":202057,"node_id":"MDQ6VXNlcjIwMjA1Nw==","avatar_url":"https://avatars.githubusercontent.com/u/202057?v=4","gravatar_id":"","url":"https://api.github.com/users/dufoli","html_url":"https://github.com/dufoli","followers_url":"https://api.github.com/users/dufoli/followers","following_url":"https://api.github.com/users/dufoli/following{/other_user}","gists_url":"https://api.github.com/users/dufoli/gists{/gist_id}","starred_url":"https://api.github.com/users/dufoli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dufoli/subscriptions","organizations_url":"https://api.github.com/users/dufoli/orgs","repos_url":"https://api.github.com/users/dufoli/repos","events_url":"https://api.github.com/users/dufoli/events{/privacy}","received_events_url":"https://api.github.com/users/dufoli/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-11-14T13:37:02Z","updated_at":"2020-11-14T13:37:02Z","author_association":"CONTRIBUTOR","body":"I have same bug than on my laptop:\r\njaxws_asm/package-info has been compiled by a more recent version of the Java Runtime (class file version 0.0), this version of the Java Runtime only recognizes class file versions up to 52.0","reactions":{"url":"https://api.github.com/repos/apache/cxf/issues/comments/727208414/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/cxf/issues/comments/727215829","html_url":"https://github.com/apache/cxf/pull/721#issuecomment-727215829","issue_url":"https://api.github.com/repos/apache/cxf/issues/721","id":727215829,"node_id":"MDEyOklzc3VlQ29tbWVudDcyNzIxNTgyOQ==","user":{"login":"dufoli","id":202057,"node_id":"MDQ6VXNlcjIwMjA1Nw==","avatar_url":"https://avatars.githubusercontent.com/u/202057?v=4","gravatar_id":"","url":"https://api.github.com/users/dufoli","html_url":"https://github.com/dufoli","followers_url":"https://api.github.com/users/dufoli/followers","following_url":"https://api.github.com/users/dufoli/following{/other_user}","gists_url":"https://api.github.com/users/dufoli/gists{/gist_id}","starred_url":"https://api.github.com/users/dufoli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dufoli/subscriptions","organizations_url":"https://api.github.com/users/dufoli/orgs","repos_url":"https://api.github.com/users/dufoli/repos","events_url":"https://api.github.com/users/dufoli/events{/privacy}","received_events_url":"https://api.github.com/users/dufoli/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-11-14T14:34:07Z","updated_at":"2020-11-14T14:34:07Z","author_association":"CONTRIBUTOR","body":"hmm issue come from OpcodesImpl in ASMHelperImpl. Because before it was a static.\r\n\r\n```\r\ntry {\r\n                Class<?> cls = helper.getASMClass();\r\n                cls = ClassLoaderUtils.loadClass(cls.getPackage().getName() + \".Opcodes\", cls);\r\n                for (Field f1 : OpcodesProxy.class.getDeclaredFields()) {\r\n                    Field f = cls.getDeclaredField(f1.getName());\r\n                    ReflectionUtil.setAccessible(f1).set(null, ReflectionUtil.setAccessible(f).get(null));\r\n                }\r\n            } catch (Throwable e) {\r\n                //ignore\r\n            }\r\n```\r\nI","reactions":{"url":"https://api.github.com/repos/apache/cxf/issues/comments/727215829/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/cxf/issues/comments/727227166","html_url":"https://github.com/apache/cxf/pull/721#issuecomment-727227166","issue_url":"https://api.github.com/repos/apache/cxf/issues/721","id":727227166,"node_id":"MDEyOklzc3VlQ29tbWVudDcyNzIyNzE2Ng==","user":{"login":"rmannibucau","id":1249546,"node_id":"MDQ6VXNlcjEyNDk1NDY=","avatar_url":"https://avatars.githubusercontent.com/u/1249546?v=4","gravatar_id":"","url":"https://api.github.com/users/rmannibucau","html_url":"https://github.com/rmannibucau","followers_url":"https://api.github.com/users/rmannibucau/followers","following_url":"https://api.github.com/users/rmannibucau/following{/other_user}","gists_url":"https://api.github.com/users/rmannibucau/gists{/gist_id}","starred_url":"https://api.github.com/users/rmannibucau/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmannibucau/subscriptions","organizations_url":"https://api.github.com/users/rmannibucau/orgs","repos_url":"https://api.github.com/users/rmannibucau/repos","events_url":"https://api.github.com/users/rmannibucau/events{/privacy}","received_events_url":"https://api.github.com/users/rmannibucau/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-11-14T15:58:28Z","updated_at":"2020-11-14T15:58:28Z","author_association":"CONTRIBUTOR","body":"@dufoli guess this class can stay static since it is a list of constants - I suspect a clean refacto would be to encapsulate all these internals but this is way too much for this PR/this topic.","reactions":{"url":"https://api.github.com/repos/apache/cxf/issues/comments/727227166/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/cxf/issues/comments/727236235","html_url":"https://github.com/apache/cxf/pull/721#issuecomment-727236235","issue_url":"https://api.github.com/repos/apache/cxf/issues/721","id":727236235,"node_id":"MDEyOklzc3VlQ29tbWVudDcyNzIzNjIzNQ==","user":{"login":"dufoli","id":202057,"node_id":"MDQ6VXNlcjIwMjA1Nw==","avatar_url":"https://avatars.githubusercontent.com/u/202057?v=4","gravatar_id":"","url":"https://api.github.com/users/dufoli","html_url":"https://github.com/dufoli","followers_url":"https://api.github.com/users/dufoli/followers","following_url":"https://api.github.com/users/dufoli/following{/other_user}","gists_url":"https://api.github.com/users/dufoli/gists{/gist_id}","starred_url":"https://api.github.com/users/dufoli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dufoli/subscriptions","organizations_url":"https://api.github.com/users/dufoli/orgs","repos_url":"https://api.github.com/users/dufoli/repos","events_url":"https://api.github.com/users/dufoli/events{/privacy}","received_events_url":"https://api.github.com/users/dufoli/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-11-14T17:06:24Z","updated_at":"2020-11-14T17:06:24Z","author_association":"CONTRIBUTOR","body":"I have fixed it but an issue on test...\r\n[ERROR] testException(org.apache.cxf.jaxws.CodeFirstTest)  Time elapsed: 1.082 s  <<< ERROR!\r\njavax.xml.ws.WebServiceException: org.apache.cxf.service.factory.ServiceConstructionException\r\n        at org.apache.cxf.jaxws.CodeFirstTest.testException(CodeFirstTest.java:260)\r\nCaused by: org.apache.cxf.service.factory.ServiceConstructionException\r\n        at org.apache.cxf.jaxws.CodeFirstTest.testException(CodeFirstTest.java:260)\r\nCaused by: com.sun.xml.bind.v2.runtime.IllegalAnnotationsException: 10 counts of IllegalAnnotationExceptions\r\n        at org.apache.cxf.jaxws.CodeFirstTest.testException(CodeFirstTest.java:260)\r\n\r\n[ERROR] testCXF1758(org.apache.cxf.jaxws.CodeFirstTest)  Time elapsed: 0.065 s  <<< ERROR!\r\norg.apache.cxf.service.factory.ServiceConstructionException\r\n        at org.apache.cxf.jaxws.CodeFirstTest.testCXF1758(CodeFirstTest.java:436)\r\nCaused by: com.sun.xml.bind.v2.runtime.IllegalAnnotationsException: 2 counts of IllegalAnnotationExceptions\r\n        at org.apache.cxf.jaxws.CodeFirstTest.testCXF1758(CodeFirstTest.java:436)\r\n\r\n[ERROR] testClient(org.apache.cxf.jaxws.CodeFirstTest)  Time elapsed: 0.057 s  <<< ERROR!\r\njavax.xml.ws.WebServiceException: org.apache.cxf.service.factory.ServiceConstructionException\r\n        at org.apache.cxf.jaxws.CodeFirstTest.testClient(CodeFirstTest.java:216)\r\nCaused by: org.apache.cxf.service.factory.ServiceConstructionException\r\n        at org.apache.cxf.jaxws.CodeFirstTest.testClient(CodeFirstTest.java:216)\r\nCaused by: com.sun.xml.bind.v2.runtime.IllegalAnnotationsException: 10 counts of IllegalAnnotationExceptions\r\n        at org.apache.cxf.jaxws.CodeFirstTest.testClient(CodeFirstTest.java:216)","reactions":{"url":"https://api.github.com/repos/apache/cxf/issues/comments/727236235/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/cxf/issues/comments/727236648","html_url":"https://github.com/apache/cxf/pull/721#issuecomment-727236648","issue_url":"https://api.github.com/repos/apache/cxf/issues/721","id":727236648,"node_id":"MDEyOklzc3VlQ29tbWVudDcyNzIzNjY0OA==","user":{"login":"dufoli","id":202057,"node_id":"MDQ6VXNlcjIwMjA1Nw==","avatar_url":"https://avatars.githubusercontent.com/u/202057?v=4","gravatar_id":"","url":"https://api.github.com/users/dufoli","html_url":"https://github.com/dufoli","followers_url":"https://api.github.com/users/dufoli/followers","following_url":"https://api.github.com/users/dufoli/following{/other_user}","gists_url":"https://api.github.com/users/dufoli/gists{/gist_id}","starred_url":"https://api.github.com/users/dufoli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dufoli/subscriptions","organizations_url":"https://api.github.com/users/dufoli/orgs","repos_url":"https://api.github.com/users/dufoli/repos","events_url":"https://api.github.com/users/dufoli/events{/privacy}","received_events_url":"https://api.github.com/users/dufoli/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-11-14T17:09:31Z","updated_at":"2020-11-14T17:09:31Z","author_association":"CONTRIBUTOR","body":"I agree that I end with a huge refacto instead of my simple addExternalClass function of the beginning.\r\nNot sure that a such invasive refacto is so needed ... more risk/clean code & more complete  versus less risk/simple solution.\r\n  ","reactions":{"url":"https://api.github.com/repos/apache/cxf/issues/comments/727236648/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/cxf/issues/comments/727240024","html_url":"https://github.com/apache/cxf/pull/721#issuecomment-727240024","issue_url":"https://api.github.com/repos/apache/cxf/issues/721","id":727240024,"node_id":"MDEyOklzc3VlQ29tbWVudDcyNzI0MDAyNA==","user":{"login":"rmannibucau","id":1249546,"node_id":"MDQ6VXNlcjEyNDk1NDY=","avatar_url":"https://avatars.githubusercontent.com/u/1249546?v=4","gravatar_id":"","url":"https://api.github.com/users/rmannibucau","html_url":"https://github.com/rmannibucau","followers_url":"https://api.github.com/users/rmannibucau/followers","following_url":"https://api.github.com/users/rmannibucau/following{/other_user}","gists_url":"https://api.github.com/users/rmannibucau/gists{/gist_id}","starred_url":"https://api.github.com/users/rmannibucau/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmannibucau/subscriptions","organizations_url":"https://api.github.com/users/rmannibucau/orgs","repos_url":"https://api.github.com/users/rmannibucau/repos","events_url":"https://api.github.com/users/rmannibucau/events{/privacy}","received_events_url":"https://api.github.com/users/rmannibucau/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-11-14T17:34:53Z","updated_at":"2020-11-14T17:34:53Z","author_association":"CONTRIBUTOR","body":"@dufoli the bug refacto is to encapsulate asm, not this PR ;). IMHO adding such a method was a blocker because it was only needed for your project and was not achieving the goal for CXF (ie enabling build time generation of bytecode). Current flavor enables that even if it requires some wrapping code (mojo integration mainly) but at least it is accessible which is good IMHO.\r\nAbout the errors, I would disable surefire to trim the stack traces (there is such a configuration in the plugin) to see the cause but looks like asm extraction broke some code, should be something not that hard to find like the opcode issue hopefully.","reactions":{"url":"https://api.github.com/repos/apache/cxf/issues/comments/727240024/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/cxf/issues/comments/727275573","html_url":"https://github.com/apache/cxf/pull/721#issuecomment-727275573","issue_url":"https://api.github.com/repos/apache/cxf/issues/721","id":727275573,"node_id":"MDEyOklzc3VlQ29tbWVudDcyNzI3NTU3Mw==","user":{"login":"dufoli","id":202057,"node_id":"MDQ6VXNlcjIwMjA1Nw==","avatar_url":"https://avatars.githubusercontent.com/u/202057?v=4","gravatar_id":"","url":"https://api.github.com/users/dufoli","html_url":"https://github.com/dufoli","followers_url":"https://api.github.com/users/dufoli/followers","following_url":"https://api.github.com/users/dufoli/following{/other_user}","gists_url":"https://api.github.com/users/dufoli/gists{/gist_id}","starred_url":"https://api.github.com/users/dufoli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dufoli/subscriptions","organizations_url":"https://api.github.com/users/dufoli/orgs","repos_url":"https://api.github.com/users/dufoli/repos","events_url":"https://api.github.com/users/dufoli/events{/privacy}","received_events_url":"https://api.github.com/users/dufoli/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-11-14T22:42:16Z","updated_at":"2020-11-14T22:42:37Z","author_association":"CONTRIBUTOR","body":"So it is ClassGeneratorClassLoader find which do not return the class ever loaded...\r\nI do not know why.\r\nI have try to add a test to reproduce but it worked.\r\n\r\npotential origin:\r\n- WeakReference is garbage collected.\r\n- is static different for different subclass ? I do not think so.\r\n- concurency issue ...\r\n- Method.declaringClass() is differente but why it was working before? it can be between sei and implementor...\r\n- is it possible to debug cxf unit test ?\r\n\r\nanyway issue is with: ClassGeneratorClassLoader.\r\nI am stuck.","reactions":{"url":"https://api.github.com/repos/apache/cxf/issues/comments/727275573/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/cxf/issues/comments/727532121","html_url":"https://github.com/apache/cxf/pull/721#issuecomment-727532121","issue_url":"https://api.github.com/repos/apache/cxf/issues/721","id":727532121,"node_id":"MDEyOklzc3VlQ29tbWVudDcyNzUzMjEyMQ==","user":{"login":"rmannibucau","id":1249546,"node_id":"MDQ6VXNlcjEyNDk1NDY=","avatar_url":"https://avatars.githubusercontent.com/u/1249546?v=4","gravatar_id":"","url":"https://api.github.com/users/rmannibucau","html_url":"https://github.com/rmannibucau","followers_url":"https://api.github.com/users/rmannibucau/followers","following_url":"https://api.github.com/users/rmannibucau/following{/other_user}","gists_url":"https://api.github.com/users/rmannibucau/gists{/gist_id}","starred_url":"https://api.github.com/users/rmannibucau/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmannibucau/subscriptions","organizations_url":"https://api.github.com/users/rmannibucau/orgs","repos_url":"https://api.github.com/users/rmannibucau/repos","events_url":"https://api.github.com/users/rmannibucau/events{/privacy}","received_events_url":"https://api.github.com/users/rmannibucau/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-11-15T08:08:46Z","updated_at":"2020-11-15T08:08:46Z","author_association":"CONTRIBUTOR","body":"You can debug normally the tests (through an IDE).\r\nNow you can also dump the bytecode you generate in a /tmp/foo.class and open it with jd-gui or javap to check what was generated before/after and see the diff.","reactions":{"url":"https://api.github.com/repos/apache/cxf/issues/comments/727532121/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/cxf/issues/comments/727535785","html_url":"https://github.com/apache/cxf/pull/721#issuecomment-727535785","issue_url":"https://api.github.com/repos/apache/cxf/issues/721","id":727535785,"node_id":"MDEyOklzc3VlQ29tbWVudDcyNzUzNTc4NQ==","user":{"login":"dufoli","id":202057,"node_id":"MDQ6VXNlcjIwMjA1Nw==","avatar_url":"https://avatars.githubusercontent.com/u/202057?v=4","gravatar_id":"","url":"https://api.github.com/users/dufoli","html_url":"https://github.com/dufoli","followers_url":"https://api.github.com/users/dufoli/followers","following_url":"https://api.github.com/users/dufoli/following{/other_user}","gists_url":"https://api.github.com/users/dufoli/gists{/gist_id}","starred_url":"https://api.github.com/users/dufoli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dufoli/subscriptions","organizations_url":"https://api.github.com/users/dufoli/orgs","repos_url":"https://api.github.com/users/dufoli/repos","events_url":"https://api.github.com/users/dufoli/events{/privacy}","received_events_url":"https://api.github.com/users/dufoli/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-11-15T08:44:17Z","updated_at":"2020-11-15T08:44:17Z","author_association":"CONTRIBUTOR","body":"@rmannibucau ok I debug the code this morning. and see that We have one class by method (which is ok) for interface and for implementor. and it is not same classLoader because not same declaring class.\r\n\r\nit seems that it was same case previously...So very odd. I have checked and previously class was generated for interface and and implementor and stored in 2 class loader. They have the same name....\r\n","reactions":{"url":"https://api.github.com/repos/apache/cxf/issues/comments/727535785/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/cxf/issues/comments/727536325","html_url":"https://github.com/apache/cxf/pull/721#issuecomment-727536325","issue_url":"https://api.github.com/repos/apache/cxf/issues/721","id":727536325,"node_id":"MDEyOklzc3VlQ29tbWVudDcyNzUzNjMyNQ==","user":{"login":"rmannibucau","id":1249546,"node_id":"MDQ6VXNlcjEyNDk1NDY=","avatar_url":"https://avatars.githubusercontent.com/u/1249546?v=4","gravatar_id":"","url":"https://api.github.com/users/rmannibucau","html_url":"https://github.com/rmannibucau","followers_url":"https://api.github.com/users/rmannibucau/followers","following_url":"https://api.github.com/users/rmannibucau/following{/other_user}","gists_url":"https://api.github.com/users/rmannibucau/gists{/gist_id}","starred_url":"https://api.github.com/users/rmannibucau/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmannibucau/subscriptions","organizations_url":"https://api.github.com/users/rmannibucau/orgs","repos_url":"https://api.github.com/users/rmannibucau/repos","events_url":"https://api.github.com/users/rmannibucau/events{/privacy}","received_events_url":"https://api.github.com/users/rmannibucau/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-11-15T08:49:15Z","updated_at":"2020-11-15T08:49:15Z","author_association":"CONTRIBUTOR","body":"@dufoli if you can point out some code i can probably have a more precise look. Classes being unique per classloader it can have been a bug which was not preventing to work but \"fixing\" the code with the refacto you did can heva make it exposed. That said, i'm not sure how they can have the same name, name should be deduced from the context it generates from.","reactions":{"url":"https://api.github.com/repos/apache/cxf/issues/comments/727536325/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/cxf/issues/comments/727540218","html_url":"https://github.com/apache/cxf/pull/721#issuecomment-727540218","issue_url":"https://api.github.com/repos/apache/cxf/issues/721","id":727540218,"node_id":"MDEyOklzc3VlQ29tbWVudDcyNzU0MDIxOA==","user":{"login":"dufoli","id":202057,"node_id":"MDQ6VXNlcjIwMjA1Nw==","avatar_url":"https://avatars.githubusercontent.com/u/202057?v=4","gravatar_id":"","url":"https://api.github.com/users/dufoli","html_url":"https://github.com/dufoli","followers_url":"https://api.github.com/users/dufoli/followers","following_url":"https://api.github.com/users/dufoli/following{/other_user}","gists_url":"https://api.github.com/users/dufoli/gists{/gist_id}","starred_url":"https://api.github.com/users/dufoli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dufoli/subscriptions","organizations_url":"https://api.github.com/users/dufoli/orgs","repos_url":"https://api.github.com/users/dufoli/repos","events_url":"https://api.github.com/users/dufoli/events{/privacy}","received_events_url":"https://api.github.com/users/dufoli/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-11-15T09:23:12Z","updated_at":"2020-11-15T09:27:56Z","author_association":"CONTRIBUTOR","body":"WrapperClassGenerator is in charge of producing the class.\r\nthey are called for sei and implementor.\r\nI do not understand why we generate method class for implementor because we will have same class with sei...\r\nAnyway, it was generated and add on different classloader but it do not produce the illegal annotation exception.\r\nHow do you dump file. I want to compare class because maybe something make them different....\r\nD:\\src\\cxf\\rt\\frontend\\jaxws\\src\\test\\java\\org\\apache\\cxf\\jaxws\\service\\AddNumbers.java\r\nD:\\src\\cxf\\rt\\frontend\\jaxws\\src\\test\\java\\org\\apache\\cxf\\jaxws\\service\\AddNumbersImpl.java\r\n\r\ncontain the same methods.\r\nAddNumbersImpl is implementation of sei AddNumbers.\r\n\r\nboth generate the class:\r\norg.apache.cxf.jaxws.service.jaxws_asm.addNumbers\r\nit is not in same class loader but it have exactly same signature and XmlRootElement name is the same.\r\nMaybe issue is with XmlType annotation.\r\n","reactions":{"url":"https://api.github.com/repos/apache/cxf/issues/comments/727540218/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/cxf/issues/comments/727541323","html_url":"https://github.com/apache/cxf/pull/721#issuecomment-727541323","issue_url":"https://api.github.com/repos/apache/cxf/issues/721","id":727541323,"node_id":"MDEyOklzc3VlQ29tbWVudDcyNzU0MTMyMw==","user":{"login":"rmannibucau","id":1249546,"node_id":"MDQ6VXNlcjEyNDk1NDY=","avatar_url":"https://avatars.githubusercontent.com/u/1249546?v=4","gravatar_id":"","url":"https://api.github.com/users/rmannibucau","html_url":"https://github.com/rmannibucau","followers_url":"https://api.github.com/users/rmannibucau/followers","following_url":"https://api.github.com/users/rmannibucau/following{/other_user}","gists_url":"https://api.github.com/users/rmannibucau/gists{/gist_id}","starred_url":"https://api.github.com/users/rmannibucau/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmannibucau/subscriptions","organizations_url":"https://api.github.com/users/rmannibucau/orgs","repos_url":"https://api.github.com/users/rmannibucau/repos","events_url":"https://api.github.com/users/rmannibucau/events{/privacy}","received_events_url":"https://api.github.com/users/rmannibucau/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-11-15T09:33:23Z","updated_at":"2020-11-15T09:33:23Z","author_association":"CONTRIBUTOR","body":"@dufoli when you do a classwriter.toByteArray() (like https://github.com/apache/cxf/pull/721/files#diff-0712fa792505d468314a10232664fa6b6d1c7cb1b58a8048b8310be1f677ae37R82) you can write the byte[] in a FileOutputStream to debug it \"offline\".","reactions":{"url":"https://api.github.com/repos/apache/cxf/issues/comments/727541323/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/cxf/issues/comments/727556282","html_url":"https://github.com/apache/cxf/pull/721#issuecomment-727556282","issue_url":"https://api.github.com/repos/apache/cxf/issues/721","id":727556282,"node_id":"MDEyOklzc3VlQ29tbWVudDcyNzU1NjI4Mg==","user":{"login":"dufoli","id":202057,"node_id":"MDQ6VXNlcjIwMjA1Nw==","avatar_url":"https://avatars.githubusercontent.com/u/202057?v=4","gravatar_id":"","url":"https://api.github.com/users/dufoli","html_url":"https://github.com/dufoli","followers_url":"https://api.github.com/users/dufoli/followers","following_url":"https://api.github.com/users/dufoli/following{/other_user}","gists_url":"https://api.github.com/users/dufoli/gists{/gist_id}","starred_url":"https://api.github.com/users/dufoli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dufoli/subscriptions","organizations_url":"https://api.github.com/users/dufoli/orgs","repos_url":"https://api.github.com/users/dufoli/repos","events_url":"https://api.github.com/users/dufoli/events{/privacy}","received_events_url":"https://api.github.com/users/dufoli/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-11-15T11:40:17Z","updated_at":"2020-11-15T11:40:17Z","author_association":"CONTRIBUTOR","body":"I have checked and generated class are the same.\r\nSo no issue on that part.","reactions":{"url":"https://api.github.com/repos/apache/cxf/issues/comments/727556282/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/cxf/issues/comments/727558031","html_url":"https://github.com/apache/cxf/pull/721#issuecomment-727558031","issue_url":"https://api.github.com/repos/apache/cxf/issues/721","id":727558031,"node_id":"MDEyOklzc3VlQ29tbWVudDcyNzU1ODAzMQ==","user":{"login":"rmannibucau","id":1249546,"node_id":"MDQ6VXNlcjEyNDk1NDY=","avatar_url":"https://avatars.githubusercontent.com/u/1249546?v=4","gravatar_id":"","url":"https://api.github.com/users/rmannibucau","html_url":"https://github.com/rmannibucau","followers_url":"https://api.github.com/users/rmannibucau/followers","following_url":"https://api.github.com/users/rmannibucau/following{/other_user}","gists_url":"https://api.github.com/users/rmannibucau/gists{/gist_id}","starred_url":"https://api.github.com/users/rmannibucau/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmannibucau/subscriptions","organizations_url":"https://api.github.com/users/rmannibucau/orgs","repos_url":"https://api.github.com/users/rmannibucau/repos","events_url":"https://api.github.com/users/rmannibucau/events{/privacy}","received_events_url":"https://api.github.com/users/rmannibucau/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-11-15T11:54:18Z","updated_at":"2020-11-15T11:54:18Z","author_association":"CONTRIBUTOR","body":"@dufoli how do I reproduce the error? ran core asm tests and jaxb tests and both run on my computer.","reactions":{"url":"https://api.github.com/repos/apache/cxf/issues/comments/727558031/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/cxf/issues/comments/727558191","html_url":"https://github.com/apache/cxf/pull/721#issuecomment-727558191","issue_url":"https://api.github.com/repos/apache/cxf/issues/721","id":727558191,"node_id":"MDEyOklzc3VlQ29tbWVudDcyNzU1ODE5MQ==","user":{"login":"dufoli","id":202057,"node_id":"MDQ6VXNlcjIwMjA1Nw==","avatar_url":"https://avatars.githubusercontent.com/u/202057?v=4","gravatar_id":"","url":"https://api.github.com/users/dufoli","html_url":"https://github.com/dufoli","followers_url":"https://api.github.com/users/dufoli/followers","following_url":"https://api.github.com/users/dufoli/following{/other_user}","gists_url":"https://api.github.com/users/dufoli/gists{/gist_id}","starred_url":"https://api.github.com/users/dufoli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dufoli/subscriptions","organizations_url":"https://api.github.com/users/dufoli/orgs","repos_url":"https://api.github.com/users/dufoli/repos","events_url":"https://api.github.com/users/dufoli/events{/privacy}","received_events_url":"https://api.github.com/users/dufoli/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-11-15T11:55:29Z","updated_at":"2020-11-15T11:55:29Z","author_association":"CONTRIBUTOR","body":"it with  rt frontend jaxws test","reactions":{"url":"https://api.github.com/repos/apache/cxf/issues/comments/727558191/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/cxf/issues/comments/727560043","html_url":"https://github.com/apache/cxf/pull/721#issuecomment-727560043","issue_url":"https://api.github.com/repos/apache/cxf/issues/721","id":727560043,"node_id":"MDEyOklzc3VlQ29tbWVudDcyNzU2MDA0Mw==","user":{"login":"dufoli","id":202057,"node_id":"MDQ6VXNlcjIwMjA1Nw==","avatar_url":"https://avatars.githubusercontent.com/u/202057?v=4","gravatar_id":"","url":"https://api.github.com/users/dufoli","html_url":"https://github.com/dufoli","followers_url":"https://api.github.com/users/dufoli/followers","following_url":"https://api.github.com/users/dufoli/following{/other_user}","gists_url":"https://api.github.com/users/dufoli/gists{/gist_id}","starred_url":"https://api.github.com/users/dufoli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dufoli/subscriptions","organizations_url":"https://api.github.com/users/dufoli/orgs","repos_url":"https://api.github.com/users/dufoli/repos","events_url":"https://api.github.com/users/dufoli/events{/privacy}","received_events_url":"https://api.github.com/users/dufoli/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-11-15T12:10:31Z","updated_at":"2020-11-15T12:10:31Z","author_association":"CONTRIBUTOR","body":"fulls stack trace\r\njavax.xml.ws.WebServiceException: org.apache.cxf.service.factory.ServiceConstructionException\r\n        at org.apache.cxf.jaxws.ServiceImpl.getPort(ServiceImpl.java:360)\r\n        at org.apache.cxf.jaxws.CodeFirstTest.testClient(CodeFirstTest.java:216)\r\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n        at java.lang.reflect.Method.invoke(Method.java:498)\r\n        at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)\r\n        at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\r\n        at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)\r\n        at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\r\n        at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\r\n        at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)\r\n        at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n        at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)\r\n        at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)\r\n        at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)\r\n        at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)\r\n        at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n        at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n        at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n        at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n        at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n        at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\r\n        at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n        at org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n        at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:365)\r\n        at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:273)\r\n        at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)\r\n        at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:159)\r\n        at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)\r\n        at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)\r\n        at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)\r\n        at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)\r\nCaused by: org.apache.cxf.service.factory.ServiceConstructionException\r\n        at org.apache.cxf.jaxb.JAXBDataBinding.initialize(JAXBDataBinding.java:354)\r\n        at org.apache.cxf.service.factory.AbstractServiceFactoryBean.initializeDataBindings(AbstractServiceFactoryBean.java:86)\r\n        at org.apache.cxf.wsdl.service.factory.ReflectionServiceFactoryBean.buildServiceFromClass(ReflectionServiceFactoryBean.java:469)\r\n        at org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean.buildServiceFromClass(JaxWsServiceFactoryBean.java:693)\r\n        at org.apache.cxf.wsdl.service.factory.ReflectionServiceFactoryBean.initializeServiceModel(ReflectionServiceFactoryBean.java:529)\r\n        at org.apache.cxf.wsdl.service.factory.ReflectionServiceFactoryBean.create(ReflectionServiceFactoryBean.java:262)\r\n        at org.apache.cxf.jaxws.support.JaxWsServiceFactoryBean.create(JaxWsServiceFactoryBean.java:199)\r\n        at org.apache.cxf.frontend.AbstractWSDLBasedEndpointFactory.createEndpoint(AbstractWSDLBasedEndpointFactory.java:103)\r\n        at org.apache.cxf.frontend.ClientFactoryBean.create(ClientFactoryBean.java:91)\r\n        at org.apache.cxf.frontend.ClientProxyFactoryBean.create(ClientProxyFactoryBean.java:159)\r\n        at org.apache.cxf.jaxws.JaxWsProxyFactoryBean.create(JaxWsProxyFactoryBean.java:142)\r\n        at org.apache.cxf.jaxws.ServiceImpl.createPort(ServiceImpl.java:492)\r\n        at org.apache.cxf.jaxws.ServiceImpl.getPort(ServiceImpl.java:358)\r\n        ... 32 more\r\nCaused by: com.sun.xml.bind.v2.runtime.IllegalAnnotationsException: 10 counts of IllegalAnnotationExceptions\r\nDeux classes portent le même nom de type XML \"{http://service.jaxws.cxf.apache.org/}getStringArrayResponse\". Utilisez @XmlType.name et XmlType.namespace pour leur affecter des noms différents.\r\n        this problem is related to the following location:\r\n                at org.apache.cxf.jaxws.service.jaxws_asm.GetStringArrayResponse\r\n        this problem is related to the following location:\r\n                at org.apache.cxf.jaxws.service.jaxws_asm.GetStringArrayResponse\r\n...\r\n        at com.sun.xml.bind.v2.runtime.IllegalAnnotationsException$Builder.check(IllegalAnnotationsException.java:76)\r\n        at com.sun.xml.bind.v2.runtime.JAXBContextImpl.getTypeInfoSet(JAXBContextImpl.java:450)\r\n        at com.sun.xml.bind.v2.runtime.JAXBContextImpl.<init>(JAXBContextImpl.java:282)\r\n        at com.sun.xml.bind.v2.runtime.JAXBContextImpl.<init>(JAXBContextImpl.java:109)\r\n        at com.sun.xml.bind.v2.runtime.JAXBContextImpl$JAXBContextBuilder.build(JAXBContextImpl.java:1142)\r\n        at com.sun.xml.bind.v2.ContextFactory.createContext(ContextFactory.java:141)\r\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n        at java.lang.reflect.Method.invoke(Method.java:498)\r\n        at javax.xml.bind.ContextFinder.newInstance(ContextFinder.java:247)\r\n        at javax.xml.bind.ContextFinder.newInstance(ContextFinder.java:234)\r\n        at javax.xml.bind.ContextFinder.find(ContextFinder.java:441)\r\n        at javax.xml.bind.JAXBContext.newInstance(JAXBContext.java:641)\r\n        at org.apache.cxf.common.jaxb.JAXBContextCache$2.run(JAXBContextCache.java:345)\r\n        at org.apache.cxf.common.jaxb.JAXBContextCache$2.run(JAXBContextCache.java:343)\r\n        at java.security.AccessController.doPrivileged(Native Method)\r\n        at org.apache.cxf.common.jaxb.JAXBContextCache.createContext(JAXBContextCache.java:343)\r\n        at org.apache.cxf.common.jaxb.JAXBContextCache.getCachedContextAndSchemas(JAXBContextCache.java:245)\r\n        at org.apache.cxf.jaxb.JAXBDataBinding.createJAXBContextAndSchemas(JAXBDataBinding.java:493)\r\n        at org.apache.cxf.jaxb.JAXBDataBinding.initialize(JAXBDataBinding.java:352)","reactions":{"url":"https://api.github.com/repos/apache/cxf/issues/comments/727560043/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/cxf/issues/comments/727563215","html_url":"https://github.com/apache/cxf/pull/721#issuecomment-727563215","issue_url":"https://api.github.com/repos/apache/cxf/issues/721","id":727563215,"node_id":"MDEyOklzc3VlQ29tbWVudDcyNzU2MzIxNQ==","user":{"login":"dufoli","id":202057,"node_id":"MDQ6VXNlcjIwMjA1Nw==","avatar_url":"https://avatars.githubusercontent.com/u/202057?v=4","gravatar_id":"","url":"https://api.github.com/users/dufoli","html_url":"https://github.com/dufoli","followers_url":"https://api.github.com/users/dufoli/followers","following_url":"https://api.github.com/users/dufoli/following{/other_user}","gists_url":"https://api.github.com/users/dufoli/gists{/gist_id}","starred_url":"https://api.github.com/users/dufoli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dufoli/subscriptions","organizations_url":"https://api.github.com/users/dufoli/orgs","repos_url":"https://api.github.com/users/dufoli/repos","events_url":"https://api.github.com/users/dufoli/events{/privacy}","received_events_url":"https://api.github.com/users/dufoli/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-11-15T12:36:45Z","updated_at":"2020-11-15T12:36:45Z","author_association":"CONTRIBUTOR","body":"got it.\r\nit is because JAXBDataBinding.initialize\r\ncontextClasses contain both classes.\r\n\r\nthere are 2 serviceInfo and \"extra.class\" properties contain 10 classes each time.","reactions":{"url":"https://api.github.com/repos/apache/cxf/issues/comments/727563215/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/cxf/issues/comments/727568116","html_url":"https://github.com/apache/cxf/pull/721#issuecomment-727568116","issue_url":"https://api.github.com/repos/apache/cxf/issues/721","id":727568116,"node_id":"MDEyOklzc3VlQ29tbWVudDcyNzU2ODExNg==","user":{"login":"dufoli","id":202057,"node_id":"MDQ6VXNlcjIwMjA1Nw==","avatar_url":"https://avatars.githubusercontent.com/u/202057?v=4","gravatar_id":"","url":"https://api.github.com/users/dufoli","html_url":"https://github.com/dufoli","followers_url":"https://api.github.com/users/dufoli/followers","following_url":"https://api.github.com/users/dufoli/following{/other_user}","gists_url":"https://api.github.com/users/dufoli/gists{/gist_id}","starred_url":"https://api.github.com/users/dufoli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dufoli/subscriptions","organizations_url":"https://api.github.com/users/dufoli/orgs","repos_url":"https://api.github.com/users/dufoli/repos","events_url":"https://api.github.com/users/dufoli/events{/privacy}","received_events_url":"https://api.github.com/users/dufoli/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-11-15T13:15:39Z","updated_at":"2020-11-15T13:15:39Z","author_association":"CONTRIBUTOR","body":"found it!\r\nWrapperClassCreator wrapperGen = getBus().getExtension(WrapperClassCreator.class); produce always the same instance...\r\nno initialization so wrapperBeans is not reset. easy fix!","reactions":{"url":"https://api.github.com/repos/apache/cxf/issues/comments/727568116/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/cxf/issues/comments/727572118","html_url":"https://github.com/apache/cxf/pull/721#issuecomment-727572118","issue_url":"https://api.github.com/repos/apache/cxf/issues/721","id":727572118,"node_id":"MDEyOklzc3VlQ29tbWVudDcyNzU3MjExOA==","user":{"login":"rmannibucau","id":1249546,"node_id":"MDQ6VXNlcjEyNDk1NDY=","avatar_url":"https://avatars.githubusercontent.com/u/1249546?v=4","gravatar_id":"","url":"https://api.github.com/users/rmannibucau","html_url":"https://github.com/rmannibucau","followers_url":"https://api.github.com/users/rmannibucau/followers","following_url":"https://api.github.com/users/rmannibucau/following{/other_user}","gists_url":"https://api.github.com/users/rmannibucau/gists{/gist_id}","starred_url":"https://api.github.com/users/rmannibucau/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmannibucau/subscriptions","organizations_url":"https://api.github.com/users/rmannibucau/orgs","repos_url":"https://api.github.com/users/rmannibucau/repos","events_url":"https://api.github.com/users/rmannibucau/events{/privacy}","received_events_url":"https://api.github.com/users/rmannibucau/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-11-15T13:45:31Z","updated_at":"2020-11-15T13:45:31Z","author_association":"CONTRIBUTOR","body":"@dufoli congrats ;)\r\n\r\nWonder if the static weak maps can't be dropped with something like:\r\n\r\n    diff --git a/core/src/main/java/org/apache/cxf/common/spi/ClassGeneratorClassLoader.java b/core/src/main/java/org/apache/cxf/common/spi/ClassGeneratorClassLoader.java\r\n    index 72654c0d73..d1ac513e90 100644\r\n    --- a/core/src/main/java/org/apache/cxf/common/spi/ClassGeneratorClassLoader.java\r\n    +++ b/core/src/main/java/org/apache/cxf/common/spi/ClassGeneratorClassLoader.java\r\n    @@ -24,27 +24,28 @@ import java.io.FileNotFoundException;\r\n     import java.io.FileOutputStream;\r\n     import java.io.IOException;\r\n     import java.lang.ref.WeakReference;\r\n    +import java.util.HashMap;\r\n     import java.util.Map;\r\n     import java.util.concurrent.ConcurrentHashMap;\r\n     \r\n    +import org.apache.cxf.Bus;\r\n    +import org.apache.cxf.BusFactory;\r\n     import org.apache.cxf.common.util.WeakIdentityHashMap;\r\n     \r\n     public class ClassGeneratorClassLoader {\r\n    -    protected static final Map<ClassLoader, WeakReference<TypeHelperClassLoader>> LOADER_MAP\r\n    -            = new WeakIdentityHashMap<>();\r\n    -    protected static final Map<Class<?>, WeakReference<TypeHelperClassLoader>> CLASS_MAP\r\n    -            = new WeakIdentityHashMap<>();\r\n         private static final boolean DEBUG = true;\r\n    +    protected final Bus bus;\r\n     \r\n    -    public ClassGeneratorClassLoader() {\r\n    +    public ClassGeneratorClassLoader(final Bus bus) {\r\n    +        this.bus = bus == null ? BusFactory.getDefaultBus() : bus;\r\n         }\r\n     \r\n     \r\n    -    protected Class<?> loadClass(String className, Class<?> clz, byte[] bytes) {\r\n    +    protected Class<?> loadClass(Bus bus, String className, Class<?> clz, byte[] bytes) {\r\n             if (DEBUG) {\r\n                 saveClass(className, bytes);\r\n             }\r\n    -        TypeHelperClassLoader loader = ClassGeneratorClassLoader.getTypeHelperClassLoader(clz);\r\n    +        TypeHelperClassLoader loader = bus.getExtension(TypeHelperClassLoader.class);\r\n             synchronized (loader) {\r\n                 Class<?> cls = loader.lookupDefinedClass(className);\r\n                 if (cls == null) {\r\n    @@ -63,7 +64,7 @@ public class ClassGeneratorClassLoader {\r\n     \r\n             File file;\r\n             try {\r\n    -            String classFileName = getFilePath(className);\r\n    +            String classFileName = \"/tmp/\" + getFilePath(className);\r\n                 String finalFileName = classFileName;\r\n                 file = new File(finalFileName);\r\n                 int i = 1;\r\n    @@ -84,8 +85,8 @@ public class ClassGeneratorClassLoader {\r\n                 e.printStackTrace();\r\n             }\r\n         }\r\n    -    protected Class<?> loadClass(String className, ClassLoader l, byte[] bytes) {\r\n    -        TypeHelperClassLoader loader = ClassGeneratorClassLoader.getTypeHelperClassLoader(l);\r\n    +    protected Class<?> loadClass(String className, byte[] bytes) {\r\n    +        TypeHelperClassLoader loader = getOrCreateLoader();\r\n             synchronized (loader) {\r\n                 Class<?> cls = loader.lookupDefinedClass(className);\r\n                 if (cls == null) {\r\n    @@ -94,39 +95,28 @@ public class ClassGeneratorClassLoader {\r\n                 return cls;\r\n             }\r\n         }\r\n    -    protected Class<?> findClass(String className, Class<?> clz) {\r\n    -        TypeHelperClassLoader loader = ClassGeneratorClassLoader.getTypeHelperClassLoader(clz);\r\n    -        return loader.lookupDefinedClass(className);\r\n    -    }\r\n    -    protected Class<?> findClass(String className, ClassLoader l) {\r\n    -        TypeHelperClassLoader loader = ClassGeneratorClassLoader.getTypeHelperClassLoader(l);\r\n    -        return loader.lookupDefinedClass(className);\r\n    +    protected Class<?> findClass(String className) {\r\n    +        return getOrCreateLoader().lookupDefinedClass(className);\r\n         }\r\n     \r\n    -    public static synchronized TypeHelperClassLoader getTypeHelperClassLoader(ClassLoader l) {\r\n    -        WeakReference<TypeHelperClassLoader> ref = LOADER_MAP.get(l);\r\n    -        TypeHelperClassLoader ret;\r\n    -        if (ref == null || ref.get() == null) {\r\n    -            ret = new TypeHelperClassLoader(l);\r\n    -            LOADER_MAP.put(l, new WeakReference<TypeHelperClassLoader>(ret));\r\n    -        } else {\r\n    -            ret = ref.get();\r\n    -        }\r\n    -        return ret;\r\n    -    }\r\n    -    public static synchronized TypeHelperClassLoader getTypeHelperClassLoader(Class<?> cls) {\r\n    -        WeakReference<TypeHelperClassLoader> ref = CLASS_MAP.get(cls);\r\n    -        TypeHelperClassLoader ret;\r\n    -        if (ref == null || ref.get() == null) {\r\n    -            ret = new TypeHelperClassLoader(cls.getClassLoader());\r\n    -            CLASS_MAP.put(cls, new WeakReference<TypeHelperClassLoader>(ret));\r\n    -        } else {\r\n    -            ret = ref.get();\r\n    +    private TypeHelperClassLoader getOrCreateLoader() {\r\n    +        TypeHelperClassLoader loader = bus.getExtension(TypeHelperClassLoader.class);\r\n    +        if (loader == null) {\r\n    +            synchronized (bus) {\r\n    +                loader = bus.getExtension(TypeHelperClassLoader.class);\r\n    +                if (loader == null) {\r\n    +                    ClassLoader parent = bus.getExtension(ClassLoader.class);\r\n    +                    if (parent == null) {\r\n    +                        parent = Thread.currentThread().getContextClassLoader();\r\n    +                    }\r\n    +                    loader = new TypeHelperClassLoader(parent);\r\n    +                    bus.setExtension(loader, TypeHelperClassLoader.class);\r\n    +                }\r\n    +            }\r\n             }\r\n    -        return ret;\r\n    +        return loader;\r\n         }\r\n     \r\n    -\r\n         public static class TypeHelperClassLoader extends ClassLoader {\r\n             ConcurrentHashMap<String, Class<?>> defined = new ConcurrentHashMap<>();\r\n     \r\n    diff --git a/core/src/main/java/org/apache/cxf/common/spi/NamespaceClassGenerator.java b/core/src/main/java/org/apache/cxf/common/spi/NamespaceClassGenerator.java\r\n    index a58199e05a..067ef3e2fe 100644\r\n    --- a/core/src/main/java/org/apache/cxf/common/spi/NamespaceClassGenerator.java\r\n    +++ b/core/src/main/java/org/apache/cxf/common/spi/NamespaceClassGenerator.java\r\n    @@ -35,6 +35,7 @@ public class NamespaceClassGenerator extends ClassGeneratorClassLoader implement\r\n         ASMHelper helper;\r\n     \r\n         public NamespaceClassGenerator(Bus bus) {\r\n    +        super(bus);\r\n             helper = bus.getExtension(ASMHelper.class);\r\n         }\r\n     \r\n    @@ -52,16 +53,16 @@ public class NamespaceClassGenerator extends ClassGeneratorClassLoader implement\r\n     \r\n             String className = \"org.apache.cxf.jaxb.NamespaceMapper\";\r\n             className += postFix;\r\n    -        Class<?> cls = findClass(className, NamespaceClassGenerator.class);\r\n    +        Class<?> cls = findClass(className);\r\n             if (cls == null) {\r\n    -            cls = findClass(className, mcls);\r\n    +            cls = findClass(className);\r\n             }\r\n             Throwable t = null;\r\n             if (cls == null) {\r\n                 try {\r\n                     byte[] bts = createNamespaceWrapperInternal(postFix);\r\n                     className = \"org.apache.cxf.jaxb.NamespaceMapper\" + postFix;\r\n    -                return loadClass(className, mcls, bts);\r\n    +                return loadClass(className, bts);\r\n                 } catch (RuntimeException ex) {\r\n                     // continue\r\n                     t = ex;\r\n    @@ -83,12 +84,12 @@ public class NamespaceClassGenerator extends ClassGeneratorClassLoader implement\r\n     \r\n         private Class<?> createEclipseNamespaceMapper(Class<?> mcls, Map<String, String> map) {\r\n             String className = \"org.apache.cxf.jaxb.EclipseNamespaceMapper\";\r\n    -        Class<?> cls = findClass(className, NamespaceClassGenerator.class);\r\n    +        Class<?> cls = findClass(className);\r\n             if (cls != null) {\r\n                 return cls;\r\n             }\r\n             byte[] bts = createEclipseNamespaceMapper();\r\n    -        return loadClass(className, mcls, bts);\r\n    +        return loadClass(className, bts);\r\n         }\r\n     \r\n         /*\r\n    @@ -157,7 +158,7 @@ public class NamespaceClassGenerator extends ClassGeneratorClassLoader implement\r\n             mv.visitInsn(Opcodes.RETURN);\r\n             ASMHelper.Label l2 = helper.createLabel();\r\n             mv.visitLabel(l2);\r\n    -        mv.visitMaxs(2, 2);\r\n    +        mv.visitMaxs(0, 0);\r\n             mv.visitEnd();\r\n     \r\n     \r\n    @@ -178,7 +179,7 @@ public class NamespaceClassGenerator extends ClassGeneratorClassLoader implement\r\n             mv.visitLabel(l2);\r\n             mv.visitLocalVariable(\"this\", \"L\" + slashedName + \";\", null, l0, l2, 0);\r\n             mv.visitLocalVariable(\"contextualNamespaceDecls\", \"[Ljava/lang/String;\", null, l0, l2, 1);\r\n    -        mv.visitMaxs(2, 2);\r\n    +        mv.visitMaxs(0, 0);\r\n             mv.visitEnd();\r\n     \r\n             mv = cw.visitMethod(Opcodes.ACC_PUBLIC, \"getContextualNamespaceDecls\", \"()[Ljava/lang/String;\", null, null);\r\n    @@ -194,7 +195,7 @@ public class NamespaceClassGenerator extends ClassGeneratorClassLoader implement\r\n             mv.visitLabel(l1);\r\n             mv.visitLocalVariable(\"this\", \"L\" + slashedName + \";\", null, l0, l1, 0);\r\n     \r\n    -        mv.visitMaxs(1, 1);\r\n    +        mv.visitMaxs(0, 0);\r\n             mv.visitEnd();\r\n     \r\n     \r\n    @@ -282,7 +283,7 @@ public class NamespaceClassGenerator extends ClassGeneratorClassLoader implement\r\n             mv.visitLocalVariable(\"sup\", \"[Ljava/lang/String;\", null, l1, l10, 1);\r\n             mv.visitLocalVariable(\"s\", \"Ljava/util/List;\", \"Ljava/util/List<Ljava/lang/String;>;\", l4, l10, 2);\r\n             mv.visitLocalVariable(\"x\", \"I\", null, l5, l9, 3);\r\n    -        mv.visitMaxs(3, 4);\r\n    +        mv.visitMaxs(0, 0);\r\n             mv.visitEnd();\r\n     \r\n             cw.visitEnd();\r\n    @@ -332,7 +333,7 @@ public class NamespaceClassGenerator extends ClassGeneratorClassLoader implement\r\n             mv.visitTypeInsn(Opcodes.ANEWARRAY, \"java/lang/String\");\r\n             mv.visitFieldInsn(Opcodes.PUTSTATIC, postFixedName, \"EMPTY_STRING\", \"[Ljava/lang/String;\");\r\n             mv.visitInsn(Opcodes.RETURN);\r\n    -        mv.visitMaxs(1, 0);\r\n    +        mv.visitMaxs(0, 0);\r\n             mv.visitEnd();\r\n     \r\n             mv = cw.visitMethod(Opcodes.ACC_PUBLIC, \"<init>\",\r\n    @@ -366,7 +367,7 @@ public class NamespaceClassGenerator extends ClassGeneratorClassLoader implement\r\n             mv.visitLocalVariable(\"nspref\",\r\n                     \"Ljava/util/Map;\", \"Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;\",\r\n                     l0, l4, 1);\r\n    -        mv.visitMaxs(2, 2);\r\n    +        mv.visitMaxs(0, 0);\r\n             mv.visitEnd();\r\n     \r\n             mv = cw.visitMethod(Opcodes.ACC_PUBLIC, \"getPreferredPrefix\",\r\n    @@ -406,7 +407,7 @@ public class NamespaceClassGenerator extends ClassGeneratorClassLoader implement\r\n             mv.visitLocalVariable(\"suggestion\", \"Ljava/lang/String;\", null, l0, l4, 2);\r\n             mv.visitLocalVariable(\"requirePrefix\", \"Z\", null, l0, l4, 3);\r\n             mv.visitLocalVariable(\"prefix\", \"Ljava/lang/String;\", null, l1, l4, 4);\r\n    -        mv.visitMaxs(2, 5);\r\n    +        mv.visitMaxs(0, 0);\r\n             mv.visitEnd();\r\n     \r\n             mv = cw.visitMethod(Opcodes.ACC_PUBLIC, \"setContextualNamespaceDecls\", \"([Ljava/lang/String;)V\", null, null);\r\n    @@ -425,7 +426,7 @@ public class NamespaceClassGenerator extends ClassGeneratorClassLoader implement\r\n             mv.visitLabel(l2);\r\n             mv.visitLocalVariable(\"this\", \"L\" + postFixedName + \";\", null, l0, l2, 0);\r\n             mv.visitLocalVariable(\"contextualNamespaceDecls\", \"[Ljava/lang/String;\", null, l0, l2, 1);\r\n    -        mv.visitMaxs(2, 2);\r\n    +        mv.visitMaxs(0, 0);\r\n             mv.visitEnd();\r\n     \r\n             mv = cw.visitMethod(Opcodes.ACC_PUBLIC, \"getContextualNamespaceDecls\", \"()[Ljava/lang/String;\", null, null);\r\n    @@ -441,7 +442,7 @@ public class NamespaceClassGenerator extends ClassGeneratorClassLoader implement\r\n             mv.visitLabel(l1);\r\n             mv.visitLocalVariable(\"this\", \"L\" + postFixedName + \";\", null, l0, l1, 0);\r\n     \r\n    -        mv.visitMaxs(1, 1);\r\n    +        mv.visitMaxs(0, 0);\r\n             mv.visitEnd();\r\n     \r\n             cw.visitEnd();\r\n    diff --git a/core/src/main/java/org/apache/cxf/common/util/ASMHelperImpl.java b/core/src/main/java/org/apache/cxf/common/util/ASMHelperImpl.java\r\n    index d33bf83c25..5ee0315eb1 100644\r\n    --- a/core/src/main/java/org/apache/cxf/common/util/ASMHelperImpl.java\r\n    +++ b/core/src/main/java/org/apache/cxf/common/util/ASMHelperImpl.java\r\n    @@ -213,34 +213,15 @@ public class ASMHelperImpl implements ASMHelper {\r\n                         throw new RuntimeException(\"No ASM ClassWriterFound\", error);\r\n                     }\r\n                 }\r\n    +            // ASM >= 3.x (since cxf is java 8 min we don't care of asm 1/2)\r\n                 try {\r\n    -                // ASM 1.5.x/2.x\r\n                     Constructor<?> cons\r\n    -                        = cwClass.getConstructor(new Class<?>[] {Boolean.TYPE});\r\n    -\r\n    -                try {\r\n    -                    // got constructor, now check if it's 1.x which is very\r\n    -                    // different from 2.x and 3.x\r\n    -                    cwClass.getMethod(\"newConstInt\", new Class<?>[] {Integer.TYPE});\r\n    -                    // newConstInt was removed in 2.x, if we get this far, we're\r\n    -                    // using 1.5.x,\r\n    -                    // set to null so we don't attempt to use it.\r\n    -                    badASM = true;\r\n    -                } catch (Throwable t) {\r\n    -                    newCw = cons.newInstance(new Object[] {Boolean.TRUE});\r\n    -                }\r\n    -\r\n    -            } catch (Throwable e) {\r\n    -                // ASM 3.x/4.x\r\n    -                try {\r\n    -                    Constructor<?> cons\r\n    -                            = cwClass.getConstructor(new Class<?>[] {Integer.TYPE});\r\n    -                    int i = cwClass.getField(\"COMPUTE_MAXS\").getInt(null);\r\n    -                    i |= cwClass.getField(\"COMPUTE_FRAMES\").getInt(null);\r\n    -                    newCw = cons.newInstance(new Object[] {Integer.valueOf(i)});\r\n    -                } catch (Throwable e1) {\r\n    -                    // ignore\r\n    -                }\r\n    +                        = cwClass.getConstructor(new Class<?>[] {Integer.TYPE});\r\n    +                int i = cwClass.getField(\"COMPUTE_MAXS\").getInt(null);\r\n    +                i |= cwClass.getField(\"COMPUTE_FRAMES\").getInt(null);\r\n    +                newCw = cons.newInstance(new Object[] {Integer.valueOf(i)});\r\n    +            } catch (Throwable e1) {\r\n    +                // ignore\r\n                 }\r\n             }\r\n             if (newCw != null) {\r\n    diff --git a/core/src/main/java/org/apache/cxf/common/util/ReflectionInvokationHandler.java b/core/src/main/java/org/apache/cxf/common/util/ReflectionInvokationHandler.java\r\n    index a7524b68ed..2fc51b09d0 100644\r\n    --- a/core/src/main/java/org/apache/cxf/common/util/ReflectionInvokationHandler.java\r\n    +++ b/core/src/main/java/org/apache/cxf/common/util/ReflectionInvokationHandler.java\r\n    @@ -53,6 +53,12 @@ public class ReflectionInvokationHandler implements InvocationHandler {\r\n                 Method m;\r\n                 try {\r\n                     m = targetClass.getMethod(method.getName(), parameterTypes);\r\n    +                if (\"visitMaxs\".equalsIgnoreCase(method.getName()) && 2 == method.getParameterCount()) { // force to compute frames and stack\r\n    +                    if (!m.isAccessible()) {\r\n    +                        ReflectionUtil.setAccessible(m);\r\n    +                    }\r\n    +                    return m.invoke(target, 0, 0);\r\n    +                }\r\n                 } catch (NoSuchMethodException nsme) {\r\n     \r\n                     boolean[] optionals = new boolean[method.getParameterTypes().length];\r\n    diff --git a/core/src/test/java/org/apache/cxf/common/util/ASMHelperTest.java b/core/src/test/java/org/apache/cxf/common/util/ASMHelperTest.java\r\n    index b2c5ce70ce..c6e335b1c2 100644\r\n    --- a/core/src/test/java/org/apache/cxf/common/util/ASMHelperTest.java\r\n    +++ b/core/src/test/java/org/apache/cxf/common/util/ASMHelperTest.java\r\n    @@ -21,6 +21,8 @@ package org.apache.cxf.common.util;\r\n     import java.lang.reflect.Method;\r\n     import java.lang.reflect.Type;\r\n     \r\n    +import org.apache.cxf.Bus;\r\n    +import org.apache.cxf.bus.extension.ExtensionManagerBus;\r\n     import org.apache.cxf.common.spi.ClassGeneratorClassLoader;\r\n     \r\n     import org.junit.Test;\r\n    @@ -43,12 +45,16 @@ public class ASMHelperTest {\r\n     \r\n         @Test\r\n         public void testLoader() throws Exception {\r\n    -        CustomLoader cl = new CustomLoader();\r\n    +        CustomLoader cl = new CustomLoader(new ExtensionManagerBus());\r\n             Class<?> clz = cl.createCustom();\r\n             assertNotNull(clz);\r\n             assertTrue(cl.isFound());\r\n         }\r\n         public class CustomLoader extends ClassGeneratorClassLoader {\r\n    +        public CustomLoader(Bus bus) {\r\n    +            super(bus);\r\n    +        }\r\n    +\r\n             public Class<?> createCustom() {\r\n                 ASMHelper helper = new ASMHelperImpl();\r\n                 ASMHelper.ClassWriter cw = helper.createClassWriter();\r\n    @@ -57,10 +63,10 @@ public class ASMHelperTest {\r\n                         \"java/lang/Object\", null);\r\n                 cw.visitEnd();\r\n     \r\n    -            return loadClass(\"test.testClass\", CustomLoader.class, cw.toByteArray());\r\n    +            return loadClass(\"test.testClass\", cw.toByteArray());\r\n             }\r\n             public boolean isFound() {\r\n    -            Class<?> cls = findClass(\"test.testClass\", CustomLoader.class);\r\n    +            Class<?> cls = findClass(\"test.testClass\");\r\n                 return cls != null;\r\n             }\r\n         }\r\n    diff --git a/parent/pom.xml b/parent/pom.xml\r\n    index 066bc67588..32217d54f7 100644\r\n    --- a/parent/pom.xml\r\n    +++ b/parent/pom.xml\r\n    @@ -54,8 +54,8 @@\r\n             <!-- stuff related to ASM -->\r\n             <cxf.asm.groupId>org.ow2.asm</cxf.asm.groupId>\r\n             <cxf.asm.artifactId>asm</cxf.asm.artifactId>\r\n    -        <cxf.asm.version>8.0.1</cxf.asm.version>\r\n    -        <cxf.osgi.asm.version>[3.0,9)</cxf.osgi.asm.version>\r\n    +        <cxf.asm.version>9.0</cxf.asm.version>\r\n    +        <cxf.osgi.asm.version>[3.0,10)</cxf.osgi.asm.version>\r\n             <cxf.easymock.version>4.2</cxf.easymock.version>\r\n             <!-- OSGi related properties -->\r\n             <cxf.fragment.host />\r\n    diff --git a/rt/bindings/corba/src/main/java/org/apache/cxf/binding/corba/utils/CorbaFixedAnyImplGenerator.java b/rt/bindings/corba/src/main/java/org/apache/cxf/binding/corba/utils/CorbaFixedAnyImplGenerator.java\r\n    index 7dd4de2da2..94c5e3e2cf 100644\r\n    --- a/rt/bindings/corba/src/main/java/org/apache/cxf/binding/corba/utils/CorbaFixedAnyImplGenerator.java\r\n    +++ b/rt/bindings/corba/src/main/java/org/apache/cxf/binding/corba/utils/CorbaFixedAnyImplGenerator.java\r\n    @@ -21,6 +21,7 @@ package org.apache.cxf.binding.corba.utils;\r\n     \r\n     import java.lang.reflect.Constructor;\r\n     \r\n    +import org.apache.cxf.Bus;\r\n     import org.apache.cxf.common.spi.ClassGeneratorClassLoader;\r\n     import org.apache.cxf.common.util.ASMHelper;\r\n     import org.apache.cxf.common.util.ASMHelperImpl;\r\n    @@ -29,6 +30,10 @@ import org.apache.cxf.common.util.OpcodesProxy;\r\n     public class CorbaFixedAnyImplGenerator extends ClassGeneratorClassLoader {\r\n         private Constructor<?> fixedAnyConstructor;\r\n     \r\n    +    public CorbaFixedAnyImplGenerator(Bus bus) {\r\n    +        super(bus);\r\n    +    }\r\n    +\r\n         public Class<?> createFixedAnyClass() {\r\n             //TODO move to bus.getExtension(ASMHelper.class)\r\n             ASMHelper helper = new ASMHelperImpl();\r\n    @@ -53,7 +58,7 @@ public class CorbaFixedAnyImplGenerator extends ClassGeneratorClassLoader {\r\n             cw.visitEnd();\r\n     \r\n             byte[] b = cw.toByteArray();\r\n    -        Class<?> c = loadClass(\"org.apache.cxf.binding.corba.utils.FixedAnyImpl\", CorbaAnyHelper.class, b);\r\n    +        Class<?> c = loadClass(\"org.apache.cxf.binding.corba.utils.FixedAnyImpl\", b);\r\n             return c;\r\n         }\r\n     \r\n    @@ -99,7 +104,7 @@ public class CorbaFixedAnyImplGenerator extends ClassGeneratorClassLoader {\r\n                     null, l0, l4, 0);\r\n             mv.visitLocalVariable(\"is\", \"Lorg/omg/CORBA/portable/InputStream;\", null, l0, l4, 1);\r\n             mv.visitLocalVariable(\"t\", \"Lorg/omg/CORBA/TypeCode;\", null, l0, l4, 2);\r\n    -        mv.visitMaxs(3, 3);\r\n    +        mv.visitMaxs(0, 0);\r\n             mv.visitEnd();\r\n         }\r\n     \r\n    @@ -142,7 +147,7 @@ public class CorbaFixedAnyImplGenerator extends ClassGeneratorClassLoader {\r\n             mv.visitLocalVariable(\"this\", \"Lorg/apache/cxf/binding/corba/utils/FixedAnyImpl;\",\r\n                     null, l0, l4, 0);\r\n             mv.visitLocalVariable(\"os\", \"Lorg/omg/CORBA/portable/OutputStream;\", null, l0, l4, 1);\r\n    -        mv.visitMaxs(2, 2);\r\n    +        mv.visitMaxs(0, 0);\r\n             mv.visitEnd();\r\n     \r\n         }\r\n    @@ -176,7 +181,7 @@ public class CorbaFixedAnyImplGenerator extends ClassGeneratorClassLoader {\r\n             ASMHelper.Label l3 = helper.createLabel();\r\n             mv.visitLabel(l3);\r\n             mv.visitLocalVariable(\"this\", \"Lorg/apache/cxf/binding/corba/utils/FixedAnyImpl;\", null, l0, l3, 0);\r\n    -        mv.visitMaxs(1, 1);\r\n    +        mv.visitMaxs(0, 0);\r\n             mv.visitEnd();\r\n     \r\n         }\r\n    @@ -213,7 +218,7 @@ public class CorbaFixedAnyImplGenerator extends ClassGeneratorClassLoader {\r\n             mv.visitLocalVariable(\"this\", \"Lorg/apache/cxf/binding/corba/utils/FixedAnyImpl;\",\r\n                     null, l0, l3, 0);\r\n             mv.visitLocalVariable(\"s\", \"Lorg/omg/CORBA/portable/Streamable;\", null, l0, l3, 1);\r\n    -        mv.visitMaxs(2, 2);\r\n    +        mv.visitMaxs(0, 0);\r\n             mv.visitEnd();\r\n         }\r\n     \r\n    @@ -240,7 +245,7 @@ public class CorbaFixedAnyImplGenerator extends ClassGeneratorClassLoader {\r\n                     \"Lorg/apache/cxf/binding/corba/utils/FixedAnyImpl;\",\r\n                     null, l0, l2, 0);\r\n             mv.visitLocalVariable(\"orb\", \"Lorg/omg/CORBA/ORB;\", null, l0, l2, 1);\r\n    -        mv.visitMaxs(2, 2);\r\n    +        mv.visitMaxs(0, 0);\r\n             mv.visitEnd();\r\n     \r\n     \r\n    @@ -269,7 +274,7 @@ public class CorbaFixedAnyImplGenerator extends ClassGeneratorClassLoader {\r\n                     null, l0, l2, 0);\r\n             mv.visitLocalVariable(\"orb\", \"Lorg/omg/CORBA/ORB;\", null, l0, l2, 1);\r\n             mv.visitLocalVariable(\"any\", \"Lorg/omg/CORBA/Any;\", null, l0, l2, 2);\r\n    -        mv.visitMaxs(3, 3);\r\n    +        mv.visitMaxs(0, 0);\r\n             mv.visitEnd();\r\n     \r\n         }\r\n    diff --git a/rt/databinding/jaxb/src/main/java/org/apache/cxf/jaxb/FactoryClassGenerator.java b/rt/databinding/jaxb/src/main/java/org/apache/cxf/jaxb/FactoryClassGenerator.java\r\n    index 721788868f..46666f4d1f 100644\r\n    --- a/rt/databinding/jaxb/src/main/java/org/apache/cxf/jaxb/FactoryClassGenerator.java\r\n    +++ b/rt/databinding/jaxb/src/main/java/org/apache/cxf/jaxb/FactoryClassGenerator.java\r\n    @@ -31,12 +31,13 @@ import org.apache.cxf.common.util.ReflectionUtil;\r\n     public class FactoryClassGenerator extends ClassGeneratorClassLoader implements FactoryClassCreator {\r\n         private ASMHelper helper;\r\n         FactoryClassGenerator(Bus bus) {\r\n    +        super(bus);\r\n             helper = bus.getExtension(ASMHelper.class);\r\n         }\r\n         @SuppressWarnings(\"unused\")\r\n         public Class<?> createFactory(Class<?> cls) {\r\n             String newClassName = cls.getName() + \"Factory\";\r\n    -        Class<?> factoryClass = findClass(newClassName, cls);\r\n    +        Class<?> factoryClass = findClass(newClassName);\r\n             if (factoryClass != null) {\r\n                 return factoryClass;\r\n             }\r\n    @@ -55,7 +56,7 @@ public class FactoryClassGenerator extends ClassGeneratorClassLoader implements\r\n             mv.visitVarInsn(opcodes.ALOAD, 0);\r\n             mv.visitMethodInsn(opcodes.INVOKESPECIAL, \"java/lang/Object\", \"<init>\", \"()V\", false);\r\n             mv.visitInsn(opcodes.RETURN);\r\n    -        mv.visitMaxs(1, 1);\r\n    +        mv.visitMaxs(0, 0);\r\n             mv.visitEnd();\r\n     \r\n             mv = cw.visitMethod(opcodes.ACC_PUBLIC, \"create\" + cls.getSimpleName(),\r\n    @@ -75,10 +76,10 @@ public class FactoryClassGenerator extends ClassGeneratorClassLoader implements\r\n             mv.visitMethodInsn(opcodes.INVOKESPECIAL, name, \"<init>\", paraString.toString(), false);\r\n     \r\n             mv.visitInsn(opcodes.ARETURN);\r\n    -        mv.visitMaxs(1, 1);\r\n    +        mv.visitMaxs(0, 0);\r\n             mv.visitEnd();\r\n     \r\n             cw.visitEnd();\r\n    -        return loadClass(newClassName, cls, cw.toByteArray());\r\n    +        return loadClass(newClassName, cw.toByteArray());\r\n         }\r\n     }\r\n    diff --git a/rt/databinding/jaxb/src/main/java/org/apache/cxf/jaxb/WrapperHelperCompiler.java b/rt/databinding/jaxb/src/main/java/org/apache/cxf/jaxb/WrapperHelperCompiler.java\r\n    index 8d33e4dcd4..6549a88505 100644\r\n    --- a/rt/databinding/jaxb/src/main/java/org/apache/cxf/jaxb/WrapperHelperCompiler.java\r\n    +++ b/rt/databinding/jaxb/src/main/java/org/apache/cxf/jaxb/WrapperHelperCompiler.java\r\n    @@ -42,6 +42,7 @@ public final class WrapperHelperCompiler extends ClassGeneratorClassLoader imple\r\n         private ASMHelper asmhelper;\r\n     \r\n         WrapperHelperCompiler(Bus bus) {\r\n    +        super(bus);\r\n         }\r\n     \r\n         public WrapperHelper compile(Bus bus, Class<?> wt, Method[] setters,\r\n    @@ -64,16 +65,16 @@ public final class WrapperHelperCompiler extends ClassGeneratorClassLoader imple\r\n             newClassName = newClassName.replaceAll(\"\\\\$\", \".\");\r\n             newClassName = asmhelper.periodToSlashes(newClassName);\r\n     \r\n    -        Class<?> cls = findClass(newClassName.replace('/', '.'), wrapperType);\r\n    +        Class<?> cls = findClass(newClassName.replace('/', '.'));\r\n             while (cls != null) {\r\n                 try {\r\n    -                WrapperHelper helper = WrapperHelper.class.cast(cls.newInstance());\r\n    +                WrapperHelper helper = WrapperHelper.class.cast(cls.getConstructor().newInstance());\r\n                     if (!helper.getSignature().equals(computeSignature(setMethods, getMethods))) {\r\n                         count++;\r\n                         newClassName = wrapperType.getName() + \"_WrapperTypeHelper\" + count;\r\n                         newClassName = newClassName.replaceAll(\"\\\\$\", \".\");\r\n                         newClassName = asmhelper.periodToSlashes(newClassName);\r\n    -                    cls = findClass(newClassName.replace('/', '.'), wrapperType);\r\n    +                    cls = findClass(newClassName.replace('/', '.'));\r\n                     } else {\r\n                         return helper;\r\n                     }\r\n    @@ -105,8 +106,8 @@ public final class WrapperHelperCompiler extends ClassGeneratorClassLoader imple\r\n                 if (b) {\r\n                     cw.visitEnd();\r\n                     byte[] bt = cw.toByteArray();\r\n    -                Class<?> cl = loadClass(newClassName.replace('/', '.'), wrapperType, bt);\r\n    -                Object o = cl.newInstance();\r\n    +                Class<?> cl = loadClass(newClassName.replace('/', '.'), bt);\r\n    +                Object o = cl.getConstructor().newInstance();\r\n                     return WrapperHelper.class.cast(o);\r\n                 }\r\n             } catch (Throwable e) {\r\n    @@ -278,7 +279,7 @@ public final class WrapperHelperCompiler extends ClassGeneratorClassLoader imple\r\n     \r\n             ASMHelper.Label lEnd = asmhelper.createLabel();\r\n             mv.visitLabel(lEnd);\r\n    -        mv.visitLocalVariable(\"this\", \"L\" + newClassName + \";\", null, lBegin, lEnd, 0);\r\n    +        mv.visitLocalVariable(\"_this\", \"L\" + newClassName + \";\", null, lBegin, lEnd, 0);\r\n             mv.visitLocalVariable(\"lst\", \"Ljava/util/List;\", \"Ljava/util/List<*>;\", lBegin, lEnd, 1);\r\n             mv.visitLocalVariable(\"ok\", \"L\" + asmhelper.periodToSlashes(wrapperType.getName()) + \";\",\r\n                                   null, lBegin, lEnd, 2);\r\n    diff --git a/rt/frontend/jaxws/src/main/java/org/apache/cxf/jaxws/WrapperClassGenerator.java b/rt/frontend/jaxws/src/main/java/org/apache/cxf/jaxws/WrapperClassGenerator.java\r\n    index bf551521d4..e7b16d9b1b 100644\r\n    --- a/rt/frontend/jaxws/src/main/java/org/apache/cxf/jaxws/WrapperClassGenerator.java\r\n    +++ b/rt/frontend/jaxws/src/main/java/org/apache/cxf/jaxws/WrapperClassGenerator.java\r\n    @@ -69,7 +69,8 @@ public final class WrapperClassGenerator extends ClassGeneratorClassLoader imple\r\n         private InterfaceInfo interfaceInfo;\r\n         private ASMHelper helper;\r\n     \r\n    -    public WrapperClassGenerator() {\r\n    +    public WrapperClassGenerator(final Bus bus) {\r\n    +        super(bus);\r\n         }\r\n     \r\n         private String getPackageName(Method method) {\r\n    @@ -153,7 +154,6 @@ public final class WrapperClassGenerator extends ClassGeneratorClassLoader imple\r\n                                             Method method,\r\n                                             boolean isRequest) {\r\n     \r\n    -\r\n             ASMHelper.ClassWriter cw = helper.createClassWriter();\r\n             if (cw == null) {\r\n                 LOG.warning(op.getName() + \" requires a wrapper bean but problems with\"\r\n    @@ -170,20 +170,20 @@ public final class WrapperClassGenerator extends ClassGeneratorClassLoader imple\r\n                 className = className + \"Response\";\r\n             }\r\n             String pname = pkg + \".package-info\";\r\n    -        Class<?> def = findClass(pname, method.getDeclaringClass());\r\n    +        Class<?> def = findClass(pname);\r\n             if (def == null) {\r\n                 generatePackageInfo(pname, wrapperElement.getNamespaceURI(),\r\n                                     method.getDeclaringClass());\r\n             }\r\n     \r\n    -        def = findClass(className, method.getDeclaringClass());\r\n    +        def = findClass(className);\r\n             String origClassName = className;\r\n             int count = 0;\r\n             while (def != null) {\r\n                 Boolean b = messageInfo.getProperty(\"parameterized\", Boolean.class);\r\n                 if (b != null && b) {\r\n                     className = origClassName + (++count);\r\n    -                def = findClass(className, method.getDeclaringClass());\r\n    +                def = findClass(className);\r\n                 } else {\r\n                     wrapperPart.setTypeClass(def);\r\n                     wrapperBeans.add(def);\r\n    @@ -224,7 +224,7 @@ public final class WrapperClassGenerator extends ClassGeneratorClassLoader imple\r\n             ASMHelper.Label lend = helper.createLabel();\r\n             mv.visitLabel(lend);\r\n             mv.visitLocalVariable(\"this\", \"L\" + classFileName + \";\", null, lbegin, lend, 0);\r\n    -        mv.visitMaxs(1, 1);\r\n    +        mv.visitMaxs(0, 0);\r\n             mv.visitEnd();\r\n     \r\n             for (MessagePartInfo mpi : messageInfo.getMessageParts()) {\r\n    @@ -233,7 +233,7 @@ public final class WrapperClassGenerator extends ClassGeneratorClassLoader imple\r\n     \r\n             cw.visitEnd();\r\n     \r\n    -        Class<?> clz = loadClass(className, method.getDeclaringClass(), cw.toByteArray());\r\n    +        Class<?> clz = loadClass(className, cw.toByteArray());\r\n             wrapperPart.setTypeClass(clz);\r\n             wrapperBeans.add(clz);\r\n         }\r\n    @@ -272,7 +272,7 @@ public final class WrapperClassGenerator extends ClassGeneratorClassLoader imple\r\n             }\r\n             cw.visitEnd();\r\n     \r\n    -        loadClass(className, clz, cw.toByteArray());\r\n    +        loadClass(className, cw.toByteArray());\r\n         }\r\n     \r\n         private void generateXmlJavaTypeAdapters(ASMHelper.AnnotationVisitor av, XmlJavaTypeAdapters adapters) {\r\n    diff --git a/rt/frontend/jaxws/src/main/java/org/apache/cxf/jaxws/spi/WrapperClassCreatorProxyService.java b/rt/frontend/jaxws/src/main/java/org/apache/cxf/jaxws/spi/WrapperClassCreatorProxyService.java\r\n    index 5328277c61..6f3d1743f2 100644\r\n    --- a/rt/frontend/jaxws/src/main/java/org/apache/cxf/jaxws/spi/WrapperClassCreatorProxyService.java\r\n    +++ b/rt/frontend/jaxws/src/main/java/org/apache/cxf/jaxws/spi/WrapperClassCreatorProxyService.java\r\n    @@ -27,8 +27,8 @@ import org.apache.cxf.service.model.InterfaceInfo;\r\n     \r\n     public class WrapperClassCreatorProxyService implements WrapperClassCreator {\r\n         WrapperClassCreator srv;\r\n    -    public WrapperClassCreatorProxyService() {\r\n    -        this(new WrapperClassGenerator());\r\n    +    public WrapperClassCreatorProxyService(final Bus bus) {\r\n    +        this(new WrapperClassGenerator(bus));\r\n         }\r\n         public WrapperClassCreatorProxyService(WrapperClassCreator srv) {\r\n             super();\r\n    @@ -48,8 +48,8 @@ public class WrapperClassCreatorProxyService implements WrapperClassCreator {\r\n             }\r\n         }\r\n         public class GenerateJustInTime extends WrapperClassCreatorProxyService {\r\n    -        public GenerateJustInTime() {\r\n    -            super(new WrapperClassGenerator());\r\n    +        public GenerateJustInTime(final Bus bus) {\r\n    +            super(new WrapperClassGenerator(bus));\r\n             }\r\n         }\r\n     }\r\n    diff --git a/rt/frontend/simple/src/main/java/org/apache/cxf/endpoint/dynamic/ExceptionClassGenerator.java b/rt/frontend/simple/src/main/java/org/apache/cxf/endpoint/dynamic/ExceptionClassGenerator.java\r\n    index 623c04b6db..02c92dc21d 100644\r\n    --- a/rt/frontend/simple/src/main/java/org/apache/cxf/endpoint/dynamic/ExceptionClassGenerator.java\r\n    +++ b/rt/frontend/simple/src/main/java/org/apache/cxf/endpoint/dynamic/ExceptionClassGenerator.java\r\n    @@ -27,6 +27,7 @@ public class ExceptionClassGenerator extends ClassGeneratorClassLoader implement\r\n         private ASMHelper helper;\r\n     \r\n         public ExceptionClassGenerator(Bus bus) {\r\n    +        super(bus);\r\n             this.helper = bus.getExtension(ASMHelper.class);\r\n         }\r\n         @Override\r\n    @@ -35,7 +36,7 @@ public class ExceptionClassGenerator extends ClassGeneratorClassLoader implement\r\n             newClassName = newClassName.replaceAll(\"\\\\$\", \".\");\r\n             newClassName = helper.periodToSlashes(newClassName);\r\n     \r\n    -        Class<?> cls = findClass(newClassName.replace('/', '.'), bean);\r\n    +        Class<?> cls = findClass(newClassName.replace('/', '.'));\r\n             if (cls == null) {\r\n                 ASMHelper.ClassWriter cw = helper.createClassWriter();\r\n                 OpcodesProxy opCodes = helper.getOpCodes();\r\n    @@ -70,7 +71,7 @@ public class ExceptionClassGenerator extends ClassGeneratorClassLoader implement\r\n                 mv.visitLabel(helper.createLabel());\r\n                 mv.visitInsn(opCodes.RETURN);\r\n                 mv.visitLabel(helper.createLabel());\r\n    -            mv.visitMaxs(2, 3);\r\n    +            mv.visitMaxs(0, 0);\r\n                 mv.visitEnd();\r\n     \r\n                 mv = cw.visitMethod(opCodes.ACC_PUBLIC, \"getFaultInfo\",\r\n    @@ -81,12 +82,12 @@ public class ExceptionClassGenerator extends ClassGeneratorClassLoader implement\r\n                 mv.visitFieldInsn(opCodes.GETFIELD, newClassName, \"faultInfo\", beanClassCode);\r\n                 mv.visitInsn(opCodes.ARETURN);\r\n                 mv.visitLabel(helper.createLabel());\r\n    -            mv.visitMaxs(1, 1);\r\n    +            mv.visitMaxs(0, 0);\r\n                 mv.visitEnd();\r\n     \r\n                 cw.visitEnd();\r\n     \r\n    -            return loadClass(bean.getName() + \"_Exception\", bean, cw.toByteArray());\r\n    +            return loadClass(bean.getName() + \"_Exception\", cw.toByteArray());\r\n             }\r\n             return cls;\r\n         }\r\n    diff --git a/rt/wsdl/src/main/java/org/apache/cxf/wsdl/ExtensionClassGenerator.java b/rt/wsdl/src/main/java/org/apache/cxf/wsdl/ExtensionClassGenerator.java\r\n    index c7c3672529..0dbccf1494 100644\r\n    --- a/rt/wsdl/src/main/java/org/apache/cxf/wsdl/ExtensionClassGenerator.java\r\n    +++ b/rt/wsdl/src/main/java/org/apache/cxf/wsdl/ExtensionClassGenerator.java\r\n    @@ -30,11 +30,10 @@ import org.apache.cxf.common.util.OpcodesProxy;\r\n     \r\n     public class ExtensionClassGenerator extends ClassGeneratorClassLoader implements ExtensionClassCreator {\r\n     \r\n    -    private Bus bus;\r\n         private ASMHelper helper;\r\n     \r\n         public ExtensionClassGenerator(Bus bus) {\r\n    -        this.bus = bus;\r\n    +        super(bus);\r\n             this.helper = bus.getExtension(ASMHelper.class);\r\n         }\r\n         //CHECKSTYLE:OFF - very complicated ASM code\r\n    @@ -44,7 +43,7 @@ public class ExtensionClassGenerator extends ClassGeneratorClassLoader implement\r\n             ASMHelper helper = bus.getExtension(ASMHelper.class);\r\n             OpcodesProxy Opcodes = helper.getOpCodes();\r\n     \r\n    -        Class<?> extClass = findClass(className + \"Extensibility\", loader);\r\n    +        Class<?> extClass = findClass(className + \"Extensibility\");\r\n             if (extClass != null) {\r\n                 return extClass;\r\n             }\r\n    @@ -92,7 +91,7 @@ public class ExtensionClassGenerator extends ClassGeneratorClassLoader implement\r\n                 mv.visitFieldInsn(Opcodes.PUTSTATIC, className + \"Extensibility\", \"WSDL_REQUIRED\",\r\n                         \"Ljavax/xml/namespace/QName;\");\r\n                 mv.visitInsn(Opcodes.RETURN);\r\n    -            mv.visitMaxs(4, 0);\r\n    +            mv.visitMaxs(0, 0);\r\n                 mv.visitEnd();\r\n             } else {\r\n                 fv = cw.visitField(Opcodes.ACC_PRIVATE, \"required\", \"Ljava/lang/Boolean;\", null, null);\r\n    @@ -128,7 +127,7 @@ public class ExtensionClassGenerator extends ClassGeneratorClassLoader implement\r\n             mv.visitLabel(l3);\r\n     \r\n             mv.visitLocalVariable(\"this\", \"L\" + className + \"Extensibility;\", null, l0, l3, 0);\r\n    -        mv.visitMaxs(5, 1);\r\n    +        mv.visitMaxs(0, 0);\r\n             mv.visitEnd();\r\n     \r\n             mv = cw.visitMethod(Opcodes.ACC_PUBLIC, \"setElementType\", \"(Ljavax/xml/namespace/QName;)V\", null, null);\r\n    @@ -147,7 +146,7 @@ public class ExtensionClassGenerator extends ClassGeneratorClassLoader implement\r\n             mv.visitLabel(l2);\r\n             mv.visitLocalVariable(\"this\", \"L\" + className + \"Extensibility;\", null, l0, l2, 0);\r\n             mv.visitLocalVariable(\"elementType\", \"Ljavax/xml/namespace/QName;\", null, l0, l2, 1);\r\n    -        mv.visitMaxs(2, 2);\r\n    +        mv.visitMaxs(0, 0);\r\n             mv.visitEnd();\r\n     \r\n             mv = cw.visitMethod(Opcodes.ACC_PUBLIC, \"getElementType\", \"()Ljavax/xml/namespace/QName;\", null, null);\r\n    @@ -163,7 +162,7 @@ public class ExtensionClassGenerator extends ClassGeneratorClassLoader implement\r\n             l1 = helper.createLabel();\r\n             mv.visitLabel(l1);\r\n             mv.visitLocalVariable(\"this\", \"L\" + className + \"Extensibility;\", null, l0, l1, 0);\r\n    -        mv.visitMaxs(1, 1);\r\n    +        mv.visitMaxs(0, 0);\r\n             mv.visitEnd();\r\n     \r\n             if (hasAttributes) {\r\n    @@ -202,7 +201,7 @@ public class ExtensionClassGenerator extends ClassGeneratorClassLoader implement\r\n                 mv.visitLabel(l4);\r\n                 mv.visitLocalVariable(\"this\", \"L\" + className + \"Extensibility;\", null, l0, l4, 0);\r\n                 mv.visitLocalVariable(\"s\", \"Ljava/lang/String;\", null, l1, l4, 1);\r\n    -            mv.visitMaxs(2, 2);\r\n    +            mv.visitMaxs(0, 0);\r\n                 mv.visitEnd();\r\n     \r\n     \r\n    @@ -252,7 +251,7 @@ public class ExtensionClassGenerator extends ClassGeneratorClassLoader implement\r\n                 mv.visitLabel(l5);\r\n                 mv.visitLocalVariable(\"this\", \"L\" + className + \"Extensibility;\", null, l0, l5, 0);\r\n                 mv.visitLocalVariable(\"b\", \"Ljava/lang/Boolean;\", null, l0, l5, 1);\r\n    -            mv.visitMaxs(3, 2);\r\n    +            mv.visitMaxs(0, 0);\r\n                 mv.visitEnd();\r\n             } else {\r\n                 mv = cw.visitMethod(Opcodes.ACC_PUBLIC, \"getRequired\", \"()Ljava/lang/Boolean;\", null, null);\r\n    @@ -266,7 +265,7 @@ public class ExtensionClassGenerator extends ClassGeneratorClassLoader implement\r\n                 l1 = helper.createLabel();\r\n                 mv.visitLabel(l1);\r\n                 mv.visitLocalVariable(\"this\", \"L\" + className + \"Extensibility;\", null, l0, l1, 0);\r\n    -            mv.visitMaxs(1, 1);\r\n    +            mv.visitMaxs(0, 0);\r\n                 mv.visitEnd();\r\n     \r\n                 mv = cw.visitMethod(Opcodes.ACC_PUBLIC, \"setRequired\", \"(Ljava/lang/Boolean;)V\", null, null);\r\n    @@ -285,13 +284,13 @@ public class ExtensionClassGenerator extends ClassGeneratorClassLoader implement\r\n                 mv.visitLabel(l2);\r\n                 mv.visitLocalVariable(\"this\", \"L\" + className + \"Extensibility;\", null, l0, l2, 0);\r\n                 mv.visitLocalVariable(\"b\", \"Ljava/lang/Boolean;\", null, l0, l2, 1);\r\n    -            mv.visitMaxs(2, 2);\r\n    +            mv.visitMaxs(0, 0);\r\n                 mv.visitEnd();\r\n             }\r\n     \r\n             cw.visitEnd();\r\n     \r\n             byte[] bytes = cw.toByteArray();\r\n    -        return loadClass(className + \"Extensibility\", loader, bytes);\r\n    +        return loadClass(className + \"Extensibility\", bytes);\r\n         }\r\n     }\r\n\r\nside note: moved visitMaxs to (0, 0) since we force the computation anyway and since cxf is java 8 min, previous asm will not work so we are now safe to drop/force these 2 params.","reactions":{"url":"https://api.github.com/repos/apache/cxf/issues/comments/727572118/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/cxf/issues/comments/727576192","html_url":"https://github.com/apache/cxf/pull/721#issuecomment-727576192","issue_url":"https://api.github.com/repos/apache/cxf/issues/721","id":727576192,"node_id":"MDEyOklzc3VlQ29tbWVudDcyNzU3NjE5Mg==","user":{"login":"dufoli","id":202057,"node_id":"MDQ6VXNlcjIwMjA1Nw==","avatar_url":"https://avatars.githubusercontent.com/u/202057?v=4","gravatar_id":"","url":"https://api.github.com/users/dufoli","html_url":"https://github.com/dufoli","followers_url":"https://api.github.com/users/dufoli/followers","following_url":"https://api.github.com/users/dufoli/following{/other_user}","gists_url":"https://api.github.com/users/dufoli/gists{/gist_id}","starred_url":"https://api.github.com/users/dufoli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dufoli/subscriptions","organizations_url":"https://api.github.com/users/dufoli/orgs","repos_url":"https://api.github.com/users/dufoli/repos","events_url":"https://api.github.com/users/dufoli/events{/privacy}","received_events_url":"https://api.github.com/users/dufoli/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-11-15T14:14:15Z","updated_at":"2020-11-15T14:14:15Z","author_association":"CONTRIBUTOR","body":"1) what is the purpose of changing visitMaxs stuff ?  and the reflection with visitMaxs ? To be honest, I do not know anything on that? Maybe it can be handled in another patch ? \r\n\r\n2) Removing hashmap : it mean that you can not share same class path on 2 different invoker class or classloader. Currently if you have interface and implementor, it is not shared. Are you ok with this behaviour ? The second point is that if you have 2 methods on 2 sei with same name it will try to use the same class whereas today, it is separated ? are you sure it is ok ? I am just thinking to corner case ;-)\r\n\r\n3) What is the gain of using bus.getExtension(TypeHelperClassLoader.class); and bus.getExtension(ClassLoader.class);. \r\nIt use reflection for a class which can be directly called. Reflection is slower than direct call. Maybe I missed something, but not see the purpose to overload classLoader here ? Reflection have a cost and performance for interface call is important so if we can avoid it, maybe it is better no ?","reactions":{"url":"https://api.github.com/repos/apache/cxf/issues/comments/727576192/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/cxf/issues/comments/727576447","html_url":"https://github.com/apache/cxf/pull/721#issuecomment-727576447","issue_url":"https://api.github.com/repos/apache/cxf/issues/721","id":727576447,"node_id":"MDEyOklzc3VlQ29tbWVudDcyNzU3NjQ0Nw==","user":{"login":"dufoli","id":202057,"node_id":"MDQ6VXNlcjIwMjA1Nw==","avatar_url":"https://avatars.githubusercontent.com/u/202057?v=4","gravatar_id":"","url":"https://api.github.com/users/dufoli","html_url":"https://github.com/dufoli","followers_url":"https://api.github.com/users/dufoli/followers","following_url":"https://api.github.com/users/dufoli/following{/other_user}","gists_url":"https://api.github.com/users/dufoli/gists{/gist_id}","starred_url":"https://api.github.com/users/dufoli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dufoli/subscriptions","organizations_url":"https://api.github.com/users/dufoli/orgs","repos_url":"https://api.github.com/users/dufoli/repos","events_url":"https://api.github.com/users/dufoli/events{/privacy}","received_events_url":"https://api.github.com/users/dufoli/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-11-15T14:16:02Z","updated_at":"2020-11-15T14:16:02Z","author_association":"CONTRIBUTOR","body":"I forget.\r\nremove old ASM is good ;-) and maybe we can cleanup this part too no ?:\r\n\r\n  ```\r\n          tryClass(\"org.objectweb.asm.ClassWriter\");\r\n            tryClass(\"org.apache.xbean.asm9.ClassWriter\");\r\n            tryClass(\"org.apache.xbean.asm8.ClassWriter\");\r\n            tryClass(\"org.apache.xbean.asm7.ClassWriter\");\r\n            tryClass(\"org.apache.xbean.asm5.ClassWriter\");\r\n            tryClass(\"org.apache.xbean.asm6.ClassWriter\");\r\n            tryClass(\"org.apache.xbean.asm4.ClassWriter\");\r\n            tryClass(\"org.apache.xbean.asm.ClassWriter\");\r\n            tryClass(\"org.springframework.asm.ClassWriter\");\r\n```","reactions":{"url":"https://api.github.com/repos/apache/cxf/issues/comments/727576447/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/cxf/issues/comments/727576670","html_url":"https://github.com/apache/cxf/pull/721#issuecomment-727576670","issue_url":"https://api.github.com/repos/apache/cxf/issues/721","id":727576670,"node_id":"MDEyOklzc3VlQ29tbWVudDcyNzU3NjY3MA==","user":{"login":"dufoli","id":202057,"node_id":"MDQ6VXNlcjIwMjA1Nw==","avatar_url":"https://avatars.githubusercontent.com/u/202057?v=4","gravatar_id":"","url":"https://api.github.com/users/dufoli","html_url":"https://github.com/dufoli","followers_url":"https://api.github.com/users/dufoli/followers","following_url":"https://api.github.com/users/dufoli/following{/other_user}","gists_url":"https://api.github.com/users/dufoli/gists{/gist_id}","starred_url":"https://api.github.com/users/dufoli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dufoli/subscriptions","organizations_url":"https://api.github.com/users/dufoli/orgs","repos_url":"https://api.github.com/users/dufoli/repos","events_url":"https://api.github.com/users/dufoli/events{/privacy}","received_events_url":"https://api.github.com/users/dufoli/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-11-15T14:17:23Z","updated_at":"2020-11-15T14:17:23Z","author_association":"CONTRIBUTOR","body":"@rmannibucau and thanks for all your advice help btw ;-)","reactions":{"url":"https://api.github.com/repos/apache/cxf/issues/comments/727576670/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/cxf/issues/comments/727577291","html_url":"https://github.com/apache/cxf/pull/721#issuecomment-727577291","issue_url":"https://api.github.com/repos/apache/cxf/issues/721","id":727577291,"node_id":"MDEyOklzc3VlQ29tbWVudDcyNzU3NzI5MQ==","user":{"login":"rmannibucau","id":1249546,"node_id":"MDQ6VXNlcjEyNDk1NDY=","avatar_url":"https://avatars.githubusercontent.com/u/1249546?v=4","gravatar_id":"","url":"https://api.github.com/users/rmannibucau","html_url":"https://github.com/rmannibucau","followers_url":"https://api.github.com/users/rmannibucau/followers","following_url":"https://api.github.com/users/rmannibucau/following{/other_user}","gists_url":"https://api.github.com/users/rmannibucau/gists{/gist_id}","starred_url":"https://api.github.com/users/rmannibucau/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmannibucau/subscriptions","organizations_url":"https://api.github.com/users/rmannibucau/orgs","repos_url":"https://api.github.com/users/rmannibucau/repos","events_url":"https://api.github.com/users/rmannibucau/events{/privacy}","received_events_url":"https://api.github.com/users/rmannibucau/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-11-15T14:21:32Z","updated_at":"2020-11-15T14:21:32Z","author_association":"CONTRIBUTOR","body":"@dufoli \r\n\r\n1. cause the parameters are not used anyway and I started to investigate if it was not the source of the stack error. Sure it can be in another patch (just started as a debug thing and I thought sharing it can be interesting)\r\n\r\n2. this is not true since you go through the bus, you share all you want as you can see in my patch, it does exactly the same (+ it respects cxf bus classloader when configured ;)). These static maps are really not needed and shouldn't be there IMHO. Will avoid all java > 8 GC issues - the one you mentionned can happen with aggressive GC even if it was not the cause there.\r\n\r\n3. gain of `bus.getExtension(ClassLoader.class)` is to respect cxf config, gain of `bus.getExtension(TypeHelperClassLoader.class)` is to drop the static unmanaged maps (which are leaks btw since not destroyed as soon as you destroy the server ;)). This can lead to issue in tests or redeployments/restart context if not done. I'm fine dropping any reflection cost for these particular types if you want. You can add these types in org.apache.cxf.bus.extension.ExtensionManagerBus#missingExtensions for ex.\r\n\r\n4. about asm: we must keep ow2, spring and xbean [6-9] I'd say but it is also the part I mentionned at the beginning: once your asmhelper is in place, we can have one impl per asm version and therefore drop the generic asmhelper slowly once we have cxf-asmX module (for migration purposes). I suspect xbean will take the cxf integration once this change is released.","reactions":{"url":"https://api.github.com/repos/apache/cxf/issues/comments/727577291/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/cxf/issues/comments/727580068","html_url":"https://github.com/apache/cxf/pull/721#issuecomment-727580068","issue_url":"https://api.github.com/repos/apache/cxf/issues/721","id":727580068,"node_id":"MDEyOklzc3VlQ29tbWVudDcyNzU4MDA2OA==","user":{"login":"dufoli","id":202057,"node_id":"MDQ6VXNlcjIwMjA1Nw==","avatar_url":"https://avatars.githubusercontent.com/u/202057?v=4","gravatar_id":"","url":"https://api.github.com/users/dufoli","html_url":"https://github.com/dufoli","followers_url":"https://api.github.com/users/dufoli/followers","following_url":"https://api.github.com/users/dufoli/following{/other_user}","gists_url":"https://api.github.com/users/dufoli/gists{/gist_id}","starred_url":"https://api.github.com/users/dufoli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dufoli/subscriptions","organizations_url":"https://api.github.com/users/dufoli/orgs","repos_url":"https://api.github.com/users/dufoli/repos","events_url":"https://api.github.com/users/dufoli/events{/privacy}","received_events_url":"https://api.github.com/users/dufoli/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-11-15T14:39:29Z","updated_at":"2020-11-15T14:39:29Z","author_association":"CONTRIBUTOR","body":"1. OK\r\n2. sorry but I do not understand that . For example, for wrapper class generator, the findClass for interface and implementor will share the same classloader so we will found the same class generated for each method ? do I miss something ?\r\n3. ok great ! Thanks for explaination\r\n4. OK\r\n5. Do you think, I can use ASMHelper to inject my own classWriter to directly get the class generated by cxf on quarkus side instead of generating my own class. I was thinking to call direclty ReflectionServiceFactoryBean.create() after setting setServiceClass() to add all the classes found with Webservice annotation.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/cxf/issues/comments/727580068/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/cxf/issues/comments/727582333","html_url":"https://github.com/apache/cxf/pull/721#issuecomment-727582333","issue_url":"https://api.github.com/repos/apache/cxf/issues/721","id":727582333,"node_id":"MDEyOklzc3VlQ29tbWVudDcyNzU4MjMzMw==","user":{"login":"rmannibucau","id":1249546,"node_id":"MDQ6VXNlcjEyNDk1NDY=","avatar_url":"https://avatars.githubusercontent.com/u/1249546?v=4","gravatar_id":"","url":"https://api.github.com/users/rmannibucau","html_url":"https://github.com/rmannibucau","followers_url":"https://api.github.com/users/rmannibucau/followers","following_url":"https://api.github.com/users/rmannibucau/following{/other_user}","gists_url":"https://api.github.com/users/rmannibucau/gists{/gist_id}","starred_url":"https://api.github.com/users/rmannibucau/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmannibucau/subscriptions","organizations_url":"https://api.github.com/users/rmannibucau/orgs","repos_url":"https://api.github.com/users/rmannibucau/repos","events_url":"https://api.github.com/users/rmannibucau/events{/privacy}","received_events_url":"https://api.github.com/users/rmannibucau/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-11-15T14:54:42Z","updated_at":"2020-11-15T14:55:01Z","author_association":"CONTRIBUTOR","body":"(2). yes but the classloader is not always the class classloader, it can be another one (more or less for the same reason you use a classloader to store proxies). Some servers override the implicit classloader by a custom one for several transversal stuff so you must use this one. This is also why it is important to start from the bus and not Class or ClassLoader.\r\n(5). Probably but if you just inject your TypeHelperClassLoader you likely have the same and simpler, no?","reactions":{"url":"https://api.github.com/repos/apache/cxf/issues/comments/727582333/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/cxf/issues/comments/727637335","html_url":"https://github.com/apache/cxf/pull/721#issuecomment-727637335","issue_url":"https://api.github.com/repos/apache/cxf/issues/721","id":727637335,"node_id":"MDEyOklzc3VlQ29tbWVudDcyNzYzNzMzNQ==","user":{"login":"dufoli","id":202057,"node_id":"MDQ6VXNlcjIwMjA1Nw==","avatar_url":"https://avatars.githubusercontent.com/u/202057?v=4","gravatar_id":"","url":"https://api.github.com/users/dufoli","html_url":"https://github.com/dufoli","followers_url":"https://api.github.com/users/dufoli/followers","following_url":"https://api.github.com/users/dufoli/following{/other_user}","gists_url":"https://api.github.com/users/dufoli/gists{/gist_id}","starred_url":"https://api.github.com/users/dufoli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dufoli/subscriptions","organizations_url":"https://api.github.com/users/dufoli/orgs","repos_url":"https://api.github.com/users/dufoli/repos","events_url":"https://api.github.com/users/dufoli/events{/privacy}","received_events_url":"https://api.github.com/users/dufoli/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-11-15T21:10:27Z","updated_at":"2020-11-15T21:10:27Z","author_association":"CONTRIBUTOR","body":"What is next step. I integrate your modification before merge? ","reactions":{"url":"https://api.github.com/repos/apache/cxf/issues/comments/727637335/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/cxf/issues/comments/727680595","html_url":"https://github.com/apache/cxf/pull/723#issuecomment-727680595","issue_url":"https://api.github.com/repos/apache/cxf/issues/723","id":727680595,"node_id":"MDEyOklzc3VlQ29tbWVudDcyNzY4MDU5NQ==","user":{"login":"reta","id":509855,"node_id":"MDQ6VXNlcjUwOTg1NQ==","avatar_url":"https://avatars.githubusercontent.com/u/509855?v=4","gravatar_id":"","url":"https://api.github.com/users/reta","html_url":"https://github.com/reta","followers_url":"https://api.github.com/users/reta/followers","following_url":"https://api.github.com/users/reta/following{/other_user}","gists_url":"https://api.github.com/users/reta/gists{/gist_id}","starred_url":"https://api.github.com/users/reta/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/reta/subscriptions","organizations_url":"https://api.github.com/users/reta/orgs","repos_url":"https://api.github.com/users/reta/repos","events_url":"https://api.github.com/users/reta/events{/privacy}","received_events_url":"https://api.github.com/users/reta/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-11-16T01:26:38Z","updated_at":"2020-11-16T01:26:38Z","author_association":"MEMBER","body":"@deki @coheigea @amarkevich the update looks good now, one thing I intended to incorporate is switch to Maven Surefire 3.0.0-M5 (so we could run JUnit 4 & JUnit 5 test cases side by side) but I run into an issue with tooling tests `org.apache.cxf.tools.common.ProcessorTestBase::getClassPath()` which seems to be relying on some Surefire intrinsic details, probably better to tackle as separate effort. If no objections, I would like to merge it into master. ","reactions":{"url":"https://api.github.com/repos/apache/cxf/issues/comments/727680595/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/cxf/issues/comments/727777755","html_url":"https://github.com/apache/cxf/pull/721#issuecomment-727777755","issue_url":"https://api.github.com/repos/apache/cxf/issues/721","id":727777755,"node_id":"MDEyOklzc3VlQ29tbWVudDcyNzc3Nzc1NQ==","user":{"login":"rmannibucau","id":1249546,"node_id":"MDQ6VXNlcjEyNDk1NDY=","avatar_url":"https://avatars.githubusercontent.com/u/1249546?v=4","gravatar_id":"","url":"https://api.github.com/users/rmannibucau","html_url":"https://github.com/rmannibucau","followers_url":"https://api.github.com/users/rmannibucau/followers","following_url":"https://api.github.com/users/rmannibucau/following{/other_user}","gists_url":"https://api.github.com/users/rmannibucau/gists{/gist_id}","starred_url":"https://api.github.com/users/rmannibucau/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmannibucau/subscriptions","organizations_url":"https://api.github.com/users/rmannibucau/orgs","repos_url":"https://api.github.com/users/rmannibucau/repos","events_url":"https://api.github.com/users/rmannibucau/events{/privacy}","received_events_url":"https://api.github.com/users/rmannibucau/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-11-16T06:57:14Z","updated_at":"2020-11-16T06:57:14Z","author_association":"CONTRIBUTOR","body":"@dufoli if you can, at least the classloader one is important. A doc word on how to capture the proxies at build time - even with a \"main\" and exec-maven-plugin if you don't want to do a mojo right now - would complete the PR IMHO. Wdyt?\r\n\r\n@reta does it sound ok to you?","reactions":{"url":"https://api.github.com/repos/apache/cxf/issues/comments/727777755/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/cxf/issues/comments/727929665","html_url":"https://github.com/apache/cxf/pull/724#issuecomment-727929665","issue_url":"https://api.github.com/repos/apache/cxf/issues/724","id":727929665,"node_id":"MDEyOklzc3VlQ29tbWVudDcyNzkyOTY2NQ==","user":{"login":"reta","id":509855,"node_id":"MDQ6VXNlcjUwOTg1NQ==","avatar_url":"https://avatars.githubusercontent.com/u/509855?v=4","gravatar_id":"","url":"https://api.github.com/users/reta","html_url":"https://github.com/reta","followers_url":"https://api.github.com/users/reta/followers","following_url":"https://api.github.com/users/reta/following{/other_user}","gists_url":"https://api.github.com/users/reta/gists{/gist_id}","starred_url":"https://api.github.com/users/reta/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/reta/subscriptions","organizations_url":"https://api.github.com/users/reta/orgs","repos_url":"https://api.github.com/users/reta/repos","events_url":"https://api.github.com/users/reta/events{/privacy}","received_events_url":"https://api.github.com/users/reta/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-11-16T11:49:01Z","updated_at":"2020-11-16T11:49:01Z","author_association":"MEMBER","body":"Thanks a lot, @amarkevich !","reactions":{"url":"https://api.github.com/repos/apache/cxf/issues/comments/727929665/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/cxf/issues/comments/727931394","html_url":"https://github.com/apache/cxf/pull/721#issuecomment-727931394","issue_url":"https://api.github.com/repos/apache/cxf/issues/721","id":727931394,"node_id":"MDEyOklzc3VlQ29tbWVudDcyNzkzMTM5NA==","user":{"login":"reta","id":509855,"node_id":"MDQ6VXNlcjUwOTg1NQ==","avatar_url":"https://avatars.githubusercontent.com/u/509855?v=4","gravatar_id":"","url":"https://api.github.com/users/reta","html_url":"https://github.com/reta","followers_url":"https://api.github.com/users/reta/followers","following_url":"https://api.github.com/users/reta/following{/other_user}","gists_url":"https://api.github.com/users/reta/gists{/gist_id}","starred_url":"https://api.github.com/users/reta/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/reta/subscriptions","organizations_url":"https://api.github.com/users/reta/orgs","repos_url":"https://api.github.com/users/reta/repos","events_url":"https://api.github.com/users/reta/events{/privacy}","received_events_url":"https://api.github.com/users/reta/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-11-16T11:52:47Z","updated_at":"2020-11-16T11:52:47Z","author_association":"MEMBER","body":"@rmannibucau yes, it is large change (but certainly good one), if we could limit the amount of modifications to what is really needed that would be great, other changes could be integrated later on, thanks.","reactions":{"url":"https://api.github.com/repos/apache/cxf/issues/comments/727931394/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/cxf/issues/comments/727932346","html_url":"https://github.com/apache/cxf/pull/721#issuecomment-727932346","issue_url":"https://api.github.com/repos/apache/cxf/issues/721","id":727932346,"node_id":"MDEyOklzc3VlQ29tbWVudDcyNzkzMjM0Ng==","user":{"login":"dufoli","id":202057,"node_id":"MDQ6VXNlcjIwMjA1Nw==","avatar_url":"https://avatars.githubusercontent.com/u/202057?v=4","gravatar_id":"","url":"https://api.github.com/users/dufoli","html_url":"https://github.com/dufoli","followers_url":"https://api.github.com/users/dufoli/followers","following_url":"https://api.github.com/users/dufoli/following{/other_user}","gists_url":"https://api.github.com/users/dufoli/gists{/gist_id}","starred_url":"https://api.github.com/users/dufoli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dufoli/subscriptions","organizations_url":"https://api.github.com/users/dufoli/orgs","repos_url":"https://api.github.com/users/dufoli/repos","events_url":"https://api.github.com/users/dufoli/events{/privacy}","received_events_url":"https://api.github.com/users/dufoli/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-11-16T11:54:54Z","updated_at":"2020-11-16T11:54:54Z","author_association":"CONTRIBUTOR","body":"@rmannibucau I have integrate your patch partially (not the visitMaxs stuff and ReflectionInvokationHandler)","reactions":{"url":"https://api.github.com/repos/apache/cxf/issues/comments/727932346/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/cxf/issues/comments/727945948","html_url":"https://github.com/apache/cxf/pull/721#issuecomment-727945948","issue_url":"https://api.github.com/repos/apache/cxf/issues/721","id":727945948,"node_id":"MDEyOklzc3VlQ29tbWVudDcyNzk0NTk0OA==","user":{"login":"rmannibucau","id":1249546,"node_id":"MDQ6VXNlcjEyNDk1NDY=","avatar_url":"https://avatars.githubusercontent.com/u/1249546?v=4","gravatar_id":"","url":"https://api.github.com/users/rmannibucau","html_url":"https://github.com/rmannibucau","followers_url":"https://api.github.com/users/rmannibucau/followers","following_url":"https://api.github.com/users/rmannibucau/following{/other_user}","gists_url":"https://api.github.com/users/rmannibucau/gists{/gist_id}","starred_url":"https://api.github.com/users/rmannibucau/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmannibucau/subscriptions","organizations_url":"https://api.github.com/users/rmannibucau/orgs","repos_url":"https://api.github.com/users/rmannibucau/repos","events_url":"https://api.github.com/users/rmannibucau/events{/privacy}","received_events_url":"https://api.github.com/users/rmannibucau/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-11-16T12:23:59Z","updated_at":"2020-11-16T12:23:59Z","author_association":"CONTRIBUTOR","body":"@reta well, I see two options: do another pre-721 PR with the archi refacto and then rebase 721 (but can be some work which will not bring much IMHO) or go with 721 as it. a Next PR can 1. fix/simplify the visitMaxs part and 2. Split the asm SPI in N implementations and drop the abstraction. Does it sounds like a potential plan?","reactions":{"url":"https://api.github.com/repos/apache/cxf/issues/comments/727945948/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/cxf/issues/comments/728080858","html_url":"https://github.com/apache/cxf/pull/721#issuecomment-728080858","issue_url":"https://api.github.com/repos/apache/cxf/issues/721","id":728080858,"node_id":"MDEyOklzc3VlQ29tbWVudDcyODA4MDg1OA==","user":{"login":"reta","id":509855,"node_id":"MDQ6VXNlcjUwOTg1NQ==","avatar_url":"https://avatars.githubusercontent.com/u/509855?v=4","gravatar_id":"","url":"https://api.github.com/users/reta","html_url":"https://github.com/reta","followers_url":"https://api.github.com/users/reta/followers","following_url":"https://api.github.com/users/reta/following{/other_user}","gists_url":"https://api.github.com/users/reta/gists{/gist_id}","starred_url":"https://api.github.com/users/reta/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/reta/subscriptions","organizations_url":"https://api.github.com/users/reta/orgs","repos_url":"https://api.github.com/users/reta/repos","events_url":"https://api.github.com/users/reta/events{/privacy}","received_events_url":"https://api.github.com/users/reta/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-11-16T14:09:53Z","updated_at":"2020-11-16T14:09:53Z","author_association":"MEMBER","body":"@rmannibucau sorry should have been more clear, I meant what you basically outlined as the 2nd option, do the asm split / code generation in another PR(s)","reactions":{"url":"https://api.github.com/repos/apache/cxf/issues/comments/728080858/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/cxf/issues/comments/728084199","html_url":"https://github.com/apache/cxf/pull/721#issuecomment-728084199","issue_url":"https://api.github.com/repos/apache/cxf/issues/721","id":728084199,"node_id":"MDEyOklzc3VlQ29tbWVudDcyODA4NDE5OQ==","user":{"login":"rmannibucau","id":1249546,"node_id":"MDQ6VXNlcjEyNDk1NDY=","avatar_url":"https://avatars.githubusercontent.com/u/1249546?v=4","gravatar_id":"","url":"https://api.github.com/users/rmannibucau","html_url":"https://github.com/rmannibucau","followers_url":"https://api.github.com/users/rmannibucau/followers","following_url":"https://api.github.com/users/rmannibucau/following{/other_user}","gists_url":"https://api.github.com/users/rmannibucau/gists{/gist_id}","starred_url":"https://api.github.com/users/rmannibucau/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rmannibucau/subscriptions","organizations_url":"https://api.github.com/users/rmannibucau/orgs","repos_url":"https://api.github.com/users/rmannibucau/repos","events_url":"https://api.github.com/users/rmannibucau/events{/privacy}","received_events_url":"https://api.github.com/users/rmannibucau/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-11-16T14:11:57Z","updated_at":"2020-11-16T14:11:57Z","author_association":"CONTRIBUTOR","body":"@reta since \"1.\" and \"2.\" are not in this PR - future target - we are good to merge the build time class generation code (it is the only feature in this PR), right?","reactions":{"url":"https://api.github.com/repos/apache/cxf/issues/comments/728084199/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/cxf/issues/comments/728092663","html_url":"https://github.com/apache/cxf/pull/721#issuecomment-728092663","issue_url":"https://api.github.com/repos/apache/cxf/issues/721","id":728092663,"node_id":"MDEyOklzc3VlQ29tbWVudDcyODA5MjY2Mw==","user":{"login":"reta","id":509855,"node_id":"MDQ6VXNlcjUwOTg1NQ==","avatar_url":"https://avatars.githubusercontent.com/u/509855?v=4","gravatar_id":"","url":"https://api.github.com/users/reta","html_url":"https://github.com/reta","followers_url":"https://api.github.com/users/reta/followers","following_url":"https://api.github.com/users/reta/following{/other_user}","gists_url":"https://api.github.com/users/reta/gists{/gist_id}","starred_url":"https://api.github.com/users/reta/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/reta/subscriptions","organizations_url":"https://api.github.com/users/reta/orgs","repos_url":"https://api.github.com/users/reta/repos","events_url":"https://api.github.com/users/reta/events{/privacy}","received_events_url":"https://api.github.com/users/reta/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-11-16T14:21:53Z","updated_at":"2020-11-16T14:21:53Z","author_association":"MEMBER","body":"> @reta since \"1.\" and \"2.\" are not in this PR - future target - we are good to merge the build time class generation code (it is the only feature in this PR), right?\n\n@rmannibucau sure, but please give us some time to review it, I was following the conversations but there were changes pushed all the time, I think it is stabilized now, is it right @dufoli ?","reactions":{"url":"https://api.github.com/repos/apache/cxf/issues/comments/728092663/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/cxf/issues/comments/728097841","html_url":"https://github.com/apache/cxf/pull/721#issuecomment-728097841","issue_url":"https://api.github.com/repos/apache/cxf/issues/721","id":728097841,"node_id":"MDEyOklzc3VlQ29tbWVudDcyODA5Nzg0MQ==","user":{"login":"dufoli","id":202057,"node_id":"MDQ6VXNlcjIwMjA1Nw==","avatar_url":"https://avatars.githubusercontent.com/u/202057?v=4","gravatar_id":"","url":"https://api.github.com/users/dufoli","html_url":"https://github.com/dufoli","followers_url":"https://api.github.com/users/dufoli/followers","following_url":"https://api.github.com/users/dufoli/following{/other_user}","gists_url":"https://api.github.com/users/dufoli/gists{/gist_id}","starred_url":"https://api.github.com/users/dufoli/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dufoli/subscriptions","organizations_url":"https://api.github.com/users/dufoli/orgs","repos_url":"https://api.github.com/users/dufoli/repos","events_url":"https://api.github.com/users/dufoli/events{/privacy}","received_events_url":"https://api.github.com/users/dufoli/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-11-16T14:29:40Z","updated_at":"2020-11-16T14:29:40Z","author_association":"CONTRIBUTOR","body":"Yes stabilize. I hcnage nothing now ;-) Just wait review and feedback.","reactions":{"url":"https://api.github.com/repos/apache/cxf/issues/comments/728097841/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/cxf/issues/comments/728654606","html_url":"https://github.com/apache/cxf/pull/721#issuecomment-728654606","issue_url":"https://api.github.com/repos/apache/cxf/issues/721","id":728654606,"node_id":"MDEyOklzc3VlQ29tbWVudDcyODY1NDYwNg==","user":{"login":"reta","id":509855,"node_id":"MDQ6VXNlcjUwOTg1NQ==","avatar_url":"https://avatars.githubusercontent.com/u/509855?v=4","gravatar_id":"","url":"https://api.github.com/users/reta","html_url":"https://github.com/reta","followers_url":"https://api.github.com/users/reta/followers","following_url":"https://api.github.com/users/reta/following{/other_user}","gists_url":"https://api.github.com/users/reta/gists{/gist_id}","starred_url":"https://api.github.com/users/reta/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/reta/subscriptions","organizations_url":"https://api.github.com/users/reta/orgs","repos_url":"https://api.github.com/users/reta/repos","events_url":"https://api.github.com/users/reta/events{/privacy}","received_events_url":"https://api.github.com/users/reta/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-11-17T02:59:41Z","updated_at":"2020-11-17T02:59:41Z","author_association":"MEMBER","body":"@dufoli @rmannibucau tremendous work guys, did a pass today, will continue tomorrow.  As a side note, we sometimes have glitches with Jenkins checks (not sure why) but close / reopen PR seems to circumvent that and Jenkins checks are back. @dufoli would you mind to close / reopen this PR (should not cause any issues besides a bit of annoyance). Alternatively I think we could run Jenkins build for this PR manually.","reactions":{"url":"https://api.github.com/repos/apache/cxf/issues/comments/728654606/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/cxf/issues/comments/729131037","html_url":"https://github.com/apache/cxf/pull/725#issuecomment-729131037","issue_url":"https://api.github.com/repos/apache/cxf/issues/725","id":729131037,"node_id":"MDEyOklzc3VlQ29tbWVudDcyOTEzMTAzNw==","user":{"login":"amarkevich","id":62415,"node_id":"MDQ6VXNlcjYyNDE1","avatar_url":"https://avatars.githubusercontent.com/u/62415?v=4","gravatar_id":"","url":"https://api.github.com/users/amarkevich","html_url":"https://github.com/amarkevich","followers_url":"https://api.github.com/users/amarkevich/followers","following_url":"https://api.github.com/users/amarkevich/following{/other_user}","gists_url":"https://api.github.com/users/amarkevich/gists{/gist_id}","starred_url":"https://api.github.com/users/amarkevich/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/amarkevich/subscriptions","organizations_url":"https://api.github.com/users/amarkevich/orgs","repos_url":"https://api.github.com/users/amarkevich/repos","events_url":"https://api.github.com/users/amarkevich/events{/privacy}","received_events_url":"https://api.github.com/users/amarkevich/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-11-17T18:52:48Z","updated_at":"2020-11-17T18:52:48Z","author_association":"CONTRIBUTOR","body":"both failures caused by unstable tests","reactions":{"url":"https://api.github.com/repos/apache/cxf/issues/comments/729131037/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/cxf/issues/comments/729337686","html_url":"https://github.com/apache/cxf/pull/725#issuecomment-729337686","issue_url":"https://api.github.com/repos/apache/cxf/issues/725","id":729337686,"node_id":"MDEyOklzc3VlQ29tbWVudDcyOTMzNzY4Ng==","user":{"login":"reta","id":509855,"node_id":"MDQ6VXNlcjUwOTg1NQ==","avatar_url":"https://avatars.githubusercontent.com/u/509855?v=4","gravatar_id":"","url":"https://api.github.com/users/reta","html_url":"https://github.com/reta","followers_url":"https://api.github.com/users/reta/followers","following_url":"https://api.github.com/users/reta/following{/other_user}","gists_url":"https://api.github.com/users/reta/gists{/gist_id}","starred_url":"https://api.github.com/users/reta/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/reta/subscriptions","organizations_url":"https://api.github.com/users/reta/orgs","repos_url":"https://api.github.com/users/reta/repos","events_url":"https://api.github.com/users/reta/events{/privacy}","received_events_url":"https://api.github.com/users/reta/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-11-18T02:34:56Z","updated_at":"2020-11-18T02:34:56Z","author_association":"MEMBER","body":"@amarkevich there is something weird going on, one of the `transport-udp` test cases fails pretty consistently and I don't understand the reasons yet, looking into it ...","reactions":{"url":"https://api.github.com/repos/apache/cxf/issues/comments/729337686/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]