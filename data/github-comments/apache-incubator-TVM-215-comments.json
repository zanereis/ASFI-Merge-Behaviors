[{"url":"https://api.github.com/repos/apache/tvm/issues/comments/697153906","html_url":"https://github.com/apache/tvm/issues/6474#issuecomment-697153906","issue_url":"https://api.github.com/repos/apache/tvm/issues/6474","id":697153906,"node_id":"MDEyOklzc3VlQ29tbWVudDY5NzE1MzkwNg==","user":{"login":"zhangzhen507","id":8154619,"node_id":"MDQ6VXNlcjgxNTQ2MTk=","avatar_url":"https://avatars.githubusercontent.com/u/8154619?v=4","gravatar_id":"","url":"https://api.github.com/users/zhangzhen507","html_url":"https://github.com/zhangzhen507","followers_url":"https://api.github.com/users/zhangzhen507/followers","following_url":"https://api.github.com/users/zhangzhen507/following{/other_user}","gists_url":"https://api.github.com/users/zhangzhen507/gists{/gist_id}","starred_url":"https://api.github.com/users/zhangzhen507/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zhangzhen507/subscriptions","organizations_url":"https://api.github.com/users/zhangzhen507/orgs","repos_url":"https://api.github.com/users/zhangzhen507/repos","events_url":"https://api.github.com/users/zhangzhen507/events{/privacy}","received_events_url":"https://api.github.com/users/zhangzhen507/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-23T06:07:24Z","updated_at":"2020-09-23T06:07:24Z","author_association":"NONE","body":"> yes, `torch.nn.LSTM` is translated to `aten::lstm` in Torchscript.\r\n\r\nHi, do you have a plan when you will support the aten::lstm in tvm/relay/frontend/pytorch.py ?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/697153906/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/697252375","html_url":"https://github.com/apache/tvm/issues/6474#issuecomment-697252375","issue_url":"https://api.github.com/repos/apache/tvm/issues/6474","id":697252375,"node_id":"MDEyOklzc3VlQ29tbWVudDY5NzI1MjM3NQ==","user":{"login":"masahi","id":1776403,"node_id":"MDQ6VXNlcjE3NzY0MDM=","avatar_url":"https://avatars.githubusercontent.com/u/1776403?v=4","gravatar_id":"","url":"https://api.github.com/users/masahi","html_url":"https://github.com/masahi","followers_url":"https://api.github.com/users/masahi/followers","following_url":"https://api.github.com/users/masahi/following{/other_user}","gists_url":"https://api.github.com/users/masahi/gists{/gist_id}","starred_url":"https://api.github.com/users/masahi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/masahi/subscriptions","organizations_url":"https://api.github.com/users/masahi/orgs","repos_url":"https://api.github.com/users/masahi/repos","events_url":"https://api.github.com/users/masahi/events{/privacy}","received_events_url":"https://api.github.com/users/masahi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-23T09:38:11Z","updated_at":"2020-09-23T09:38:11Z","author_association":"MEMBER","body":"No from my end. I'm not expert on LSTM and don't have time for this.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/697252375/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/697274278","html_url":"https://github.com/apache/tvm/issues/6535#issuecomment-697274278","issue_url":"https://api.github.com/repos/apache/tvm/issues/6535","id":697274278,"node_id":"MDEyOklzc3VlQ29tbWVudDY5NzI3NDI3OA==","user":{"login":"masahi","id":1776403,"node_id":"MDQ6VXNlcjE3NzY0MDM=","avatar_url":"https://avatars.githubusercontent.com/u/1776403?v=4","gravatar_id":"","url":"https://api.github.com/users/masahi","html_url":"https://github.com/masahi","followers_url":"https://api.github.com/users/masahi/followers","following_url":"https://api.github.com/users/masahi/following{/other_user}","gists_url":"https://api.github.com/users/masahi/gists{/gist_id}","starred_url":"https://api.github.com/users/masahi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/masahi/subscriptions","organizations_url":"https://api.github.com/users/masahi/orgs","repos_url":"https://api.github.com/users/masahi/repos","events_url":"https://api.github.com/users/masahi/events{/privacy}","received_events_url":"https://api.github.com/users/masahi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-23T10:22:59Z","updated_at":"2020-09-23T10:23:44Z","author_association":"MEMBER","body":"Yes, we want to support a newer version but our quantization support is completely broken in PyTorch 1.6 due to the breaking change they introduced https://github.com/pytorch/pytorch/issues/42497. I don't know a simple workaround for this. \r\n\r\nEither we wait for Torch people to fix this issue or we spend significant effort to add workaround. Until then we are stuck with 1.4 or 1.5 (CI is at 1.4)  \r\n\r\nThe ops `aten::tensor`, `aten::empty`, and `aten::numel` are very trivial ops actually, so if you want to just convert 1.6 detection models, adding support for them shouldn't be hard. You don't need to wait for 1.6 support.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/697274278/reactions","total_count":2,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":1,"rocket":1,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/697341590","html_url":"https://github.com/apache/tvm/pull/6429#issuecomment-697341590","issue_url":"https://api.github.com/repos/apache/tvm/issues/6429","id":697341590,"node_id":"MDEyOklzc3VlQ29tbWVudDY5NzM0MTU5MA==","user":{"login":"mbaret","id":55580676,"node_id":"MDQ6VXNlcjU1NTgwNjc2","avatar_url":"https://avatars.githubusercontent.com/u/55580676?v=4","gravatar_id":"","url":"https://api.github.com/users/mbaret","html_url":"https://github.com/mbaret","followers_url":"https://api.github.com/users/mbaret/followers","following_url":"https://api.github.com/users/mbaret/following{/other_user}","gists_url":"https://api.github.com/users/mbaret/gists{/gist_id}","starred_url":"https://api.github.com/users/mbaret/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbaret/subscriptions","organizations_url":"https://api.github.com/users/mbaret/orgs","repos_url":"https://api.github.com/users/mbaret/repos","events_url":"https://api.github.com/users/mbaret/events{/privacy}","received_events_url":"https://api.github.com/users/mbaret/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-23T12:47:35Z","updated_at":"2020-09-23T12:47:35Z","author_association":"CONTRIBUTOR","body":"ping @siju-samuel could you take a look at this as I believe you requested this functionality?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/697341590/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/697350073","html_url":"https://github.com/apache/tvm/pull/6523#issuecomment-697350073","issue_url":"https://api.github.com/repos/apache/tvm/issues/6523","id":697350073,"node_id":"MDEyOklzc3VlQ29tbWVudDY5NzM1MDA3Mw==","user":{"login":"mbaret","id":55580676,"node_id":"MDQ6VXNlcjU1NTgwNjc2","avatar_url":"https://avatars.githubusercontent.com/u/55580676?v=4","gravatar_id":"","url":"https://api.github.com/users/mbaret","html_url":"https://github.com/mbaret","followers_url":"https://api.github.com/users/mbaret/followers","following_url":"https://api.github.com/users/mbaret/following{/other_user}","gists_url":"https://api.github.com/users/mbaret/gists{/gist_id}","starred_url":"https://api.github.com/users/mbaret/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbaret/subscriptions","organizations_url":"https://api.github.com/users/mbaret/orgs","repos_url":"https://api.github.com/users/mbaret/repos","events_url":"https://api.github.com/users/mbaret/events{/privacy}","received_events_url":"https://api.github.com/users/mbaret/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-23T13:03:08Z","updated_at":"2020-09-23T13:03:08Z","author_association":"CONTRIBUTOR","body":"also ping @siju-samuel ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/697350073/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/697528517","html_url":"https://github.com/apache/tvm/pull/6534#issuecomment-697528517","issue_url":"https://api.github.com/repos/apache/tvm/issues/6534","id":697528517,"node_id":"MDEyOklzc3VlQ29tbWVudDY5NzUyODUxNw==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-23T15:18:54Z","updated_at":"2020-09-23T15:18:54Z","author_association":"MEMBER","body":"Thanks @Johnson9009 @leandron !\r\n","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/697528517/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/697531989","html_url":"https://github.com/apache/tvm/issues/6526#issuecomment-697531989","issue_url":"https://api.github.com/repos/apache/tvm/issues/6526","id":697531989,"node_id":"MDEyOklzc3VlQ29tbWVudDY5NzUzMTk4OQ==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-23T15:21:02Z","updated_at":"2020-09-23T15:21:15Z","author_association":"MEMBER","body":"Closed by #6527 Thanks to @intheworld ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/697531989/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/697630150","html_url":"https://github.com/apache/tvm/pull/6536#issuecomment-697630150","issue_url":"https://api.github.com/repos/apache/tvm/issues/6536","id":697630150,"node_id":"MDEyOklzc3VlQ29tbWVudDY5NzYzMDE1MA==","user":{"login":"leandron","id":437416,"node_id":"MDQ6VXNlcjQzNzQxNg==","avatar_url":"https://avatars.githubusercontent.com/u/437416?v=4","gravatar_id":"","url":"https://api.github.com/users/leandron","html_url":"https://github.com/leandron","followers_url":"https://api.github.com/users/leandron/followers","following_url":"https://api.github.com/users/leandron/following{/other_user}","gists_url":"https://api.github.com/users/leandron/gists{/gist_id}","starred_url":"https://api.github.com/users/leandron/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leandron/subscriptions","organizations_url":"https://api.github.com/users/leandron/orgs","repos_url":"https://api.github.com/users/leandron/repos","events_url":"https://api.github.com/users/leandron/events{/privacy}","received_events_url":"https://api.github.com/users/leandron/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-23T16:19:30Z","updated_at":"2020-09-23T16:19:30Z","author_association":"CONTRIBUTOR","body":"also cc @tqchen to merge, in case you agree with this change.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/697630150/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/697670045","html_url":"https://github.com/apache/tvm/pull/6506#issuecomment-697670045","issue_url":"https://api.github.com/repos/apache/tvm/issues/6506","id":697670045,"node_id":"MDEyOklzc3VlQ29tbWVudDY5NzY3MDA0NQ==","user":{"login":"comaniac","id":8262694,"node_id":"MDQ6VXNlcjgyNjI2OTQ=","avatar_url":"https://avatars.githubusercontent.com/u/8262694?v=4","gravatar_id":"","url":"https://api.github.com/users/comaniac","html_url":"https://github.com/comaniac","followers_url":"https://api.github.com/users/comaniac/followers","following_url":"https://api.github.com/users/comaniac/following{/other_user}","gists_url":"https://api.github.com/users/comaniac/gists{/gist_id}","starred_url":"https://api.github.com/users/comaniac/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/comaniac/subscriptions","organizations_url":"https://api.github.com/users/comaniac/orgs","repos_url":"https://api.github.com/users/comaniac/repos","events_url":"https://api.github.com/users/comaniac/events{/privacy}","received_events_url":"https://api.github.com/users/comaniac/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-23T16:42:58Z","updated_at":"2020-09-23T16:42:58Z","author_association":"CONTRIBUTOR","body":"Thanks @giuseros @lhutton1 @zhiics ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/697670045/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/697689316","html_url":"https://github.com/apache/tvm/pull/6367#issuecomment-697689316","issue_url":"https://api.github.com/repos/apache/tvm/issues/6367","id":697689316,"node_id":"MDEyOklzc3VlQ29tbWVudDY5NzY4OTMxNg==","user":{"login":"siju-samuel","id":15828974,"node_id":"MDQ6VXNlcjE1ODI4OTc0","avatar_url":"https://avatars.githubusercontent.com/u/15828974?v=4","gravatar_id":"","url":"https://api.github.com/users/siju-samuel","html_url":"https://github.com/siju-samuel","followers_url":"https://api.github.com/users/siju-samuel/followers","following_url":"https://api.github.com/users/siju-samuel/following{/other_user}","gists_url":"https://api.github.com/users/siju-samuel/gists{/gist_id}","starred_url":"https://api.github.com/users/siju-samuel/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/siju-samuel/subscriptions","organizations_url":"https://api.github.com/users/siju-samuel/orgs","repos_url":"https://api.github.com/users/siju-samuel/repos","events_url":"https://api.github.com/users/siju-samuel/events{/privacy}","received_events_url":"https://api.github.com/users/siju-samuel/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-23T16:54:24Z","updated_at":"2020-09-23T16:54:24Z","author_association":"MEMBER","body":"Thanks @huajsj This PR is merged.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/697689316/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/697690524","html_url":"https://github.com/apache/tvm/pull/6536#issuecomment-697690524","issue_url":"https://api.github.com/repos/apache/tvm/issues/6536","id":697690524,"node_id":"MDEyOklzc3VlQ29tbWVudDY5NzY5MDUyNA==","user":{"login":"comaniac","id":8262694,"node_id":"MDQ6VXNlcjgyNjI2OTQ=","avatar_url":"https://avatars.githubusercontent.com/u/8262694?v=4","gravatar_id":"","url":"https://api.github.com/users/comaniac","html_url":"https://github.com/comaniac","followers_url":"https://api.github.com/users/comaniac/followers","following_url":"https://api.github.com/users/comaniac/following{/other_user}","gists_url":"https://api.github.com/users/comaniac/gists{/gist_id}","starred_url":"https://api.github.com/users/comaniac/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/comaniac/subscriptions","organizations_url":"https://api.github.com/users/comaniac/orgs","repos_url":"https://api.github.com/users/comaniac/repos","events_url":"https://api.github.com/users/comaniac/events{/privacy}","received_events_url":"https://api.github.com/users/comaniac/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-23T16:55:06Z","updated_at":"2020-09-23T16:55:06Z","author_association":"CONTRIBUTOR","body":"From the ONNX package `load` is for backward compatibility. Is there any particular reason to change to `load_model`?\r\nAlso, pylint E1101 is `no-member`. I assume the reason you want to disable it in along with the change is because of the out-of-date lint file. Does that also imply it would be safer to use the compatible API?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/697690524/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/697708522","html_url":"https://github.com/apache/tvm/issues/6540#issuecomment-697708522","issue_url":"https://api.github.com/repos/apache/tvm/issues/6540","id":697708522,"node_id":"MDEyOklzc3VlQ29tbWVudDY5NzcwODUyMg==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-23T17:05:46Z","updated_at":"2020-09-23T21:20:23Z","author_association":"MEMBER","body":"cc @jroesch @mwillsey @nhynes ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/697708522/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/697710473","html_url":"https://github.com/apache/tvm/pull/6536#issuecomment-697710473","issue_url":"https://api.github.com/repos/apache/tvm/issues/6536","id":697710473,"node_id":"MDEyOklzc3VlQ29tbWVudDY5NzcxMDQ3Mw==","user":{"login":"leandron","id":437416,"node_id":"MDQ6VXNlcjQzNzQxNg==","avatar_url":"https://avatars.githubusercontent.com/u/437416?v=4","gravatar_id":"","url":"https://api.github.com/users/leandron","html_url":"https://github.com/leandron","followers_url":"https://api.github.com/users/leandron/followers","following_url":"https://api.github.com/users/leandron/following{/other_user}","gists_url":"https://api.github.com/users/leandron/gists{/gist_id}","starred_url":"https://api.github.com/users/leandron/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leandron/subscriptions","organizations_url":"https://api.github.com/users/leandron/orgs","repos_url":"https://api.github.com/users/leandron/repos","events_url":"https://api.github.com/users/leandron/events{/privacy}","received_events_url":"https://api.github.com/users/leandron/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-23T17:06:53Z","updated_at":"2020-09-23T17:07:07Z","author_association":"CONTRIBUTOR","body":"> From the ONNX package `load` is for backward compatibility. Is there any particular reason to change to `load_model`?\r\n\r\nYeah, looking at it again, it makes sense to come back to `load`. Will revert it.\r\n\r\n> Also, pylint E1101 is `no-member`. I assume the reason you want to disable it in along with the change is because of the out-of-date lint file\r\n\r\nThis is the main reason for this PR. If I get a fresh clone from github and run `./docker/bash.sh tlcpack/ci-lint:v0.62 ./tests/scripts/task_lint.sh`, I can see a pylint E1101, which seems correct.\r\n\r\n> Does that also imply it would be safer to use the compatible API?\r\n\r\nWill move it back.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/697710473/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/697917809","html_url":"https://github.com/apache/tvm/pull/6541#issuecomment-697917809","issue_url":"https://api.github.com/repos/apache/tvm/issues/6541","id":697917809,"node_id":"MDEyOklzc3VlQ29tbWVudDY5NzkxNzgwOQ==","user":{"login":"rkimball","id":15673563,"node_id":"MDQ6VXNlcjE1NjczNTYz","avatar_url":"https://avatars.githubusercontent.com/u/15673563?v=4","gravatar_id":"","url":"https://api.github.com/users/rkimball","html_url":"https://github.com/rkimball","followers_url":"https://api.github.com/users/rkimball/followers","following_url":"https://api.github.com/users/rkimball/following{/other_user}","gists_url":"https://api.github.com/users/rkimball/gists{/gist_id}","starred_url":"https://api.github.com/users/rkimball/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rkimball/subscriptions","organizations_url":"https://api.github.com/users/rkimball/orgs","repos_url":"https://api.github.com/users/rkimball/repos","events_url":"https://api.github.com/users/rkimball/events{/privacy}","received_events_url":"https://api.github.com/users/rkimball/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-23T19:14:57Z","updated_at":"2020-09-23T19:14:57Z","author_association":"CONTRIBUTOR","body":"@tqchen ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/697917809/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/697928917","html_url":"https://github.com/apache/tvm/pull/6541#issuecomment-697928917","issue_url":"https://api.github.com/repos/apache/tvm/issues/6541","id":697928917,"node_id":"MDEyOklzc3VlQ29tbWVudDY5NzkyODkxNw==","user":{"login":"rkimball","id":15673563,"node_id":"MDQ6VXNlcjE1NjczNTYz","avatar_url":"https://avatars.githubusercontent.com/u/15673563?v=4","gravatar_id":"","url":"https://api.github.com/users/rkimball","html_url":"https://github.com/rkimball","followers_url":"https://api.github.com/users/rkimball/followers","following_url":"https://api.github.com/users/rkimball/following{/other_user}","gists_url":"https://api.github.com/users/rkimball/gists{/gist_id}","starred_url":"https://api.github.com/users/rkimball/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rkimball/subscriptions","organizations_url":"https://api.github.com/users/rkimball/orgs","repos_url":"https://api.github.com/users/rkimball/repos","events_url":"https://api.github.com/users/rkimball/events{/privacy}","received_events_url":"https://api.github.com/users/rkimball/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-23T19:35:10Z","updated_at":"2020-09-23T19:35:10Z","author_association":"CONTRIBUTOR","body":"@jroesch @tkonolige @junrushao1994 ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/697928917/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/697942835","html_url":"https://github.com/apache/tvm/pull/6515#issuecomment-697942835","issue_url":"https://api.github.com/repos/apache/tvm/issues/6515","id":697942835,"node_id":"MDEyOklzc3VlQ29tbWVudDY5Nzk0MjgzNQ==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-23T20:03:53Z","updated_at":"2020-09-23T20:03:53Z","author_association":"MEMBER","body":"@rkimball please look into CI errors","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/697942835/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/697949127","html_url":"https://github.com/apache/tvm/pull/6523#issuecomment-697949127","issue_url":"https://api.github.com/repos/apache/tvm/issues/6523","id":697949127,"node_id":"MDEyOklzc3VlQ29tbWVudDY5Nzk0OTEyNw==","user":{"login":"anijain2305","id":13822661,"node_id":"MDQ6VXNlcjEzODIyNjYx","avatar_url":"https://avatars.githubusercontent.com/u/13822661?v=4","gravatar_id":"","url":"https://api.github.com/users/anijain2305","html_url":"https://github.com/anijain2305","followers_url":"https://api.github.com/users/anijain2305/followers","following_url":"https://api.github.com/users/anijain2305/following{/other_user}","gists_url":"https://api.github.com/users/anijain2305/gists{/gist_id}","starred_url":"https://api.github.com/users/anijain2305/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/anijain2305/subscriptions","organizations_url":"https://api.github.com/users/anijain2305/orgs","repos_url":"https://api.github.com/users/anijain2305/repos","events_url":"https://api.github.com/users/anijain2305/events{/privacy}","received_events_url":"https://api.github.com/users/anijain2305/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-23T20:17:08Z","updated_at":"2020-09-23T20:19:59Z","author_association":"CONTRIBUTOR","body":"Dilation part is good.\r\n\r\nI am not sure about the conv2d transpose portion. My concern is that we now have to replicate the logic for different framework parsers. My suggestion would be to add `qnn.conv2d_tranpose` op and perform the \"dilation + qnn.op.conv2d\" lowering in QNN Legalize (example here - https://github.com/apache/incubator-tvm/blob/master/python/tvm/relay/qnn/op/legalizations.py#L266).\r\n\r\nFor now, we can make the transformation for all targets, not just specifically to ARM.\r\n\r\nThis will keep the option open to improve the schedule of conv2d_transpose as a whole if needed.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/697949127/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/698007000","html_url":"https://github.com/apache/tvm/pull/6542#issuecomment-698007000","issue_url":"https://api.github.com/repos/apache/tvm/issues/6542","id":698007000,"node_id":"MDEyOklzc3VlQ29tbWVudDY5ODAwNzAwMA==","user":{"login":"ZihengJiang","id":17693755,"node_id":"MDQ6VXNlcjE3NjkzNzU1","avatar_url":"https://avatars.githubusercontent.com/u/17693755?v=4","gravatar_id":"","url":"https://api.github.com/users/ZihengJiang","html_url":"https://github.com/ZihengJiang","followers_url":"https://api.github.com/users/ZihengJiang/followers","following_url":"https://api.github.com/users/ZihengJiang/following{/other_user}","gists_url":"https://api.github.com/users/ZihengJiang/gists{/gist_id}","starred_url":"https://api.github.com/users/ZihengJiang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ZihengJiang/subscriptions","organizations_url":"https://api.github.com/users/ZihengJiang/orgs","repos_url":"https://api.github.com/users/ZihengJiang/repos","events_url":"https://api.github.com/users/ZihengJiang/events{/privacy}","received_events_url":"https://api.github.com/users/ZihengJiang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-23T22:35:25Z","updated_at":"2020-09-23T22:35:25Z","author_association":"CONTRIBUTOR","body":"@kevinthesun @icemelon9 Could you help review?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/698007000/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/698071078","html_url":"https://github.com/apache/tvm/pull/6537#issuecomment-698071078","issue_url":"https://api.github.com/repos/apache/tvm/issues/6537","id":698071078,"node_id":"MDEyOklzc3VlQ29tbWVudDY5ODA3MTA3OA==","user":{"login":"FrozenGene","id":7287321,"node_id":"MDQ6VXNlcjcyODczMjE=","avatar_url":"https://avatars.githubusercontent.com/u/7287321?v=4","gravatar_id":"","url":"https://api.github.com/users/FrozenGene","html_url":"https://github.com/FrozenGene","followers_url":"https://api.github.com/users/FrozenGene/followers","following_url":"https://api.github.com/users/FrozenGene/following{/other_user}","gists_url":"https://api.github.com/users/FrozenGene/gists{/gist_id}","starred_url":"https://api.github.com/users/FrozenGene/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/FrozenGene/subscriptions","organizations_url":"https://api.github.com/users/FrozenGene/orgs","repos_url":"https://api.github.com/users/FrozenGene/repos","events_url":"https://api.github.com/users/FrozenGene/events{/privacy}","received_events_url":"https://api.github.com/users/FrozenGene/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-24T02:18:48Z","updated_at":"2020-09-24T02:18:48Z","author_association":"MEMBER","body":"Thanks @leandron , great job. Besides this, I think we could also add some features I think it is important too:\r\n1. We could add `--num-threads` to control how many cores to tune. This is important for remote devices like ARM\r\n2. We could add `--cpu-mode` to control BIG core or LITTLE core to tune. Imagine remote devices like have A72 + A35. This feature maybe should require us to expose one interface in our AutoTVM to use API `runtime.config_threadpool`.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/698071078/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/698083821","html_url":"https://github.com/apache/tvm/issues/1673#issuecomment-698083821","issue_url":"https://api.github.com/repos/apache/tvm/issues/1673","id":698083821,"node_id":"MDEyOklzc3VlQ29tbWVudDY5ODA4MzgyMQ==","user":{"login":"calvin886","id":46655164,"node_id":"MDQ6VXNlcjQ2NjU1MTY0","avatar_url":"https://avatars.githubusercontent.com/u/46655164?v=4","gravatar_id":"","url":"https://api.github.com/users/calvin886","html_url":"https://github.com/calvin886","followers_url":"https://api.github.com/users/calvin886/followers","following_url":"https://api.github.com/users/calvin886/following{/other_user}","gists_url":"https://api.github.com/users/calvin886/gists{/gist_id}","starred_url":"https://api.github.com/users/calvin886/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/calvin886/subscriptions","organizations_url":"https://api.github.com/users/calvin886/orgs","repos_url":"https://api.github.com/users/calvin886/repos","events_url":"https://api.github.com/users/calvin886/events{/privacy}","received_events_url":"https://api.github.com/users/calvin886/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-24T03:07:35Z","updated_at":"2020-09-24T03:07:35Z","author_association":"NONE","body":"> @jroesch As to the ONNX limitations, can you share more background or details why it cannot satisfy the requirements of NNVM/TVM? I'm really interested on this. Thanks in advance!\r\n\r\nHello Jammy,\r\nHave you figured out why onnx cannot satisfy the requirement of TVM? I also interested on this.\r\nThanks a lot! ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/698083821/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/698093656","html_url":"https://github.com/apache/tvm/issues/6543#issuecomment-698093656","issue_url":"https://api.github.com/repos/apache/tvm/issues/6543","id":698093656,"node_id":"MDEyOklzc3VlQ29tbWVudDY5ODA5MzY1Ng==","user":{"login":"stormchasingg","id":24808860,"node_id":"MDQ6VXNlcjI0ODA4ODYw","avatar_url":"https://avatars.githubusercontent.com/u/24808860?v=4","gravatar_id":"","url":"https://api.github.com/users/stormchasingg","html_url":"https://github.com/stormchasingg","followers_url":"https://api.github.com/users/stormchasingg/followers","following_url":"https://api.github.com/users/stormchasingg/following{/other_user}","gists_url":"https://api.github.com/users/stormchasingg/gists{/gist_id}","starred_url":"https://api.github.com/users/stormchasingg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stormchasingg/subscriptions","organizations_url":"https://api.github.com/users/stormchasingg/orgs","repos_url":"https://api.github.com/users/stormchasingg/repos","events_url":"https://api.github.com/users/stormchasingg/events{/privacy}","received_events_url":"https://api.github.com/users/stormchasingg/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-24T03:46:00Z","updated_at":"2020-09-24T03:46:00Z","author_association":"NONE","body":"I'm developing a program using TVM. A C++ multi-thread code is registered as a Python code through PackedFunc of TVM. I test the running time of C++ code. The result shows that multi-thread speeds the code. But when I test the running time in Python side, multi-thread doesn't work. Does TVM support multi-thread ?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/698093656/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/698116184","html_url":"https://github.com/apache/tvm/issues/6540#issuecomment-698116184","issue_url":"https://api.github.com/repos/apache/tvm/issues/6540","id":698116184,"node_id":"MDEyOklzc3VlQ29tbWVudDY5ODExNjE4NA==","user":{"login":"intheworld","id":9208685,"node_id":"MDQ6VXNlcjkyMDg2ODU=","avatar_url":"https://avatars.githubusercontent.com/u/9208685?v=4","gravatar_id":"","url":"https://api.github.com/users/intheworld","html_url":"https://github.com/intheworld","followers_url":"https://api.github.com/users/intheworld/followers","following_url":"https://api.github.com/users/intheworld/following{/other_user}","gists_url":"https://api.github.com/users/intheworld/gists{/gist_id}","starred_url":"https://api.github.com/users/intheworld/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/intheworld/subscriptions","organizations_url":"https://api.github.com/users/intheworld/orgs","repos_url":"https://api.github.com/users/intheworld/repos","events_url":"https://api.github.com/users/intheworld/events{/privacy}","received_events_url":"https://api.github.com/users/intheworld/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-24T05:11:48Z","updated_at":"2020-09-24T05:11:48Z","author_association":"CONTRIBUTOR","body":"I see the following code in PackedFunc. \r\nimpl_pod_value!(Int, i64, [i8, i16, i32, i64, isize]);\r\nimpl_pod_value!(UInt, i64, [u8, u16, u32, u64, usize]);\r\n\r\nInner type is i64. in #6528 , I think the problem is the inconsistence between rust Context and TVMContext.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/698116184/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/698200164","html_url":"https://github.com/apache/tvm/pull/6546#issuecomment-698200164","issue_url":"https://api.github.com/repos/apache/tvm/issues/6546","id":698200164,"node_id":"MDEyOklzc3VlQ29tbWVudDY5ODIwMDE2NA==","user":{"login":"nolanliou","id":30223680,"node_id":"MDQ6VXNlcjMwMjIzNjgw","avatar_url":"https://avatars.githubusercontent.com/u/30223680?v=4","gravatar_id":"","url":"https://api.github.com/users/nolanliou","html_url":"https://github.com/nolanliou","followers_url":"https://api.github.com/users/nolanliou/followers","following_url":"https://api.github.com/users/nolanliou/following{/other_user}","gists_url":"https://api.github.com/users/nolanliou/gists{/gist_id}","starred_url":"https://api.github.com/users/nolanliou/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nolanliou/subscriptions","organizations_url":"https://api.github.com/users/nolanliou/orgs","repos_url":"https://api.github.com/users/nolanliou/repos","events_url":"https://api.github.com/users/nolanliou/events{/privacy}","received_events_url":"https://api.github.com/users/nolanliou/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-24T08:32:07Z","updated_at":"2020-09-24T08:32:07Z","author_association":"CONTRIBUTOR","body":"> Thank you for looking into this. I'll take a closer look Can you fix the CI complaints, please?\r\n> Overall, it looks good to me.\r\n\r\nI cannot find where is the CI complaints","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/698200164/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/698425821","html_url":"https://github.com/apache/tvm/pull/6429#issuecomment-698425821","issue_url":"https://api.github.com/repos/apache/tvm/issues/6429","id":698425821,"node_id":"MDEyOklzc3VlQ29tbWVudDY5ODQyNTgyMQ==","user":{"login":"jainris","id":56974688,"node_id":"MDQ6VXNlcjU2OTc0Njg4","avatar_url":"https://avatars.githubusercontent.com/u/56974688?v=4","gravatar_id":"","url":"https://api.github.com/users/jainris","html_url":"https://github.com/jainris","followers_url":"https://api.github.com/users/jainris/followers","following_url":"https://api.github.com/users/jainris/following{/other_user}","gists_url":"https://api.github.com/users/jainris/gists{/gist_id}","starred_url":"https://api.github.com/users/jainris/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jainris/subscriptions","organizations_url":"https://api.github.com/users/jainris/orgs","repos_url":"https://api.github.com/users/jainris/repos","events_url":"https://api.github.com/users/jainris/events{/privacy}","received_events_url":"https://api.github.com/users/jainris/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-24T15:41:33Z","updated_at":"2020-09-24T15:41:33Z","author_association":"CONTRIBUTOR","body":"@anijain2305 I believe this is ready to be merged.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/698425821/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/698427218","html_url":"https://github.com/apache/tvm/pull/6429#issuecomment-698427218","issue_url":"https://api.github.com/repos/apache/tvm/issues/6429","id":698427218,"node_id":"MDEyOklzc3VlQ29tbWVudDY5ODQyNzIxOA==","user":{"login":"anijain2305","id":13822661,"node_id":"MDQ6VXNlcjEzODIyNjYx","avatar_url":"https://avatars.githubusercontent.com/u/13822661?v=4","gravatar_id":"","url":"https://api.github.com/users/anijain2305","html_url":"https://github.com/anijain2305","followers_url":"https://api.github.com/users/anijain2305/followers","following_url":"https://api.github.com/users/anijain2305/following{/other_user}","gists_url":"https://api.github.com/users/anijain2305/gists{/gist_id}","starred_url":"https://api.github.com/users/anijain2305/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/anijain2305/subscriptions","organizations_url":"https://api.github.com/users/anijain2305/orgs","repos_url":"https://api.github.com/users/anijain2305/repos","events_url":"https://api.github.com/users/anijain2305/events{/privacy}","received_events_url":"https://api.github.com/users/anijain2305/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-24T15:43:52Z","updated_at":"2020-09-24T15:43:52Z","author_association":"CONTRIBUTOR","body":"Thanks @jainris @mbaret @siju-samuel @u99127 This is merged!","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/698427218/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/698428552","html_url":"https://github.com/apache/tvm/issues/6543#issuecomment-698428552","issue_url":"https://api.github.com/repos/apache/tvm/issues/6543","id":698428552,"node_id":"MDEyOklzc3VlQ29tbWVudDY5ODQyODU1Mg==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-24T15:46:04Z","updated_at":"2020-09-24T15:46:04Z","author_association":"MEMBER","body":"Please open a new thread on https://discuss.tvm.apache.org/ where the community collectively discusses related questions","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/698428552/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/698429219","html_url":"https://github.com/apache/tvm/issues/6548#issuecomment-698429219","issue_url":"https://api.github.com/repos/apache/tvm/issues/6548","id":698429219,"node_id":"MDEyOklzc3VlQ29tbWVudDY5ODQyOTIxOQ==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-24T15:47:12Z","updated_at":"2020-09-24T15:47:12Z","author_association":"MEMBER","body":"cc @merrymercy @jcf94 please look into it and send a fix","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/698429219/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/698430295","html_url":"https://github.com/apache/tvm/pull/6547#issuecomment-698430295","issue_url":"https://api.github.com/repos/apache/tvm/issues/6547","id":698430295,"node_id":"MDEyOklzc3VlQ29tbWVudDY5ODQzMDI5NQ==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-24T15:49:11Z","updated_at":"2020-09-24T15:49:11Z","author_association":"MEMBER","body":"Thanks @WenheLI !","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/698430295/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/698430981","html_url":"https://github.com/apache/tvm/pull/6541#issuecomment-698430981","issue_url":"https://api.github.com/repos/apache/tvm/issues/6541","id":698430981,"node_id":"MDEyOklzc3VlQ29tbWVudDY5ODQzMDk4MQ==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-24T15:50:23Z","updated_at":"2020-09-24T15:50:23Z","author_association":"MEMBER","body":"Thanks @cbalint13 @junrushao1994 @rkimball ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/698430981/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/698431320","html_url":"https://github.com/apache/tvm/pull/6544#issuecomment-698431320","issue_url":"https://api.github.com/repos/apache/tvm/issues/6544","id":698431320,"node_id":"MDEyOklzc3VlQ29tbWVudDY5ODQzMTMyMA==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-24T15:50:55Z","updated_at":"2020-09-24T15:50:55Z","author_association":"MEMBER","body":"Thanks @12101111 !","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/698431320/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/698434990","html_url":"https://github.com/apache/tvm/pull/6545#issuecomment-698434990","issue_url":"https://api.github.com/repos/apache/tvm/issues/6545","id":698434990,"node_id":"MDEyOklzc3VlQ29tbWVudDY5ODQzNDk5MA==","user":{"login":"zhiics","id":5145158,"node_id":"MDQ6VXNlcjUxNDUxNTg=","avatar_url":"https://avatars.githubusercontent.com/u/5145158?v=4","gravatar_id":"","url":"https://api.github.com/users/zhiics","html_url":"https://github.com/zhiics","followers_url":"https://api.github.com/users/zhiics/followers","following_url":"https://api.github.com/users/zhiics/following{/other_user}","gists_url":"https://api.github.com/users/zhiics/gists{/gist_id}","starred_url":"https://api.github.com/users/zhiics/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zhiics/subscriptions","organizations_url":"https://api.github.com/users/zhiics/orgs","repos_url":"https://api.github.com/users/zhiics/repos","events_url":"https://api.github.com/users/zhiics/events{/privacy}","received_events_url":"https://api.github.com/users/zhiics/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-24T15:57:36Z","updated_at":"2020-09-24T15:57:36Z","author_association":"MEMBER","body":"cc @jroesch @mwillsey ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/698434990/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/698452432","html_url":"https://github.com/apache/tvm/pull/6493#issuecomment-698452432","issue_url":"https://api.github.com/repos/apache/tvm/issues/6493","id":698452432,"node_id":"MDEyOklzc3VlQ29tbWVudDY5ODQ1MjQzMg==","user":{"login":"yongwww","id":10205827,"node_id":"MDQ6VXNlcjEwMjA1ODI3","avatar_url":"https://avatars.githubusercontent.com/u/10205827?v=4","gravatar_id":"","url":"https://api.github.com/users/yongwww","html_url":"https://github.com/yongwww","followers_url":"https://api.github.com/users/yongwww/followers","following_url":"https://api.github.com/users/yongwww/following{/other_user}","gists_url":"https://api.github.com/users/yongwww/gists{/gist_id}","starred_url":"https://api.github.com/users/yongwww/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yongwww/subscriptions","organizations_url":"https://api.github.com/users/yongwww/orgs","repos_url":"https://api.github.com/users/yongwww/repos","events_url":"https://api.github.com/users/yongwww/events{/privacy}","received_events_url":"https://api.github.com/users/yongwww/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-24T16:29:34Z","updated_at":"2020-09-24T16:29:34Z","author_association":"MEMBER","body":"Seems we haven't encountered dynamic cases of unbind in PyTorch od applications so far. Moved dynamism support in todo, hybrid and TupleWrapper might need to be changed to support dynamic tuple size.\r\n\r\nAlso tried to compose with tensorarray [in this branch](https://github.com/yongwww/tvm/commit/7fac56430bc5adcae4e295f803aa233d344e209e), failed in type checking. ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/698452432/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/698452511","html_url":"https://github.com/apache/tvm/pull/6549#issuecomment-698452511","issue_url":"https://api.github.com/repos/apache/tvm/issues/6549","id":698452511,"node_id":"MDEyOklzc3VlQ29tbWVudDY5ODQ1MjUxMQ==","user":{"login":"jwfromm","id":9874242,"node_id":"MDQ6VXNlcjk4NzQyNDI=","avatar_url":"https://avatars.githubusercontent.com/u/9874242?v=4","gravatar_id":"","url":"https://api.github.com/users/jwfromm","html_url":"https://github.com/jwfromm","followers_url":"https://api.github.com/users/jwfromm/followers","following_url":"https://api.github.com/users/jwfromm/following{/other_user}","gists_url":"https://api.github.com/users/jwfromm/gists{/gist_id}","starred_url":"https://api.github.com/users/jwfromm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jwfromm/subscriptions","organizations_url":"https://api.github.com/users/jwfromm/orgs","repos_url":"https://api.github.com/users/jwfromm/repos","events_url":"https://api.github.com/users/jwfromm/events{/privacy}","received_events_url":"https://api.github.com/users/jwfromm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-24T16:29:45Z","updated_at":"2020-09-24T16:29:45Z","author_association":"CONTRIBUTOR","body":"@masahi can you review this PR?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/698452511/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/698462944","html_url":"https://github.com/apache/tvm/issues/6548#issuecomment-698462944","issue_url":"https://api.github.com/repos/apache/tvm/issues/6548","id":698462944,"node_id":"MDEyOklzc3VlQ29tbWVudDY5ODQ2Mjk0NA==","user":{"login":"merrymercy","id":15100009,"node_id":"MDQ6VXNlcjE1MTAwMDA5","avatar_url":"https://avatars.githubusercontent.com/u/15100009?v=4","gravatar_id":"","url":"https://api.github.com/users/merrymercy","html_url":"https://github.com/merrymercy","followers_url":"https://api.github.com/users/merrymercy/followers","following_url":"https://api.github.com/users/merrymercy/following{/other_user}","gists_url":"https://api.github.com/users/merrymercy/gists{/gist_id}","starred_url":"https://api.github.com/users/merrymercy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/merrymercy/subscriptions","organizations_url":"https://api.github.com/users/merrymercy/orgs","repos_url":"https://api.github.com/users/merrymercy/repos","events_url":"https://api.github.com/users/merrymercy/events{/privacy}","received_events_url":"https://api.github.com/users/merrymercy/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-24T16:50:09Z","updated_at":"2020-09-24T16:50:46Z","author_association":"MEMBER","body":"I guess it is introduced by #6529.\r\nYou can revert #6529 if the issue is urgent.\r\nI would like to assign this task to @jcf94 ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/698462944/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/698463367","html_url":"https://github.com/apache/tvm/pull/6523#issuecomment-698463367","issue_url":"https://api.github.com/repos/apache/tvm/issues/6523","id":698463367,"node_id":"MDEyOklzc3VlQ29tbWVudDY5ODQ2MzM2Nw==","user":{"login":"jainris","id":56974688,"node_id":"MDQ6VXNlcjU2OTc0Njg4","avatar_url":"https://avatars.githubusercontent.com/u/56974688?v=4","gravatar_id":"","url":"https://api.github.com/users/jainris","html_url":"https://github.com/jainris","followers_url":"https://api.github.com/users/jainris/followers","following_url":"https://api.github.com/users/jainris/following{/other_user}","gists_url":"https://api.github.com/users/jainris/gists{/gist_id}","starred_url":"https://api.github.com/users/jainris/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jainris/subscriptions","organizations_url":"https://api.github.com/users/jainris/orgs","repos_url":"https://api.github.com/users/jainris/repos","events_url":"https://api.github.com/users/jainris/events{/privacy}","received_events_url":"https://api.github.com/users/jainris/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-24T16:51:01Z","updated_at":"2020-09-24T16:51:01Z","author_association":"CONTRIBUTOR","body":"Quantized Transpose Convolution code needs some changes, so bringing `dilate `operator changes independently in #6550.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/698463367/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/698464745","html_url":"https://github.com/apache/tvm/pull/6550#issuecomment-698464745","issue_url":"https://api.github.com/repos/apache/tvm/issues/6550","id":698464745,"node_id":"MDEyOklzc3VlQ29tbWVudDY5ODQ2NDc0NQ==","user":{"login":"jainris","id":56974688,"node_id":"MDQ6VXNlcjU2OTc0Njg4","avatar_url":"https://avatars.githubusercontent.com/u/56974688?v=4","gravatar_id":"","url":"https://api.github.com/users/jainris","html_url":"https://github.com/jainris","followers_url":"https://api.github.com/users/jainris/followers","following_url":"https://api.github.com/users/jainris/following{/other_user}","gists_url":"https://api.github.com/users/jainris/gists{/gist_id}","starred_url":"https://api.github.com/users/jainris/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jainris/subscriptions","organizations_url":"https://api.github.com/users/jainris/orgs","repos_url":"https://api.github.com/users/jainris/repos","events_url":"https://api.github.com/users/jainris/events{/privacy}","received_events_url":"https://api.github.com/users/jainris/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-24T16:53:42Z","updated_at":"2020-09-24T16:53:42Z","author_association":"CONTRIBUTOR","body":"cc @anijain2305 @mbaret @u99127 @FrozenGene @tqchen","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/698464745/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/698480657","html_url":"https://github.com/apache/tvm/pull/6545#issuecomment-698480657","issue_url":"https://api.github.com/repos/apache/tvm/issues/6545","id":698480657,"node_id":"MDEyOklzc3VlQ29tbWVudDY5ODQ4MDY1Nw==","user":{"login":"mwillsey","id":1783756,"node_id":"MDQ6VXNlcjE3ODM3NTY=","avatar_url":"https://avatars.githubusercontent.com/u/1783756?v=4","gravatar_id":"","url":"https://api.github.com/users/mwillsey","html_url":"https://github.com/mwillsey","followers_url":"https://api.github.com/users/mwillsey/followers","following_url":"https://api.github.com/users/mwillsey/following{/other_user}","gists_url":"https://api.github.com/users/mwillsey/gists{/gist_id}","starred_url":"https://api.github.com/users/mwillsey/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mwillsey/subscriptions","organizations_url":"https://api.github.com/users/mwillsey/orgs","repos_url":"https://api.github.com/users/mwillsey/repos","events_url":"https://api.github.com/users/mwillsey/events{/privacy}","received_events_url":"https://api.github.com/users/mwillsey/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-24T17:25:02Z","updated_at":"2020-09-24T17:25:42Z","author_association":"CONTRIBUTOR","body":"@intheworld could you say a little more about why this change is needed? I think the point of Context is that it's a \"safer\" Rust version of DLContext. As long as you check that `device_id` is positive, the conversion should be fine (typed conversion, not just casting). I'd rather have usize (or u32) on the Rust side, since you don't have to worry about negative device ids","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/698480657/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/698497113","html_url":"https://github.com/apache/tvm/pull/6550#issuecomment-698497113","issue_url":"https://api.github.com/repos/apache/tvm/issues/6550","id":698497113,"node_id":"MDEyOklzc3VlQ29tbWVudDY5ODQ5NzExMw==","user":{"login":"anijain2305","id":13822661,"node_id":"MDQ6VXNlcjEzODIyNjYx","avatar_url":"https://avatars.githubusercontent.com/u/13822661?v=4","gravatar_id":"","url":"https://api.github.com/users/anijain2305","html_url":"https://github.com/anijain2305","followers_url":"https://api.github.com/users/anijain2305/followers","following_url":"https://api.github.com/users/anijain2305/following{/other_user}","gists_url":"https://api.github.com/users/anijain2305/gists{/gist_id}","starred_url":"https://api.github.com/users/anijain2305/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/anijain2305/subscriptions","organizations_url":"https://api.github.com/users/anijain2305/orgs","repos_url":"https://api.github.com/users/anijain2305/repos","events_url":"https://api.github.com/users/anijain2305/events{/privacy}","received_events_url":"https://api.github.com/users/anijain2305/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-24T17:57:53Z","updated_at":"2020-09-24T17:57:53Z","author_association":"CONTRIBUTOR","body":"@siju-samuel Can you PTAL?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/698497113/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/698537152","html_url":"https://github.com/apache/tvm/issues/1673#issuecomment-698537152","issue_url":"https://api.github.com/repos/apache/tvm/issues/1673","id":698537152,"node_id":"MDEyOklzc3VlQ29tbWVudDY5ODUzNzE1Mg==","user":{"login":"jroesch","id":696509,"node_id":"MDQ6VXNlcjY5NjUwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/696509?v=4","gravatar_id":"","url":"https://api.github.com/users/jroesch","html_url":"https://github.com/jroesch","followers_url":"https://api.github.com/users/jroesch/followers","following_url":"https://api.github.com/users/jroesch/following{/other_user}","gists_url":"https://api.github.com/users/jroesch/gists{/gist_id}","starred_url":"https://api.github.com/users/jroesch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jroesch/subscriptions","organizations_url":"https://api.github.com/users/jroesch/orgs","repos_url":"https://api.github.com/users/jroesch/repos","events_url":"https://api.github.com/users/jroesch/events{/privacy}","received_events_url":"https://api.github.com/users/jroesch/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-24T19:16:34Z","updated_at":"2020-09-24T19:16:34Z","author_association":"MEMBER","body":"@calvin886 ONNX was very different then it is today back in 2017 when we began work on Relay. Furthermore ONNX is designed as an interchange format and has very little of the utilities that come with compiler IRs, these days Relay has many more extensions then ONNX including closures, data structures, traditional control flow (not pseudo ops), JSON serialization, a textual format, a human readable and parseable interchange, deep TVM support, strong Python support and frameworks for doing program analysis and pattern matching. We also have made several different design decisions such as unifying functions and graphs, unifying parameters and inputs, and so on. \r\n\r\nYou can read the various Relay papers to learn more about the specific advantages. ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/698537152/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/698637390","html_url":"https://github.com/apache/tvm/pull/6553#issuecomment-698637390","issue_url":"https://api.github.com/repos/apache/tvm/issues/6553","id":698637390,"node_id":"MDEyOklzc3VlQ29tbWVudDY5ODYzNzM5MA==","user":{"login":"trevor-m","id":12981474,"node_id":"MDQ6VXNlcjEyOTgxNDc0","avatar_url":"https://avatars.githubusercontent.com/u/12981474?v=4","gravatar_id":"","url":"https://api.github.com/users/trevor-m","html_url":"https://github.com/trevor-m","followers_url":"https://api.github.com/users/trevor-m/followers","following_url":"https://api.github.com/users/trevor-m/following{/other_user}","gists_url":"https://api.github.com/users/trevor-m/gists{/gist_id}","starred_url":"https://api.github.com/users/trevor-m/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/trevor-m/subscriptions","organizations_url":"https://api.github.com/users/trevor-m/orgs","repos_url":"https://api.github.com/users/trevor-m/repos","events_url":"https://api.github.com/users/trevor-m/events{/privacy}","received_events_url":"https://api.github.com/users/trevor-m/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-24T23:24:03Z","updated_at":"2020-09-24T23:24:03Z","author_association":"CONTRIBUTOR","body":"@anijain2305 Could you please review? Thanks!","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/698637390/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/698659880","html_url":"https://github.com/apache/tvm/issues/6486#issuecomment-698659880","issue_url":"https://api.github.com/repos/apache/tvm/issues/6486","id":698659880,"node_id":"MDEyOklzc3VlQ29tbWVudDY5ODY1OTg4MA==","user":{"login":"ZihengJiang","id":17693755,"node_id":"MDQ6VXNlcjE3NjkzNzU1","avatar_url":"https://avatars.githubusercontent.com/u/17693755?v=4","gravatar_id":"","url":"https://api.github.com/users/ZihengJiang","html_url":"https://github.com/ZihengJiang","followers_url":"https://api.github.com/users/ZihengJiang/followers","following_url":"https://api.github.com/users/ZihengJiang/following{/other_user}","gists_url":"https://api.github.com/users/ZihengJiang/gists{/gist_id}","starred_url":"https://api.github.com/users/ZihengJiang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ZihengJiang/subscriptions","organizations_url":"https://api.github.com/users/ZihengJiang/orgs","repos_url":"https://api.github.com/users/ZihengJiang/repos","events_url":"https://api.github.com/users/ZihengJiang/events{/privacy}","received_events_url":"https://api.github.com/users/ZihengJiang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-25T00:45:52Z","updated_at":"2020-09-25T20:08:56Z","author_association":"CONTRIBUTOR","body":"# Feature Improvement\r\n\r\n## Accelerator and Microcontroller Support\r\n\r\n- Cleanup legacy verilog code ([#4576](https://github.com/apache/incubator-tvm/pull/4576))\r\n- uTVM support for ARM STM32F746XX boards ([#4274](https://github.com/apache/incubator-tvm/pull/4274))\r\n- Add --runtime=c, remove micro_dev target, enable LLVM backend [#6145](https://github.com/apache/incubator-tvm/pull/6145)\r\n\r\n## Arithmetic Analysis\r\n\r\n- Linear system and equation solver ([#5171](https://github.com/apache/incubator-tvm/pull/5171))\r\n- Inequalities solver [#5618](https://github.com/apache/incubator-tvm/pull/5618)\r\n- Improve IntervalSet's floormod ([#5367](https://github.com/apache/incubator-tvm/pull/5367))\r\n- Remove legacy const pattern functions ([#5387](https://github.com/apache/incubator-tvm/pull/5387))\r\n- Handle likely in IRMutatorWithAnalyzer [#5665](https://github.com/apache/incubator-tvm/pull/5665)\r\n- ExtendedEuclidean merge impl to int_operator [#5625](https://github.com/apache/incubator-tvm/pull/5625)\r\n- Rewrite simplify fix for Vectorized Cooperative Fetching [#5924](https://github.com/apache/incubator-tvm/pull/5924)\r\n\r\n## AutoTVM and Graph Tuner\r\n\r\n- Adding ROCM schedules for TOPI ([#4507](https://github.com/apache/incubator-tvm/pull/4507))\r\n- NHWC conv2d schedule templates for ARM ([#3859](https://github.com/apache/incubator-tvm/pull/3859))\r\n- Use VM compile to extract autotvm tasks [#4328](https://github.com/apache/incubator-tvm/issues/4328)\r\n- Download fallback schedule file if it does not exist [#4671](https://github.com/apache/incubator-tvm/issues/4671)\r\n- Ignore error when removing tmpdir [#4781](https://github.com/apache/incubator-tvm/issues/4781)\r\n- Fix a bug in generating the search space [#4779](https://github.com/apache/incubator-tvm/issues/4779)\r\n- Minor bug fixes in AutoTVM for QNN graphs [#4797](https://github.com/apache/incubator-tvm/issues/4797)\r\n- Fix autotvm customized template [#5034](https://github.com/apache/incubator-tvm/pull/5034)\r\n- Add opt out operator for has_multiple_inputs for graph tuner [#5000](https://github.com/apache/incubator-tvm/pull/5000)\r\n- Customize SI prefix in logging ([#5411](https://github.com/apache/incubator-tvm/pull/5411))\r\n- Update XGBoost verbosity option [#5649](https://github.com/apache/incubator-tvm/pull/5649)\r\n- Support range in index based tuners [#4870](https://github.com/apache/incubator-tvm/pull/4870)\r\n- Enable random fill and CPU cache flush for AutoTVM and Ansor (#6391)\r\n- Auto-scheduler tutorial for GPU and necessary refactor/fix (#6512)\r\n\r\n## BYOC\r\n\r\n- [BYOC] Bind constant tuples in graph partitioner ([#5476](https://github.com/apache/incubator-tvm/pull/5476))\r\n- [BYOC] Add support for composite functions in BYOC ([#5261](https://github.com/apache/incubator-tvm/pull/5261))\r\n- [BYOC] Register pattern tables from external codegens ([#5262](https://github.com/apache/incubator-tvm/pull/5262))\r\n- [BYOC] Enhance partitioning and external codegen ([#5310](https://github.com/apache/incubator-tvm/pull/5310))\r\n- [BYOC] Refine AnnotateTarget and MergeCompilerRegion Passes ([#5277](https://github.com/apache/incubator-tvm/pull/5277))\r\n- [BYOC] Use Non-Recursive Visitor/Mutator ([#5410](https://github.com/apache/incubator-tvm/pull/5410))\r\n- [BYOC] Refine DNNL Codegen ([#5288](https://github.com/apache/incubator-tvm/pull/5288))\r\n- [BYOC] Add example of Composite + Annotate for DNNL fused op ([#5272](https://github.com/apache/incubator-tvm/pull/5272))\r\n- [BYOC] Prevent duplicate outputs in subgraph Tuple ([#5320](https://github.com/apache/incubator-tvm/pull/5320))\r\n- [BYOC][ETHOSN] Introduce further operator support (#6355)\r\n- [BYOC][JSON] Support input nodes with multiple entries (#6368)\r\n- [BYOC][ACL] Add maximum support for float32 (#6506)\r\n\r\n## Codegen\r\n\r\n- Intrinsic dispatching with OCML instead of LLVM for ROCm ([#4499](https://github.com/apache/incubator-tvm/pull/4499))\r\n- Make target codegen take IRModule and PrimFunc. [#5107](https://github.com/apache/incubator-tvm/pull/5107)\r\n- Enhance CUDA codegen for SelectNode [#4983](https://github.com/apache/incubator-tvm/pull/4983)\r\n- Vectorization for intrinsics [#5101](https://github.com/apache/incubator-tvm/pull/5101)\r\n- [LLVM] Do not use x86_vcvtph2ps_256 intrinsic with LLVM 11+ ([#5267](https://github.com/apache/incubator-tvm/pull/5267))\r\n- [LLVM] Use llvm::ElementCount with LLVM 11+ when creating vectors ([#5265](https://github.com/apache/incubator-tvm/pull/5265))\r\n- [LLVM] Use llvm::FunctionCallee in IRBuilder::CreateCall with LLVM 11+ ([#5338](https://github.com/apache/incubator-tvm/pull/5338))\r\n- [LLVM] Include Support/Host.h for declaration of getDefaultTargetTriple ([#5268](https://github.com/apache/incubator-tvm/pull/5268))\r\n- [LLVM] Replace calls to Type::getVectorNumElements ([#5398](https://github.com/apache/incubator-tvm/pull/5398))\r\n- [LLVM] Use ArrayRef in calls to CreateShuffleVector ([#5399](https://github.com/apache/incubator-tvm/pull/5399))\r\n- [LLVM] Use llvm::Align with LLVM 11+ to avoid warnings ([#5264](https://github.com/apache/incubator-tvm/pull/5264))\r\n- [CodeGen] Cleanup generated code (#5424)\r\n- Rename target_id => target_kind [#6199](https://github.com/apache/incubator-tvm/pull/6199)\r\n- 64-bit RPi4b target [#6211](https://github.com/apache/incubator-tvm/pull/6211)\r\n- Creating Target from JSON-like Configuration [#6218](https://github.com/apache/incubator-tvm/pull/6218)\r\n- Add python binding to new JSON target construction [#6315](https://github.com/apache/incubator-tvm/pull/6315)\r\n- Use target class in all codegens [#6347](https://github.com/apache/incubator-tvm/pull/6347)\r\n- Initial support for Hexagon codegen [#6261](https://github.com/apache/incubator-tvm/pull/6261)\r\n- Add --runtime=c, remove micro_dev target, enable LLVM backend [#6145](https://github.com/apache/incubator-tvm/pull/6145)\r\n- Add tvm::support::hexdump() debug utility [#6154](https://github.com/apache/incubator-tvm/pull/6154)\r\n- Adding AMD codegen unit tests ([#4509](https://github.com/apache/incubator-tvm/pull/4509))\r\n- Support cuda tensorcore subbyte int data type in auto tensorcore [#4546](https://github.com/apache/incubator-tvm/pull/4546)\r\n- Handle empty LLVMModule in GetFunction [#5146](https://github.com/apache/incubator-tvm/pull/5146)\r\n- Support int4/int8 conv2d tensor core with HWNC layout [#6121](https://github.com/apache/incubator-tvm/pull/6121)\r\n\r\n## Dynamism Support\r\n\r\n- Add shape function for zero, zeros_like, ones, ones_like ([#4448](https://github.com/apache/incubator-tvm/pull/4448)), tile ([#4441](https://github.com/apache/incubator-tvm/pull/4441/files))\r\n- Support symbolic newshape for Reshape #5429\r\n- Support symbolic TopK, Ones, Zeros and Full [#5459](https://github.com/apache/incubator-tvm/pull/5459)\r\n- Add shape_of instruction [#5855](https://github.com/apache/incubator-tvm/pull/5855)\r\n- symbolic max_output_size [#5844](https://github.com/apache/incubator-tvm/pull/5844)\r\n- Dynamic TopK Op [#6008](https://github.com/apache/incubator-tvm/pull/6008)\r\n- Dynamic broadcast_to, zeros, ones [#6007](https://github.com/apache/incubator-tvm/pull/6007)\r\n- Add dynamic reshape grad [#6080](https://github.com/apache/incubator-tvm/pull/6080)\r\n- Keep fixed dim when unifying dynamic shape [#5795](https://github.com/apache/incubator-tvm/pull/5795)\r\n- OneHot operation [#6209](https://github.com/apache/incubator-tvm/pull/6209)\r\n- Add Dynamic Resize Op [#6198](https://github.com/apache/incubator-tvm/pull/6198)\r\n- Dynamic full operator [#6260](https://github.com/apache/incubator-tvm/pull/6260)\r\n- Dynamic upsampling relay op [#6273](https://github.com/apache/incubator-tvm/pull/6273)\r\n- Dynamic Tile Op [#5983](https://github.com/apache/incubator-tvm/pull/5983)\r\n\r\n## Frontend and User Interface\r\n\r\n- TFLite parser support for transpose_conv ([#4440](https://github.com/apache/incubator-tvm/pull/4440)), unpack ([#4447](https://github.com/apache/incubator-tvm/pull/4447))\r\n- LLDB pretty printers for relay ([#4453](https://github.com/apache/incubator-tvm/pull/4453))\r\n- ONNX to Relay converter op support: expand op ([#4483](https://github.com/apache/incubator-tvm/pull/4483))\r\n- ONNX auto_pad in conv and convtranspose ([#4563](https://github.com/apache/incubator-tvm/pull/4563/))\r\n- TF to Relay converter op support: bilinear and neighbour implementation refactor ([#4504](https://github.com/apache/incubator-tvm/pull/4504)), max_pool3d ([#4551](https://github.com/apache/incubator-tvm/pull/4551)), conv2d_transpose with “same” padding support for larger than 1x1 kernels ([#4484](https://github.com/apache/incubator-tvm/pull/4484))\r\n- Remove unnecessary cast of constants in ONNX converter ([#4573](https://github.com/apache/incubator-tvm/pull/4573))\r\n- Add support for tf.Keras networks in Relay Keras frontend [#4630](https://github.com/apache/incubator-tvm/issues/4630)\r\n- Add conv3d [#4604](https://github.com/apache/incubator-tvm/issues/4604)\r\n- Fix incorrect calculations in tf SLICE [#4518](https://github.com/apache/incubator-tvm/issues/4518)\r\n- Dynamically calculate input_stats of any fake_quant range [#4789](https://github.com/apache/incubator-tvm/pull/4789)\r\n- LSTM Support [#4825](https://github.com/apache/incubator-tvm/pull/4825)\r\n- Add MIRROR_PAD operator [#4822](https://github.com/apache/incubator-tvm/pull/4822)\r\n- use qnn helper function in softmax [#4840](https://github.com/apache/incubator-tvm/pull/4840)\r\n- Add Resize op converter [#4838](https://github.com/apache/incubator-tvm/pull/4838)\r\n- Add support for TFLite_Detection_PostProcess [#4543](https://github.com/apache/incubator-tvm/pull/4543)\r\n- Fix tests for tflite unary elemwise operations [#4913](https://github.com/apache/incubator-tvm/pull/4913)\r\n- GaussianDropout/Noise parsing support [#4928](https://github.com/apache/incubator-tvm/pull/4928)\r\n- Add parser support for 'square' operator [#4915](https://github.com/apache/incubator-tvm/pull/4915)\r\n- make_loss operator support [#4930](https://github.com/apache/incubator-tvm/pull/4930)\r\n- Add parser support for l2_normalization [#4966](https://github.com/apache/incubator-tvm/pull/4966)\r\n- ReadVariableOp operator support [#4952](https://github.com/apache/incubator-tvm/pull/4952)\r\n- Check graph inputs match expected [#4992](https://github.com/apache/incubator-tvm/pull/4992)\r\n- support multiply outputs [#4980](https://github.com/apache/incubator-tvm/pull/4980)\r\n- TFLite: Using real image for QNN testing. [#4816](https://github.com/apache/incubator-tvm/pull/4816)\r\n- TFLite: FLOOR_MOD & FLOOR_DIV support [#4971](https://github.com/apache/incubator-tvm/pull/4971)\r\n- PyTorch: Upsampling op support and enable registering a user defined op conversion map [#4961](https://github.com/apache/incubator-tvm/pull/4961)\r\n- PyTorch: fix unordered dictionary problem for python version under 3.6 [#4982](https://github.com/apache/incubator-tvm/pull/4982)\r\n- Operator support NonZero [#5073](https://github.com/apache/incubator-tvm/pull/5073)\r\n- Upsampling op support and enable registering a user defined op conversion map [#4961](https://github.com/apache/incubator-tvm/pull/4961)\r\n- Check graph inputs match expected [#4992](https://github.com/apache/incubator-tvm/pull/4992)\r\n- Add support for quantized models via QNN [#4977](https://github.com/apache/incubator-tvm/pull/4977)\r\n- Add initial control flow support [#4964](https://github.com/apache/incubator-tvm/pull/4964)\r\n- Remove FP32 piggy back and use QNN add/mul/concatenate [#5061](https://github.com/apache/incubator-tvm/pull/5061)\r\n- Add missing upcast to uint8 avg_pool conversion [#5089](https://github.com/apache/incubator-tvm/pull/5089)\r\n- Add initial 3D op support and test on Resnet 3D [#5075](https://github.com/apache/incubator-tvm/pull/5075)\r\n- Fix conv2d conversion for group conv (group > 1 but != in channels) [#5132](https://github.com/apache/incubator-tvm/pull/5132)\r\n- Add support for max_pool1d [#5142](https://github.com/apache/incubator-tvm/pull/5142)\r\n- Add support for split [#5174](https://github.com/apache/incubator-tvm/pull/5174)\r\n- FLOOR_MOD & FLOOR_DIV support [#4971](https://github.com/apache/incubator-tvm/pull/4971)\r\n- Activation functions support [#4978](https://github.com/apache/incubator-tvm/pull/4978)\r\n- Round op parsing support added [#5022](https://github.com/apache/incubator-tvm/pull/5022)\r\n- DepthToSpace and SpaceToDepth support [#5041](https://github.com/apache/incubator-tvm/pull/5041)\r\n- TOP_K op parser support [#5051](https://github.com/apache/incubator-tvm/pull/5051)\r\n- ReadVariableOp operator support [#4952](https://github.com/apache/incubator-tvm/pull/4952)\r\n- Support multiply outputs [#4980](https://github.com/apache/incubator-tvm/pull/4980)\r\n- Reduce_any op parsing support [#4926](https://github.com/apache/incubator-tvm/pull/4926)\r\n- TensorFlow Parser Control Flow Enhancement [#5020](https://github.com/apache/incubator-tvm/pull/5020)\r\n- TensorFlow Frontend support with shared params [#5042](https://github.com/apache/incubator-tvm/pull/5042)\r\n- Support for AddV2 in Relay Tensorflow frontend converter. [#5046](https://github.com/apache/incubator-tvm/pull/5046)\r\n- conv3d frontend operator support [#5080](https://github.com/apache/incubator-tvm/pull/5080)\r\n- Max_pool3d and Averagepool3d operator support [#5085](https://github.com/apache/incubator-tvm/pull/5085)\r\n- Support for Atan/Atan2 in Relay Tensorflow frontend converter. [#5104](https://github.com/apache/incubator-tvm/pull/5104)\r\n- Use leaky by default for LeakyReLU [#5192](https://github.com/apache/incubator-tvm/pull/5192)\r\n- Conv3D ONNX support and conv3D_ncdhw x86 schedules [#4949](https://github.com/apache/incubator-tvm/pull/4949)\r\n- Add support for FusedBatchNormV3 [#5065](https://github.com/apache/incubator-tvm/pull/5065)\r\n- Activations for pytorch [#5194](https://github.com/apache/incubator-tvm/pull/5194)\r\n- Dropouts And InstanceNorm support added [#5203](https://github.com/apache/incubator-tvm/pull/5203)\r\n- [Frontend] Asymmetric padding of convolution support ([#4803](https://github.com/apache/incubator-tvm/pull/4803))\r\n- [ONNX]Pool3d & upsample3d op support ([#5135](https://github.com/apache/incubator-tvm/pull/5135))\r\n- Add TopK to ONNX Frontend ([#5441](https://github.com/apache/incubator-tvm/pull/5441))\r\n- Add RoiAlign to Onnx frontend ([#5454](https://github.com/apache/incubator-tvm/pull/5454))\r\n- [PYTORCH]AvgPool3d, MaxPool3d and Squeeze op support ([#5220](https://github.com/apache/incubator-tvm/pull/5220))\r\n- [PYTORCH]celu, gelu, selu activations ([#5263](https://github.com/apache/incubator-tvm/pull/5263))\r\n- [Pytorch]layernorm bug fix and testcase updated ([#5257](https://github.com/apache/incubator-tvm/pull/5257))\r\n- [PYTORCH]LayerNorm support added ([#5249](https://github.com/apache/incubator-tvm/pull/5249))\r\n- [RELAY-OP][PYTORCH]GroupNorm op support added ([#5358](https://github.com/apache/incubator-tvm/pull/5358))\r\n- [TOPI][PYTORCH]Logical & Bitwise operator support ([#5341](https://github.com/apache/incubator-tvm/pull/5341))\r\n- [PYTORCH]Tensor creation ops support ([#5347](https://github.com/apache/incubator-tvm/pull/5347))\r\n- [RELAY][PYTORCH]cosh,sinh,log2,log10,log1p op support ([#5395](https://github.com/apache/incubator-tvm/pull/5395))\r\n- [PYTORCH]Rsub, Embedded, OneHot ops support ([#5434](https://github.com/apache/incubator-tvm/pull/5434))\r\n- [PYTORCH]Abs, Arange, Softplus ops ([#5295](https://github.com/apache/incubator-tvm/pull/5295))\r\n- [RELAY][PYTORCH]isNan, isinf, isfinite, ceil, clamp, round ops ([#5316](https://github.com/apache/incubator-tvm/pull/5316))\r\n- [PYTORCH]Activations for pytorch ([#5194](https://github.com/apache/incubator-tvm/pull/5194))\r\n- [PYTORCH]Repeat, Reciprocal & Reshape Op support ([#5280](https://github.com/apache/incubator-tvm/pull/5280))\r\n- [PYTORCH]Reduce_ops support added ([#5308](https://github.com/apache/incubator-tvm/pull/5308))\r\n- [PYTORCH]Take, Topk op support ([#5332](https://github.com/apache/incubator-tvm/pull/5332))\r\n- [PYTORCH]Dropouts And InstanceNorm support added ([#5203](https://github.com/apache/incubator-tvm/pull/5203))\r\n- [PYTORCH]Unary Ops frontend support. ([#5378](https://github.com/apache/incubator-tvm/pull/5378))\r\n- [Torch] Support Python list, more realistic recurrent networks ([#5306](https://github.com/apache/incubator-tvm/pull/5306))\r\n- [PYTORCH]where, addcdiv, addcmul op support ([#5383](https://github.com/apache/incubator-tvm/pull/5383))\r\n- [Torch] Add support for split ([#5174](https://github.com/apache/incubator-tvm/pull/5174))\r\n- [Frontend][Torch] Fix up graph input handling ([#5204](https://github.com/apache/incubator-tvm/pull/5204))\r\n- [FRONTEND][TFLITE]Logical not op support ([#5475](https://github.com/apache/incubator-tvm/pull/5475))\r\n- [TFLITE]Hard Swish & MobilnetV3 model testing ([#5239](https://github.com/apache/incubator-tvm/pull/5239))\r\n- [FRONTEND][TFLITE]Gather, StridedSlice op support added ([#4788](https://github.com/apache/incubator-tvm/pull/4788))\r\n- [TFLITE] Match TFLite shape for SSD custom op ([#5473](https://github.com/apache/incubator-tvm/pull/5473))\r\n- Factor out import of common tflite.Operator in tflite frontend. ([#5355](https://github.com/apache/incubator-tvm/pull/5355))\r\n- [Frontend][TFLite] support for FILL and SPLIT_V operators ([#5330](https://github.com/apache/incubator-tvm/pull/5330))\r\n- [Frontend][TFLite] L2_POOL_2D operator ([#5452](https://github.com/apache/incubator-tvm/pull/5452))\r\n- [TFLite] Add config option to specify FlatBuffers location ([#5425](https://github.com/apache/incubator-tvm/pull/5425))\r\n- [FRONTEND][TFLITE]Logical not op support ([#5475](https://github.com/apache/incubator-tvm/pull/5475))\r\n- [TENSORFLOW]reduce ops updated ([#5180](https://github.com/apache/incubator-tvm/pull/5180))\r\n- [FRONTEND][TENSORFLOW] Fix gather_nd indices ([#5279](https://github.com/apache/incubator-tvm/pull/5279))\r\n- [Frontend][TensorFlow]Improve TensorFlow Static Shape Tensor Array ([#5243](https://github.com/apache/incubator-tvm/pull/5243))\r\n- [KERAS]Minimum & AlphaDropout op support ([#5380](https://github.com/apache/incubator-tvm/pull/5380))\r\n- [KERAS]Embedding layer ([#5444](https://github.com/apache/incubator-tvm/pull/5444))\r\n- [FRONTEND][KERAS]Max_pool3d and Averagepool3d operator support ([#5085](https://github.com/apache/incubator-tvm/pull/5085))\r\n- [RELAY][FRONTEND][CAFFE2] add Mul and ConvTranspose operator ([#5302](https://github.com/apache/incubator-tvm/pull/5302))\r\n- [MXNET]DepthToSpace & SpaceToDepth Operator ([#5408](https://github.com/apache/incubator-tvm/pull/5408))\r\n- [MXNET]broadcast and logical op support ([#5461](https://github.com/apache/incubator-tvm/pull/5461))\r\n- [FRONTEND][MXNET] Use leaky by default for LeakyReLU ([#5192](https://github.com/apache/incubator-tvm/pull/5192))\r\n- [FRONTEND][MXNET] support elemwise logic ops ([#5361](https://github.com/apache/incubator-tvm/pull/5361))\r\n- [Frontend|MXNet] SwapAxis operator support ([#5246](https://github.com/apache/incubator-tvm/pull/5246))\r\n- [RELAY] Move frontend utils (#5345)\r\n- [Fontend][Pytorch] Fix translation of transpose when axis argument is as a list (#5451)\r\n- LpPool Support added [#5696](https://github.com/apache/incubator-tvm/pull/5696)\r\n- Skip ADD inside Gemm op when vector is zero [#5697](https://github.com/apache/incubator-tvm/pull/5697)\r\n- ReduceL1, ReduceL2, ReduceSumSquare, ReduceLogSum ops added [#5721](https://github.com/apache/incubator-tvm/pull/5721)\r\n- MaxRoiPool, Mod & Xor op support added [#5729](https://github.com/apache/incubator-tvm/pull/5729)\r\n- Skip multiply with 1.0f constant for GEMM import [#5800](https://github.com/apache/incubator-tvm/pull/5800)\r\n- StatefulPartitionedCall/PartitionedCall Ops support added [#5617](https://github.com/apache/incubator-tvm/pull/5617)\r\n- Don't add cast for batch norm when type isn't changing [#5731](https://github.com/apache/incubator-tvm/pull/5731)\r\n- Conv3d Transpose OP added [#5775](https://github.com/apache/incubator-tvm/pull/5775)\r\n- expand bug fix [#5576](https://github.com/apache/incubator-tvm/pull/5576)\r\n- Support max_pool2d_with_indices [#5549](https://github.com/apache/incubator-tvm/pull/5549)\r\n- Add prim::device op [#5584](https://github.com/apache/incubator-tvm/pull/5584)\r\n- ImplicitTensorToNum support added [#5603](https://github.com/apache/incubator-tvm/pull/5603)\r\n- Matmul fix for batch_matmul [#5604](https://github.com/apache/incubator-tvm/pull/5604)\r\n- ReflectionPad2d op [#5624](https://github.com/apache/incubator-tvm/pull/5624)\r\n- Padding op support [#5638](https://github.com/apache/incubator-tvm/pull/5638)\r\n- Minor bug fixes [#5683](https://github.com/apache/incubator-tvm/pull/5683)\r\n- floor_divide support for squeezenet [#5702](https://github.com/apache/incubator-tvm/pull/5702)\r\n- ReplicationPad support added [#5708](https://github.com/apache/incubator-tvm/pull/5708)\r\n- aten::norm support added [#5776](https://github.com/apache/incubator-tvm/pull/5776)\r\n- broadcast and logical op support [#5461](https://github.com/apache/incubator-tvm/pull/5461)\r\n- MaxPool3d and AvgPool3d Ops support added [#5614](https://github.com/apache/incubator-tvm/pull/5614)\r\n- Softmin, trunc op support added [#5715](https://github.com/apache/incubator-tvm/pull/5715)\r\n- conv3d and conv3d_transpose addedx [#5814](https://github.com/apache/incubator-tvm/pull/5814)\r\n- Model importer to be compatible with tflite 2.1.0 [#5497](https://github.com/apache/incubator-tvm/pull/5497)\r\n- Nit: Function names made consistent [#5515](https://github.com/apache/incubator-tvm/pull/5515)\r\n- Select op support for tflite frontend [#5486](https://github.com/apache/incubator-tvm/pull/5486)\r\n- GATHER_ND [#5508](https://github.com/apache/incubator-tvm/pull/5508)\r\n- Quantize & Dequantize op [#5394](https://github.com/apache/incubator-tvm/pull/5394)\r\n- Fully connected op conversion made in sync with TFLite [#5510](https://github.com/apache/incubator-tvm/pull/5510)\r\n- ADD_N operator [#5474](https://github.com/apache/incubator-tvm/pull/5474)\r\n- onnx, mxnet, pytorch mathops added [#5561](https://github.com/apache/incubator-tvm/pull/5561)\r\n- abs, round, reciprocal, sign, softsign, hard_sigmoid ops support [#5587](https://github.com/apache/incubator-tvm/pull/5587)\r\n- Gather nd bug fix for one dim support in tensorflow [#5588](https://github.com/apache/incubator-tvm/pull/5588)\r\n- Add parser support for shape and range [#5329](https://github.com/apache/incubator-tvm/pull/5329)\r\n- Darknet support batch size for yolo [#5688](https://github.com/apache/incubator-tvm/pull/5688)\r\n- Improve Control Flow and TensorArray [#5699](https://github.com/apache/incubator-tvm/pull/5699)\r\n- MXNet: Softmin, trunc op support added [#5715](https://github.com/apache/incubator-tvm/pull/5715)\r\n- MXNet: conv3d and conv3d_transpose addedx [#5814](https://github.com/apache/incubator-tvm/pull/5814)\r\n- MXNet: Add parser for contrib.box_decode [#5967](https://github.com/apache/incubator-tvm/pull/5967)\r\n- Onnx: ReduceL1, ReduceL2, ReduceSumSquare, ReduceLogSum ops added [#5721](https://github.com/apache/incubator-tvm/pull/5721)\r\n- Onnx: MaxRoiPool, Mod & Xor op support added [#5729](https://github.com/apache/incubator-tvm/pull/5729)\r\n- Onnx: Skip multiply with 1.0f constant for GEMM import [#5800](https://github.com/apache/incubator-tvm/pull/5800)\r\n- Onnx: Fix an issue with #5755 and add Batch norm unit tests. [#5845](https://github.com/apache/incubator-tvm/pull/5845)\r\n- TensorFlow: StatefulPartitionedCall/PartitionedCall Ops support added [#5617](https://github.com/apache/incubator-tvm/pull/5617)\r\n- TensorFlow: Don’t add cast for batch norm when type isn’t changing [#5731](https://github.com/apache/incubator-tvm/pull/5731)\r\n- TensorFlow: Conv3d Transpose OP added [#5775](https://github.com/apache/incubator-tvm/pull/5775)\r\n- Add parser support for shape and range [#5329](https://github.com/apache/incubator-tvm/pull/5329)\r\n- Darknet support batch size for yolo [#5688](https://github.com/apache/incubator-tvm/pull/5688)\r\n- Improve Control Flow and TensorArray [#5699](https://github.com/apache/incubator-tvm/pull/5699)\r\n- Improve TF Parser to keep output nodes for saved_model [#5794](https://github.com/apache/incubator-tvm/pull/5794)\r\n- Add parser support for relu6, leaky_relu, relu_n1_to_1, log_softmax [#4805](https://github.com/apache/incubator-tvm/pull/4805)\r\n- Fix TF Dynamic input shape [#5825](https://github.com/apache/incubator-tvm/pull/5825)\r\n- Support a few contrib ops in mxnet [#5819](https://github.com/apache/incubator-tvm/pull/5819)\r\n- Improve TF Parser to keep output nodes for saved_model [#5794](https://github.com/apache/incubator-tvm/pull/5794)\r\n- Add parser support for relu6, leaky_relu, relu_n1_to_1, log_softmax [#4805](https://github.com/apache/incubator-tvm/pull/4805)\r\n- Check all unsupported ops before raising an exception [#5929](https://github.com/apache/incubator-tvm/pull/5929)\r\n- Add Pytorch advanced indexing [#6318](https://github.com/apache/incubator-tvm/pull/6318)\r\n- Support index_select [#6295](https://github.com/apache/incubator-tvm/pull/6295)\r\n- Fix cast to long [#6301](https://github.com/apache/incubator-tvm/pull/6301)\r\n- Fix dtype handling for modules with integer parameters [#6311](https://github.com/apache/incubator-tvm/pull/6311)\r\n- pytorch frontend support conv1d [#6203](https://github.com/apache/incubator-tvm/pull/6203)\r\n- Add cast to double, fix flatten conversion [#6357](https://github.com/apache/incubator-tvm/pull/6357)\r\n- Fix aten::max and aten::min conversion [#6372](https://github.com/apache/incubator-tvm/pull/6372)\r\n- Match pytorch 1.6 googlenet pretrained model (#6201) [#6212](https://github.com/apache/incubator-tvm/pull/6212)Add unbiased variance op and corresponding support in pytorch frontend [#6232](https://github.com/apache/incubator-tvm/pull/6232)\r\n- Implemented PADV2 Operator for TFLite and added support for constant values in PAD. [#6167](https://github.com/apache/incubator-tvm/pull/6167)\r\n- Implemented ONE_HOT Operator for TFLite. [#6223](https://github.com/apache/incubator-tvm/pull/6223)\r\n- Implemented EXPAND_DIMS Operator for TFLite. [#6243](https://github.com/apache/incubator-tvm/pull/6243)\r\n- Implemented REVERSE_V2 Operator for TFLite. [#6304](https://github.com/apache/incubator-tvm/pull/6304)\r\n- Implemented MATRIX_SET_DIAG Operator for Relay/TOPI and TFLite Frontend. [#6303](https://github.com/apache/incubator-tvm/pull/6303)\r\n- RESHAPE with dynamic shape arg in TFLite frontend [#6208](https://github.com/apache/incubator-tvm/pull/6208)\r\n- Constant input attr added to fully connected operation in TFLite frontend [#6228](https://github.com/apache/incubator-tvm/pull/6228)\r\n- Gather operation with indices as tensor expr in TFLite frontend [#6168](https://github.com/apache/incubator-tvm/pull/6168)\r\n- Added support for tflite quantized maximum and minimum [#6018](https://github.com/apache/incubator-tvm/pull/6018)\r\n- Unary ops support added in frontend [#6196](https://github.com/apache/incubator-tvm/pull/6196)\r\n- Introduce caffe frontend for tvm [#6206](https://github.com/apache/incubator-tvm/pull/6206)\r\n- Keras softmax and prelu fix under NHWC [#6278](https://github.com/apache/incubator-tvm/pull/6278)\r\n- add support for MXNET numpy operators [#6054](https://github.com/apache/incubator-tvm/pull/6054)\r\n- Refine tensorflow frontend 1.x & 2.x compatibility [#6240](https://github.com/apache/incubator-tvm/pull/6240)\r\n- Reduceops support added to frontend [#6252](https://github.com/apache/incubator-tvm/pull/6252)\r\n- Update precision in the ONNX strided_slice, update precision of ToScalar [#6272](https://github.com/apache/incubator-tvm/pull/6272)\r\n- NHWC import support. [#4899](https://github.com/apache/incubator-tvm/pull/4899)\r\n- Refine tensorflow frontend 1.x & 2.x compatibility [#6240](https://github.com/apache/incubator-tvm/pull/6240)\r\n- Fix node indices attribute error for tensorflow 2.3 [#6288](https://github.com/apache/incubator-tvm/pull/6288)\r\n- Support NMSv4 [#6085](https://github.com/apache/incubator-tvm/pull/6085)\r\n- Support for PyTorch Non-Maximum Suppression [#6314](https://github.com/apache/incubator-tvm/pull/6314)\r\n- ReplicationPad support added [#5708](https://github.com/apache/incubator-tvm/pull/5708)\r\n- MXNet pre-quantized BERT [#6039](https://github.com/apache/incubator-tvm/pull/6039)\r\n- Keep parameter names from PyTorch [#5887](https://github.com/apache/incubator-tvm/pull/5887)\r\n- Refine LSTMBlockCell to support dynamic rnn [#5963](https://github.com/apache/incubator-tvm/pull/5963)\r\n\r\n## Relay\r\n\r\n- Add function attributes to IR hash ([#4479](https://github.com/apache/incubator-tvm/pull/4479/files))\r\n- Relay passes lookup overhead optimization ([#4594](https://github.com/apache/incubator-tvm/pull/4594))\r\n- Add half_pixel option to Resize op [#4610](https://github.com/apache/incubator-tvm/issues/4610)\r\n- Skip example json runtime test when config is not set [#4614](https://github.com/apache/incubator-tvm/issues/4614)\r\n- Test tensor_array in vm [#4608](https://github.com/apache/incubator-tvm/issues/4608)\r\n- Improve memory_allocation pass to support multiple i/o dynamic kernels [#4595](https://github.com/apache/incubator-tvm/issues/4595)\r\n- Add unit test for tensor_array_split [#4619](https://github.com/apache/incubator-tvm/issues/4619)\r\n- Add parses support for unary elemwise ops [#4634](https://github.com/apache/incubator-tvm/issues/4634)\r\n- Add parses support for SLICE [#4502](https://github.com/apache/incubator-tvm/issues/4502)\r\n- Added pool autopadding and simplified converters. [#4672](https://github.com/apache/incubator-tvm/issues/4672)\r\n- Fix meaning of conv2d_transpose output_padding parameter [#4318](https://github.com/apache/incubator-tvm/issues/4318)\r\n- Use packed func macro for external codegen [#4710](https://github.com/apache/incubator-tvm/issues/4710)\r\n- Fix _parse_param bug [#4711](https://github.com/apache/incubator-tvm/issues/4711)\r\n- Add constant input support for elemwise ops [#4666](https://github.com/apache/incubator-tvm/issues/4666)\r\n- Add parser support for squared difference [#4652](https://github.com/apache/incubator-tvm/issues/4652)\r\n- Add type check to dense [#4724](https://github.com/apache/incubator-tvm/issues/4724)\r\n- Invoke tvm::build from relay compile_engine and interpreter [#4723](https://github.com/apache/incubator-tvm/issues/4723)\r\n- Broadcast condition, x, and y for Where op [#4774](https://github.com/apache/incubator-tvm/issues/4774)\r\n- Add parser support for relational ops [#4695](https://github.com/apache/incubator-tvm/issues/4695)\r\n- Remove duplicated BindParamByName function in VM compiler [#4793](https://github.com/apache/incubator-tvm/issues/4793)\r\n- Use SimplifyInference for L2 Normalization. [#4795](https://github.com/apache/incubator-tvm/issues/4795)\r\n- Expose vm OptimizeModule to Python [#4800](https://github.com/apache/incubator-tvm/issues/4800)\r\n- Add parser support for logical operators [#4642](https://github.com/apache/incubator-tvm/pull/4642)\r\n- Conv2D padding representation [#4787](https://github.com/apache/incubator-tvm/pull/4787)\r\n- Add support for quantized LOGISTIC [#4696](https://github.com/apache/incubator-tvm/pull/4696)\r\n- Fix VM compiler for while loop with free vars [#4889](https://github.com/apache/incubator-tvm/pull/4889)\r\n- Fix bug in re-processing call node in MergeComposite pass [#4879](https://github.com/apache/incubator-tvm/pull/4879)\r\n- Expose FunctionGetAttr to Python [#4905](https://github.com/apache/incubator-tvm/pull/4905)\r\n- Add a PyTorch to Relay Parser [#4497](https://github.com/apache/incubator-tvm/pull/4497)\r\n- Support data types for CSourceModuleCodegen args and output [#4934](https://github.com/apache/incubator-tvm/pull/4934)\r\n- Clean up and refactor PyTorch frontend [#4944](https://github.com/apache/incubator-tvm/pull/4944)\r\n- Relay pass to use fast exp/tanh [#4873](https://github.com/apache/incubator-tvm/pull/4873)\r\n- BatchNorm support with run-time mean and variance calculation [#4990](https://github.com/apache/incubator-tvm/pull/4990)\r\n- Reduce plevel of conv2d winograd implementation on cuda [#4987](https://github.com/apache/incubator-tvm/pull/4987)\r\n- Add operation tan to TVM [#4938](https://github.com/apache/incubator-tvm/pull/4938)\r\n- Outline and inline lifted functions for external codegen [#4996](https://github.com/apache/incubator-tvm/pull/4996)\r\n- Remove primitive attribute from composite function [#5014](https://github.com/apache/incubator-tvm/pull/5014)\r\n- Refactor Relay Python to use new FFI [#5077](https://github.com/apache/incubator-tvm/pull/5077)\r\n- Fix relay node registration after refactor [#5083](https://github.com/apache/incubator-tvm/pull/5083)\r\n- Codegen_c.h should include relay.function [#5093](https://github.com/apache/incubator-tvm/pull/5093)\r\n- Move expr.Function to function.py [#5087](https://github.com/apache/incubator-tvm/pull/5087)\r\n- Propagate constant to subgraphs [#5094](https://github.com/apache/incubator-tvm/pull/5094)\r\n- Adjust strategy plevel to achieve expected performance by default [#5118](https://github.com/apache/incubator-tvm/pull/5118)\r\n- Added a AnnotatedRegion utility class [#5030](https://github.com/apache/incubator-tvm/pull/5030)\r\n- Support TupleGetItem in body of pattern [#5106](https://github.com/apache/incubator-tvm/pull/5106)\r\n- Partition graph codestyle fixes [#5202](https://github.com/apache/incubator-tvm/pull/5202)\r\n- Re-wrote the Graph Partitioner to support multiple outputs [#5143](https://github.com/apache/incubator-tvm/pull/5143)\r\n- Fixes to MergeCompilerRegions [#5195](https://github.com/apache/incubator-tvm/pull/5195)\r\n- Refactor build module to take IRModule [#4988](https://github.com/apache/incubator-tvm/pull/4988)\r\n- Separate analysis and transform passes [#5035](https://github.com/apache/incubator-tvm/pull/5035)\r\n- Relay Node::make to constructor [#5128](https://github.com/apache/incubator-tvm/pull/5128)\r\n- relay::StructuralHash to tvm::StructuralHash [#5166](https://github.com/apache/incubator-tvm/pull/5166)\r\n- Conditions updated to cover better user scenarios [#5043](https://github.com/apache/incubator-tvm/pull/5043)\r\n- Replace UseDefaultCompiler with GetAttr [#5088](https://github.com/apache/incubator-tvm/pull/5088)\r\n- Return empty CSourceModule when no lowered_funcs exists in Relay mod [#4847](https://github.com/apache/incubator-tvm/pull/4847)\r\n- [Runtime][Relay][Cleanup] Clean up for memory pass to enable heterogenous execution support. (#5324)\r\n- [RELAY] Remove re-exports of tvm.transform (#5337)\r\n- [Refactor] Add memoized expr translator for use by backend codegen (#5325)\r\n- Legalize - Use Non-recursive Rewriter. (#5296)\r\n- Add additional check before re-using the cached match [#5552](https://github.com/apache/incubator-tvm/pull/5552)\r\n- Remove kCompiler attr from external functions [#5615](https://github.com/apache/incubator-tvm/pull/5615)\r\n- Pattern Language MergeComposite [#5656](https://github.com/apache/incubator-tvm/pull/5656)\r\n- Support Tuple Output in C/DNNL Codegen [#5701](https://github.com/apache/incubator-tvm/pull/5701)\r\n- Infer types in MergeComposite [#5766](https://github.com/apache/incubator-tvm/pull/5766)\r\n- Convert PatternGrouper to do pre-order, non-recursive analysis [#5653](https://github.com/apache/incubator-tvm/pull/5653)\r\n- Remove constants from partitioned functions [#5663](https://github.com/apache/incubator-tvm/pull/5663)\r\n- Add a check for null function attributes [#5674](https://github.com/apache/incubator-tvm/pull/5674)\r\n- Add ConstantPattern [#5689](https://github.com/apache/incubator-tvm/pull/5689)\r\n- Conditionally Embedding Constants in Partitioned Functions [#5693](https://github.com/apache/incubator-tvm/pull/5693)\r\n- Simplify Pattern API Implementations [#5703](https://github.com/apache/incubator-tvm/pull/5703)\r\n- Add ShapePattern and DataTypePattern [#5760](https://github.com/apache/incubator-tvm/pull/5760)\r\n- Remove unnecessary print [#5642](https://github.com/apache/incubator-tvm/pull/5642)\r\n- Improve Shape Func handling for Tuple inputs [#5467](https://github.com/apache/incubator-tvm/pull/5467)\r\n- Relay updated with String [#5578](https://github.com/apache/incubator-tvm/pull/5578)\r\n- Fix the creation of tuple of tuples in PartitionGraph [#5616](https://github.com/apache/incubator-tvm/pull/5616)\r\n- Preserve type information in Merge Composite [#5640](https://github.com/apache/incubator-tvm/pull/5640)\r\n- Move compiler_begin/end_op to local static objects [#5622](https://github.com/apache/incubator-tvm/pull/5622)\r\n- Fix dataflow_pattern.rewrite() hang if Match in IR [#5680](https://github.com/apache/incubator-tvm/pull/5680)\r\n- Fix segfault in pretty print when ObjectRef is null [#5681](https://github.com/apache/incubator-tvm/pull/5681)\r\n- Move fallback_device to config [#5690](https://github.com/apache/incubator-tvm/pull/5690)\r\n- Replace build_config with PassContext [#5698](https://github.com/apache/incubator-tvm/pull/5698)\r\n- Clear compile engine after task extraction [#5724](https://github.com/apache/incubator-tvm/pull/5724)\r\n- Add storage_order ignore in pooling layer. [#5781](https://github.com/apache/incubator-tvm/pull/5781)\r\n- Tweak cublas/cudnn priority level [#5820](https://github.com/apache/incubator-tvm/pull/5820)\r\n- Skip Unknown Function Symbols [#5888](https://github.com/apache/incubator-tvm/pull/5888)\r\n- Allow every runtime module to handle constants [#5885](https://github.com/apache/incubator-tvm/pull/5885)\r\n- handle Tuple/TupleGetItem in first order gradient [#5946](https://github.com/apache/incubator-tvm/pull/5946)\r\n- Add resnet-3d & Update network definitions for NHWC layout [#5945](https://github.com/apache/incubator-tvm/pull/5945)\r\n- Use TargetNode::attrs for Target serialization [#5993](https://github.com/apache/incubator-tvm/pull/5993)\r\n- each option of target str should only contain one ‘=’ [#5988](https://github.com/apache/incubator-tvm/pull/5988)\r\n- Rename target_id => target_kind [#6199](https://github.com/apache/incubator-tvm/pull/6199)\r\n- 64-bit RPi4b target [#6211](https://github.com/apache/incubator-tvm/pull/6211)\r\n- Add resnet-3d & Update network definitions for NHWC layout [#5945](https://github.com/apache/incubator-tvm/pull/5945)\r\n- Small bug fix for Conv1D imports. [#5995](https://github.com/apache/incubator-tvm/pull/5995)\r\n- Move invoke_tvm_op and shape_func to vm dialect [#5958](https://github.com/apache/incubator-tvm/pull/5958)\r\n- GRU Layer Support [#6020](https://github.com/apache/incubator-tvm/pull/6020)\r\n- Add pass for getting calibration data from a relay module [#5997](https://github.com/apache/incubator-tvm/pull/5997)\r\n- Merge two consecutive reshape ops [#6052](https://github.com/apache/incubator-tvm/pull/6052)\r\n- Add operation scatter_add to relay, based on scatter implementation. [#6030](https://github.com/apache/incubator-tvm/pull/6030)\r\n- i64 indices [#5235](https://github.com/apache/incubator-tvm/pull/5235)\r\n- Port eliminate_common_subexpr to non-recursive form [#6134](https://github.com/apache/incubator-tvm/pull/6134)\r\n- Fix interpreter for dyanmic shape input of ndarray_size [#6086](https://github.com/apache/incubator-tvm/pull/6086)\r\n- Allow to config allocator type and refactor vm code structure [#6105](https://github.com/apache/incubator-tvm/pull/6105)\r\n- Handle ndarray_size in FoldConstant [#6156](https://github.com/apache/incubator-tvm/pull/6156)\r\n- when converting constant nodes with types of int64 or float64 [#6159](https://github.com/apache/incubator-tvm/pull/6159)\r\n- Add ReshapeTensor instruction in the VM to replace the reshape op [#6089](https://github.com/apache/incubator-tvm/pull/6089)\r\n- Support combine multiple dense op just into dense [#6062](https://github.com/apache/incubator-tvm/pull/6062)\r\n- Add unbiased variance op and corresponding support in pytorch frontend [#6232](https://github.com/apache/incubator-tvm/pull/6232)\r\n- Specify additional layouts in convert layout pass [#5422](https://github.com/apache/incubator-tvm/pull/5422)\r\n- Safe check added for Merge Composite Call Node [#5562](https://github.com/apache/incubator-tvm/pull/5562)\r\n- Non recursive partitioning [#5493](https://github.com/apache/incubator-tvm/pull/5493)\r\n- Support combine multiple dense op just into dense [#6062](https://github.com/apache/incubator-tvm/pull/6062)\r\n- Make the max number of fused ops configurable [#6327](https://github.com/apache/incubator-tvm/pull/6327)\r\n- Implementation of the dynamic pad operator [#6284](https://github.com/apache/incubator-tvm/pull/6284)\r\n- change device annotation from post DFS to recursive [#6124](https://github.com/apache/incubator-tvm/pull/6124)\r\n- Make check stricter: disallow inserting function with free vars into module [#6313](https://github.com/apache/incubator-tvm/pull/6313)\r\n- Make check stricter by using Feature. Fixed multiple bugs [#6326](https://github.com/apache/incubator-tvm/pull/6326)\r\n- Resize support for NCHW-convertible layouts [#6293](https://github.com/apache/incubator-tvm/pull/6293)\r\n- Make AutoDiff thread through global function [#6336](https://github.com/apache/incubator-tvm/pull/6336)\r\n- Create Interpreter for each constant subgraph [#6195](https://github.com/apache/incubator-tvm/pull/6195)\r\n- Add Dynamic reshape to a dynamic namespace and add DynamicToStatic Pass [#5826](https://github.com/apache/incubator-tvm/pull/5826)\r\n- Expose relay BindParamsByName to Python [#4751](https://github.com/apache/incubator-tvm/issues/4751)\r\n- Implement pass manager tracing API [#4782](https://github.com/apache/incubator-tvm/issues/4782)\r\n- Move Ops in relay.op.contrib.* [#4942](https://github.com/apache/incubator-tvm/pull/4942)\r\n- Conditions updated to cover better user scenarios [#4951](https://github.com/apache/incubator-tvm/pull/4951)\r\n- [External codegen] Add test cases for fused ops with manual annotation ([#4741](https://github.com/apache/incubator-tvm/pull/4741))\r\n- Multiple output support, reshape, split ops added [#6296](https://github.com/apache/incubator-tvm/pull/6296)\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/698659880/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/698660314","html_url":"https://github.com/apache/tvm/pull/6549#issuecomment-698660314","issue_url":"https://api.github.com/repos/apache/tvm/issues/6549","id":698660314,"node_id":"MDEyOklzc3VlQ29tbWVudDY5ODY2MDMxNA==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-25T00:47:40Z","updated_at":"2020-09-25T00:47:40Z","author_association":"MEMBER","body":"Thanks @jwfromm !","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/698660314/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/698661161","html_url":"https://github.com/apache/tvm/issues/6486#issuecomment-698661161","issue_url":"https://api.github.com/repos/apache/tvm/issues/6486","id":698661161,"node_id":"MDEyOklzc3VlQ29tbWVudDY5ODY2MTE2MQ==","user":{"login":"ZihengJiang","id":17693755,"node_id":"MDQ6VXNlcjE3NjkzNzU1","avatar_url":"https://avatars.githubusercontent.com/u/17693755?v=4","gravatar_id":"","url":"https://api.github.com/users/ZihengJiang","html_url":"https://github.com/ZihengJiang","followers_url":"https://api.github.com/users/ZihengJiang/followers","following_url":"https://api.github.com/users/ZihengJiang/following{/other_user}","gists_url":"https://api.github.com/users/ZihengJiang/gists{/gist_id}","starred_url":"https://api.github.com/users/ZihengJiang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ZihengJiang/subscriptions","organizations_url":"https://api.github.com/users/ZihengJiang/orgs","repos_url":"https://api.github.com/users/ZihengJiang/repos","events_url":"https://api.github.com/users/ZihengJiang/events{/privacy}","received_events_url":"https://api.github.com/users/ZihengJiang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-25T00:51:11Z","updated_at":"2020-09-25T00:51:11Z","author_association":"CONTRIBUTOR","body":"## Operator Coverage\r\n\r\n- Allow empty tensor for reshape, tile and strided_slice [#4618](https://github.com/apache/incubator-tvm/issues/4618)\r\n- Fix meaning of conv2d_transpose output_padding parameter\"; [#4708](https://github.com/apache/incubator-tvm/issues/4708)\r\n- Remove cpp upsampling and resize op [#4769](https://github.com/apache/incubator-tvm/issues/4769)\r\n- upsample operator 'NCHWinic' format support. [#4791](https://github.com/apache/incubator-tvm/pull/4791)\r\n- Injective schedule improvement [#4786](https://github.com/apache/incubator-tvm/pull/4786)\r\n- Enable vectorization on fp16 type [#4867](https://github.com/apache/incubator-tvm/pull/4867)\r\n- Support for Int8 schedules - CUDA/x86 [#5031](https://github.com/apache/incubator-tvm/pull/5031)\r\n- New PR to re-add tan to TVM [#5025](https://github.com/apache/incubator-tvm/pull/5025)\r\n- Register topi schedule for Relay fast_exp and fast_tanh [#5131](https://github.com/apache/incubator-tvm/pull/5131)\r\n- Move Dilation2d from nn to image namespace [#5110](https://github.com/apache/incubator-tvm/pull/5110)\r\n- Use Thrust sort for argsort and topk [#5097](https://github.com/apache/incubator-tvm/pull/5097)\r\n- Conv2d and Dense ops support on Tensor Core [#5099](https://github.com/apache/incubator-tvm/pull/5099)\r\n- Setting workload correctly for Depthwise Spatial conv ARM. [#5182](https://github.com/apache/incubator-tvm/pull/5182)\r\n- Adding a few missing math intrin [#5011](https://github.com/apache/incubator-tvm/pull/5011)\r\n- Missing vectorize for depthwise conv2d. [#5196](https://github.com/apache/incubator-tvm/pull/5196)\r\n- [TOPI] Using x86 schedules for ARM conv2d ([#5334](https://github.com/apache/incubator-tvm/pull/5334))\r\n- [TOPI-ARM] Do not alter layout if layout is NHWC ([#5350](https://github.com/apache/incubator-tvm/pull/5350))\r\n- [TOPI] Setting workload correctly for Depthwise Spatial conv ARM. ([#5182](https://github.com/apache/incubator-tvm/pull/5182))\r\n- [Relay][OP] Add fast_erf implementation ([#5241](https://github.com/apache/incubator-tvm/pull/5241))\r\n- [Topi] Tensorcore support for Conv3D ([#5284](https://github.com/apache/incubator-tvm/pull/5284))\r\n- [intrin] a few more math functions ([#5468](https://github.com/apache/incubator-tvm/pull/5468))\r\n- [Intrinsic] Add log1p, ldexp, atan2, hypot, nextafter, copysign ([#5312](https://github.com/apache/incubator-tvm/pull/5312))\r\n- [relay][topi] Add operation relay.nn.dilate() which calls topi.nn.dilate() ([#5331](https://github.com/apache/incubator-tvm/pull/5331))\r\n- [Topi x86] Missing vectorize for depthwise conv2d. ([#5196](https://github.com/apache/incubator-tvm/pull/5196))\r\n- [TOPI x86] Adding unroll_kw config option for depthwise conv2d. (#5197)\r\n- [Topi] Breakdown [topi.cc](http://topi.cc/) into smaller files ([#5253](https://github.com/apache/incubator-tvm/pull/5253))\r\n- ReduceLogSumExp Operator support [#5453](https://github.com/apache/incubator-tvm/pull/5453)\r\n- Math ops added [#5502](https://github.com/apache/incubator-tvm/pull/5502)\r\n- Enable blocking format in x86 conv2d and fold scale axis [#5357](https://github.com/apache/incubator-tvm/pull/5357)\r\n- Add operation gather to relay. [#5716](https://github.com/apache/incubator-tvm/pull/5716)\r\n- Add storage_order ignore in pooling layer. [#5781](https://github.com/apache/incubator-tvm/pull/5781)\r\n- Fix bifrost spatial packing conv2d auto tune [#5684](https://github.com/apache/incubator-tvm/pull/5684)\r\n- Fix reshape usage in ARM schedule [#5732](https://github.com/apache/incubator-tvm/pull/5732)\r\n- Block sparse dense on cuda [#5746](https://github.com/apache/incubator-tvm/pull/5746)\r\n- Improve CUDA softmax scheduling [#5600](https://github.com/apache/incubator-tvm/pull/5600)\r\n- block sparse dense on cuda [#5746](https://github.com/apache/incubator-tvm/pull/5746)\r\n- pass-by-value -> pass-by-const-reference [#5783](https://github.com/apache/incubator-tvm/pull/5783)\r\n- Using MKL blas for quantized dense [#6115](https://github.com/apache/incubator-tvm/pull/6115)\r\n- topi -> tvm/topi [#6186](https://github.com/apache/incubator-tvm/pull/6186)\r\n- Use auto-tuner to improve conv2d_gemm performance [#6117](https://github.com/apache/incubator-tvm/pull/6117)\r\n- Improve CUDA conv2d_transpose_nchw [#4762](https://github.com/apache/incubator-tvm/issues/4762)\r\n- Add CUDA conv2d for NHWC layout [#4737](https://github.com/apache/incubator-tvm/issues/4737)\r\n- conv3d_ndhwc schedule [#4775](https://github.com/apache/incubator-tvm/issues/4775)\r\n- Fast exponent [#4790](https://github.com/apache/incubator-tvm/pull/4790)\r\n- Add Scatter to Topi/Relay/ONNX via hybrid script [#5619](https://github.com/apache/incubator-tvm/pull/5619)\r\n- Split MKL from BLAS. [#6182](https://github.com/apache/incubator-tvm/pull/6182)\r\n- Change the meaning of conv3d_transpose output_padding to match conv{1,2}d_transpose [#6065](https://github.com/apache/incubator-tvm/pull/6065)\r\n- Gather op support added [#6013](https://github.com/apache/incubator-tvm/pull/6013)\r\n\r\n## Runtime and Backend\r\n\r\n- Cythonize NDArray.copyto ([#4549](https://github.com/apache/incubator-tvm/pull/4549))\r\n- Unified Object System runtime refactor ([#4578](https://github.com/apache/incubator-tvm/pull/4578), [#4581](https://github.com/apache/incubator-tvm/pull/4581), [#4603](https://github.com/apache/incubator-tvm/pull/4603))\r\n- VM profiler: sort VM stats by time ([#4601](https://github.com/apache/incubator-tvm/pull/4601))\r\n- Update RPC runtime to allow remote module as arg ([#4462](https://github.com/apache/incubator-tvm/pull/4462))\r\n- Refactorying system lib and dso lib into library module ([#4481](https://github.com/apache/incubator-tvm/pull/4481))\r\n- Improve TSIM virtual memory mapping ([#4545](https://github.com/apache/incubator-tvm/pull/4545))\r\n- make adt tag signed [#4605](https://github.com/apache/incubator-tvm/issues/4605)\r\n- Improve TVMBackendPackedCFunc to allow return val [#4637](https://github.com/apache/incubator-tvm/issues/4637)\r\n- EdgeTPU runtime for Coral Boards [#4698](https://github.com/apache/incubator-tvm/issues/4698)\r\n- Fix memory leak when using openMP [#4811](https://github.com/apache/incubator-tvm/issues/4811)\r\n- Fix memory leakage of TVMByteArray [#4856](https://github.com/apache/incubator-tvm/pull/4856)\r\n- Fix TVM_DLL_EXPORT_TYPED_FUNC to work on Windows [#4955](https://github.com/apache/incubator-tvm/pull/4955)\r\n- Fix memory leak when using openMP [#4811](https://github.com/apache/incubator-tvm/pull/4811)\r\n- Export GraphRuntime in tvm_runtime.dll [#5002](https://github.com/apache/incubator-tvm/pull/5002)\r\n- MISRA-C compliant TVM runtime [#3934](https://github.com/apache/incubator-tvm/pull/3934)\r\n- Update the type_keys to reflect the code-org [#5074](https://github.com/apache/incubator-tvm/pull/5074)\r\n- Fix AttrEqual for Array and StrMap, double [#5054](https://github.com/apache/incubator-tvm/pull/5054)\r\n- Export GraphRuntime in tvm_runtime.dll [#5002](https://github.com/apache/incubator-tvm/pull/5002)\r\n- Fix unused-value warning [#5140](https://github.com/apache/incubator-tvm/pull/5140)\r\n- crt error handling [#5147](https://github.com/apache/incubator-tvm/pull/5147)\r\n- Bundle deployment with static linking [#5158](https://github.com/apache/incubator-tvm/pull/5158)\r\n- Implemented kDLCPUPinned (cudaMallocHost) [#4985](https://github.com/apache/incubator-tvm/pull/4985)\r\n- Explicitly cast min/max operands [#5090](https://github.com/apache/incubator-tvm/pull/5090)\r\n- ref_counter -> ref_counter_ [#5184](https://github.com/apache/incubator-tvm/pull/5184)\r\n- Expose runtime::String to Python ([#5212](https://github.com/apache/incubator-tvm/pull/5212))\r\n- [PY][FFI] Refactor runtime.String to subclass str ([#5426](https://github.com/apache/incubator-tvm/pull/5426))\r\n- [RUNTIME] Auto conversion from str to runtime::String in PackedFUnc ([#5251](https://github.com/apache/incubator-tvm/pull/5251))\r\n- [RUNTIME] Improved Packed FFI for optional. ([#5478](https://github.com/apache/incubator-tvm/pull/5478))\r\n- [Hexagon] Add hexagon_posix.cc to TVM/RT sources in the right place (#5346)\r\n- [PY][FFI] Refactor runtime.String to subclass str (#5426)\r\n- Fix workspace [#5503](https://github.com/apache/incubator-tvm/pull/5503)\r\n- Store nullptr PackedFunc as nullptr for better error propagation [#5540](https://github.com/apache/incubator-tvm/pull/5540)\r\n- Improve PackedFunc robustness [#5517](https://github.com/apache/incubator-tvm/pull/5517)\r\n- Seg fault in WorkspacePool's destructor (#5632) [#5636](https://github.com/apache/incubator-tvm/pull/5636)\r\n- Resolve constexpr issue in debug mode. [#5651](https://github.com/apache/incubator-tvm/pull/5651)\r\n- Add compile_shared option to linux compile utility fn [#5751](https://github.com/apache/incubator-tvm/pull/5751)\r\n- Call sync in CopyFromRemote and CopyToRemote [#5512](https://github.com/apache/incubator-tvm/pull/5512)\r\n- Fix the multihop cpu case [#5522](https://github.com/apache/incubator-tvm/pull/5522)\r\n- Improve RPCServer AsyncIO support. [#5544](https://github.com/apache/incubator-tvm/pull/5544)\r\n- Modularize the RPC infra [#5484](https://github.com/apache/incubator-tvm/pull/5484)\r\n- Add compile_shared option to linux compile utility fn [#5751](https://github.com/apache/incubator-tvm/pull/5751)\r\n- Overload string operators [#5806](https://github.com/apache/incubator-tvm/pull/5806)\r\n- Only initialize required module [#5926](https://github.com/apache/incubator-tvm/pull/5926)\r\n- if a param not in input, we should still consume it’s data [#5990](https://github.com/apache/incubator-tvm/pull/5990)\r\n- init TVMPackedFunc’s name [#6044](https://github.com/apache/incubator-tvm/pull/6044)\r\n- Enable auto conversion String->DLDataType [#6214](https://github.com/apache/incubator-tvm/pull/6214)\r\n- Support random fill [#5913](https://github.com/apache/incubator-tvm/pull/5913)\r\n- Use new to avoid exit-time de-allocation order [#6292](https://github.com/apache/incubator-tvm/pull/6292)\r\n- Add parallel_for support to run a loop in parallel [#6275](https://github.com/apache/incubator-tvm/pull/6275)\r\n- Solve ARM BIG.LITTLE heterogeneous multicores [#4747](https://github.com/apache/incubator-tvm/issues/4747)\r\n- [RUNTIME] Quick fix PackedFunc String passing ([#5266](https://github.com/apache/incubator-tvm/pull/5266))\r\n- Introduce runtime::String::CanConvertFrom [#5718](https://github.com/apache/incubator-tvm/pull/5718)\r\n- Restore the StrMap behavior in JSON/SHash/SEqual [#5719](https://github.com/apache/incubator-tvm/pull/5719)\r\n- Support overriding RPCWatchdog termination behavior on Android and other platforms [#6216](https://github.com/apache/incubator-tvm/pull/6216)\r\n- Set NDArray::Container.shape_ in NDArray::FromDLPack ([#5301](https://github.com/apache/incubator-tvm/pull/5301))\r\n- Enable x86 cpu cache flush [#5914](https://github.com/apache/incubator-tvm/pull/5914)\r\n\r\n## Quantization\r\n\r\n- Conv2D type checking for kernel per-channel scales. [#4732](https://github.com/apache/incubator-tvm/issues/4732)\r\n- Add missing nullptr check [#4773](https://github.com/apache/incubator-tvm/issues/4773)\r\n- Doc fix on convolution and dequantize [#4799](https://github.com/apache/incubator-tvm/issues/4799)\r\n- Conv2D with dilation support. [#4796](https://github.com/apache/incubator-tvm/issues/4796)\r\n- Making scale/zero_points as expr instead of attrs. [#4611](https://github.com/apache/incubator-tvm/issues/4611)\r\n- Make calibration faster and more memory usage friendly [#4589](https://github.com/apache/incubator-tvm/issues/4589)\r\n- Doc fix on convolution and dequantize [#4799](https://github.com/apache/incubator-tvm/pull/4799)\r\n- Conv2D with dilation support. [#4796](https://github.com/apache/incubator-tvm/pull/4796)\r\n- Optimize lowering for requantize and FixedPointMultiply. [#4798](https://github.com/apache/incubator-tvm/pull/4798)\r\n- More doc fix on quantize and convolution [#4874](https://github.com/apache/incubator-tvm/pull/4874)\r\n- Add support for per channel weight scale in dense op [#4880](https://github.com/apache/incubator-tvm/pull/4880)\r\n- Add support for quantized models via QNN [#4977](https://github.com/apache/incubator-tvm/pull/4977) [#5013](https://github.com/apache/incubator-tvm/pull/5013)\r\n- Support 4D padding. [#5036](https://github.com/apache/incubator-tvm/pull/5036)\r\n- [Requantize] Cleanup and Optimize Lowering ([#5286](https://github.com/apache/incubator-tvm/pull/5286))\r\n- [Topi, ARM] Disbale Winograd for quantized tensors. ([#5363](https://github.com/apache/incubator-tvm/pull/5363))\r\n- Adding support for TFLite QnnSubtract operator. ([#5230](https://github.com/apache/incubator-tvm/pull/5230))\r\n- Remove developer facing api from frontend exports. ([#5375](https://github.com/apache/incubator-tvm/pull/5375))\r\n- Add Quantize/Dequantize Partitioning [#5940](https://github.com/apache/incubator-tvm/pull/5940)\r\n- Add support for quantized models via QNN [#5016](https://github.com/apache/incubator-tvm/pull/5016)\r\n- Quanitze operation expanded to take const argument [#6127](https://github.com/apache/incubator-tvm/pull/6127)\r\n- FP32 and Quantized Object Detection Model [#5479](https://github.com/apache/incubator-tvm/pull/5479)\r\n- Support CallNode inputs in qnn.concatenate [#5360](https://github.com/apache/incubator-tvm/pull/5360)\r\n- QNN support for TFLite 2.1.0 quantized models [#5848](https://github.com/apache/incubator-tvm/pull/5848)\r\n\r\n## TE\r\n\r\n- Tighten split's extent [#4931](https://github.com/apache/incubator-tvm/pull/4931)\r\n- Set split node's range to minimum of ext and split factor or split np… [#5044](https://github.com/apache/incubator-tvm/pull/5044)\r\n- Support mixing normal and cross-thread reduction ([#5193](https://github.com/apache/incubator-tvm/pull/5193))\r\n- Inline -> te/schedule/operation_inline.h ([#5386](https://github.com/apache/incubator-tvm/pull/5386))\r\n- Create loops according to storage scope and thread hierarchies ([#5190](https://github.com/apache/incubator-tvm/pull/5190))\r\n- Fix import in dump pass ir (#5327)\r\n- Scalar support for `te.extern` [#6079](https://github.com/apache/incubator-tvm/pull/6079)\r\n\r\n## TIR\r\n\r\n- IR readability enhancement ([#4501](https://github.com/apache/incubator-tvm/pull/4501))\r\n- Introduce tir::PrimFunc [#5070](https://github.com/apache/incubator-tvm/pull/5070)\r\n- Introduce PrimFuncPass. [#5139](https://github.com/apache/incubator-tvm/pull/5139)\r\n- [TIR] Enhance Substitute, python bindings for Substitute/PostOrderVisit ([#5400](https://github.com/apache/incubator-tvm/pull/5400))\r\n- [TIR] Remove ProducerConsumer and AllocateNode::new_expr ([#5333](https://github.com/apache/incubator-tvm/pull/5333))\r\n- [IR][TRANSFORM] Enable CopyOnWrite for TIR passes. ([#5309](https://github.com/apache/incubator-tvm/pull/5309))\r\n- [REFACTOR][TIR] Migrate LowerTVMBuiltin, InferFragment, LowerThreadAllreduce, ThreadSync to Pass Manager ([#5213](https://github.com/apache/incubator-tvm/pull/5213))\r\n- [TIR][REFACTOR] Remove te::Tensor dependencies from TIR passes. ([#5372](https://github.com/apache/incubator-tvm/pull/5372))\r\n- [TIR] Refactor MakePackedAPI to target dependent stage. ([#5326](https://github.com/apache/incubator-tvm/pull/5326))\r\n- [REFACTOR] tvm.hybrid -> te.hybrid ([#5223](https://github.com/apache/incubator-tvm/pull/5223))\r\n- [REFACTOR][TIR] Migrate most of low-level build to use the Pass Manager. ([#5225](https://github.com/apache/incubator-tvm/pull/5225))\r\n- [TIR][REFACTOR] Migrate low-level passes in tvm.lower to the Pass Manager ([#5364](https://github.com/apache/incubator-tvm/pull/5364))\r\n- [TIR] Migrate VTA TIR passes to the new pass manager. ([#5397](https://github.com/apache/incubator-tvm/pull/5397))\r\n- [REFACTOR][TIR] Migrate all low-level passes to the Pass Manager. ([#5233](https://github.com/apache/incubator-tvm/pull/5233))\r\n- [REFACTOR][TIR] Introduce ExprDeepEqual, Remove IRDeepCompare (#5206)\r\n- [TIR][REFACTOR] RewriteForTensorCore -> te/schedule (#5379)\r\n- [TIR][REFACTOR] Remove ir_pass in favor of analysis/transform. (#5415)\r\n- text format printer considering future parsing use [#5483](https://github.com/apache/incubator-tvm/pull/5483)\r\n- Remove buffer params from pass config. [#5652](https://github.com/apache/incubator-tvm/pull/5652)\r\n- std::string -> String Migration in TIR nodes [#5596](https://github.com/apache/incubator-tvm/pull/5596)\r\n- Remove CallNode.call_type in favor of attribute. [#5937](https://github.com/apache/incubator-tvm/pull/5937)\r\n- Remove legacy HoistIfThenElse [#5944](https://github.com/apache/incubator-tvm/pull/5944)\r\n- Improve Let/LetStmt support. [#5949](https://github.com/apache/incubator-tvm/pull/5949)\r\n- Refine side effect analysis. [#5954](https://github.com/apache/incubator-tvm/pull/5954)\r\n- Provide->ProducerStore, Realize->ProducerRealize. [#5750](https://github.com/apache/incubator-tvm/pull/5750)\r\n- Migrate the tvm/tir/expr.h to constructor [#5773](https://github.com/apache/incubator-tvm/pull/5773)\r\n- Migrate tir/stmt.h to use constructor. [#5778](https://github.com/apache/incubator-tvm/pull/5778)\r\n- Cleanup unused classes [#5789](https://github.com/apache/incubator-tvm/pull/5789)\r\n- Add tir prefix to type keys [#5802](https://github.com/apache/incubator-tvm/pull/5802)\r\n- Enhance VerifyGPUCode [#6194](https://github.com/apache/incubator-tvm/pull/6194)\r\n- Enforce buffer pointer var type to be consistent with dtype. [#6317](https://github.com/apache/incubator-tvm/pull/6317)\r\n- Create a StringImm reference type [#4806](https://github.com/apache/incubator-tvm/issues/4806)\r\n- Add `init` member to ReduceNode [#6138](https://github.com/apache/incubator-tvm/pull/6138)\r\n- Add dump and print for debugging (NFC) [#5207](https://github.com/apache/incubator-tvm/pull/5207)\r\n- Streamline Function Attr interface. [#5045](https://github.com/apache/incubator-tvm/pull/5045)\r\n- alpha_equal to structural_equal [#5161](https://github.com/apache/incubator-tvm/pull/5161)\r\n- Remove AttrsEqual and AttrsHash related code [#5169](https://github.com/apache/incubator-tvm/pull/5169)\r\n- [NODE] General serialzation of leaf objects into bytes. ([#5299](https://github.com/apache/incubator-tvm/pull/5299))\r\n- [POC][IR] Initial stab at std::string->String upgrade ([#5438](https://github.com/apache/incubator-tvm/pull/5438))\r\n- [TIR] Make lower_warp_memory support extent(threadIdx.x) < warp_size ([#5307](https://github.com/apache/incubator-tvm/pull/5307))\r\n- [TIR][PASS] dtype rewrite for indexing variables ([#5092](https://github.com/apache/incubator-tvm/pull/5092))\r\n- [PYTHON] Enhance with_attr API, cleanup MakeAPILegacy in testcases ([#5335](https://github.com/apache/incubator-tvm/pull/5335))\r\n- [PYTHON] Make IntImm more like an integer ([#5232](https://github.com/apache/incubator-tvm/pull/5232))\r\n- [REFACTOR][IR] Move to runtime::String ([#5276](https://github.com/apache/incubator-tvm/pull/5276))\r\n- [REFACTOR][IR] kExternalSymbol -> kGlobalSymbol ([#5211](https://github.com/apache/incubator-tvm/pull/5211))\r\n- [REFACTOR][IR] Remove PrimExpr from String ([#5311](https://github.com/apache/incubator-tvm/pull/5311))\r\n- IRModule is updated with String [#5523](https://github.com/apache/incubator-tvm/pull/5523)\r\n- IR is updated with String [#5547](https://github.com/apache/incubator-tvm/pull/5547)\r\n- Streamline ir/op Registry [#5609](https://github.com/apache/incubator-tvm/pull/5609)\r\n- Migrate IRModule ObjectRef to not-null [#5654](https://github.com/apache/incubator-tvm/pull/5654)\r\n- Migrate BuildConfig to PassContext. [#5668](https://github.com/apache/incubator-tvm/pull/5668)\r\n- relay.op.Op -> tvm.ir.Op [#5705](https://github.com/apache/incubator-tvm/pull/5705)\r\n- Separate ArgTypeCode from DLDataTypeCode [#5730](https://github.com/apache/incubator-tvm/pull/5730)\r\n- Remove legacy compute_expr.h [#5738](https://github.com/apache/incubator-tvm/pull/5738)\r\n- Call::Halide => ProducerLoad, DSL/TIR decouple. [#5743](https://github.com/apache/incubator-tvm/pull/5743)\r\n- Provide->ProducerStore, Realize->ProducerRealize. [#5750](https://github.com/apache/incubator-tvm/pull/5750)\r\n- Migrate the tvm/tir/expr.h to constructor [#5773](https://github.com/apache/incubator-tvm/pull/5773)\r\n- Migrate tir/stmt.h to use constructor. [#5778](https://github.com/apache/incubator-tvm/pull/5778)\r\n- Migrate all Object construction to constructor. [#5784](https://github.com/apache/incubator-tvm/pull/5784)\r\n- Cleanup unused classes [#5789](https://github.com/apache/incubator-tvm/pull/5789)\r\n- Finish std::string->String updates [#5793](https://github.com/apache/incubator-tvm/pull/5793)\r\n- Add tir prefix to type keys [#5802](https://github.com/apache/incubator-tvm/pull/5802)\r\n- Change [Call.name](http://call.name/) to Call.op(RelayExpr) [#5863](https://github.com/apache/incubator-tvm/pull/5863)\r\n- Range/IntSet API style consistency. [#5953](https://github.com/apache/incubator-tvm/pull/5953)\r\n- Separate ArgTypeCode from DLDataTypeCode [#5730](https://github.com/apache/incubator-tvm/pull/5730)\r\n- Migrate all Object construction to constructor. [#5784](https://github.com/apache/incubator-tvm/pull/5784)\r\n- Finish std::string->String updates [#5793](https://github.com/apache/incubator-tvm/pull/5793)\r\n- Unify StrMapNode and MapNode [#5687](https://github.com/apache/incubator-tvm/pull/5687)","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/698661161/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/698661521","html_url":"https://github.com/apache/tvm/issues/6486#issuecomment-698661521","issue_url":"https://api.github.com/repos/apache/tvm/issues/6486","id":698661521,"node_id":"MDEyOklzc3VlQ29tbWVudDY5ODY2MTUyMQ==","user":{"login":"ZihengJiang","id":17693755,"node_id":"MDQ6VXNlcjE3NjkzNzU1","avatar_url":"https://avatars.githubusercontent.com/u/17693755?v=4","gravatar_id":"","url":"https://api.github.com/users/ZihengJiang","html_url":"https://github.com/ZihengJiang","followers_url":"https://api.github.com/users/ZihengJiang/followers","following_url":"https://api.github.com/users/ZihengJiang/following{/other_user}","gists_url":"https://api.github.com/users/ZihengJiang/gists{/gist_id}","starred_url":"https://api.github.com/users/ZihengJiang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ZihengJiang/subscriptions","organizations_url":"https://api.github.com/users/ZihengJiang/orgs","repos_url":"https://api.github.com/users/ZihengJiang/repos","events_url":"https://api.github.com/users/ZihengJiang/events{/privacy}","received_events_url":"https://api.github.com/users/ZihengJiang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-25T00:52:49Z","updated_at":"2020-10-02T01:00:54Z","author_association":"CONTRIBUTOR","body":"# Performance Improvements\r\n\r\n- Int8 GEMM performance enhancement using Cublas ([#4550](https://github.com/apache/incubator-tvm/pull/4550))\r\n- Speedup TSIM with multi-threading ([#4491](https://github.com/apache/incubator-tvm/pull/4491))\r\n- [Runtime][Contrib] Support cudnn softmax (#5214)\r\n- [cuDNN] Add cuDNN grouped convolution support (#5319)\r\n- [Relay][Topi][AutoTVM] Winograd support for Conv3D (#5186)\r\n- [TOPI] Improve get_valid_count and nms performance for CUDA (#5339)\r\n- [Topi][Cuda]Optimizations of global_ave_pool for NHWC layout (#5450)\r\n- Optimization of Conv2d Winograd algorithm on Tensor … [#5485](https://github.com/apache/incubator-tvm/pull/5485)\r\n- Some performance improvement to VM [#5901](https://github.com/apache/incubator-tvm/pull/5901)\r\n- Optimize x86 conv3d_ndhwc using data packing approach. [#4866](https://github.com/apache/incubator-tvm/pull/4866)\r\n- Improve NHWC depthwise convolution for AArch64 [#6095](https://github.com/apache/incubator-tvm/pull/6095)\r\n- Improve quantized convolution performance for armv8 architectures [#5754](https://github.com/apache/incubator-tvm/pull/5754)\r\n\r\n# Documentation\r\n\r\n- Adding benchmark log format doc ([#4366](https://github.com/apache/incubator-tvm/pull/4366))\r\n- Add Ninja build system to installation docs ([#4554](https://github.com/apache/incubator-tvm/pull/4554))\r\n- Doc/comment fixes ([#4452](https://github.com/apache/incubator-tvm/pull/4452), [#4463](https://github.com/apache/incubator-tvm/pull/4463), [#4469](https://github.com/apache/incubator-tvm/pull/4469), [#4493](https://github.com/apache/incubator-tvm/pull/4493), [#4397](https://github.com/apache/incubator-tvm/pull/4397), [#4580](https://github.com/apache/incubator-tvm/pull/4580), [#4585](https://github.com/apache/incubator-tvm/pull/4585), [#4591](https://github.com/apache/incubator-tvm/pull/4591))\r\n- Fix doc after moving to unified IR [#4835](https://github.com/apache/incubator-tvm/pull/4835)\r\n- Introduction to module serialization [#4564](https://github.com/apache/incubator-tvm/pull/4564)\r\n- ConvertLayout - Call RemoveUnunsedFunctions. [#4834](https://github.com/apache/incubator-tvm/pull/4834)\r\n- Fix bugs that override n_trials [#4842](https://github.com/apache/incubator-tvm/pull/4842)\r\n- Update the vm doc [#4868](https://github.com/apache/incubator-tvm/pull/4868)\r\n- Refine the example description of max/min/sum/tag_scope [#4974](https://github.com/apache/incubator-tvm/pull/4974)\r\n- Fix vta tutorial [#4809](https://github.com/apache/incubator-tvm/pull/4809)\r\n- Introduce how to add hardware backend to FAQ [#4898](https://github.com/apache/incubator-tvm/pull/4898)\r\n- Update API docs to reflect the status after the refactor. [#4907](https://github.com/apache/incubator-tvm/pull/4907)\r\n- Fix sphinx warnings [#4917](https://github.com/apache/incubator-tvm/pull/4917)\r\n- Fix Sphinx Warnings (RST indent, cross-ref, and image scale) [#4920](https://github.com/apache/incubator-tvm/pull/4920)\r\n- Fix Sphinx Warning: the target found for cross-reference [#4925](https://github.com/apache/incubator-tvm/pull/4925)\r\n- Sphinx -- Introduce alias detection. [#4954](https://github.com/apache/incubator-tvm/pull/4954)\r\n- Fix Warnings from #4942 [#4959](https://github.com/apache/incubator-tvm/pull/4959)\r\n- Fix sphinx precheck [#4967](https://github.com/apache/incubator-tvm/pull/4967)\r\n- Move git_howto to rst, add Stage documents to te [#5055](https://github.com/apache/incubator-tvm/pull/5055)\r\n- Add doc for Relay op strategy [#5078](https://github.com/apache/incubator-tvm/pull/5078)\r\n- Update relay docs [#5112](https://github.com/apache/incubator-tvm/pull/5112)\r\n- Include a tarball of docs, add a security faq [#5119](https://github.com/apache/incubator-tvm/pull/5119)\r\n- Cleanup docs before rebuild [#5127](https://github.com/apache/incubator-tvm/pull/5127)\r\n- Minimize necessary doc change [#5129](https://github.com/apache/incubator-tvm/pull/5129)\r\n- Various sphinx related fix. [#5168](https://github.com/apache/incubator-tvm/pull/5168)\r\n- Point docs to the ASF site. [#5178](https://github.com/apache/incubator-tvm/pull/5178)\r\n- Use https link [#5183](https://github.com/apache/incubator-tvm/pull/5183)\r\n- Reduce artifcats generated by sphinx gallery [#5208](https://github.com/apache/incubator-tvm/pull/5208)\r\n- Refine the example description of max/min/sum/tag_scope [#4974](https://github.com/apache/incubator-tvm/pull/4974)\r\n- Description updated for pooling attributes [#5091](https://github.com/apache/incubator-tvm/pull/5091)\r\n- [DOCS] Migrate some markdowns to rst, fix sphinx3 warnings ([#5416](https://github.com/apache/incubator-tvm/pull/5416))\r\n- [DOCS] Misc docs improvements ([#5222](https://github.com/apache/incubator-tvm/pull/5222))\r\n- [DOCS] Bring relay docs to the top-level flat view ([#5343](https://github.com/apache/incubator-tvm/pull/5343))\r\n- [DOCS] Reduce artifcats generated by sphinx gallery ([#5208](https://github.com/apache/incubator-tvm/pull/5208))\r\n- [DOCS] Use https link ([#5183](https://github.com/apache/incubator-tvm/pull/5183))\r\n- [DOCSTRING]missing function parameters updated ([#5228](https://github.com/apache/incubator-tvm/pull/5228))\r\n- [DOCS] Migrate HLS documents from md to rst ([#5419](https://github.com/apache/incubator-tvm/pull/5419))\r\n- [Tutorial, QNN] Add tutorial for loading quantized PyTorch model ([#5321](https://github.com/apache/incubator-tvm/pull/5321))\r\n- [Docs] VTA install doc migration from md to rst ([#5442](https://github.com/apache/incubator-tvm/pull/5442))\r\n- [TVM][docs] compiler version in docs ([#5281](https://github.com/apache/incubator-tvm/pull/5281))\r\n- Remove legacy compute_expr.h [#5738](https://github.com/apache/incubator-tvm/pull/5738)\r\n- TVM_REGISTER_API -> TVM_REGISTER_GLOBAL [#4768](https://github.com/apache/incubator-tvm/issues/4768)\r\n\r\n# Bug Fixes\r\n\r\n- Add bfloat16 typeflag support ([#4525](https://github.com/apache/incubator-tvm/pull/4525))\r\n- MSVC / Windows fixes ([#4455](https://github.com/apache/incubator-tvm/pull/4455), [#4569](https://github.com/apache/incubator-tvm/pull/4569))\r\n- Fix Makefile for howto_deploy ([#4457](https://github.com/apache/incubator-tvm/pull/4457/files))\r\n- Fix GCC 4.8 compact ([#4461](https://github.com/apache/incubator-tvm/pull/4461))\r\n- Fix search path to build libtvm_topi.so ([#4467](https://github.com/apache/incubator-tvm/pull/4467))\r\n- Fix for conv2d_transpose CUDA compilation ([#4472](https://github.com/apache/incubator-tvm/pull/4472))\r\n- Fix for LLVM 10.0 codegen ([#4480](https://github.com/apache/incubator-tvm/pull/4480), [#4515](https://github.com/apache/incubator-tvm/pull/4515))\r\n- Fix alter op layout when calling global var ([#4454](https://github.com/apache/incubator-tvm/pull/4454))\r\n- Fix float2half_rn support for cuda compute capabilities < 53 ([#4489](https://github.com/apache/incubator-tvm/pull/4489))\r\n- Fix compile errors for OpenCL backends ([#4492](https://github.com/apache/incubator-tvm/pull/4492))\r\n- Fix serialization precision loss ([#4503](https://github.com/apache/incubator-tvm/pull/4503))\r\n- Fix hybrid script to support array of tensors ([#4494](https://github.com/apache/incubator-tvm/pull/4494))\r\n- Fix annotation for multiply op ([#4458](https://github.com/apache/incubator-tvm/pull/4458))\r\n- Fix Dockerfile for linter CI ([#4506](https://github.com/apache/incubator-tvm/pull/4506))\r\n- Fix TF resize for dynamic size models ([#4510](https://github.com/apache/incubator-tvm/pull/4510))\r\n- Fix bias_add gradient ([#4516](https://github.com/apache/incubator-tvm/pull/4516))\r\n- Fix tanH unit test function call ([#4517](https://github.com/apache/incubator-tvm/pull/4517))\r\n- Fix extra reshape parameter for ONNX ([#4524](https://github.com/apache/incubator-tvm/pull/4524))\r\n- Fix crash caused by empty TOPI config ([#4520](https://github.com/apache/incubator-tvm/pull/4520))\r\n- Fix ONNX shape op type to use int64 ([#4528](https://github.com/apache/incubator-tvm/pull/4528))\r\n- Fix crash in TSIM virtual memory driver ([#4527](https://github.com/apache/incubator-tvm/pull/4527))\r\n- Replace deprecated python library in setup script ([#4533](https://github.com/apache/incubator-tvm/pull/4533))\r\n- Fix NMS max_output_size loop ([#4541](https://github.com/apache/incubator-tvm/pull/4541))\r\n- Fix style in IR mutator and IR visitor ([#4561](https://github.com/apache/incubator-tvm/pull/4561))\r\n- Fix compiler warning ([#4559](https://github.com/apache/incubator-tvm/pull/4559))\r\n- Fix to get end to end inference on Chisel VTA ([#4574](https://github.com/apache/incubator-tvm/pull/4574))\r\n- Fix LLVM build by adding missing intrinsics headers ([#4575](https://github.com/apache/incubator-tvm/pull/4575))\r\n- Fix context creation in quantization ([#4582](https://github.com/apache/incubator-tvm/pull/4582))\r\n- Fix NDArray SaveDLTensor signature ([#4586](https://github.com/apache/incubator-tvm/pull/4586))\r\n- Fix dense pack schedule for x86 ([#4539](https://github.com/apache/incubator-tvm/pull/4539))\r\n- Fix for broadcast tensor of scalar type ([#4577](https://github.com/apache/incubator-tvm/pull/4577))\r\n- Datatype refactor ([#4513](https://github.com/apache/incubator-tvm/pull/4513/files), [#4560](https://github.com/apache/incubator-tvm/pull/4560))\r\n- Add const qualifiers for NDArray container ([#4590](https://github.com/apache/incubator-tvm/pull/4590))\r\n- Fix TF <= 1.12 compatibility ([#4593](https://github.com/apache/incubator-tvm/pull/4593))\r\n- Fix for graph debug runtime ([#4598](https://github.com/apache/incubator-tvm/pull/4598/files))\r\n- Disable copy constructor for external codegen ([#4597](https://github.com/apache/incubator-tvm/pull/4597))\r\n- Make ADT tag signed ([#4605](https://github.com/apache/incubator-tvm/pull/4605))\r\n- Added declare of aluBits for TensorAlu [#4624](https://github.com/apache/incubator-tvm/issues/4624)\r\n- Get around limitation of g++-4.8 [#4626](https://github.com/apache/incubator-tvm/issues/4626)\r\n- Bugfix StmtMutator IfThenElse [#4609](https://github.com/apache/incubator-tvm/issues/4609)\r\n- Remove unecessary rdynamic [#4613](https://github.com/apache/incubator-tvm/issues/4613)\r\n- Resolve constexpr related link error in debug mode [#4641](https://github.com/apache/incubator-tvm/issues/4641)\r\n- Asymmetric padding [#4511](https://github.com/apache/incubator-tvm/issues/4511)\r\n- Reduce data size of asymmetric padding testcase [#4658](https://github.com/apache/incubator-tvm/issues/4658)\r\n- Fix Base64OutStream portability issue [#4668](https://github.com/apache/incubator-tvm/issues/4668)\r\n- Fix topi.nn.global_pool layout=\"NHWC\" [#4656](https://github.com/apache/incubator-tvm/issues/4656)\r\n- Also package core.rly [#4679](https://github.com/apache/incubator-tvm/issues/4679)\r\n- `fskip` of EliminateCommonSubexpr cannot always return false [#4620](https://github.com/apache/incubator-tvm/issues/4620)\r\n- Fix Python syntax error in start_rpc_server_to_tracker.py [#4682](https://github.com/apache/incubator-tvm/issues/4682)\r\n- os.path --> osp to match the import [#4681](https://github.com/apache/incubator-tvm/issues/4681)\r\n- GitHub actions/checkout@v1 --> v2 [#4680](https://github.com/apache/incubator-tvm/issues/4680)\r\n- Fix Python syntax error AGAIN in start_rpc_server_to_tracker.py [#4685](https://github.com/apache/incubator-tvm/issues/4685)\r\n- Use ==/!= to compare str, bytes, and int literals [#4686](https://github.com/apache/incubator-tvm/issues/4686)\r\n- Rename start_rpc_server_to_tracker.py to start_rpc_server_to_tracker.sh [#4689](https://github.com/apache/incubator-tvm/issues/4689)\r\n- GitHub Action lint Python code for syntax errors [#4688](https://github.com/apache/incubator-tvm/issues/4688)\r\n- Generate blob use LLVM directly [#4657](https://github.com/apache/incubator-tvm/issues/4657)\r\n- Reduce input size to fix oom [#4653](https://github.com/apache/incubator-tvm/issues/4653)\r\n- Fix RemoveUnusedFunctions pass [#4700](https://github.com/apache/incubator-tvm/issues/4700)\r\n- Link the math library by default [#4713](https://github.com/apache/incubator-tvm/issues/4713)\r\n- Update mainline version to 0.7.dev0 [#4720](https://github.com/apache/incubator-tvm/issues/4720)\r\n- Add SizeVar representing non-neg valued variable in a tensor shape [#4684](https://github.com/apache/incubator-tvm/issues/4684)\r\n- Fix the compile problem of cpp_rpc [#4725](https://github.com/apache/incubator-tvm/issues/4725)\r\n- JSON upgrader to upgrade serialized json. [#4730](https://github.com/apache/incubator-tvm/issues/4730)\r\n- Fallback schedule for Int8 depthwise. [#4733](https://github.com/apache/incubator-tvm/issues/4733)\r\n- Fix dense x86 schedule [#4728](https://github.com/apache/incubator-tvm/issues/4728)\r\n- Fix demo dockerfile build failed [#4744](https://github.com/apache/incubator-tvm/issues/4744)\r\n- Improve CUDA vectorizer [#4736](https://github.com/apache/incubator-tvm/issues/4736)\r\n- Add .asf.yaml for github info [#4761](https://github.com/apache/incubator-tvm/issues/4761)\r\n- Fix padding in pooling op [#4738](https://github.com/apache/incubator-tvm/issues/4738)\r\n- Remove run_infer_type duplicates [#4766](https://github.com/apache/incubator-tvm/issues/4766)\r\n- [pooling.cc](http://pooling.cc/) improvements [#4767](https://github.com/apache/incubator-tvm/issues/4767)\r\n- Export builtin_fp16 on Windows [#4731](https://github.com/apache/incubator-tvm/issues/4731)\r\n- Fix Tensorflow conv3d pad bug, add non-cubic data and kernel tests [#4772](https://github.com/apache/incubator-tvm/issues/4772)\r\n- Bump prebuilt-image version in demo dockerfile [#4770](https://github.com/apache/incubator-tvm/issues/4770)\r\n- Update tune_simple_template.py [#4778](https://github.com/apache/incubator-tvm/issues/4778)\r\n- Explicitly link to cublasLt if it exists [#4776](https://github.com/apache/incubator-tvm/issues/4776)\r\n- Fix hasattr by extracting Python error type from Windows error message [#4780](https://github.com/apache/incubator-tvm/issues/4780)\r\n- Replace os.path.exists with try...except...else [#4784](https://github.com/apache/incubator-tvm/issues/4784)\r\n- Make sure to visit the arguments of inlined functions [#4783](https://github.com/apache/incubator-tvm/issues/4783)\r\n- Parse additional exception strings [#4785](https://github.com/apache/incubator-tvm/issues/4785)\r\n- Fix #4670: add bias for fc layer [#4801](https://github.com/apache/incubator-tvm/issues/4801)\r\n- Change color channel from BGR to RGB for darknet preprocessing [#4794](https://github.com/apache/incubator-tvm/issues/4794)\r\n- Fix -Wextra [#4804](https://github.com/apache/incubator-tvm/issues/4804)\r\n- Fix vta tutorial [#4809](https://github.com/apache/incubator-tvm/issues/4809)\r\n- Minor bug fixes in AutoTVM for QNN graphs [#4797](https://github.com/apache/incubator-tvm/pull/4797)\r\n- Fixed subprocess creation under windows [#4820](https://github.com/apache/incubator-tvm/pull/4820)\r\n- Improve tol to resolve flaky case [#4836](https://github.com/apache/incubator-tvm/pull/4836)\r\n- Fixed process termination routine in windows [#4844](https://github.com/apache/incubator-tvm/pull/4844)\r\n- test_cuddn flaky [#4846](https://github.com/apache/incubator-tvm/pull/4846)\r\n- Mxnet parser for Qnn dialect [#4714](https://github.com/apache/incubator-tvm/pull/4714)\r\n- Enhance cc.cross_compiler [#4817](https://github.com/apache/incubator-tvm/pull/4817)\r\n- Fixed crash caused by reversing bitwise operations [#4852](https://github.com/apache/incubator-tvm/pull/4852)\r\n- Reverse some changes made for intel_graphics/conv2d.py in PR #4849 [#4853](https://github.com/apache/incubator-tvm/pull/4853)\r\n- const auto p -> const auto& p [#4861](https://github.com/apache/incubator-tvm/pull/4861)\r\n- Fix onnx import bugs [#4750](https://github.com/apache/incubator-tvm/pull/4750)\r\n- Explicit llvm::StringRef to std::string conversion [#4859](https://github.com/apache/incubator-tvm/pull/4859)\r\n- Update the runtime PackedFunc for module [#4871](https://github.com/apache/incubator-tvm/pull/4871)\r\n- Improve antlr import error message [#4888](https://github.com/apache/incubator-tvm/pull/4888)\r\n- Fix alpha_equal bug for attribute check [#4897](https://github.com/apache/incubator-tvm/pull/4897)\r\n- Fix issues in cuda codegen [#4876](https://github.com/apache/incubator-tvm/pull/4876)\r\n- Fixed: Bitwise ops on floats causing wrong code generation and crashes. [#4892](https://github.com/apache/incubator-tvm/pull/4892)\r\n- Fix tvm.target.generic_func runtime detection [#4910](https://github.com/apache/incubator-tvm/pull/4910)\r\n- topi/tests/python/test_topi_sort.py::test_argsort [#4891](https://github.com/apache/incubator-tvm/pull/4891)\r\n- Use opencv reisze method for preprocessing of image in darknet [#4883](https://github.com/apache/incubator-tvm/pull/4883)\r\n- Fix build breaks with StringRef changes [#4923](https://github.com/apache/incubator-tvm/pull/4923)\r\n- Remove unnecessary spliting in the cached chunk [#4935](https://github.com/apache/incubator-tvm/pull/4935)\r\n- Fixing an Infinite Loop case in UnmatchedChecker. [#4881](https://github.com/apache/incubator-tvm/pull/4881)\r\n- Remove SGX toolchain installation from CI Dockerfile [#4948](https://github.com/apache/incubator-tvm/pull/4948)\r\n- Fix tedd tutorial after strategy change [#4947](https://github.com/apache/incubator-tvm/pull/4947)\r\n- Allow customize MKLDNN library location [#4814](https://github.com/apache/incubator-tvm/pull/4814)\r\n- Added CopyFromBytes and CopyToBytes convenience methods to NDArray. Fixed typos. [#4970](https://github.com/apache/incubator-tvm/pull/4970)\r\n- Fix gcn tutorial failure [#4994](https://github.com/apache/incubator-tvm/pull/4994)\r\n- Fix stride default value None in torch.nn.functional.avg_pool [#4984](https://github.com/apache/incubator-tvm/pull/4984)\r\n- Fix ROCm strategy for winograd conv selection [#5001](https://github.com/apache/incubator-tvm/pull/5001)\r\n- Fix get_valid_count flaky test for cuda [#4901](https://github.com/apache/incubator-tvm/pull/4901)\r\n- Change Scala Linter scalafmt => scalastyle [#4998](https://github.com/apache/incubator-tvm/pull/4998)\r\n- Kill from tvm import te [#5007](https://github.com/apache/incubator-tvm/pull/5007)\r\n- Chisel fixes and de10nano support [#4986](https://github.com/apache/incubator-tvm/pull/4986)\r\n- Fix gpu not found when running TVM docker [#4975](https://github.com/apache/incubator-tvm/pull/4975)\r\n- Fixes for pylint==2.4.4 [#4849](https://github.com/apache/incubator-tvm/pull/4849)\r\n- Fix unordered dictionary problem for python version under 3.6 [#4982](https://github.com/apache/incubator-tvm/pull/4982)\r\n- Fix gcn tutorial failure [#4994](https://github.com/apache/incubator-tvm/pull/4994)\r\n- Fix stride default value None in torch.nn.functional.avg_pool [#4984](https://github.com/apache/incubator-tvm/pull/4984)\r\n- Fix ROCm strategy for winograd conv selection [#5001](https://github.com/apache/incubator-tvm/pull/5001)\r\n- Early checking added and new test cases added for schedule fuse [#5010](https://github.com/apache/incubator-tvm/pull/5010)\r\n- Fixed div by zero core dump. Fixed rounding intrinsics on int crash [#5026](https://github.com/apache/incubator-tvm/pull/5026)\r\n- Test case modified for int type [#5012](https://github.com/apache/incubator-tvm/pull/5012)\r\n- Bug Fix for ARM CPUs. Lower strict assumption. [#5063](https://github.com/apache/incubator-tvm/pull/5063)\r\n- Triage the testcases to fit the the new namespaces [#5071](https://github.com/apache/incubator-tvm/pull/5071)\r\n- Add colors to compute_at edges and thread/block indices. [#5111](https://github.com/apache/incubator-tvm/pull/5111)\r\n- Temporary fix to the stack overflow issue in autotvm task extraction [#5019](https://github.com/apache/incubator-tvm/pull/5019)\r\n- Fix compilation of If-Elses [#5040](https://github.com/apache/incubator-tvm/pull/5040)\r\n- Fix CompilerAttrs [#5109](https://github.com/apache/incubator-tvm/pull/5109)\r\n- Fix the existing test cases before refactoring. [#5122](https://github.com/apache/incubator-tvm/pull/5122)\r\n- Fixed bug where shifting by out-of-bounds value results in no compute code being emitted. [#5115](https://github.com/apache/incubator-tvm/pull/5115)\r\n- Fix for issue #4831. The data_min_idx and data_max_idx were flipped. [#5136](https://github.com/apache/incubator-tvm/pull/5136)\r\n- Duplicate likely nodes added when loop axis split unevenly [#5084](https://github.com/apache/incubator-tvm/pull/5084)\r\n- Fix incorrect name of calibration mode [#5150](https://github.com/apache/incubator-tvm/pull/5150)\r\n- Remove contrib spatial pack schedule of depthwise convolution [#5148](https://github.com/apache/incubator-tvm/pull/5148)\r\n- Fix annotate pass static variable [#5023](https://github.com/apache/incubator-tvm/pull/5023)\r\n- Fixed ConvTranspose2D parsing [#5157](https://github.com/apache/incubator-tvm/pull/5157)\r\n- Nullptr check [#5176](https://github.com/apache/incubator-tvm/pull/5176)\r\n- rocm: fix miopen convolutions [#5179](https://github.com/apache/incubator-tvm/pull/5179)\r\n- rocm: fix dense_rocblas in strategy, topi [#5191](https://github.com/apache/incubator-tvm/pull/5191)\r\n- Bugfix in tensorflow space_to_batch_nd [#5175](https://github.com/apache/incubator-tvm/pull/5175)\r\n- Fix CRT static test bug ([#5293](https://github.com/apache/incubator-tvm/pull/5293))\r\n- Fix perf regression of tir refactor ([#5258](https://github.com/apache/incubator-tvm/pull/5258))\r\n- Bugfix in tensorflow space_to_batch_nd ([#5175](https://github.com/apache/incubator-tvm/pull/5175))\r\n- Compilation warnings fixed for 32bit and 64bit compilation ([#5349](https://github.com/apache/incubator-tvm/pull/5349))\r\n- Fix hang in MergeCompilerRegions ([#5227](https://github.com/apache/incubator-tvm/pull/5227))\r\n- Fixes to MergeCompilerRegions ([#5195](https://github.com/apache/incubator-tvm/pull/5195))\r\n- Fix generation of LLVM intrinsics ([#5282](https://github.com/apache/incubator-tvm/pull/5282))\r\n- Fix setting up hints for getaddrinfo ([#2872](https://github.com/apache/incubator-tvm/pull/2872))\r\n- Add ConstantNode to IsAtomic ([#5457](https://github.com/apache/incubator-tvm/pull/5457))\r\n- Fix String SEqual ([#5275](https://github.com/apache/incubator-tvm/pull/5275))\r\n- Fix fuse over functions that are handled by external codegen ([#5365](https://github.com/apache/incubator-tvm/pull/5365))\r\n- Fix memory leak when accessing NDArray ([#5413](https://github.com/apache/incubator-tvm/pull/5413))\r\n- Remove the duplicate PrintIR pass in Relay ([#5403](https://github.com/apache/incubator-tvm/pull/5403))\r\n- Fix lower_warp_memory ([#5247](https://github.com/apache/incubator-tvm/pull/5247))\r\n- Fix lower_warp_memory when there are >1 warp buffers ([#5368](https://github.com/apache/incubator-tvm/pull/5368))\r\n- Fix intel conv2d auto tune ([#5200](https://github.com/apache/incubator-tvm/pull/5200))\r\n- Fix FuseBatchNorm output cast error if need_cast is True [#4894](https://github.com/apache/incubator-tvm/pull/4894)\r\n- Fix an assertion exposed by loop vectorizer [#4916](https://github.com/apache/incubator-tvm/pull/4916)\r\n- Fix error message [#4945](https://github.com/apache/incubator-tvm/pull/4945)\r\n- Fix for recursive let [#5757](https://github.com/apache/incubator-tvm/pull/5757)\r\n- Fix Calibration Pass to Support Modules with Multiple Functions [#5768](https://github.com/apache/incubator-tvm/pull/5768)\r\n- Fix what looks like bizzare copy-paste issue [#6010](https://github.com/apache/incubator-tvm/pull/6010)\r\n- Fix bug in transpose_shape_func [#6180](https://github.com/apache/incubator-tvm/pull/6180)\r\n- Fix bugs in CUDA codegen ([#5209](https://github.com/apache/incubator-tvm/pull/5209))\r\n- Don’t remove() TemporaryFile in **del**. ([#5414](https://github.com/apache/incubator-tvm/pull/5414))\r\n- Fix test_ir_type. ([#5390](https://github.com/apache/incubator-tvm/pull/5390))\r\n- Fix multiple identical inputs bug ([#5389](https://github.com/apache/incubator-tvm/pull/5389))\r\n- Add cuda target check to dense tensorcore schedule. ([#5376](https://github.com/apache/incubator-tvm/pull/5376))\r\n- T2 test fixups ([#5391](https://github.com/apache/incubator-tvm/pull/5391))\r\n- Fix miopen padding ([#5433](https://github.com/apache/incubator-tvm/pull/5433))\r\n- Misc fixes for ROCm ([#5431](https://github.com/apache/incubator-tvm/pull/5431))\r\n- Fix copy constructor (#5237)\r\n- Corrected TVM autotuning on GPU ([#5432](https://github.com/apache/incubator-tvm/pull/5432))\r\n- Fix vector load ([#5226](https://github.com/apache/incubator-tvm/pull/5226))\r\n- Minor bugfix in message_passing.cc ([#5254](https://github.com/apache/incubator-tvm/pull/5254))\r\n- Fix a bug when vectorized load&store was involved for… ([#5428](https://github.com/apache/incubator-tvm/pull/5428))\r\n- Fix to skip node not in graph. ([#5238](https://github.com/apache/incubator-tvm/pull/5238))\r\n- Fix [#5388](https://github.com/apache/incubator-tvm/pull/5388) [RUNTIME][VULKAN] vkBuffer released before memory copy command se… ([#5418](https://github.com/apache/incubator-tvm/pull/5418))\r\n- Fix a minor error in device_annotation ([#5291](https://github.com/apache/incubator-tvm/pull/5291))\r\n- Fix scalar’s ndim is 0 ([#5344](https://github.com/apache/incubator-tvm/pull/5344))\r\n- Fix the runtime raise error [#5586](https://github.com/apache/incubator-tvm/pull/5586)\r\n- Fixed bug in attribute parsing for pool layers. #[5582](https://github.com/apache/incubator-tvm/pull/5582)\r\n- AutoTVM incorrect measurement [#5511](https://github.com/apache/incubator-tvm/pull/5511)\r\n- fix a min/max simplify bug [#5761](https://github.com/apache/incubator-tvm/pull/5761)\r\n- Rename tvm_dso_op to libtvm_dso_op [#5714](https://github.com/apache/incubator-tvm/pull/5714)\r\n- Fix generating types like float44 and float88 [#5722](https://github.com/apache/incubator-tvm/pull/5722)\r\n- Avoid downloading when TOPHUB_LOCATION is NONE [#5720](https://github.com/apache/incubator-tvm/pull/5720)\r\n- codegen llvm: move nvptx-specific intrinsic handling into codegen_nvptx [#5726](https://github.com/apache/incubator-tvm/pull/5726)\r\n- ROCm warp shuffles and reductions [#5727](https://github.com/apache/incubator-tvm/pull/5727)\r\n- fix small bug about dense_grad [#5695](https://github.com/apache/incubator-tvm/pull/5695)\r\n- Clarify downstream consistency of TVMArgTypeCode [#5742](https://github.com/apache/incubator-tvm/pull/5742)\r\n- Fix gelu in PyTorch frontend, tighten numerical checks [#5763](https://github.com/apache/incubator-tvm/pull/5763)\r\n- Make batch matrix multiplication on GPU tunable [#5752](https://github.com/apache/incubator-tvm/pull/5752)\r\n- update vulkan build rule [#5777](https://github.com/apache/incubator-tvm/pull/5777)\r\n- aten::norm support added [#5776](https://github.com/apache/incubator-tvm/pull/5776)\r\n- Edit onnx parser to infer values in post order [#5755](https://github.com/apache/incubator-tvm/pull/5755)\r\n- Support symbolic inputs of Fill [#5762](https://github.com/apache/incubator-tvm/pull/5762)\r\n- support aten::type_as in the pytorch frontend [#5787](https://github.com/apache/incubator-tvm/pull/5787)\r\n- Temporary disable fp16 type_as test for PyTorch Frontend [#5799](https://github.com/apache/incubator-tvm/pull/5799)\r\n- Add config switch for nn.dense layer type. [#5801](https://github.com/apache/incubator-tvm/pull/5801)\r\n- Move cpu-only frontend tests to a CPU stage [#5807](https://github.com/apache/incubator-tvm/pull/5807)\r\n- Pin hand landmark network to version 0.7.4. [#5813](https://github.com/apache/incubator-tvm/pull/5813)\r\n- Limit number of threads in all jobs [#5815](https://github.com/apache/incubator-tvm/pull/5815)\r\n- Error msg update [#5818](https://github.com/apache/incubator-tvm/pull/5818)\r\n- fix relay.build to not change the module argument in place [#5822](https://github.com/apache/incubator-tvm/pull/5822)\r\n- Fix InferType when module contains Prelude [#5797](https://github.com/apache/incubator-tvm/pull/5797)\r\n- Add a combine batch_matmul pass [#5791](https://github.com/apache/incubator-tvm/pull/5791)\r\n- RepeatVector, Conv3DTranspose op support added [#5833](https://github.com/apache/incubator-tvm/pull/5833)\r\n- Fix converting serialized quantized models [#5839](https://github.com/apache/incubator-tvm/pull/5839)\r\n- ffi (Object): make class dict visible in instances [#5843](https://github.com/apache/incubator-tvm/pull/5843)\r\n- Additional canonicalization added for AddNode [#5846](https://github.com/apache/incubator-tvm/pull/5846)\r\n- Suppress the warning messages when compile engine selects impls [#5821](https://github.com/apache/incubator-tvm/pull/5821)\r\n- fix #5849 [#5851](https://github.com/apache/incubator-tvm/pull/5851)\r\n- Introduce POD-C Compliant tvm::Map [#5740](https://github.com/apache/incubator-tvm/pull/5740)\r\n- Add bfloat16 [#5601](https://github.com/apache/incubator-tvm/pull/5601)\r\n- Add Python Classes for all Attrs [#5853](https://github.com/apache/incubator-tvm/pull/5853)\r\n- Fix map assign issue in CI test [#5854](https://github.com/apache/incubator-tvm/pull/5854)\r\n- Introduce Target Id Registry [#5838](https://github.com/apache/incubator-tvm/pull/5838)\r\n- Update has_dtype/has_shape to pattern lang doc [#5847](https://github.com/apache/incubator-tvm/pull/5847)\r\n- Add nn.batch_flatten as quantizable. [#5805](https://github.com/apache/incubator-tvm/pull/5805)\r\n- Fail early before running invalid dynamic graphs [#5856](https://github.com/apache/incubator-tvm/pull/5856)\r\n- Improve type handling in PyTorch frontend [#5834](https://github.com/apache/incubator-tvm/pull/5834)\r\n- HotFix the python intrin rule [#5895](https://github.com/apache/incubator-tvm/pull/5895)\r\n- add a few gradients [#5899](https://github.com/apache/incubator-tvm/pull/5899)\r\n- Add Binary Intrinsic ops to TIR Ops in C++ [#5900](https://github.com/apache/incubator-tvm/pull/5900)\r\n- Allow implicit conversion in TVM FFI to tvm::Bool [#5907](https://github.com/apache/incubator-tvm/pull/5907)\r\n- PyTorch frontend: fix handling of duplicate use of a model weight [#5897](https://github.com/apache/incubator-tvm/pull/5897)\r\n- Don’t multiply by constant 1 uselessly in dense [#5911](https://github.com/apache/incubator-tvm/pull/5911)\r\n- Support any index matching for TupleGetItem [#5909](https://github.com/apache/incubator-tvm/pull/5909)\r\n- Add MicroTVM tutorial using the STM32F746 discovery board [#5655](https://github.com/apache/incubator-tvm/pull/5655)\r\n- Fix serialization of inf float value [#5912](https://github.com/apache/incubator-tvm/pull/5912)\r\n- Fix CPU Thread Binding for Multiple Sockets [#5918](https://github.com/apache/incubator-tvm/pull/5918)\r\n- CUDA device API & VerifyGPUCode pass update [#5898](https://github.com/apache/incubator-tvm/pull/5898)\r\n- Update install.rst [#5858](https://github.com/apache/incubator-tvm/pull/5858)\r\n- Two small fixes to AMDCPU codegen for LLVM 10+ and ROCm 3.5+ [#5920](https://github.com/apache/incubator-tvm/pull/5920)\r\n- Add LegalizeInvalidAttach to legalize the compute_at location after split or fuse [#591](https://github.com/apache/incubator-tvm/pull/5917)\r\n- Don’t rewrite expressions used outside of the pattern [#5930](https://github.com/apache/incubator-tvm/pull/5930)\r\n- Add TupleGetItem to CSE [#5931](https://github.com/apache/incubator-tvm/pull/5931)\r\n- Various update for CoreML codegen [#5934](https://github.com/apache/incubator-tvm/pull/5934)\r\n- Update date in the NOTICE [#5943](https://github.com/apache/incubator-tvm/pull/5943)\r\n- Raise right error in tensorflow split op [#5951](https://github.com/apache/incubator-tvm/pull/5951)\r\n- Add rm xla attributes in tf docs [#5950](https://github.com/apache/incubator-tvm/pull/5950)\r\n- Fix OpenCL get_valid_counts errors due to intrinsic atomic_add [#5857](https://github.com/apache/incubator-tvm/pull/5857)\r\n- Amendments for gradients [#5941](https://github.com/apache/incubator-tvm/pull/5941)\r\n- Fix the meaning of conv{1,2}d_transpose output_padding parameter. [#5758](https://github.com/apache/incubator-tvm/pull/5758)\r\n- Make first order gradient graphs more efficient [#5959](https://github.com/apache/incubator-tvm/pull/5959)\r\n- Raise an exception when extern function does not return Stmt [#5964](https://github.com/apache/incubator-tvm/pull/5964)\r\n- Improve docker/bash.sh to handle git worktrees [#5970](https://github.com/apache/incubator-tvm/pull/5970)\r\n- Install DNNL (OneDNN) to CI Environment [#5936](https://github.com/apache/incubator-tvm/pull/5936)\r\n- Add Dynamic reshape to a dynamic namespace and add DynamicToStatic Pass [#5826](https://github.com/apache/incubator-tvm/pull/5826)\r\n- Add meshgrid op in Relay, TOPI, Pytorch frontend [#5961](https://github.com/apache/incubator-tvm/pull/5961)\r\n- Print right number of parentheses for LoadNode [#5965](https://github.com/apache/incubator-tvm/pull/5965)\r\n- Migrate data structure of TargetNode [#5960](https://github.com/apache/incubator-tvm/pull/5960)\r\n- Remove redundant function CreateBufferVecPtr [#5982](https://github.com/apache/incubator-tvm/pull/5982)\r\n- Fix string argument mismatch in GraphRuntimeCodegen [#5933](https://github.com/apache/incubator-tvm/pull/5933)\r\n- VectorType::get with two parameters is deprecated in LLVM 11+ [#5984](https://github.com/apache/incubator-tvm/pull/5984)\r\n- Fix Compilation Error in CRT [#5713](https://github.com/apache/incubator-tvm/pull/5713)\r\n- Fix runtime::String backward compatibility in JSON [#5725](https://github.com/apache/incubator-tvm/pull/5725)\r\n- Allow RPCWrappedFunc to rewrite runtime::String as std::string [#5796](https://github.com/apache/incubator-tvm/pull/5796)\r\n- Fix reshape [#5739](https://github.com/apache/incubator-tvm/pull/5739)\r\n- Fix building with LLVM-10 on macOS [#5859](https://github.com/apache/incubator-tvm/pull/5859)\r\n- Add cuda 11 to contrib.nvcc.find_libdevice_path() [#5902](https://github.com/apache/incubator-tvm/pull/5902)\r\n- Fix sequential cpp test [#5745](https://github.com/apache/incubator-tvm/pull/5745)\r\n- Infer types in MergeComposite [#5766](https://github.com/apache/incubator-tvm/pull/5766)\r\n- Fix recursive let for well formed check [#5780](https://github.com/apache/incubator-tvm/pull/5780)\r\n- Recover global state after test_util.py [#5824](https://github.com/apache/incubator-tvm/pull/5824)\r\n- Fix bug in rpc ring buffer shrink [#5516](https://github.com/apache/incubator-tvm/pull/5516)\r\n- Fix remote device sync [#5538](https://github.com/apache/incubator-tvm/pull/5538)\r\n- Fix bug in rpc ring buffer shrink (#5516) [#5537](https://github.com/apache/incubator-tvm/pull/5537)\r\n- RPC Server error fix on Pynq FPGA [#5607](https://github.com/apache/incubator-tvm/pull/5607)\r\n- Fix FloorMod Simplifier [#5509](https://github.com/apache/incubator-tvm/pull/5509)\r\n- Fix Python debugger segfaults with TVM built with LLVM [#5685](https://github.com/apache/incubator-tvm/pull/5685)\r\n- Fix Compilation Error in CRT [#5713](https://github.com/apache/incubator-tvm/pull/5713)\r\n- Fix runtime::String backward compatibility in JSON [#5725](https://github.com/apache/incubator-tvm/pull/5725)\r\n- Allow RPCWrappedFunc to rewrite runtime::String as std::string [#5796](https://github.com/apache/incubator-tvm/pull/5796)\r\n- Fix reshape [#5739](https://github.com/apache/incubator-tvm/pull/5739)\r\n- Make \"none\" DataType explicit [#5491](https://github.com/apache/incubator-tvm/pull/5491)\r\n- Change \"scalar\" and \"stack\" in IDL from \"inrout\" to \"in\" [#5487](https://github.com/apache/incubator-tvm/pull/5487)\r\n- Link necessary libraries when building runtime for Android [#5496](https://github.com/apache/incubator-tvm/pull/5496)\r\n- Fixes for wasm32 target [#5489](https://github.com/apache/incubator-tvm/pull/5489)\r\n- Reset target and wait for runtime initialization on connect. [#5499](https://github.com/apache/incubator-tvm/pull/5499)\r\n- Bump tophub rocm version [#5504](https://github.com/apache/incubator-tvm/pull/5504)\r\n- Improve commentary for RingBuffer [#5518](https://github.com/apache/incubator-tvm/pull/5518)\r\n- Add unit tests for ONNX PRelu and fix importer to pass them. [#5521](https://github.com/apache/incubator-tvm/pull/5521)\r\n- LRN only supports 4D tensors, remove it from alter_op_layout [#5520](https://github.com/apache/incubator-tvm/pull/5520)\r\n- Fix an issue with ONNX Upsample [#5530](https://github.com/apache/incubator-tvm/pull/5530)\r\n- Cache PrimExpr instead of raw pointers in bound analyzer [#5533](https://github.com/apache/incubator-tvm/pull/5533)\r\n- fix a few bugs with shape inference and types in the ONNX importer [#5534](https://github.com/apache/incubator-tvm/pull/5534)\r\n- Add Onnx Pad v11 [#5539](https://github.com/apache/incubator-tvm/pull/5539)\r\n- Changes to cpp_rpc to make it work on Android (+ Hexagon offloading) [#5535](https://github.com/apache/incubator-tvm/pull/5535)\r\n- Fix to reduce RAM size during loading model [#5507](https://github.com/apache/incubator-tvm/pull/5507)\r\n- Fix MakeLoopNest for warp memory [#5382](https://github.com/apache/incubator-tvm/pull/5382)\r\n- Load platform specific lib for tvmdsoop instead of the hard-coded tvm_dso_op.so [#5542](https://github.com/apache/incubator-tvm/pull/5542)\r\n- Add tests for running micro on native arm hardware [#5546](https://github.com/apache/incubator-tvm/pull/5546)\r\n- Apparently, ONNX Conv with no 'pads' defaults to zero padding [#5548](https://github.com/apache/incubator-tvm/pull/5548)\r\n- clang-format the h,cc,m files. [#5557](https://github.com/apache/incubator-tvm/pull/5557)\r\n- Fix conv2d alter op for arm cpu [#5532](https://github.com/apache/incubator-tvm/pull/5532)\r\n- Fix topi test (/topi/tests/python/test_topi_conv2d_nhwc_winograd.py) for non tensorcore CI. [#5563](https://github.com/apache/incubator-tvm/pull/5563)\r\n- Add clang-format and nodejs to ci-lint [#5567](https://github.com/apache/incubator-tvm/pull/5567)\r\n- Enable clang-format. [#5572](https://github.com/apache/incubator-tvm/pull/5572)\r\n- Allow ubuntu_install_darknet.sh to work in both 18.04 and 16.04 [#5574](https://github.com/apache/incubator-tvm/pull/5574)\r\n- Add a quantized conv2 unit test for the tflite front-end [#5558](https://github.com/apache/incubator-tvm/pull/5558)\r\n- Fix JSON graph dumping. [#5591](https://github.com/apache/incubator-tvm/pull/5591)\r\n- Warp level reduction support for CUDA [#5498](https://github.com/apache/incubator-tvm/pull/5498)\r\n- One more fix for concurrency count [#5589](https://github.com/apache/incubator-tvm/pull/5589)\r\n- Improve robustness of the docs build [#5583](https://github.com/apache/incubator-tvm/pull/5583)\r\n- Phase out WebGL [#5570](https://github.com/apache/incubator-tvm/pull/5570)\r\n- Fix vulkansdk in the ci-gpu and upgrade to 1.2.135 [#5566](https://github.com/apache/incubator-tvm/pull/5566)\r\n- Update ci-cpu to bionic [#5554](https://github.com/apache/incubator-tvm/pull/5554)\r\n- Overestimate binary size for microTVM compiled binaries. [#5590](https://github.com/apache/incubator-tvm/pull/5590)\r\n- Fix bug and re-enable RPC execution test [#5436](https://github.com/apache/incubator-tvm/pull/5436)\r\n- Add ostream formatters for TargetPtr/TargetVal. [#5592](https://github.com/apache/incubator-tvm/pull/5592)\r\n- Fix cross thread reduction [#5551](https://github.com/apache/incubator-tvm/pull/5551)\r\n- Fix TVMArray layout on device [#5599](https://github.com/apache/incubator-tvm/pull/5599)\r\n- Add debug mode to tempdir() [#5581](https://github.com/apache/incubator-tvm/pull/5581)\r\n- Represent alignment information in LLVM IR [#5598](https://github.com/apache/incubator-tvm/pull/5598)\r\n- Fix codegen for warp shuffle intrinsics [#5606](https://github.com/apache/incubator-tvm/pull/5606)\r\n- Fix Topological Order calculation for DFPattern Language [#5612](https://github.com/apache/incubator-tvm/pull/5612)\r\n- Global MaxPool3d and AvgPool3d support [#5098](https://github.com/apache/incubator-tvm/pull/5098)\r\n- Fix build error of iOS RPC [#5621](https://github.com/apache/incubator-tvm/pull/5621)\r\n- isn't a CallNode sometimes [#5623](https://github.com/apache/incubator-tvm/pull/5623)\r\n- Introduce config to PassContext. [#5631](https://github.com/apache/incubator-tvm/pull/5631)\r\n- CMAKE fix [#5630](https://github.com/apache/incubator-tvm/pull/5630)\r\n- Label Pattern Partitions [#5627](https://github.com/apache/incubator-tvm/pull/5627)\r\n- Extend AttrPattern to support CallNode and FunctionNode attributes [#5637](https://github.com/apache/incubator-tvm/pull/5637)\r\n- Increase bss section size. [#5660](https://github.com/apache/incubator-tvm/pull/5660)\r\n- Add buffer name when creating tensor bindings [#5670](https://github.com/apache/incubator-tvm/pull/5670)\r\n- µtvm debug improvements [#5648](https://github.com/apache/incubator-tvm/pull/5648)\r\n- enable amd_apu device on vulkan target [#5659](https://github.com/apache/incubator-tvm/pull/5659)\r\n- Support TupleWrapper as direct ancestor of control flow ops [#5639](https://github.com/apache/incubator-tvm/pull/5639)\r\n- add tvm.micro pydoc to sphinx [#5661](https://github.com/apache/incubator-tvm/pull/5661)\r\n- Add a regression testcase for #5674 [#5677](https://github.com/apache/incubator-tvm/pull/5677)\r\n- Fix C++ RPC build problem on Linux [#5671](https://github.com/apache/incubator-tvm/pull/5671)\r\n- Add a check Callback to the Pattern Paritioner [#5646](https://github.com/apache/incubator-tvm/pull/5646)\r\n- Call previous excepthook in tvm_excepthook. [#5675](https://github.com/apache/incubator-tvm/pull/5675)\r\n- Fix the shift column for scale_shift_nchw and scale_shift_nhwc in C topi [#5679](https://github.com/apache/incubator-tvm/pull/5679)\r\n- Support more dtypes for TVMDSOOp [#5694](https://github.com/apache/incubator-tvm/pull/5694)\r\n- In memory_plan, check if value is not None, instead of just checking value as boolean. [#5700](https://github.com/apache/incubator-tvm/pull/5700)\r\n- Fix flaky test_topi_pooling.py:test_adaptive_pool [#5736](https://github.com/apache/incubator-tvm/pull/5736)\r\n- Fix the values for test_fmod since it fails way too often otherwise [#5723](https://github.com/apache/incubator-tvm/pull/5723)\r\n- fix small bug about dense_grad [#5695](https://github.com/apache/incubator-tvm/pull/5695)\r\n- Fix sequential cpp test [#5745](https://github.com/apache/incubator-tvm/pull/5745)\r\n- Add Scatter to Topi/Relay/ONNX via hybrid script [#5619](https://github.com/apache/incubator-tvm/pull/5619)\r\n- Clean WASM environment before build [#5759](https://github.com/apache/incubator-tvm/pull/5759)\r\n- Fix gelu in PyTorch frontend, tighten numerical checks [#5763](https://github.com/apache/incubator-tvm/pull/5763)\r\n- fix #5686: remove a overstrict assert in MakeAllreduce (#5686) [#5785](https://github.com/apache/incubator-tvm/pull/5785)\r\n- Improve Pattern Language Docs [#5676](https://github.com/apache/incubator-tvm/pull/5676)\r\n- Add missing expr visitor for any [#6082](https://github.com/apache/incubator-tvm/pull/6082)\r\n- Remove the tvm web from version update [#6122](https://github.com/apache/incubator-tvm/pull/6122)\r\n- Clear relay cache after every build & Clear warning message cache after autotvm task extraction [#6131](https://github.com/apache/incubator-tvm/pull/6131)\r\n- avoid unexpected throw in AttrInitEntry [#6128](https://github.com/apache/incubator-tvm/pull/6128)\r\n- Verify that tensor reshape is valid. [#6215](https://github.com/apache/incubator-tvm/pull/6215)\r\n- Use LocalRunner by default in the tutorial tune_relay_cuda.py [#6001](https://github.com/apache/incubator-tvm/pull/6001)\r\n- Undefined names: import os for line 324 & import re for line 308 [#6003](https://github.com/apache/incubator-tvm/pull/6003)\r\n- GitHub Actions upgrade to actions/setup-python@v2 [#6002](https://github.com/apache/incubator-tvm/pull/6002)\r\n- Only pass pythonpath for ci images [#6005](https://github.com/apache/incubator-tvm/pull/6005)\r\n- Auto-convert shuffle with single index to “extract element” [#6006](https://github.com/apache/incubator-tvm/pull/6006)\r\n- Cache object refs in loop partitioner instead of object pointers [#6004](https://github.com/apache/incubator-tvm/pull/6004)\r\n- Fix test_arith_solve_linear_inequality.py::test_multi_equal [#6014](https://github.com/apache/incubator-tvm/pull/6014)\r\n- MXNet frontend support for AMP cast op [#5976](https://github.com/apache/incubator-tvm/pull/5976)\r\n- Demo showing how to run a pruned model. [#5975](https://github.com/apache/incubator-tvm/pull/5975)\r\n- Move compiler related registry items to vta/build_module.py [#6012](https://github.com/apache/incubator-tvm/pull/6012)\r\n- Pin keras version [#6032](https://github.com/apache/incubator-tvm/pull/6032)\r\n- Fix in arm_cpu/conv2d_alter_op for NHWC quantized [#6027](https://github.com/apache/incubator-tvm/pull/6027)\r\n- Add creation of Hexagon device in RPC client [#6035](https://github.com/apache/incubator-tvm/pull/6035)\r\n- Terminate basic block after “ret” instruction [#6036](https://github.com/apache/incubator-tvm/pull/6036)\r\n- µTVM CRT modifications for on-device RPC server [#5921](https://github.com/apache/incubator-tvm/pull/5921)\r\n- Create TBAA information based on the unrelying buffer type [#6046](https://github.com/apache/incubator-tvm/pull/6046)\r\n- Add support for tflite arg_min and arg_max [#5992](https://github.com/apache/incubator-tvm/pull/5992)\r\n- Fix fully_connected converter when batch size is not 1 [#6038](https://github.com/apache/incubator-tvm/pull/6038)\r\n- Fix a primitive check error [#5991](https://github.com/apache/incubator-tvm/pull/5991)\r\n- Refactor to expose MakeOp functions to C++ [#6047](https://github.com/apache/incubator-tvm/pull/6047)\r\n- Fix conv2_gemm after target structure update [#6037](https://github.com/apache/incubator-tvm/pull/6037)\r\n- Remove use of designated initializers from hexagon_module.cc [#6055](https://github.com/apache/incubator-tvm/pull/6055)\r\n- Build crttest and cpptest separately. [#6057](https://github.com/apache/incubator-tvm/pull/6057)\r\n- Fix pytorch frontend prim::Constant issue [#6051](https://github.com/apache/incubator-tvm/pull/6051)\r\n- update frontend tutorials to new model based runtime interface [#6063](https://github.com/apache/incubator-tvm/pull/6063)\r\n- Remove unnecessary std::cout [#6072](https://github.com/apache/incubator-tvm/pull/6072)\r\n- Fix error message in Buffer::vstore, NFC [#6056](https://github.com/apache/incubator-tvm/pull/6056)\r\n- Fix FSIM Compile Error. [#6070](https://github.com/apache/incubator-tvm/pull/6070)\r\n- Improve vector simplification for float operands [#6043](https://github.com/apache/incubator-tvm/pull/6043)\r\n- Fix LocalBuilder on macOS with python 3.8. [#6083](https://github.com/apache/incubator-tvm/pull/6083)\r\n- Add missing test for fast erf [#6058](https://github.com/apache/incubator-tvm/pull/6058)\r\n- Fixed point multiplication improvements for AArch64 [#5980](https://github.com/apache/incubator-tvm/pull/5980)\r\n- Fix code generation bugs for C/CUDA & Improve VerifyGPUCode pass [#6041](https://github.com/apache/incubator-tvm/pull/6041)\r\n- Delete declaration of unused op_node [#6102](https://github.com/apache/incubator-tvm/pull/6102)\r\n- Load configs even it has no entity [#6100](https://github.com/apache/incubator-tvm/pull/6100)\r\n- Update SGX example Cargo.toml [#6067](https://github.com/apache/incubator-tvm/pull/6067)\r\n- Add default value for option USE_DNNL_CODEGEN in the cmake [#6099](https://github.com/apache/incubator-tvm/pull/6099)\r\n- Update installation doc with minor improvements [#6104](https://github.com/apache/incubator-tvm/pull/6104)\r\n- lint: add opencl .cl file type [#6092](https://github.com/apache/incubator-tvm/pull/6092)\r\n- Clean up conversions between TVM and Rust functions [#6114](https://github.com/apache/incubator-tvm/pull/6114)\r\n- Improve reduction schedule on arm CPUs [#6110](https://github.com/apache/incubator-tvm/pull/6110)\r\n- Register Shape Func for Some Operators to Handle Dynamic Shapes [#5955](https://github.com/apache/incubator-tvm/pull/5955)\r\n- Fix variable name conflict with OpenCL keyword [#6048](https://github.com/apache/incubator-tvm/pull/6048)\r\n- Some rust cleanups [#6116](https://github.com/apache/incubator-tvm/pull/6116)\r\n- Option to specify alternate directory to output build to [#6016](https://github.com/apache/incubator-tvm/pull/6016)\r\n- Add ‘get_num_inputs’ to GraphRuntime [#6118](https://github.com/apache/incubator-tvm/pull/6118)\r\n- TFLite quantized conv test [#6084](https://github.com/apache/incubator-tvm/pull/6084)\r\n- Fix autotvm on the conv2d_nchw_winograd.mali operator [#6130](https://github.com/apache/incubator-tvm/pull/6130)\r\n- add attr option mfloat-abi for arm32 [#6123](https://github.com/apache/incubator-tvm/pull/6123)\r\n- Fix CUDA Library Tuning [#6132](https://github.com/apache/incubator-tvm/pull/6132)\r\n- Add missing RPC sources after refactor [#6113](https://github.com/apache/incubator-tvm/pull/6113)\r\n- Correct runtime.load_module [#6161](https://github.com/apache/incubator-tvm/pull/6161)\r\n- Improve error messages in graph tuner, graph runtime, and module loader. [#6148](https://github.com/apache/incubator-tvm/pull/6148)\r\n- Fix some shape mismatches between TF and Relay [#6166](https://github.com/apache/incubator-tvm/pull/6166)\r\n- Improve doc string [#6176](https://github.com/apache/incubator-tvm/pull/6176)\r\n- Fix incorrect function signature in header [#6172](https://github.com/apache/incubator-tvm/pull/6172)\r\n- Fix alignment of note [#6181](https://github.com/apache/incubator-tvm/pull/6181)\r\n- Implemented PADV2 Operator for TFLite and added support for constant values in PAD. [#6167](https://github.com/apache/incubator-tvm/pull/6167)\r\n- Unary ops support added in frontend [#6196](https://github.com/apache/incubator-tvm/pull/6196)\r\n- Change the meaning of conv3d_transpose output_padding to match conv{1,2}d_transpose [#6065](https://github.com/apache/incubator-tvm/pull/6065)\r\n- Fix compile warnings. [#6204](https://github.com/apache/incubator-tvm/pull/6204)\r\n- Fix -mfloat-abi=soft compilation for ARM with OpenCL target [#6150](https://github.com/apache/incubator-tvm/pull/6150)\r\n- Match pytorch 1.6 googlenet pretrained model (#6201) [#6212](https://github.com/apache/incubator-tvm/pull/6212)\r\n- Mod operator, bug fix [#6160](https://github.com/apache/incubator-tvm/pull/6160)\r\n- RESHAPE with dynamic shape arg in TFLite frontend [#6208](https://github.com/apache/incubator-tvm/pull/6208)\r\n- Fix compilation error with cuda 11 [#6213](https://github.com/apache/incubator-tvm/pull/6213)\r\n- Fix port_end wrong default value 9199 to 9099 for keeping same with source code [#6220](https://github.com/apache/incubator-tvm/pull/6220)\r\n- Std op without specified dimensions support [#6226](https://github.com/apache/incubator-tvm/pull/6226)\r\n- fix crt building and running error [#6231](https://github.com/apache/incubator-tvm/pull/6231)\r\n- Implemented ONE_HOT Operator for TFLite. [#6223](https://github.com/apache/incubator-tvm/pull/6223))\r\n- Avoid unexpected throw in AttrInitEntry [#6128](https://github.com/apache/incubator-tvm/pull/6128)\r\n- Added casting to hybrid script doc and fixed pass infra doc [#6174](https://github.com/apache/incubator-tvm/pull/6174)\r\n- Fix compile warnings. [#6204](https://github.com/apache/incubator-tvm/pull/6204)\r\n- Fix -mfloat-abi=soft compilation for ARM with OpenCL target [#6150](https://github.com/apache/incubator-tvm/pull/6150)\r\n- Mod operator, bug fix [#6160](https://github.com/apache/incubator-tvm/pull/6160)\r\n- Fix compilation error with cuda 11 [#6213](https://github.com/apache/incubator-tvm/pull/6213)\r\n- Fix port_end wrong default value 9199 to 9099 for keeping same with source code [#6220](https://github.com/apache/incubator-tvm/pull/6220)\r\n- Std op without specified dimensions support [#6226](https://github.com/apache/incubator-tvm/pull/6226)\r\n- Verify that tensor reshape is valid. [#6215](https://github.com/apache/incubator-tvm/pull/6215)\r\n- Fix crt building and running error [#6231](https://github.com/apache/incubator-tvm/pull/6231)\r\n- Fix conv2d_transpose output padding [#6236](https://github.com/apache/incubator-tvm/pull/6236)\r\n- Fix cuda half math function is undefined: hpow, htanh [#6225](https://github.com/apache/incubator-tvm/pull/6225)\r\n- Fix division range estimation error in simplifier [#6244](https://github.com/apache/incubator-tvm/pull/6244)\r\n- Fix newer GCC compiler warnings. [#6257](https://github.com/apache/incubator-tvm/pull/6257)\r\n- Support _contrib_SyncBatchNorm [#6245](https://github.com/apache/incubator-tvm/pull/6245)\r\n- Fix reduction [#6250](https://github.com/apache/incubator-tvm/pull/6250)\r\n- Add apt repository for clang-11 and llvm-11 [#6256](https://github.com/apache/incubator-tvm/pull/6256)\r\n- Update tutorial to new TARGET as micro_dev is no more [#6262](https://github.com/apache/incubator-tvm/pull/6262)\r\n- Fix clang-format [#6264](https://github.com/apache/incubator-tvm/pull/6264)\r\n- Trivial fix, up the rodata section for the discovery board to 512 bytes. [#6259](https://github.com/apache/incubator-tvm/pull/6259)\r\n- Fix cuda half math function is undefined: hpow, htanh [#6253](https://github.com/apache/incubator-tvm/pull/6253)\r\n- Add dilation in x86 NCHWc depthwise conv support [#6267](https://github.com/apache/incubator-tvm/pull/6267)\r\n- Decrease test times by introducing testing model [#6235](https://github.com/apache/incubator-tvm/pull/6235)\r\n- Add support for parsing the any dimension. [#6277](https://github.com/apache/incubator-tvm/pull/6277)\r\n- Improve error messages for memory verifier and gpu memory verifier [#6281](https://github.com/apache/incubator-tvm/pull/6281)\r\n- Reflect Compile-Time CMake Options into [libtvm.so](http://libtvm.so/) [#6280](https://github.com/apache/incubator-tvm/pull/6280)\r\n- Add cmake options into libinfo [#6286](https://github.com/apache/incubator-tvm/pull/6286)\r\n- Update slice to infer attributes when not graph inputs [#6276](https://github.com/apache/incubator-tvm/pull/6276)\r\n- Use rpc.LocalSession for simple tests [#6294](https://github.com/apache/incubator-tvm/pull/6294)\r\n- Fix random fail [#6312](https://github.com/apache/incubator-tvm/pull/6312)\r\n- Fix resize test [#6298](https://github.com/apache/incubator-tvm/pull/6298)\r\n- Fix cython FFI compact with np.int64 [#6321](https://github.com/apache/incubator-tvm/pull/6321)\r\n- Fix relay vm optimize [#6322](https://github.com/apache/incubator-tvm/pull/6322)\r\n- Changed TVMCTVMContext to TVMContext [#6306](https://github.com/apache/incubator-tvm/pull/6306)\r\n- Make able to compile with MSVC [#6341](https://github.com/apache/incubator-tvm/pull/6341)\r\n- ROCm changed name of library and removed the old one in ROCm 3.7 release. [#6345](https://github.com/apache/incubator-tvm/pull/6345)\r\n- Compatible for ROCm before 3.7 [#6359](https://github.com/apache/incubator-tvm/pull/6359)\r\n- Use clear name that is separate from ASF brand for cache [#6360](https://github.com/apache/incubator-tvm/pull/6360)\r\n- Fix Dockerfile.demo_android [#6361](https://github.com/apache/incubator-tvm/pull/6361)\r\n- Fx sparse dense schedule on cuda [#5803](https://github.com/apache/incubator-tvm/pull/5803)\r\n- Fix strategy for sparse dense cuda [#5782](https://github.com/apache/incubator-tvm/pull/5782)\r\n- Fix x86 conv2d template when tuning with unpacked layout [#5938](https://github.com/apache/incubator-tvm/pull/5938)\r\n- Fix the filter width parameter in depthwise_conv2d [#6081](https://github.com/apache/incubator-tvm/pull/6081)\r\n- Fix reshape usage in ARM schedule [#5732](https://github.com/apache/incubator-tvm/pull/5732)\r\n- Missing header [#4865](https://github.com/apache/incubator-tvm/pull/4865)\r\n- Fix conv2d_transpose output padding [#6236](https://github.com/apache/incubator-tvm/pull/6236)\r\n- Simplify reduce expression in te.gradient #6611\r\n\r\n# Known Issues\r\n\r\n# Deprecation\r\n\r\n- Deprecating NNVM ([#4535](https://github.com/apache/incubator-tvm/pull/4535), [#4562](https://github.com/apache/incubator-tvm/pull/4562), [#4565](https://github.com/apache/incubator-tvm/pull/4565), [#4571](https://github.com/apache/incubator-tvm/pull/4571))\r\n- Deprecate FreeStmt [#5890](https://github.com/apache/incubator-tvm/pull/5890)\r\n- Remove legacy compute_expr.h [#5738](https://github.com/apache/incubator-tvm/pull/5738)\r\n- Deprecate OpenGL [#5711](https://github.com/apache/incubator-tvm/pull/5711), [#5712](https://github.com/apache/incubator-tvm/pull/5712)","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/698661521/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/698661675","html_url":"https://github.com/apache/tvm/pull/6545#issuecomment-698661675","issue_url":"https://api.github.com/repos/apache/tvm/issues/6545","id":698661675,"node_id":"MDEyOklzc3VlQ29tbWVudDY5ODY2MTY3NQ==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-25T00:53:24Z","updated_at":"2020-09-25T00:53:24Z","author_association":"MEMBER","body":"I think one potential concern is what will happen if we load a DLContext from the memory, and perhaps it would be better to make sure the data structure is consistent with the FFI. ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/698661675/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/698662747","html_url":"https://github.com/apache/tvm/issues/6421#issuecomment-698662747","issue_url":"https://api.github.com/repos/apache/tvm/issues/6421","id":698662747,"node_id":"MDEyOklzc3VlQ29tbWVudDY5ODY2Mjc0Nw==","user":{"login":"ZihengJiang","id":17693755,"node_id":"MDQ6VXNlcjE3NjkzNzU1","avatar_url":"https://avatars.githubusercontent.com/u/17693755?v=4","gravatar_id":"","url":"https://api.github.com/users/ZihengJiang","html_url":"https://github.com/ZihengJiang","followers_url":"https://api.github.com/users/ZihengJiang/followers","following_url":"https://api.github.com/users/ZihengJiang/following{/other_user}","gists_url":"https://api.github.com/users/ZihengJiang/gists{/gist_id}","starred_url":"https://api.github.com/users/ZihengJiang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ZihengJiang/subscriptions","organizations_url":"https://api.github.com/users/ZihengJiang/orgs","repos_url":"https://api.github.com/users/ZihengJiang/repos","events_url":"https://api.github.com/users/ZihengJiang/events{/privacy}","received_events_url":"https://api.github.com/users/ZihengJiang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-25T00:57:20Z","updated_at":"2020-09-25T00:57:20Z","author_association":"CONTRIBUTOR","body":"@apache/tvm-committers  @jroesch @u99127 @comaniac \r\n\r\nWe have a release note candidate here: https://github.com/apache/incubator-tvm/issues/6486\r\n\r\nPlease comment it if you have anything want to be added into this release or other opinion.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/698662747/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":1,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/698672100","html_url":"https://github.com/apache/tvm/issues/6548#issuecomment-698672100","issue_url":"https://api.github.com/repos/apache/tvm/issues/6548","id":698672100,"node_id":"MDEyOklzc3VlQ29tbWVudDY5ODY3MjEwMA==","user":{"login":"jcf94","id":12119698,"node_id":"MDQ6VXNlcjEyMTE5Njk4","avatar_url":"https://avatars.githubusercontent.com/u/12119698?v=4","gravatar_id":"","url":"https://api.github.com/users/jcf94","html_url":"https://github.com/jcf94","followers_url":"https://api.github.com/users/jcf94/followers","following_url":"https://api.github.com/users/jcf94/following{/other_user}","gists_url":"https://api.github.com/users/jcf94/gists{/gist_id}","starred_url":"https://api.github.com/users/jcf94/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jcf94/subscriptions","organizations_url":"https://api.github.com/users/jcf94/orgs","repos_url":"https://api.github.com/users/jcf94/repos","events_url":"https://api.github.com/users/jcf94/events{/privacy}","received_events_url":"https://api.github.com/users/jcf94/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-25T01:35:19Z","updated_at":"2020-09-25T01:35:19Z","author_association":"CONTRIBUTOR","body":"Thanks. I will check this carefully and fix it as soon as possible.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/698672100/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/698690097","html_url":"https://github.com/apache/tvm/pull/6545#issuecomment-698690097","issue_url":"https://api.github.com/repos/apache/tvm/issues/6545","id":698690097,"node_id":"MDEyOklzc3VlQ29tbWVudDY5ODY5MDA5Nw==","user":{"login":"intheworld","id":9208685,"node_id":"MDQ6VXNlcjkyMDg2ODU=","avatar_url":"https://avatars.githubusercontent.com/u/9208685?v=4","gravatar_id":"","url":"https://api.github.com/users/intheworld","html_url":"https://github.com/intheworld","followers_url":"https://api.github.com/users/intheworld/followers","following_url":"https://api.github.com/users/intheworld/following{/other_user}","gists_url":"https://api.github.com/users/intheworld/gists{/gist_id}","starred_url":"https://api.github.com/users/intheworld/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/intheworld/subscriptions","organizations_url":"https://api.github.com/users/intheworld/orgs","repos_url":"https://api.github.com/users/intheworld/repos","events_url":"https://api.github.com/users/intheworld/events{/privacy}","received_events_url":"https://api.github.com/users/intheworld/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-25T02:48:40Z","updated_at":"2020-09-25T02:49:10Z","author_association":"CONTRIBUTOR","body":"> @intheworld could you say a little more about why this change is needed? I think the point of Context is that it's a \"safer\" Rust version of DLContext. As long as you check that `device_id` is positive, the conversion should be fine (typed conversion, not just casting). I'd rather have usize (or u32) on the Rust side, since you don't have to worry about negative device ids\r\n\r\nI see the following code in PackedFunc.rs\r\nimpl_pod_value!(Int, i64, [i8, i16, i32, i64, isize]);\r\nimpl_pod_value!(UInt, i64, [u8, u16, u32, u64, usize]);\r\n\r\nusize will be passed in i64, but considered as UInt, which caused type-check of device_id fail. Which I have mentioned in issue #6528. \r\n\r\nIn dlpack.h, \r\ntypedef struct {\r\n  /*! \\brief The device type used in the device. */\r\n  DLDeviceType device_type;\r\n  /*! \\brief The device index */\r\n  int device_id;\r\n} DLContext;\r\n\r\nMy thought is to make the type consistent. \r\n","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/698690097/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/698704176","html_url":"https://github.com/apache/tvm/pull/6555#issuecomment-698704176","issue_url":"https://api.github.com/repos/apache/tvm/issues/6555","id":698704176,"node_id":"MDEyOklzc3VlQ29tbWVudDY5ODcwNDE3Ng==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-25T03:48:17Z","updated_at":"2020-09-25T03:48:17Z","author_association":"MEMBER","body":"Thanks @lixiaoquan !","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/698704176/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/698708259","html_url":"https://github.com/apache/tvm/pull/6550#issuecomment-698708259","issue_url":"https://api.github.com/repos/apache/tvm/issues/6550","id":698708259,"node_id":"MDEyOklzc3VlQ29tbWVudDY5ODcwODI1OQ==","user":{"login":"anijain2305","id":13822661,"node_id":"MDQ6VXNlcjEzODIyNjYx","avatar_url":"https://avatars.githubusercontent.com/u/13822661?v=4","gravatar_id":"","url":"https://api.github.com/users/anijain2305","html_url":"https://github.com/anijain2305","followers_url":"https://api.github.com/users/anijain2305/followers","following_url":"https://api.github.com/users/anijain2305/following{/other_user}","gists_url":"https://api.github.com/users/anijain2305/gists{/gist_id}","starred_url":"https://api.github.com/users/anijain2305/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/anijain2305/subscriptions","organizations_url":"https://api.github.com/users/anijain2305/orgs","repos_url":"https://api.github.com/users/anijain2305/repos","events_url":"https://api.github.com/users/anijain2305/events{/privacy}","received_events_url":"https://api.github.com/users/anijain2305/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-25T04:06:28Z","updated_at":"2020-09-25T04:06:28Z","author_association":"CONTRIBUTOR","body":"Thanks @jainris @siju-samuel This is merged!","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/698708259/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/698778767","html_url":"https://github.com/apache/tvm/pull/6557#issuecomment-698778767","issue_url":"https://api.github.com/repos/apache/tvm/issues/6557","id":698778767,"node_id":"MDEyOklzc3VlQ29tbWVudDY5ODc3ODc2Nw==","user":{"login":"FrozenGene","id":7287321,"node_id":"MDQ6VXNlcjcyODczMjE=","avatar_url":"https://avatars.githubusercontent.com/u/7287321?v=4","gravatar_id":"","url":"https://api.github.com/users/FrozenGene","html_url":"https://github.com/FrozenGene","followers_url":"https://api.github.com/users/FrozenGene/followers","following_url":"https://api.github.com/users/FrozenGene/following{/other_user}","gists_url":"https://api.github.com/users/FrozenGene/gists{/gist_id}","starred_url":"https://api.github.com/users/FrozenGene/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/FrozenGene/subscriptions","organizations_url":"https://api.github.com/users/FrozenGene/orgs","repos_url":"https://api.github.com/users/FrozenGene/repos","events_url":"https://api.github.com/users/FrozenGene/events{/privacy}","received_events_url":"https://api.github.com/users/FrozenGene/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-25T07:45:54Z","updated_at":"2020-09-25T07:45:54Z","author_association":"MEMBER","body":"Do you try to build debug version of TVM and use `gdb --args python ...` to see the callstack and which code produce this error? Just `try...catch` seems a little brute force for me.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/698778767/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/698780208","html_url":"https://github.com/apache/tvm/pull/6557#issuecomment-698780208","issue_url":"https://api.github.com/repos/apache/tvm/issues/6557","id":698780208,"node_id":"MDEyOklzc3VlQ29tbWVudDY5ODc4MDIwOA==","user":{"login":"jcf94","id":12119698,"node_id":"MDQ6VXNlcjEyMTE5Njk4","avatar_url":"https://avatars.githubusercontent.com/u/12119698?v=4","gravatar_id":"","url":"https://api.github.com/users/jcf94","html_url":"https://github.com/jcf94","followers_url":"https://api.github.com/users/jcf94/followers","following_url":"https://api.github.com/users/jcf94/following{/other_user}","gists_url":"https://api.github.com/users/jcf94/gists{/gist_id}","starred_url":"https://api.github.com/users/jcf94/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jcf94/subscriptions","organizations_url":"https://api.github.com/users/jcf94/orgs","repos_url":"https://api.github.com/users/jcf94/repos","events_url":"https://api.github.com/users/jcf94/events{/privacy}","received_events_url":"https://api.github.com/users/jcf94/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-25T07:49:08Z","updated_at":"2020-09-25T07:49:36Z","author_association":"CONTRIBUTOR","body":"> Do you try to build debug version of TVM and use `gdb --args python ...` to see the callstack and which code produce this error? Just `try...catch` seems a little brute force for me.\r\n\r\nThe problem is this is not always reproduceable. The only sure thing is that the bug is caused by `InitChangeComputeLocation()` rule.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/698780208/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/698788452","html_url":"https://github.com/apache/tvm/pull/6557#issuecomment-698788452","issue_url":"https://api.github.com/repos/apache/tvm/issues/6557","id":698788452,"node_id":"MDEyOklzc3VlQ29tbWVudDY5ODc4ODQ1Mg==","user":{"login":"FrozenGene","id":7287321,"node_id":"MDQ6VXNlcjcyODczMjE=","avatar_url":"https://avatars.githubusercontent.com/u/7287321?v=4","gravatar_id":"","url":"https://api.github.com/users/FrozenGene","html_url":"https://github.com/FrozenGene","followers_url":"https://api.github.com/users/FrozenGene/followers","following_url":"https://api.github.com/users/FrozenGene/following{/other_user}","gists_url":"https://api.github.com/users/FrozenGene/gists{/gist_id}","starred_url":"https://api.github.com/users/FrozenGene/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/FrozenGene/subscriptions","organizations_url":"https://api.github.com/users/FrozenGene/orgs","repos_url":"https://api.github.com/users/FrozenGene/repos","events_url":"https://api.github.com/users/FrozenGene/events{/privacy}","received_events_url":"https://api.github.com/users/FrozenGene/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-25T08:07:36Z","updated_at":"2020-09-25T08:07:36Z","author_association":"MEMBER","body":"> > Do you try to build debug version of TVM and use `gdb --args python ...` to see the callstack and which code produce this error? Just `try...catch` seems a little brute force for me.\r\n> \r\n> The problem is this is not always reproduceable. The only sure thing is that the bug is caused by `InitChangeComputeLocation()` rule.\r\n\r\nOne way you could do is remove `CHECK` inside tvm and just use script run many times and then let the program crash, then we will produce one `core` file, you could use `gdb` debug with `core` file now.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/698788452/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/698873119","html_url":"https://github.com/apache/tvm/pull/6537#issuecomment-698873119","issue_url":"https://api.github.com/repos/apache/tvm/issues/6537","id":698873119,"node_id":"MDEyOklzc3VlQ29tbWVudDY5ODg3MzExOQ==","user":{"login":"leandron","id":437416,"node_id":"MDQ6VXNlcjQzNzQxNg==","avatar_url":"https://avatars.githubusercontent.com/u/437416?v=4","gravatar_id":"","url":"https://api.github.com/users/leandron","html_url":"https://github.com/leandron","followers_url":"https://api.github.com/users/leandron/followers","following_url":"https://api.github.com/users/leandron/following{/other_user}","gists_url":"https://api.github.com/users/leandron/gists{/gist_id}","starred_url":"https://api.github.com/users/leandron/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leandron/subscriptions","organizations_url":"https://api.github.com/users/leandron/orgs","repos_url":"https://api.github.com/users/leandron/repos","events_url":"https://api.github.com/users/leandron/events{/privacy}","received_events_url":"https://api.github.com/users/leandron/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-25T11:17:46Z","updated_at":"2020-09-25T11:31:09Z","author_association":"CONTRIBUTOR","body":"> We could add `--num-threads` to control how many cores to tune. This is important for remote devices like ARM\r\n\r\n@FrozenGene that looks interesting. Just to clarify, is this not related to the parameter `n_parallel`, from `autotvm.RPCRunner`, already supported via `--parallel`?\r\n\r\n> We could add `--cpu-mode` to control BIG core or LITTLE core to tune. Imagine remote devices like have A72 + A35. This feature maybe should require us to expose one interface in our AutoTVM to use API `runtime.config_threadpool`.\r\n\r\nYes, that looks useful. Can we add it in a separate PR, considering it requires some infra to be exposed to AutoTVM?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/698873119/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/698874588","html_url":"https://github.com/apache/tvm/pull/6445#issuecomment-698874588","issue_url":"https://api.github.com/repos/apache/tvm/issues/6445","id":698874588,"node_id":"MDEyOklzc3VlQ29tbWVudDY5ODg3NDU4OA==","user":{"login":"giuseros","id":2017147,"node_id":"MDQ6VXNlcjIwMTcxNDc=","avatar_url":"https://avatars.githubusercontent.com/u/2017147?v=4","gravatar_id":"","url":"https://api.github.com/users/giuseros","html_url":"https://github.com/giuseros","followers_url":"https://api.github.com/users/giuseros/followers","following_url":"https://api.github.com/users/giuseros/following{/other_user}","gists_url":"https://api.github.com/users/giuseros/gists{/gist_id}","starred_url":"https://api.github.com/users/giuseros/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/giuseros/subscriptions","organizations_url":"https://api.github.com/users/giuseros/orgs","repos_url":"https://api.github.com/users/giuseros/repos","events_url":"https://api.github.com/users/giuseros/events{/privacy}","received_events_url":"https://api.github.com/users/giuseros/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-25T11:21:23Z","updated_at":"2020-09-25T11:21:23Z","author_association":"CONTRIBUTOR","body":"Hi @mbaret ,\r\nThanks for the review! \r\n\r\nI addressed the comments and added compilation tests to verify the compilation flow with dot-product. \r\n","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/698874588/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/698888096","html_url":"https://github.com/apache/tvm/pull/6537#issuecomment-698888096","issue_url":"https://api.github.com/repos/apache/tvm/issues/6537","id":698888096,"node_id":"MDEyOklzc3VlQ29tbWVudDY5ODg4ODA5Ng==","user":{"login":"FrozenGene","id":7287321,"node_id":"MDQ6VXNlcjcyODczMjE=","avatar_url":"https://avatars.githubusercontent.com/u/7287321?v=4","gravatar_id":"","url":"https://api.github.com/users/FrozenGene","html_url":"https://github.com/FrozenGene","followers_url":"https://api.github.com/users/FrozenGene/followers","following_url":"https://api.github.com/users/FrozenGene/following{/other_user}","gists_url":"https://api.github.com/users/FrozenGene/gists{/gist_id}","starred_url":"https://api.github.com/users/FrozenGene/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/FrozenGene/subscriptions","organizations_url":"https://api.github.com/users/FrozenGene/orgs","repos_url":"https://api.github.com/users/FrozenGene/repos","events_url":"https://api.github.com/users/FrozenGene/events{/privacy}","received_events_url":"https://api.github.com/users/FrozenGene/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-25T11:57:40Z","updated_at":"2020-09-25T11:57:40Z","author_association":"MEMBER","body":"> > We could add `--num-threads` to control how many cores to tune. This is important for remote devices like ARM\r\n> \r\n> @FrozenGene that looks interesting. Just to clarify, is this not related to the parameter `n_parallel`, from `autotvm.RPCRunner`, already supported via `--parallel`?\r\n> \r\n\r\nYes, it is not related with `n_parallel`, which is to support we have multi devices to tune.\r\n\r\n> > We could add `--cpu-mode` to control BIG core or LITTLE core to tune. Imagine remote devices like have A72 + A35. This feature maybe should require us to expose one interface in our AutoTVM to use API `runtime.config_threadpool`.\r\n> \r\n> Yes, that looks useful. Can we add it in a separate PR, considering it requires some infra to be exposed to AutoTVM?\r\n\r\nFine to me.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/698888096/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/698898950","html_url":"https://github.com/apache/tvm/pull/6537#issuecomment-698898950","issue_url":"https://api.github.com/repos/apache/tvm/issues/6537","id":698898950,"node_id":"MDEyOklzc3VlQ29tbWVudDY5ODg5ODk1MA==","user":{"login":"leandron","id":437416,"node_id":"MDQ6VXNlcjQzNzQxNg==","avatar_url":"https://avatars.githubusercontent.com/u/437416?v=4","gravatar_id":"","url":"https://api.github.com/users/leandron","html_url":"https://github.com/leandron","followers_url":"https://api.github.com/users/leandron/followers","following_url":"https://api.github.com/users/leandron/following{/other_user}","gists_url":"https://api.github.com/users/leandron/gists{/gist_id}","starred_url":"https://api.github.com/users/leandron/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leandron/subscriptions","organizations_url":"https://api.github.com/users/leandron/orgs","repos_url":"https://api.github.com/users/leandron/repos","events_url":"https://api.github.com/users/leandron/events{/privacy}","received_events_url":"https://api.github.com/users/leandron/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-25T12:25:29Z","updated_at":"2020-09-25T12:25:29Z","author_association":"CONTRIBUTOR","body":"> > @FrozenGene that looks interesting. Just to clarify, is this not related to the parameter `n_parallel`, from `autotvm.RPCRunner`, already supported via `--parallel`?\r\n> \r\n> Yes, it is not related with `n_parallel`, which is to support we have multi devices to tune.\r\n\r\nUnderstood. I'm happy to look into it. Can you expand a bit on how that would work, so that we can decide whether adding it here or on a future PR?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/698898950/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/698902831","html_url":"https://github.com/apache/tvm/pull/6537#issuecomment-698902831","issue_url":"https://api.github.com/repos/apache/tvm/issues/6537","id":698902831,"node_id":"MDEyOklzc3VlQ29tbWVudDY5ODkwMjgzMQ==","user":{"login":"FrozenGene","id":7287321,"node_id":"MDQ6VXNlcjcyODczMjE=","avatar_url":"https://avatars.githubusercontent.com/u/7287321?v=4","gravatar_id":"","url":"https://api.github.com/users/FrozenGene","html_url":"https://github.com/FrozenGene","followers_url":"https://api.github.com/users/FrozenGene/followers","following_url":"https://api.github.com/users/FrozenGene/following{/other_user}","gists_url":"https://api.github.com/users/FrozenGene/gists{/gist_id}","starred_url":"https://api.github.com/users/FrozenGene/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/FrozenGene/subscriptions","organizations_url":"https://api.github.com/users/FrozenGene/orgs","repos_url":"https://api.github.com/users/FrozenGene/repos","events_url":"https://api.github.com/users/FrozenGene/events{/privacy}","received_events_url":"https://api.github.com/users/FrozenGene/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-25T12:34:59Z","updated_at":"2020-09-25T12:34:59Z","author_association":"MEMBER","body":"> > > @FrozenGene that looks interesting. Just to clarify, is this not related to the parameter `n_parallel`, from `autotvm.RPCRunner`, already supported via `--parallel`?\r\n> > \r\n> > \r\n> > Yes, it is not related with `n_parallel`, which is to support we have multi devices to tune.\r\n> \r\n> Understood. I'm happy to look into it. Can you expand a bit on how that would work, so that we can decide whether adding it here or on a future PR?\r\n\r\nYou need to do the similar thing like we control BIG / LITTLE core via `runtime.config_threadpool`, this api could let us control how many cores and which cpu mode we like. So I am fine leave this in the future pr together with control BIG / LITTLE cpu mode.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/698902831/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/698948493","html_url":"https://github.com/apache/tvm/pull/6546#issuecomment-698948493","issue_url":"https://api.github.com/repos/apache/tvm/issues/6546","id":698948493,"node_id":"MDEyOklzc3VlQ29tbWVudDY5ODk0ODQ5Mw==","user":{"login":"masahi","id":1776403,"node_id":"MDQ6VXNlcjE3NzY0MDM=","avatar_url":"https://avatars.githubusercontent.com/u/1776403?v=4","gravatar_id":"","url":"https://api.github.com/users/masahi","html_url":"https://github.com/masahi","followers_url":"https://api.github.com/users/masahi/followers","following_url":"https://api.github.com/users/masahi/following{/other_user}","gists_url":"https://api.github.com/users/masahi/gists{/gist_id}","starred_url":"https://api.github.com/users/masahi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/masahi/subscriptions","organizations_url":"https://api.github.com/users/masahi/orgs","repos_url":"https://api.github.com/users/masahi/repos","events_url":"https://api.github.com/users/masahi/events{/privacy}","received_events_url":"https://api.github.com/users/masahi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-25T14:04:44Z","updated_at":"2020-09-25T14:04:44Z","author_association":"MEMBER","body":"Thanks @nolanliou @t-vi ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/698948493/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/698955978","html_url":"https://github.com/apache/tvm/pull/6546#issuecomment-698955978","issue_url":"https://api.github.com/repos/apache/tvm/issues/6546","id":698955978,"node_id":"MDEyOklzc3VlQ29tbWVudDY5ODk1NTk3OA==","user":{"login":"t-vi","id":20787943,"node_id":"MDQ6VXNlcjIwNzg3OTQz","avatar_url":"https://avatars.githubusercontent.com/u/20787943?v=4","gravatar_id":"","url":"https://api.github.com/users/t-vi","html_url":"https://github.com/t-vi","followers_url":"https://api.github.com/users/t-vi/followers","following_url":"https://api.github.com/users/t-vi/following{/other_user}","gists_url":"https://api.github.com/users/t-vi/gists{/gist_id}","starred_url":"https://api.github.com/users/t-vi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/t-vi/subscriptions","organizations_url":"https://api.github.com/users/t-vi/orgs","repos_url":"https://api.github.com/users/t-vi/repos","events_url":"https://api.github.com/users/t-vi/events{/privacy}","received_events_url":"https://api.github.com/users/t-vi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-25T14:17:49Z","updated_at":"2020-09-25T14:17:49Z","author_association":"CONTRIBUTOR","body":"Indeed, thank you!","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/698955978/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/698967534","html_url":"https://github.com/apache/tvm/pull/6554#issuecomment-698967534","issue_url":"https://api.github.com/repos/apache/tvm/issues/6554","id":698967534,"node_id":"MDEyOklzc3VlQ29tbWVudDY5ODk2NzUzNA==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-25T14:38:33Z","updated_at":"2020-09-25T14:38:33Z","author_association":"MEMBER","body":"Please rebase","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/698967534/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/698977213","html_url":"https://github.com/apache/tvm/pull/6545#issuecomment-698977213","issue_url":"https://api.github.com/repos/apache/tvm/issues/6545","id":698977213,"node_id":"MDEyOklzc3VlQ29tbWVudDY5ODk3NzIxMw==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-25T14:55:33Z","updated_at":"2020-09-25T14:55:33Z","author_association":"MEMBER","body":"@intheworld please fix the rust format lint error as indicated by the CI","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/698977213/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":1,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/698978632","html_url":"https://github.com/apache/tvm/issues/6421#issuecomment-698978632","issue_url":"https://api.github.com/repos/apache/tvm/issues/6421","id":698978632,"node_id":"MDEyOklzc3VlQ29tbWVudDY5ODk3ODYzMg==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-25T14:58:11Z","updated_at":"2020-09-25T14:58:30Z","author_association":"MEMBER","body":"Let us plan to cut a release next week. At this point we should consider \"freeze the features\", but please suggest a list of PRs(fixes) that need to be merged.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/698978632/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/699001093","html_url":"https://github.com/apache/tvm/pull/6553#issuecomment-699001093","issue_url":"https://api.github.com/repos/apache/tvm/issues/6553","id":699001093,"node_id":"MDEyOklzc3VlQ29tbWVudDY5OTAwMTA5Mw==","user":{"login":"anijain2305","id":13822661,"node_id":"MDQ6VXNlcjEzODIyNjYx","avatar_url":"https://avatars.githubusercontent.com/u/13822661?v=4","gravatar_id":"","url":"https://api.github.com/users/anijain2305","html_url":"https://github.com/anijain2305","followers_url":"https://api.github.com/users/anijain2305/followers","following_url":"https://api.github.com/users/anijain2305/following{/other_user}","gists_url":"https://api.github.com/users/anijain2305/gists{/gist_id}","starred_url":"https://api.github.com/users/anijain2305/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/anijain2305/subscriptions","organizations_url":"https://api.github.com/users/anijain2305/orgs","repos_url":"https://api.github.com/users/anijain2305/repos","events_url":"https://api.github.com/users/anijain2305/events{/privacy}","received_events_url":"https://api.github.com/users/anijain2305/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-25T15:39:35Z","updated_at":"2020-09-25T15:39:35Z","author_association":"CONTRIBUTOR","body":"Thanks @trevor-m @comaniac this is merged!","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/699001093/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/699030532","html_url":"https://github.com/apache/tvm/pull/6557#issuecomment-699030532","issue_url":"https://api.github.com/repos/apache/tvm/issues/6557","id":699030532,"node_id":"MDEyOklzc3VlQ29tbWVudDY5OTAzMDUzMg==","user":{"login":"comaniac","id":8262694,"node_id":"MDQ6VXNlcjgyNjI2OTQ=","avatar_url":"https://avatars.githubusercontent.com/u/8262694?v=4","gravatar_id":"","url":"https://api.github.com/users/comaniac","html_url":"https://github.com/comaniac","followers_url":"https://api.github.com/users/comaniac/followers","following_url":"https://api.github.com/users/comaniac/following{/other_user}","gists_url":"https://api.github.com/users/comaniac/gists{/gist_id}","starred_url":"https://api.github.com/users/comaniac/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/comaniac/subscriptions","organizations_url":"https://api.github.com/users/comaniac/orgs","repos_url":"https://api.github.com/users/comaniac/repos","events_url":"https://api.github.com/users/comaniac/events{/privacy}","received_events_url":"https://api.github.com/users/comaniac/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-25T16:36:55Z","updated_at":"2020-09-25T16:36:55Z","author_association":"CONTRIBUTOR","body":"Thanks @jcf94 @FrozenGene ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/699030532/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/699031325","html_url":"https://github.com/apache/tvm/issues/6548#issuecomment-699031325","issue_url":"https://api.github.com/repos/apache/tvm/issues/6548","id":699031325,"node_id":"MDEyOklzc3VlQ29tbWVudDY5OTAzMTMyNQ==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-25T16:38:37Z","updated_at":"2020-09-25T16:38:37Z","author_association":"MEMBER","body":"Another related https://ci.tlcpack.ai/blue/organizations/jenkins/tvm/detail/PR-6554/2/pipeline\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/699031325/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/699032258","html_url":"https://github.com/apache/tvm/issues/6548#issuecomment-699032258","issue_url":"https://api.github.com/repos/apache/tvm/issues/6548","id":699032258,"node_id":"MDEyOklzc3VlQ29tbWVudDY5OTAzMjI1OA==","user":{"login":"comaniac","id":8262694,"node_id":"MDQ6VXNlcjgyNjI2OTQ=","avatar_url":"https://avatars.githubusercontent.com/u/8262694?v=4","gravatar_id":"","url":"https://api.github.com/users/comaniac","html_url":"https://github.com/comaniac","followers_url":"https://api.github.com/users/comaniac/followers","following_url":"https://api.github.com/users/comaniac/following{/other_user}","gists_url":"https://api.github.com/users/comaniac/gists{/gist_id}","starred_url":"https://api.github.com/users/comaniac/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/comaniac/subscriptions","organizations_url":"https://api.github.com/users/comaniac/orgs","repos_url":"https://api.github.com/users/comaniac/repos","events_url":"https://api.github.com/users/comaniac/events{/privacy}","received_events_url":"https://api.github.com/users/comaniac/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-25T16:40:40Z","updated_at":"2020-09-25T16:40:40Z","author_association":"CONTRIBUTOR","body":"Looks like the same problem as #6557 fixed. Should be fine now.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/699032258/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/699048824","html_url":"https://github.com/apache/tvm/issues/6421#issuecomment-699048824","issue_url":"https://api.github.com/repos/apache/tvm/issues/6421","id":699048824,"node_id":"MDEyOklzc3VlQ29tbWVudDY5OTA0ODgyNA==","user":{"login":"comaniac","id":8262694,"node_id":"MDQ6VXNlcjgyNjI2OTQ=","avatar_url":"https://avatars.githubusercontent.com/u/8262694?v=4","gravatar_id":"","url":"https://api.github.com/users/comaniac","html_url":"https://github.com/comaniac","followers_url":"https://api.github.com/users/comaniac/followers","following_url":"https://api.github.com/users/comaniac/following{/other_user}","gists_url":"https://api.github.com/users/comaniac/gists{/gist_id}","starred_url":"https://api.github.com/users/comaniac/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/comaniac/subscriptions","organizations_url":"https://api.github.com/users/comaniac/orgs","repos_url":"https://api.github.com/users/comaniac/repos","events_url":"https://api.github.com/users/comaniac/events{/privacy}","received_events_url":"https://api.github.com/users/comaniac/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-25T17:14:11Z","updated_at":"2020-09-25T17:37:23Z","author_association":"CONTRIBUTOR","body":"A brief summary of the related PRs missed in the current release note candidates. Not sure if all of them have to be listed so just for reference. Except for the note followed by the PR indicating its status, all PRs listed here are merged.\r\n\r\nAutomatic Scheduling (Experimental)\r\n  * [AutoTVM][Ansor] Enable random fill and CPU cache flush for AutoTVM and Ansor (#6391)\r\n  * [Minor] Fix typos in Ansor (#6425)\r\n  * [TUTORIAL][ANSOR] Using the template-free auto-scheduler on CPU (#6488)\r\n  * [ANSOR] Auto-scheduler tutorial for GPU and necessary refactor/fix (#6512)\r\n  * [Ansor] Parallel the InitPopulation (#6512)\r\n  * [Ansor][FLAKY] Bug fix for compute at mutation error (#6557)\r\n\r\nBYOC\r\n  * [BYOC][ETHOSN] Introduce further operator support (#6355)\r\n  * [BYOC][JSON] Support input nodes with multiple entries (#6368)\r\n  * [BYOC][ACL] Add maximum support for float32 (#6506)\r\n  * [BYOC][ACL] Support add operation (#6532) -- expected to merge in 1 week.\r\n  * [BYOC][ETHOSN] Fix tests for new module API (#6560) -- expected to merge in 1 week.\r\n\r\nTVMC(Experimental)\r\n  * [tvmc] Introduce 'tune' subcommand (part 3/4) (#6537) -- expected to merge in 1 week.\r\n  * TVMC part 4/4: Tutorial -- not filed yet but I suppose it's required if we list TVMC as an experimental feature in 0.7 (cc @leandron, @u99127).\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/699048824/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/699054679","html_url":"https://github.com/apache/tvm/issues/6421#issuecomment-699054679","issue_url":"https://api.github.com/repos/apache/tvm/issues/6421","id":699054679,"node_id":"MDEyOklzc3VlQ29tbWVudDY5OTA1NDY3OQ==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-25T17:26:19Z","updated_at":"2020-09-25T17:29:09Z","author_association":"MEMBER","body":" At this point, we should focus on stablization, so we don't have to rush in features like Vitis-AI and TensorRT and can do them in the v0.8 cycle(for better stablization).  We should instead list PRs that contains necessary fixes that need to be inlcuded. ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/699054679/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/699060362","html_url":"https://github.com/apache/tvm/issues/6421#issuecomment-699060362","issue_url":"https://api.github.com/repos/apache/tvm/issues/6421","id":699060362,"node_id":"MDEyOklzc3VlQ29tbWVudDY5OTA2MDM2Mg==","user":{"login":"comaniac","id":8262694,"node_id":"MDQ6VXNlcjgyNjI2OTQ=","avatar_url":"https://avatars.githubusercontent.com/u/8262694?v=4","gravatar_id":"","url":"https://api.github.com/users/comaniac","html_url":"https://github.com/comaniac","followers_url":"https://api.github.com/users/comaniac/followers","following_url":"https://api.github.com/users/comaniac/following{/other_user}","gists_url":"https://api.github.com/users/comaniac/gists{/gist_id}","starred_url":"https://api.github.com/users/comaniac/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/comaniac/subscriptions","organizations_url":"https://api.github.com/users/comaniac/orgs","repos_url":"https://api.github.com/users/comaniac/repos","events_url":"https://api.github.com/users/comaniac/events{/privacy}","received_events_url":"https://api.github.com/users/comaniac/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-25T17:37:47Z","updated_at":"2020-09-25T17:37:47Z","author_association":"CONTRIBUTOR","body":"> At this point, we should focus on stablization, so we don't have to rush in features like Vitis-AI and TensorRT and can do them in the v0.8 cycle(for better stablization). We should instead list PRs that contains necessary fixes that need to be inlcuded.\r\n\r\nMake sense. Removed them from the list.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/699060362/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/699068913","html_url":"https://github.com/apache/tvm/pull/6522#issuecomment-699068913","issue_url":"https://api.github.com/repos/apache/tvm/issues/6522","id":699068913,"node_id":"MDEyOklzc3VlQ29tbWVudDY5OTA2ODkxMw==","user":{"login":"tkonolige","id":1501680,"node_id":"MDQ6VXNlcjE1MDE2ODA=","avatar_url":"https://avatars.githubusercontent.com/u/1501680?v=4","gravatar_id":"","url":"https://api.github.com/users/tkonolige","html_url":"https://github.com/tkonolige","followers_url":"https://api.github.com/users/tkonolige/followers","following_url":"https://api.github.com/users/tkonolige/following{/other_user}","gists_url":"https://api.github.com/users/tkonolige/gists{/gist_id}","starred_url":"https://api.github.com/users/tkonolige/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tkonolige/subscriptions","organizations_url":"https://api.github.com/users/tkonolige/orgs","repos_url":"https://api.github.com/users/tkonolige/repos","events_url":"https://api.github.com/users/tkonolige/events{/privacy}","received_events_url":"https://api.github.com/users/tkonolige/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-25T17:55:50Z","updated_at":"2020-09-25T17:55:50Z","author_association":"CONTRIBUTOR","body":"@tqchen @ZihengJiang I've updated this to match the discussion.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/699068913/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/699070121","html_url":"https://github.com/apache/tvm/issues/6559#issuecomment-699070121","issue_url":"https://api.github.com/repos/apache/tvm/issues/6559","id":699070121,"node_id":"MDEyOklzc3VlQ29tbWVudDY5OTA3MDEyMQ==","user":{"login":"jroesch","id":696509,"node_id":"MDQ6VXNlcjY5NjUwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/696509?v=4","gravatar_id":"","url":"https://api.github.com/users/jroesch","html_url":"https://github.com/jroesch","followers_url":"https://api.github.com/users/jroesch/followers","following_url":"https://api.github.com/users/jroesch/following{/other_user}","gists_url":"https://api.github.com/users/jroesch/gists{/gist_id}","starred_url":"https://api.github.com/users/jroesch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jroesch/subscriptions","organizations_url":"https://api.github.com/users/jroesch/orgs","repos_url":"https://api.github.com/users/jroesch/repos","events_url":"https://api.github.com/users/jroesch/events{/privacy}","received_events_url":"https://api.github.com/users/jroesch/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-25T17:58:01Z","updated_at":"2020-09-25T17:58:01Z","author_association":"MEMBER","body":"This old NDArray is based on the previous interface that I've been working on replacing. @mwillsey and I have been redefining NDArray to use TVM's underlying NDArray object based container. see #6408 for in progress work on this. ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/699070121/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/699076064","html_url":"https://github.com/apache/tvm/issues/6559#issuecomment-699076064","issue_url":"https://api.github.com/repos/apache/tvm/issues/6559","id":699076064,"node_id":"MDEyOklzc3VlQ29tbWVudDY5OTA3NjA2NA==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-25T18:09:51Z","updated_at":"2020-09-25T18:09:51Z","author_association":"MEMBER","body":"@12101111 @mwillsey can you land a quick hotfix? ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/699076064/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/699079138","html_url":"https://github.com/apache/tvm/pull/6343#issuecomment-699079138","issue_url":"https://api.github.com/repos/apache/tvm/issues/6343","id":699079138,"node_id":"MDEyOklzc3VlQ29tbWVudDY5OTA3OTEzOA==","user":{"login":"jtuyls","id":17315610,"node_id":"MDQ6VXNlcjE3MzE1NjEw","avatar_url":"https://avatars.githubusercontent.com/u/17315610?v=4","gravatar_id":"","url":"https://api.github.com/users/jtuyls","html_url":"https://github.com/jtuyls","followers_url":"https://api.github.com/users/jtuyls/followers","following_url":"https://api.github.com/users/jtuyls/following{/other_user}","gists_url":"https://api.github.com/users/jtuyls/gists{/gist_id}","starred_url":"https://api.github.com/users/jtuyls/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jtuyls/subscriptions","organizations_url":"https://api.github.com/users/jtuyls/orgs","repos_url":"https://api.github.com/users/jtuyls/repos","events_url":"https://api.github.com/users/jtuyls/events{/privacy}","received_events_url":"https://api.github.com/users/jtuyls/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-25T18:16:14Z","updated_at":"2020-09-25T18:16:14Z","author_association":"CONTRIBUTOR","body":"@comaniac @zhiics @mbaret We updated the PR with changes addressing the comments. Could you have another look? Thanks.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/699079138/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/699086025","html_url":"https://github.com/apache/tvm/pull/6343#issuecomment-699086025","issue_url":"https://api.github.com/repos/apache/tvm/issues/6343","id":699086025,"node_id":"MDEyOklzc3VlQ29tbWVudDY5OTA4NjAyNQ==","user":{"login":"anilmartha","id":24727351,"node_id":"MDQ6VXNlcjI0NzI3MzUx","avatar_url":"https://avatars.githubusercontent.com/u/24727351?v=4","gravatar_id":"","url":"https://api.github.com/users/anilmartha","html_url":"https://github.com/anilmartha","followers_url":"https://api.github.com/users/anilmartha/followers","following_url":"https://api.github.com/users/anilmartha/following{/other_user}","gists_url":"https://api.github.com/users/anilmartha/gists{/gist_id}","starred_url":"https://api.github.com/users/anilmartha/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/anilmartha/subscriptions","organizations_url":"https://api.github.com/users/anilmartha/orgs","repos_url":"https://api.github.com/users/anilmartha/repos","events_url":"https://api.github.com/users/anilmartha/events{/privacy}","received_events_url":"https://api.github.com/users/anilmartha/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-25T18:30:42Z","updated_at":"2020-09-25T18:31:31Z","author_association":"CONTRIBUTOR","body":" Add\r\n@tmoreau89 ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/699086025/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/699122110","html_url":"https://github.com/apache/tvm/pull/6522#issuecomment-699122110","issue_url":"https://api.github.com/repos/apache/tvm/issues/6522","id":699122110,"node_id":"MDEyOklzc3VlQ29tbWVudDY5OTEyMjExMA==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-25T19:48:59Z","updated_at":"2020-09-25T19:48:59Z","author_association":"MEMBER","body":"Thanks @tkonolige please fix the lint error","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/699122110/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/699131319","html_url":"https://github.com/apache/tvm/issues/6421#issuecomment-699131319","issue_url":"https://api.github.com/repos/apache/tvm/issues/6421","id":699131319,"node_id":"MDEyOklzc3VlQ29tbWVudDY5OTEzMTMxOQ==","user":{"login":"ZihengJiang","id":17693755,"node_id":"MDQ6VXNlcjE3NjkzNzU1","avatar_url":"https://avatars.githubusercontent.com/u/17693755?v=4","gravatar_id":"","url":"https://api.github.com/users/ZihengJiang","html_url":"https://github.com/ZihengJiang","followers_url":"https://api.github.com/users/ZihengJiang/followers","following_url":"https://api.github.com/users/ZihengJiang/following{/other_user}","gists_url":"https://api.github.com/users/ZihengJiang/gists{/gist_id}","starred_url":"https://api.github.com/users/ZihengJiang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ZihengJiang/subscriptions","organizations_url":"https://api.github.com/users/ZihengJiang/orgs","repos_url":"https://api.github.com/users/ZihengJiang/repos","events_url":"https://api.github.com/users/ZihengJiang/events{/privacy}","received_events_url":"https://api.github.com/users/ZihengJiang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-25T20:10:04Z","updated_at":"2020-09-25T20:10:04Z","author_association":"CONTRIBUTOR","body":"@comaniac Thanks for checking! I have added missing ones except those are not merged yet. ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/699131319/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/699170320","html_url":"https://github.com/apache/tvm/issues/6421#issuecomment-699170320","issue_url":"https://api.github.com/repos/apache/tvm/issues/6421","id":699170320,"node_id":"MDEyOklzc3VlQ29tbWVudDY5OTE3MDMyMA==","user":{"login":"leandron","id":437416,"node_id":"MDQ6VXNlcjQzNzQxNg==","avatar_url":"https://avatars.githubusercontent.com/u/437416?v=4","gravatar_id":"","url":"https://api.github.com/users/leandron","html_url":"https://github.com/leandron","followers_url":"https://api.github.com/users/leandron/followers","following_url":"https://api.github.com/users/leandron/following{/other_user}","gists_url":"https://api.github.com/users/leandron/gists{/gist_id}","starred_url":"https://api.github.com/users/leandron/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leandron/subscriptions","organizations_url":"https://api.github.com/users/leandron/orgs","repos_url":"https://api.github.com/users/leandron/repos","events_url":"https://api.github.com/users/leandron/events{/privacy}","received_events_url":"https://api.github.com/users/leandron/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-25T21:43:41Z","updated_at":"2020-09-25T21:44:00Z","author_association":"CONTRIBUTOR","body":"> TVMC(Experimental)\r\n>     * [tvmc] Introduce 'tune' subcommand (part 3/4) (#6537) -- expected to merge in 1 week.\r\n>     * TVMC part 4/4: Tutorial -- not filed yet but I suppose it's required if we list TVMC as an experimental feature in 0.7 (cc @leandron, @u99127).\r\n\r\n@comaniac, yes, it would be great to merge #6537 before the release, lets try to solve all the issues early next week; Also, \"part 4/4\", related to `tvmc run` is coming very soon, Monday max, and it would be great to have it as well, so that we have the first package complete\r\n","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/699170320/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/699184231","html_url":"https://github.com/apache/tvm/pull/5812#issuecomment-699184231","issue_url":"https://api.github.com/repos/apache/tvm/issues/5812","id":699184231,"node_id":"MDEyOklzc3VlQ29tbWVudDY5OTE4NDIzMQ==","user":{"login":"hypercubestart","id":24601452,"node_id":"MDQ6VXNlcjI0NjAxNDUy","avatar_url":"https://avatars.githubusercontent.com/u/24601452?v=4","gravatar_id":"","url":"https://api.github.com/users/hypercubestart","html_url":"https://github.com/hypercubestart","followers_url":"https://api.github.com/users/hypercubestart/followers","following_url":"https://api.github.com/users/hypercubestart/following{/other_user}","gists_url":"https://api.github.com/users/hypercubestart/gists{/gist_id}","starred_url":"https://api.github.com/users/hypercubestart/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hypercubestart/subscriptions","organizations_url":"https://api.github.com/users/hypercubestart/orgs","repos_url":"https://api.github.com/users/hypercubestart/repos","events_url":"https://api.github.com/users/hypercubestart/events{/privacy}","received_events_url":"https://api.github.com/users/hypercubestart/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-25T22:19:41Z","updated_at":"2020-09-25T22:19:41Z","author_association":"CONTRIBUTOR","body":"Bumping on this for review:\r\ncc: @tqchen @jroesch @tmoreau89 @junrushao1994 @zhiics @ZihengJiang @hogepodge @comaniac ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/699184231/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/699212019","html_url":"https://github.com/apache/tvm/pull/6562#issuecomment-699212019","issue_url":"https://api.github.com/repos/apache/tvm/issues/6562","id":699212019,"node_id":"MDEyOklzc3VlQ29tbWVudDY5OTIxMjAxOQ==","user":{"login":"FrozenGene","id":7287321,"node_id":"MDQ6VXNlcjcyODczMjE=","avatar_url":"https://avatars.githubusercontent.com/u/7287321?v=4","gravatar_id":"","url":"https://api.github.com/users/FrozenGene","html_url":"https://github.com/FrozenGene","followers_url":"https://api.github.com/users/FrozenGene/followers","following_url":"https://api.github.com/users/FrozenGene/following{/other_user}","gists_url":"https://api.github.com/users/FrozenGene/gists{/gist_id}","starred_url":"https://api.github.com/users/FrozenGene/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/FrozenGene/subscriptions","organizations_url":"https://api.github.com/users/FrozenGene/orgs","repos_url":"https://api.github.com/users/FrozenGene/repos","events_url":"https://api.github.com/users/FrozenGene/events{/privacy}","received_events_url":"https://api.github.com/users/FrozenGene/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-25T23:22:25Z","updated_at":"2020-09-25T23:22:25Z","author_association":"MEMBER","body":"Thanks Cody. Could you explain a little bit why cmake/config.cmake doesn’t turn it on by default? As USE_SORT uses this way too------------------ Original ------------------From: Cody Yu <notifications@github.com>Date: Sat,Sep 26,2020 7:16 AMTo: apache/incubator-tvm <incubator-tvm@noreply.github.com>Cc: Zhao Wu <zhaowu@apache.org>, Mention <mention@noreply.github.com>Subject: Re: [apache/incubator-tvm] [AutoTVM][Ansor] Turn on USE_RANDOM by default (#6562)After #6391, we require USE_RANDOM to be on during the tuning. However, setting USE_RANDOM ON in cmake/config.cmake doesn't really turn it on by default.\ncc @FrozenGene\n\n\n\nYou can view, comment on, or merge this pull request online at:\n  https://github.com/apache/incubator-tvm/pull/6562\n\nCommit Summary\n\n  Turn on USE_RANDOM by default\n\n\nFile Changes\n\n  \n    M\n    CMakeLists.txt\n    (2)\n  \n\n\nPatch Links:\n\n  https://github.com/apache/incubator-tvm/pull/6562.patch\n  https://github.com/apache/incubator-tvm/pull/6562.diff\n\n\n—You are receiving this because you were mentioned.Reply to this email directly, view it on GitHub, or unsubscribe.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/699212019/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/699213150","html_url":"https://github.com/apache/tvm/pull/6562#issuecomment-699213150","issue_url":"https://api.github.com/repos/apache/tvm/issues/6562","id":699213150,"node_id":"MDEyOklzc3VlQ29tbWVudDY5OTIxMzE1MA==","user":{"login":"comaniac","id":8262694,"node_id":"MDQ6VXNlcjgyNjI2OTQ=","avatar_url":"https://avatars.githubusercontent.com/u/8262694?v=4","gravatar_id":"","url":"https://api.github.com/users/comaniac","html_url":"https://github.com/comaniac","followers_url":"https://api.github.com/users/comaniac/followers","following_url":"https://api.github.com/users/comaniac/following{/other_user}","gists_url":"https://api.github.com/users/comaniac/gists{/gist_id}","starred_url":"https://api.github.com/users/comaniac/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/comaniac/subscriptions","organizations_url":"https://api.github.com/users/comaniac/orgs","repos_url":"https://api.github.com/users/comaniac/repos","events_url":"https://api.github.com/users/comaniac/events{/privacy}","received_events_url":"https://api.github.com/users/comaniac/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-25T23:25:03Z","updated_at":"2020-09-25T23:51:13Z","author_association":"CONTRIBUTOR","body":"It's fine if users directly copy `cmake/config.cmake` to build. However, as the usage in the docker images, some users prefer to create a simple `config.cmake` that only overrides the values against CMakefile. In my personal case, my `config.cmake` doesn't have `USE_RANDOM` and I expected it to be ON by referring to `cmake/config.cmake`, but it doesn't work as expected, so does `USE_SORT`.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/699213150/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/699214733","html_url":"https://github.com/apache/tvm/pull/6562#issuecomment-699214733","issue_url":"https://api.github.com/repos/apache/tvm/issues/6562","id":699214733,"node_id":"MDEyOklzc3VlQ29tbWVudDY5OTIxNDczMw==","user":{"login":"FrozenGene","id":7287321,"node_id":"MDQ6VXNlcjcyODczMjE=","avatar_url":"https://avatars.githubusercontent.com/u/7287321?v=4","gravatar_id":"","url":"https://api.github.com/users/FrozenGene","html_url":"https://github.com/FrozenGene","followers_url":"https://api.github.com/users/FrozenGene/followers","following_url":"https://api.github.com/users/FrozenGene/following{/other_user}","gists_url":"https://api.github.com/users/FrozenGene/gists{/gist_id}","starred_url":"https://api.github.com/users/FrozenGene/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/FrozenGene/subscriptions","organizations_url":"https://api.github.com/users/FrozenGene/orgs","repos_url":"https://api.github.com/users/FrozenGene/repos","events_url":"https://api.github.com/users/FrozenGene/events{/privacy}","received_events_url":"https://api.github.com/users/FrozenGene/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-25T23:28:46Z","updated_at":"2020-09-25T23:28:46Z","author_association":"MEMBER","body":"ok. Thanks for explaining.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/699214733/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/699277253","html_url":"https://github.com/apache/tvm/pull/6557#issuecomment-699277253","issue_url":"https://api.github.com/repos/apache/tvm/issues/6557","id":699277253,"node_id":"MDEyOklzc3VlQ29tbWVudDY5OTI3NzI1Mw==","user":{"login":"jcf94","id":12119698,"node_id":"MDQ6VXNlcjEyMTE5Njk4","avatar_url":"https://avatars.githubusercontent.com/u/12119698?v=4","gravatar_id":"","url":"https://api.github.com/users/jcf94","html_url":"https://github.com/jcf94","followers_url":"https://api.github.com/users/jcf94/followers","following_url":"https://api.github.com/users/jcf94/following{/other_user}","gists_url":"https://api.github.com/users/jcf94/gists{/gist_id}","starred_url":"https://api.github.com/users/jcf94/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jcf94/subscriptions","organizations_url":"https://api.github.com/users/jcf94/orgs","repos_url":"https://api.github.com/users/jcf94/repos","events_url":"https://api.github.com/users/jcf94/events{/privacy}","received_events_url":"https://api.github.com/users/jcf94/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-26T02:23:26Z","updated_at":"2020-09-26T02:23:26Z","author_association":"CONTRIBUTOR","body":"> Thanks @jcf94 @FrozenGene\r\n\r\nThanks.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/699277253/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/699461877","html_url":"https://github.com/apache/tvm/pull/6563#issuecomment-699461877","issue_url":"https://api.github.com/repos/apache/tvm/issues/6563","id":699461877,"node_id":"MDEyOklzc3VlQ29tbWVudDY5OTQ2MTg3Nw==","user":{"login":"jroesch","id":696509,"node_id":"MDQ6VXNlcjY5NjUwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/696509?v=4","gravatar_id":"","url":"https://api.github.com/users/jroesch","html_url":"https://github.com/jroesch","followers_url":"https://api.github.com/users/jroesch/followers","following_url":"https://api.github.com/users/jroesch/following{/other_user}","gists_url":"https://api.github.com/users/jroesch/gists{/gist_id}","starred_url":"https://api.github.com/users/jroesch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jroesch/subscriptions","organizations_url":"https://api.github.com/users/jroesch/orgs","repos_url":"https://api.github.com/users/jroesch/repos","events_url":"https://api.github.com/users/jroesch/events{/privacy}","received_events_url":"https://api.github.com/users/jroesch/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-26T08:46:08Z","updated_at":"2020-09-26T08:46:08Z","author_association":"MEMBER","body":"cc @binarybana @imalsogreg @robo-corg @adelbertc @anwang2009 ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/699461877/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/699462827","html_url":"https://github.com/apache/tvm/pull/6545#issuecomment-699462827","issue_url":"https://api.github.com/repos/apache/tvm/issues/6545","id":699462827,"node_id":"MDEyOklzc3VlQ29tbWVudDY5OTQ2MjgyNw==","user":{"login":"jroesch","id":696509,"node_id":"MDQ6VXNlcjY5NjUwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/696509?v=4","gravatar_id":"","url":"https://api.github.com/users/jroesch","html_url":"https://github.com/jroesch","followers_url":"https://api.github.com/users/jroesch/followers","following_url":"https://api.github.com/users/jroesch/following{/other_user}","gists_url":"https://api.github.com/users/jroesch/gists{/gist_id}","starred_url":"https://api.github.com/users/jroesch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jroesch/subscriptions","organizations_url":"https://api.github.com/users/jroesch/orgs","repos_url":"https://api.github.com/users/jroesch/repos","events_url":"https://api.github.com/users/jroesch/events{/privacy}","received_events_url":"https://api.github.com/users/jroesch/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-26T08:51:54Z","updated_at":"2020-09-26T08:51:54Z","author_association":"MEMBER","body":"@intheworld we have repaired the ResNet example on #6563 to the best of my knowledge does no longer exhibits this issue. The previous iteration of the Rust bindings pre-object system used a large amount of unsafe code which Max and I have tried to audit and remove. \r\n\r\nCan you provide a reproducible test case to accompany the change, even if we do so I don't believe c_int is the right type to put in the Rust interface as the issue you described only sounds like an issue between signed and unsigned values. \r\n\r\nIn general it is bad form in Rust to expose C types in safe Rust interfaces vs. native Rust types, given we convert the Rust Context to DLContext when passing across the boundaries I don't clearly see why this should be an issue?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/699462827/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/699463616","html_url":"https://github.com/apache/tvm/pull/6408#issuecomment-699463616","issue_url":"https://api.github.com/repos/apache/tvm/issues/6408","id":699463616,"node_id":"MDEyOklzc3VlQ29tbWVudDY5OTQ2MzYxNg==","user":{"login":"jroesch","id":696509,"node_id":"MDQ6VXNlcjY5NjUwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/696509?v=4","gravatar_id":"","url":"https://api.github.com/users/jroesch","html_url":"https://github.com/jroesch","followers_url":"https://api.github.com/users/jroesch/followers","following_url":"https://api.github.com/users/jroesch/following{/other_user}","gists_url":"https://api.github.com/users/jroesch/gists{/gist_id}","starred_url":"https://api.github.com/users/jroesch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jroesch/subscriptions","organizations_url":"https://api.github.com/users/jroesch/orgs","repos_url":"https://api.github.com/users/jroesch/repos","events_url":"https://api.github.com/users/jroesch/events{/privacy}","received_events_url":"https://api.github.com/users/jroesch/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-26T08:54:51Z","updated_at":"2020-09-26T08:54:51Z","author_association":"MEMBER","body":"Closing in favor of #6563 ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/699463616/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/699475746","html_url":"https://github.com/apache/tvm/pull/6545#issuecomment-699475746","issue_url":"https://api.github.com/repos/apache/tvm/issues/6545","id":699475746,"node_id":"MDEyOklzc3VlQ29tbWVudDY5OTQ3NTc0Ng==","user":{"login":"intheworld","id":9208685,"node_id":"MDQ6VXNlcjkyMDg2ODU=","avatar_url":"https://avatars.githubusercontent.com/u/9208685?v=4","gravatar_id":"","url":"https://api.github.com/users/intheworld","html_url":"https://github.com/intheworld","followers_url":"https://api.github.com/users/intheworld/followers","following_url":"https://api.github.com/users/intheworld/following{/other_user}","gists_url":"https://api.github.com/users/intheworld/gists{/gist_id}","starred_url":"https://api.github.com/users/intheworld/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/intheworld/subscriptions","organizations_url":"https://api.github.com/users/intheworld/orgs","repos_url":"https://api.github.com/users/intheworld/repos","events_url":"https://api.github.com/users/intheworld/events{/privacy}","received_events_url":"https://api.github.com/users/intheworld/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-26T10:24:01Z","updated_at":"2020-09-26T10:24:01Z","author_association":"CONTRIBUTOR","body":"@jroesch I have reviewed #6563, and it looks good to me. I will abandon this PR. Thanks a lot! ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/699475746/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/699517613","html_url":"https://github.com/apache/tvm/issues/6565#issuecomment-699517613","issue_url":"https://api.github.com/repos/apache/tvm/issues/6565","id":699517613,"node_id":"MDEyOklzc3VlQ29tbWVudDY5OTUxNzYxMw==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-26T16:30:56Z","updated_at":"2020-09-26T16:30:56Z","author_association":"MEMBER","body":"Thanks @declmal The community mostly uses https://discuss.tvm.apache.org/ for most discussions, let us move to https://discuss.tvm.apache.org/t/is-increased-strided-dltensor-stored-in-column-major/7995/2","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/699517613/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/699518241","html_url":"https://github.com/apache/tvm/issues/6564#issuecomment-699518241","issue_url":"https://api.github.com/repos/apache/tvm/issues/6564","id":699518241,"node_id":"MDEyOklzc3VlQ29tbWVudDY5OTUxODI0MQ==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-26T16:36:57Z","updated_at":"2020-09-26T16:36:57Z","author_association":"MEMBER","body":"cc @anijain2305 @yzhliu ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/699518241/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/699556736","html_url":"https://github.com/apache/tvm/pull/6522#issuecomment-699556736","issue_url":"https://api.github.com/repos/apache/tvm/issues/6522","id":699556736,"node_id":"MDEyOklzc3VlQ29tbWVudDY5OTU1NjczNg==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-26T22:32:23Z","updated_at":"2020-09-26T22:32:23Z","author_association":"MEMBER","body":" Thanks  @tkonolige @ZihengJiang CC @spectrometerHBH ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/699556736/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/699566591","html_url":"https://github.com/apache/tvm/pull/6557#issuecomment-699566591","issue_url":"https://api.github.com/repos/apache/tvm/issues/6557","id":699566591,"node_id":"MDEyOklzc3VlQ29tbWVudDY5OTU2NjU5MQ==","user":{"login":"merrymercy","id":15100009,"node_id":"MDQ6VXNlcjE1MTAwMDA5","avatar_url":"https://avatars.githubusercontent.com/u/15100009?v=4","gravatar_id":"","url":"https://api.github.com/users/merrymercy","html_url":"https://github.com/merrymercy","followers_url":"https://api.github.com/users/merrymercy/followers","following_url":"https://api.github.com/users/merrymercy/following{/other_user}","gists_url":"https://api.github.com/users/merrymercy/gists{/gist_id}","starred_url":"https://api.github.com/users/merrymercy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/merrymercy/subscriptions","organizations_url":"https://api.github.com/users/merrymercy/orgs","repos_url":"https://api.github.com/users/merrymercy/repos","events_url":"https://api.github.com/users/merrymercy/events{/privacy}","received_events_url":"https://api.github.com/users/merrymercy/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-27T00:48:15Z","updated_at":"2020-09-27T02:59:53Z","author_association":"MEMBER","body":"This kind of general exception catch is not good for future maintenance. We should dig deeper to find out the underlying cause.\r\nThe mutation rules, LoopState, and InferBound all work well in the single thread case. I think some of these components are not thread-safe.\r\n\r\n#6512 does not change any logic, it just moves the location of some functions. Can you confirm this is caused by #6512 or #6529?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/699566591/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/699624830","html_url":"https://github.com/apache/tvm/issues/6570#issuecomment-699624830","issue_url":"https://api.github.com/repos/apache/tvm/issues/6570","id":699624830,"node_id":"MDEyOklzc3VlQ29tbWVudDY5OTYyNDgzMA==","user":{"login":"luchangli03","id":34341633,"node_id":"MDQ6VXNlcjM0MzQxNjMz","avatar_url":"https://avatars.githubusercontent.com/u/34341633?v=4","gravatar_id":"","url":"https://api.github.com/users/luchangli03","html_url":"https://github.com/luchangli03","followers_url":"https://api.github.com/users/luchangli03/followers","following_url":"https://api.github.com/users/luchangli03/following{/other_user}","gists_url":"https://api.github.com/users/luchangli03/gists{/gist_id}","starred_url":"https://api.github.com/users/luchangli03/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/luchangli03/subscriptions","organizations_url":"https://api.github.com/users/luchangli03/orgs","repos_url":"https://api.github.com/users/luchangli03/repos","events_url":"https://api.github.com/users/luchangli03/events{/privacy}","received_events_url":"https://api.github.com/users/luchangli03/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-27T11:47:39Z","updated_at":"2020-09-27T11:47:39Z","author_association":"NONE","body":"found a solution: call os._exit(os.EX_OK)  after auto_scheduler.auto_schedule()","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/699624830/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/699647717","html_url":"https://github.com/apache/tvm/pull/6568#issuecomment-699647717","issue_url":"https://api.github.com/repos/apache/tvm/issues/6568","id":699647717,"node_id":"MDEyOklzc3VlQ29tbWVudDY5OTY0NzcxNw==","user":{"login":"zhiics","id":5145158,"node_id":"MDQ6VXNlcjUxNDUxNTg=","avatar_url":"https://avatars.githubusercontent.com/u/5145158?v=4","gravatar_id":"","url":"https://api.github.com/users/zhiics","html_url":"https://github.com/zhiics","followers_url":"https://api.github.com/users/zhiics/followers","following_url":"https://api.github.com/users/zhiics/following{/other_user}","gists_url":"https://api.github.com/users/zhiics/gists{/gist_id}","starred_url":"https://api.github.com/users/zhiics/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zhiics/subscriptions","organizations_url":"https://api.github.com/users/zhiics/orgs","repos_url":"https://api.github.com/users/zhiics/repos","events_url":"https://api.github.com/users/zhiics/events{/privacy}","received_events_url":"https://api.github.com/users/zhiics/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-27T15:12:51Z","updated_at":"2020-09-27T15:12:51Z","author_association":"MEMBER","body":"@merrymercy @comaniac @FrozenGene it looks test_mutate_parallel fails in the master CI. Could you guys take a look?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/699647717/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/699651959","html_url":"https://github.com/apache/tvm/pull/6572#issuecomment-699651959","issue_url":"https://api.github.com/repos/apache/tvm/issues/6572","id":699651959,"node_id":"MDEyOklzc3VlQ29tbWVudDY5OTY1MTk1OQ==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-27T15:49:25Z","updated_at":"2020-09-27T15:49:25Z","author_association":"MEMBER","body":"cc @zhiics @merrymercy @comaniac ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/699651959/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/699658130","html_url":"https://github.com/apache/tvm/pull/6572#issuecomment-699658130","issue_url":"https://api.github.com/repos/apache/tvm/issues/6572","id":699658130,"node_id":"MDEyOklzc3VlQ29tbWVudDY5OTY1ODEzMA==","user":{"login":"comaniac","id":8262694,"node_id":"MDQ6VXNlcjgyNjI2OTQ=","avatar_url":"https://avatars.githubusercontent.com/u/8262694?v=4","gravatar_id":"","url":"https://api.github.com/users/comaniac","html_url":"https://github.com/comaniac","followers_url":"https://api.github.com/users/comaniac/followers","following_url":"https://api.github.com/users/comaniac/following{/other_user}","gists_url":"https://api.github.com/users/comaniac/gists{/gist_id}","starred_url":"https://api.github.com/users/comaniac/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/comaniac/subscriptions","organizations_url":"https://api.github.com/users/comaniac/orgs","repos_url":"https://api.github.com/users/comaniac/repos","events_url":"https://api.github.com/users/comaniac/events{/privacy}","received_events_url":"https://api.github.com/users/comaniac/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-27T16:41:00Z","updated_at":"2020-09-27T16:41:00Z","author_association":"CONTRIBUTOR","body":"IIUC, `xfail` expects the test to fail, but this test is expected to pass, although apparently it may fail.\n\nTo unblock other tests, we can skip this test first and find a better way to test parallel mutation.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/699658130/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/699658202","html_url":"https://github.com/apache/tvm/pull/6568#issuecomment-699658202","issue_url":"https://api.github.com/repos/apache/tvm/issues/6568","id":699658202,"node_id":"MDEyOklzc3VlQ29tbWVudDY5OTY1ODIwMg==","user":{"login":"comaniac","id":8262694,"node_id":"MDQ6VXNlcjgyNjI2OTQ=","avatar_url":"https://avatars.githubusercontent.com/u/8262694?v=4","gravatar_id":"","url":"https://api.github.com/users/comaniac","html_url":"https://github.com/comaniac","followers_url":"https://api.github.com/users/comaniac/followers","following_url":"https://api.github.com/users/comaniac/following{/other_user}","gists_url":"https://api.github.com/users/comaniac/gists{/gist_id}","starred_url":"https://api.github.com/users/comaniac/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/comaniac/subscriptions","organizations_url":"https://api.github.com/users/comaniac/orgs","repos_url":"https://api.github.com/users/comaniac/repos","events_url":"https://api.github.com/users/comaniac/events{/privacy}","received_events_url":"https://api.github.com/users/comaniac/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-27T16:41:41Z","updated_at":"2020-09-27T16:41:41Z","author_association":"CONTRIBUTOR","body":"#6572","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/699658202/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/699658400","html_url":"https://github.com/apache/tvm/issues/6570#issuecomment-699658400","issue_url":"https://api.github.com/repos/apache/tvm/issues/6570","id":699658400,"node_id":"MDEyOklzc3VlQ29tbWVudDY5OTY1ODQwMA==","user":{"login":"comaniac","id":8262694,"node_id":"MDQ6VXNlcjgyNjI2OTQ=","avatar_url":"https://avatars.githubusercontent.com/u/8262694?v=4","gravatar_id":"","url":"https://api.github.com/users/comaniac","html_url":"https://github.com/comaniac","followers_url":"https://api.github.com/users/comaniac/followers","following_url":"https://api.github.com/users/comaniac/following{/other_user}","gists_url":"https://api.github.com/users/comaniac/gists{/gist_id}","starred_url":"https://api.github.com/users/comaniac/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/comaniac/subscriptions","organizations_url":"https://api.github.com/users/comaniac/orgs","repos_url":"https://api.github.com/users/comaniac/repos","events_url":"https://api.github.com/users/comaniac/events{/privacy}","received_events_url":"https://api.github.com/users/comaniac/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-27T16:43:30Z","updated_at":"2020-09-27T16:43:30Z","author_association":"CONTRIBUTOR","body":"Did you `del measure_ctx` at the end, as suggested by the tutorial?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/699658400/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/699686737","html_url":"https://github.com/apache/tvm/pull/6569#issuecomment-699686737","issue_url":"https://api.github.com/repos/apache/tvm/issues/6569","id":699686737,"node_id":"MDEyOklzc3VlQ29tbWVudDY5OTY4NjczNw==","user":{"login":"insop","id":1240382,"node_id":"MDQ6VXNlcjEyNDAzODI=","avatar_url":"https://avatars.githubusercontent.com/u/1240382?v=4","gravatar_id":"","url":"https://api.github.com/users/insop","html_url":"https://github.com/insop","followers_url":"https://api.github.com/users/insop/followers","following_url":"https://api.github.com/users/insop/following{/other_user}","gists_url":"https://api.github.com/users/insop/gists{/gist_id}","starred_url":"https://api.github.com/users/insop/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/insop/subscriptions","organizations_url":"https://api.github.com/users/insop/orgs","repos_url":"https://api.github.com/users/insop/repos","events_url":"https://api.github.com/users/insop/events{/privacy}","received_events_url":"https://api.github.com/users/insop/received_events","type":"User","user_view_type":"public","site_admin":true},"created_at":"2020-09-27T20:51:53Z","updated_at":"2020-09-27T20:51:53Z","author_association":"CONTRIBUTOR","body":"> The CI error is irrelevant. Please re-trigger when the master branch is fixed.\r\n\r\nThank you @zhiics , how can I re-trigger The ci tests?\r\n","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/699686737/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/699688170","html_url":"https://github.com/apache/tvm/pull/6569#issuecomment-699688170","issue_url":"https://api.github.com/repos/apache/tvm/issues/6569","id":699688170,"node_id":"MDEyOklzc3VlQ29tbWVudDY5OTY4ODE3MA==","user":{"login":"comaniac","id":8262694,"node_id":"MDQ6VXNlcjgyNjI2OTQ=","avatar_url":"https://avatars.githubusercontent.com/u/8262694?v=4","gravatar_id":"","url":"https://api.github.com/users/comaniac","html_url":"https://github.com/comaniac","followers_url":"https://api.github.com/users/comaniac/followers","following_url":"https://api.github.com/users/comaniac/following{/other_user}","gists_url":"https://api.github.com/users/comaniac/gists{/gist_id}","starred_url":"https://api.github.com/users/comaniac/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/comaniac/subscriptions","organizations_url":"https://api.github.com/users/comaniac/orgs","repos_url":"https://api.github.com/users/comaniac/repos","events_url":"https://api.github.com/users/comaniac/events{/privacy}","received_events_url":"https://api.github.com/users/comaniac/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-27T21:06:23Z","updated_at":"2020-09-27T21:06:23Z","author_association":"CONTRIBUTOR","body":"You can push a dummy commit like this one: https://coderwall.com/p/vkdekq/git-commit-allow-empty\n\nBut please wait until #6572 is merged and the CI on master is green.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/699688170/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/699690134","html_url":"https://github.com/apache/tvm/pull/6569#issuecomment-699690134","issue_url":"https://api.github.com/repos/apache/tvm/issues/6569","id":699690134,"node_id":"MDEyOklzc3VlQ29tbWVudDY5OTY5MDEzNA==","user":{"login":"insop","id":1240382,"node_id":"MDQ6VXNlcjEyNDAzODI=","avatar_url":"https://avatars.githubusercontent.com/u/1240382?v=4","gravatar_id":"","url":"https://api.github.com/users/insop","html_url":"https://github.com/insop","followers_url":"https://api.github.com/users/insop/followers","following_url":"https://api.github.com/users/insop/following{/other_user}","gists_url":"https://api.github.com/users/insop/gists{/gist_id}","starred_url":"https://api.github.com/users/insop/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/insop/subscriptions","organizations_url":"https://api.github.com/users/insop/orgs","repos_url":"https://api.github.com/users/insop/repos","events_url":"https://api.github.com/users/insop/events{/privacy}","received_events_url":"https://api.github.com/users/insop/received_events","type":"User","user_view_type":"public","site_admin":true},"created_at":"2020-09-27T21:23:57Z","updated_at":"2020-09-27T21:23:57Z","author_association":"CONTRIBUTOR","body":"> You can push a dummy commit like this one: https://coderwall.com/p/vkdekq/git-commit-allow-empty\r\n> \r\n> But please wait until #6572 is merged and the CI on master is green.\r\n\r\nThank you @comaniac .\r\nGot it, I understand about dummy commit. I asked because some of the Github/Jenkins setup I used, there is a way to trigger a new build without a dummy build.\r\nWill wait for #6572 .\r\n","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/699690134/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]