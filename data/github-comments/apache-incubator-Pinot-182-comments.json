[{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1526224770","html_url":"https://github.com/apache/pinot/pull/10695#issuecomment-1526224770","issue_url":"https://api.github.com/repos/apache/pinot/issues/10695","id":1526224770,"node_id":"IC_kwDOATCU_c5a-FeC","user":{"login":"codecov-commenter","id":65553080,"node_id":"MDQ6VXNlcjY1NTUzMDgw","avatar_url":"https://avatars.githubusercontent.com/u/65553080?v=4","gravatar_id":"","url":"https://api.github.com/users/codecov-commenter","html_url":"https://github.com/codecov-commenter","followers_url":"https://api.github.com/users/codecov-commenter/followers","following_url":"https://api.github.com/users/codecov-commenter/following{/other_user}","gists_url":"https://api.github.com/users/codecov-commenter/gists{/gist_id}","starred_url":"https://api.github.com/users/codecov-commenter/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codecov-commenter/subscriptions","organizations_url":"https://api.github.com/users/codecov-commenter/orgs","repos_url":"https://api.github.com/users/codecov-commenter/repos","events_url":"https://api.github.com/users/codecov-commenter/events{/privacy}","received_events_url":"https://api.github.com/users/codecov-commenter/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-04-27T19:18:16Z","updated_at":"2023-04-27T19:37:00Z","author_association":"NONE","body":"## [Codecov](https://codecov.io/gh/apache/pinot/pull/10695?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation) Report\n> Merging [#10695](https://codecov.io/gh/apache/pinot/pull/10695?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation) (3790fe5) into [master](https://codecov.io/gh/apache/pinot/commit/d806b5f8f2750fa5611584537ae1451b332f649f?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation) (d806b5f) will **decrease** coverage by `4.21%`.\n> The diff coverage is `60.97%`.\n\n```diff\n@@             Coverage Diff              @@\n##             master   #10695      +/-   ##\n============================================\n- Coverage     68.44%   64.24%   -4.21%     \n+ Complexity     6421     6408      -13     \n============================================\n  Files          2107     2053      -54     \n  Lines        113792   111304    -2488     \n  Branches      17199    16903     -296     \n============================================\n- Hits          77887    71502    -6385     \n- Misses        30369    34636    +4267     \n+ Partials       5536     5166     -370     \n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| integration1 | `?` | |\n| unittests1 | `67.74% <ø> (+<0.01%)` | :arrow_up: |\n| unittests2 | `13.85% <60.97%> (-0.03%)` | :arrow_down: |\n\nFlags with carried forward coverage won't be shown. [Click here](https://docs.codecov.io/docs/carryforward-flags?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation#carryforward-flags-in-the-pull-request-comment) to find out more.\n\n| [Impacted Files](https://codecov.io/gh/apache/pinot/pull/10695?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation) | Coverage Δ | |\n|---|---|---|\n| [...roller/helix/core/relocation/SegmentRelocator.java](https://codecov.io/gh/apache/pinot/pull/10695?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation#diff-cGlub3QtY29udHJvbGxlci9zcmMvbWFpbi9qYXZhL29yZy9hcGFjaGUvcGlub3QvY29udHJvbGxlci9oZWxpeC9jb3JlL3JlbG9jYXRpb24vU2VnbWVudFJlbG9jYXRvci5qYXZh) | `50.00% <0.00%> (-17.84%)` | :arrow_down: |\n| [...ntroller/helix/core/PinotHelixResourceManager.java](https://codecov.io/gh/apache/pinot/pull/10695?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation#diff-cGlub3QtY29udHJvbGxlci9zcmMvbWFpbi9qYXZhL29yZy9hcGFjaGUvcGlub3QvY29udHJvbGxlci9oZWxpeC9jb3JlL1Bpbm90SGVsaXhSZXNvdXJjZU1hbmFnZXIuamF2YQ==) | `62.69% <63.88%> (-6.72%)` | :arrow_down: |\n| [...oller/api/resources/PinotTableRestletResource.java](https://codecov.io/gh/apache/pinot/pull/10695?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation#diff-cGlub3QtY29udHJvbGxlci9zcmMvbWFpbi9qYXZhL29yZy9hcGFjaGUvcGlub3QvY29udHJvbGxlci9hcGkvcmVzb3VyY2VzL1Bpbm90VGFibGVSZXN0bGV0UmVzb3VyY2UuamF2YQ==) | `50.24% <100.00%> (-2.96%)` | :arrow_down: |\n\n... and [370 files with indirect coverage changes](https://codecov.io/gh/apache/pinot/pull/10695/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation)\n\n:mega: We’re building smart automated test selection to slash your CI/CD build times. [Learn more](https://about.codecov.io/iterative-testing/?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation)\n","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1526224770/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1526229372","html_url":"https://github.com/apache/pinot/issues/10686#issuecomment-1526229372","issue_url":"https://api.github.com/repos/apache/pinot/issues/10686","id":1526229372,"node_id":"IC_kwDOATCU_c5a-Gl8","user":{"login":"abhioncbr","id":1076944,"node_id":"MDQ6VXNlcjEwNzY5NDQ=","avatar_url":"https://avatars.githubusercontent.com/u/1076944?v=4","gravatar_id":"","url":"https://api.github.com/users/abhioncbr","html_url":"https://github.com/abhioncbr","followers_url":"https://api.github.com/users/abhioncbr/followers","following_url":"https://api.github.com/users/abhioncbr/following{/other_user}","gists_url":"https://api.github.com/users/abhioncbr/gists{/gist_id}","starred_url":"https://api.github.com/users/abhioncbr/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/abhioncbr/subscriptions","organizations_url":"https://api.github.com/users/abhioncbr/orgs","repos_url":"https://api.github.com/users/abhioncbr/repos","events_url":"https://api.github.com/users/abhioncbr/events{/privacy}","received_events_url":"https://api.github.com/users/abhioncbr/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-04-27T19:20:20Z","updated_at":"2023-04-27T19:20:20Z","author_association":"CONTRIBUTOR","body":"> Losing precision might not be the root cause though. Even if we do float to double casting, the number won't match.\r\n> \r\n> ```\r\n> System.out.println((double) 1.1f); --> 1.100000023841858\r\n> ```\r\n> \r\n> Which query is giving different result comparing to H2?\r\n\r\nWell, you are following the wrong order of casting. The problematic comparison involves casting from `double -> float`.\r\n```\r\nSystem.out.println((double) 1.1f); --> 1.100000023841858 (correct)\r\nSystem.out.println((float) 1.1d);  --> 1.1 (incorrect)\r\n\r\n// incorrect float/double comparison because of casting\r\nfloat f = 1.1f;\r\ndouble d = 1.1d;\r\nSystem.out.println(Float.compare(f, (float)d)); --> 0 (Such comparison in Pinot resulting incorrect output)\r\n```\r\n\r\nWe are ignoring the [following queries in our test cases](https://github.com/apache/pinot/blob/master/pinot-query-runtime/src/test/resources/queries/Comparisons.json#L346)","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1526229372/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1526272726","html_url":"https://github.com/apache/pinot/issues/10691#issuecomment-1526272726","issue_url":"https://api.github.com/repos/apache/pinot/issues/10691","id":1526272726,"node_id":"IC_kwDOATCU_c5a-RLW","user":{"login":"Jackie-Jiang","id":17555551,"node_id":"MDQ6VXNlcjE3NTU1NTUx","avatar_url":"https://avatars.githubusercontent.com/u/17555551?v=4","gravatar_id":"","url":"https://api.github.com/users/Jackie-Jiang","html_url":"https://github.com/Jackie-Jiang","followers_url":"https://api.github.com/users/Jackie-Jiang/followers","following_url":"https://api.github.com/users/Jackie-Jiang/following{/other_user}","gists_url":"https://api.github.com/users/Jackie-Jiang/gists{/gist_id}","starred_url":"https://api.github.com/users/Jackie-Jiang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Jackie-Jiang/subscriptions","organizations_url":"https://api.github.com/users/Jackie-Jiang/orgs","repos_url":"https://api.github.com/users/Jackie-Jiang/repos","events_url":"https://api.github.com/users/Jackie-Jiang/events{/privacy}","received_events_url":"https://api.github.com/users/Jackie-Jiang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-04-27T19:40:11Z","updated_at":"2023-04-27T19:40:11Z","author_association":"CONTRIBUTOR","body":"It shouldn't be too much effort to make the version configurable","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1526272726/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1526306215","html_url":"https://github.com/apache/pinot/issues/10691#issuecomment-1526306215","issue_url":"https://api.github.com/repos/apache/pinot/issues/10691","id":1526306215,"node_id":"IC_kwDOATCU_c5a-ZWn","user":{"login":"MeihanLi","id":42751784,"node_id":"MDQ6VXNlcjQyNzUxNzg0","avatar_url":"https://avatars.githubusercontent.com/u/42751784?v=4","gravatar_id":"","url":"https://api.github.com/users/MeihanLi","html_url":"https://github.com/MeihanLi","followers_url":"https://api.github.com/users/MeihanLi/followers","following_url":"https://api.github.com/users/MeihanLi/following{/other_user}","gists_url":"https://api.github.com/users/MeihanLi/gists{/gist_id}","starred_url":"https://api.github.com/users/MeihanLi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/MeihanLi/subscriptions","organizations_url":"https://api.github.com/users/MeihanLi/orgs","repos_url":"https://api.github.com/users/MeihanLi/repos","events_url":"https://api.github.com/users/MeihanLi/events{/privacy}","received_events_url":"https://api.github.com/users/MeihanLi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-04-27T19:54:27Z","updated_at":"2023-04-27T19:54:27Z","author_association":"CONTRIBUTOR","body":"Thanks, I will raise a pr to make it configurable. ","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1526306215/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1526601364","html_url":"https://github.com/apache/pinot/issues/10686#issuecomment-1526601364","issue_url":"https://api.github.com/repos/apache/pinot/issues/10686","id":1526601364,"node_id":"IC_kwDOATCU_c5a_haU","user":{"login":"Jackie-Jiang","id":17555551,"node_id":"MDQ6VXNlcjE3NTU1NTUx","avatar_url":"https://avatars.githubusercontent.com/u/17555551?v=4","gravatar_id":"","url":"https://api.github.com/users/Jackie-Jiang","html_url":"https://github.com/Jackie-Jiang","followers_url":"https://api.github.com/users/Jackie-Jiang/followers","following_url":"https://api.github.com/users/Jackie-Jiang/following{/other_user}","gists_url":"https://api.github.com/users/Jackie-Jiang/gists{/gist_id}","starred_url":"https://api.github.com/users/Jackie-Jiang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Jackie-Jiang/subscriptions","organizations_url":"https://api.github.com/users/Jackie-Jiang/orgs","repos_url":"https://api.github.com/users/Jackie-Jiang/repos","events_url":"https://api.github.com/users/Jackie-Jiang/events{/privacy}","received_events_url":"https://api.github.com/users/Jackie-Jiang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-04-27T22:11:24Z","updated_at":"2023-04-27T22:11:24Z","author_association":"CONTRIBUTOR","body":"I see, so we actually expect it to cast from float to double and since we are converting from low precision to high precision it will return not equals.\r\nI feel the difference is from the behavior of always casting the RHS value vs hoisting up to the same type. Can you also try the comparison for other data types (int, long, float, double, big_decimal) and see what is the expected behavior from H2 and Postgres?","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1526601364/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1526632574","html_url":"https://github.com/apache/pinot/issues/10697#issuecomment-1526632574","issue_url":"https://api.github.com/repos/apache/pinot/issues/10697","id":1526632574,"node_id":"IC_kwDOATCU_c5a_pB-","user":{"login":"Jackie-Jiang","id":17555551,"node_id":"MDQ6VXNlcjE3NTU1NTUx","avatar_url":"https://avatars.githubusercontent.com/u/17555551?v=4","gravatar_id":"","url":"https://api.github.com/users/Jackie-Jiang","html_url":"https://github.com/Jackie-Jiang","followers_url":"https://api.github.com/users/Jackie-Jiang/followers","following_url":"https://api.github.com/users/Jackie-Jiang/following{/other_user}","gists_url":"https://api.github.com/users/Jackie-Jiang/gists{/gist_id}","starred_url":"https://api.github.com/users/Jackie-Jiang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Jackie-Jiang/subscriptions","organizations_url":"https://api.github.com/users/Jackie-Jiang/orgs","repos_url":"https://api.github.com/users/Jackie-Jiang/repos","events_url":"https://api.github.com/users/Jackie-Jiang/events{/privacy}","received_events_url":"https://api.github.com/users/Jackie-Jiang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-04-27T22:26:59Z","updated_at":"2023-04-27T22:26:59Z","author_association":"CONTRIBUTOR","body":"Good catch. The problem is from `DoubleOffHeapMutableDictionary.equalsValueAt()` which will always return `false` when input `value` is `NaN`.\r\nWe can fix it by comparing the `Double.doubleToLongBits()` (bytes level same), but I'm not sure if allowing `NaN` can cause other problems (it might break the binary search as well). Another option is to prevent `NaN` to be ingested (not allowing it as default value, and also replace it with default value when seeing it in the input data)","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1526632574/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1526726756","html_url":"https://github.com/apache/pinot/pull/10488#issuecomment-1526726756","issue_url":"https://api.github.com/repos/apache/pinot/issues/10488","id":1526726756,"node_id":"IC_kwDOATCU_c5bAABk","user":{"login":"xiangfu0","id":1202120,"node_id":"MDQ6VXNlcjEyMDIxMjA=","avatar_url":"https://avatars.githubusercontent.com/u/1202120?v=4","gravatar_id":"","url":"https://api.github.com/users/xiangfu0","html_url":"https://github.com/xiangfu0","followers_url":"https://api.github.com/users/xiangfu0/followers","following_url":"https://api.github.com/users/xiangfu0/following{/other_user}","gists_url":"https://api.github.com/users/xiangfu0/gists{/gist_id}","starred_url":"https://api.github.com/users/xiangfu0/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xiangfu0/subscriptions","organizations_url":"https://api.github.com/users/xiangfu0/orgs","repos_url":"https://api.github.com/users/xiangfu0/repos","events_url":"https://api.github.com/users/xiangfu0/events{/privacy}","received_events_url":"https://api.github.com/users/xiangfu0/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-04-27T23:16:40Z","updated_at":"2023-04-27T23:16:40Z","author_association":"CONTRIBUTOR","body":"> > this PR can be closed if we have #10685 yes?\r\n> \r\n> I think UncollectNode is still need, CorrelateNode is not needed.\r\n> \r\n> I will rebase once #10685 is merged.\r\n\r\nDecorrelate won't work on the correlate + uncollect node. I think we should handle this in a rule and write our own StageNode for translation.","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1526726756/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1526748086","html_url":"https://github.com/apache/pinot/issues/10637#issuecomment-1526748086","issue_url":"https://api.github.com/repos/apache/pinot/issues/10637","id":1526748086,"node_id":"IC_kwDOATCU_c5bAFO2","user":{"login":"61yao","id":111319704,"node_id":"U_kgDOBqKamA","avatar_url":"https://avatars.githubusercontent.com/u/111319704?v=4","gravatar_id":"","url":"https://api.github.com/users/61yao","html_url":"https://github.com/61yao","followers_url":"https://api.github.com/users/61yao/followers","following_url":"https://api.github.com/users/61yao/following{/other_user}","gists_url":"https://api.github.com/users/61yao/gists{/gist_id}","starred_url":"https://api.github.com/users/61yao/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/61yao/subscriptions","organizations_url":"https://api.github.com/users/61yao/orgs","repos_url":"https://api.github.com/users/61yao/repos","events_url":"https://api.github.com/users/61yao/events{/privacy}","received_events_url":"https://api.github.com/users/61yao/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-04-27T23:26:43Z","updated_at":"2023-04-27T23:26:43Z","author_association":"CONTRIBUTOR","body":"> \r\n\r\n@Jackie-Jiang Should we get https://github.com/apache/pinot/pull/10650 merged first to solve the incompatibility problem? ","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1526748086/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1526940948","html_url":"https://github.com/apache/pinot/pull/10683#issuecomment-1526940948","issue_url":"https://api.github.com/repos/apache/pinot/issues/10683","id":1526940948,"node_id":"IC_kwDOATCU_c5bA0UU","user":{"login":"walterddr","id":3581352,"node_id":"MDQ6VXNlcjM1ODEzNTI=","avatar_url":"https://avatars.githubusercontent.com/u/3581352?v=4","gravatar_id":"","url":"https://api.github.com/users/walterddr","html_url":"https://github.com/walterddr","followers_url":"https://api.github.com/users/walterddr/followers","following_url":"https://api.github.com/users/walterddr/following{/other_user}","gists_url":"https://api.github.com/users/walterddr/gists{/gist_id}","starred_url":"https://api.github.com/users/walterddr/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/walterddr/subscriptions","organizations_url":"https://api.github.com/users/walterddr/orgs","repos_url":"https://api.github.com/users/walterddr/repos","events_url":"https://api.github.com/users/walterddr/events{/privacy}","received_events_url":"https://api.github.com/users/walterddr/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-04-28T03:41:11Z","updated_at":"2023-04-28T03:41:11Z","author_association":"CONTRIBUTOR","body":"> @walterddr agreed, I think we should consider the error codes holistically sometime, it is indeed a bit misleading right now. This PR should not affect the future refactoring right? I don't think we depend on hard coded number here?\r\n\r\nhmm. i think we should agree upon the error code convension we wanted to use first. until then we should make this PR's query killing behavior return 200 with attach the exception on the JSON return payload just like the rest of the error query response. \r\nsince the return code is used by the REST client it would be particularly difficult for backward-compatibility modifications going forward (say tomorrow we decided to return a 4xx instead of 205) some browser will consider non-2xx as exception instead of an acceptable return which will cause confusion IMO\r\n","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1526940948/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1526941664","html_url":"https://github.com/apache/pinot/pull/10488#issuecomment-1526941664","issue_url":"https://api.github.com/repos/apache/pinot/issues/10488","id":1526941664,"node_id":"IC_kwDOATCU_c5bA0fg","user":{"login":"walterddr","id":3581352,"node_id":"MDQ6VXNlcjM1ODEzNTI=","avatar_url":"https://avatars.githubusercontent.com/u/3581352?v=4","gravatar_id":"","url":"https://api.github.com/users/walterddr","html_url":"https://github.com/walterddr","followers_url":"https://api.github.com/users/walterddr/followers","following_url":"https://api.github.com/users/walterddr/following{/other_user}","gists_url":"https://api.github.com/users/walterddr/gists{/gist_id}","starred_url":"https://api.github.com/users/walterddr/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/walterddr/subscriptions","organizations_url":"https://api.github.com/users/walterddr/orgs","repos_url":"https://api.github.com/users/walterddr/repos","events_url":"https://api.github.com/users/walterddr/events{/privacy}","received_events_url":"https://api.github.com/users/walterddr/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-04-28T03:42:20Z","updated_at":"2023-04-28T03:42:20Z","author_association":"CONTRIBUTOR","body":"> Decorrelate won't work on the correlate + uncollect node. I think we should handle this in a rule and write our own StageNode for translation.\r\n\r\nhmm. this is probably expected as the unCollect is more like a UDTF (user-defined table function) that expands 1-row into n-rows. modeling it as a self-join will not simplify the plan","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1526941664/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1526993617","html_url":"https://github.com/apache/pinot/pull/10655#issuecomment-1526993617","issue_url":"https://api.github.com/repos/apache/pinot/issues/10655","id":1526993617,"node_id":"IC_kwDOATCU_c5bBBLR","user":{"login":"shounakmk219","id":25409127,"node_id":"MDQ6VXNlcjI1NDA5MTI3","avatar_url":"https://avatars.githubusercontent.com/u/25409127?v=4","gravatar_id":"","url":"https://api.github.com/users/shounakmk219","html_url":"https://github.com/shounakmk219","followers_url":"https://api.github.com/users/shounakmk219/followers","following_url":"https://api.github.com/users/shounakmk219/following{/other_user}","gists_url":"https://api.github.com/users/shounakmk219/gists{/gist_id}","starred_url":"https://api.github.com/users/shounakmk219/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/shounakmk219/subscriptions","organizations_url":"https://api.github.com/users/shounakmk219/orgs","repos_url":"https://api.github.com/users/shounakmk219/repos","events_url":"https://api.github.com/users/shounakmk219/events{/privacy}","received_events_url":"https://api.github.com/users/shounakmk219/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-04-28T05:01:47Z","updated_at":"2023-04-28T05:01:47Z","author_association":"COLLABORATOR","body":"Hey @mcvsubbu I have changed the endpoint path as suggested, let me know if the above comment addressed your concerns.","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1526993617/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1527007900","html_url":"https://github.com/apache/pinot/pull/10698#issuecomment-1527007900","issue_url":"https://api.github.com/repos/apache/pinot/issues/10698","id":1527007900,"node_id":"IC_kwDOATCU_c5bBEqc","user":{"login":"codecov-commenter","id":65553080,"node_id":"MDQ6VXNlcjY1NTUzMDgw","avatar_url":"https://avatars.githubusercontent.com/u/65553080?v=4","gravatar_id":"","url":"https://api.github.com/users/codecov-commenter","html_url":"https://github.com/codecov-commenter","followers_url":"https://api.github.com/users/codecov-commenter/followers","following_url":"https://api.github.com/users/codecov-commenter/following{/other_user}","gists_url":"https://api.github.com/users/codecov-commenter/gists{/gist_id}","starred_url":"https://api.github.com/users/codecov-commenter/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codecov-commenter/subscriptions","organizations_url":"https://api.github.com/users/codecov-commenter/orgs","repos_url":"https://api.github.com/users/codecov-commenter/repos","events_url":"https://api.github.com/users/codecov-commenter/events{/privacy}","received_events_url":"https://api.github.com/users/codecov-commenter/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-04-28T05:23:22Z","updated_at":"2023-04-29T04:54:54Z","author_association":"NONE","body":"## [Codecov](https://codecov.io/gh/apache/pinot/pull/10698?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation) Report\n> Merging [#10698](https://codecov.io/gh/apache/pinot/pull/10698?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation) (f4a72b6) into [master](https://codecov.io/gh/apache/pinot/commit/f5dba86d5cb19eeee9c8eb7a7cff81d92fe9958b?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation) (f5dba86) will **decrease** coverage by `0.01%`.\n> The diff coverage is `100.00%`.\n\n```diff\n@@             Coverage Diff              @@\n##             master   #10698      +/-   ##\n============================================\n- Coverage     68.44%   68.43%   -0.01%     \n- Complexity     6418     6422       +4     \n============================================\n  Files          2108     2112       +4     \n  Lines        113885   113996     +111     \n  Branches      17201    17219      +18     \n============================================\n+ Hits          77950    78016      +66     \n- Misses        30397    30433      +36     \n- Partials       5538     5547       +9     \n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| integration1 | `24.36% <0.00%> (+0.01%)` | :arrow_up: |\n| unittests1 | `67.83% <100.00%> (+0.05%)` | :arrow_up: |\n| unittests2 | `13.81% <0.00%> (-0.03%)` | :arrow_down: |\n\nFlags with carried forward coverage won't be shown. [Click here](https://docs.codecov.io/docs/carryforward-flags?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation#carryforward-flags-in-the-pull-request-comment) to find out more.\n\n| [Impacted Files](https://codecov.io/gh/apache/pinot/pull/10698?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation) | Coverage Δ | |\n|---|---|---|\n| [...va/org/apache/pinot/query/runtime/QueryRunner.java](https://codecov.io/gh/apache/pinot/pull/10698?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation#diff-cGlub3QtcXVlcnktcnVudGltZS9zcmMvbWFpbi9qYXZhL29yZy9hcGFjaGUvcGlub3QvcXVlcnkvcnVudGltZS9RdWVyeVJ1bm5lci5qYXZh) | `83.19% <100.00%> (+1.29%)` | :arrow_up: |\n\n... and [58 files with indirect coverage changes](https://codecov.io/gh/apache/pinot/pull/10698/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation)\n\n:mega: We’re building smart automated test selection to slash your CI/CD build times. [Learn more](https://about.codecov.io/iterative-testing/?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation)\n","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1527007900/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1527101420","html_url":"https://github.com/apache/pinot/issues/10697#issuecomment-1527101420","issue_url":"https://api.github.com/repos/apache/pinot/issues/10697","id":1527101420,"node_id":"IC_kwDOATCU_c5bBbfs","user":{"login":"jvenant","id":1199901,"node_id":"MDQ6VXNlcjExOTk5MDE=","avatar_url":"https://avatars.githubusercontent.com/u/1199901?v=4","gravatar_id":"","url":"https://api.github.com/users/jvenant","html_url":"https://github.com/jvenant","followers_url":"https://api.github.com/users/jvenant/followers","following_url":"https://api.github.com/users/jvenant/following{/other_user}","gists_url":"https://api.github.com/users/jvenant/gists{/gist_id}","starred_url":"https://api.github.com/users/jvenant/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jvenant/subscriptions","organizations_url":"https://api.github.com/users/jvenant/orgs","repos_url":"https://api.github.com/users/jvenant/repos","events_url":"https://api.github.com/users/jvenant/events{/privacy}","received_events_url":"https://api.github.com/users/jvenant/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-04-28T07:13:31Z","updated_at":"2023-04-28T07:13:31Z","author_association":"CONTRIBUTOR","body":"Maybe a quick fix would be to disable NaN.\r\nBut from my standpoint, to be able to use NaN would be a better solution as it is not semantically equivalent to Infinities, null or zero. It is a very common value used in mathematical and finance domains.\r\nThe only other place where we have issue with NaN so far is in the where filters. We have to do something like : `cast(num_col as STRING) = 'NaN'`. \r\n`num_col = 'NaN'`, `num_col != 'NaN'` run, but doesn't filter the records correctly","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1527101420/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1527106284","html_url":"https://github.com/apache/pinot/pull/10699#issuecomment-1527106284","issue_url":"https://api.github.com/repos/apache/pinot/issues/10699","id":1527106284,"node_id":"IC_kwDOATCU_c5bBcrs","user":{"login":"codecov-commenter","id":65553080,"node_id":"MDQ6VXNlcjY1NTUzMDgw","avatar_url":"https://avatars.githubusercontent.com/u/65553080?v=4","gravatar_id":"","url":"https://api.github.com/users/codecov-commenter","html_url":"https://github.com/codecov-commenter","followers_url":"https://api.github.com/users/codecov-commenter/followers","following_url":"https://api.github.com/users/codecov-commenter/following{/other_user}","gists_url":"https://api.github.com/users/codecov-commenter/gists{/gist_id}","starred_url":"https://api.github.com/users/codecov-commenter/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codecov-commenter/subscriptions","organizations_url":"https://api.github.com/users/codecov-commenter/orgs","repos_url":"https://api.github.com/users/codecov-commenter/repos","events_url":"https://api.github.com/users/codecov-commenter/events{/privacy}","received_events_url":"https://api.github.com/users/codecov-commenter/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-04-28T07:18:42Z","updated_at":"2023-04-28T07:46:01Z","author_association":"NONE","body":"## [Codecov](https://codecov.io/gh/apache/pinot/pull/10699?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation) Report\n> Merging [#10699](https://codecov.io/gh/apache/pinot/pull/10699?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation) (fea63f3) into [master](https://codecov.io/gh/apache/pinot/commit/4a6e31d38ae651ab8b173af472e03bd54bf22228?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation) (4a6e31d) will **increase** coverage by `0.00%`.\n> The diff coverage is `66.66%`.\n\n```diff\n@@            Coverage Diff            @@\n##             master   #10699   +/-   ##\n=========================================\n  Coverage     70.26%   70.26%           \n+ Complexity     6431     6427    -4     \n=========================================\n  Files          2107     2108    +1     \n  Lines        113804   113885   +81     \n  Branches      17202    17201    -1     \n=========================================\n+ Hits          79959    80022   +63     \n- Misses        28245    28268   +23     \n+ Partials       5600     5595    -5     \n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| integration1 | `24.34% <0.00%> (+0.05%)` | :arrow_up: |\n| integration2 | `24.00% <0.00%> (-0.10%)` | :arrow_down: |\n| unittests1 | `67.78% <66.66%> (+0.01%)` | :arrow_up: |\n| unittests2 | `13.83% <0.00%> (-0.01%)` | :arrow_down: |\n\nFlags with carried forward coverage won't be shown. [Click here](https://docs.codecov.io/docs/carryforward-flags?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation#carryforward-flags-in-the-pull-request-comment) to find out more.\n\n| [Impacted Files](https://codecov.io/gh/apache/pinot/pull/10699?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation) | Coverage Δ | |\n|---|---|---|\n| [...pinot/query/runtime/operator/HashJoinOperator.java](https://codecov.io/gh/apache/pinot/pull/10699?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation#diff-cGlub3QtcXVlcnktcnVudGltZS9zcmMvbWFpbi9qYXZhL29yZy9hcGFjaGUvcGlub3QvcXVlcnkvcnVudGltZS9vcGVyYXRvci9IYXNoSm9pbk9wZXJhdG9yLmphdmE=) | `94.16% <66.66%> (ø)` | |\n\n... and [59 files with indirect coverage changes](https://codecov.io/gh/apache/pinot/pull/10699/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation)\n\n:mega: We’re building smart automated test selection to slash your CI/CD build times. [Learn more](https://about.codecov.io/iterative-testing/?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation)\n","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1527106284/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1527815550","html_url":"https://github.com/apache/pinot/issues/10494#issuecomment-1527815550","issue_url":"https://api.github.com/repos/apache/pinot/issues/10494","id":1527815550,"node_id":"IC_kwDOATCU_c5bEJ1-","user":{"login":"deemoliu","id":15416419,"node_id":"MDQ6VXNlcjE1NDE2NDE5","avatar_url":"https://avatars.githubusercontent.com/u/15416419?v=4","gravatar_id":"","url":"https://api.github.com/users/deemoliu","html_url":"https://github.com/deemoliu","followers_url":"https://api.github.com/users/deemoliu/followers","following_url":"https://api.github.com/users/deemoliu/following{/other_user}","gists_url":"https://api.github.com/users/deemoliu/gists{/gist_id}","starred_url":"https://api.github.com/users/deemoliu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/deemoliu/subscriptions","organizations_url":"https://api.github.com/users/deemoliu/orgs","repos_url":"https://api.github.com/users/deemoliu/repos","events_url":"https://api.github.com/users/deemoliu/events{/privacy}","received_events_url":"https://api.github.com/users/deemoliu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-04-28T16:39:25Z","updated_at":"2023-04-28T16:39:25Z","author_association":"CONTRIBUTOR","body":"I can take a look at partial upsert handler and provide a potential optimization.\r\nWe might ignore and avoid accessing null values during 'merging' to reduce disk I/O.\r\n\r\n@Jackie-Jiang Do you think this will be helpful?\r\n\r\n@ankitsultana  I think this issue can happen when there are too many columns in a high throughput kafka topic. \r\n do we have metrics on disk IO metric for this table? \r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1527815550/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1527873655","html_url":"https://github.com/apache/pinot/issues/10494#issuecomment-1527873655","issue_url":"https://api.github.com/repos/apache/pinot/issues/10494","id":1527873655,"node_id":"IC_kwDOATCU_c5bEYB3","user":{"login":"ankitsultana","id":8644710,"node_id":"MDQ6VXNlcjg2NDQ3MTA=","avatar_url":"https://avatars.githubusercontent.com/u/8644710?v=4","gravatar_id":"","url":"https://api.github.com/users/ankitsultana","html_url":"https://github.com/ankitsultana","followers_url":"https://api.github.com/users/ankitsultana/followers","following_url":"https://api.github.com/users/ankitsultana/following{/other_user}","gists_url":"https://api.github.com/users/ankitsultana/gists{/gist_id}","starred_url":"https://api.github.com/users/ankitsultana/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ankitsultana/subscriptions","organizations_url":"https://api.github.com/users/ankitsultana/orgs","repos_url":"https://api.github.com/users/ankitsultana/repos","events_url":"https://api.github.com/users/ankitsultana/events{/privacy}","received_events_url":"https://api.github.com/users/ankitsultana/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-04-28T17:27:29Z","updated_at":"2023-04-28T17:27:29Z","author_association":"CONTRIBUTOR","body":"let's follow-up offline. I think we can keep the open source code as is for now.","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1527873655/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1527875065","html_url":"https://github.com/apache/pinot/issues/10539#issuecomment-1527875065","issue_url":"https://api.github.com/repos/apache/pinot/issues/10539","id":1527875065,"node_id":"IC_kwDOATCU_c5bEYX5","user":{"login":"klsince","id":61892277,"node_id":"MDQ6VXNlcjYxODkyMjc3","avatar_url":"https://avatars.githubusercontent.com/u/61892277?v=4","gravatar_id":"","url":"https://api.github.com/users/klsince","html_url":"https://github.com/klsince","followers_url":"https://api.github.com/users/klsince/followers","following_url":"https://api.github.com/users/klsince/following{/other_user}","gists_url":"https://api.github.com/users/klsince/gists{/gist_id}","starred_url":"https://api.github.com/users/klsince/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/klsince/subscriptions","organizations_url":"https://api.github.com/users/klsince/orgs","repos_url":"https://api.github.com/users/klsince/repos","events_url":"https://api.github.com/users/klsince/events{/privacy}","received_events_url":"https://api.github.com/users/klsince/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-04-28T17:29:02Z","updated_at":"2023-04-28T17:29:02Z","author_association":"CONTRIBUTOR","body":"https://github.com/apache/pinot/pull/10660 trying to tackle this issue: 1) to parallelize the BF based pruner; 2) and honor the timeout set in query option. pls help review. ","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1527875065/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1528037302","html_url":"https://github.com/apache/pinot/pull/10650#issuecomment-1528037302","issue_url":"https://api.github.com/repos/apache/pinot/issues/10650","id":1528037302,"node_id":"IC_kwDOATCU_c5bE_-2","user":{"login":"Jackie-Jiang","id":17555551,"node_id":"MDQ6VXNlcjE3NTU1NTUx","avatar_url":"https://avatars.githubusercontent.com/u/17555551?v=4","gravatar_id":"","url":"https://api.github.com/users/Jackie-Jiang","html_url":"https://github.com/Jackie-Jiang","followers_url":"https://api.github.com/users/Jackie-Jiang/followers","following_url":"https://api.github.com/users/Jackie-Jiang/following{/other_user}","gists_url":"https://api.github.com/users/Jackie-Jiang/gists{/gist_id}","starred_url":"https://api.github.com/users/Jackie-Jiang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Jackie-Jiang/subscriptions","organizations_url":"https://api.github.com/users/Jackie-Jiang/orgs","repos_url":"https://api.github.com/users/Jackie-Jiang/repos","events_url":"https://api.github.com/users/Jackie-Jiang/events{/privacy}","received_events_url":"https://api.github.com/users/Jackie-Jiang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-04-28T20:08:15Z","updated_at":"2023-04-28T20:08:15Z","author_association":"CONTRIBUTOR","body":"Please check the test failures","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1528037302/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1528061693","html_url":"https://github.com/apache/pinot/pull/10700#issuecomment-1528061693","issue_url":"https://api.github.com/repos/apache/pinot/issues/10700","id":1528061693,"node_id":"IC_kwDOATCU_c5bFF79","user":{"login":"codecov-commenter","id":65553080,"node_id":"MDQ6VXNlcjY1NTUzMDgw","avatar_url":"https://avatars.githubusercontent.com/u/65553080?v=4","gravatar_id":"","url":"https://api.github.com/users/codecov-commenter","html_url":"https://github.com/codecov-commenter","followers_url":"https://api.github.com/users/codecov-commenter/followers","following_url":"https://api.github.com/users/codecov-commenter/following{/other_user}","gists_url":"https://api.github.com/users/codecov-commenter/gists{/gist_id}","starred_url":"https://api.github.com/users/codecov-commenter/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codecov-commenter/subscriptions","organizations_url":"https://api.github.com/users/codecov-commenter/orgs","repos_url":"https://api.github.com/users/codecov-commenter/repos","events_url":"https://api.github.com/users/codecov-commenter/events{/privacy}","received_events_url":"https://api.github.com/users/codecov-commenter/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-04-28T20:31:45Z","updated_at":"2023-06-15T16:02:49Z","author_association":"NONE","body":"## [Codecov](https://app.codecov.io/gh/apache/pinot/pull/10700?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) Report\n> Merging [#10700](https://app.codecov.io/gh/apache/pinot/pull/10700?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) (4da7940) into [master](https://app.codecov.io/gh/apache/pinot/commit/90dc3a3c566e5d634aa00632993ab86ce0549ba5?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) (90dc3a3) will **decrease** coverage by `0.01%`.\n> The diff coverage is `0.00%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master   #10700      +/-   ##\n==========================================\n- Coverage    0.11%    0.11%   -0.01%     \n==========================================\n  Files        2188     2188              \n  Lines      117592   117608      +16     \n  Branches    17768    17773       +5     \n==========================================\n  Hits          137      137              \n- Misses     117435   117451      +16     \n  Partials       20       20              \n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| integration1temurin11 | `0.00% <0.00%> (?)` | |\n| integration1temurin17 | `0.00% <0.00%> (?)` | |\n| integration1temurin20 | `0.00% <0.00%> (ø)` | |\n| integration2temurin11 | `0.00% <0.00%> (ø)` | |\n| integration2temurin17 | `0.00% <0.00%> (ø)` | |\n| integration2temurin20 | `0.00% <0.00%> (ø)` | |\n| unittests1temurin11 | `0.00% <0.00%> (ø)` | |\n| unittests1temurin17 | `0.00% <0.00%> (?)` | |\n| unittests1temurin20 | `0.00% <0.00%> (ø)` | |\n| unittests2temurin11 | `0.11% <0.00%> (-0.01%)` | :arrow_down: |\n| unittests2temurin17 | `0.11% <0.00%> (-0.01%)` | :arrow_down: |\n| unittests2temurin20 | `0.11% <0.00%> (-0.01%)` | :arrow_down: |\n\nFlags with carried forward coverage won't be shown. [Click here](https://docs.codecov.io/docs/carryforward-flags?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache#carryforward-flags-in-the-pull-request-comment) to find out more.\n\n| [Impacted Files](https://app.codecov.io/gh/apache/pinot/pull/10700?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) | Coverage Δ | |\n|---|---|---|\n| [...pache/pinot/query/planner/plannode/WindowNode.java](https://app.codecov.io/gh/apache/pinot/pull/10700?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache#diff-cGlub3QtcXVlcnktcGxhbm5lci9zcmMvbWFpbi9qYXZhL29yZy9hcGFjaGUvcGlub3QvcXVlcnkvcGxhbm5lci9wbGFubm9kZS9XaW5kb3dOb2RlLmphdmE=) | `0.00% <0.00%> (ø)` | |\n| [...uery/runtime/operator/WindowAggregateOperator.java](https://app.codecov.io/gh/apache/pinot/pull/10700?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache#diff-cGlub3QtcXVlcnktcnVudGltZS9zcmMvbWFpbi9qYXZhL29yZy9hcGFjaGUvcGlub3QvcXVlcnkvcnVudGltZS9vcGVyYXRvci9XaW5kb3dBZ2dyZWdhdGVPcGVyYXRvci5qYXZh) | `0.00% <0.00%> (ø)` | |\n\n:mega: We’re building smart automated test selection to slash your CI/CD build times. [Learn more](https://about.codecov.io/iterative-testing/?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache)\n","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1528061693/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1528144765","html_url":"https://github.com/apache/pinot/issues/10539#issuecomment-1528144765","issue_url":"https://api.github.com/repos/apache/pinot/issues/10539","id":1528144765,"node_id":"IC_kwDOATCU_c5bFaN9","user":{"login":"jadami10","id":4760722,"node_id":"MDQ6VXNlcjQ3NjA3MjI=","avatar_url":"https://avatars.githubusercontent.com/u/4760722?v=4","gravatar_id":"","url":"https://api.github.com/users/jadami10","html_url":"https://github.com/jadami10","followers_url":"https://api.github.com/users/jadami10/followers","following_url":"https://api.github.com/users/jadami10/following{/other_user}","gists_url":"https://api.github.com/users/jadami10/gists{/gist_id}","starred_url":"https://api.github.com/users/jadami10/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jadami10/subscriptions","organizations_url":"https://api.github.com/users/jadami10/orgs","repos_url":"https://api.github.com/users/jadami10/repos","events_url":"https://api.github.com/users/jadami10/events{/privacy}","received_events_url":"https://api.github.com/users/jadami10/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-04-28T22:11:03Z","updated_at":"2023-04-28T22:11:03Z","author_association":"CONTRIBUTOR","body":"looks like it merged! I'll help test it next week. cc @priyen-stripe ","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1528144765/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1528187122","html_url":"https://github.com/apache/pinot/issues/9504#issuecomment-1528187122","issue_url":"https://api.github.com/repos/apache/pinot/issues/9504","id":1528187122,"node_id":"IC_kwDOATCU_c5bFkjy","user":{"login":"shenyu0127","id":6668780,"node_id":"MDQ6VXNlcjY2Njg3ODA=","avatar_url":"https://avatars.githubusercontent.com/u/6668780?v=4","gravatar_id":"","url":"https://api.github.com/users/shenyu0127","html_url":"https://github.com/shenyu0127","followers_url":"https://api.github.com/users/shenyu0127/followers","following_url":"https://api.github.com/users/shenyu0127/following{/other_user}","gists_url":"https://api.github.com/users/shenyu0127/gists{/gist_id}","starred_url":"https://api.github.com/users/shenyu0127/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/shenyu0127/subscriptions","organizations_url":"https://api.github.com/users/shenyu0127/orgs","repos_url":"https://api.github.com/users/shenyu0127/repos","events_url":"https://api.github.com/users/shenyu0127/events{/privacy}","received_events_url":"https://api.github.com/users/shenyu0127/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-04-28T23:22:04Z","updated_at":"2023-04-28T23:22:04Z","author_association":"CONTRIBUTOR","body":"This bug means a feature request: we need to add a new type `timestamp` to `Literal` in the [query.thrift](https://github.com/apache/pinot/blob/2bcf592d433241b07dcaac82833df4b225617410/pinot-common/src/thrift/query.thrift#L70).\r\n\r\nWe get an error in query `select cast(cast ('2023-01-01 00:00:00' as timestamp) as long) from Table`. This is because the inner `cast` returns a `Literal` of type `String` ([here](https://github.com/apache/pinot/blob/2bcf592d433241b07dcaac82833df4b225617410/pinot-common/src/main/java/org/apache/pinot/sql/parsers/rewriter/CompileTimeFunctionsInvoker.java#L89) the `getLiteralExpression` function takes a `Timestamp` object and returns a `Literal` of type `String`), which cannot be cast to type `long`.\r\n\r\nThe same bug was also reported in https://github.com/apache/pinot/issues/9853 and @Jackie-Jiang identified the missing feature.","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1528187122/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1528206336","html_url":"https://github.com/apache/pinot/issues/10680#issuecomment-1528206336","issue_url":"https://api.github.com/repos/apache/pinot/issues/10680","id":1528206336,"node_id":"IC_kwDOATCU_c5bFpQA","user":{"login":"travis-cook-sfdc","id":119886245,"node_id":"U_kgDOByVRpQ","avatar_url":"https://avatars.githubusercontent.com/u/119886245?v=4","gravatar_id":"","url":"https://api.github.com/users/travis-cook-sfdc","html_url":"https://github.com/travis-cook-sfdc","followers_url":"https://api.github.com/users/travis-cook-sfdc/followers","following_url":"https://api.github.com/users/travis-cook-sfdc/following{/other_user}","gists_url":"https://api.github.com/users/travis-cook-sfdc/gists{/gist_id}","starred_url":"https://api.github.com/users/travis-cook-sfdc/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/travis-cook-sfdc/subscriptions","organizations_url":"https://api.github.com/users/travis-cook-sfdc/orgs","repos_url":"https://api.github.com/users/travis-cook-sfdc/repos","events_url":"https://api.github.com/users/travis-cook-sfdc/events{/privacy}","received_events_url":"https://api.github.com/users/travis-cook-sfdc/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-04-28T23:36:31Z","updated_at":"2023-04-28T23:37:22Z","author_association":"NONE","body":"I can't remember what the documentation said previously, but I had interpreted the `metadata` field to be used for arbitrary custom key/value pairs to be added to the table.  \r\n\r\nWould it be reasonable to leave `customConfigs` where it is but also make it possible for additional `metadata` fields at the top level to be included?  That would make it possible to store custom attributes for individual tables inside of `metadata` instead of necessarily needing to nest inside of `customConfigs`.  It also wouldn't require doing anything to pull things currently stored in `customConfigs` up.","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1528206336/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1528308483","html_url":"https://github.com/apache/pinot/issues/10701#issuecomment-1528308483","issue_url":"https://api.github.com/repos/apache/pinot/issues/10701","id":1528308483,"node_id":"IC_kwDOATCU_c5bGCMD","user":{"login":"ankitsultana","id":8644710,"node_id":"MDQ6VXNlcjg2NDQ3MTA=","avatar_url":"https://avatars.githubusercontent.com/u/8644710?v=4","gravatar_id":"","url":"https://api.github.com/users/ankitsultana","html_url":"https://github.com/ankitsultana","followers_url":"https://api.github.com/users/ankitsultana/followers","following_url":"https://api.github.com/users/ankitsultana/following{/other_user}","gists_url":"https://api.github.com/users/ankitsultana/gists{/gist_id}","starred_url":"https://api.github.com/users/ankitsultana/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ankitsultana/subscriptions","organizations_url":"https://api.github.com/users/ankitsultana/orgs","repos_url":"https://api.github.com/users/ankitsultana/repos","events_url":"https://api.github.com/users/ankitsultana/events{/privacy}","received_events_url":"https://api.github.com/users/ankitsultana/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-04-29T00:31:35Z","updated_at":"2023-04-29T00:31:35Z","author_association":"CONTRIBUTOR","body":"From Calcite's perspective this is correct and you can refer to `RelOptTable`.\r\n\r\nI am not sure if we allow dot separated table names in Pinot.","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1528308483/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1528322193","html_url":"https://github.com/apache/pinot/issues/10701#issuecomment-1528322193","issue_url":"https://api.github.com/repos/apache/pinot/issues/10701","id":1528322193,"node_id":"IC_kwDOATCU_c5bGFiR","user":{"login":"abhioncbr","id":1076944,"node_id":"MDQ6VXNlcjEwNzY5NDQ=","avatar_url":"https://avatars.githubusercontent.com/u/1076944?v=4","gravatar_id":"","url":"https://api.github.com/users/abhioncbr","html_url":"https://github.com/abhioncbr","followers_url":"https://api.github.com/users/abhioncbr/followers","following_url":"https://api.github.com/users/abhioncbr/following{/other_user}","gists_url":"https://api.github.com/users/abhioncbr/gists{/gist_id}","starred_url":"https://api.github.com/users/abhioncbr/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/abhioncbr/subscriptions","organizations_url":"https://api.github.com/users/abhioncbr/orgs","repos_url":"https://api.github.com/users/abhioncbr/repos","events_url":"https://api.github.com/users/abhioncbr/events{/privacy}","received_events_url":"https://api.github.com/users/abhioncbr/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-04-29T00:40:22Z","updated_at":"2023-04-29T00:40:22Z","author_association":"CONTRIBUTOR","body":"> From Calcite's perspective this is correct and you can refer to `RelOptTable`.\r\n> \r\n> I am not sure if we allow dot separated table names in Pinot.\r\n\r\nThanks for the confirmation. \r\nI came to know about this because one of the integration [test case failed](https://github.com/apache/pinot/blob/master/pinot-integration-tests/src/test/java/org/apache/pinot/integration/tests/OfflineClusterIntegrationTest.java#L2367) with the usage of the above method.","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1528322193/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1528435260","html_url":"https://github.com/apache/pinot/pull/10692#issuecomment-1528435260","issue_url":"https://api.github.com/repos/apache/pinot/issues/10692","id":1528435260,"node_id":"IC_kwDOATCU_c5bGhI8","user":{"login":"abhioncbr","id":1076944,"node_id":"MDQ6VXNlcjEwNzY5NDQ=","avatar_url":"https://avatars.githubusercontent.com/u/1076944?v=4","gravatar_id":"","url":"https://api.github.com/users/abhioncbr","html_url":"https://github.com/abhioncbr","followers_url":"https://api.github.com/users/abhioncbr/followers","following_url":"https://api.github.com/users/abhioncbr/following{/other_user}","gists_url":"https://api.github.com/users/abhioncbr/gists{/gist_id}","starred_url":"https://api.github.com/users/abhioncbr/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/abhioncbr/subscriptions","organizations_url":"https://api.github.com/users/abhioncbr/orgs","repos_url":"https://api.github.com/users/abhioncbr/repos","events_url":"https://api.github.com/users/abhioncbr/events{/privacy}","received_events_url":"https://api.github.com/users/abhioncbr/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-04-29T01:37:37Z","updated_at":"2023-04-29T01:37:37Z","author_association":"CONTRIBUTOR","body":"@walterddr @Jackie-Jiang, Please review. Thanks!","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1528435260/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1528600809","html_url":"https://github.com/apache/pinot/pull/10698#issuecomment-1528600809","issue_url":"https://api.github.com/repos/apache/pinot/issues/10698","id":1528600809,"node_id":"IC_kwDOATCU_c5bHJjp","user":{"login":"walterddr","id":3581352,"node_id":"MDQ6VXNlcjM1ODEzNTI=","avatar_url":"https://avatars.githubusercontent.com/u/3581352?v=4","gravatar_id":"","url":"https://api.github.com/users/walterddr","html_url":"https://github.com/walterddr","followers_url":"https://api.github.com/users/walterddr/followers","following_url":"https://api.github.com/users/walterddr/following{/other_user}","gists_url":"https://api.github.com/users/walterddr/gists{/gist_id}","starred_url":"https://api.github.com/users/walterddr/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/walterddr/subscriptions","organizations_url":"https://api.github.com/users/walterddr/orgs","repos_url":"https://api.github.com/users/walterddr/repos","events_url":"https://api.github.com/users/walterddr/events{/privacy}","received_events_url":"https://api.github.com/users/walterddr/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-04-29T03:32:15Z","updated_at":"2023-04-29T04:09:33Z","author_association":"CONTRIBUTOR","body":"Waiting for one internal perf verification and will mark ready afterward\r\n[update] done result looks promising","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1528600809/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1528739296","html_url":"https://github.com/apache/pinot/pull/10702#issuecomment-1528739296","issue_url":"https://api.github.com/repos/apache/pinot/issues/10702","id":1528739296,"node_id":"IC_kwDOATCU_c5bHrXg","user":{"login":"codecov-commenter","id":65553080,"node_id":"MDQ6VXNlcjY1NTUzMDgw","avatar_url":"https://avatars.githubusercontent.com/u/65553080?v=4","gravatar_id":"","url":"https://api.github.com/users/codecov-commenter","html_url":"https://github.com/codecov-commenter","followers_url":"https://api.github.com/users/codecov-commenter/followers","following_url":"https://api.github.com/users/codecov-commenter/following{/other_user}","gists_url":"https://api.github.com/users/codecov-commenter/gists{/gist_id}","starred_url":"https://api.github.com/users/codecov-commenter/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codecov-commenter/subscriptions","organizations_url":"https://api.github.com/users/codecov-commenter/orgs","repos_url":"https://api.github.com/users/codecov-commenter/repos","events_url":"https://api.github.com/users/codecov-commenter/events{/privacy}","received_events_url":"https://api.github.com/users/codecov-commenter/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-04-29T09:51:21Z","updated_at":"2023-04-29T10:36:24Z","author_association":"NONE","body":"## [Codecov](https://codecov.io/gh/apache/pinot/pull/10702?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation) Report\n> Merging [#10702](https://codecov.io/gh/apache/pinot/pull/10702?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation) (3340656) into [master](https://codecov.io/gh/apache/pinot/commit/45eea269e8942dd5c031c5b1789199a6c5397cd0?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation) (45eea26) will **increase** coverage by `38.30%`.\n> The diff coverage is `71.11%`.\n\n```diff\n@@              Coverage Diff              @@\n##             master   #10702       +/-   ##\n=============================================\n+ Coverage     31.97%   70.27%   +38.30%     \n- Complexity      453     6439     +5986     \n=============================================\n  Files          2111     2112        +1     \n  Lines        113959   114036       +77     \n  Branches      17196    17228       +32     \n=============================================\n+ Hits          36433    80144    +43711     \n+ Misses        74234    28283    -45951     \n- Partials       3292     5609     +2317     \n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| integration1 | `24.30% <0.00%> (-0.03%)` | :arrow_down: |\n| integration2 | `24.15% <0.00%> (?)` | |\n| unittests1 | `67.80% <71.11%> (?)` | |\n| unittests2 | `13.81% <0.00%> (-0.03%)` | :arrow_down: |\n\nFlags with carried forward coverage won't be shown. [Click here](https://docs.codecov.io/docs/carryforward-flags?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation#carryforward-flags-in-the-pull-request-comment) to find out more.\n\n| [Impacted Files](https://codecov.io/gh/apache/pinot/pull/10702?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation) | Coverage Δ | |\n|---|---|---|\n| [...cal/upsert/BasePartitionUpsertMetadataManager.java](https://codecov.io/gh/apache/pinot/pull/10702?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation#diff-cGlub3Qtc2VnbWVudC1sb2NhbC9zcmMvbWFpbi9qYXZhL29yZy9hcGFjaGUvcGlub3Qvc2VnbWVudC9sb2NhbC91cHNlcnQvQmFzZVBhcnRpdGlvblVwc2VydE1ldGFkYXRhTWFuYWdlci5qYXZh) | `50.00% <0.00%> (+50.00%)` | :arrow_up: |\n| [...not/segment/local/upsert/PartialUpsertHandler.java](https://codecov.io/gh/apache/pinot/pull/10702?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation#diff-cGlub3Qtc2VnbWVudC1sb2NhbC9zcmMvbWFpbi9qYXZhL29yZy9hcGFjaGUvcGlub3Qvc2VnbWVudC9sb2NhbC91cHNlcnQvUGFydGlhbFVwc2VydEhhbmRsZXIuamF2YQ==) | `77.77% <50.00%> (+77.77%)` | :arrow_up: |\n| [...local/indexsegment/mutable/MutableSegmentImpl.java](https://codecov.io/gh/apache/pinot/pull/10702?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation#diff-cGlub3Qtc2VnbWVudC1sb2NhbC9zcmMvbWFpbi9qYXZhL29yZy9hcGFjaGUvcGlub3Qvc2VnbWVudC9sb2NhbC9pbmRleHNlZ21lbnQvbXV0YWJsZS9NdXRhYmxlU2VnbWVudEltcGwuamF2YQ==) | `57.53% <75.00%> (+57.53%)` | :arrow_up: |\n| [...t/ConcurrentMapPartitionUpsertMetadataManager.java](https://codecov.io/gh/apache/pinot/pull/10702?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation#diff-cGlub3Qtc2VnbWVudC1sb2NhbC9zcmMvbWFpbi9qYXZhL29yZy9hcGFjaGUvcGlub3Qvc2VnbWVudC9sb2NhbC91cHNlcnQvQ29uY3VycmVudE1hcFBhcnRpdGlvblVwc2VydE1ldGFkYXRhTWFuYWdlci5qYXZh) | `80.14% <78.12%> (+80.14%)` | :arrow_up: |\n\n... and [1342 files with indirect coverage changes](https://codecov.io/gh/apache/pinot/pull/10702/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation)\n\n:mega: We’re building smart automated test selection to slash your CI/CD build times. [Learn more](https://about.codecov.io/iterative-testing/?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation)\n","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1528739296/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1528901819","html_url":"https://github.com/apache/pinot/issues/10680#issuecomment-1528901819","issue_url":"https://api.github.com/repos/apache/pinot/issues/10680","id":1528901819,"node_id":"IC_kwDOATCU_c5bITC7","user":{"login":"Jackie-Jiang","id":17555551,"node_id":"MDQ6VXNlcjE3NTU1NTUx","avatar_url":"https://avatars.githubusercontent.com/u/17555551?v=4","gravatar_id":"","url":"https://api.github.com/users/Jackie-Jiang","html_url":"https://github.com/Jackie-Jiang","followers_url":"https://api.github.com/users/Jackie-Jiang/followers","following_url":"https://api.github.com/users/Jackie-Jiang/following{/other_user}","gists_url":"https://api.github.com/users/Jackie-Jiang/gists{/gist_id}","starred_url":"https://api.github.com/users/Jackie-Jiang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Jackie-Jiang/subscriptions","organizations_url":"https://api.github.com/users/Jackie-Jiang/orgs","repos_url":"https://api.github.com/users/Jackie-Jiang/repos","events_url":"https://api.github.com/users/Jackie-Jiang/events{/privacy}","received_events_url":"https://api.github.com/users/Jackie-Jiang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-04-30T00:09:23Z","updated_at":"2023-04-30T00:09:23Z","author_association":"CONTRIBUTOR","body":"> Would it be reasonable to leave `customConfigs` where it is but also make it possible for additional `metadata` fields at the top level to be included? That would make it possible to store custom attributes for individual tables inside of `metadata` instead of necessarily needing to nest inside of `customConfigs`. It also wouldn't require doing anything to pull things currently stored in `customConfigs` up.\r\n\r\nI don't think it is possible unless we do manual ser-de for that JSON field, which is quite complicated. If we want to make `metadata` an arbitrary key-value store, we need to define `metadata` field as a map, but that means there is no way to set `customConfigs` as an inner map of it.","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1528901819/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1528967707","html_url":"https://github.com/apache/pinot/pull/10702#issuecomment-1528967707","issue_url":"https://api.github.com/repos/apache/pinot/issues/10702","id":1528967707,"node_id":"IC_kwDOATCU_c5bIjIb","user":{"login":"navina","id":1909480,"node_id":"MDQ6VXNlcjE5MDk0ODA=","avatar_url":"https://avatars.githubusercontent.com/u/1909480?v=4","gravatar_id":"","url":"https://api.github.com/users/navina","html_url":"https://github.com/navina","followers_url":"https://api.github.com/users/navina/followers","following_url":"https://api.github.com/users/navina/following{/other_user}","gists_url":"https://api.github.com/users/navina/gists{/gist_id}","starred_url":"https://api.github.com/users/navina/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/navina/subscriptions","organizations_url":"https://api.github.com/users/navina/orgs","repos_url":"https://api.github.com/users/navina/repos","events_url":"https://api.github.com/users/navina/events{/privacy}","received_events_url":"https://api.github.com/users/navina/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-04-30T08:18:34Z","updated_at":"2023-04-30T08:18:34Z","author_association":"CONTRIBUTOR","body":"> This won't work. We need to keep 2 bitmaps, one for valid docs and one for queryable docs. If we only keep valid docs, and count delete as removing it from the valid doc, the next event won't work as expected because we lost track of the delete event.\r\n\r\nThis is precisely what we realized during our previous attempt (https://github.com/apache/pinot/pull/10035) . Your solution isn't any different from what was attempted before. \r\n\r\n@atris : You had reached out to me via DM (on slack) to collaborate and agreed to review the existing design. Yet, you went  ahead and did your own work. This is duplicated effort and not setting the right standard for committers of the Apache Pinot project. \r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1528967707/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1528969242","html_url":"https://github.com/apache/pinot/pull/10702#issuecomment-1528969242","issue_url":"https://api.github.com/repos/apache/pinot/issues/10702","id":1528969242,"node_id":"IC_kwDOATCU_c5bIjga","user":{"login":"atris","id":1724131,"node_id":"MDQ6VXNlcjE3MjQxMzE=","avatar_url":"https://avatars.githubusercontent.com/u/1724131?v=4","gravatar_id":"","url":"https://api.github.com/users/atris","html_url":"https://github.com/atris","followers_url":"https://api.github.com/users/atris/followers","following_url":"https://api.github.com/users/atris/following{/other_user}","gists_url":"https://api.github.com/users/atris/gists{/gist_id}","starred_url":"https://api.github.com/users/atris/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/atris/subscriptions","organizations_url":"https://api.github.com/users/atris/orgs","repos_url":"https://api.github.com/users/atris/repos","events_url":"https://api.github.com/users/atris/events{/privacy}","received_events_url":"https://api.github.com/users/atris/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-04-30T08:27:36Z","updated_at":"2023-04-30T08:27:36Z","author_association":"CONTRIBUTOR","body":"> This won't work. We need to keep 2 bitmaps, one for valid docs and one for queryable docs. If we only keep valid docs, and count delete as removing it from the valid doc, the next event won't work as expected because we lost track of the delete event.\r\n> \r\n> This is already a design (#10452) that covers this, so let's not duplicate the work.\r\n> \r\n> @navina will post the implementation soon\r\n\r\n@Jackie-Jiang and myself discussed offline, and we have agreed to iterate on this PR -- and look on solving the snapshot of validDocID map issues.\r\n\r\nThe main issue that I wish to avoid is the separate map for queryable docIDs. The three issues we face today with the tombstone approach are: \r\n1. Losing the deleted docID when the consuming segment seals.\r\n2. The delete tombstone record not loading when we snapshot validDocIDs.\r\n3. Losing the deleted timestamp and hence not able to handle out of order events.\r\n\r\nThis PR solves 3. by maintaining the full record of deletion in the segment and the primary key index -- as is demonstrated in the added unit tests. For 1, it does not matter as long as we are able to rebuild the primary key index with the deleted primary key records present.\r\n\r\nThe main challenge is 2, and we need to think about it a bit more. Will keep the group posted.","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1528969242/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1528974176","html_url":"https://github.com/apache/pinot/pull/10702#issuecomment-1528974176","issue_url":"https://api.github.com/repos/apache/pinot/issues/10702","id":1528974176,"node_id":"IC_kwDOATCU_c5bIktg","user":{"login":"atris","id":1724131,"node_id":"MDQ6VXNlcjE3MjQxMzE=","avatar_url":"https://avatars.githubusercontent.com/u/1724131?v=4","gravatar_id":"","url":"https://api.github.com/users/atris","html_url":"https://github.com/atris","followers_url":"https://api.github.com/users/atris/followers","following_url":"https://api.github.com/users/atris/following{/other_user}","gists_url":"https://api.github.com/users/atris/gists{/gist_id}","starred_url":"https://api.github.com/users/atris/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/atris/subscriptions","organizations_url":"https://api.github.com/users/atris/orgs","repos_url":"https://api.github.com/users/atris/repos","events_url":"https://api.github.com/users/atris/events{/privacy}","received_events_url":"https://api.github.com/users/atris/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-04-30T08:56:35Z","updated_at":"2023-04-30T08:57:23Z","author_association":"CONTRIBUTOR","body":"> > This won't work. We need to keep 2 bitmaps, one for valid docs and one for queryable docs. If we only keep valid docs, and count delete as removing it from the valid doc, the next event won't work as expected because we lost track of the delete event.\r\n> \r\n> This is precisely what we realized during our previous attempt (#10035) . Your solution isn't any different from what was attempted before.\r\n> \r\nThere are many subtle changes from the last PR -- and this actually works for most cases except the snapshot load, which is easy to fix using the queryable map. The last PR was unable to handle out of order records and had no concept of denying partial updates on deleted records but allowing new records with the same primary key to be updated.\r\n\r\nTo answer your specific question, we are *not* losing the deleted event in this PR. That is clearly demonstrated in the unit tests.\r\n\r\n\r\nFor further details, please compare the two PRs.\r\n\r\n> @atris : You had reached out to me via DM (on slack) to collaborate and agreed to review the existing design. Yet, you went ahead and did your own work. This is duplicated effort and not setting the right standard for committers of the Apache Pinot project.\r\n\r\nThank you for highlighting this. I do not wish to go into details of our 1:1 conversation here -- but my understanding was that:\r\n\r\n1. You were planning on working this post May 10th.\r\n2. You mentioned that it would be hard for us to collaborate since we are in different timezones. \r\n3. I had mentioned that I have a patch I have been playing with -- and have a hard timeline.\r\n\r\nIn all honesty, I feel it is against the spirit of OSS if we \"block\" issues that we have not yet written code for. A good example is the issue on adding support for GROUP BY for filter aggregations -- where the issue was assigned to me, and I had a half baked PR that I did not get around to finishing. Since Evan posted a PR, I was happy to let my patch take a step back.\r\n\r\nIn this case, I only finished my PR since you mentioned that you will work on it post May 10th and would find it hard to collaborate with me -- which led me to think that our internal timelines might not be matched.\r\n\r\nIf you have any further comments, I would be happy to talk 1:1. Also, please feel free to review the PR and leave any feedback -- I would be happy to address it.\r\n","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1528974176/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1529124114","html_url":"https://github.com/apache/pinot/issues/10701#issuecomment-1529124114","issue_url":"https://api.github.com/repos/apache/pinot/issues/10701","id":1529124114,"node_id":"IC_kwDOATCU_c5bJJUS","user":{"login":"walterddr","id":3581352,"node_id":"MDQ6VXNlcjM1ODEzNTI=","avatar_url":"https://avatars.githubusercontent.com/u/3581352?v=4","gravatar_id":"","url":"https://api.github.com/users/walterddr","html_url":"https://github.com/walterddr","followers_url":"https://api.github.com/users/walterddr/followers","following_url":"https://api.github.com/users/walterddr/following{/other_user}","gists_url":"https://api.github.com/users/walterddr/gists{/gist_id}","starred_url":"https://api.github.com/users/walterddr/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/walterddr/subscriptions","organizations_url":"https://api.github.com/users/walterddr/orgs","repos_url":"https://api.github.com/users/walterddr/repos","events_url":"https://api.github.com/users/walterddr/events{/privacy}","received_events_url":"https://api.github.com/users/walterddr/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-04-30T19:41:13Z","updated_at":"2023-04-30T19:41:13Z","author_association":"CONTRIBUTOR","body":"this is actually not suppose to work. to a complete SQL system `db.table1` means `{\"catalog\": \"db\", \"table\": \"table1\"}` \r\nhowever pinot doesn't support catalog thus any prepended catalog is resolved as \"default\" thus the integration test case is to verify that for the existing query engine. \r\n\r\nHowever for the new engine, we actually implicitly added the default catalog name since Calcite's catalog reader requires a root schema (or root catalog if you will) thus it will not be able to find a `db` catalog internally. \r\n\r\nWe are yet to discuss the catalog support going forward but as far as for now this will not be supported as \"ignoring the catalog and only parse table name, then move on with what we had\" is not really something we should do","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1529124114/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1529149862","html_url":"https://github.com/apache/pinot/pull/10702#issuecomment-1529149862","issue_url":"https://api.github.com/repos/apache/pinot/issues/10702","id":1529149862,"node_id":"IC_kwDOATCU_c5bJPmm","user":{"login":"Jackie-Jiang","id":17555551,"node_id":"MDQ6VXNlcjE3NTU1NTUx","avatar_url":"https://avatars.githubusercontent.com/u/17555551?v=4","gravatar_id":"","url":"https://api.github.com/users/Jackie-Jiang","html_url":"https://github.com/Jackie-Jiang","followers_url":"https://api.github.com/users/Jackie-Jiang/followers","following_url":"https://api.github.com/users/Jackie-Jiang/following{/other_user}","gists_url":"https://api.github.com/users/Jackie-Jiang/gists{/gist_id}","starred_url":"https://api.github.com/users/Jackie-Jiang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Jackie-Jiang/subscriptions","organizations_url":"https://api.github.com/users/Jackie-Jiang/orgs","repos_url":"https://api.github.com/users/Jackie-Jiang/repos","events_url":"https://api.github.com/users/Jackie-Jiang/events{/privacy}","received_events_url":"https://api.github.com/users/Jackie-Jiang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-04-30T22:04:25Z","updated_at":"2023-04-30T22:04:25Z","author_association":"CONTRIBUTOR","body":"> @Jackie-Jiang and myself discussed offline, and we have agreed to iterate on this PR -- and look on solving the snapshot of validDocID map issues.\r\n> \r\n> The main issue that I wish to avoid is the separate map for queryable docIDs.\r\n\r\nThis is not what I said.. I said not to directly close this PR and see if it is possible to solve the problems, and if @navina cannot get an implementation sticking with your timeline we can go with this one.\r\nSince Navina already gets an implementation #10703 and I feel that can solve all the existing problem with the overhead of keeping 2 bitmaps per segment, I'm leaning towards that solution as I don't see a good way to solve the snapshot issue with one single bitmap. The main problem with one single bitmap is that it breaks the contract that all the keys in the upsert metadata should point to a valid doc in the segment, and if we break that contract a lot of things could go wrong.","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1529149862/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1529161373","html_url":"https://github.com/apache/pinot/issues/10689#issuecomment-1529161373","issue_url":"https://api.github.com/repos/apache/pinot/issues/10689","id":1529161373,"node_id":"IC_kwDOATCU_c5bJSad","user":{"login":"abhioncbr","id":1076944,"node_id":"MDQ6VXNlcjEwNzY5NDQ=","avatar_url":"https://avatars.githubusercontent.com/u/1076944?v=4","gravatar_id":"","url":"https://api.github.com/users/abhioncbr","html_url":"https://github.com/abhioncbr","followers_url":"https://api.github.com/users/abhioncbr/followers","following_url":"https://api.github.com/users/abhioncbr/following{/other_user}","gists_url":"https://api.github.com/users/abhioncbr/gists{/gist_id}","starred_url":"https://api.github.com/users/abhioncbr/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/abhioncbr/subscriptions","organizations_url":"https://api.github.com/users/abhioncbr/orgs","repos_url":"https://api.github.com/users/abhioncbr/repos","events_url":"https://api.github.com/users/abhioncbr/events{/privacy}","received_events_url":"https://api.github.com/users/abhioncbr/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-04-30T23:06:42Z","updated_at":"2023-04-30T23:06:42Z","author_association":"CONTRIBUTOR","body":"I can take this up to make the release `0.2.6` changes. Please assign me. Thanks","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1529161373/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1529282705","html_url":"https://github.com/apache/pinot/pull/10702#issuecomment-1529282705","issue_url":"https://api.github.com/repos/apache/pinot/issues/10702","id":1529282705,"node_id":"IC_kwDOATCU_c5bJwCR","user":{"login":"atris","id":1724131,"node_id":"MDQ6VXNlcjE3MjQxMzE=","avatar_url":"https://avatars.githubusercontent.com/u/1724131?v=4","gravatar_id":"","url":"https://api.github.com/users/atris","html_url":"https://github.com/atris","followers_url":"https://api.github.com/users/atris/followers","following_url":"https://api.github.com/users/atris/following{/other_user}","gists_url":"https://api.github.com/users/atris/gists{/gist_id}","starred_url":"https://api.github.com/users/atris/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/atris/subscriptions","organizations_url":"https://api.github.com/users/atris/orgs","repos_url":"https://api.github.com/users/atris/repos","events_url":"https://api.github.com/users/atris/events{/privacy}","received_events_url":"https://api.github.com/users/atris/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-01T02:54:57Z","updated_at":"2023-05-01T02:54:57Z","author_association":"CONTRIBUTOR","body":"\r\n> This is not what I said.. I said not to directly close this PR and see if it is possible to solve the problems, and if @navina cannot get an implementation sticking with your timeline we can go with this one. \r\n\r\nSure, I should have been more verbose, my bad.\r\n\r\n>Since Navina already gets an implementation #10703 and I feel that can solve all the existing problem with the overhead of keeping 2 bitmaps per segment, I'm leaning towards that solution as I don't see a good way to solve the snapshot issue with one single bitmap. The main problem with one single bitmap is that it breaks the contract that all the keys in the upsert metadata should point to a valid doc in the segment, and if we break that contract a lot of things could go wrong.\r\n\r\nCould you please elaborate a bit more on where things could break if we had keys in upsert metadata but not in valid doc IDs?\r\n\r\nMy understanding is that the two places where things will break are:\r\n\r\n1. Loading a segment because the deleted doc IDs will be ignored during segment reload and hence will no longer be queryable.\r\n2. Deleting a segment because the snapshot will ignore the deleted docIDs.\r\n\r\nI do not see anything breaking at the runtime because the access pattern defines that the upsert metadata dictates which keys to be looked up in valid doc IDs -- and since the upsert metadata has the superset of docIDs, it should not lose any data. I think this is fortified by the fact that this PR makes the change and there are no tests breaking.\r\n\r\nPlease provide your inputs\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1529282705/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1529399018","html_url":"https://github.com/apache/pinot/pull/10702#issuecomment-1529399018","issue_url":"https://api.github.com/repos/apache/pinot/issues/10702","id":1529399018,"node_id":"IC_kwDOATCU_c5bKMbq","user":{"login":"navina","id":1909480,"node_id":"MDQ6VXNlcjE5MDk0ODA=","avatar_url":"https://avatars.githubusercontent.com/u/1909480?v=4","gravatar_id":"","url":"https://api.github.com/users/navina","html_url":"https://github.com/navina","followers_url":"https://api.github.com/users/navina/followers","following_url":"https://api.github.com/users/navina/following{/other_user}","gists_url":"https://api.github.com/users/navina/gists{/gist_id}","starred_url":"https://api.github.com/users/navina/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/navina/subscriptions","organizations_url":"https://api.github.com/users/navina/orgs","repos_url":"https://api.github.com/users/navina/repos","events_url":"https://api.github.com/users/navina/events{/privacy}","received_events_url":"https://api.github.com/users/navina/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-01T06:24:06Z","updated_at":"2023-05-01T06:24:06Z","author_association":"CONTRIBUTOR","body":"> Thank you for highlighting this. I do not wish to go into details of our 1:1 conversation here -- but my understanding was that:\r\n> \r\n> 1. You were planning on working this post May 10th.\r\n> 2. You mentioned that it would be hard for us to collaborate since we are in different timezones.\r\n> 3. I had mentioned that I have a patch I have been playing with -- and have a hard timeline.\r\n\r\nWhile all those are true, I told you that my design was open for feedback and you agreed to review it. \r\nObviously, I also have a local patch that I was working based on my design. Per Apache Pinot's guidelines (https://docs.pinot.apache.org/developers/developers-and-contributors/contribution-guidelines), I was taking ownership of the GitHub issue and sharing design for feedback. \r\n\r\n> In this case, I only finished my PR since you mentioned that you will work on it post May 10th and would find it hard to collaborate with me -- which led me to think that our internal timelines might not be matched.\r\n\r\nYou didn't communicate your timeline in our conversation nor did you explain the use-case when I asked. \r\n\r\nI am not aware of how you communicated the handover of your group by issue to another contributor and I don't think it is relevant to the tasks I own.\r\n\r\nI have put in effort in this work and have shared my design ( https://docs.google.com/document/d/19s1AHCRjmqeVa0z_djYBTAt_meg6qWcUxwRO3y-G9O4/edit?usp=drivesdk ) and PR ( https://github.com/apache/pinot/pull/10703 )  for review. \r\n Thanks!","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1529399018/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1529406125","html_url":"https://github.com/apache/pinot/pull/10703#issuecomment-1529406125","issue_url":"https://api.github.com/repos/apache/pinot/issues/10703","id":1529406125,"node_id":"IC_kwDOATCU_c5bKOKt","user":{"login":"navina","id":1909480,"node_id":"MDQ6VXNlcjE5MDk0ODA=","avatar_url":"https://avatars.githubusercontent.com/u/1909480?v=4","gravatar_id":"","url":"https://api.github.com/users/navina","html_url":"https://github.com/navina","followers_url":"https://api.github.com/users/navina/followers","following_url":"https://api.github.com/users/navina/following{/other_user}","gists_url":"https://api.github.com/users/navina/gists{/gist_id}","starred_url":"https://api.github.com/users/navina/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/navina/subscriptions","organizations_url":"https://api.github.com/users/navina/orgs","repos_url":"https://api.github.com/users/navina/repos","events_url":"https://api.github.com/users/navina/events{/privacy}","received_events_url":"https://api.github.com/users/navina/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-01T06:41:11Z","updated_at":"2023-05-01T06:41:11Z","author_association":"CONTRIBUTOR","body":"cc: @KKcorps ","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1529406125/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1529415252","html_url":"https://github.com/apache/pinot/pull/10703#issuecomment-1529415252","issue_url":"https://api.github.com/repos/apache/pinot/issues/10703","id":1529415252,"node_id":"IC_kwDOATCU_c5bKQZU","user":{"login":"KKcorps","id":5559703,"node_id":"MDQ6VXNlcjU1NTk3MDM=","avatar_url":"https://avatars.githubusercontent.com/u/5559703?v=4","gravatar_id":"","url":"https://api.github.com/users/KKcorps","html_url":"https://github.com/KKcorps","followers_url":"https://api.github.com/users/KKcorps/followers","following_url":"https://api.github.com/users/KKcorps/following{/other_user}","gists_url":"https://api.github.com/users/KKcorps/gists{/gist_id}","starred_url":"https://api.github.com/users/KKcorps/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/KKcorps/subscriptions","organizations_url":"https://api.github.com/users/KKcorps/orgs","repos_url":"https://api.github.com/users/KKcorps/repos","events_url":"https://api.github.com/users/KKcorps/events{/privacy}","received_events_url":"https://api.github.com/users/KKcorps/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-01T06:58:48Z","updated_at":"2023-05-01T06:58:48Z","author_association":"CONTRIBUTOR","body":"Should the `queryableDocIdSnapshot` needs to be persisted as well on shutdown for this to work?\r\n\r\nAlso, `queryableDocId` sounds confusing because `validDocId` is also used for querying. I think we should rename it to `activeRowIds` or `undeletedRowIds`","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1529415252/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1529418354","html_url":"https://github.com/apache/pinot/pull/10613#issuecomment-1529418354","issue_url":"https://api.github.com/repos/apache/pinot/issues/10613","id":1529418354,"node_id":"IC_kwDOATCU_c5bKRJy","user":{"login":"KKcorps","id":5559703,"node_id":"MDQ6VXNlcjU1NTk3MDM=","avatar_url":"https://avatars.githubusercontent.com/u/5559703?v=4","gravatar_id":"","url":"https://api.github.com/users/KKcorps","html_url":"https://github.com/KKcorps","followers_url":"https://api.github.com/users/KKcorps/followers","following_url":"https://api.github.com/users/KKcorps/following{/other_user}","gists_url":"https://api.github.com/users/KKcorps/gists{/gist_id}","starred_url":"https://api.github.com/users/KKcorps/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/KKcorps/subscriptions","organizations_url":"https://api.github.com/users/KKcorps/orgs","repos_url":"https://api.github.com/users/KKcorps/repos","events_url":"https://api.github.com/users/KKcorps/events{/privacy}","received_events_url":"https://api.github.com/users/KKcorps/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-01T07:02:25Z","updated_at":"2023-05-01T07:02:25Z","author_association":"CONTRIBUTOR","body":"Seems like another rebase needs to be done to resolve conflicts from previous PR","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1529418354/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1529445316","html_url":"https://github.com/apache/pinot/pull/10703#issuecomment-1529445316","issue_url":"https://api.github.com/repos/apache/pinot/issues/10703","id":1529445316,"node_id":"IC_kwDOATCU_c5bKXvE","user":{"login":"codecov-commenter","id":65553080,"node_id":"MDQ6VXNlcjY1NTUzMDgw","avatar_url":"https://avatars.githubusercontent.com/u/65553080?v=4","gravatar_id":"","url":"https://api.github.com/users/codecov-commenter","html_url":"https://github.com/codecov-commenter","followers_url":"https://api.github.com/users/codecov-commenter/followers","following_url":"https://api.github.com/users/codecov-commenter/following{/other_user}","gists_url":"https://api.github.com/users/codecov-commenter/gists{/gist_id}","starred_url":"https://api.github.com/users/codecov-commenter/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codecov-commenter/subscriptions","organizations_url":"https://api.github.com/users/codecov-commenter/orgs","repos_url":"https://api.github.com/users/codecov-commenter/repos","events_url":"https://api.github.com/users/codecov-commenter/events{/privacy}","received_events_url":"https://api.github.com/users/codecov-commenter/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-01T07:40:49Z","updated_at":"2023-06-23T07:36:36Z","author_association":"NONE","body":"## [Codecov](https://app.codecov.io/gh/apache/pinot/pull/10703?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) Report\n> Merging [#10703](https://app.codecov.io/gh/apache/pinot/pull/10703?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) (ff45ae5) into [master](https://app.codecov.io/gh/apache/pinot/commit/3c92b327114c4534f354e8a8f2755197a6439fd5?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) (3c92b32) will **decrease** coverage by `0.01%`.\n> The diff coverage is `0.00%`.\n\n```diff\n@@            Coverage Diff             @@\n##           master   #10703      +/-   ##\n==========================================\n- Coverage    0.11%    0.11%   -0.01%     \n==========================================\n  Files        2189     2189              \n  Lines      117997   118063      +66     \n  Branches    17852    17873      +21     \n==========================================\n  Hits          137      137              \n- Misses     117840   117906      +66     \n  Partials       20       20              \n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| integration1temurin11 | `0.00% <0.00%> (ø)` | |\n| integration1temurin17 | `0.00% <0.00%> (ø)` | |\n| integration1temurin20 | `0.00% <0.00%> (ø)` | |\n| integration2temurin11 | `0.00% <0.00%> (ø)` | |\n| integration2temurin17 | `0.00% <0.00%> (ø)` | |\n| integration2temurin20 | `0.00% <0.00%> (ø)` | |\n| unittests1temurin11 | `0.00% <0.00%> (ø)` | |\n| unittests1temurin17 | `0.00% <0.00%> (ø)` | |\n| unittests1temurin20 | `0.00% <0.00%> (ø)` | |\n| unittests2temurin11 | `0.11% <0.00%> (-0.01%)` | :arrow_down: |\n| unittests2temurin17 | `0.11% <0.00%> (-0.01%)` | :arrow_down: |\n| unittests2temurin20 | `0.11% <0.00%> (-0.01%)` | :arrow_down: |\n\nFlags with carried forward coverage won't be shown. [Click here](https://docs.codecov.io/docs/carryforward-flags?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache#carryforward-flags-in-the-pull-request-comment) to find out more.\n\n| [Impacted Files](https://app.codecov.io/gh/apache/pinot/pull/10703?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) | Coverage Δ | |\n|---|---|---|\n| [...manager/realtime/LLRealtimeSegmentDataManager.java](https://app.codecov.io/gh/apache/pinot/pull/10703?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache#diff-cGlub3QtY29yZS9zcmMvbWFpbi9qYXZhL29yZy9hcGFjaGUvcGlub3QvY29yZS9kYXRhL21hbmFnZXIvcmVhbHRpbWUvTExSZWFsdGltZVNlZ21lbnREYXRhTWFuYWdlci5qYXZh) | `0.00% <0.00%> (ø)` | |\n| [...ava/org/apache/pinot/core/plan/FilterPlanNode.java](https://app.codecov.io/gh/apache/pinot/pull/10703?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache#diff-cGlub3QtY29yZS9zcmMvbWFpbi9qYXZhL29yZy9hcGFjaGUvcGlub3QvY29yZS9wbGFuL0ZpbHRlclBsYW5Ob2RlLmphdmE=) | `0.00% <0.00%> (ø)` | |\n| [...ocal/indexsegment/immutable/EmptyIndexSegment.java](https://app.codecov.io/gh/apache/pinot/pull/10703?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache#diff-cGlub3Qtc2VnbWVudC1sb2NhbC9zcmMvbWFpbi9qYXZhL29yZy9hcGFjaGUvcGlub3Qvc2VnbWVudC9sb2NhbC9pbmRleHNlZ21lbnQvaW1tdXRhYmxlL0VtcHR5SW5kZXhTZWdtZW50LmphdmE=) | `0.00% <0.00%> (ø)` | |\n| [...l/indexsegment/immutable/ImmutableSegmentImpl.java](https://app.codecov.io/gh/apache/pinot/pull/10703?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache#diff-cGlub3Qtc2VnbWVudC1sb2NhbC9zcmMvbWFpbi9qYXZhL29yZy9hcGFjaGUvcGlub3Qvc2VnbWVudC9sb2NhbC9pbmRleHNlZ21lbnQvaW1tdXRhYmxlL0ltbXV0YWJsZVNlZ21lbnRJbXBsLmphdmE=) | `0.00% <0.00%> (ø)` | |\n| [...local/indexsegment/mutable/MutableSegmentImpl.java](https://app.codecov.io/gh/apache/pinot/pull/10703?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache#diff-cGlub3Qtc2VnbWVudC1sb2NhbC9zcmMvbWFpbi9qYXZhL29yZy9hcGFjaGUvcGlub3Qvc2VnbWVudC9sb2NhbC9pbmRleHNlZ21lbnQvbXV0YWJsZS9NdXRhYmxlU2VnbWVudEltcGwuamF2YQ==) | `0.00% <0.00%> (ø)` | |\n| [...ent/local/realtime/impl/RealtimeSegmentConfig.java](https://app.codecov.io/gh/apache/pinot/pull/10703?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache#diff-cGlub3Qtc2VnbWVudC1sb2NhbC9zcmMvbWFpbi9qYXZhL29yZy9hcGFjaGUvcGlub3Qvc2VnbWVudC9sb2NhbC9yZWFsdGltZS9pbXBsL1JlYWx0aW1lU2VnbWVudENvbmZpZy5qYXZh) | `0.00% <0.00%> (ø)` | |\n| [...cal/upsert/BasePartitionUpsertMetadataManager.java](https://app.codecov.io/gh/apache/pinot/pull/10703?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache#diff-cGlub3Qtc2VnbWVudC1sb2NhbC9zcmMvbWFpbi9qYXZhL29yZy9hcGFjaGUvcGlub3Qvc2VnbWVudC9sb2NhbC91cHNlcnQvQmFzZVBhcnRpdGlvblVwc2VydE1ldGFkYXRhTWFuYWdlci5qYXZh) | `0.00% <0.00%> (ø)` | |\n| [...t/local/upsert/BaseTableUpsertMetadataManager.java](https://app.codecov.io/gh/apache/pinot/pull/10703?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache#diff-cGlub3Qtc2VnbWVudC1sb2NhbC9zcmMvbWFpbi9qYXZhL29yZy9hcGFjaGUvcGlub3Qvc2VnbWVudC9sb2NhbC91cHNlcnQvQmFzZVRhYmxlVXBzZXJ0TWV0YWRhdGFNYW5hZ2VyLmphdmE=) | `0.00% <0.00%> (ø)` | |\n| [...t/ConcurrentMapPartitionUpsertMetadataManager.java](https://app.codecov.io/gh/apache/pinot/pull/10703?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache#diff-cGlub3Qtc2VnbWVudC1sb2NhbC9zcmMvbWFpbi9qYXZhL29yZy9hcGFjaGUvcGlub3Qvc2VnbWVudC9sb2NhbC91cHNlcnQvQ29uY3VycmVudE1hcFBhcnRpdGlvblVwc2VydE1ldGFkYXRhTWFuYWdlci5qYXZh) | `0.00% <0.00%> (ø)` | |\n| [...psert/ConcurrentMapTableUpsertMetadataManager.java](https://app.codecov.io/gh/apache/pinot/pull/10703?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache#diff-cGlub3Qtc2VnbWVudC1sb2NhbC9zcmMvbWFpbi9qYXZhL29yZy9hcGFjaGUvcGlub3Qvc2VnbWVudC9sb2NhbC91cHNlcnQvQ29uY3VycmVudE1hcFRhYmxlVXBzZXJ0TWV0YWRhdGFNYW5hZ2VyLmphdmE=) | `0.00% <ø> (ø)` | |\n| ... and [6 more](https://app.codecov.io/gh/apache/pinot/pull/10703?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) | |\n\n... and [5 files with indirect coverage changes](https://app.codecov.io/gh/apache/pinot/pull/10703/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache)\n\n:mega: We’re building smart automated test selection to slash your CI/CD build times. [Learn more](https://about.codecov.io/iterative-testing/?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache)\n","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1529445316/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1529726161","html_url":"https://github.com/apache/pinot/issues/5246#issuecomment-1529726161","issue_url":"https://api.github.com/repos/apache/pinot/issues/5246","id":1529726161,"node_id":"IC_kwDOATCU_c5bLcTR","user":{"login":"mayankshriv","id":12615885,"node_id":"MDQ6VXNlcjEyNjE1ODg1","avatar_url":"https://avatars.githubusercontent.com/u/12615885?v=4","gravatar_id":"","url":"https://api.github.com/users/mayankshriv","html_url":"https://github.com/mayankshriv","followers_url":"https://api.github.com/users/mayankshriv/followers","following_url":"https://api.github.com/users/mayankshriv/following{/other_user}","gists_url":"https://api.github.com/users/mayankshriv/gists{/gist_id}","starred_url":"https://api.github.com/users/mayankshriv/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mayankshriv/subscriptions","organizations_url":"https://api.github.com/users/mayankshriv/orgs","repos_url":"https://api.github.com/users/mayankshriv/repos","events_url":"https://api.github.com/users/mayankshriv/events{/privacy}","received_events_url":"https://api.github.com/users/mayankshriv/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-01T13:47:41Z","updated_at":"2023-05-01T13:47:41Z","author_association":"CONTRIBUTOR","body":"Hi @jackjlli, wondering if you are still working on this and if so, any timeline for the same?\r\n","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1529726161/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1529734544","html_url":"https://github.com/apache/pinot/pull/10702#issuecomment-1529734544","issue_url":"https://api.github.com/repos/apache/pinot/issues/10702","id":1529734544,"node_id":"IC_kwDOATCU_c5bLeWQ","user":{"login":"mayankshriv","id":12615885,"node_id":"MDQ6VXNlcjEyNjE1ODg1","avatar_url":"https://avatars.githubusercontent.com/u/12615885?v=4","gravatar_id":"","url":"https://api.github.com/users/mayankshriv","html_url":"https://github.com/mayankshriv","followers_url":"https://api.github.com/users/mayankshriv/followers","following_url":"https://api.github.com/users/mayankshriv/following{/other_user}","gists_url":"https://api.github.com/users/mayankshriv/gists{/gist_id}","starred_url":"https://api.github.com/users/mayankshriv/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mayankshriv/subscriptions","organizations_url":"https://api.github.com/users/mayankshriv/orgs","repos_url":"https://api.github.com/users/mayankshriv/repos","events_url":"https://api.github.com/users/mayankshriv/events{/privacy}","received_events_url":"https://api.github.com/users/mayankshriv/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-01T13:55:51Z","updated_at":"2023-05-01T14:17:12Z","author_association":"CONTRIBUTOR","body":"Hi Team, reading with a neutral perspective, it seems like there were some miscommunications that led to duplicate effort on both sides. But I am 100% sure everyone here here:\r\n\r\n- Has the best interest of  the Apache Pinot project before anything.\r\n- Would benefit from this feature being completed as soon as possible.\r\n\r\nWith above in mind, and the contribution guidelines, I do see that this [design doc ](https://docs.google.com/document/d/19s1AHCRjmqeVa0z_djYBTAt_meg6qWcUxwRO3y-G9O4/edit?usp=drivesdk) being reviewed.\r\n\r\nMy recommendation would be for all of us to collaborate on that design and any associated PRs to take this feature to completion as soon as possible.\r\n\r\nThank you all!\r\n#One Team.","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1529734544/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1529828906","html_url":"https://github.com/apache/pinot/pull/10639#issuecomment-1529828906","issue_url":"https://api.github.com/repos/apache/pinot/issues/10639","id":1529828906,"node_id":"IC_kwDOATCU_c5bL1Yq","user":{"login":"yupeng9","id":13425258,"node_id":"MDQ6VXNlcjEzNDI1MjU4","avatar_url":"https://avatars.githubusercontent.com/u/13425258?v=4","gravatar_id":"","url":"https://api.github.com/users/yupeng9","html_url":"https://github.com/yupeng9","followers_url":"https://api.github.com/users/yupeng9/followers","following_url":"https://api.github.com/users/yupeng9/following{/other_user}","gists_url":"https://api.github.com/users/yupeng9/gists{/gist_id}","starred_url":"https://api.github.com/users/yupeng9/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yupeng9/subscriptions","organizations_url":"https://api.github.com/users/yupeng9/orgs","repos_url":"https://api.github.com/users/yupeng9/repos","events_url":"https://api.github.com/users/yupeng9/events{/privacy}","received_events_url":"https://api.github.com/users/yupeng9/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-01T15:21:26Z","updated_at":"2023-05-01T15:21:26Z","author_association":"CONTRIBUTOR","body":"> > @Jackie-Jiang The serialization that we are using is simple enough to not add significant overhead. It will probably cost 100 or so CPU cycles per record. Moreover, this overhead happens only during ingestion time and does not affect query performance. Keeping the LocalKeyValueStore pluggable will make it reusable in other places as well.\r\n> \r\n> It is not that trivial comparing to other operations when updating a record. Adding a record to KV store could be much cheaper than serializing a primary key, meaning this change could cause several times performance degradation. Also, certain operation requires reference comparison, and should be handled differently if reference comparison is not possible\r\n\r\n@raghavgautam maybe we can have some quick benchmark to see how much overhead it adds, and it can be helpful to decide which layer we shall do the abstraction","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1529828906/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1529832117","html_url":"https://github.com/apache/pinot/issues/10657#issuecomment-1529832117","issue_url":"https://api.github.com/repos/apache/pinot/issues/10657","id":1529832117,"node_id":"IC_kwDOATCU_c5bL2K1","user":{"login":"walterddr","id":3581352,"node_id":"MDQ6VXNlcjM1ODEzNTI=","avatar_url":"https://avatars.githubusercontent.com/u/3581352?v=4","gravatar_id":"","url":"https://api.github.com/users/walterddr","html_url":"https://github.com/walterddr","followers_url":"https://api.github.com/users/walterddr/followers","following_url":"https://api.github.com/users/walterddr/following{/other_user}","gists_url":"https://api.github.com/users/walterddr/gists{/gist_id}","starred_url":"https://api.github.com/users/walterddr/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/walterddr/subscriptions","organizations_url":"https://api.github.com/users/walterddr/orgs","repos_url":"https://api.github.com/users/walterddr/repos","events_url":"https://api.github.com/users/walterddr/events{/privacy}","received_events_url":"https://api.github.com/users/walterddr/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-01T15:24:09Z","updated_at":"2023-05-01T15:26:57Z","author_association":"CONTRIBUTOR","body":"step 1a and 1b are done via (#10665, #10673) and (#10681, #10669)","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1529832117/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1529840410","html_url":"https://github.com/apache/pinot/pull/10702#issuecomment-1529840410","issue_url":"https://api.github.com/repos/apache/pinot/issues/10702","id":1529840410,"node_id":"IC_kwDOATCU_c5bL4Ma","user":{"login":"yupeng9","id":13425258,"node_id":"MDQ6VXNlcjEzNDI1MjU4","avatar_url":"https://avatars.githubusercontent.com/u/13425258?v=4","gravatar_id":"","url":"https://api.github.com/users/yupeng9","html_url":"https://github.com/yupeng9","followers_url":"https://api.github.com/users/yupeng9/followers","following_url":"https://api.github.com/users/yupeng9/following{/other_user}","gists_url":"https://api.github.com/users/yupeng9/gists{/gist_id}","starred_url":"https://api.github.com/users/yupeng9/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yupeng9/subscriptions","organizations_url":"https://api.github.com/users/yupeng9/orgs","repos_url":"https://api.github.com/users/yupeng9/repos","events_url":"https://api.github.com/users/yupeng9/events{/privacy}","received_events_url":"https://api.github.com/users/yupeng9/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-01T15:32:47Z","updated_at":"2023-05-01T15:32:47Z","author_association":"CONTRIBUTOR","body":"> Hi Team, reading with a neutral perspective, it seems like there were some miscommunications that led to duplicate effort on both sides. But I am 100% sure everyone here here:\r\n> \r\n> * Has the best interest of  the Apache Pinot project before anything.\r\n> * Would benefit from this feature being completed as soon as possible.\r\n> \r\n> With above in mind, and the contribution guidelines, I do see that this [design doc ](https://docs.google.com/document/d/19s1AHCRjmqeVa0z_djYBTAt_meg6qWcUxwRO3y-G9O4/edit?usp=drivesdk) being reviewed.\r\n> \r\n> My recommendation would be for all of us to collaborate on that design and any associated PRs to take this feature to completion as soon as possible.\r\n> \r\n> Thank you all! #One Team.\r\n\r\n+1 to #One Team \r\n\r\n Also I hope we can agree on the direction. One key difference I can see between these two approaches is to reuse validDocId or not for deletion. I also left this comment on @navina's design. This is a key as it has implications on correctness/efficiency/complexity etc.\r\n\r\nCould you provide a detailed example on reusing validDocId is insufficient to help this discussion. Also, I'm curious what's the behavior if there's an update to record after deletion, will we ignore it or revive the record?","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1529840410/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1529878668","html_url":"https://github.com/apache/pinot/pull/10702#issuecomment-1529878668","issue_url":"https://api.github.com/repos/apache/pinot/issues/10702","id":1529878668,"node_id":"IC_kwDOATCU_c5bMBiM","user":{"login":"navina","id":1909480,"node_id":"MDQ6VXNlcjE5MDk0ODA=","avatar_url":"https://avatars.githubusercontent.com/u/1909480?v=4","gravatar_id":"","url":"https://api.github.com/users/navina","html_url":"https://github.com/navina","followers_url":"https://api.github.com/users/navina/followers","following_url":"https://api.github.com/users/navina/following{/other_user}","gists_url":"https://api.github.com/users/navina/gists{/gist_id}","starred_url":"https://api.github.com/users/navina/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/navina/subscriptions","organizations_url":"https://api.github.com/users/navina/orgs","repos_url":"https://api.github.com/users/navina/repos","events_url":"https://api.github.com/users/navina/events{/privacy}","received_events_url":"https://api.github.com/users/navina/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-01T16:00:46Z","updated_at":"2023-05-01T16:01:39Z","author_association":"CONTRIBUTOR","body":"> Also I hope we can agree on the direction. One key difference I can see between these two approaches is to reuse validDocId or not for deletion. I also left this comment on @navina's design. This is a key as it has implications on correctness/efficiency/complexity etc.\r\n> Could you provide a detailed example on reusing validDocId is insufficient to help this discussion. \r\n\r\nI have added the reasoning in the design doc - https://docs.google.com/document/d/19s1AHCRjmqeVa0z_djYBTAt_meg6qWcUxwRO3y-G9O4/edit#heading=h.muy7y9j64ptn . can we continue the conversation in the design doc?  \r\n\r\n> Also, I'm curious what's the behavior if there's an update to record after deletion, will we ignore it or revive the record?\r\n\r\nThat's a good question. Going by the current upsert guarantees, if the event containing the update to a record has newer comparison values, it will be considered as a new record. I think it should be fine to revive it. I am not seeing any issues on doing that. Or we could make that configurable. Will add a section in the doc to further discuss this if you have any concerns. ","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1529878668/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1529885727","html_url":"https://github.com/apache/pinot/pull/10702#issuecomment-1529885727","issue_url":"https://api.github.com/repos/apache/pinot/issues/10702","id":1529885727,"node_id":"IC_kwDOATCU_c5bMDQf","user":{"login":"atris","id":1724131,"node_id":"MDQ6VXNlcjE3MjQxMzE=","avatar_url":"https://avatars.githubusercontent.com/u/1724131?v=4","gravatar_id":"","url":"https://api.github.com/users/atris","html_url":"https://github.com/atris","followers_url":"https://api.github.com/users/atris/followers","following_url":"https://api.github.com/users/atris/following{/other_user}","gists_url":"https://api.github.com/users/atris/gists{/gist_id}","starred_url":"https://api.github.com/users/atris/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/atris/subscriptions","organizations_url":"https://api.github.com/users/atris/orgs","repos_url":"https://api.github.com/users/atris/repos","events_url":"https://api.github.com/users/atris/events{/privacy}","received_events_url":"https://api.github.com/users/atris/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-01T16:02:50Z","updated_at":"2023-05-01T16:02:50Z","author_association":"CONTRIBUTOR","body":"\r\n> Also I hope we can agree on the direction. One key difference I can see between these two approaches is to reuse validDocId or not for deletion. I also left this comment on @navina's design. This is a key as it has implications on correctness/efficiency/complexity etc.\r\n> \r\n> Could you provide a detailed example on reusing validDocId is insufficient to help this discussion. Also, I'm curious what's the behavior if there's an update to record after deletion, will we ignore it or revive the record?\r\n\r\nPlease refer to the attached design document to this PR","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1529885727/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1530068001","html_url":"https://github.com/apache/pinot/pull/10702#issuecomment-1530068001","issue_url":"https://api.github.com/repos/apache/pinot/issues/10702","id":1530068001,"node_id":"IC_kwDOATCU_c5bMvwh","user":{"login":"atris","id":1724131,"node_id":"MDQ6VXNlcjE3MjQxMzE=","avatar_url":"https://avatars.githubusercontent.com/u/1724131?v=4","gravatar_id":"","url":"https://api.github.com/users/atris","html_url":"https://github.com/atris","followers_url":"https://api.github.com/users/atris/followers","following_url":"https://api.github.com/users/atris/following{/other_user}","gists_url":"https://api.github.com/users/atris/gists{/gist_id}","starred_url":"https://api.github.com/users/atris/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/atris/subscriptions","organizations_url":"https://api.github.com/users/atris/orgs","repos_url":"https://api.github.com/users/atris/repos","events_url":"https://api.github.com/users/atris/events{/privacy}","received_events_url":"https://api.github.com/users/atris/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-01T18:50:13Z","updated_at":"2023-05-01T18:50:13Z","author_association":"CONTRIBUTOR","body":"Closing this PR -- I have highlighted my concerns with the proposed design and have proposed an alternate in the attached design document. I will help  land the other PR now","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1530068001/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1530101191","html_url":"https://github.com/apache/pinot/pull/10683#issuecomment-1530101191","issue_url":"https://api.github.com/repos/apache/pinot/issues/10683","id":1530101191,"node_id":"IC_kwDOATCU_c5bM33H","user":{"login":"jasperjiaguo","id":10736840,"node_id":"MDQ6VXNlcjEwNzM2ODQw","avatar_url":"https://avatars.githubusercontent.com/u/10736840?v=4","gravatar_id":"","url":"https://api.github.com/users/jasperjiaguo","html_url":"https://github.com/jasperjiaguo","followers_url":"https://api.github.com/users/jasperjiaguo/followers","following_url":"https://api.github.com/users/jasperjiaguo/following{/other_user}","gists_url":"https://api.github.com/users/jasperjiaguo/gists{/gist_id}","starred_url":"https://api.github.com/users/jasperjiaguo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jasperjiaguo/subscriptions","organizations_url":"https://api.github.com/users/jasperjiaguo/orgs","repos_url":"https://api.github.com/users/jasperjiaguo/repos","events_url":"https://api.github.com/users/jasperjiaguo/events{/privacy}","received_events_url":"https://api.github.com/users/jasperjiaguo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-01T19:18:10Z","updated_at":"2023-05-01T21:04:44Z","author_association":"CONTRIBUTOR","body":"> > @walterddr agreed, I think we should consider the error codes holistically sometime, it is indeed a bit misleading right now. This PR should not affect the future refactoring right? I don't think we depend on hard coded number here?\r\n> \r\n> hmm. i think we should agree upon the error code convension we wanted to use first. until then we should make this PR's query killing behavior return 200 with attach the exception on the JSON return payload just like the rest of the error query response. since the return code is used by the REST client it would be particularly difficult for backward-compatibility modifications going forward (say tomorrow we decided to return a 4xx instead of 205) some browser will consider non-2xx as exception instead of an acceptable return which will cause confusion IMO\r\n\r\nHey Rong, I completely understand your concern of backward-compatibility. We definitely want a consistency with the standard http error code for our query return codes going forward. However, there is still a possibility we do this in an incremental way for this query cancellation code, the reasons are\r\n\r\n1.  Currently when a query is killed/cancelled on a broker it already returns 205 instead of 200, the following is from our log:\r\n```\r\nGot 1 errors for request: *****, \r\nErrors:\r\nError code: 205, Error message: org.apache.pinot.spi.exception.EarlyTerminationException:\r\n```\r\nIMO it's better for us to converge the code here and let server also return the same 205 for the interruption behavior\r\n\r\n2. Currently we return all execution errors as 200 therefore some web browsers would take all execution failures as some kind of success, in this case, would changing from 200 -> 205 make it worse? Do you have deployments that depend on the hard-coded 200 for interruption errors?\r\n\r\nThis problem is currently impacting our deployment. PTAL cc @walterddr @siddharthteotia ","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1530101191/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1530116364","html_url":"https://github.com/apache/pinot/pull/10672#issuecomment-1530116364","issue_url":"https://api.github.com/repos/apache/pinot/issues/10672","id":1530116364,"node_id":"IC_kwDOATCU_c5bM7kM","user":{"login":"jonas-grgt","id":288105,"node_id":"MDQ6VXNlcjI4ODEwNQ==","avatar_url":"https://avatars.githubusercontent.com/u/288105?v=4","gravatar_id":"","url":"https://api.github.com/users/jonas-grgt","html_url":"https://github.com/jonas-grgt","followers_url":"https://api.github.com/users/jonas-grgt/followers","following_url":"https://api.github.com/users/jonas-grgt/following{/other_user}","gists_url":"https://api.github.com/users/jonas-grgt/gists{/gist_id}","starred_url":"https://api.github.com/users/jonas-grgt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jonas-grgt/subscriptions","organizations_url":"https://api.github.com/users/jonas-grgt/orgs","repos_url":"https://api.github.com/users/jonas-grgt/repos","events_url":"https://api.github.com/users/jonas-grgt/events{/privacy}","received_events_url":"https://api.github.com/users/jonas-grgt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-01T19:35:50Z","updated_at":"2023-05-01T19:35:50Z","author_association":"NONE","body":"> thank you for the PR, can you clean up the linter issue and submit again.\r\n\r\nI ran checkstyle and fixed all open issues.","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1530116364/reactions","total_count":2,"+1":1,"-1":0,"laugh":0,"hooray":1,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1530544316","html_url":"https://github.com/apache/pinot/pull/10704#issuecomment-1530544316","issue_url":"https://api.github.com/repos/apache/pinot/issues/10704","id":1530544316,"node_id":"IC_kwDOATCU_c5bOkC8","user":{"login":"codecov-commenter","id":65553080,"node_id":"MDQ6VXNlcjY1NTUzMDgw","avatar_url":"https://avatars.githubusercontent.com/u/65553080?v=4","gravatar_id":"","url":"https://api.github.com/users/codecov-commenter","html_url":"https://github.com/codecov-commenter","followers_url":"https://api.github.com/users/codecov-commenter/followers","following_url":"https://api.github.com/users/codecov-commenter/following{/other_user}","gists_url":"https://api.github.com/users/codecov-commenter/gists{/gist_id}","starred_url":"https://api.github.com/users/codecov-commenter/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codecov-commenter/subscriptions","organizations_url":"https://api.github.com/users/codecov-commenter/orgs","repos_url":"https://api.github.com/users/codecov-commenter/repos","events_url":"https://api.github.com/users/codecov-commenter/events{/privacy}","received_events_url":"https://api.github.com/users/codecov-commenter/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-01T23:19:37Z","updated_at":"2023-05-26T22:21:54Z","author_association":"NONE","body":"## [Codecov](https://app.codecov.io/gh/apache/pinot/pull/10704?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) Report\n> Merging [#10704](https://app.codecov.io/gh/apache/pinot/pull/10704?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) (284ae68) into [master](https://app.codecov.io/gh/apache/pinot/commit/ab79548e981425033de70103de36c4edcdca2fbf?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) (ab79548) will **increase** coverage by `0.03%`.\n> The diff coverage is `80.95%`.\n\n```diff\n@@             Coverage Diff              @@\n##             master   #10704      +/-   ##\n============================================\n+ Coverage     70.25%   70.28%   +0.03%     \n+ Complexity     6429     5681     -748     \n============================================\n  Files          2112     2164      +52     \n  Lines        113996   116347    +2351     \n  Branches      17219    17597     +378     \n============================================\n+ Hits          80084    81776    +1692     \n- Misses        28312    28857     +545     \n- Partials       5600     5714     +114     \n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| integration1 | `24.07% <0.00%> (-0.24%)` | :arrow_down: |\n| integration2 | `23.77% <0.00%> (-0.24%)` | :arrow_down: |\n| unittests1 | `67.77% <80.95%> (-0.04%)` | :arrow_down: |\n| unittests2 | `13.67% <0.00%> (-0.19%)` | :arrow_down: |\n\nFlags with carried forward coverage won't be shown. [Click here](https://docs.codecov.io/docs/carryforward-flags?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache#carryforward-flags-in-the-pull-request-comment) to find out more.\n\n| [Impacted Files](https://app.codecov.io/gh/apache/pinot/pull/10704?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) | Coverage Δ | |\n|---|---|---|\n| [...apache/pinot/segment/local/upsert/UpsertUtils.java](https://app.codecov.io/gh/apache/pinot/pull/10704?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache#diff-cGlub3Qtc2VnbWVudC1sb2NhbC9zcmMvbWFpbi9qYXZhL29yZy9hcGFjaGUvcGlub3Qvc2VnbWVudC9sb2NhbC91cHNlcnQvVXBzZXJ0VXRpbHMuamF2YQ==) | `23.52% <0.00%> (-0.72%)` | :arrow_down: |\n| [.../pinot/segment/local/upsert/ComparisonColumns.java](https://app.codecov.io/gh/apache/pinot/pull/10704?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache#diff-cGlub3Qtc2VnbWVudC1sb2NhbC9zcmMvbWFpbi9qYXZhL29yZy9hcGFjaGUvcGlub3Qvc2VnbWVudC9sb2NhbC91cHNlcnQvQ29tcGFyaXNvbkNvbHVtbnMuamF2YQ==) | `96.77% <100.00%> (+3.02%)` | :arrow_up: |\n| [...not/segment/local/upsert/PartialUpsertHandler.java](https://app.codecov.io/gh/apache/pinot/pull/10704?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache#diff-cGlub3Qtc2VnbWVudC1sb2NhbC9zcmMvbWFpbi9qYXZhL29yZy9hcGFjaGUvcGlub3Qvc2VnbWVudC9sb2NhbC91cHNlcnQvUGFydGlhbFVwc2VydEhhbmRsZXIuamF2YQ==) | `100.00% <100.00%> (ø)` | |\n\n... and [286 files with indirect coverage changes](https://app.codecov.io/gh/apache/pinot/pull/10704/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache)\n\n:mega: We’re building smart automated test selection to slash your CI/CD build times. [Learn more](https://about.codecov.io/iterative-testing/?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache)\n","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1530544316/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1530755297","html_url":"https://github.com/apache/pinot/pull/10705#issuecomment-1530755297","issue_url":"https://api.github.com/repos/apache/pinot/issues/10705","id":1530755297,"node_id":"IC_kwDOATCU_c5bPXjh","user":{"login":"codecov-commenter","id":65553080,"node_id":"MDQ6VXNlcjY1NTUzMDgw","avatar_url":"https://avatars.githubusercontent.com/u/65553080?v=4","gravatar_id":"","url":"https://api.github.com/users/codecov-commenter","html_url":"https://github.com/codecov-commenter","followers_url":"https://api.github.com/users/codecov-commenter/followers","following_url":"https://api.github.com/users/codecov-commenter/following{/other_user}","gists_url":"https://api.github.com/users/codecov-commenter/gists{/gist_id}","starred_url":"https://api.github.com/users/codecov-commenter/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codecov-commenter/subscriptions","organizations_url":"https://api.github.com/users/codecov-commenter/orgs","repos_url":"https://api.github.com/users/codecov-commenter/repos","events_url":"https://api.github.com/users/codecov-commenter/events{/privacy}","received_events_url":"https://api.github.com/users/codecov-commenter/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-02T01:41:43Z","updated_at":"2023-05-02T19:57:46Z","author_association":"NONE","body":"## [Codecov](https://app.codecov.io/gh/apache/pinot/pull/10705?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation) Report\n> Merging [#10705](https://app.codecov.io/gh/apache/pinot/pull/10705?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation) (2bf4515) into [master](https://app.codecov.io/gh/apache/pinot/commit/53cb451ea9bdb9f375bfdb9775348f8d5e7b23c4?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation) (53cb451) will **decrease** coverage by `35.40%`.\n> The diff coverage is `100.00%`.\n\n```diff\n@@              Coverage Diff              @@\n##             master   #10705       +/-   ##\n=============================================\n- Coverage     70.28%   34.88%   -35.40%     \n+ Complexity     6430      462     -5968     \n=============================================\n  Files          2112     2112               \n  Lines        113994   114056       +62     \n  Branches      17219    17226        +7     \n=============================================\n- Hits          80121    39792    -40329     \n- Misses        28275    70796    +42521     \n+ Partials       5598     3468     -2130     \n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| integration1 | `24.41% <12.50%> (+0.09%)` | :arrow_up: |\n| integration2 | `24.08% <12.50%> (-0.02%)` | :arrow_down: |\n| unittests1 | `?` | |\n| unittests2 | `13.83% <100.00%> (+0.01%)` | :arrow_up: |\n\nFlags with carried forward coverage won't be shown. [Click here](https://docs.codecov.io/docs/carryforward-flags?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation#carryforward-flags-in-the-pull-request-comment) to find out more.\n\n| [Impacted Files](https://app.codecov.io/gh/apache/pinot/pull/10705?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation) | Coverage Δ | |\n|---|---|---|\n| [...ntroller/helix/core/PinotHelixResourceManager.java](https://app.codecov.io/gh/apache/pinot/pull/10705?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation#diff-cGlub3QtY29udHJvbGxlci9zcmMvbWFpbi9qYXZhL29yZy9hcGFjaGUvcGlub3QvY29udHJvbGxlci9oZWxpeC9jb3JlL1Bpbm90SGVsaXhSZXNvdXJjZU1hbmFnZXIuamF2YQ==) | `70.95% <100.00%> (+0.12%)` | :arrow_up: |\n\n... and [1225 files with indirect coverage changes](https://app.codecov.io/gh/apache/pinot/pull/10705/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation)\n\n:mega: We’re building smart automated test selection to slash your CI/CD build times. [Learn more](https://about.codecov.io/iterative-testing/?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation)\n","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1530755297/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1530855113","html_url":"https://github.com/apache/pinot/pull/10683#issuecomment-1530855113","issue_url":"https://api.github.com/repos/apache/pinot/issues/10683","id":1530855113,"node_id":"IC_kwDOATCU_c5bPv7J","user":{"login":"walterddr","id":3581352,"node_id":"MDQ6VXNlcjM1ODEzNTI=","avatar_url":"https://avatars.githubusercontent.com/u/3581352?v=4","gravatar_id":"","url":"https://api.github.com/users/walterddr","html_url":"https://github.com/walterddr","followers_url":"https://api.github.com/users/walterddr/followers","following_url":"https://api.github.com/users/walterddr/following{/other_user}","gists_url":"https://api.github.com/users/walterddr/gists{/gist_id}","starred_url":"https://api.github.com/users/walterddr/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/walterddr/subscriptions","organizations_url":"https://api.github.com/users/walterddr/orgs","repos_url":"https://api.github.com/users/walterddr/repos","events_url":"https://api.github.com/users/walterddr/events{/privacy}","received_events_url":"https://api.github.com/users/walterddr/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-02T04:22:33Z","updated_at":"2023-05-02T15:05:53Z","author_association":"CONTRIBUTOR","body":"actually my concern was the other way around. sorry for miscommunicating my concern.\r\n\r\n2xx is still considered success in this [reference](https://en.wikipedia.org/wiki/List_of_HTTP_status_codes), this means 205 and 200 are both considered as success in HTTP standard. \r\n\r\nbecause of this, all failure checks we do nowadays will rely on the JSON payload of the return instead of the status code. using 205 is definitely an improvement to us, but I was actually wondering if we should return an actual error code, for example\r\n- 429 Too Many Requests\r\n- 503 Service Unavailable\r\n\r\nboth seem to be more suitable return codes for query killed than 205 and we don't have to deal with exact 205 but actually can do the standard `>300` on the status code","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1530855113/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1530872871","html_url":"https://github.com/apache/pinot/pull/10703#issuecomment-1530872871","issue_url":"https://api.github.com/repos/apache/pinot/issues/10703","id":1530872871,"node_id":"IC_kwDOATCU_c5bP0Qn","user":{"login":"Jackie-Jiang","id":17555551,"node_id":"MDQ6VXNlcjE3NTU1NTUx","avatar_url":"https://avatars.githubusercontent.com/u/17555551?v=4","gravatar_id":"","url":"https://api.github.com/users/Jackie-Jiang","html_url":"https://github.com/Jackie-Jiang","followers_url":"https://api.github.com/users/Jackie-Jiang/followers","following_url":"https://api.github.com/users/Jackie-Jiang/following{/other_user}","gists_url":"https://api.github.com/users/Jackie-Jiang/gists{/gist_id}","starred_url":"https://api.github.com/users/Jackie-Jiang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Jackie-Jiang/subscriptions","organizations_url":"https://api.github.com/users/Jackie-Jiang/orgs","repos_url":"https://api.github.com/users/Jackie-Jiang/repos","events_url":"https://api.github.com/users/Jackie-Jiang/events{/privacy}","received_events_url":"https://api.github.com/users/Jackie-Jiang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-02T04:50:16Z","updated_at":"2023-05-02T04:50:16Z","author_association":"CONTRIBUTOR","body":"> Should the `queryableDocIdSnapshot` needs to be persisted as well on shutdown for this to work?\r\n\r\nWe don't need to persist it because we still need to load everything in the `validDocIds` (including the deleted docs) to refresh the timestamp for the deleted docs\r\n\r\n> Also, `queryableDocId` sounds confusing because `validDocId` is also used for querying. I think we should rename it to `activeRowIds` or `undeletedRowIds`\r\n\r\nIf delete is enabled (by setting the `deleteRecordColumn`), we will only look at `queryableDocIds` during query time. We can add some javadoc so that it is more clear","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1530872871/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1530900859","html_url":"https://github.com/apache/pinot/pull/10672#issuecomment-1530900859","issue_url":"https://api.github.com/repos/apache/pinot/issues/10672","id":1530900859,"node_id":"IC_kwDOATCU_c5bP7F7","user":{"login":"jonas-grgt","id":288105,"node_id":"MDQ6VXNlcjI4ODEwNQ==","avatar_url":"https://avatars.githubusercontent.com/u/288105?v=4","gravatar_id":"","url":"https://api.github.com/users/jonas-grgt","html_url":"https://github.com/jonas-grgt","followers_url":"https://api.github.com/users/jonas-grgt/followers","following_url":"https://api.github.com/users/jonas-grgt/following{/other_user}","gists_url":"https://api.github.com/users/jonas-grgt/gists{/gist_id}","starred_url":"https://api.github.com/users/jonas-grgt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jonas-grgt/subscriptions","organizations_url":"https://api.github.com/users/jonas-grgt/orgs","repos_url":"https://api.github.com/users/jonas-grgt/repos","events_url":"https://api.github.com/users/jonas-grgt/events{/privacy}","received_events_url":"https://api.github.com/users/jonas-grgt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-02T05:27:31Z","updated_at":"2023-05-02T08:10:19Z","author_association":"NONE","body":"> thank you for the PR, can you clean up the linter issue and submit again.\r\n\r\nThere seems to be more then checkstyle in place. I suppose I need to get the built green. I'll look into it.","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1530900859/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1531101735","html_url":"https://github.com/apache/pinot/pull/10706#issuecomment-1531101735","issue_url":"https://api.github.com/repos/apache/pinot/issues/10706","id":1531101735,"node_id":"IC_kwDOATCU_c5bQsIn","user":{"login":"codecov-commenter","id":65553080,"node_id":"MDQ6VXNlcjY1NTUzMDgw","avatar_url":"https://avatars.githubusercontent.com/u/65553080?v=4","gravatar_id":"","url":"https://api.github.com/users/codecov-commenter","html_url":"https://github.com/codecov-commenter","followers_url":"https://api.github.com/users/codecov-commenter/followers","following_url":"https://api.github.com/users/codecov-commenter/following{/other_user}","gists_url":"https://api.github.com/users/codecov-commenter/gists{/gist_id}","starred_url":"https://api.github.com/users/codecov-commenter/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codecov-commenter/subscriptions","organizations_url":"https://api.github.com/users/codecov-commenter/orgs","repos_url":"https://api.github.com/users/codecov-commenter/repos","events_url":"https://api.github.com/users/codecov-commenter/events{/privacy}","received_events_url":"https://api.github.com/users/codecov-commenter/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-02T08:48:30Z","updated_at":"2023-05-05T09:44:27Z","author_association":"NONE","body":"## [Codecov](https://app.codecov.io/gh/apache/pinot/pull/10706?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation) Report\n> Merging [#10706](https://app.codecov.io/gh/apache/pinot/pull/10706?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation) (ff0ac96) into [master](https://app.codecov.io/gh/apache/pinot/commit/53cb451ea9bdb9f375bfdb9775348f8d5e7b23c4?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation) (53cb451) will **increase** coverage by `0.04%`.\n> The diff coverage is `100.00%`.\n\n```diff\n@@             Coverage Diff              @@\n##             master   #10706      +/-   ##\n============================================\n+ Coverage     70.28%   70.33%   +0.04%     \n- Complexity     6430     6461      +31     \n============================================\n  Files          2112     2122      +10     \n  Lines        113994   114285     +291     \n  Branches      17219    17253      +34     \n============================================\n+ Hits          80121    80382     +261     \n- Misses        28275    28296      +21     \n- Partials       5598     5607       +9     \n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| integration1 | `24.38% <100.00%> (+0.05%)` | :arrow_up: |\n| integration2 | `24.06% <0.00%> (-0.03%)` | :arrow_down: |\n| unittests1 | `67.87% <0.00%> (+0.04%)` | :arrow_up: |\n| unittests2 | `13.84% <0.00%> (+0.01%)` | :arrow_up: |\n\nFlags with carried forward coverage won't be shown. [Click here](https://docs.codecov.io/docs/carryforward-flags?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation#carryforward-flags-in-the-pull-request-comment) to find out more.\n\n| [Impacted Files](https://app.codecov.io/gh/apache/pinot/pull/10706?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation) | Coverage Δ | |\n|---|---|---|\n| [...requesthandler/MultiStageBrokerRequestHandler.java](https://app.codecov.io/gh/apache/pinot/pull/10706?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvcmVxdWVzdGhhbmRsZXIvTXVsdGlTdGFnZUJyb2tlclJlcXVlc3RIYW5kbGVyLmphdmE=) | `67.91% <100.00%> (+4.75%)` | :arrow_up: |\n| [...common/response/broker/BrokerResponseNativeV2.java](https://app.codecov.io/gh/apache/pinot/pull/10706?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation#diff-cGlub3QtY29tbW9uL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9jb21tb24vcmVzcG9uc2UvYnJva2VyL0Jyb2tlclJlc3BvbnNlTmF0aXZlVjIuamF2YQ==) | `42.85% <100.00%> (+9.52%)` | :arrow_up: |\n\n... and [85 files with indirect coverage changes](https://app.codecov.io/gh/apache/pinot/pull/10706/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation)\n\n:mega: We’re building smart automated test selection to slash your CI/CD build times. [Learn more](https://about.codecov.io/iterative-testing/?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation)\n","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1531101735/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1531169536","html_url":"https://github.com/apache/pinot/pull/10707#issuecomment-1531169536","issue_url":"https://api.github.com/repos/apache/pinot/issues/10707","id":1531169536,"node_id":"IC_kwDOATCU_c5bQ8sA","user":{"login":"codecov-commenter","id":65553080,"node_id":"MDQ6VXNlcjY1NTUzMDgw","avatar_url":"https://avatars.githubusercontent.com/u/65553080?v=4","gravatar_id":"","url":"https://api.github.com/users/codecov-commenter","html_url":"https://github.com/codecov-commenter","followers_url":"https://api.github.com/users/codecov-commenter/followers","following_url":"https://api.github.com/users/codecov-commenter/following{/other_user}","gists_url":"https://api.github.com/users/codecov-commenter/gists{/gist_id}","starred_url":"https://api.github.com/users/codecov-commenter/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codecov-commenter/subscriptions","organizations_url":"https://api.github.com/users/codecov-commenter/orgs","repos_url":"https://api.github.com/users/codecov-commenter/repos","events_url":"https://api.github.com/users/codecov-commenter/events{/privacy}","received_events_url":"https://api.github.com/users/codecov-commenter/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-02T09:34:23Z","updated_at":"2023-05-02T10:01:49Z","author_association":"NONE","body":"## [Codecov](https://codecov.io/gh/apache/pinot/pull/10707?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation) Report\n> Merging [#10707](https://codecov.io/gh/apache/pinot/pull/10707?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation) (92d8ab6) into [master](https://codecov.io/gh/apache/pinot/commit/ab79548e981425033de70103de36c4edcdca2fbf?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation) (ab79548) will **decrease** coverage by `1.40%`.\n> The diff coverage is `79.16%`.\n\n```diff\n@@             Coverage Diff              @@\n##             master   #10707      +/-   ##\n============================================\n- Coverage     70.25%   68.85%   -1.40%     \n  Complexity     6429     6429              \n============================================\n  Files          2112     2112              \n  Lines        113996   114005       +9     \n  Branches      17219    17221       +2     \n============================================\n- Hits          80084    78503    -1581     \n- Misses        28312    29991    +1679     \n+ Partials       5600     5511      -89     \n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| integration1 | `?` | |\n| integration2 | `23.96% <20.83%> (-0.06%)` | :arrow_down: |\n| unittests1 | `67.80% <79.16%> (-0.01%)` | :arrow_down: |\n| unittests2 | `13.81% <0.00%> (-0.04%)` | :arrow_down: |\n\nFlags with carried forward coverage won't be shown. [Click here](https://docs.codecov.io/docs/carryforward-flags?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation#carryforward-flags-in-the-pull-request-comment) to find out more.\n\n| [Impacted Files](https://codecov.io/gh/apache/pinot/pull/10707?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation) | Coverage Δ | |\n|---|---|---|\n| [...core/startree/operator/StarTreeFilterOperator.java](https://codecov.io/gh/apache/pinot/pull/10707?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation#diff-cGlub3QtY29yZS9zcmMvbWFpbi9qYXZhL29yZy9hcGFjaGUvcGlub3QvY29yZS9zdGFydHJlZS9vcGVyYXRvci9TdGFyVHJlZUZpbHRlck9wZXJhdG9yLmphdmE=) | `68.71% <72.22%> (-19.45%)` | :arrow_down: |\n| [...cal/startree/v2/builder/BaseSingleTreeBuilder.java](https://codecov.io/gh/apache/pinot/pull/10707?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation#diff-cGlub3Qtc2VnbWVudC1sb2NhbC9zcmMvbWFpbi9qYXZhL29yZy9hcGFjaGUvcGlub3Qvc2VnbWVudC9sb2NhbC9zdGFydHJlZS92Mi9idWlsZGVyL0Jhc2VTaW5nbGVUcmVlQnVpbGRlci5qYXZh) | `90.00% <100.00%> (ø)` | |\n\n... and [150 files with indirect coverage changes](https://codecov.io/gh/apache/pinot/pull/10707/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation)\n\n:mega: We’re building smart automated test selection to slash your CI/CD build times. [Learn more](https://about.codecov.io/iterative-testing/?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation)\n","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1531169536/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1531320365","html_url":"https://github.com/apache/pinot/pull/10708#issuecomment-1531320365","issue_url":"https://api.github.com/repos/apache/pinot/issues/10708","id":1531320365,"node_id":"IC_kwDOATCU_c5bRhgt","user":{"login":"codecov-commenter","id":65553080,"node_id":"MDQ6VXNlcjY1NTUzMDgw","avatar_url":"https://avatars.githubusercontent.com/u/65553080?v=4","gravatar_id":"","url":"https://api.github.com/users/codecov-commenter","html_url":"https://github.com/codecov-commenter","followers_url":"https://api.github.com/users/codecov-commenter/followers","following_url":"https://api.github.com/users/codecov-commenter/following{/other_user}","gists_url":"https://api.github.com/users/codecov-commenter/gists{/gist_id}","starred_url":"https://api.github.com/users/codecov-commenter/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codecov-commenter/subscriptions","organizations_url":"https://api.github.com/users/codecov-commenter/orgs","repos_url":"https://api.github.com/users/codecov-commenter/repos","events_url":"https://api.github.com/users/codecov-commenter/events{/privacy}","received_events_url":"https://api.github.com/users/codecov-commenter/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-02T11:38:26Z","updated_at":"2023-05-04T23:27:49Z","author_association":"NONE","body":"## [Codecov](https://app.codecov.io/gh/apache/pinot/pull/10708?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation) Report\n> Merging [#10708](https://app.codecov.io/gh/apache/pinot/pull/10708?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation) (b447337) into [master](https://app.codecov.io/gh/apache/pinot/commit/ab79548e981425033de70103de36c4edcdca2fbf?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation) (ab79548) will **increase** coverage by `0.04%`.\n> The diff coverage is `86.95%`.\n\n```diff\n@@             Coverage Diff              @@\n##             master   #10708      +/-   ##\n============================================\n+ Coverage     70.25%   70.29%   +0.04%     \n- Complexity     6429     6460      +31     \n============================================\n  Files          2112     2122      +10     \n  Lines        113996   114281     +285     \n  Branches      17219    17253      +34     \n============================================\n+ Hits          80084    80336     +252     \n- Misses        28312    28341      +29     \n- Partials       5600     5604       +4     \n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| integration1 | `24.34% <0.00%> (+0.03%)` | :arrow_up: |\n| integration2 | `23.87% <0.00%> (-0.14%)` | :arrow_down: |\n| unittests1 | `67.87% <86.95%> (+0.07%)` | :arrow_up: |\n| unittests2 | `13.82% <0.00%> (-0.03%)` | :arrow_down: |\n\nFlags with carried forward coverage won't be shown. [Click here](https://docs.codecov.io/docs/carryforward-flags?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation#carryforward-flags-in-the-pull-request-comment) to find out more.\n\n| [Impacted Files](https://app.codecov.io/gh/apache/pinot/pull/10708?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation) | Coverage Δ | |\n|---|---|---|\n| [...org/apache/pinot/query/mailbox/MailboxService.java](https://app.codecov.io/gh/apache/pinot/pull/10708?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation#diff-cGlub3QtcXVlcnktcnVudGltZS9zcmMvbWFpbi9qYXZhL29yZy9hcGFjaGUvcGlub3QvcXVlcnkvbWFpbGJveC9NYWlsYm94U2VydmljZS5qYXZh) | `77.14% <ø> (ø)` | |\n| [...ery/planner/physical/DispatchablePlanMetadata.java](https://app.codecov.io/gh/apache/pinot/pull/10708?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation#diff-cGlub3QtcXVlcnktcGxhbm5lci9zcmMvbWFpbi9qYXZhL29yZy9hcGFjaGUvcGlub3QvcXVlcnkvcGxhbm5lci9waHlzaWNhbC9EaXNwYXRjaGFibGVQbGFuTWV0YWRhdGEuamF2YQ==) | `84.37% <28.57%> (-11.78%)` | :arrow_down: |\n| [...rg/apache/pinot/query/routing/MailboxMetadata.java](https://app.codecov.io/gh/apache/pinot/pull/10708?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation#diff-cGlub3QtcXVlcnktcGxhbm5lci9zcmMvbWFpbi9qYXZhL29yZy9hcGFjaGUvcGlub3QvcXVlcnkvcm91dGluZy9NYWlsYm94TWV0YWRhdGEuamF2YQ==) | `60.00% <60.00%> (ø)` | |\n| [...ot/query/runtime/operator/MailboxSendOperator.java](https://app.codecov.io/gh/apache/pinot/pull/10708?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation#diff-cGlub3QtcXVlcnktcnVudGltZS9zcmMvbWFpbi9qYXZhL29yZy9hcGFjaGUvcGlub3QvcXVlcnkvcnVudGltZS9vcGVyYXRvci9NYWlsYm94U2VuZE9wZXJhdG9yLmphdmE=) | `88.13% <66.66%> (+11.42%)` | :arrow_up: |\n| [...y/runtime/operator/BaseMailboxReceiveOperator.java](https://app.codecov.io/gh/apache/pinot/pull/10708?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation#diff-cGlub3QtcXVlcnktcnVudGltZS9zcmMvbWFpbi9qYXZhL29yZy9hcGFjaGUvcGlub3QvcXVlcnkvcnVudGltZS9vcGVyYXRvci9CYXNlTWFpbGJveFJlY2VpdmVPcGVyYXRvci5qYXZh) | `93.33% <81.81%> (-4.23%)` | :arrow_down: |\n| [...java/org/apache/pinot/query/planner/QueryPlan.java](https://app.codecov.io/gh/apache/pinot/pull/10708?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation#diff-cGlub3QtcXVlcnktcGxhbm5lci9zcmMvbWFpbi9qYXZhL29yZy9hcGFjaGUvcGlub3QvcXVlcnkvcGxhbm5lci9RdWVyeVBsYW4uamF2YQ==) | `97.36% <100.00%> (+0.22%)` | :arrow_up: |\n| [...uery/planner/physical/DispatchablePlanVisitor.java](https://app.codecov.io/gh/apache/pinot/pull/10708?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation#diff-cGlub3QtcXVlcnktcGxhbm5lci9zcmMvbWFpbi9qYXZhL29yZy9hcGFjaGUvcGlub3QvcXVlcnkvcGxhbm5lci9waHlzaWNhbC9EaXNwYXRjaGFibGVQbGFuVmlzaXRvci5qYXZh) | `100.00% <100.00%> (ø)` | |\n| [...ery/planner/physical/MailboxAssignmentVisitor.java](https://app.codecov.io/gh/apache/pinot/pull/10708?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation#diff-cGlub3QtcXVlcnktcGxhbm5lci9zcmMvbWFpbi9qYXZhL29yZy9hcGFjaGUvcGlub3QvcXVlcnkvcGxhbm5lci9waHlzaWNhbC9NYWlsYm94QXNzaWdubWVudFZpc2l0b3IuamF2YQ==) | `100.00% <100.00%> (ø)` | |\n| [...e/pinot/query/planner/physical/MailboxIdUtils.java](https://app.codecov.io/gh/apache/pinot/pull/10708?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation#diff-cGlub3QtcXVlcnktcGxhbm5lci9zcmMvbWFpbi9qYXZhL29yZy9hcGFjaGUvcGlub3QvcXVlcnkvcGxhbm5lci9waHlzaWNhbC9NYWlsYm94SWRVdGlscy5qYXZh) | `100.00% <100.00%> (ø)` | |\n| [...org/apache/pinot/query/routing/WorkerMetadata.java](https://app.codecov.io/gh/apache/pinot/pull/10708?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation#diff-cGlub3QtcXVlcnktcGxhbm5lci9zcmMvbWFpbi9qYXZhL29yZy9hcGFjaGUvcGlub3QvcXVlcnkvcm91dGluZy9Xb3JrZXJNZXRhZGF0YS5qYXZh) | `87.87% <100.00%> (+3.26%)` | :arrow_up: |\n| ... and [9 more](https://app.codecov.io/gh/apache/pinot/pull/10708?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation) | |\n\n... and [60 files with indirect coverage changes](https://app.codecov.io/gh/apache/pinot/pull/10708/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation)\n\n:mega: We’re building smart automated test selection to slash your CI/CD build times. [Learn more](https://about.codecov.io/iterative-testing/?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation)\n","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1531320365/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1531592876","html_url":"https://github.com/apache/pinot/pull/10672#issuecomment-1531592876","issue_url":"https://api.github.com/repos/apache/pinot/issues/10672","id":1531592876,"node_id":"IC_kwDOATCU_c5bSkCs","user":{"login":"codecov-commenter","id":65553080,"node_id":"MDQ6VXNlcjY1NTUzMDgw","avatar_url":"https://avatars.githubusercontent.com/u/65553080?v=4","gravatar_id":"","url":"https://api.github.com/users/codecov-commenter","html_url":"https://github.com/codecov-commenter","followers_url":"https://api.github.com/users/codecov-commenter/followers","following_url":"https://api.github.com/users/codecov-commenter/following{/other_user}","gists_url":"https://api.github.com/users/codecov-commenter/gists{/gist_id}","starred_url":"https://api.github.com/users/codecov-commenter/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codecov-commenter/subscriptions","organizations_url":"https://api.github.com/users/codecov-commenter/orgs","repos_url":"https://api.github.com/users/codecov-commenter/repos","events_url":"https://api.github.com/users/codecov-commenter/events{/privacy}","received_events_url":"https://api.github.com/users/codecov-commenter/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-02T14:34:23Z","updated_at":"2023-05-23T22:09:44Z","author_association":"NONE","body":"## [Codecov](https://app.codecov.io/gh/apache/pinot/pull/10672?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) Report\n> Merging [#10672](https://app.codecov.io/gh/apache/pinot/pull/10672?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) (60ec1f8) into [master](https://app.codecov.io/gh/apache/pinot/commit/815cd6ebb7f2236b127a4b7a7f8d59bea2c9a1cc?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) (815cd6e) will **increase** coverage by `0.05%`.\n> The diff coverage is `0.00%`.\n\n```diff\n@@             Coverage Diff              @@\n##             master   #10672      +/-   ##\n============================================\n+ Coverage     64.38%   64.43%   +0.05%     \n- Complexity     6441     6462      +21     \n============================================\n  Files          2068     2106      +38     \n  Lines        111794   113512    +1718     \n  Branches      16956    17262     +306     \n============================================\n+ Hits          71974    73137    +1163     \n- Misses        34646    35122     +476     \n- Partials       5174     5253      +79     \n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| unittests1 | `67.86% <0.00%> (-0.04%)` | :arrow_down: |\n| unittests2 | `13.69% <0.00%> (-0.15%)` | :arrow_down: |\n\nFlags with carried forward coverage won't be shown. [Click here](https://docs.codecov.io/docs/carryforward-flags?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache#carryforward-flags-in-the-pull-request-comment) to find out more.\n\n| [Impacted Files](https://app.codecov.io/gh/apache/pinot/pull/10672?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) | Coverage Δ | |\n|---|---|---|\n| [...rc/main/java/org/apache/pinot/common/Versions.java](https://app.codecov.io/gh/apache/pinot/pull/10672?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache#diff-cGlub3QtY29tbW9uL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9jb21tb24vVmVyc2lvbnMuamF2YQ==) | `0.00% <0.00%> (ø)` | |\n\n... and [219 files with indirect coverage changes](https://app.codecov.io/gh/apache/pinot/pull/10672/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache)\n\n:mega: We’re building smart automated test selection to slash your CI/CD build times. [Learn more](https://about.codecov.io/iterative-testing/?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache)\n","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1531592876/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1531716879","html_url":"https://github.com/apache/pinot/issues/10196#issuecomment-1531716879","issue_url":"https://api.github.com/repos/apache/pinot/issues/10196","id":1531716879,"node_id":"IC_kwDOATCU_c5bTCUP","user":{"login":"klsince","id":61892277,"node_id":"MDQ6VXNlcjYxODkyMjc3","avatar_url":"https://avatars.githubusercontent.com/u/61892277?v=4","gravatar_id":"","url":"https://api.github.com/users/klsince","html_url":"https://github.com/klsince","followers_url":"https://api.github.com/users/klsince/followers","following_url":"https://api.github.com/users/klsince/following{/other_user}","gists_url":"https://api.github.com/users/klsince/gists{/gist_id}","starred_url":"https://api.github.com/users/klsince/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/klsince/subscriptions","organizations_url":"https://api.github.com/users/klsince/orgs","repos_url":"https://api.github.com/users/klsince/repos","events_url":"https://api.github.com/users/klsince/events{/privacy}","received_events_url":"https://api.github.com/users/klsince/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-02T15:53:48Z","updated_at":"2023-05-02T15:53:48Z","author_association":"CONTRIBUTOR","body":"trying to fix this issue with https://github.com/apache/pinot/pull/10705\r\n\r\nbtw, I couldn't reproduce NPE, but still saw that table config with non-existing serverTag could be added, which failed table rebalance but with error msg \"No instance found with tag: A_OFFLINE\".","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1531716879/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1531905973","html_url":"https://github.com/apache/pinot/issues/9418#issuecomment-1531905973","issue_url":"https://api.github.com/repos/apache/pinot/issues/9418","id":1531905973,"node_id":"IC_kwDOATCU_c5bTwe1","user":{"login":"jonas-grgt","id":288105,"node_id":"MDQ6VXNlcjI4ODEwNQ==","avatar_url":"https://avatars.githubusercontent.com/u/288105?v=4","gravatar_id":"","url":"https://api.github.com/users/jonas-grgt","html_url":"https://github.com/jonas-grgt","followers_url":"https://api.github.com/users/jonas-grgt/followers","following_url":"https://api.github.com/users/jonas-grgt/following{/other_user}","gists_url":"https://api.github.com/users/jonas-grgt/gists{/gist_id}","starred_url":"https://api.github.com/users/jonas-grgt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jonas-grgt/subscriptions","organizations_url":"https://api.github.com/users/jonas-grgt/orgs","repos_url":"https://api.github.com/users/jonas-grgt/repos","events_url":"https://api.github.com/users/jonas-grgt/events{/privacy}","received_events_url":"https://api.github.com/users/jonas-grgt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-02T17:58:12Z","updated_at":"2023-05-02T17:58:12Z","author_association":"NONE","body":"@ddcprg are you still looking into this ? \r\nIt looks like an interesting issue to tackle for a beginner. \r\nI'm willing to help out if needed ?","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1531905973/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1531979357","html_url":"https://github.com/apache/pinot/pull/10706#issuecomment-1531979357","issue_url":"https://api.github.com/repos/apache/pinot/issues/10706","id":1531979357,"node_id":"IC_kwDOATCU_c5bUCZd","user":{"login":"ankitsultana","id":8644710,"node_id":"MDQ6VXNlcjg2NDQ3MTA=","avatar_url":"https://avatars.githubusercontent.com/u/8644710?v=4","gravatar_id":"","url":"https://api.github.com/users/ankitsultana","html_url":"https://github.com/ankitsultana","followers_url":"https://api.github.com/users/ankitsultana/followers","following_url":"https://api.github.com/users/ankitsultana/following{/other_user}","gists_url":"https://api.github.com/users/ankitsultana/gists{/gist_id}","starred_url":"https://api.github.com/users/ankitsultana/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ankitsultana/subscriptions","organizations_url":"https://api.github.com/users/ankitsultana/orgs","repos_url":"https://api.github.com/users/ankitsultana/repos","events_url":"https://api.github.com/users/ankitsultana/events{/privacy}","received_events_url":"https://api.github.com/users/ankitsultana/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-02T18:48:12Z","updated_at":"2023-05-02T18:48:12Z","author_association":"CONTRIBUTOR","body":"We also wanted to migrate to a string based requestId. \r\n\r\n@Jackie-Jiang had recommended to use `<broker-id>_<long-request-id>` for this. If we are modifying the response I'd say let's go all the way. cc: @tibrewalpratik17 ","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1531979357/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1532006112","html_url":"https://github.com/apache/pinot/pull/10639#issuecomment-1532006112","issue_url":"https://api.github.com/repos/apache/pinot/issues/10639","id":1532006112,"node_id":"IC_kwDOATCU_c5bUI7g","user":{"login":"raghavgautam","id":1521534,"node_id":"MDQ6VXNlcjE1MjE1MzQ=","avatar_url":"https://avatars.githubusercontent.com/u/1521534?v=4","gravatar_id":"","url":"https://api.github.com/users/raghavgautam","html_url":"https://github.com/raghavgautam","followers_url":"https://api.github.com/users/raghavgautam/followers","following_url":"https://api.github.com/users/raghavgautam/following{/other_user}","gists_url":"https://api.github.com/users/raghavgautam/gists{/gist_id}","starred_url":"https://api.github.com/users/raghavgautam/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/raghavgautam/subscriptions","organizations_url":"https://api.github.com/users/raghavgautam/orgs","repos_url":"https://api.github.com/users/raghavgautam/repos","events_url":"https://api.github.com/users/raghavgautam/events{/privacy}","received_events_url":"https://api.github.com/users/raghavgautam/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-02T19:08:16Z","updated_at":"2023-05-02T19:08:16Z","author_association":"CONTRIBUTOR","body":"@Jackie-Jiang I have addressed your comment. Can you take another look ?","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1532006112/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1532021196","html_url":"https://github.com/apache/pinot/pull/10710#issuecomment-1532021196","issue_url":"https://api.github.com/repos/apache/pinot/issues/10710","id":1532021196,"node_id":"IC_kwDOATCU_c5bUMnM","user":{"login":"codecov-commenter","id":65553080,"node_id":"MDQ6VXNlcjY1NTUzMDgw","avatar_url":"https://avatars.githubusercontent.com/u/65553080?v=4","gravatar_id":"","url":"https://api.github.com/users/codecov-commenter","html_url":"https://github.com/codecov-commenter","followers_url":"https://api.github.com/users/codecov-commenter/followers","following_url":"https://api.github.com/users/codecov-commenter/following{/other_user}","gists_url":"https://api.github.com/users/codecov-commenter/gists{/gist_id}","starred_url":"https://api.github.com/users/codecov-commenter/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codecov-commenter/subscriptions","organizations_url":"https://api.github.com/users/codecov-commenter/orgs","repos_url":"https://api.github.com/users/codecov-commenter/repos","events_url":"https://api.github.com/users/codecov-commenter/events{/privacy}","received_events_url":"https://api.github.com/users/codecov-commenter/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-02T19:20:59Z","updated_at":"2023-05-02T19:20:59Z","author_association":"NONE","body":"## [Codecov](https://app.codecov.io/gh/apache/pinot/pull/10710?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation) Report\n> Merging [#10710](https://app.codecov.io/gh/apache/pinot/pull/10710?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation) (4249c61) into [master](https://app.codecov.io/gh/apache/pinot/commit/b72051c3ebda8f21c8120c7af4521d13ee96c7e8?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation) (b72051c) will **decrease** coverage by `1.41%`.\n> The diff coverage is `85.71%`.\n\n```diff\n@@             Coverage Diff              @@\n##             master   #10710      +/-   ##\n============================================\n- Coverage     70.31%   68.91%   -1.41%     \n- Complexity     5641     6428     +787     \n============================================\n  Files          2112     2112              \n  Lines        114048   114047       -1     \n  Branches      17223    17222       -1     \n============================================\n- Hits          80196    78590    -1606     \n- Misses        28255    29942    +1687     \n+ Partials       5597     5515      -82     \n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| integration1 | `?` | |\n| integration2 | `24.05% <0.00%> (+0.06%)` | :arrow_up: |\n| unittests1 | `67.82% <85.71%> (+<0.01%)` | :arrow_up: |\n| unittests2 | `13.81% <0.00%> (-0.02%)` | :arrow_down: |\n\nFlags with carried forward coverage won't be shown. [Click here](https://docs.codecov.io/docs/carryforward-flags?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation#carryforward-flags-in-the-pull-request-comment) to find out more.\n\n| [Impacted Files](https://app.codecov.io/gh/apache/pinot/pull/10710?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation) | Coverage Δ | |\n|---|---|---|\n| [...ot/query/runtime/executor/RoundRobinScheduler.java](https://app.codecov.io/gh/apache/pinot/pull/10710?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation#diff-cGlub3QtcXVlcnktcnVudGltZS9zcmMvbWFpbi9qYXZhL29yZy9hcGFjaGUvcGlub3QvcXVlcnkvcnVudGltZS9leGVjdXRvci9Sb3VuZFJvYmluU2NoZWR1bGVyLmphdmE=) | `86.58% <50.00%> (-2.58%)` | :arrow_down: |\n| [...org/apache/pinot/query/mailbox/MailboxService.java](https://app.codecov.io/gh/apache/pinot/pull/10710?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation#diff-cGlub3QtcXVlcnktcnVudGltZS9zcmMvbWFpbi9qYXZhL29yZy9hcGFjaGUvcGlub3QvcXVlcnkvbWFpbGJveC9NYWlsYm94U2VydmljZS5qYXZh) | `77.14% <100.00%> (ø)` | |\n| [...g/apache/pinot/query/mailbox/ReceivingMailbox.java](https://app.codecov.io/gh/apache/pinot/pull/10710?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation#diff-cGlub3QtcXVlcnktcnVudGltZS9zcmMvbWFpbi9qYXZhL29yZy9hcGFjaGUvcGlub3QvcXVlcnkvbWFpbGJveC9SZWNlaXZpbmdNYWlsYm94LmphdmE=) | `73.80% <100.00%> (ø)` | |\n| [...uery/runtime/executor/OpChainSchedulerService.java](https://app.codecov.io/gh/apache/pinot/pull/10710?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation#diff-cGlub3QtcXVlcnktcnVudGltZS9zcmMvbWFpbi9qYXZhL29yZy9hcGFjaGUvcGlub3QvcXVlcnkvcnVudGltZS9leGVjdXRvci9PcENoYWluU2NoZWR1bGVyU2VydmljZS5qYXZh) | `95.16% <100.00%> (ø)` | |\n\n... and [152 files with indirect coverage changes](https://app.codecov.io/gh/apache/pinot/pull/10710/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation)\n\n:mega: We’re building smart automated test selection to slash your CI/CD build times. [Learn more](https://about.codecov.io/iterative-testing/?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation)\n","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1532021196/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1532100863","html_url":"https://github.com/apache/pinot/issues/10657#issuecomment-1532100863","issue_url":"https://api.github.com/repos/apache/pinot/issues/10657","id":1532100863,"node_id":"IC_kwDOATCU_c5bUgD_","user":{"login":"walterddr","id":3581352,"node_id":"MDQ6VXNlcjM1ODEzNTI=","avatar_url":"https://avatars.githubusercontent.com/u/3581352?v=4","gravatar_id":"","url":"https://api.github.com/users/walterddr","html_url":"https://github.com/walterddr","followers_url":"https://api.github.com/users/walterddr/followers","following_url":"https://api.github.com/users/walterddr/following{/other_user}","gists_url":"https://api.github.com/users/walterddr/gists{/gist_id}","starred_url":"https://api.github.com/users/walterddr/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/walterddr/subscriptions","organizations_url":"https://api.github.com/users/walterddr/orgs","repos_url":"https://api.github.com/users/walterddr/repos","events_url":"https://api.github.com/users/walterddr/events{/privacy}","received_events_url":"https://api.github.com/users/walterddr/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-02T20:24:03Z","updated_at":"2023-05-02T20:24:03Z","author_association":"CONTRIBUTOR","body":"collecting some feedback from folks, please feel free to comment below as well:\r\n\r\n\r\n\r\n- Parser should be part of the external of planner so that\r\n  - it can be used in controller and broker to parse out tables for routing\r\n  - parser is also used by v1 engine so it make sense to single it out (and it is invariant with the Planner)\r\n\r\n- We should consider making the component modules so that it doesn't need to force dependency on some other packages, for example:\r\n  - parser doens't need to depend on planner\r\n  - dispatcher doesn't need to depend on calcite.\r\n  - decision here is to make sure interfaces are clear, whether to group them into separated modules can be refactor later if interfaces have clear boundaries.\r\n\r\n- `Planner` -> `LogicalPlanner`: \r\n  - there should be a conversion regarding such as RelTrait, or RelExchange is being the only node looked at by dispatcher\r\n\r\n- where does some planning info to\r\n  - *information that only affects the node->operator* then this should be node-level info and make it used in PhysicalPlanner (on the server) (e.g. use concurrent index map group-by or 2-way reducer/merger group-by, this decision might not be able to be made on broker b/c it might need info like column cardinality on segment level)\r\n  - *Information that not only affects the node but also the upstream/downstream* then this decision should be made on the broker (e.g. using sort-merge join requires sorting operation on both inputs; using hash join requires materializing hash table on either left or right side)\r\n  - hint can always be attached, but the decision on where to use that hint is decided with the rule above^\r\n\r\n- PinotQueryPlanner and Plan should be a separate module \r\n  - the only goal achieved here is de-calcite --> convert RelNode into format that doesn't depend on Calcite\r\n  - PinotQueryPlanner + LogicalPlanner can be replaced with a Cache later on if we decide to run periodic tasks that doesn't have changes to the SQL itself (e.g. speed-up planning)","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1532100863/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1532105850","html_url":"https://github.com/apache/pinot/pull/10706#issuecomment-1532105850","issue_url":"https://api.github.com/repos/apache/pinot/issues/10706","id":1532105850,"node_id":"IC_kwDOATCU_c5bUhR6","user":{"login":"tibrewalpratik17","id":23629228,"node_id":"MDQ6VXNlcjIzNjI5MjI4","avatar_url":"https://avatars.githubusercontent.com/u/23629228?v=4","gravatar_id":"","url":"https://api.github.com/users/tibrewalpratik17","html_url":"https://github.com/tibrewalpratik17","followers_url":"https://api.github.com/users/tibrewalpratik17/followers","following_url":"https://api.github.com/users/tibrewalpratik17/following{/other_user}","gists_url":"https://api.github.com/users/tibrewalpratik17/gists{/gist_id}","starred_url":"https://api.github.com/users/tibrewalpratik17/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tibrewalpratik17/subscriptions","organizations_url":"https://api.github.com/users/tibrewalpratik17/orgs","repos_url":"https://api.github.com/users/tibrewalpratik17/repos","events_url":"https://api.github.com/users/tibrewalpratik17/events{/privacy}","received_events_url":"https://api.github.com/users/tibrewalpratik17/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-02T20:28:15Z","updated_at":"2023-05-02T20:28:15Z","author_association":"CONTRIBUTOR","body":"+1 to @ankitsultana's suggestion. If we are planning to return requestID in the response, let's return it in the form of string altogether to not introduce any backward incompatibility in the future.","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1532105850/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1532178415","html_url":"https://github.com/apache/pinot/pull/10711#issuecomment-1532178415","issue_url":"https://api.github.com/repos/apache/pinot/issues/10711","id":1532178415,"node_id":"IC_kwDOATCU_c5bUy_v","user":{"login":"codecov-commenter","id":65553080,"node_id":"MDQ6VXNlcjY1NTUzMDgw","avatar_url":"https://avatars.githubusercontent.com/u/65553080?v=4","gravatar_id":"","url":"https://api.github.com/users/codecov-commenter","html_url":"https://github.com/codecov-commenter","followers_url":"https://api.github.com/users/codecov-commenter/followers","following_url":"https://api.github.com/users/codecov-commenter/following{/other_user}","gists_url":"https://api.github.com/users/codecov-commenter/gists{/gist_id}","starred_url":"https://api.github.com/users/codecov-commenter/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codecov-commenter/subscriptions","organizations_url":"https://api.github.com/users/codecov-commenter/orgs","repos_url":"https://api.github.com/users/codecov-commenter/repos","events_url":"https://api.github.com/users/codecov-commenter/events{/privacy}","received_events_url":"https://api.github.com/users/codecov-commenter/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-02T21:29:20Z","updated_at":"2023-05-09T03:36:53Z","author_association":"NONE","body":"## [Codecov](https://app.codecov.io/gh/apache/pinot/pull/10711?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation) Report\n> Merging [#10711](https://app.codecov.io/gh/apache/pinot/pull/10711?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation) (457979d) into [master](https://app.codecov.io/gh/apache/pinot/commit/b97ac02f34e095bb22698e66e3b483d57c89a057?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation) (b97ac02) will **decrease** coverage by `1.85%`.\n> The diff coverage is `73.03%`.\n\n```diff\n@@             Coverage Diff              @@\n##             master   #10711      +/-   ##\n============================================\n- Coverage     70.33%   68.49%   -1.85%     \n+ Complexity     6465     6458       -7     \n============================================\n  Files          2125     2126       +1     \n  Lines        114378   114406      +28     \n  Branches      17260    17262       +2     \n============================================\n- Hits          80447    78361    -2086     \n- Misses        28322    30496    +2174     \n+ Partials       5609     5549      -60     \n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| integration1 | `24.26% <0.00%> (-0.09%)` | :arrow_down: |\n| integration2 | `?` | |\n| unittests1 | `67.87% <73.03%> (+<0.01%)` | :arrow_up: |\n| unittests2 | `13.83% <0.00%> (-0.01%)` | :arrow_down: |\n\nFlags with carried forward coverage won't be shown. [Click here](https://docs.codecov.io/docs/carryforward-flags?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation#carryforward-flags-in-the-pull-request-comment) to find out more.\n\n| [Impacted Files](https://app.codecov.io/gh/apache/pinot/pull/10711?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation) | Coverage Δ | |\n|---|---|---|\n| [...va/org/apache/pinot/query/service/QueryServer.java](https://app.codecov.io/gh/apache/pinot/pull/10711?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation#diff-cGlub3QtcXVlcnktcnVudGltZS9zcmMvbWFpbi9qYXZhL29yZy9hcGFjaGUvcGlub3QvcXVlcnkvc2VydmljZS9RdWVyeVNlcnZlci5qYXZh) | `67.39% <0.00%> (ø)` | |\n| [...t/query/runtime/executor/LeafSchedulerService.java](https://app.codecov.io/gh/apache/pinot/pull/10711?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation#diff-cGlub3QtcXVlcnktcnVudGltZS9zcmMvbWFpbi9qYXZhL29yZy9hcGFjaGUvcGlub3QvcXVlcnkvcnVudGltZS9leGVjdXRvci9MZWFmU2NoZWR1bGVyU2VydmljZS5qYXZh) | `64.28% <64.28%> (ø)` | |\n| [...va/org/apache/pinot/query/runtime/QueryRunner.java](https://app.codecov.io/gh/apache/pinot/pull/10711?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation#diff-cGlub3QtcXVlcnktcnVudGltZS9zcmMvbWFpbi9qYXZhL29yZy9hcGFjaGUvcGlub3QvcXVlcnkvcnVudGltZS9RdWVyeVJ1bm5lci5qYXZh) | `88.07% <82.14%> (+3.52%)` | :arrow_up: |\n| [...e/operator/LeafStageTransferableBlockOperator.java](https://app.codecov.io/gh/apache/pinot/pull/10711?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation#diff-cGlub3QtcXVlcnktcnVudGltZS9zcmMvbWFpbi9qYXZhL29yZy9hcGFjaGUvcGlub3QvcXVlcnkvcnVudGltZS9vcGVyYXRvci9MZWFmU3RhZ2VUcmFuc2ZlcmFibGVCbG9ja09wZXJhdG9yLmphdmE=) | `78.30% <88.23%> (ø)` | |\n\n... and [179 files with indirect coverage changes](https://app.codecov.io/gh/apache/pinot/pull/10711/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation)\n\n:mega: We’re building smart automated test selection to slash your CI/CD build times. [Learn more](https://about.codecov.io/iterative-testing/?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation)\n","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1532178415/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1532199044","html_url":"https://github.com/apache/pinot/pull/10704#issuecomment-1532199044","issue_url":"https://api.github.com/repos/apache/pinot/issues/10704","id":1532199044,"node_id":"IC_kwDOATCU_c5bU4CE","user":{"login":"egalpin","id":7582748,"node_id":"MDQ6VXNlcjc1ODI3NDg=","avatar_url":"https://avatars.githubusercontent.com/u/7582748?v=4","gravatar_id":"","url":"https://api.github.com/users/egalpin","html_url":"https://github.com/egalpin","followers_url":"https://api.github.com/users/egalpin/followers","following_url":"https://api.github.com/users/egalpin/following{/other_user}","gists_url":"https://api.github.com/users/egalpin/gists{/gist_id}","starred_url":"https://api.github.com/users/egalpin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/egalpin/subscriptions","organizations_url":"https://api.github.com/users/egalpin/orgs","repos_url":"https://api.github.com/users/egalpin/repos","events_url":"https://api.github.com/users/egalpin/events{/privacy}","received_events_url":"https://api.github.com/users/egalpin/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-02T21:49:19Z","updated_at":"2023-05-02T21:49:19Z","author_association":"MEMBER","body":"> So the fix should be: when comparisonIndex is -1, loop over all values and check if it has any value larger than the value in another ComparisonColumns. There is no need to modify the value within the current ComparisonColumns because it should already have values set.\r\n\r\nOne case I'm struggling to figure out how to support is when altering from one set of comparison columns to a new set. In such a case, I believe there would be a need to modify the value within the current ComparisonColumns (ex. adding 1 new column in addition to a set of existing comparison columns, or migrating from a single comparison column to a set of columns).","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1532199044/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1532316120","html_url":"https://github.com/apache/pinot/issues/10658#issuecomment-1532316120","issue_url":"https://api.github.com/repos/apache/pinot/issues/10658","id":1532316120,"node_id":"IC_kwDOATCU_c5bVUnY","user":{"login":"vvivekiyer","id":21298365,"node_id":"MDQ6VXNlcjIxMjk4MzY1","avatar_url":"https://avatars.githubusercontent.com/u/21298365?v=4","gravatar_id":"","url":"https://api.github.com/users/vvivekiyer","html_url":"https://github.com/vvivekiyer","followers_url":"https://api.github.com/users/vvivekiyer/followers","following_url":"https://api.github.com/users/vvivekiyer/following{/other_user}","gists_url":"https://api.github.com/users/vvivekiyer/gists{/gist_id}","starred_url":"https://api.github.com/users/vvivekiyer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vvivekiyer/subscriptions","organizations_url":"https://api.github.com/users/vvivekiyer/orgs","repos_url":"https://api.github.com/users/vvivekiyer/repos","events_url":"https://api.github.com/users/vvivekiyer/events{/privacy}","received_events_url":"https://api.github.com/users/vvivekiyer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-03T00:38:12Z","updated_at":"2023-05-03T00:56:03Z","author_association":"CONTRIBUTOR","body":"@xiangfu0  and @walterddr \r\nI have[ created a doc](https://docs.google.com/document/d/12Pp7VznanUV6StLkW9syoalXdRLJ1b_h7OFBX0h0tJ0/edit?usp=sharing) outlining the future plan for MV columns on Multistage. Please take a look and provide feedback. \r\nI will update the document with the implementation details once we get alignment on the overall direction for MV support. \r\n\r\ncc: @somandal @siddharthteotia @jasperjiaguo ","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1532316120/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1532375054","html_url":"https://github.com/apache/pinot/pull/10704#issuecomment-1532375054","issue_url":"https://api.github.com/repos/apache/pinot/issues/10704","id":1532375054,"node_id":"IC_kwDOATCU_c5bVjAO","user":{"login":"Jackie-Jiang","id":17555551,"node_id":"MDQ6VXNlcjE3NTU1NTUx","avatar_url":"https://avatars.githubusercontent.com/u/17555551?v=4","gravatar_id":"","url":"https://api.github.com/users/Jackie-Jiang","html_url":"https://github.com/Jackie-Jiang","followers_url":"https://api.github.com/users/Jackie-Jiang/followers","following_url":"https://api.github.com/users/Jackie-Jiang/following{/other_user}","gists_url":"https://api.github.com/users/Jackie-Jiang/gists{/gist_id}","starred_url":"https://api.github.com/users/Jackie-Jiang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Jackie-Jiang/subscriptions","organizations_url":"https://api.github.com/users/Jackie-Jiang/orgs","repos_url":"https://api.github.com/users/Jackie-Jiang/repos","events_url":"https://api.github.com/users/Jackie-Jiang/events{/privacy}","received_events_url":"https://api.github.com/users/Jackie-Jiang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-03T02:14:57Z","updated_at":"2023-05-03T02:14:57Z","author_association":"CONTRIBUTOR","body":"> One case I'm struggling to figure out how to support is when altering from one set of comparison columns to a new set. In such a case, I believe there would be a need to modify the value within the current ComparisonColumns (ex. adding 1 new column in addition to a set of existing comparison columns, or migrating from a single comparison column to a set of columns).\r\n\r\nAre you referring to modifying the comparison columns after table is created? I don't think that is allowed even with single comparison column with partial upsert because we should not change the history of the records.\r\nIf the new comparison column is newly added, it should work because all of them should be backfilled with default value, and the new consuming record will be handled properly","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1532375054/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1532434618","html_url":"https://github.com/apache/pinot/issues/10402#issuecomment-1532434618","issue_url":"https://api.github.com/repos/apache/pinot/issues/10402","id":1532434618,"node_id":"IC_kwDOATCU_c5bVxi6","user":{"login":"walterddr","id":3581352,"node_id":"MDQ6VXNlcjM1ODEzNTI=","avatar_url":"https://avatars.githubusercontent.com/u/3581352?v=4","gravatar_id":"","url":"https://api.github.com/users/walterddr","html_url":"https://github.com/walterddr","followers_url":"https://api.github.com/users/walterddr/followers","following_url":"https://api.github.com/users/walterddr/following{/other_user}","gists_url":"https://api.github.com/users/walterddr/gists{/gist_id}","starred_url":"https://api.github.com/users/walterddr/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/walterddr/subscriptions","organizations_url":"https://api.github.com/users/walterddr/orgs","repos_url":"https://api.github.com/users/walterddr/repos","events_url":"https://api.github.com/users/walterddr/events{/privacy}","received_events_url":"https://api.github.com/users/walterddr/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-03T04:08:45Z","updated_at":"2023-05-03T04:08:45Z","author_association":"CONTRIBUTOR","body":"this issue should be closed. we can follow up with the remaining issue separately","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1532434618/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1532435204","html_url":"https://github.com/apache/pinot/issues/10399#issuecomment-1532435204","issue_url":"https://api.github.com/repos/apache/pinot/issues/10399","id":1532435204,"node_id":"IC_kwDOATCU_c5bVxsE","user":{"login":"walterddr","id":3581352,"node_id":"MDQ6VXNlcjM1ODEzNTI=","avatar_url":"https://avatars.githubusercontent.com/u/3581352?v=4","gravatar_id":"","url":"https://api.github.com/users/walterddr","html_url":"https://github.com/walterddr","followers_url":"https://api.github.com/users/walterddr/followers","following_url":"https://api.github.com/users/walterddr/following{/other_user}","gists_url":"https://api.github.com/users/walterddr/gists{/gist_id}","starred_url":"https://api.github.com/users/walterddr/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/walterddr/subscriptions","organizations_url":"https://api.github.com/users/walterddr/orgs","repos_url":"https://api.github.com/users/walterddr/repos","events_url":"https://api.github.com/users/walterddr/events{/privacy}","received_events_url":"https://api.github.com/users/walterddr/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-03T04:09:55Z","updated_at":"2023-05-03T04:09:55Z","author_association":"CONTRIBUTOR","body":"hitting this again on https://github.com/apache/pinot/pull/10711","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1532435204/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1532436826","html_url":"https://github.com/apache/pinot/pull/10423#issuecomment-1532436826","issue_url":"https://api.github.com/repos/apache/pinot/issues/10423","id":1532436826,"node_id":"IC_kwDOATCU_c5bVyFa","user":{"login":"ankitsultana","id":8644710,"node_id":"MDQ6VXNlcjg2NDQ3MTA=","avatar_url":"https://avatars.githubusercontent.com/u/8644710?v=4","gravatar_id":"","url":"https://api.github.com/users/ankitsultana","html_url":"https://github.com/ankitsultana","followers_url":"https://api.github.com/users/ankitsultana/followers","following_url":"https://api.github.com/users/ankitsultana/following{/other_user}","gists_url":"https://api.github.com/users/ankitsultana/gists{/gist_id}","starred_url":"https://api.github.com/users/ankitsultana/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ankitsultana/subscriptions","organizations_url":"https://api.github.com/users/ankitsultana/orgs","repos_url":"https://api.github.com/users/ankitsultana/repos","events_url":"https://api.github.com/users/ankitsultana/events{/privacy}","received_events_url":"https://api.github.com/users/ankitsultana/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-03T04:13:46Z","updated_at":"2023-05-03T04:13:46Z","author_association":"CONTRIBUTOR","body":"My main concern is with this part:\r\n\r\n```\r\nbuilder.add(e.getKey(), toRelDataType(e.getValue(),\r\n          isNullSupportEnabled || e.getValue().isNullableField()));\r\n```\r\n\r\nI think if users have configured \"enableNullHandling\" at table level, we should let column level nullability decide whether a given column is nullable or not.\r\n\r\nIf enableNullHandling is not set at the table level, then we can assume that all columns are non-null (similar to V1 engine). That would essentially mean that column level nullability is not enabled so we assume everything to be non-null.","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1532436826/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1532448029","html_url":"https://github.com/apache/pinot/pull/10423#issuecomment-1532448029","issue_url":"https://api.github.com/repos/apache/pinot/issues/10423","id":1532448029,"node_id":"IC_kwDOATCU_c5bV00d","user":{"login":"walterddr","id":3581352,"node_id":"MDQ6VXNlcjM1ODEzNTI=","avatar_url":"https://avatars.githubusercontent.com/u/3581352?v=4","gravatar_id":"","url":"https://api.github.com/users/walterddr","html_url":"https://github.com/walterddr","followers_url":"https://api.github.com/users/walterddr/followers","following_url":"https://api.github.com/users/walterddr/following{/other_user}","gists_url":"https://api.github.com/users/walterddr/gists{/gist_id}","starred_url":"https://api.github.com/users/walterddr/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/walterddr/subscriptions","organizations_url":"https://api.github.com/users/walterddr/orgs","repos_url":"https://api.github.com/users/walterddr/repos","events_url":"https://api.github.com/users/walterddr/events{/privacy}","received_events_url":"https://api.github.com/users/walterddr/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-03T04:43:46Z","updated_at":"2023-05-03T04:43:46Z","author_association":"CONTRIBUTOR","body":"> My main concern is with this part:\r\n> \r\n> ```\r\n> builder.add(e.getKey(), toRelDataType(e.getValue(),\r\n>           isNullSupportEnabled || e.getValue().isNullableField()));\r\n> ```\r\n> \r\n> I think if users have configured \"enableNullHandling\" at table level, we should let column level nullability decide whether a given column is nullable or not.\r\n> \r\n> If enableNullHandling is not set at the table level, then we can assume that all columns are non-null (similar to V1 engine). That would essentially mean that column level nullability is not enabled so we assume everything to be non-null.\r\n\r\nHmm. I understood your concern. so to link: https://github.com/apache/pinot/pull/10423/files#r1183232264 --> this means in  order to enable nullability we should \r\n1. only do so for a table if table config enables null, otherwise disregard any column level config (this is existing behavior)\r\n2. add column level nullability config to user setting it to false, otherwise default to true (this is going to change)\r\n3. create nullable column only if (1) *AND* (2) are true\r\n\r\nyes?","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1532448029/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1532656955","html_url":"https://github.com/apache/pinot/pull/10047#issuecomment-1532656955","issue_url":"https://api.github.com/repos/apache/pinot/issues/10047","id":1532656955,"node_id":"IC_kwDOATCU_c5bWn07","user":{"login":"deemoliu","id":15416419,"node_id":"MDQ6VXNlcjE1NDE2NDE5","avatar_url":"https://avatars.githubusercontent.com/u/15416419?v=4","gravatar_id":"","url":"https://api.github.com/users/deemoliu","html_url":"https://github.com/deemoliu","followers_url":"https://api.github.com/users/deemoliu/followers","following_url":"https://api.github.com/users/deemoliu/following{/other_user}","gists_url":"https://api.github.com/users/deemoliu/gists{/gist_id}","starred_url":"https://api.github.com/users/deemoliu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/deemoliu/subscriptions","organizations_url":"https://api.github.com/users/deemoliu/orgs","repos_url":"https://api.github.com/users/deemoliu/repos","events_url":"https://api.github.com/users/deemoliu/events{/privacy}","received_events_url":"https://api.github.com/users/deemoliu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-03T08:44:08Z","updated_at":"2023-05-12T20:05:47Z","author_association":"CONTRIBUTOR","body":"> We need to add more controls to the snapshots. We should mark snapshot persisted by TTL differently from the regular snapshot:\r\n> \r\n> * When adding segment, we don't want to add metadata for segment with TTL snapshot\r\n> * We don't want to persist regular snapshot when TTL snapshot exists\r\n> * Do we want to allow TTL without enabling snapshot\r\n> * What if user want to change the TTL value or disable TTL\r\n\r\nThanks @Jackie-Jiang I tried to solve the above comment with the following approach, can you please review?\r\n(1) When adding segment, we don't want to add metadata for segment with TTL snapshot\r\nThe current implementation doesn't add ZKmetadata for segment with TTL snapshot.\r\n\r\n(2) We don't want to persist regular snapshot when TTL snapshot exists\r\n```\r\n  public static final String VALID_DOC_IDS_SNAPSHOT_FILE_NAME = \"validdocids.bitmap.snapshot\";\r\n```\r\nWhen ttl is enabled, there is no need to enabled snapshot and persist to the same file. So I added a validation to avoid enable both properties in the upsertConfig so that the snapshot from ttl and snapshotEnabled won't affect each other.\r\n\r\n(3)  Do we want to allow TTL without enabling snapshot\r\nYes. Allowing TTL will automatically has snapshot enabled. So `snapshotEnabled` config should not be enabled (since it will also persist snapshot to the snapshot file at same location).\r\n\r\n(4) Change the TTL value and disable TTL can be supported by re-initalized ConcurrentHashmapPartitionUpsertManager. However there need to be another PR to handle some cases.\r\ne.g. \r\n```\r\n    while (_nonPersistedSegmentsQueue.peek()._endTimeMs < expiredTimestamp) {\r\n      IndexSegment segment = _nonPersistedSegmentsQueue.poll()._segment;\r\n      ...\r\n```\r\nTTL value change can lead to changing to expiredTimestamp, and so we might see missing validDocsSnapshot for some segments. For now. I will add a validation to avoid updating the TTL values (user need to create new table if they need to change TTL value).\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1532656955/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1532711076","html_url":"https://github.com/apache/pinot/issues/10713#issuecomment-1532711076","issue_url":"https://api.github.com/repos/apache/pinot/issues/10713","id":1532711076,"node_id":"IC_kwDOATCU_c5bW1Ck","user":{"login":"saurabhd336","id":7672118,"node_id":"MDQ6VXNlcjc2NzIxMTg=","avatar_url":"https://avatars.githubusercontent.com/u/7672118?v=4","gravatar_id":"","url":"https://api.github.com/users/saurabhd336","html_url":"https://github.com/saurabhd336","followers_url":"https://api.github.com/users/saurabhd336/followers","following_url":"https://api.github.com/users/saurabhd336/following{/other_user}","gists_url":"https://api.github.com/users/saurabhd336/gists{/gist_id}","starred_url":"https://api.github.com/users/saurabhd336/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/saurabhd336/subscriptions","organizations_url":"https://api.github.com/users/saurabhd336/orgs","repos_url":"https://api.github.com/users/saurabhd336/repos","events_url":"https://api.github.com/users/saurabhd336/events{/privacy}","received_events_url":"https://api.github.com/users/saurabhd336/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-03T09:26:32Z","updated_at":"2023-05-03T09:26:32Z","author_association":"CONTRIBUTOR","body":"@gortiz ","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1532711076/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1532919017","html_url":"https://github.com/apache/pinot/issues/9752#issuecomment-1532919017","issue_url":"https://api.github.com/repos/apache/pinot/issues/9752","id":1532919017,"node_id":"IC_kwDOATCU_c5bXnzp","user":{"login":"jonas-grgt","id":288105,"node_id":"MDQ6VXNlcjI4ODEwNQ==","avatar_url":"https://avatars.githubusercontent.com/u/288105?v=4","gravatar_id":"","url":"https://api.github.com/users/jonas-grgt","html_url":"https://github.com/jonas-grgt","followers_url":"https://api.github.com/users/jonas-grgt/followers","following_url":"https://api.github.com/users/jonas-grgt/following{/other_user}","gists_url":"https://api.github.com/users/jonas-grgt/gists{/gist_id}","starred_url":"https://api.github.com/users/jonas-grgt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jonas-grgt/subscriptions","organizations_url":"https://api.github.com/users/jonas-grgt/orgs","repos_url":"https://api.github.com/users/jonas-grgt/repos","events_url":"https://api.github.com/users/jonas-grgt/events{/privacy}","received_events_url":"https://api.github.com/users/jonas-grgt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-03T12:13:04Z","updated_at":"2023-05-03T12:13:04Z","author_association":"NONE","body":"Any reason to keep this open as it seems to be fixed ?","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1532919017/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1533106608","html_url":"https://github.com/apache/pinot/issues/10675#issuecomment-1533106608","issue_url":"https://api.github.com/repos/apache/pinot/issues/10675","id":1533106608,"node_id":"IC_kwDOATCU_c5bYVmw","user":{"login":"shounakmk219","id":25409127,"node_id":"MDQ6VXNlcjI1NDA5MTI3","avatar_url":"https://avatars.githubusercontent.com/u/25409127?v=4","gravatar_id":"","url":"https://api.github.com/users/shounakmk219","html_url":"https://github.com/shounakmk219","followers_url":"https://api.github.com/users/shounakmk219/followers","following_url":"https://api.github.com/users/shounakmk219/following{/other_user}","gists_url":"https://api.github.com/users/shounakmk219/gists{/gist_id}","starred_url":"https://api.github.com/users/shounakmk219/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/shounakmk219/subscriptions","organizations_url":"https://api.github.com/users/shounakmk219/orgs","repos_url":"https://api.github.com/users/shounakmk219/repos","events_url":"https://api.github.com/users/shounakmk219/events{/privacy}","received_events_url":"https://api.github.com/users/shounakmk219/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-03T14:15:08Z","updated_at":"2023-05-03T14:15:08Z","author_association":"COLLABORATOR","body":"I had a look at this, from the description it looks like there are 2 issues\r\n\r\n1. One which @Jackie-Jiang pointed out that the exception log is due to the RealtimeToOfflineSegmentsTask task which is unable to find the respective offline table. \r\n\r\n- If you see the `QuickStartBase.DEFAULT_STREAM_TABLE_DIRECTORIES` the `githubEvents` table entry alone is under `examples/minions/stream` while other tables are sitting under `examples/stream`.\r\n- Even though there is a `examples/stream/githubEvents` but it does not follow the file name convention such as `examples/stream/<TABLE_NAME>/<TABLE_NAME>_realtime_table_config.json` and also has a different schema compared to the current `githubEvents` table.\r\n- As `examples/minions/stream/githubEvents` is referenced at other places too so removing the task from the table config may not be the right way to handle this\r\n- We can rename the current  `examples/stream/githubEvents` to `examples/stream/pullRequestMergedEvents` in accordance to the naming convention and create a new `examples/stream/githubEvents` which is a copy of `examples/minions/stream/githubEvents` without the task in table config.\r\n\r\n2. The one which @gortiz is pointing to where segments being deleted and index are acting weird upon index update + segment reload.\r\n\r\n- The data in `githubEvents` table is from 2021 and the table config has retention set to 1 year so reload is deleting all the segments\r\n- As there is no data the newly created consuming segment is showing the weird index view\r\n- Increasing the retention time addresses the issue. Let me know if this makes sense or we should update the data? Both cases will require maintenance in future","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1533106608/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1533111847","html_url":"https://github.com/apache/pinot/issues/10675#issuecomment-1533111847","issue_url":"https://api.github.com/repos/apache/pinot/issues/10675","id":1533111847,"node_id":"IC_kwDOATCU_c5bYW4n","user":{"login":"gortiz","id":1913993,"node_id":"MDQ6VXNlcjE5MTM5OTM=","avatar_url":"https://avatars.githubusercontent.com/u/1913993?v=4","gravatar_id":"","url":"https://api.github.com/users/gortiz","html_url":"https://github.com/gortiz","followers_url":"https://api.github.com/users/gortiz/followers","following_url":"https://api.github.com/users/gortiz/following{/other_user}","gists_url":"https://api.github.com/users/gortiz/gists{/gist_id}","starred_url":"https://api.github.com/users/gortiz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gortiz/subscriptions","organizations_url":"https://api.github.com/users/gortiz/orgs","repos_url":"https://api.github.com/users/gortiz/repos","events_url":"https://api.github.com/users/gortiz/events{/privacy}","received_events_url":"https://api.github.com/users/gortiz/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-03T14:18:22Z","updated_at":"2023-05-03T14:18:22Z","author_association":"CONTRIBUTOR","body":"> The data in githubEvents table is from 2021 and the table config has retention set to 1 year so reload is deleting all the segments\r\n\r\nVery good catch! That would explain why we only see this behavior in this test and not in production and honestly it will make me sleep better :)","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1533111847/reactions","total_count":1,"+1":0,"-1":0,"laugh":1,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1533123219","html_url":"https://github.com/apache/pinot/issues/10713#issuecomment-1533123219","issue_url":"https://api.github.com/repos/apache/pinot/issues/10713","id":1533123219,"node_id":"IC_kwDOATCU_c5bYZqT","user":{"login":"gortiz","id":1913993,"node_id":"MDQ6VXNlcjE5MTM5OTM=","avatar_url":"https://avatars.githubusercontent.com/u/1913993?v=4","gravatar_id":"","url":"https://api.github.com/users/gortiz","html_url":"https://github.com/gortiz","followers_url":"https://api.github.com/users/gortiz/followers","following_url":"https://api.github.com/users/gortiz/following{/other_user}","gists_url":"https://api.github.com/users/gortiz/gists{/gist_id}","starred_url":"https://api.github.com/users/gortiz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gortiz/subscriptions","organizations_url":"https://api.github.com/users/gortiz/orgs","repos_url":"https://api.github.com/users/gortiz/repos","events_url":"https://api.github.com/users/gortiz/events{/privacy}","received_events_url":"https://api.github.com/users/gortiz/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-03T14:25:29Z","updated_at":"2023-05-03T14:25:29Z","author_association":"CONTRIBUTOR","body":"Here we have a case where the user explicitly say they don't want to have a dictionary but some other index requires the dictionary. Historically, in this situation we decided to ignore user request and create the dictionary anyway, but the new isn't consistent: It doesn't fail at validation time and it fails at runtime as the code follows a path we don't expect.\r\n\r\nIt is clear that we need to either go back to the previous behavior or break compatibility. My suggestion is to introduce these special cases in `DictionaryIndex.getConfig` (or more specifically in `createDeserializer`). Other alternatives are focused on changing the behavior at reading time, but that would break the key idea introduced in `index-spi` where getConfig returns the actual configuration the index should use and therefore the invariant that FieldIndexConfigs can be seen as the source of trust. ","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1533123219/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1533124983","html_url":"https://github.com/apache/pinot/issues/10714#issuecomment-1533124983","issue_url":"https://api.github.com/repos/apache/pinot/issues/10714","id":1533124983,"node_id":"IC_kwDOATCU_c5bYaF3","user":{"login":"saltosaurus","id":64995047,"node_id":"MDQ6VXNlcjY0OTk1MDQ3","avatar_url":"https://avatars.githubusercontent.com/u/64995047?v=4","gravatar_id":"","url":"https://api.github.com/users/saltosaurus","html_url":"https://github.com/saltosaurus","followers_url":"https://api.github.com/users/saltosaurus/followers","following_url":"https://api.github.com/users/saltosaurus/following{/other_user}","gists_url":"https://api.github.com/users/saltosaurus/gists{/gist_id}","starred_url":"https://api.github.com/users/saltosaurus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/saltosaurus/subscriptions","organizations_url":"https://api.github.com/users/saltosaurus/orgs","repos_url":"https://api.github.com/users/saltosaurus/repos","events_url":"https://api.github.com/users/saltosaurus/events{/privacy}","received_events_url":"https://api.github.com/users/saltosaurus/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-03T14:26:34Z","updated_at":"2023-05-03T14:26:34Z","author_association":"NONE","body":"Since reporting this issue to Slack I have since copied the [JDBC Driver](https://github.com/apache/pinot/blob/55db06fab16682fcac40d12cbdb7fc1df3ca6a91/pinot-clients/pinot-jdbc-client/src/main/java/org/apache/pinot/client/PinotDriver.java) into our repository and modified it to only keep a single static copy of the AsyncHttpClient.\r\n\r\nThis has resulted in a significant reduction in leaked memory, though the issue does not seem 100% solved.\r\n\r\nSee https://apache-pinot.slack.com/archives/C011C9JHN7R/p1681761095987249 for the original Slack thread on this problem. ","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1533124983/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1533125747","html_url":"https://github.com/apache/pinot/issues/10714#issuecomment-1533125747","issue_url":"https://api.github.com/repos/apache/pinot/issues/10714","id":1533125747,"node_id":"IC_kwDOATCU_c5bYaRz","user":{"login":"saltosaurus","id":64995047,"node_id":"MDQ6VXNlcjY0OTk1MDQ3","avatar_url":"https://avatars.githubusercontent.com/u/64995047?v=4","gravatar_id":"","url":"https://api.github.com/users/saltosaurus","html_url":"https://github.com/saltosaurus","followers_url":"https://api.github.com/users/saltosaurus/followers","following_url":"https://api.github.com/users/saltosaurus/following{/other_user}","gists_url":"https://api.github.com/users/saltosaurus/gists{/gist_id}","starred_url":"https://api.github.com/users/saltosaurus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/saltosaurus/subscriptions","organizations_url":"https://api.github.com/users/saltosaurus/orgs","repos_url":"https://api.github.com/users/saltosaurus/repos","events_url":"https://api.github.com/users/saltosaurus/events{/privacy}","received_events_url":"https://api.github.com/users/saltosaurus/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-03T14:27:05Z","updated_at":"2023-05-03T14:28:05Z","author_association":"NONE","body":"Our configuration:\r\n\r\n`\r\npublic DataSource pinotDatabase(PinotConfig pinotConfig) {\r\n        Map<String, PinotClientProperties> clients = pinotConfig.getClients();\r\n        Optional<PinotClientProperties> client = clients.values().stream().findFirst();\r\n\r\n        String host;\r\n        Properties props = new Properties();\r\n        props.put(\"headers.Authorization\", toBasicAuthToken(pinotConfig.getUsername(), pinotConfig.getPassword()));\r\n        if (client.isPresent()) {\r\n            PinotClientProperties clientProperties = client.get();\r\n            host = String.format(\"jdbc:pinot://%s:%s\", clientProperties.getHosts().get(0), client.get().getPort());\r\n        } else {\r\n            throw new DataLabException(false,\r\n                    \"Unable to find cluster name configured under key 'pinot.clients' in application.yml.\");\r\n        }\r\n\r\n        DriverManagerDataSource dataSource = new DriverManagerDataSource();\r\n        dataSource.setUrl(host);\r\n        dataSource.setDriverClassName(\"org.apache.pinot.client.PinotDriver\");\r\n        dataSource.setConnectionProperties(props);\r\n        return dataSource;\r\n    }\r\n`","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1533125747/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1533258014","html_url":"https://github.com/apache/pinot/pull/10423#issuecomment-1533258014","issue_url":"https://api.github.com/repos/apache/pinot/issues/10423","id":1533258014,"node_id":"IC_kwDOATCU_c5bY6ke","user":{"login":"ankitsultana","id":8644710,"node_id":"MDQ6VXNlcjg2NDQ3MTA=","avatar_url":"https://avatars.githubusercontent.com/u/8644710?v=4","gravatar_id":"","url":"https://api.github.com/users/ankitsultana","html_url":"https://github.com/ankitsultana","followers_url":"https://api.github.com/users/ankitsultana/followers","following_url":"https://api.github.com/users/ankitsultana/following{/other_user}","gists_url":"https://api.github.com/users/ankitsultana/gists{/gist_id}","starred_url":"https://api.github.com/users/ankitsultana/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ankitsultana/subscriptions","organizations_url":"https://api.github.com/users/ankitsultana/orgs","repos_url":"https://api.github.com/users/ankitsultana/repos","events_url":"https://api.github.com/users/ankitsultana/events{/privacy}","received_events_url":"https://api.github.com/users/ankitsultana/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-03T15:33:53Z","updated_at":"2023-05-03T15:33:53Z","author_association":"CONTRIBUTOR","body":"> > My main concern is with this part:\r\n> > ```\r\n> > builder.add(e.getKey(), toRelDataType(e.getValue(),\r\n> >           isNullSupportEnabled || e.getValue().isNullableField()));\r\n> > ```\r\n> > \r\n> > \r\n> >     \r\n> >       \r\n> >     \r\n> > \r\n> >       \r\n> >     \r\n> > \r\n> >     \r\n> >   \r\n> > I think if users have configured \"enableNullHandling\" at table level, we should let column level nullability decide whether a given column is nullable or not.\r\n> > If enableNullHandling is not set at the table level, then we can assume that all columns are non-null (similar to V1 engine). That would essentially mean that column level nullability is not enabled so we assume everything to be non-null.\r\n> \r\n> Hmm. I understood your concern. so to link: https://github.com/apache/pinot/pull/10423/files#r1183232264 --> this means in order to enable nullability we should\r\n> \r\n> 1. only do so for a table if table config enables null, otherwise disregard any column level config (this is existing behavior)\r\n> 2. add column level nullability config to user setting it to false, otherwise default to true (this is going to change)\r\n> 3. create nullable column only if (1) _AND_ (2) are true\r\n> \r\n> yes?\r\n\r\nYeah. The idea being that we only have two states:\r\n\r\n1. Either column level nullability feature is disabled (when enableNullHandling is not set at table level)\r\n2. Or it is enabled, in which case its values will always be honored.","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1533258014/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1533370590","html_url":"https://github.com/apache/pinot/pull/10704#issuecomment-1533370590","issue_url":"https://api.github.com/repos/apache/pinot/issues/10704","id":1533370590,"node_id":"IC_kwDOATCU_c5bZWDe","user":{"login":"egalpin","id":7582748,"node_id":"MDQ6VXNlcjc1ODI3NDg=","avatar_url":"https://avatars.githubusercontent.com/u/7582748?v=4","gravatar_id":"","url":"https://api.github.com/users/egalpin","html_url":"https://github.com/egalpin","followers_url":"https://api.github.com/users/egalpin/followers","following_url":"https://api.github.com/users/egalpin/following{/other_user}","gists_url":"https://api.github.com/users/egalpin/gists{/gist_id}","starred_url":"https://api.github.com/users/egalpin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/egalpin/subscriptions","organizations_url":"https://api.github.com/users/egalpin/orgs","repos_url":"https://api.github.com/users/egalpin/repos","events_url":"https://api.github.com/users/egalpin/events{/privacy}","received_events_url":"https://api.github.com/users/egalpin/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-03T16:47:23Z","updated_at":"2023-05-03T16:47:23Z","author_association":"MEMBER","body":"Ya that makes sense, otherwise it would literally be changing the semantics of which docs should have been persisted in the first place.  I do want to allow for support of adding a brand new column to the schema + comparisonColumns list though, which I agree should work.\r\n\r\nWhen reloading sealed segments, is processing done in global order of `docId`? Or are segments loaded in parallel?  If they're loaded strictly in global order of docId, I feel we might not need any comparison at all; effectively, any doc with a higher docId was persisted _after_ a doc with a lower docId and therefore whatever the upsert comparison semantics were at the time when the doc was persisted _must_ have been truthy (otherwise the doc would have been rejected).  Therefore we could ensure to maintain whatever the prior upsert semantics were, then use the new semantics moving forward, by forcing `compareTo` to return `1` for every doc read from a sealed segment.","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1533370590/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1533430278","html_url":"https://github.com/apache/pinot/pull/10716#issuecomment-1533430278","issue_url":"https://api.github.com/repos/apache/pinot/issues/10716","id":1533430278,"node_id":"IC_kwDOATCU_c5bZkoG","user":{"login":"codecov-commenter","id":65553080,"node_id":"MDQ6VXNlcjY1NTUzMDgw","avatar_url":"https://avatars.githubusercontent.com/u/65553080?v=4","gravatar_id":"","url":"https://api.github.com/users/codecov-commenter","html_url":"https://github.com/codecov-commenter","followers_url":"https://api.github.com/users/codecov-commenter/followers","following_url":"https://api.github.com/users/codecov-commenter/following{/other_user}","gists_url":"https://api.github.com/users/codecov-commenter/gists{/gist_id}","starred_url":"https://api.github.com/users/codecov-commenter/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codecov-commenter/subscriptions","organizations_url":"https://api.github.com/users/codecov-commenter/orgs","repos_url":"https://api.github.com/users/codecov-commenter/repos","events_url":"https://api.github.com/users/codecov-commenter/events{/privacy}","received_events_url":"https://api.github.com/users/codecov-commenter/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-03T17:26:10Z","updated_at":"2023-05-03T18:28:08Z","author_association":"NONE","body":"## [Codecov](https://app.codecov.io/gh/apache/pinot/pull/10716?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation) Report\n> Merging [#10716](https://app.codecov.io/gh/apache/pinot/pull/10716?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation) (db86638) into [master](https://app.codecov.io/gh/apache/pinot/commit/cad764dcbe8793f7fb1cbec37051c27a753e4f30?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation) (cad764d) will **decrease** coverage by `0.03%`.\n> The diff coverage is `n/a`.\n\n```diff\n@@             Coverage Diff              @@\n##             master   #10716      +/-   ##\n============================================\n- Coverage     70.32%   70.29%   -0.03%     \n  Complexity     6429     6429              \n============================================\n  Files          2112     2112              \n  Lines        114056   114056              \n  Branches      17226    17226              \n============================================\n- Hits          80213    80180      -33     \n- Misses        28244    28278      +34     \n+ Partials       5599     5598       -1     \n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| integration1 | `24.40% <ø> (+0.05%)` | :arrow_up: |\n| integration2 | `24.04% <ø> (+0.01%)` | :arrow_up: |\n| unittests1 | `67.83% <ø> (+<0.01%)` | :arrow_up: |\n| unittests2 | `13.81% <ø> (-0.02%)` | :arrow_down: |\n\nFlags with carried forward coverage won't be shown. [Click here](https://docs.codecov.io/docs/carryforward-flags?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation#carryforward-flags-in-the-pull-request-comment) to find out more.\n\n[see 29 files with indirect coverage changes](https://app.codecov.io/gh/apache/pinot/pull/10716/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation)\n\n:mega: We’re building smart automated test selection to slash your CI/CD build times. [Learn more](https://about.codecov.io/iterative-testing/?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=The+Apache+Software+Foundation)\n","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1533430278/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1533454111","html_url":"https://github.com/apache/pinot/pull/10715#issuecomment-1533454111","issue_url":"https://api.github.com/repos/apache/pinot/issues/10715","id":1533454111,"node_id":"IC_kwDOATCU_c5bZqcf","user":{"login":"codecov-commenter","id":65553080,"node_id":"MDQ6VXNlcjY1NTUzMDgw","avatar_url":"https://avatars.githubusercontent.com/u/65553080?v=4","gravatar_id":"","url":"https://api.github.com/users/codecov-commenter","html_url":"https://github.com/codecov-commenter","followers_url":"https://api.github.com/users/codecov-commenter/followers","following_url":"https://api.github.com/users/codecov-commenter/following{/other_user}","gists_url":"https://api.github.com/users/codecov-commenter/gists{/gist_id}","starred_url":"https://api.github.com/users/codecov-commenter/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codecov-commenter/subscriptions","organizations_url":"https://api.github.com/users/codecov-commenter/orgs","repos_url":"https://api.github.com/users/codecov-commenter/repos","events_url":"https://api.github.com/users/codecov-commenter/events{/privacy}","received_events_url":"https://api.github.com/users/codecov-commenter/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-03T17:45:22Z","updated_at":"2023-06-02T08:58:20Z","author_association":"NONE","body":"## [Codecov](https://app.codecov.io/gh/apache/pinot/pull/10715?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) Report\n> Merging [#10715](https://app.codecov.io/gh/apache/pinot/pull/10715?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) (49053d8) into [master](https://app.codecov.io/gh/apache/pinot/commit/60ab652e3209927012fe8e7d765cb0e2e1ceab77?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) (60ab652) will **decrease** coverage by `38.72%`.\n> The diff coverage is `0.00%`.\n\n```diff\n@@              Coverage Diff              @@\n##             master   #10715       +/-   ##\n=============================================\n- Coverage     70.21%   31.50%   -38.72%     \n+ Complexity     6582      453     -6129     \n=============================================\n  Files          2170     2170               \n  Lines        116663   116705       +42     \n  Branches      17656    17665        +9     \n=============================================\n- Hits          81918    36764    -45154     \n- Misses        29031    76609    +47578     \n+ Partials       5714     3332     -2382     \n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| integration1 | `23.99% <0.00%> (-0.08%)` | :arrow_down: |\n| integration2 | `?` | |\n| unittests1 | `?` | |\n| unittests2 | `13.62% <0.00%> (+0.02%)` | :arrow_up: |\n\nFlags with carried forward coverage won't be shown. [Click here](https://docs.codecov.io/docs/carryforward-flags?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache#carryforward-flags-in-the-pull-request-comment) to find out more.\n\n| [Impacted Files](https://app.codecov.io/gh/apache/pinot/pull/10715?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) | Coverage Δ | |\n|---|---|---|\n| [...ent/index/column/PhysicalColumnIndexContainer.java](https://app.codecov.io/gh/apache/pinot/pull/10715?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache#diff-cGlub3Qtc2VnbWVudC1sb2NhbC9zcmMvbWFpbi9qYXZhL29yZy9hcGFjaGUvcGlub3Qvc2VnbWVudC9sb2NhbC9zZWdtZW50L2luZGV4L2NvbHVtbi9QaHlzaWNhbENvbHVtbkluZGV4Q29udGFpbmVyLmphdmE=) | `0.00% <0.00%> (-90.91%)` | :arrow_down: |\n| [.../segment/index/dictionary/DictionaryIndexType.java](https://app.codecov.io/gh/apache/pinot/pull/10715?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache#diff-cGlub3Qtc2VnbWVudC1sb2NhbC9zcmMvbWFpbi9qYXZhL29yZy9hcGFjaGUvcGlub3Qvc2VnbWVudC9sb2NhbC9zZWdtZW50L2luZGV4L2RpY3Rpb25hcnkvRGljdGlvbmFyeUluZGV4VHlwZS5qYXZh) | `0.00% <0.00%> (-83.74%)` | :arrow_down: |\n| [...ocal/segment/index/inverted/InvertedIndexType.java](https://app.codecov.io/gh/apache/pinot/pull/10715?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache#diff-cGlub3Qtc2VnbWVudC1sb2NhbC9zcmMvbWFpbi9qYXZhL29yZy9hcGFjaGUvcGlub3Qvc2VnbWVudC9sb2NhbC9zZWdtZW50L2luZGV4L2ludmVydGVkL0ludmVydGVkSW5kZXhUeXBlLmphdmE=) | `0.00% <0.00%> (-68.75%)` | :arrow_down: |\n| [...al/segment/index/nullvalue/NullValueIndexType.java](https://app.codecov.io/gh/apache/pinot/pull/10715?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache#diff-cGlub3Qtc2VnbWVudC1sb2NhbC9zcmMvbWFpbi9qYXZhL29yZy9hcGFjaGUvcGlub3Qvc2VnbWVudC9sb2NhbC9zZWdtZW50L2luZGV4L251bGx2YWx1ZS9OdWxsVmFsdWVJbmRleFR5cGUuamF2YQ==) | `0.00% <0.00%> (-82.61%)` | :arrow_down: |\n| [...egment/local/segment/index/text/TextIndexType.java](https://app.codecov.io/gh/apache/pinot/pull/10715?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache#diff-cGlub3Qtc2VnbWVudC1sb2NhbC9zcmMvbWFpbi9qYXZhL29yZy9hcGFjaGUvcGlub3Qvc2VnbWVudC9sb2NhbC9zZWdtZW50L2luZGV4L3RleHQvVGV4dEluZGV4VHlwZS5qYXZh) | `0.00% <0.00%> (-75.00%)` | :arrow_down: |\n| [...pinot/segment/spi/index/DictionaryIndexConfig.java](https://app.codecov.io/gh/apache/pinot/pull/10715?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache#diff-cGlub3Qtc2VnbWVudC1zcGkvc3JjL21haW4vamF2YS9vcmcvYXBhY2hlL3Bpbm90L3NlZ21lbnQvc3BpL2luZGV4L0RpY3Rpb25hcnlJbmRleENvbmZpZy5qYXZh) | `0.00% <0.00%> (-71.43%)` | :arrow_down: |\n| [...he/pinot/segment/spi/index/IndexReaderFactory.java](https://app.codecov.io/gh/apache/pinot/pull/10715?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache#diff-cGlub3Qtc2VnbWVudC1zcGkvc3JjL21haW4vamF2YS9vcmcvYXBhY2hlL3Bpbm90L3NlZ21lbnQvc3BpL2luZGV4L0luZGV4UmVhZGVyRmFjdG9yeS5qYXZh) | `0.00% <0.00%> (-66.67%)` | :arrow_down: |\n\n... and [1374 files with indirect coverage changes](https://app.codecov.io/gh/apache/pinot/pull/10715/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache)\n\n:mega: We’re building smart automated test selection to slash your CI/CD build times. [Learn more](https://about.codecov.io/iterative-testing/?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache)\n","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1533454111/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1533459715","html_url":"https://github.com/apache/pinot/pull/10711#issuecomment-1533459715","issue_url":"https://api.github.com/repos/apache/pinot/issues/10711","id":1533459715,"node_id":"IC_kwDOATCU_c5bZr0D","user":{"login":"walterddr","id":3581352,"node_id":"MDQ6VXNlcjM1ODEzNTI=","avatar_url":"https://avatars.githubusercontent.com/u/3581352?v=4","gravatar_id":"","url":"https://api.github.com/users/walterddr","html_url":"https://github.com/walterddr","followers_url":"https://api.github.com/users/walterddr/followers","following_url":"https://api.github.com/users/walterddr/following{/other_user}","gists_url":"https://api.github.com/users/walterddr/gists{/gist_id}","starred_url":"https://api.github.com/users/walterddr/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/walterddr/subscriptions","organizations_url":"https://api.github.com/users/walterddr/orgs","repos_url":"https://api.github.com/users/walterddr/repos","events_url":"https://api.github.com/users/walterddr/events{/privacy}","received_events_url":"https://api.github.com/users/walterddr/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-03T17:48:32Z","updated_at":"2023-05-09T02:54:26Z","author_association":"CONTRIBUTOR","body":"putting it back to draft. there's a fairness issue with this approach. \r\n\r\n1. the leaf-stage execution is non-yielding thus it will always be in the ready queue upon register;\r\n2. the intermediate-stage execution is yielding thus they will be yielding at register unless data is already available for this stage; once yield it will be put to the back of the queue\r\n3. each time intermediate-stage need to fight for round-robin scheduler to clear all the previous leaf-stage executions coming in before intermediate stage can execute.\r\n\r\nThis creates a fairness issue b/c not all threads are executing [collaborative multithreaded](https://en.wikipedia.org/wiki/Cooperative_multitasking) -- thus the \"bad guys\" always gets the priority. \r\n\r\npossible redesign\r\n- implement the PiplineBreakerOperator in this PR so that PiplineBreakerOperator will actually yield leaf-stage operator until the leaf-stage execution finishes\r\n    - this will also make that `serverExecutor.execute()` to be run on QueryRunner threadpool. which is different from the QueryWorker (for leaf) and QueryIntermediate (for intermediate stage)\r\n- use 2 threadpool for scheduler service\r\n- use priority queue\r\n\r\nmy personal preference is option 1\r\n\r\nCC @xiangfu0, @ankitsultana, @siddharthteotia \r\n\r\n[UPDATE] this analysis is no longer valid. see below","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1533459715/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1533553595","html_url":"https://github.com/apache/pinot/pull/10622#issuecomment-1533553595","issue_url":"https://api.github.com/repos/apache/pinot/issues/10622","id":1533553595,"node_id":"IC_kwDOATCU_c5baCu7","user":{"login":"xiangfu0","id":1202120,"node_id":"MDQ6VXNlcjEyMDIxMjA=","avatar_url":"https://avatars.githubusercontent.com/u/1202120?v=4","gravatar_id":"","url":"https://api.github.com/users/xiangfu0","html_url":"https://github.com/xiangfu0","followers_url":"https://api.github.com/users/xiangfu0/followers","following_url":"https://api.github.com/users/xiangfu0/following{/other_user}","gists_url":"https://api.github.com/users/xiangfu0/gists{/gist_id}","starred_url":"https://api.github.com/users/xiangfu0/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xiangfu0/subscriptions","organizations_url":"https://api.github.com/users/xiangfu0/orgs","repos_url":"https://api.github.com/users/xiangfu0/repos","events_url":"https://api.github.com/users/xiangfu0/events{/privacy}","received_events_url":"https://api.github.com/users/xiangfu0/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-03T19:04:04Z","updated_at":"2023-05-03T19:04:04Z","author_association":"CONTRIBUTOR","body":"> lgtm overall. please fix the explain plan test\n\ndone","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1533553595/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1533956513","html_url":"https://github.com/apache/pinot/pull/10636#issuecomment-1533956513","issue_url":"https://api.github.com/repos/apache/pinot/issues/10636","id":1533956513,"node_id":"IC_kwDOATCU_c5bblGh","user":{"login":"jasperjiaguo","id":10736840,"node_id":"MDQ6VXNlcjEwNzM2ODQw","avatar_url":"https://avatars.githubusercontent.com/u/10736840?v=4","gravatar_id":"","url":"https://api.github.com/users/jasperjiaguo","html_url":"https://github.com/jasperjiaguo","followers_url":"https://api.github.com/users/jasperjiaguo/followers","following_url":"https://api.github.com/users/jasperjiaguo/following{/other_user}","gists_url":"https://api.github.com/users/jasperjiaguo/gists{/gist_id}","starred_url":"https://api.github.com/users/jasperjiaguo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jasperjiaguo/subscriptions","organizations_url":"https://api.github.com/users/jasperjiaguo/orgs","repos_url":"https://api.github.com/users/jasperjiaguo/repos","events_url":"https://api.github.com/users/jasperjiaguo/events{/privacy}","received_events_url":"https://api.github.com/users/jasperjiaguo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-04T01:38:30Z","updated_at":"2023-05-04T01:38:30Z","author_association":"CONTRIBUTOR","body":"@somandal Address the code related comments, will add more test cases tomorrow.","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1533956513/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1534014194","html_url":"https://github.com/apache/pinot/issues/10686#issuecomment-1534014194","issue_url":"https://api.github.com/repos/apache/pinot/issues/10686","id":1534014194,"node_id":"IC_kwDOATCU_c5bbzLy","user":{"login":"abhioncbr","id":1076944,"node_id":"MDQ6VXNlcjEwNzY5NDQ=","avatar_url":"https://avatars.githubusercontent.com/u/1076944?v=4","gravatar_id":"","url":"https://api.github.com/users/abhioncbr","html_url":"https://github.com/abhioncbr","followers_url":"https://api.github.com/users/abhioncbr/followers","following_url":"https://api.github.com/users/abhioncbr/following{/other_user}","gists_url":"https://api.github.com/users/abhioncbr/gists{/gist_id}","starred_url":"https://api.github.com/users/abhioncbr/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/abhioncbr/subscriptions","organizations_url":"https://api.github.com/users/abhioncbr/orgs","repos_url":"https://api.github.com/users/abhioncbr/repos","events_url":"https://api.github.com/users/abhioncbr/events{/privacy}","received_events_url":"https://api.github.com/users/abhioncbr/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-04T02:57:30Z","updated_at":"2023-05-04T03:05:03Z","author_association":"CONTRIBUTOR","body":"Comparison results on H2 DB \r\n```\r\n$ CREATE TABLE Numeric_tbl (int_col INTEGER, long_col BIGINT, double_col Double, float_col REAL, bigDecimal_col DECFLOAT);\r\n$ INSERT INTO Numeric_tbl VALUES(1,1,1.1,1.1,1.1);\r\n$ INSERT INTO Numeric_tbl VALUES(1,1,1,1,1);\r\n\r\n$ select int_col = long_col, long_col =int_col from Numeric_tbl;\r\nINT_COL = LONG_COL | LONG_COL = INT_COL\r\n------------------ | -------------------\r\nTRUE               | TRUE\r\nTRUE               | TRUE\r\n\r\n$ select int_col = bigDecimal_col, bigDecimal_col = int_col,long_col = bigDecimal_col, bigDecimal_col = long_col from Numeric_tbl;\r\nINT_COL = BIGDECIMAL_COL | BIGDECIMAL_COL = INT_COL | LONG_COL = BIGDECIMAL_COL | BIGDECIMAL_COL = LONG_COL\r\n------------------------ | ------------------------ | ------------------------- | ------------------------ \r\nFALSE                    | FALSE                    | FALSE                     | FALSE\r\nTRUE                     | TRUE                     | TRUE                      | TRUE\r\n\r\n$ select float_col = double_col, double_col = float_col from Numeric_tbl;\r\nFLOAT_COL = DOUBLE_COL | DOUBLE_COL = FLOAT_COL\r\n---------------------- | ------------------------\r\nFALSE                  | FALSE\r\nTRUE                   | TRUE\r\n\r\n$ select float_col =  bigDecimal_col, bigDecimal_col = float_col,  double_col =  bigDecimal_col, bigDecimal_col = double_col from Numeric_tbl;\r\nFLOAT_COL = BIGDECIMAL_COL | BIGDECIMAL_COL = FLOAT_COL | DOUBLE_COL = BIGDECIMAL_COL | BIGDECIMAL_COL = DOUBLE_COL\r\n-------------------------- | -------------------------- | --------------------------- | ---------------------------\r\nTRUE                       | TRUE                       | TRUE                        | TRUE\r\nTRUE                       | TRUE                       | TRUE                        | TRUE\r\n```\r\n\r\nOn Postgres\r\n<img width=\"1651\" alt=\"Screen Shot 2023-05-03 at 11 04 23 PM\" src=\"https://user-images.githubusercontent.com/1076944/236104236-ed869837-3647-4e40-ac3a-5b5fb4b8f92f.png\">\r\n","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1534014194/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1534023782","html_url":"https://github.com/apache/pinot/pull/10656#issuecomment-1534023782","issue_url":"https://api.github.com/repos/apache/pinot/issues/10656","id":1534023782,"node_id":"IC_kwDOATCU_c5bb1hm","user":{"login":"abhioncbr","id":1076944,"node_id":"MDQ6VXNlcjEwNzY5NDQ=","avatar_url":"https://avatars.githubusercontent.com/u/1076944?v=4","gravatar_id":"","url":"https://api.github.com/users/abhioncbr","html_url":"https://github.com/abhioncbr","followers_url":"https://api.github.com/users/abhioncbr/followers","following_url":"https://api.github.com/users/abhioncbr/following{/other_user}","gists_url":"https://api.github.com/users/abhioncbr/gists{/gist_id}","starred_url":"https://api.github.com/users/abhioncbr/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/abhioncbr/subscriptions","organizations_url":"https://api.github.com/users/abhioncbr/orgs","repos_url":"https://api.github.com/users/abhioncbr/repos","events_url":"https://api.github.com/users/abhioncbr/events{/privacy}","received_events_url":"https://api.github.com/users/abhioncbr/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-04T03:07:27Z","updated_at":"2023-05-04T03:07:27Z","author_association":"CONTRIBUTOR","body":"Please review it once more. Thanks","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1534023782/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1534151800","html_url":"https://github.com/apache/pinot/pull/10721#issuecomment-1534151800","issue_url":"https://api.github.com/repos/apache/pinot/issues/10721","id":1534151800,"node_id":"IC_kwDOATCU_c5bcUx4","user":{"login":"codecov-commenter","id":65553080,"node_id":"MDQ6VXNlcjY1NTUzMDgw","avatar_url":"https://avatars.githubusercontent.com/u/65553080?v=4","gravatar_id":"","url":"https://api.github.com/users/codecov-commenter","html_url":"https://github.com/codecov-commenter","followers_url":"https://api.github.com/users/codecov-commenter/followers","following_url":"https://api.github.com/users/codecov-commenter/following{/other_user}","gists_url":"https://api.github.com/users/codecov-commenter/gists{/gist_id}","starred_url":"https://api.github.com/users/codecov-commenter/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codecov-commenter/subscriptions","organizations_url":"https://api.github.com/users/codecov-commenter/orgs","repos_url":"https://api.github.com/users/codecov-commenter/repos","events_url":"https://api.github.com/users/codecov-commenter/events{/privacy}","received_events_url":"https://api.github.com/users/codecov-commenter/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-04T06:24:15Z","updated_at":"2023-06-02T05:36:59Z","author_association":"NONE","body":"## [Codecov](https://app.codecov.io/gh/apache/pinot/pull/10721?src=pr&el=h1&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) Report\n> Merging [#10721](https://app.codecov.io/gh/apache/pinot/pull/10721?src=pr&el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) (37aef31) into [master](https://app.codecov.io/gh/apache/pinot/commit/ab4e8fac84d07ab80dedb597f194f4ff9f2d1f0f?el=desc&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) (ab4e8fa) will **increase** coverage by `1.79%`.\n> The diff coverage is `78.57%`.\n\n```diff\n@@             Coverage Diff              @@\n##             master   #10721      +/-   ##\n============================================\n+ Coverage     68.41%   70.20%   +1.79%     \n- Complexity     6518     6529      +11     \n============================================\n  Files          2164     2164              \n  Lines        116410   116412       +2     \n  Branches      17609    17609              \n============================================\n+ Hits          79637    81725    +2088     \n+ Misses        31136    28990    -2146     \n- Partials       5637     5697      +60     \n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| integration1 | `24.03% <0.00%> (-0.02%)` | :arrow_down: |\n| integration2 | `23.55% <0.00%> (?)` | |\n| unittests1 | `67.69% <78.57%> (+<0.01%)` | :arrow_up: |\n| unittests2 | `13.65% <0.00%> (+0.01%)` | :arrow_up: |\n\nFlags with carried forward coverage won't be shown. [Click here](https://docs.codecov.io/docs/carryforward-flags?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache#carryforward-flags-in-the-pull-request-comment) to find out more.\n\n| [Impacted Files](https://app.codecov.io/gh/apache/pinot/pull/10721?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache) | Coverage Δ | |\n|---|---|---|\n| [...eator/name/NormalizedDateSegmentNameGenerator.java](https://app.codecov.io/gh/apache/pinot/pull/10721?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache#diff-cGlub3Qtc2VnbWVudC1zcGkvc3JjL21haW4vamF2YS9vcmcvYXBhY2hlL3Bpbm90L3NlZ21lbnQvc3BpL2NyZWF0b3IvbmFtZS9Ob3JtYWxpemVkRGF0ZVNlZ21lbnROYW1lR2VuZXJhdG9yLmphdmE=) | `83.60% <76.92%> (+0.27%)` | :arrow_up: |\n| [.../org/apache/pinot/spi/data/DateTimeFormatSpec.java](https://app.codecov.io/gh/apache/pinot/pull/10721?src=pr&el=tree&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache#diff-cGlub3Qtc3BpL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9zcGkvZGF0YS9EYXRlVGltZUZvcm1hdFNwZWMuamF2YQ==) | `83.06% <100.00%> (+0.13%)` | :arrow_up: |\n\n... and [171 files with indirect coverage changes](https://app.codecov.io/gh/apache/pinot/pull/10721/indirect-changes?src=pr&el=tree-more&utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache)\n\n:mega: We’re building smart automated test selection to slash your CI/CD build times. [Learn more](https://about.codecov.io/iterative-testing/?utm_medium=referral&utm_source=github&utm_content=comment&utm_campaign=pr+comments&utm_term=apache)\n","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1534151800/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1534259984","html_url":"https://github.com/apache/pinot/pull/10706#issuecomment-1534259984","issue_url":"https://api.github.com/repos/apache/pinot/issues/10706","id":1534259984,"node_id":"IC_kwDOATCU_c5bcvMQ","user":{"login":"KKcorps","id":5559703,"node_id":"MDQ6VXNlcjU1NTk3MDM=","avatar_url":"https://avatars.githubusercontent.com/u/5559703?v=4","gravatar_id":"","url":"https://api.github.com/users/KKcorps","html_url":"https://github.com/KKcorps","followers_url":"https://api.github.com/users/KKcorps/followers","following_url":"https://api.github.com/users/KKcorps/following{/other_user}","gists_url":"https://api.github.com/users/KKcorps/gists{/gist_id}","starred_url":"https://api.github.com/users/KKcorps/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/KKcorps/subscriptions","organizations_url":"https://api.github.com/users/KKcorps/orgs","repos_url":"https://api.github.com/users/KKcorps/repos","events_url":"https://api.github.com/users/KKcorps/events{/privacy}","received_events_url":"https://api.github.com/users/KKcorps/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-04T08:04:17Z","updated_at":"2023-05-04T08:04:17Z","author_association":"CONTRIBUTOR","body":"@ankitsultana I have gone with `(host:port__requestID)`. \r\nDoes that work or do you want something else?","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1534259984/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1534283308","html_url":"https://github.com/apache/pinot/pull/10706#issuecomment-1534283308","issue_url":"https://api.github.com/repos/apache/pinot/issues/10706","id":1534283308,"node_id":"IC_kwDOATCU_c5bc04s","user":{"login":"tibrewalpratik17","id":23629228,"node_id":"MDQ6VXNlcjIzNjI5MjI4","avatar_url":"https://avatars.githubusercontent.com/u/23629228?v=4","gravatar_id":"","url":"https://api.github.com/users/tibrewalpratik17","html_url":"https://github.com/tibrewalpratik17","followers_url":"https://api.github.com/users/tibrewalpratik17/followers","following_url":"https://api.github.com/users/tibrewalpratik17/following{/other_user}","gists_url":"https://api.github.com/users/tibrewalpratik17/gists{/gist_id}","starred_url":"https://api.github.com/users/tibrewalpratik17/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tibrewalpratik17/subscriptions","organizations_url":"https://api.github.com/users/tibrewalpratik17/orgs","repos_url":"https://api.github.com/users/tibrewalpratik17/repos","events_url":"https://api.github.com/users/tibrewalpratik17/events{/privacy}","received_events_url":"https://api.github.com/users/tibrewalpratik17/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-04T08:24:02Z","updated_at":"2023-05-04T08:24:02Z","author_association":"CONTRIBUTOR","body":"@ankitsultana I remember having a discussion where we thought of generating requestId at servers similar to broker's - using brokerHost and requestId as both of them are sent in the request from broker -> server. Do we also send brokerPort to the servers? If no, then just `host_request-id` should be good enough to keep the requestId consistent across brokers and servers.","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1534283308/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1534489360","html_url":"https://github.com/apache/pinot/pull/10715#issuecomment-1534489360","issue_url":"https://api.github.com/repos/apache/pinot/issues/10715","id":1534489360,"node_id":"IC_kwDOATCU_c5bdnMQ","user":{"login":"saurabhd336","id":7672118,"node_id":"MDQ6VXNlcjc2NzIxMTg=","avatar_url":"https://avatars.githubusercontent.com/u/7672118?v=4","gravatar_id":"","url":"https://api.github.com/users/saurabhd336","html_url":"https://github.com/saurabhd336","followers_url":"https://api.github.com/users/saurabhd336/followers","following_url":"https://api.github.com/users/saurabhd336/following{/other_user}","gists_url":"https://api.github.com/users/saurabhd336/gists{/gist_id}","starred_url":"https://api.github.com/users/saurabhd336/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/saurabhd336/subscriptions","organizations_url":"https://api.github.com/users/saurabhd336/orgs","repos_url":"https://api.github.com/users/saurabhd336/repos","events_url":"https://api.github.com/users/saurabhd336/events{/privacy}","received_events_url":"https://api.github.com/users/saurabhd336/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-04T10:20:08Z","updated_at":"2023-05-04T10:20:32Z","author_association":"CONTRIBUTOR","body":"@gortiz The original issue talks about when the segment metadata says the column is sorted / has inv index / has fst index. The changes you've made only looks for sorted columns in current table config?\r\n\r\nhttps://github.com/apache/pinot/blob/master/pinot-segment-local/src/main/java/org/apache/pinot/segment/local/segment/index/loader/ForwardIndexHandler.java#L362 for reference","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1534489360/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1534725880","html_url":"https://github.com/apache/pinot/pull/10706#issuecomment-1534725880","issue_url":"https://api.github.com/repos/apache/pinot/issues/10706","id":1534725880,"node_id":"IC_kwDOATCU_c5beg74","user":{"login":"KKcorps","id":5559703,"node_id":"MDQ6VXNlcjU1NTk3MDM=","avatar_url":"https://avatars.githubusercontent.com/u/5559703?v=4","gravatar_id":"","url":"https://api.github.com/users/KKcorps","html_url":"https://github.com/KKcorps","followers_url":"https://api.github.com/users/KKcorps/followers","following_url":"https://api.github.com/users/KKcorps/following{/other_user}","gists_url":"https://api.github.com/users/KKcorps/gists{/gist_id}","starred_url":"https://api.github.com/users/KKcorps/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/KKcorps/subscriptions","organizations_url":"https://api.github.com/users/KKcorps/orgs","repos_url":"https://api.github.com/users/KKcorps/repos","events_url":"https://api.github.com/users/KKcorps/events{/privacy}","received_events_url":"https://api.github.com/users/KKcorps/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-04T12:52:56Z","updated_at":"2023-05-04T12:52:56Z","author_association":"CONTRIBUTOR","body":"@tibrewalpratik17 I think making changes to overall tracking is out of scope for this PR. I only want to focus on the fact that if I receive a response, I should be able to backtrack it in Pinot. As long as I have host and requestId both, it should be possible.\r\n\r\nI have another idea as well.\r\n\r\nInstead of one, we can have two fields in the response `brokerId` and `requestId` where latter is existing long id.\r\n\r\nThis will reduce any ambiguity on what each part of the combined id means to OSS user.","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1534725880/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1535037191","html_url":"https://github.com/apache/pinot/issues/10677#issuecomment-1535037191","issue_url":"https://api.github.com/repos/apache/pinot/issues/10677","id":1535037191,"node_id":"IC_kwDOATCU_c5bfs8H","user":{"login":"somandal","id":47411403,"node_id":"MDQ6VXNlcjQ3NDExNDAz","avatar_url":"https://avatars.githubusercontent.com/u/47411403?v=4","gravatar_id":"","url":"https://api.github.com/users/somandal","html_url":"https://github.com/somandal","followers_url":"https://api.github.com/users/somandal/followers","following_url":"https://api.github.com/users/somandal/following{/other_user}","gists_url":"https://api.github.com/users/somandal/gists{/gist_id}","starred_url":"https://api.github.com/users/somandal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/somandal/subscriptions","organizations_url":"https://api.github.com/users/somandal/orgs","repos_url":"https://api.github.com/users/somandal/repos","events_url":"https://api.github.com/users/somandal/events{/privacy}","received_events_url":"https://api.github.com/users/somandal/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-04T16:23:11Z","updated_at":"2023-05-04T16:23:11Z","author_association":"CONTRIBUTOR","body":"The user confirmed that this issue is fixed on master (i.e. window support for this query is working as expected). This issue can be closed","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1535037191/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1535039763","html_url":"https://github.com/apache/pinot/issues/10676#issuecomment-1535039763","issue_url":"https://api.github.com/repos/apache/pinot/issues/10676","id":1535039763,"node_id":"IC_kwDOATCU_c5bftkT","user":{"login":"somandal","id":47411403,"node_id":"MDQ6VXNlcjQ3NDExNDAz","avatar_url":"https://avatars.githubusercontent.com/u/47411403?v=4","gravatar_id":"","url":"https://api.github.com/users/somandal","html_url":"https://github.com/somandal","followers_url":"https://api.github.com/users/somandal/followers","following_url":"https://api.github.com/users/somandal/following{/other_user}","gists_url":"https://api.github.com/users/somandal/gists{/gist_id}","starred_url":"https://api.github.com/users/somandal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/somandal/subscriptions","organizations_url":"https://api.github.com/users/somandal/orgs","repos_url":"https://api.github.com/users/somandal/repos","events_url":"https://api.github.com/users/somandal/events{/privacy}","received_events_url":"https://api.github.com/users/somandal/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-04T16:24:52Z","updated_at":"2023-05-04T16:24:52Z","author_association":"CONTRIBUTOR","body":"The user tried this on the latest master and confirmed that this query works. This issue can be closed. Explain plan shared by user:\r\n\r\n```\r\nSET useMultistageEngine=true;\r\nEXPLAIN PLAN FOR select DISTINCT(orderID) from foodOrderFact where orderState = 'NEW' and orderID NOT in (select DISTINCT(orderID) from foodOrderFact where orderState != 'NEW')\r\nExecution Plan\r\nLogicalAggregate(group=[{0}])\r\n  LogicalExchange(distribution=[hash[0]])\r\n    LogicalAggregate(group=[{0}])\r\n      LogicalFilter(condition=[IS NOT TRUE($4)])\r\n        LogicalJoin(condition=[=($2, $3)], joinType=[left])\r\n          LogicalExchange(distribution=[hash[2]])\r\n            LogicalProject(orderID=[$16], orderState=[$17], orderID0=[$16])\r\n              LogicalFilter(condition=[=($17, 'NEW')])\r\n                LogicalTableScan(table=[[foodOrderFact]])\r\n          LogicalExchange(distribution=[hash[0]])\r\n            LogicalProject(orderID=[$0], $f1=[true])\r\n              LogicalAggregate(group=[{0}])\r\n                LogicalExchange(distribution=[hash[0]])\r\n                  LogicalAggregate(group=[{0}])\r\n                    LogicalProject(orderID=[$16], orderState=[$17])\r\n                      LogicalFilter(condition=[<>($17, 'NEW')])\r\n                        LogicalTableScan(table=[[foodOrderFact]])\r\n```","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1535039763/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1535148368","html_url":"https://github.com/apache/pinot/issues/10658#issuecomment-1535148368","issue_url":"https://api.github.com/repos/apache/pinot/issues/10658","id":1535148368,"node_id":"IC_kwDOATCU_c5bgIFQ","user":{"login":"siddharthteotia","id":2150694,"node_id":"MDQ6VXNlcjIxNTA2OTQ=","avatar_url":"https://avatars.githubusercontent.com/u/2150694?v=4","gravatar_id":"","url":"https://api.github.com/users/siddharthteotia","html_url":"https://github.com/siddharthteotia","followers_url":"https://api.github.com/users/siddharthteotia/followers","following_url":"https://api.github.com/users/siddharthteotia/following{/other_user}","gists_url":"https://api.github.com/users/siddharthteotia/gists{/gist_id}","starred_url":"https://api.github.com/users/siddharthteotia/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/siddharthteotia/subscriptions","organizations_url":"https://api.github.com/users/siddharthteotia/orgs","repos_url":"https://api.github.com/users/siddharthteotia/repos","events_url":"https://api.github.com/users/siddharthteotia/events{/privacy}","received_events_url":"https://api.github.com/users/siddharthteotia/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-04T17:28:09Z","updated_at":"2023-05-04T17:28:09Z","author_association":"CONTRIBUTOR","body":"Hey @xiangfu0  - gentle ping to take a look. We can also meet to iterate faster.","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1535148368/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1535171764","html_url":"https://github.com/apache/pinot/issues/10313#issuecomment-1535171764","issue_url":"https://api.github.com/repos/apache/pinot/issues/10313","id":1535171764,"node_id":"IC_kwDOATCU_c5bgNy0","user":{"login":"swaminathanmanish","id":126024920,"node_id":"U_kgDOB4L82A","avatar_url":"https://avatars.githubusercontent.com/u/126024920?v=4","gravatar_id":"","url":"https://api.github.com/users/swaminathanmanish","html_url":"https://github.com/swaminathanmanish","followers_url":"https://api.github.com/users/swaminathanmanish/followers","following_url":"https://api.github.com/users/swaminathanmanish/following{/other_user}","gists_url":"https://api.github.com/users/swaminathanmanish/gists{/gist_id}","starred_url":"https://api.github.com/users/swaminathanmanish/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/swaminathanmanish/subscriptions","organizations_url":"https://api.github.com/users/swaminathanmanish/orgs","repos_url":"https://api.github.com/users/swaminathanmanish/repos","events_url":"https://api.github.com/users/swaminathanmanish/events{/privacy}","received_events_url":"https://api.github.com/users/swaminathanmanish/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-04T17:47:20Z","updated_at":"2023-05-04T17:47:20Z","author_association":"CONTRIBUTOR","body":"Completed -\r\nLook for `checking the status` section in this doc\r\nhttps://docs.pinot.apache.org/operators/operating-pinot/rebalance/rebalance-servers","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/1535171764/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]