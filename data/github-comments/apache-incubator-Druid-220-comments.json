[{"url":"https://api.github.com/repos/apache/druid/issues/comments/460803873","html_url":"https://github.com/apache/druid/pull/6911#issuecomment-460803873","issue_url":"https://api.github.com/repos/apache/druid/issues/6911","id":460803873,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MDgwMzg3Mw==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-05T21:07:26Z","updated_at":"2019-02-05T21:07:26Z","author_association":"CONTRIBUTOR","body":"@nishantmonu51 I added a doc for HA.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/460803873/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/460804502","html_url":"https://github.com/apache/druid/issues/6989#issuecomment-460804502","issue_url":"https://api.github.com/repos/apache/druid/issues/6989","id":460804502,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MDgwNDUwMg==","user":{"login":"glasser","id":16724,"node_id":"MDQ6VXNlcjE2NzI0","avatar_url":"https://avatars.githubusercontent.com/u/16724?v=4","gravatar_id":"","url":"https://api.github.com/users/glasser","html_url":"https://github.com/glasser","followers_url":"https://api.github.com/users/glasser/followers","following_url":"https://api.github.com/users/glasser/following{/other_user}","gists_url":"https://api.github.com/users/glasser/gists{/gist_id}","starred_url":"https://api.github.com/users/glasser/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/glasser/subscriptions","organizations_url":"https://api.github.com/users/glasser/orgs","repos_url":"https://api.github.com/users/glasser/repos","events_url":"https://api.github.com/users/glasser/events{/privacy}","received_events_url":"https://api.github.com/users/glasser/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-05T21:09:25Z","updated_at":"2019-02-05T21:09:25Z","author_association":"CONTRIBUTOR","body":"OK, I think I figured this out. Will test, but then will transform this issue into a docs suggestion and file a PR to fix.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/460804502/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/460811816","html_url":"https://github.com/apache/druid/issues/5543#issuecomment-460811816","issue_url":"https://api.github.com/repos/apache/druid/issues/5543","id":460811816,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MDgxMTgxNg==","user":{"login":"sascha-coenen","id":1635350,"node_id":"MDQ6VXNlcjE2MzUzNTA=","avatar_url":"https://avatars.githubusercontent.com/u/1635350?v=4","gravatar_id":"","url":"https://api.github.com/users/sascha-coenen","html_url":"https://github.com/sascha-coenen","followers_url":"https://api.github.com/users/sascha-coenen/followers","following_url":"https://api.github.com/users/sascha-coenen/following{/other_user}","gists_url":"https://api.github.com/users/sascha-coenen/gists{/gist_id}","starred_url":"https://api.github.com/users/sascha-coenen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sascha-coenen/subscriptions","organizations_url":"https://api.github.com/users/sascha-coenen/orgs","repos_url":"https://api.github.com/users/sascha-coenen/repos","events_url":"https://api.github.com/users/sascha-coenen/events{/privacy}","received_events_url":"https://api.github.com/users/sascha-coenen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-05T21:31:52Z","updated_at":"2019-02-05T21:31:52Z","author_association":"NONE","body":"This motion is AWESOME AWESOME AWESOME!!!!\r\nWell done!! I cannot wait to see the two phase shuffle. This is SO much needed.\r\n\r\nI read in the comments section of related PRs about why one would need yet another data processing framework and what would be the issues with Spark/Hadoop. \r\nThis puzzles me for the following reason:\r\nI have tasked several people to find out how to combine batch processing and stream processing for Druid and although a lot of time was being sunk into the subject matter, not a SINGLE person was able to come up with a viable solution, myself included. Let it be said too, that we have been running a million dollar Druid cluster for several years now and keep trillions of records in it. \r\nSo neither are we new to Druid nor are we idiots and yet we keep scratching our heads about how to put the pieces together. \r\n\r\nIn my opinion, Druid needs native indexing support more than anything, especially in the context of finding a more wide-spread adoption and growing the community.\r\n\r\nI very much hope that more and more people can join in this effort. Most database systems come with native DML support and thus, competitor products like MPP databases such as Vertica have native support for ingesting big-data workloads. \r\nHaving a native batch indexing support in Druid would not only make Druid more competitive and easier sell, but it is strategically also an enabler for advanced setups, like putting Druid on kubernetes.  Containerizing Hadoop/Spark alone is not easy and far from being a small effort and doing it in a way that lets such a setup play nicely with Druid requires handcrafting the whole setup.\r\nMiddlemanager however can easily be containerized (although it would be even nicer if there weren't any peons I guess) which in turn is a segway to co-locating different workloads on the same hardware. Achieving this for an ecosystem that encompasses Spark/Hadoop is something that only large companies with deep pockets and a bugdet for inhouse customizations can achieve.\r\n\r\nThe second most needed feature is OLAP cubing (materialized views) which was added to Druid 0.13 as a prototype recently but currently requires a Hadoop cluster. So folks who went with a Spark-based indexing cannot use it unless they reinvent the wheel by adding support for it too.\r\nSo in this sense, it is NOT the creation of a native processing framework that is \"re-inventing the wheel\" but on the contrary, it is precisely the previously chosen approach of having external processing frameworks that deserve this label.\r\n \r\n---\r\n\r\n>> I'm going crazy because the library versions of Hadoop and Druid can't match\r\n+1\r\n\r\n---\r\n\r\n>> I'm not sure about sharing the same shuffle system by both indexing and querying now because they need different requirements.\r\n+1\r\nGreat thinking on behalf of jihoonson to propose this, but in the spirit of making babysteps it seems that one should first try to keep things easy by thinking about this in isolation. One can then make it an unrelated follow-up research task as to whether and how existing subsystems of Druid could be unified\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/460811816/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":1},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/460814774","html_url":"https://github.com/apache/druid/pull/6865#issuecomment-460814774","issue_url":"https://api.github.com/repos/apache/druid/issues/6865","id":460814774,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MDgxNDc3NA==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-05T21:41:07Z","updated_at":"2019-02-05T21:41:07Z","author_association":"CONTRIBUTOR","body":"Is it better to return a useless sketch than to throw an error? I would think the error is better if we know the results are going to be garbage. Maybe improving the error message is what's called for.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/460814774/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/460818215","html_url":"https://github.com/apache/druid/pull/6794#issuecomment-460818215","issue_url":"https://api.github.com/repos/apache/druid/issues/6794","id":460818215,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MDgxODIxNQ==","user":{"login":"sascha-coenen","id":1635350,"node_id":"MDQ6VXNlcjE2MzUzNTA=","avatar_url":"https://avatars.githubusercontent.com/u/1635350?v=4","gravatar_id":"","url":"https://api.github.com/users/sascha-coenen","html_url":"https://github.com/sascha-coenen","followers_url":"https://api.github.com/users/sascha-coenen/followers","following_url":"https://api.github.com/users/sascha-coenen/following{/other_user}","gists_url":"https://api.github.com/users/sascha-coenen/gists{/gist_id}","starred_url":"https://api.github.com/users/sascha-coenen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sascha-coenen/subscriptions","organizations_url":"https://api.github.com/users/sascha-coenen/orgs","repos_url":"https://api.github.com/users/sascha-coenen/repos","events_url":"https://api.github.com/users/sascha-coenen/events{/privacy}","received_events_url":"https://api.github.com/users/sascha-coenen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-05T21:52:15Z","updated_at":"2019-02-05T21:52:15Z","author_association":"NONE","body":"Great PR!!\r\n\r\nI do not want to go off topic, but with regard to: \r\n>> Benchmarks on the code in this PR indicate we could get a 1.3-3x speedup\r\n\r\n..., I meant to mention that there is an Israeli startup which is specialising in FPGA accelerations. \r\nWith AWS F1 instance types being a thing now, FPGA might finally be getting some more traction. This startup has customised Druid's Query Engine to delegate the aggregation to FPGA hardware and they claim a 35x speedup for mostly-in-memory use-cases.\r\n\r\nThey might be an interesting technology partner in validating the design of a vectorisation layer and providing an FPGA based extension for it. I'm not affiliated with them in any way, so this is not me advertising or pitching them. I just found it interesting what they are doing and was curious as to whether you guys have heard of them and whether this sort of stuff would be a fit for what you are trying to achieve with this PR.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/460818215/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/460822800","html_url":"https://github.com/apache/druid/pull/6690#issuecomment-460822800","issue_url":"https://api.github.com/repos/apache/druid/issues/6690","id":460822800,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MDgyMjgwMA==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-05T22:06:30Z","updated_at":"2019-02-05T22:06:30Z","author_association":"CONTRIBUTOR","body":"Or how about using `.remove()` on the iterator? I think if these maps are not actually going to be used from multiple threads, then we don't need to make them ConcurrentMaps.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/460822800/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/460823867","html_url":"https://github.com/apache/druid/issues/5812#issuecomment-460823867","issue_url":"https://api.github.com/repos/apache/druid/issues/5812","id":460823867,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MDgyMzg2Nw==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-05T22:10:14Z","updated_at":"2019-02-05T22:10:14Z","author_association":"CONTRIBUTOR","body":"Does this need to be a release blocker for 0.14.0?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/460823867/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/460825347","html_url":"https://github.com/apache/druid/issues/6998#issuecomment-460825347","issue_url":"https://api.github.com/repos/apache/druid/issues/6998","id":460825347,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MDgyNTM0Nw==","user":{"login":"yurmix","id":1529282,"node_id":"MDQ6VXNlcjE1MjkyODI=","avatar_url":"https://avatars.githubusercontent.com/u/1529282?v=4","gravatar_id":"","url":"https://api.github.com/users/yurmix","html_url":"https://github.com/yurmix","followers_url":"https://api.github.com/users/yurmix/followers","following_url":"https://api.github.com/users/yurmix/following{/other_user}","gists_url":"https://api.github.com/users/yurmix/gists{/gist_id}","starred_url":"https://api.github.com/users/yurmix/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yurmix/subscriptions","organizations_url":"https://api.github.com/users/yurmix/orgs","repos_url":"https://api.github.com/users/yurmix/repos","events_url":"https://api.github.com/users/yurmix/events{/privacy}","received_events_url":"https://api.github.com/users/yurmix/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-05T22:15:13Z","updated_at":"2019-02-05T22:15:13Z","author_association":"CONTRIBUTOR","body":"@jon-wei can this go into 0.14.0? If you're running the doc release, perhaps you can take a look meanwhile doing that?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/460825347/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/460825999","html_url":"https://github.com/apache/druid/issues/6998#issuecomment-460825999","issue_url":"https://api.github.com/repos/apache/druid/issues/6998","id":460825999,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MDgyNTk5OQ==","user":{"login":"yurmix","id":1529282,"node_id":"MDQ6VXNlcjE1MjkyODI=","avatar_url":"https://avatars.githubusercontent.com/u/1529282?v=4","gravatar_id":"","url":"https://api.github.com/users/yurmix","html_url":"https://github.com/yurmix","followers_url":"https://api.github.com/users/yurmix/followers","following_url":"https://api.github.com/users/yurmix/following{/other_user}","gists_url":"https://api.github.com/users/yurmix/gists{/gist_id}","starred_url":"https://api.github.com/users/yurmix/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yurmix/subscriptions","organizations_url":"https://api.github.com/users/yurmix/orgs","repos_url":"https://api.github.com/users/yurmix/repos","events_url":"https://api.github.com/users/yurmix/events{/privacy}","received_events_url":"https://api.github.com/users/yurmix/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-05T22:17:19Z","updated_at":"2019-02-05T22:17:19Z","author_association":"CONTRIBUTOR","body":"Actually, don't worry, I'll try testing it on my own environment first.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/460825999/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/460830659","html_url":"https://github.com/apache/druid/pull/7000#issuecomment-460830659","issue_url":"https://api.github.com/repos/apache/druid/issues/7000","id":460830659,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MDgzMDY1OQ==","user":{"login":"anantmf","id":15381010,"node_id":"MDQ6VXNlcjE1MzgxMDEw","avatar_url":"https://avatars.githubusercontent.com/u/15381010?v=4","gravatar_id":"","url":"https://api.github.com/users/anantmf","html_url":"https://github.com/anantmf","followers_url":"https://api.github.com/users/anantmf/followers","following_url":"https://api.github.com/users/anantmf/following{/other_user}","gists_url":"https://api.github.com/users/anantmf/gists{/gist_id}","starred_url":"https://api.github.com/users/anantmf/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/anantmf/subscriptions","organizations_url":"https://api.github.com/users/anantmf/orgs","repos_url":"https://api.github.com/users/anantmf/repos","events_url":"https://api.github.com/users/anantmf/events{/privacy}","received_events_url":"https://api.github.com/users/anantmf/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-05T22:32:45Z","updated_at":"2019-02-05T22:32:45Z","author_association":"CONTRIBUTOR","body":"@jihoonson I don't have write access to this repository so I can't merge this PR, can you please merge it? or let me know if there is any other process for it?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/460830659/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/460831344","html_url":"https://github.com/apache/druid/pull/6581#issuecomment-460831344","issue_url":"https://api.github.com/repos/apache/druid/issues/6581","id":460831344,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MDgzMTM0NA==","user":{"login":"edgan8","id":2577963,"node_id":"MDQ6VXNlcjI1Nzc5NjM=","avatar_url":"https://avatars.githubusercontent.com/u/2577963?v=4","gravatar_id":"","url":"https://api.github.com/users/edgan8","html_url":"https://github.com/edgan8","followers_url":"https://api.github.com/users/edgan8/followers","following_url":"https://api.github.com/users/edgan8/following{/other_user}","gists_url":"https://api.github.com/users/edgan8/gists{/gist_id}","starred_url":"https://api.github.com/users/edgan8/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/edgan8/subscriptions","organizations_url":"https://api.github.com/users/edgan8/orgs","repos_url":"https://api.github.com/users/edgan8/repos","events_url":"https://api.github.com/users/edgan8/events{/privacy}","received_events_url":"https://api.github.com/users/edgan8/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-05T22:35:06Z","updated_at":"2019-02-05T22:35:06Z","author_association":"CONTRIBUTOR","body":"@leerho thank you for the careful analysis. I believe the larger than expected errors are due to the huge spike of zero values. I can update the moments sketch to handle zero values separately since they are so common and see how they affect accuracy, though that should not affect any of the druid integration code.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/460831344/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/460831925","html_url":"https://github.com/apache/druid/pull/7000#issuecomment-460831925","issue_url":"https://api.github.com/repos/apache/druid/issues/7000","id":460831925,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MDgzMTkyNQ==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-05T22:37:08Z","updated_at":"2019-02-05T22:37:08Z","author_association":"CONTRIBUTOR","body":"@anantmf we usually keep a PR open for a while even after it gets a +1 to give some time for other people to take a look it too. I'll merge this PR maybe tonight unless anyone has another opinion.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/460831925/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/460838372","html_url":"https://github.com/apache/druid/issues/7001#issuecomment-460838372","issue_url":"https://api.github.com/repos/apache/druid/issues/7001","id":460838372,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MDgzODM3Mg==","user":{"login":"kad3nce","id":556,"node_id":"MDQ6VXNlcjU1Ng==","avatar_url":"https://avatars.githubusercontent.com/u/556?v=4","gravatar_id":"","url":"https://api.github.com/users/kad3nce","html_url":"https://github.com/kad3nce","followers_url":"https://api.github.com/users/kad3nce/followers","following_url":"https://api.github.com/users/kad3nce/following{/other_user}","gists_url":"https://api.github.com/users/kad3nce/gists{/gist_id}","starred_url":"https://api.github.com/users/kad3nce/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kad3nce/subscriptions","organizations_url":"https://api.github.com/users/kad3nce/orgs","repos_url":"https://api.github.com/users/kad3nce/repos","events_url":"https://api.github.com/users/kad3nce/events{/privacy}","received_events_url":"https://api.github.com/users/kad3nce/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-05T22:59:53Z","updated_at":"2019-02-05T23:03:23Z","author_association":"NONE","body":"Thanks for the replies! I did the following:\r\n\r\n- [x] Configure the Divolte hdfs sink and point it to the local file system\r\n- [x] Change the `parseSpec.timestampSpec.format` to `auto`\r\n- [x] Verify that the Kafka sink on Divolte is running `naked`\r\n- [x] Re-initialize a fresh instance of the stack to clear out stale Kafka messages\r\n\r\nWhile studying Divolte's logs after adding the new HDFS sink, I was able to deduce that Divolte wasn't picking up my config changes. It turns out I had made a typo in the docker-compose file when specifying the path to my custom Divolte config, so Divolte was silently falling back to its default config (including its default Avro schema). Thus the errors and schema mismatches (good catch, @asnare).\r\n\r\nI am now processing messages from Divolte successfully. Yay! Thanks again for your time and guidance—both much appreciated!","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/460838372/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/460845344","html_url":"https://github.com/apache/druid/issues/6909#issuecomment-460845344","issue_url":"https://api.github.com/repos/apache/druid/issues/6909","id":460845344,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MDg0NTM0NA==","user":{"login":"hpandeycodeit","id":21266105,"node_id":"MDQ6VXNlcjIxMjY2MTA1","avatar_url":"https://avatars.githubusercontent.com/u/21266105?v=4","gravatar_id":"","url":"https://api.github.com/users/hpandeycodeit","html_url":"https://github.com/hpandeycodeit","followers_url":"https://api.github.com/users/hpandeycodeit/followers","following_url":"https://api.github.com/users/hpandeycodeit/following{/other_user}","gists_url":"https://api.github.com/users/hpandeycodeit/gists{/gist_id}","starred_url":"https://api.github.com/users/hpandeycodeit/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hpandeycodeit/subscriptions","organizations_url":"https://api.github.com/users/hpandeycodeit/orgs","repos_url":"https://api.github.com/users/hpandeycodeit/repos","events_url":"https://api.github.com/users/hpandeycodeit/events{/privacy}","received_events_url":"https://api.github.com/users/hpandeycodeit/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-05T23:27:04Z","updated_at":"2019-02-05T23:27:04Z","author_association":"MEMBER","body":"@leventov I will work on this one. ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/460845344/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/460848795","html_url":"https://github.com/apache/druid/pull/6698#issuecomment-460848795","issue_url":"https://api.github.com/repos/apache/druid/issues/6698","id":460848795,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MDg0ODc5NQ==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-05T23:41:14Z","updated_at":"2019-02-05T23:41:14Z","author_association":"CONTRIBUTOR","body":"@kaijianding would you please check my last comment?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/460848795/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/460848944","html_url":"https://github.com/apache/druid/pull/6888#issuecomment-460848944","issue_url":"https://api.github.com/repos/apache/druid/issues/6888","id":460848944,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MDg0ODk0NA==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-05T23:41:56Z","updated_at":"2019-02-05T23:41:56Z","author_association":"CONTRIBUTOR","body":"@surekhasaharan would you please fix the conflicts?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/460848944/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/460854742","html_url":"https://github.com/apache/druid/pull/6847#issuecomment-460854742","issue_url":"https://api.github.com/repos/apache/druid/issues/6847","id":460854742,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MDg1NDc0Mg==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-06T00:08:12Z","updated_at":"2019-02-06T00:08:12Z","author_association":"CONTRIBUTOR","body":"Thanks @QiuMM for raising this PR. I think the purpose of this PR makes sense and it would work as expected. \r\n\r\nHowever, the codes for waiting for serverView to be initialized are duplicated in `HttpServerInventoryView` and `CuratorInventoryManager`, and I think we can remove it. `CoordinatorServerView` has a baseView internally which can be either `HttpServerInventoryView` or `CuratorServerInventoryView`. Please note that `CuratorServerInventoryView` depends on `CuratorInventoryManager`. As a result, I think we can simply move the codes to wait for initialization from `HttpServerInventoryView` to `CoordinatorServerView`, so that the coordinator would wait for initialization regardless of the type of serverInventoryView. I think this is the aesthetical thing @gianm mentioned.\r\n\r\nWhat do you think?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/460854742/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/460859550","html_url":"https://github.com/apache/druid/issues/6989#issuecomment-460859550","issue_url":"https://api.github.com/repos/apache/druid/issues/6989","id":460859550,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MDg1OTU1MA==","user":{"login":"glasser","id":16724,"node_id":"MDQ6VXNlcjE2NzI0","avatar_url":"https://avatars.githubusercontent.com/u/16724?v=4","gravatar_id":"","url":"https://api.github.com/users/glasser","html_url":"https://github.com/glasser","followers_url":"https://api.github.com/users/glasser/followers","following_url":"https://api.github.com/users/glasser/following{/other_user}","gists_url":"https://api.github.com/users/glasser/gists{/gist_id}","starred_url":"https://api.github.com/users/glasser/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/glasser/subscriptions","organizations_url":"https://api.github.com/users/glasser/orgs","repos_url":"https://api.github.com/users/glasser/repos","events_url":"https://api.github.com/users/glasser/events{/privacy}","received_events_url":"https://api.github.com/users/glasser/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-06T00:31:31Z","updated_at":"2019-02-06T01:27:52Z","author_association":"CONTRIBUTOR","body":"What I was missing here is that native batch parallel ingestion effectively acts as if appendToExisting is true unless you specify explicit intervals in the GranularitySpec.\r\n\r\nThis seems to be different from both Hadoop batch ingestion and the Local Index Task (including `index_parallel` with a non-splittable FirehoseFactory) — all of these (if I understand correctly) will run an additional phase to calculate the intervals if they are not provided.\r\n\r\nThis confused me. I'd like to help fix it!\r\n\r\nI think we should consider the current behavior a bug and the top-level parallel index task should error if all of the following are true):\r\n- Running`index_parallel`\r\n- `FirehoseFactory.isSplittable()` (or possibly leave this one out)\r\n- `appendToExisting == false`\r\n- granularitySpec does not specify intervals\r\n\r\nWhile this would be a backwards-incompatible change in 0.14, native batch ingestion is still a very new feature and this behavior is very surprising — and there's a trivial workaround of setting appendToExisting to true if you like the current behavior.\r\n\r\nIf that's not the right change, we could fix the docs instead. I'd update the doc of appendToExisting in native_tasks.md to mention that it is effectively true if intervals aren't specified, and the docs of `intervals` in ingestion_spec should mention that native parallel tasks care about them more.\r\n\r\n(I suppose one could also make parallel indexing do two scans in this case, but in my case I certainly would have been happier being asked to add one line to my spec rather than have my experience take twice as long, and it's more complex.)\r\n\r\nI'm happy to do implement either the new error or the docs update based on what is best.\r\nThoughts (@jihoonson ?)","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/460859550/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/460860422","html_url":"https://github.com/apache/druid/pull/6581#issuecomment-460860422","issue_url":"https://api.github.com/repos/apache/druid/issues/6581","id":460860422,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MDg2MDQyMg==","user":{"login":"leerho","id":12941506,"node_id":"MDQ6VXNlcjEyOTQxNTA2","avatar_url":"https://avatars.githubusercontent.com/u/12941506?v=4","gravatar_id":"","url":"https://api.github.com/users/leerho","html_url":"https://github.com/leerho","followers_url":"https://api.github.com/users/leerho/followers","following_url":"https://api.github.com/users/leerho/following{/other_user}","gists_url":"https://api.github.com/users/leerho/gists{/gist_id}","starred_url":"https://api.github.com/users/leerho/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leerho/subscriptions","organizations_url":"https://api.github.com/users/leerho/orgs","repos_url":"https://api.github.com/users/leerho/repos","events_url":"https://api.github.com/users/leerho/events{/privacy}","received_events_url":"https://api.github.com/users/leerho/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-06T00:36:15Z","updated_at":"2019-02-06T00:36:15Z","author_association":"CONTRIBUTOR","body":"@edgan8 Thank you for your reply.  \r\n\r\n> ...larger than expected errors...\r\n\r\n1. What is the \"expected error\"?  The fact is that the Moments Sketch is an empirical algorithm and you cannot state *a priori* what the expected error will be on any subsequent query.  \r\n\r\n2. Providing a patch to fix the zeros spike is but a band-aid for this particular data set.  It does not provide any guarantees for better error on other data sets.  As I stated in the study, \"real data can be quite ugly\", and it is not hard to find real data sets with lots of strange bumps, spikes and values that do not fit the theoretically smooth and well-behaved distributions that the Moments Sketch relies on.  \r\n\r\n3. If a user does not bother to perform an exact analysis or compare the Moment Sketch results with a sketch that provides, *a priori*, useful (e.g. *L_inf*) error bounds, he/she would never know that there was a severe error problem!  This is my biggest concern.  Even the Druid engineers do not know what kinds of data that their customers will be asking Druid to analyze. \r\n\r\n4. There is no argument that the Moments Sketch is fast and small in size, but what good is that if it can produce large errors as a result?  Worse, the end user has no way to know, after the fact, what the error actually is!\r\n\r\n5. Hopefully, we can learn from Druid's experience with the Approximate Histogram and the Druid HLL sketch.  The fact that early on Druid incorporated those two algorithms into their core, users assumed that they must be good and that they were sufficiently tested and studied.  After all, the Druid engineers are a bunch of really smart people! \r\n\r\nUnfortunately, Druid end users did not bother to find and read the AH paper where the authors admit that the AH algorithm has serious limitations.  And they likely didn't have the necessary skills to do a deep dive into the Druid HLL sketch algorithm to uncover its problems.  Now, unfortunately, both groups of users are stuck with lots of historical data of dubious quality with no means of recovery.\r\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/460860422/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/460863681","html_url":"https://github.com/apache/druid/pull/6581#issuecomment-460863681","issue_url":"https://api.github.com/repos/apache/druid/issues/6581","id":460863681,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MDg2MzY4MQ==","user":{"login":"AlexanderSaydakov","id":13126686,"node_id":"MDQ6VXNlcjEzMTI2Njg2","avatar_url":"https://avatars.githubusercontent.com/u/13126686?v=4","gravatar_id":"","url":"https://api.github.com/users/AlexanderSaydakov","html_url":"https://github.com/AlexanderSaydakov","followers_url":"https://api.github.com/users/AlexanderSaydakov/followers","following_url":"https://api.github.com/users/AlexanderSaydakov/following{/other_user}","gists_url":"https://api.github.com/users/AlexanderSaydakov/gists{/gist_id}","starred_url":"https://api.github.com/users/AlexanderSaydakov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/AlexanderSaydakov/subscriptions","organizations_url":"https://api.github.com/users/AlexanderSaydakov/orgs","repos_url":"https://api.github.com/users/AlexanderSaydakov/repos","events_url":"https://api.github.com/users/AlexanderSaydakov/events{/privacy}","received_events_url":"https://api.github.com/users/AlexanderSaydakov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-06T00:53:16Z","updated_at":"2019-02-06T05:31:46Z","author_association":"CONTRIBUTOR","body":"Currently the Moments Sketch can estimate the quantile value for a given a rank.\r\nWhat about the inverse query: estimate the rank of a given value? What about the probability mass function (histogram)?\r\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/460863681/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/460870802","html_url":"https://github.com/apache/druid/issues/6989#issuecomment-460870802","issue_url":"https://api.github.com/repos/apache/druid/issues/6989","id":460870802,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MDg3MDgwMg==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-06T01:32:08Z","updated_at":"2019-02-06T01:32:08Z","author_association":"CONTRIBUTOR","body":"@glasser thank you for finding this! I agree with you that the behavior of indexParallelTask is supposed to be same with (or at least similar to) indexTask or hadoopIndexTask. So, I think this is a bug. indexParallelTask is expected to overwrite existing segments unless `appendToExisting` is explicitly set to true. \r\n\r\nI think it's still possible to avoid another scan even if `intervals` are not given. That is, we can find intervals and generate segments at the same time. The algorithm would be:\r\n\r\n1. Finds a bucketed interval from an input row. This can be done by `interval = granularitySpec.getSegmentGranularity().bucket(inputRow.getTimestamp());`\r\n2. Checks the task has a valid lock for that interval. If it doesn't have a lock yet, it should requests a lock. If it fails to get a lock or the lock has already revoked, the task fails.\r\n3. Create a segmentId with the version of the lock.\r\n\r\nSo, this would be mostly about allocating segmentIds and getting task locks. I think it would be better to modify `ParallelIndexSupervisorTask.allocateNewSegment()` rather than modifying `SegmentAllocateAction` because `SegmentAllocateAction` is designed for appending and already complex enough. \r\n\r\nIn summary, we may want to change [this block](https://github.com/apache/incubator-druid/blob/master/indexing-service/src/main/java/org/apache/druid/indexing/common/task/batch/parallel/ParallelIndexSubTask.java#L240-L262) to call `taskClient.allocateSegment()` if `explicitIntervals` = false. Also [ParallelIndexSupervisorTask.allocateNewSegment()](https://github.com/apache/incubator-druid/blob/master/indexing-service/src/main/java/org/apache/druid/indexing/common/task/batch/parallel/ParallelIndexSupervisorTask.java#L359-L391) needs to be modified to implement the above algorithm.\r\n\r\nWhat do you think?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/460870802/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/460871761","html_url":"https://github.com/apache/druid/pull/6988#issuecomment-460871761","issue_url":"https://api.github.com/repos/apache/druid/issues/6988","id":460871761,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MDg3MTc2MQ==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-06T01:37:31Z","updated_at":"2019-02-06T01:37:31Z","author_association":"CONTRIBUTOR","body":"Hi @pzhdfy, have you had a chance to test `druid.segmentCache.numBootstrapThreads` option (http://druid.io/docs/latest/configuration/index.html#storing-segments)? It's to set # of segments to load concurrently from local storage at startup. I wonder how different its effect is from the lazy loading of column metadata. ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/460871761/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/460871946","html_url":"https://github.com/apache/druid/pull/6988#issuecomment-460871946","issue_url":"https://api.github.com/repos/apache/druid/issues/6988","id":460871946,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MDg3MTk0Ng==","user":{"login":"clintropolis","id":1577461,"node_id":"MDQ6VXNlcjE1Nzc0NjE=","avatar_url":"https://avatars.githubusercontent.com/u/1577461?v=4","gravatar_id":"","url":"https://api.github.com/users/clintropolis","html_url":"https://github.com/clintropolis","followers_url":"https://api.github.com/users/clintropolis/followers","following_url":"https://api.github.com/users/clintropolis/following{/other_user}","gists_url":"https://api.github.com/users/clintropolis/gists{/gist_id}","starred_url":"https://api.github.com/users/clintropolis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintropolis/subscriptions","organizations_url":"https://api.github.com/users/clintropolis/orgs","repos_url":"https://api.github.com/users/clintropolis/repos","events_url":"https://api.github.com/users/clintropolis/events{/privacy}","received_events_url":"https://api.github.com/users/clintropolis/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-06T01:38:36Z","updated_at":"2019-02-06T01:38:36Z","author_association":"MEMBER","body":"Interesting idea, I too have felt the pain of multi-day rollouts for tiers of densely loaded historical servers.\r\n\r\nI've only scanned changes so far, I'll try to do a full review later. In the mean time, if possible could you run query benchmarks before this patch and after this patch with `lazyLoadOnStart = false`, as a sanity check to make sure that there are not any odd performance effects of introducing the memoized suppliers? I don't really _expect_ any noticeable effect, but it would make buy in to this change easier. (No worries if you don't have a chance to get to it, i'll try to do this myself once I get around to full review).\r\n\r\nI would also be interested in the performance cost for queries that _do_ have to eat the deserialization when `lazyLoadOnStart = true`, and whether it opens up scenarios where the memoizing supplier becomes a sort of choke point for the processing pool if the cost is high.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/460871946/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/460872112","html_url":"https://github.com/apache/druid/pull/6988#issuecomment-460872112","issue_url":"https://api.github.com/repos/apache/druid/issues/6988","id":460872112,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MDg3MjExMg==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-06T01:39:37Z","updated_at":"2019-02-06T01:39:37Z","author_association":"CONTRIBUTOR","body":"IMO a lazy loading option is nice for very dense historical nodes. So I am supportive of this idea. It should be off by default, though, since it defers work from startup to query time, and for a medium/low-density historical node you'd prefer to do that work at startup to keep queries fast.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/460872112/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/460872342","html_url":"https://github.com/apache/druid/issues/6998#issuecomment-460872342","issue_url":"https://api.github.com/repos/apache/druid/issues/6998","id":460872342,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MDg3MjM0Mg==","user":{"login":"jon-wei","id":8729063,"node_id":"MDQ6VXNlcjg3MjkwNjM=","avatar_url":"https://avatars.githubusercontent.com/u/8729063?v=4","gravatar_id":"","url":"https://api.github.com/users/jon-wei","html_url":"https://github.com/jon-wei","followers_url":"https://api.github.com/users/jon-wei/followers","following_url":"https://api.github.com/users/jon-wei/following{/other_user}","gists_url":"https://api.github.com/users/jon-wei/gists{/gist_id}","starred_url":"https://api.github.com/users/jon-wei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jon-wei/subscriptions","organizations_url":"https://api.github.com/users/jon-wei/orgs","repos_url":"https://api.github.com/users/jon-wei/repos","events_url":"https://api.github.com/users/jon-wei/events{/privacy}","received_events_url":"https://api.github.com/users/jon-wei/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-06T01:41:00Z","updated_at":"2019-02-06T01:41:00Z","author_association":"CONTRIBUTOR","body":"> The bug might lay in not removing deleted pages.\r\n\r\n@yurmix Added this to 0.14.0, I think that's probably the cause, thanks!\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/460872342/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/460875058","html_url":"https://github.com/apache/druid/pull/6883#issuecomment-460875058","issue_url":"https://api.github.com/repos/apache/druid/issues/6883","id":460875058,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MDg3NTA1OA==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-06T01:56:30Z","updated_at":"2019-02-06T01:56:30Z","author_association":"CONTRIBUTOR","body":"@clintropolis thank you for the review. I added the `Design Review` label since it's an incompatible change now.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/460875058/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/460876608","html_url":"https://github.com/apache/druid/issues/6989#issuecomment-460876608","issue_url":"https://api.github.com/repos/apache/druid/issues/6989","id":460876608,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MDg3NjYwOA==","user":{"login":"glasser","id":16724,"node_id":"MDQ6VXNlcjE2NzI0","avatar_url":"https://avatars.githubusercontent.com/u/16724?v=4","gravatar_id":"","url":"https://api.github.com/users/glasser","html_url":"https://github.com/glasser","followers_url":"https://api.github.com/users/glasser/followers","following_url":"https://api.github.com/users/glasser/following{/other_user}","gists_url":"https://api.github.com/users/glasser/gists{/gist_id}","starred_url":"https://api.github.com/users/glasser/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/glasser/subscriptions","organizations_url":"https://api.github.com/users/glasser/orgs","repos_url":"https://api.github.com/users/glasser/repos","events_url":"https://api.github.com/users/glasser/events{/privacy}","received_events_url":"https://api.github.com/users/glasser/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-06T02:05:32Z","updated_at":"2019-02-06T02:05:32Z","author_association":"CONTRIBUTOR","body":"I think advising about changing locking semantics is beyond my understanding of Druid (which expanded immensely today by researching this issue).  What you describe seems reasonable, but I don't feel like I can confidently say that changing from a static set of locks determined at the beginning of the task to a dynamic set of locks is safe.\r\n\r\nThat said, I could try to implement your suggestion even if I can't evaluate its correctness!","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/460876608/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/460878071","html_url":"https://github.com/apache/druid/pull/6865#issuecomment-460878071","issue_url":"https://api.github.com/repos/apache/druid/issues/6865","id":460878071,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MDg3ODA3MQ==","user":{"login":"leerho","id":12941506,"node_id":"MDQ6VXNlcjEyOTQxNTA2","avatar_url":"https://avatars.githubusercontent.com/u/12941506?v=4","gravatar_id":"","url":"https://api.github.com/users/leerho","html_url":"https://github.com/leerho","followers_url":"https://api.github.com/users/leerho/followers","following_url":"https://api.github.com/users/leerho/following{/other_user}","gists_url":"https://api.github.com/users/leerho/gists{/gist_id}","starred_url":"https://api.github.com/users/leerho/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leerho/subscriptions","organizations_url":"https://api.github.com/users/leerho/orgs","repos_url":"https://api.github.com/users/leerho/repos","events_url":"https://api.github.com/users/leerho/events{/privacy}","received_events_url":"https://api.github.com/users/leerho/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-06T02:14:07Z","updated_at":"2019-02-06T02:14:07Z","author_association":"CONTRIBUTOR","body":"I agree with @gianm.  \r\n\r\n> We had an upstream data producer who was sampling data. The sampling algorithm seemed to be based on Murmur3_128, or at least a related algorithm where the hash collisions were similar. When doing a HLL sketch of the dimension values, we were getting really weird results where all the HLL buckets would end up with values that were not good sketches of the input data (every bucket nibble with a `1` for example).\r\n\r\nYikes!\r\n\r\nI'm not sure I understand, but I hope that you are not sampling data *prior* to feeding it to a sketch. This will produce potentially horrible errors no matter what sketch you use.  It also doesn't matter what hash function was used in the sampling either.  Sketches are *streaming algorithms* and rely on being fed every item of the stream.  \r\n\r\nNonetheless, these weird results with 1's in every nibble is a catastrophic failure of the sketch, I don't care what values were fed to it.  There must be something very unusual about your use of the sketch.  Some more detail about how you are using and feeding the sketch would be helpful.\r\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/460878071/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/460878768","html_url":"https://github.com/apache/druid/issues/6989#issuecomment-460878768","issue_url":"https://api.github.com/repos/apache/druid/issues/6989","id":460878768,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MDg3ODc2OA==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-06T02:18:20Z","updated_at":"2019-02-06T02:18:20Z","author_association":"CONTRIBUTOR","body":"Thank you! Looking forward to your PR.\r\n\r\nI think it's safe to get locks dynamically. The indexTask already [gets locks one by one per interval](https://github.com/apache/incubator-druid/blob/master/indexing-service/src/main/java/org/apache/druid/indexing/common/task/Tasks.java#L55-L61) though it happens in a tight loop.\r\nAlso, if there's something wrong in task locks, publishing segments must fail which makes tasks failed. Check out `SegmentTransactionalInsertAction` which is called in `SinglePhaseParallelIndexTaskRunner.publish()`.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/460878768/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/460918711","html_url":"https://github.com/apache/druid/issues/6858#issuecomment-460918711","issue_url":"https://api.github.com/repos/apache/druid/issues/6858","id":460918711,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MDkxODcxMQ==","user":{"login":"hpandeycodeit","id":21266105,"node_id":"MDQ6VXNlcjIxMjY2MTA1","avatar_url":"https://avatars.githubusercontent.com/u/21266105?v=4","gravatar_id":"","url":"https://api.github.com/users/hpandeycodeit","html_url":"https://github.com/hpandeycodeit","followers_url":"https://api.github.com/users/hpandeycodeit/followers","following_url":"https://api.github.com/users/hpandeycodeit/following{/other_user}","gists_url":"https://api.github.com/users/hpandeycodeit/gists{/gist_id}","starred_url":"https://api.github.com/users/hpandeycodeit/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hpandeycodeit/subscriptions","organizations_url":"https://api.github.com/users/hpandeycodeit/orgs","repos_url":"https://api.github.com/users/hpandeycodeit/repos","events_url":"https://api.github.com/users/hpandeycodeit/events{/privacy}","received_events_url":"https://api.github.com/users/hpandeycodeit/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-06T06:50:10Z","updated_at":"2019-02-06T06:50:10Z","author_association":"MEMBER","body":"@leventov getBaseMergeAggregatorFactory() will be an abstract method so it needs to be implemented in all the classes with an empty definition?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/460918711/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/460924068","html_url":"https://github.com/apache/druid/pull/6365#issuecomment-460924068","issue_url":"https://api.github.com/repos/apache/druid/issues/6365","id":460924068,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MDkyNDA2OA==","user":{"login":"clintropolis","id":1577461,"node_id":"MDQ6VXNlcjE1Nzc0NjE=","avatar_url":"https://avatars.githubusercontent.com/u/1577461?v=4","gravatar_id":"","url":"https://api.github.com/users/clintropolis","html_url":"https://github.com/clintropolis","followers_url":"https://api.github.com/users/clintropolis/followers","following_url":"https://api.github.com/users/clintropolis/following{/other_user}","gists_url":"https://api.github.com/users/clintropolis/gists{/gist_id}","starred_url":"https://api.github.com/users/clintropolis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintropolis/subscriptions","organizations_url":"https://api.github.com/users/clintropolis/orgs","repos_url":"https://api.github.com/users/clintropolis/repos","events_url":"https://api.github.com/users/clintropolis/events{/privacy}","received_events_url":"https://api.github.com/users/clintropolis/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-06T07:19:02Z","updated_at":"2019-02-06T07:19:02Z","author_association":"MEMBER","body":"Very sorry for the delayed review, thanks for your patience!","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/460924068/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/460926373","html_url":"https://github.com/apache/druid/pull/6813#issuecomment-460926373","issue_url":"https://api.github.com/repos/apache/druid/issues/6813","id":460926373,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MDkyNjM3Mw==","user":{"login":"clintropolis","id":1577461,"node_id":"MDQ6VXNlcjE1Nzc0NjE=","avatar_url":"https://avatars.githubusercontent.com/u/1577461?v=4","gravatar_id":"","url":"https://api.github.com/users/clintropolis","html_url":"https://github.com/clintropolis","followers_url":"https://api.github.com/users/clintropolis/followers","following_url":"https://api.github.com/users/clintropolis/following{/other_user}","gists_url":"https://api.github.com/users/clintropolis/gists{/gist_id}","starred_url":"https://api.github.com/users/clintropolis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintropolis/subscriptions","organizations_url":"https://api.github.com/users/clintropolis/orgs","repos_url":"https://api.github.com/users/clintropolis/repos","events_url":"https://api.github.com/users/clintropolis/events{/privacy}","received_events_url":"https://api.github.com/users/clintropolis/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-06T07:30:23Z","updated_at":"2019-02-06T07:30:23Z","author_association":"MEMBER","body":"Hi @scrawfor, any chance you could fix up the formatting issues? \r\n\r\nAlso, have you tested that this extension actually works as expected since this PR doesn't add any tests? I'm not even sure what sort of tests _would_ be appropriate if added, and I don't see any tests for the `MySQLFirehoseDatabaseConnector` either so I'm not certain if it's fair to expect them as part of this PR, but it would be nice to at least hear rumor of it functioning as intended.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/460926373/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/460928718","html_url":"https://github.com/apache/druid/pull/6365#issuecomment-460928718","issue_url":"https://api.github.com/repos/apache/druid/issues/6365","id":460928718,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MDkyODcxOA==","user":{"login":"clintropolis","id":1577461,"node_id":"MDQ6VXNlcjE1Nzc0NjE=","avatar_url":"https://avatars.githubusercontent.com/u/1577461?v=4","gravatar_id":"","url":"https://api.github.com/users/clintropolis","html_url":"https://github.com/clintropolis","followers_url":"https://api.github.com/users/clintropolis/followers","following_url":"https://api.github.com/users/clintropolis/following{/other_user}","gists_url":"https://api.github.com/users/clintropolis/gists{/gist_id}","starred_url":"https://api.github.com/users/clintropolis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintropolis/subscriptions","organizations_url":"https://api.github.com/users/clintropolis/orgs","repos_url":"https://api.github.com/users/clintropolis/repos","events_url":"https://api.github.com/users/clintropolis/events{/privacy}","received_events_url":"https://api.github.com/users/clintropolis/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-06T07:42:05Z","updated_at":"2019-02-06T07:42:05Z","author_association":"MEMBER","body":"related #6343","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/460928718/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/460938950","html_url":"https://github.com/apache/druid/issues/6858#issuecomment-460938950","issue_url":"https://api.github.com/repos/apache/druid/issues/6858","id":460938950,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MDkzODk1MA==","user":{"login":"leventov","id":609240,"node_id":"MDQ6VXNlcjYwOTI0MA==","avatar_url":"https://avatars.githubusercontent.com/u/609240?v=4","gravatar_id":"","url":"https://api.github.com/users/leventov","html_url":"https://github.com/leventov","followers_url":"https://api.github.com/users/leventov/followers","following_url":"https://api.github.com/users/leventov/following{/other_user}","gists_url":"https://api.github.com/users/leventov/gists{/gist_id}","starred_url":"https://api.github.com/users/leventov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leventov/subscriptions","organizations_url":"https://api.github.com/users/leventov/orgs","repos_url":"https://api.github.com/users/leventov/repos","events_url":"https://api.github.com/users/leventov/events{/privacy}","received_events_url":"https://api.github.com/users/leventov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-06T08:28:05Z","updated_at":"2019-02-06T08:28:05Z","author_association":"MEMBER","body":"@hpandeycodeit I think it should have default implementation `return getClass();`.  In AggregatorFactories that have subclasses, such as `ApproximateHistogramAggregatorFactory`, it should be overridden as\r\n```java\r\npublic final Class<...> getBaseMergeAggregatorFactoryClass() {\r\n  return ApproximateHistogramAggregatorFactory.class;\r\n}\r\n```","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/460938950/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/461030761","html_url":"https://github.com/apache/druid/pull/6930#issuecomment-461030761","issue_url":"https://api.github.com/repos/apache/druid/issues/6930","id":461030761,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MTAzMDc2MQ==","user":{"login":"kamaci","id":3921885,"node_id":"MDQ6VXNlcjM5MjE4ODU=","avatar_url":"https://avatars.githubusercontent.com/u/3921885?v=4","gravatar_id":"","url":"https://api.github.com/users/kamaci","html_url":"https://github.com/kamaci","followers_url":"https://api.github.com/users/kamaci/followers","following_url":"https://api.github.com/users/kamaci/following{/other_user}","gists_url":"https://api.github.com/users/kamaci/gists{/gist_id}","starred_url":"https://api.github.com/users/kamaci/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kamaci/subscriptions","organizations_url":"https://api.github.com/users/kamaci/orgs","repos_url":"https://api.github.com/users/kamaci/repos","events_url":"https://api.github.com/users/kamaci/events{/privacy}","received_events_url":"https://api.github.com/users/kamaci/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-06T13:54:22Z","updated_at":"2019-02-06T13:54:22Z","author_association":"MEMBER","body":"> > Do you mean adding a method to ApproximateHistogramPostAggregatorTest which extends BucketsPostAggregator?\r\n> \r\n> I'd suggest adding a BucketsPostAggregatorTest that has a `testSerde()` method similar to ConstantPostAggregatorTest.\r\n\r\nI've updated my PR.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/461030761/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/461066711","html_url":"https://github.com/apache/druid/pull/6972#issuecomment-461066711","issue_url":"https://api.github.com/repos/apache/druid/issues/6972","id":461066711,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MTA2NjcxMQ==","user":{"login":"mohammadjkhan","id":18354068,"node_id":"MDQ6VXNlcjE4MzU0MDY4","avatar_url":"https://avatars.githubusercontent.com/u/18354068?v=4","gravatar_id":"","url":"https://api.github.com/users/mohammadjkhan","html_url":"https://github.com/mohammadjkhan","followers_url":"https://api.github.com/users/mohammadjkhan/followers","following_url":"https://api.github.com/users/mohammadjkhan/following{/other_user}","gists_url":"https://api.github.com/users/mohammadjkhan/gists{/gist_id}","starred_url":"https://api.github.com/users/mohammadjkhan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mohammadjkhan/subscriptions","organizations_url":"https://api.github.com/users/mohammadjkhan/orgs","repos_url":"https://api.github.com/users/mohammadjkhan/repos","events_url":"https://api.github.com/users/mohammadjkhan/events{/privacy}","received_events_url":"https://api.github.com/users/mohammadjkhan/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-06T15:33:34Z","updated_at":"2019-02-06T15:33:34Z","author_association":"CONTRIBUTOR","body":"Thanks @gianm. I'm taking a look at failing integration tests right now. I see them falling for me with the same errors/issue even for the master branch that doesn't have my changes. I'm following steps described in integration-tests and executing mvn verify -P integration-tests under the integration-tests module (with docker installed on my machine).","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/461066711/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/461074099","html_url":"https://github.com/apache/druid/pull/6972#issuecomment-461074099","issue_url":"https://api.github.com/repos/apache/druid/issues/6972","id":461074099,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MTA3NDA5OQ==","user":{"login":"nishantmonu51","id":5023786,"node_id":"MDQ6VXNlcjUwMjM3ODY=","avatar_url":"https://avatars.githubusercontent.com/u/5023786?v=4","gravatar_id":"","url":"https://api.github.com/users/nishantmonu51","html_url":"https://github.com/nishantmonu51","followers_url":"https://api.github.com/users/nishantmonu51/followers","following_url":"https://api.github.com/users/nishantmonu51/following{/other_user}","gists_url":"https://api.github.com/users/nishantmonu51/gists{/gist_id}","starred_url":"https://api.github.com/users/nishantmonu51/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nishantmonu51/subscriptions","organizations_url":"https://api.github.com/users/nishantmonu51/orgs","repos_url":"https://api.github.com/users/nishantmonu51/repos","events_url":"https://api.github.com/users/nishantmonu51/events{/privacy}","received_events_url":"https://api.github.com/users/nishantmonu51/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-06T15:51:57Z","updated_at":"2019-02-06T15:52:53Z","author_association":"MEMBER","body":"A very useful feature, Thanks for the contribution @mohammadjkhan \r\nCan you add a description to the PR and also link to the proposal there. ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/461074099/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/461095091","html_url":"https://github.com/apache/druid/pull/6896#issuecomment-461095091","issue_url":"https://api.github.com/repos/apache/druid/issues/6896","id":461095091,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MTA5NTA5MQ==","user":{"login":"donbowman","id":5131923,"node_id":"MDQ6VXNlcjUxMzE5MjM=","avatar_url":"https://avatars.githubusercontent.com/u/5131923?v=4","gravatar_id":"","url":"https://api.github.com/users/donbowman","html_url":"https://github.com/donbowman","followers_url":"https://api.github.com/users/donbowman/followers","following_url":"https://api.github.com/users/donbowman/following{/other_user}","gists_url":"https://api.github.com/users/donbowman/gists{/gist_id}","starred_url":"https://api.github.com/users/donbowman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/donbowman/subscriptions","organizations_url":"https://api.github.com/users/donbowman/orgs","repos_url":"https://api.github.com/users/donbowman/repos","events_url":"https://api.github.com/users/donbowman/events{/privacy}","received_events_url":"https://api.github.com/users/donbowman/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-06T16:45:07Z","updated_at":"2019-02-06T16:45:07Z","author_association":"CONTRIBUTOR","body":"I'm not sure what else is needed of me here.\r\nNo comments received.\r\nI've made the requested changes.\r\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/461095091/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/461095949","html_url":"https://github.com/apache/druid/issues/6993#issuecomment-461095949","issue_url":"https://api.github.com/repos/apache/druid/issues/6993","id":461095949,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MTA5NTk0OQ==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-06T16:47:17Z","updated_at":"2019-02-06T16:47:17Z","author_association":"CONTRIBUTOR","body":"@peferron,\r\n\r\n> Could you perhaps elaborate a bit more about why the dynamic prioritization scheme based on `periodThreshold` makes sense, as opposed to a `durationThreshold` for example? In our case, users may issue interactive queries that have a small interval duration (e.g. one hour) but are far in the past (e.g. six months ago).\r\n\r\nI was thinking a period threshold is likely to align with how people often set up historical tiers: a 'hot' tier for the latest 30 days and a 'cold' tier for older data.\r\n\r\n@Dylan1312,\r\n\r\n> Instead of using the interval to decide how to change the priority of the query, what do you think about using the number of segments that the query operates over? Appreciate that this mechanism is to be expanded upon in future work but in the short term I think this works better because it more directly correlates with the amount of work a query has to do.\r\n\r\nWell, same :)\r\n\r\nMaybe it's worth creating more than one threshold even in the first version. It sounds like there are is demand for ways of thinking about prioritization beyond a 'hot' / 'cold' tier setup. How about starting with the three that have been suggested: period (from now), duration (of the query interval), and number of segments? In this case, if a user sets multiple, I'd suggest applying the adjustment _once_, if _any_ of the thresholds triggers. I don't see a reason that a query that only triggers one threshold to be prioritized above one that triggers two. Concretely the properties would be,\r\n\r\n- druid.broker.priority.periodThreshold\r\n- druid.broker.priority.durationThreshold\r\n- druid.broker.priority.segmentCountThreshold\r\n- druid.broker.priority.adjustment\r\n\r\nI think we'll want to add number of rows in the future, but that information is tougher to come by right now (the broker doesn't cache it unless Druid SQL is enabled, and it only lives in the SQL module). So I would still leave that one for the future.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/461095949/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/461108169","html_url":"https://github.com/apache/druid/issues/6989#issuecomment-461108169","issue_url":"https://api.github.com/repos/apache/druid/issues/6989","id":461108169,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MTEwODE2OQ==","user":{"login":"glasser","id":16724,"node_id":"MDQ6VXNlcjE2NzI0","avatar_url":"https://avatars.githubusercontent.com/u/16724?v=4","gravatar_id":"","url":"https://api.github.com/users/glasser","html_url":"https://github.com/glasser","followers_url":"https://api.github.com/users/glasser/followers","following_url":"https://api.github.com/users/glasser/following{/other_user}","gists_url":"https://api.github.com/users/glasser/gists{/gist_id}","starred_url":"https://api.github.com/users/glasser/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/glasser/subscriptions","organizations_url":"https://api.github.com/users/glasser/orgs","repos_url":"https://api.github.com/users/glasser/repos","events_url":"https://api.github.com/users/glasser/events{/privacy}","received_events_url":"https://api.github.com/users/glasser/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-06T17:19:10Z","updated_at":"2019-02-06T20:46:37Z","author_association":"CONTRIBUTOR","body":"Hi @jihoonson. A couple random questions while I work on this:\r\n\r\n1. Where should tests of this new logic end up?  And how do I actually run parts of the Druid test suite? I'm not very experienced with Maven — I know how to run `mvn install` to run all of the tests for all of Druid, but not anything more specific. (I use IntelliJ if that helps.)\r\n\r\n2. If it's OK to dynamically add locks one by one as the task runs, why do the local and hadoop indexing tasks do an initial scan to determine all the intervals at once? Do they need to do that scan for some other reason anyway?\r\n\r\n3. General batch ingestion/segment replacement question: if you're using batch ingestion (of any kind: Hadoop, native, local) with granularitySpec interval specified and appendToExisting false, to re-ingest to an interval that already contains data, but there is an time chunk of the data source's segment granularity that has no row in your batch ingestion run, what will happen to the data in that time chunk? It seems to me that nothing will happen because I haven't seen anything that creates empty segments for a time chunk with no data, and so there's no segment to overshadow the old segment.  Is that expected?  Is there a good way to say \"replace this interval of time with data from this batch job, including dropping segments from time chunks if there's nothing there\"?  We're considering using batch ingestion with the ingestSegment firehose and filtering in order to retain only specific rarer kinds of data past a certain distance in the past, and it's possible to imagine that that data might be missing for an entire hour here and there.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/461108169/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/461149807","html_url":"https://github.com/apache/druid/issues/7019#issuecomment-461149807","issue_url":"https://api.github.com/repos/apache/druid/issues/7019","id":461149807,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MTE0OTgwNw==","user":{"login":"AlexanderSaydakov","id":13126686,"node_id":"MDQ6VXNlcjEzMTI2Njg2","avatar_url":"https://avatars.githubusercontent.com/u/13126686?v=4","gravatar_id":"","url":"https://api.github.com/users/AlexanderSaydakov","html_url":"https://github.com/AlexanderSaydakov","followers_url":"https://api.github.com/users/AlexanderSaydakov/followers","following_url":"https://api.github.com/users/AlexanderSaydakov/following{/other_user}","gists_url":"https://api.github.com/users/AlexanderSaydakov/gists{/gist_id}","starred_url":"https://api.github.com/users/AlexanderSaydakov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/AlexanderSaydakov/subscriptions","organizations_url":"https://api.github.com/users/AlexanderSaydakov/orgs","repos_url":"https://api.github.com/users/AlexanderSaydakov/repos","events_url":"https://api.github.com/users/AlexanderSaydakov/events{/privacy}","received_events_url":"https://api.github.com/users/AlexanderSaydakov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-06T19:14:16Z","updated_at":"2019-02-06T19:14:16Z","author_association":"CONTRIBUTOR","body":"What negative consequences do you think this has?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/461149807/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/461159982","html_url":"https://github.com/apache/druid/issues/6993#issuecomment-461159982","issue_url":"https://api.github.com/repos/apache/druid/issues/6993","id":461159982,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MTE1OTk4Mg==","user":{"login":"peferron","id":7009852,"node_id":"MDQ6VXNlcjcwMDk4NTI=","avatar_url":"https://avatars.githubusercontent.com/u/7009852?v=4","gravatar_id":"","url":"https://api.github.com/users/peferron","html_url":"https://github.com/peferron","followers_url":"https://api.github.com/users/peferron/followers","following_url":"https://api.github.com/users/peferron/following{/other_user}","gists_url":"https://api.github.com/users/peferron/gists{/gist_id}","starred_url":"https://api.github.com/users/peferron/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/peferron/subscriptions","organizations_url":"https://api.github.com/users/peferron/orgs","repos_url":"https://api.github.com/users/peferron/repos","events_url":"https://api.github.com/users/peferron/events{/privacy}","received_events_url":"https://api.github.com/users/peferron/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-06T19:43:13Z","updated_at":"2019-02-06T19:43:13Z","author_association":"CONTRIBUTOR","body":"> I was thinking a period threshold is likely to align with how people often set up historical tiers: a 'hot' tier for the latest 30 days and a 'cold' tier for older data.\r\n\r\nGot it. It makes sense if the goal is to be an alternative to tiering in certain situations, as you mentioned in your proposal.\r\n\r\nSome of the confusion, I think, is coming from the fact that the proposal matches \"light\" with \"high priority\", and \"heavy\" with \"low priority\", but then goes on to propose a period threshold that's intuitively not the best way to achieve that: heavy queries hitting recent data will remain high priority, while light queries hitting older data will be adjusted down to low priority.\r\n\r\nThat's why the comments went on to suggest thresholds that are intuitively better correlated, such as duration or segment count (and we could keep going until we end up applying ML to it).\r\n\r\nLet me ask you this: if there was an omniscient function available in the broker that could exactly predict how light or heavy a query is going to be, would you remove the period threshold, or leave it in as an optional configuration option?\r\n\r\nIf you remove it, then this proposal is indeed about classifying light vs heavy queries.\r\n\r\nIf you leave it in, then this proposal is rather about letting users dynamically adjust priorities based on abitrary criteria, with light or heavy just being one of them; and it's OK to sometimes classify a heavy query as high-priority and vice-versa.\r\n\r\nI hope this doesn't sound like nitpicking—it would be helpful (at least to me) to clear this up.\r\n\r\nBTW, my suggestion of a duration threshold was only as a review comment—in our case, we fully control the query priority and don't have any need for dynamic prioritization, so laning is the only useful feature for us here. My selfish interest would even be to ship laning first and push dynamic prioritization to a follow-up PR. 😛 \r\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/461159982/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/461180795","html_url":"https://github.com/apache/druid/issues/6993#issuecomment-461180795","issue_url":"https://api.github.com/repos/apache/druid/issues/6993","id":461180795,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MTE4MDc5NQ==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-06T20:46:01Z","updated_at":"2019-02-06T20:46:01Z","author_association":"CONTRIBUTOR","body":"> Let me ask you this: if there was an omniscient function available in the broker that could exactly predict how light or heavy a query is going to be, would you remove the period threshold, or leave it in as an optional configuration option?\r\n\r\nIt depends on how omniscient the function is :)\r\n\r\nDepending on how omniscient the function is, I still think there'd be value in overriding its decisions. Imagine you have a 'hot' and 'cold' tier and you really do want to apply a priority penalty to anything that'd hit the 'cold' tier, even if it looks like a cheap query. The reason might be because you have set up the cold tier to be storage-dense, and even seemingly-cheap queries might take a long time to run there due to needing to swap data in and out of disk. And you want those to go in the 'heavy' lane even if they look cheap.\r\n\r\n> If you leave it in, then this proposal is rather about letting users dynamically adjust priorities based on arbitrary criteria, with light or heavy just being one of them; and it's OK to sometimes classify a heavy query as high-priority and vice-versa.\r\n\r\nI think this is the best way to think about what I'm proposing. The main motivation for dynamic prioritization is to differentiate heavy vs light queries, but I don't think that's going to be the only way people will want to do it. Maybe people will want to adjust priorities for specific datasources, or queries from specific users, or whatever.\r\n\r\n> BTW, my suggestion of a duration threshold was only as a review comment—in our case, we fully control the query priority and don't have any need for dynamic prioritization, so laning is the only useful feature for us here. My selfish interest would even be to ship laning first and push dynamic prioritization to a follow-up PR. 😛\r\n\r\nThat's a good point, the two features don't need to be done at the same time, and probably shouldn't be. (Although there is value in designing them together to make sure they align with each other.)","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/461180795/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/461192267","html_url":"https://github.com/apache/druid/issues/6858#issuecomment-461192267","issue_url":"https://api.github.com/repos/apache/druid/issues/6858","id":461192267,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MTE5MjI2Nw==","user":{"login":"hpandeycodeit","id":21266105,"node_id":"MDQ6VXNlcjIxMjY2MTA1","avatar_url":"https://avatars.githubusercontent.com/u/21266105?v=4","gravatar_id":"","url":"https://api.github.com/users/hpandeycodeit","html_url":"https://github.com/hpandeycodeit","followers_url":"https://api.github.com/users/hpandeycodeit/followers","following_url":"https://api.github.com/users/hpandeycodeit/following{/other_user}","gists_url":"https://api.github.com/users/hpandeycodeit/gists{/gist_id}","starred_url":"https://api.github.com/users/hpandeycodeit/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hpandeycodeit/subscriptions","organizations_url":"https://api.github.com/users/hpandeycodeit/orgs","repos_url":"https://api.github.com/users/hpandeycodeit/repos","events_url":"https://api.github.com/users/hpandeycodeit/events{/privacy}","received_events_url":"https://api.github.com/users/hpandeycodeit/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-06T21:21:19Z","updated_at":"2019-02-06T21:21:19Z","author_association":"MEMBER","body":"@leventov sounds good. I will do the changes. ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/461192267/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/461197020","html_url":"https://github.com/apache/druid/pull/6581#issuecomment-461197020","issue_url":"https://api.github.com/repos/apache/druid/issues/6581","id":461197020,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MTE5NzAyMA==","user":{"login":"edgan8","id":2577963,"node_id":"MDQ6VXNlcjI1Nzc5NjM=","avatar_url":"https://avatars.githubusercontent.com/u/2577963?v=4","gravatar_id":"","url":"https://api.github.com/users/edgan8","html_url":"https://github.com/edgan8","followers_url":"https://api.github.com/users/edgan8/followers","following_url":"https://api.github.com/users/edgan8/following{/other_user}","gists_url":"https://api.github.com/users/edgan8/gists{/gist_id}","starred_url":"https://api.github.com/users/edgan8/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/edgan8/subscriptions","organizations_url":"https://api.github.com/users/edgan8/orgs","repos_url":"https://api.github.com/users/edgan8/repos","events_url":"https://api.github.com/users/edgan8/events{/privacy}","received_events_url":"https://api.github.com/users/edgan8/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-06T21:35:51Z","updated_at":"2019-02-06T21:36:03Z","author_association":"CONTRIBUTOR","body":"@leerho I completely agree, it seems the concern is about the recommendations we provide to users. Due to concerns about robustness, I don't think the moments sketch should be a recommended first choice in standard environments either. For users with extreme demands, my understanding was that putting an extension package in contrib was a convenient to location allow them to experiment and can work on updating the documentation to make that more clear. If the druid maintainers have different plans for contrib then I can move this back to an external repository, I don't have a stake. \r\n\r\n@jon-wei please let me know your thoughts on the best place to put this package moving forward, I am also happy keeping it in my own repository if that is more convenient.\r\n\r\n@AlexanderSaydakov those features are not difficult to add if people find them important.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/461197020/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/461200669","html_url":"https://github.com/apache/druid/issues/6984#issuecomment-461200669","issue_url":"https://api.github.com/repos/apache/druid/issues/6984","id":461200669,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MTIwMDY2OQ==","user":{"login":"jon-wei","id":8729063,"node_id":"MDQ6VXNlcjg3MjkwNjM=","avatar_url":"https://avatars.githubusercontent.com/u/8729063?v=4","gravatar_id":"","url":"https://api.github.com/users/jon-wei","html_url":"https://github.com/jon-wei","followers_url":"https://api.github.com/users/jon-wei/followers","following_url":"https://api.github.com/users/jon-wei/following{/other_user}","gists_url":"https://api.github.com/users/jon-wei/gists{/gist_id}","starred_url":"https://api.github.com/users/jon-wei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jon-wei/subscriptions","organizations_url":"https://api.github.com/users/jon-wei/orgs","repos_url":"https://api.github.com/users/jon-wei/repos","events_url":"https://api.github.com/users/jon-wei/events{/privacy}","received_events_url":"https://api.github.com/users/jon-wei/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-06T21:47:00Z","updated_at":"2019-02-06T21:47:00Z","author_association":"CONTRIBUTOR","body":"The new web-console has a dependency on Palantir Blueprint (https://github.com/palantir/blueprint/blob/develop/LICENSE) which uses a license based on the Apache license. \r\n\r\nThis license is not on the list of approved licenses (https://www.apache.org/legal/resolved.html) but the added clause is similar to the BSD 3-clause license which is allowed.\r\n\r\nI've opened an Apache LEGAL issue to ask if Blueprint can be included: https://issues.apache.org/jira/browse/LEGAL-436","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/461200669/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/461205513","html_url":"https://github.com/apache/druid/pull/6581#issuecomment-461205513","issue_url":"https://api.github.com/repos/apache/druid/issues/6581","id":461205513,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MTIwNTUxMw==","user":{"login":"jon-wei","id":8729063,"node_id":"MDQ6VXNlcjg3MjkwNjM=","avatar_url":"https://avatars.githubusercontent.com/u/8729063?v=4","gravatar_id":"","url":"https://api.github.com/users/jon-wei","html_url":"https://github.com/jon-wei","followers_url":"https://api.github.com/users/jon-wei/followers","following_url":"https://api.github.com/users/jon-wei/following{/other_user}","gists_url":"https://api.github.com/users/jon-wei/gists{/gist_id}","starred_url":"https://api.github.com/users/jon-wei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jon-wei/subscriptions","organizations_url":"https://api.github.com/users/jon-wei/orgs","repos_url":"https://api.github.com/users/jon-wei/repos","events_url":"https://api.github.com/users/jon-wei/events{/privacy}","received_events_url":"https://api.github.com/users/jon-wei/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-06T22:01:44Z","updated_at":"2019-02-06T22:01:44Z","author_association":"CONTRIBUTOR","body":"> @jon-wei please let me know your thoughts on the best place to put this package moving forward, I am also happy keeping it in my own repository if that is more convenient.\r\n\r\nI think extensions-contrib is a good place for this aggregator, we can make the characteristics and limitations clear in the docs, and have it as something that users can experiment with while recommending the DS-Sketch for general use.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/461205513/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/461207328","html_url":"https://github.com/apache/druid/pull/7015#issuecomment-461207328","issue_url":"https://api.github.com/repos/apache/druid/issues/7015","id":461207328,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MTIwNzMyOA==","user":{"login":"jon-wei","id":8729063,"node_id":"MDQ6VXNlcjg3MjkwNjM=","avatar_url":"https://avatars.githubusercontent.com/u/8729063?v=4","gravatar_id":"","url":"https://api.github.com/users/jon-wei","html_url":"https://github.com/jon-wei","followers_url":"https://api.github.com/users/jon-wei/followers","following_url":"https://api.github.com/users/jon-wei/following{/other_user}","gists_url":"https://api.github.com/users/jon-wei/gists{/gist_id}","starred_url":"https://api.github.com/users/jon-wei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jon-wei/subscriptions","organizations_url":"https://api.github.com/users/jon-wei/orgs","repos_url":"https://api.github.com/users/jon-wei/repos","events_url":"https://api.github.com/users/jon-wei/events{/privacy}","received_events_url":"https://api.github.com/users/jon-wei/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-06T22:07:52Z","updated_at":"2019-02-06T22:07:52Z","author_association":"CONTRIBUTOR","body":"There are some real UT failures:\r\n\r\n```\r\norg.apache.druid.segment.loading.HdfsDataSegmentFinderTest  Time elapsed: 2.25 sec  <<< ERROR!\r\njava.lang.NoClassDefFoundError: org/apache/hadoop/net/StaticMapping\r\n\tat org.apache.hadoop.hdfs.MiniDFSCluster.initMiniDFSCluster(MiniDFSCluster.java:807)\r\n\tat org.apache.hadoop.hdfs.MiniDFSCluster.<init>(MiniDFSCluster.java:485)\r\n\tat org.apache.hadoop.hdfs.MiniDFSCluster$Builder.build(MiniDFSCluster.java:444)\r\n\tat org.apache.druid.segment.loading.HdfsDataSegmentFinderTest.setupStatic(HdfsDataSegmentFinderTest.java:148)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\r\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\r\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\r\n\tat org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:24)\r\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n\tat org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)\r\n\tat org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)\r\n\tat org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)\r\n\tat org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)\r\nCaused by: java.lang.ClassNotFoundException: org.apache.hadoop.net.StaticMapping\r\n\tat java.net.URLClassLoader.findClass(URLClassLoader.java:381)\r\n\tat java.lang.ClassLoader.loadClass(ClassLoader.java:424)\r\n\tat sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:335)\r\n\tat java.lang.ClassLoader.loadClass(ClassLoader.java:357)\r\n\t... 21 more\r\n```\r\n\r\nMaybe some adjustment is needed for hadoop-common dependency in test scope","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/461207328/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/461214041","html_url":"https://github.com/apache/druid/pull/6896#issuecomment-461214041","issue_url":"https://api.github.com/repos/apache/druid/issues/6896","id":461214041,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MTIxNDA0MQ==","user":{"login":"drcrallen","id":8213081,"node_id":"MDQ6VXNlcjgyMTMwODE=","avatar_url":"https://avatars.githubusercontent.com/u/8213081?v=4","gravatar_id":"","url":"https://api.github.com/users/drcrallen","html_url":"https://github.com/drcrallen","followers_url":"https://api.github.com/users/drcrallen/followers","following_url":"https://api.github.com/users/drcrallen/following{/other_user}","gists_url":"https://api.github.com/users/drcrallen/gists{/gist_id}","starred_url":"https://api.github.com/users/drcrallen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/drcrallen/subscriptions","organizations_url":"https://api.github.com/users/drcrallen/orgs","repos_url":"https://api.github.com/users/drcrallen/repos","events_url":"https://api.github.com/users/drcrallen/events{/privacy}","received_events_url":"https://api.github.com/users/drcrallen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-06T22:30:02Z","updated_at":"2019-02-06T22:30:02Z","author_association":"CONTRIBUTOR","body":"for posterity there is a discussion on the incubator list about docker releases (only tangentially related)\r\n\r\nhttp://mail-archives.apache.org/mod_mbox/incubator-general/201902.mbox/%3CCAGaRif1NXV4ZmakmR3bhGS-UvkOf%3DmJJg3HOKCTEKtaYBW3NDQ%40mail.gmail.com%3E\r\n\r\nand the discussion on the druid list seems to have no specific objections and pretty good counter examples:\r\n\r\nhttps://lists.apache.org/thread.html/ed1483e138685207c45a65b22ecc5e83a0236edd285aeb393318b052@%3Cdev.druid.apache.org%3E\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/461214041/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/461214722","html_url":"https://github.com/apache/druid/pull/6896#issuecomment-461214722","issue_url":"https://api.github.com/repos/apache/druid/issues/6896","id":461214722,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MTIxNDcyMg==","user":{"login":"drcrallen","id":8213081,"node_id":"MDQ6VXNlcjgyMTMwODE=","avatar_url":"https://avatars.githubusercontent.com/u/8213081?v=4","gravatar_id":"","url":"https://api.github.com/users/drcrallen","html_url":"https://github.com/drcrallen","followers_url":"https://api.github.com/users/drcrallen/followers","following_url":"https://api.github.com/users/drcrallen/following{/other_user}","gists_url":"https://api.github.com/users/drcrallen/gists{/gist_id}","starred_url":"https://api.github.com/users/drcrallen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/drcrallen/subscriptions","organizations_url":"https://api.github.com/users/drcrallen/orgs","repos_url":"https://api.github.com/users/drcrallen/repos","events_url":"https://api.github.com/users/drcrallen/events{/privacy}","received_events_url":"https://api.github.com/users/drcrallen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-06T22:32:16Z","updated_at":"2019-02-06T22:32:16Z","author_association":"CONTRIBUTOR","body":"team city issues look unrelated","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/461214722/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/461215711","html_url":"https://github.com/apache/druid/pull/7002#issuecomment-461215711","issue_url":"https://api.github.com/repos/apache/druid/issues/7002","id":461215711,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MTIxNTcxMQ==","user":{"login":"drcrallen","id":8213081,"node_id":"MDQ6VXNlcjgyMTMwODE=","avatar_url":"https://avatars.githubusercontent.com/u/8213081?v=4","gravatar_id":"","url":"https://api.github.com/users/drcrallen","html_url":"https://github.com/drcrallen","followers_url":"https://api.github.com/users/drcrallen/followers","following_url":"https://api.github.com/users/drcrallen/following{/other_user}","gists_url":"https://api.github.com/users/drcrallen/gists{/gist_id}","starred_url":"https://api.github.com/users/drcrallen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/drcrallen/subscriptions","organizations_url":"https://api.github.com/users/drcrallen/orgs","repos_url":"https://api.github.com/users/drcrallen/repos","events_url":"https://api.github.com/users/drcrallen/events{/privacy}","received_events_url":"https://api.github.com/users/drcrallen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-06T22:35:49Z","updated_at":"2019-02-06T22:35:49Z","author_association":"CONTRIBUTOR","body":"it is entirely possible that there are lazy transforms that can affect the results here. I can't think of any off the top of my head in these specific code paths but guava's transforming list wrappers are used pretty extensively in druid.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/461215711/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/461221023","html_url":"https://github.com/apache/druid/issues/6989#issuecomment-461221023","issue_url":"https://api.github.com/repos/apache/druid/issues/6989","id":461221023,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MTIyMTAyMw==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-06T22:54:43Z","updated_at":"2019-02-06T22:54:43Z","author_association":"CONTRIBUTOR","body":"@glasser \r\n\r\n> 1\\. Where should tests of this new logic end up?  And how do I actually run parts of the Druid test suite? I'm not very experienced with Maven — I know how to run `mvn install` to run all of the tests for all of Druid, but not anything more specific. (I use IntelliJ if that helps.)\r\n\r\nI would recommend to use Intellij or any other IDE you prefer. If you want to do in the terminal, you can run `mvn test -Dtest=TestClass` and `mvn verify -P integration-tests -Dit.test=TestClass` for unit tests and integration tests, respectively.\r\n\r\n> 2\\. If it's OK to dynamically add locks one by one as the task runs, why do the local and hadoop indexing tasks do an initial scan to determine all the intervals at once? Do they need to do that scan for some other reason anyway?\r\n\r\nI think it's because of https://github.com/apache/incubator-druid/pull/4550. Those classes were written before https://github.com/apache/incubator-druid/pull/4550, and at that time, there was no concept of revoking locks. As a result, if two or more tasks get locks one by one dynamically, they might get stuck in the middle of ingestion. Moreover, it can cause a deadlock if they block each other. However, now, the higher priority tasks can preempt lower priority tasks.\r\n\r\n> 3\\. General batch ingestion/segment replacement question: if you're using batch ingestion (of any kind: Hadoop, native, local) with granularitySpec interval specified and appendToExisting false, to re-ingest to an interval that already contains data, but there is an time chunk of the data source's segment granularity that has no row in your batch ingestion run, what will happen to the data in that time chunk? It seems to me that nothing will happen because I haven't seen anything that creates empty segments for a time chunk with no data, and so there's no segment to overshadow the old segment.  Is that expected?  Is there a good way to say \"replace this interval of time with data from this batch job, including dropping segments from time chunks if there's nothing there\"?  We're considering using batch ingestion with the ingestSegment firehose and filtering in order to retain only specific rarer kinds of data past a certain distance in the past, and it's possible to imagine that that data might be missing for an entire hour here and there.\r\n\r\nGood question. I don't think we're currently supporting that kind of replacement. But maybe it's worth to support.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/461221023/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/461222342","html_url":"https://github.com/apache/druid/pull/7002#issuecomment-461222342","issue_url":"https://api.github.com/repos/apache/druid/issues/7002","id":461222342,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MTIyMjM0Mg==","user":{"login":"justinborromeo","id":9417701,"node_id":"MDQ6VXNlcjk0MTc3MDE=","avatar_url":"https://avatars.githubusercontent.com/u/9417701?v=4","gravatar_id":"","url":"https://api.github.com/users/justinborromeo","html_url":"https://github.com/justinborromeo","followers_url":"https://api.github.com/users/justinborromeo/followers","following_url":"https://api.github.com/users/justinborromeo/following{/other_user}","gists_url":"https://api.github.com/users/justinborromeo/gists{/gist_id}","starred_url":"https://api.github.com/users/justinborromeo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/justinborromeo/subscriptions","organizations_url":"https://api.github.com/users/justinborromeo/orgs","repos_url":"https://api.github.com/users/justinborromeo/repos","events_url":"https://api.github.com/users/justinborromeo/events{/privacy}","received_events_url":"https://api.github.com/users/justinborromeo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-06T22:59:17Z","updated_at":"2019-02-06T22:59:17Z","author_association":"CONTRIBUTOR","body":"@drcrallen By lazy transforms, are you talking about how sequences are lazily yielded when accumulated?  If so, wouldn't `SomeBenchmark.runQuery` accumulate the sequence members when `Sequence.toList()` is called before being consumed by `blackhole`?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/461222342/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/461234790","html_url":"https://github.com/apache/druid/pull/6581#issuecomment-461234790","issue_url":"https://api.github.com/repos/apache/druid/issues/6581","id":461234790,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MTIzNDc5MA==","user":{"login":"leerho","id":12941506,"node_id":"MDQ6VXNlcjEyOTQxNTA2","avatar_url":"https://avatars.githubusercontent.com/u/12941506?v=4","gravatar_id":"","url":"https://api.github.com/users/leerho","html_url":"https://github.com/leerho","followers_url":"https://api.github.com/users/leerho/followers","following_url":"https://api.github.com/users/leerho/following{/other_user}","gists_url":"https://api.github.com/users/leerho/gists{/gist_id}","starred_url":"https://api.github.com/users/leerho/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leerho/subscriptions","organizations_url":"https://api.github.com/users/leerho/orgs","repos_url":"https://api.github.com/users/leerho/repos","events_url":"https://api.github.com/users/leerho/events{/privacy}","received_events_url":"https://api.github.com/users/leerho/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-06T23:50:19Z","updated_at":"2019-02-06T23:50:19Z","author_association":"CONTRIBUTOR","body":"@jon-wei I hope that the studies that I reference in this thread as well as my concerns and @edgan8's agreement should provide sufficient information for someone to generate relevant documentation.  Since I don't really know how (style, place, format, etc.) the Druid team wants to document these algorithms, someone on the Druid team should do that. Once generated I would be happy to review and comment, but I really need someone to take ownership of the documentation of these algorithms for Druid.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/461234790/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/461239933","html_url":"https://github.com/apache/druid/pull/7025#issuecomment-461239933","issue_url":"https://api.github.com/repos/apache/druid/issues/7025","id":461239933,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MTIzOTkzMw==","user":{"login":"fjy","id":428325,"node_id":"MDQ6VXNlcjQyODMyNQ==","avatar_url":"https://avatars.githubusercontent.com/u/428325?v=4","gravatar_id":"","url":"https://api.github.com/users/fjy","html_url":"https://github.com/fjy","followers_url":"https://api.github.com/users/fjy/followers","following_url":"https://api.github.com/users/fjy/following{/other_user}","gists_url":"https://api.github.com/users/fjy/gists{/gist_id}","starred_url":"https://api.github.com/users/fjy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fjy/subscriptions","organizations_url":"https://api.github.com/users/fjy/orgs","repos_url":"https://api.github.com/users/fjy/repos","events_url":"https://api.github.com/users/fjy/events{/privacy}","received_events_url":"https://api.github.com/users/fjy/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-07T00:11:18Z","updated_at":"2019-02-07T00:11:18Z","author_association":"CONTRIBUTOR","body":"👍 ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/461239933/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/461240192","html_url":"https://github.com/apache/druid/pull/6581#issuecomment-461240192","issue_url":"https://api.github.com/repos/apache/druid/issues/6581","id":461240192,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MTI0MDE5Mg==","user":{"login":"jon-wei","id":8729063,"node_id":"MDQ6VXNlcjg3MjkwNjM=","avatar_url":"https://avatars.githubusercontent.com/u/8729063?v=4","gravatar_id":"","url":"https://api.github.com/users/jon-wei","html_url":"https://github.com/jon-wei","followers_url":"https://api.github.com/users/jon-wei/followers","following_url":"https://api.github.com/users/jon-wei/following{/other_user}","gists_url":"https://api.github.com/users/jon-wei/gists{/gist_id}","starred_url":"https://api.github.com/users/jon-wei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jon-wei/subscriptions","organizations_url":"https://api.github.com/users/jon-wei/orgs","repos_url":"https://api.github.com/users/jon-wei/repos","events_url":"https://api.github.com/users/jon-wei/events{/privacy}","received_events_url":"https://api.github.com/users/jon-wei/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-07T00:12:28Z","updated_at":"2019-02-07T00:12:28Z","author_association":"CONTRIBUTOR","body":"@leerho @edgan8 I'll take care of writing the Druid doc pages based on the information you've provided, thanks a lot for the help!","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/461240192/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/461241638","html_url":"https://github.com/apache/druid/pull/6581#issuecomment-461241638","issue_url":"https://api.github.com/repos/apache/druid/issues/6581","id":461241638,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MTI0MTYzOA==","user":{"login":"AlexanderSaydakov","id":13126686,"node_id":"MDQ6VXNlcjEzMTI2Njg2","avatar_url":"https://avatars.githubusercontent.com/u/13126686?v=4","gravatar_id":"","url":"https://api.github.com/users/AlexanderSaydakov","html_url":"https://github.com/AlexanderSaydakov","followers_url":"https://api.github.com/users/AlexanderSaydakov/followers","following_url":"https://api.github.com/users/AlexanderSaydakov/following{/other_user}","gists_url":"https://api.github.com/users/AlexanderSaydakov/gists{/gist_id}","starred_url":"https://api.github.com/users/AlexanderSaydakov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/AlexanderSaydakov/subscriptions","organizations_url":"https://api.github.com/users/AlexanderSaydakov/orgs","repos_url":"https://api.github.com/users/AlexanderSaydakov/repos","events_url":"https://api.github.com/users/AlexanderSaydakov/events{/privacy}","received_events_url":"https://api.github.com/users/AlexanderSaydakov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-07T00:19:07Z","updated_at":"2019-02-07T00:19:07Z","author_association":"CONTRIBUTOR","body":"@jon-wei you may want to update the docs for the Approximate Histogram and Druid HLL as well.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/461241638/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/461292764","html_url":"https://github.com/apache/druid/pull/7025#issuecomment-461292764","issue_url":"https://api.github.com/repos/apache/druid/issues/7025","id":461292764,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MTI5Mjc2NA==","user":{"login":"vogievetsky","id":177816,"node_id":"MDQ6VXNlcjE3NzgxNg==","avatar_url":"https://avatars.githubusercontent.com/u/177816?v=4","gravatar_id":"","url":"https://api.github.com/users/vogievetsky","html_url":"https://github.com/vogievetsky","followers_url":"https://api.github.com/users/vogievetsky/followers","following_url":"https://api.github.com/users/vogievetsky/following{/other_user}","gists_url":"https://api.github.com/users/vogievetsky/gists{/gist_id}","starred_url":"https://api.github.com/users/vogievetsky/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vogievetsky/subscriptions","organizations_url":"https://api.github.com/users/vogievetsky/orgs","repos_url":"https://api.github.com/users/vogievetsky/repos","events_url":"https://api.github.com/users/vogievetsky/events{/privacy}","received_events_url":"https://api.github.com/users/vogievetsky/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-07T05:26:19Z","updated_at":"2019-02-07T05:26:19Z","author_association":"CONTRIBUTOR","body":"Should this update the docs here: http://druid.io/docs/latest/querying/lookups.html ?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/461292764/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/461297076","html_url":"https://github.com/apache/druid/pull/7026#issuecomment-461297076","issue_url":"https://api.github.com/repos/apache/druid/issues/7026","id":461297076,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MTI5NzA3Ng==","user":{"login":"jon-wei","id":8729063,"node_id":"MDQ6VXNlcjg3MjkwNjM=","avatar_url":"https://avatars.githubusercontent.com/u/8729063?v=4","gravatar_id":"","url":"https://api.github.com/users/jon-wei","html_url":"https://github.com/jon-wei","followers_url":"https://api.github.com/users/jon-wei/followers","following_url":"https://api.github.com/users/jon-wei/following{/other_user}","gists_url":"https://api.github.com/users/jon-wei/gists{/gist_id}","starred_url":"https://api.github.com/users/jon-wei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jon-wei/subscriptions","organizations_url":"https://api.github.com/users/jon-wei/orgs","repos_url":"https://api.github.com/users/jon-wei/repos","events_url":"https://api.github.com/users/jon-wei/events{/privacy}","received_events_url":"https://api.github.com/users/jon-wei/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-07T05:53:52Z","updated_at":"2019-02-07T06:06:59Z","author_association":"CONTRIBUTOR","body":"marking WIP, some of the \"licenseFile\" entries (pulled from node dependencies in web-console using a script) are not actually license files, will need to update those\r\n\r\nwill also need to add license for Bootstrap v3.1.1","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/461297076/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/461301424","html_url":"https://github.com/apache/druid/pull/6930#issuecomment-461301424","issue_url":"https://api.github.com/repos/apache/druid/issues/6930","id":461301424,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MTMwMTQyNA==","user":{"login":"kamaci","id":3921885,"node_id":"MDQ6VXNlcjM5MjE4ODU=","avatar_url":"https://avatars.githubusercontent.com/u/3921885?v=4","gravatar_id":"","url":"https://api.github.com/users/kamaci","html_url":"https://github.com/kamaci","followers_url":"https://api.github.com/users/kamaci/followers","following_url":"https://api.github.com/users/kamaci/following{/other_user}","gists_url":"https://api.github.com/users/kamaci/gists{/gist_id}","starred_url":"https://api.github.com/users/kamaci/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kamaci/subscriptions","organizations_url":"https://api.github.com/users/kamaci/orgs","repos_url":"https://api.github.com/users/kamaci/repos","events_url":"https://api.github.com/users/kamaci/events{/privacy}","received_events_url":"https://api.github.com/users/kamaci/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-07T06:21:12Z","updated_at":"2019-02-07T06:21:12Z","author_association":"MEMBER","body":"CI checks are OK 👍 ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/461301424/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/461331076","html_url":"https://github.com/apache/druid/issues/7027#issuecomment-461331076","issue_url":"https://api.github.com/repos/apache/druid/issues/7027","id":461331076,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MTMzMTA3Ng==","user":{"login":"kamaci","id":3921885,"node_id":"MDQ6VXNlcjM5MjE4ODU=","avatar_url":"https://avatars.githubusercontent.com/u/3921885?v=4","gravatar_id":"","url":"https://api.github.com/users/kamaci","html_url":"https://github.com/kamaci","followers_url":"https://api.github.com/users/kamaci/followers","following_url":"https://api.github.com/users/kamaci/following{/other_user}","gists_url":"https://api.github.com/users/kamaci/gists{/gist_id}","starred_url":"https://api.github.com/users/kamaci/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kamaci/subscriptions","organizations_url":"https://api.github.com/users/kamaci/orgs","repos_url":"https://api.github.com/users/kamaci/repos","events_url":"https://api.github.com/users/kamaci/events{/privacy}","received_events_url":"https://api.github.com/users/kamaci/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-07T08:40:14Z","updated_at":"2019-02-07T09:38:29Z","author_association":"MEMBER","body":"Currently, all fields are threaten as String when `dimensions` field is empty:\r\n\r\n> Schema-less dimensions\r\n> If the dimensions field is left empty in your ingestion spec, Druid will treat every column that is not the timestamp column, a dimension that has been excluded, or a metric column as a dimension. It should be noted that because of #658 these segments will be slightly larger than if the list of dimensions was explicitly specified in lexicographic order. This limitation does not impact query correctness- just storage requirements.\r\n> \r\n> Note that when using schema-less ingestion, all dimensions will be ingested as String-typed dimensions.\r\n\r\nHowever, it can work as similar to [Solr Schemaless Mode](https://lucene.apache.org/solr/guide/7_6/schemaless-mode.html).","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/461331076/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/461382430","html_url":"https://github.com/apache/druid/pull/1998#issuecomment-461382430","issue_url":"https://api.github.com/repos/apache/druid/issues/1998","id":461382430,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MTM4MjQzMA==","user":{"login":"dylwylie","id":3107079,"node_id":"MDQ6VXNlcjMxMDcwNzk=","avatar_url":"https://avatars.githubusercontent.com/u/3107079?v=4","gravatar_id":"","url":"https://api.github.com/users/dylwylie","html_url":"https://github.com/dylwylie","followers_url":"https://api.github.com/users/dylwylie/followers","following_url":"https://api.github.com/users/dylwylie/following{/other_user}","gists_url":"https://api.github.com/users/dylwylie/gists{/gist_id}","starred_url":"https://api.github.com/users/dylwylie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dylwylie/subscriptions","organizations_url":"https://api.github.com/users/dylwylie/orgs","repos_url":"https://api.github.com/users/dylwylie/repos","events_url":"https://api.github.com/users/dylwylie/events{/privacy}","received_events_url":"https://api.github.com/users/dylwylie/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-07T11:28:29Z","updated_at":"2019-02-07T11:28:29Z","author_association":"CONTRIBUTOR","body":"Closing as superseded by #5102","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/461382430/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/461383044","html_url":"https://github.com/apache/druid/pull/2414#issuecomment-461383044","issue_url":"https://api.github.com/repos/apache/druid/issues/2414","id":461383044,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MTM4MzA0NA==","user":{"login":"dylwylie","id":3107079,"node_id":"MDQ6VXNlcjMxMDcwNzk=","avatar_url":"https://avatars.githubusercontent.com/u/3107079?v=4","gravatar_id":"","url":"https://api.github.com/users/dylwylie","html_url":"https://github.com/dylwylie","followers_url":"https://api.github.com/users/dylwylie/followers","following_url":"https://api.github.com/users/dylwylie/following{/other_user}","gists_url":"https://api.github.com/users/dylwylie/gists{/gist_id}","starred_url":"https://api.github.com/users/dylwylie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dylwylie/subscriptions","organizations_url":"https://api.github.com/users/dylwylie/orgs","repos_url":"https://api.github.com/users/dylwylie/repos","events_url":"https://api.github.com/users/dylwylie/events{/privacy}","received_events_url":"https://api.github.com/users/dylwylie/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-07T11:30:51Z","updated_at":"2019-02-07T11:30:51Z","author_association":"CONTRIBUTOR","body":"Closing as I believe #4832 covers this. Feel free to reopen if I'm wrong!","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/461383044/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/461383501","html_url":"https://github.com/apache/druid/pull/3294#issuecomment-461383501","issue_url":"https://api.github.com/repos/apache/druid/issues/3294","id":461383501,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MTM4MzUwMQ==","user":{"login":"dylwylie","id":3107079,"node_id":"MDQ6VXNlcjMxMDcwNzk=","avatar_url":"https://avatars.githubusercontent.com/u/3107079?v=4","gravatar_id":"","url":"https://api.github.com/users/dylwylie","html_url":"https://github.com/dylwylie","followers_url":"https://api.github.com/users/dylwylie/followers","following_url":"https://api.github.com/users/dylwylie/following{/other_user}","gists_url":"https://api.github.com/users/dylwylie/gists{/gist_id}","starred_url":"https://api.github.com/users/dylwylie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dylwylie/subscriptions","organizations_url":"https://api.github.com/users/dylwylie/orgs","repos_url":"https://api.github.com/users/dylwylie/repos","events_url":"https://api.github.com/users/dylwylie/events{/privacy}","received_events_url":"https://api.github.com/users/dylwylie/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-07T11:32:40Z","updated_at":"2019-02-07T11:32:40Z","author_association":"CONTRIBUTOR","body":"Closing as I believe this was covered in #4491","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/461383501/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/461517685","html_url":"https://github.com/apache/druid/issues/7030#issuecomment-461517685","issue_url":"https://api.github.com/repos/apache/druid/issues/7030","id":461517685,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MTUxNzY4NQ==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-07T17:18:04Z","updated_at":"2019-02-07T17:18:04Z","author_association":"CONTRIBUTOR","body":"I am not too familiar with Pulsar, but if it has a partition / offset based scheme like Kafka or Kinesis, then it should be pretty straightforward to add using the same framework.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/461517685/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/461520839","html_url":"https://github.com/apache/druid/pull/6991#issuecomment-461520839","issue_url":"https://api.github.com/repos/apache/druid/issues/6991","id":461520839,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MTUyMDgzOQ==","user":{"login":"drcrallen","id":8213081,"node_id":"MDQ6VXNlcjgyMTMwODE=","avatar_url":"https://avatars.githubusercontent.com/u/8213081?v=4","gravatar_id":"","url":"https://api.github.com/users/drcrallen","html_url":"https://github.com/drcrallen","followers_url":"https://api.github.com/users/drcrallen/followers","following_url":"https://api.github.com/users/drcrallen/following{/other_user}","gists_url":"https://api.github.com/users/drcrallen/gists{/gist_id}","starred_url":"https://api.github.com/users/drcrallen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/drcrallen/subscriptions","organizations_url":"https://api.github.com/users/drcrallen/orgs","repos_url":"https://api.github.com/users/drcrallen/repos","events_url":"https://api.github.com/users/drcrallen/events{/privacy}","received_events_url":"https://api.github.com/users/drcrallen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-07T17:26:30Z","updated_at":"2019-02-07T17:26:30Z","author_association":"CONTRIBUTOR","body":"Can you add unit tests for this?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/461520839/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/461536633","html_url":"https://github.com/apache/druid/pull/6972#issuecomment-461536633","issue_url":"https://api.github.com/repos/apache/druid/issues/6972","id":461536633,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MTUzNjYzMw==","user":{"login":"mohammadjkhan","id":18354068,"node_id":"MDQ6VXNlcjE4MzU0MDY4","avatar_url":"https://avatars.githubusercontent.com/u/18354068?v=4","gravatar_id":"","url":"https://api.github.com/users/mohammadjkhan","html_url":"https://github.com/mohammadjkhan","followers_url":"https://api.github.com/users/mohammadjkhan/followers","following_url":"https://api.github.com/users/mohammadjkhan/following{/other_user}","gists_url":"https://api.github.com/users/mohammadjkhan/gists{/gist_id}","starred_url":"https://api.github.com/users/mohammadjkhan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mohammadjkhan/subscriptions","organizations_url":"https://api.github.com/users/mohammadjkhan/orgs","repos_url":"https://api.github.com/users/mohammadjkhan/repos","events_url":"https://api.github.com/users/mohammadjkhan/events{/privacy}","received_events_url":"https://api.github.com/users/mohammadjkhan/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-07T18:11:02Z","updated_at":"2019-02-07T18:11:02Z","author_association":"CONTRIBUTOR","body":"I'm also looking into the Travis CI build errors related to the druid-security module","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/461536633/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/461553344","html_url":"https://github.com/apache/druid/pull/7023#issuecomment-461553344","issue_url":"https://api.github.com/repos/apache/druid/issues/7023","id":461553344,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MTU1MzM0NA==","user":{"login":"fjy","id":428325,"node_id":"MDQ6VXNlcjQyODMyNQ==","avatar_url":"https://avatars.githubusercontent.com/u/428325?v=4","gravatar_id":"","url":"https://api.github.com/users/fjy","html_url":"https://github.com/fjy","followers_url":"https://api.github.com/users/fjy/followers","following_url":"https://api.github.com/users/fjy/following{/other_user}","gists_url":"https://api.github.com/users/fjy/gists{/gist_id}","starred_url":"https://api.github.com/users/fjy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fjy/subscriptions","organizations_url":"https://api.github.com/users/fjy/orgs","repos_url":"https://api.github.com/users/fjy/repos","events_url":"https://api.github.com/users/fjy/events{/privacy}","received_events_url":"https://api.github.com/users/fjy/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-07T18:58:52Z","updated_at":"2019-02-07T18:58:52Z","author_association":"CONTRIBUTOR","body":"@jihoonson can you look at test failures?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/461553344/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/461558154","html_url":"https://github.com/apache/druid/pull/6896#issuecomment-461558154","issue_url":"https://api.github.com/repos/apache/druid/issues/6896","id":461558154,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MTU1ODE1NA==","user":{"login":"donbowman","id":5131923,"node_id":"MDQ6VXNlcjUxMzE5MjM=","avatar_url":"https://avatars.githubusercontent.com/u/5131923?v=4","gravatar_id":"","url":"https://api.github.com/users/donbowman","html_url":"https://github.com/donbowman","followers_url":"https://api.github.com/users/donbowman/followers","following_url":"https://api.github.com/users/donbowman/following{/other_user}","gists_url":"https://api.github.com/users/donbowman/gists{/gist_id}","starred_url":"https://api.github.com/users/donbowman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/donbowman/subscriptions","organizations_url":"https://api.github.com/users/donbowman/orgs","repos_url":"https://api.github.com/users/donbowman/repos","events_url":"https://api.github.com/users/donbowman/events{/privacy}","received_events_url":"https://api.github.com/users/donbowman/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-07T19:12:49Z","updated_at":"2019-02-07T19:28:00Z","author_association":"CONTRIBUTOR","body":"I have added a sample docker-compose and environment file. This allows ~30s time to get a new local environment up.\r\n\r\nThis completes the dev, will address any issues.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/461558154/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/461562389","html_url":"https://github.com/apache/druid/pull/7023#issuecomment-461562389","issue_url":"https://api.github.com/repos/apache/druid/issues/7023","id":461562389,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MTU2MjM4OQ==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-07T19:24:56Z","updated_at":"2019-02-07T19:24:56Z","author_association":"CONTRIBUTOR","body":"@fjy thanks. Fixed.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/461562389/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/461564149","html_url":"https://github.com/apache/druid/pull/7025#issuecomment-461564149","issue_url":"https://api.github.com/repos/apache/druid/issues/7025","id":461564149,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MTU2NDE0OQ==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-07T19:29:55Z","updated_at":"2019-02-07T19:29:55Z","author_association":"CONTRIBUTOR","body":"@vogievetsky thanks, updated the doc.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/461564149/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/461567189","html_url":"https://github.com/apache/druid/issues/3247#issuecomment-461567189","issue_url":"https://api.github.com/repos/apache/druid/issues/3247","id":461567189,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MTU2NzE4OQ==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-07T19:38:14Z","updated_at":"2019-02-07T19:38:14Z","author_association":"CONTRIBUTOR","body":"This was fixed by #6349, I believe.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/461567189/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/461568682","html_url":"https://github.com/apache/druid/issues/7030#issuecomment-461568682","issue_url":"https://api.github.com/repos/apache/druid/issues/7030","id":461568682,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MTU2ODY4Mg==","user":{"login":"aahmed-se","id":8009085,"node_id":"MDQ6VXNlcjgwMDkwODU=","avatar_url":"https://avatars.githubusercontent.com/u/8009085?v=4","gravatar_id":"","url":"https://api.github.com/users/aahmed-se","html_url":"https://github.com/aahmed-se","followers_url":"https://api.github.com/users/aahmed-se/followers","following_url":"https://api.github.com/users/aahmed-se/following{/other_user}","gists_url":"https://api.github.com/users/aahmed-se/gists{/gist_id}","starred_url":"https://api.github.com/users/aahmed-se/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/aahmed-se/subscriptions","organizations_url":"https://api.github.com/users/aahmed-se/orgs","repos_url":"https://api.github.com/users/aahmed-se/repos","events_url":"https://api.github.com/users/aahmed-se/events{/privacy}","received_events_url":"https://api.github.com/users/aahmed-se/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-07T19:42:34Z","updated_at":"2019-02-07T19:42:34Z","author_association":"NONE","body":"it has a similar concept with cursors.\r\n\r\nhttps://streaml.io/blog/cursors-in-pulsar","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/461568682/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/461572129","html_url":"https://github.com/apache/druid/issues/7030#issuecomment-461572129","issue_url":"https://api.github.com/repos/apache/druid/issues/7030","id":461572129,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MTU3MjEyOQ==","user":{"login":"niketh","id":626548,"node_id":"MDQ6VXNlcjYyNjU0OA==","avatar_url":"https://avatars.githubusercontent.com/u/626548?v=4","gravatar_id":"","url":"https://api.github.com/users/niketh","html_url":"https://github.com/niketh","followers_url":"https://api.github.com/users/niketh/followers","following_url":"https://api.github.com/users/niketh/following{/other_user}","gists_url":"https://api.github.com/users/niketh/gists{/gist_id}","starred_url":"https://api.github.com/users/niketh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/niketh/subscriptions","organizations_url":"https://api.github.com/users/niketh/orgs","repos_url":"https://api.github.com/users/niketh/repos","events_url":"https://api.github.com/users/niketh/events{/privacy}","received_events_url":"https://api.github.com/users/niketh/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-07T19:52:11Z","updated_at":"2019-02-07T19:52:11Z","author_association":"CONTRIBUTOR","body":"We have use cases to integrate with our internal version of Pulsar. @aahmed-se Are you working on this? If not, I was going to take a stab at it.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/461572129/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/461573251","html_url":"https://github.com/apache/druid/issues/7030#issuecomment-461573251","issue_url":"https://api.github.com/repos/apache/druid/issues/7030","id":461573251,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MTU3MzI1MQ==","user":{"login":"aahmed-se","id":8009085,"node_id":"MDQ6VXNlcjgwMDkwODU=","avatar_url":"https://avatars.githubusercontent.com/u/8009085?v=4","gravatar_id":"","url":"https://api.github.com/users/aahmed-se","html_url":"https://github.com/aahmed-se","followers_url":"https://api.github.com/users/aahmed-se/followers","following_url":"https://api.github.com/users/aahmed-se/following{/other_user}","gists_url":"https://api.github.com/users/aahmed-se/gists{/gist_id}","starred_url":"https://api.github.com/users/aahmed-se/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/aahmed-se/subscriptions","organizations_url":"https://api.github.com/users/aahmed-se/orgs","repos_url":"https://api.github.com/users/aahmed-se/repos","events_url":"https://api.github.com/users/aahmed-se/events{/privacy}","received_events_url":"https://api.github.com/users/aahmed-se/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-07T19:55:34Z","updated_at":"2019-02-07T19:55:34Z","author_association":"NONE","body":"@niketh it's on my radar, but don't have the bandwidth right now. You can go ahead.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/461573251/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/461573638","html_url":"https://github.com/apache/druid/issues/7030#issuecomment-461573638","issue_url":"https://api.github.com/repos/apache/druid/issues/7030","id":461573638,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MTU3MzYzOA==","user":{"login":"niketh","id":626548,"node_id":"MDQ6VXNlcjYyNjU0OA==","avatar_url":"https://avatars.githubusercontent.com/u/626548?v=4","gravatar_id":"","url":"https://api.github.com/users/niketh","html_url":"https://github.com/niketh","followers_url":"https://api.github.com/users/niketh/followers","following_url":"https://api.github.com/users/niketh/following{/other_user}","gists_url":"https://api.github.com/users/niketh/gists{/gist_id}","starred_url":"https://api.github.com/users/niketh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/niketh/subscriptions","organizations_url":"https://api.github.com/users/niketh/orgs","repos_url":"https://api.github.com/users/niketh/repos","events_url":"https://api.github.com/users/niketh/events{/privacy}","received_events_url":"https://api.github.com/users/niketh/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-07T19:56:42Z","updated_at":"2019-02-07T19:56:57Z","author_association":"CONTRIBUTOR","body":"It makes sense to implement this as a separate task and supervisor service. The characteristics of pulsar are different as compared to kafka. For example, running pulsar in a shared subscription, the consumers can read messages from any partition. The need for maintaining per consumer offsets etc are not needed.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/461573638/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/461574109","html_url":"https://github.com/apache/druid/issues/7030#issuecomment-461574109","issue_url":"https://api.github.com/repos/apache/druid/issues/7030","id":461574109,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MTU3NDEwOQ==","user":{"login":"niketh","id":626548,"node_id":"MDQ6VXNlcjYyNjU0OA==","avatar_url":"https://avatars.githubusercontent.com/u/626548?v=4","gravatar_id":"","url":"https://api.github.com/users/niketh","html_url":"https://github.com/niketh","followers_url":"https://api.github.com/users/niketh/followers","following_url":"https://api.github.com/users/niketh/following{/other_user}","gists_url":"https://api.github.com/users/niketh/gists{/gist_id}","starred_url":"https://api.github.com/users/niketh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/niketh/subscriptions","organizations_url":"https://api.github.com/users/niketh/orgs","repos_url":"https://api.github.com/users/niketh/repos","events_url":"https://api.github.com/users/niketh/events{/privacy}","received_events_url":"https://api.github.com/users/niketh/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-07T19:58:03Z","updated_at":"2019-02-07T19:58:03Z","author_association":"CONTRIBUTOR","body":"@aahmed-se Sounds good, I will take a stab at it.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/461574109/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/461574909","html_url":"https://github.com/apache/druid/pull/7026#issuecomment-461574909","issue_url":"https://api.github.com/repos/apache/druid/issues/7026","id":461574909,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MTU3NDkwOQ==","user":{"login":"clintropolis","id":1577461,"node_id":"MDQ6VXNlcjE1Nzc0NjE=","avatar_url":"https://avatars.githubusercontent.com/u/1577461?v=4","gravatar_id":"","url":"https://api.github.com/users/clintropolis","html_url":"https://github.com/clintropolis","followers_url":"https://api.github.com/users/clintropolis/followers","following_url":"https://api.github.com/users/clintropolis/following{/other_user}","gists_url":"https://api.github.com/users/clintropolis/gists{/gist_id}","starred_url":"https://api.github.com/users/clintropolis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintropolis/subscriptions","organizations_url":"https://api.github.com/users/clintropolis/orgs","repos_url":"https://api.github.com/users/clintropolis/repos","events_url":"https://api.github.com/users/clintropolis/events{/privacy}","received_events_url":"https://api.github.com/users/clintropolis/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-07T20:00:29Z","updated_at":"2019-02-07T20:00:29Z","author_association":"MEMBER","body":"I think the `licenses/` folder needs to be excluded from rat check 🙃 ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/461574909/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/461595836","html_url":"https://github.com/apache/druid/pull/6865#issuecomment-461595836","issue_url":"https://api.github.com/repos/apache/druid/issues/6865","id":461595836,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MTU5NTgzNg==","user":{"login":"drcrallen","id":8213081,"node_id":"MDQ6VXNlcjgyMTMwODE=","avatar_url":"https://avatars.githubusercontent.com/u/8213081?v=4","gravatar_id":"","url":"https://api.github.com/users/drcrallen","html_url":"https://github.com/drcrallen","followers_url":"https://api.github.com/users/drcrallen/followers","following_url":"https://api.github.com/users/drcrallen/following{/other_user}","gists_url":"https://api.github.com/users/drcrallen/gists{/gist_id}","starred_url":"https://api.github.com/users/drcrallen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/drcrallen/subscriptions","organizations_url":"https://api.github.com/users/drcrallen/orgs","repos_url":"https://api.github.com/users/drcrallen/repos","events_url":"https://api.github.com/users/drcrallen/events{/privacy}","received_events_url":"https://api.github.com/users/drcrallen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-07T21:06:58Z","updated_at":"2019-02-07T21:13:55Z","author_association":"CONTRIBUTOR","body":"@leerho it is doing a version of sampling (but NOT event sampling) prior to sending to the sketch. Specifically the sketch is against ALL events in a specific sub-set of the data.\r\n\r\nBasically: Pick some qty of IDs. Assume that the IDs selected are a representative sample of the total population. Log all events from the IDs selected. Then sketches against the IDs should be fine for that sub-set with the knowledge that you can ONLY account for things happening in the sample population (ex: no or very very limited network effect analysis). \r\n\r\nThis tends to work pretty well for quick insights on big effects. The problem comes in when someone uses a simple `hash(id) % some_number` (or something that becomes effectively that) to determine if the ID should be part of the sample set AND a hll sketch uses the same hash fn with the same seed against `id`. An example of this is included in the unit tests.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/461595836/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/461597661","html_url":"https://github.com/apache/druid/pull/6865#issuecomment-461597661","issue_url":"https://api.github.com/repos/apache/druid/issues/6865","id":461597661,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MTU5NzY2MQ==","user":{"login":"drcrallen","id":8213081,"node_id":"MDQ6VXNlcjgyMTMwODE=","avatar_url":"https://avatars.githubusercontent.com/u/8213081?v=4","gravatar_id":"","url":"https://api.github.com/users/drcrallen","html_url":"https://github.com/drcrallen","followers_url":"https://api.github.com/users/drcrallen/followers","following_url":"https://api.github.com/users/drcrallen/following{/other_user}","gists_url":"https://api.github.com/users/drcrallen/gists{/gist_id}","starred_url":"https://api.github.com/users/drcrallen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/drcrallen/subscriptions","organizations_url":"https://api.github.com/users/drcrallen/orgs","repos_url":"https://api.github.com/users/drcrallen/repos","events_url":"https://api.github.com/users/drcrallen/events{/privacy}","received_events_url":"https://api.github.com/users/drcrallen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-07T21:12:51Z","updated_at":"2019-02-07T21:12:51Z","author_association":"CONTRIBUTOR","body":"@gianm I'm not convinced the results are always \"good\" in the absence of the error. Specifically, there are a number of \"bad\" ways to send in data that work contradictory to how a HLL sketch based on `Murmur_128(seed=0)` is intended to work. And not all of them will induce the kind of error presented here.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/461597661/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/461610511","html_url":"https://github.com/apache/druid/pull/7023#issuecomment-461610511","issue_url":"https://api.github.com/repos/apache/druid/issues/7023","id":461610511,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MTYxMDUxMQ==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-07T21:57:13Z","updated_at":"2019-02-07T21:57:13Z","author_association":"CONTRIBUTOR","body":"Added `Design Review` since it changes a PublicApi.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/461610511/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/461680212","html_url":"https://github.com/apache/druid/pull/6865#issuecomment-461680212","issue_url":"https://api.github.com/repos/apache/druid/issues/6865","id":461680212,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MTY4MDIxMg==","user":{"login":"leerho","id":12941506,"node_id":"MDQ6VXNlcjEyOTQxNTA2","avatar_url":"https://avatars.githubusercontent.com/u/12941506?v=4","gravatar_id":"","url":"https://api.github.com/users/leerho","html_url":"https://github.com/leerho","followers_url":"https://api.github.com/users/leerho/followers","following_url":"https://api.github.com/users/leerho/following{/other_user}","gists_url":"https://api.github.com/users/leerho/gists{/gist_id}","starred_url":"https://api.github.com/users/leerho/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leerho/subscriptions","organizations_url":"https://api.github.com/users/leerho/orgs","repos_url":"https://api.github.com/users/leerho/repos","events_url":"https://api.github.com/users/leerho/events{/privacy}","received_events_url":"https://api.github.com/users/leerho/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-08T03:38:52Z","updated_at":"2019-02-08T16:17:22Z","author_association":"CONTRIBUTOR","body":"@drcrallen \r\n\r\nI have several comments on your situation:\r\n\r\n- First of all, you are managing your own hash function that feeds the HLLC sketch.  This is a No No!  I had mentioned this to @gianm in #6814 recently and he assured me:\r\n\r\n> This isn't true in practice. The druid-hll library lets callers use any hash function, but Druid doesn't expose that to end users. It always uses `Hashing.murmur3_128()`\r\n\r\nThe sketch must do its own hashing preferably with its own hash function and with a private seed and users should not peek inside and use the same hash function with the same seed for  performing an upstream modulo sampling as you do in `testCanFillUpOnMod()`.    \r\n\r\nHLL sketches are stochastic functions that rely on good randomness properties of the hash function that are **independent** of the incoming data!  So by using the same exact hash function and the same seed in your mod function you are violating this independence property and all bets are off! \r\n\r\n- Nonetheless, what you also have uncovered is likely a bug.  I took your test and added the DataSketches HLL sketch in parallel inside the test.  I also added a few more outputs at the end and got these results:\r\n\r\n```\r\nFilled up registers after 3,918,870 random numbers\r\nCount: 19590\r\nHLLc Uniques: 0\r\nDS-HLL Uniques: 19169.299781\r\n```\r\n\r\nThe Count is the number of times a value is added to the sketch (at the bottom of the do loop). This is not the true number of uniques as there may be a few collisions amongst those 4M random numbers, but it was adequate for this experiment. \r\n\r\nThe Druid HLL shows a count of zero.  I did not debug this but perhaps by checking the NumNonZeroRegisters variable just when it hits zero, you are catching the sketch just before it transitions.  I am not sure, I am kinda surprised by this.\r\n\r\nThe DS-HLL shows a count of 19169 which is well within the error bounds of the sketch of that size.\r\n\r\n***\r\nAs for your suggested change, I'm really not sure what ultimate effect it will have. \r\n\r\nCheers\r\n\r\n\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/461680212/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/461693658","html_url":"https://github.com/apache/druid/pull/6865#issuecomment-461693658","issue_url":"https://api.github.com/repos/apache/druid/issues/6865","id":461693658,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MTY5MzY1OA==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-08T05:18:00Z","updated_at":"2019-02-08T05:18:00Z","author_association":"CONTRIBUTOR","body":"@drcrallen I’m trying to understand what the bug was. Is it that the old folding code assumed that a sketch with an overflow register set would always be dense? And your change is patching it to densify the buffer if it turned out to be sparse?\r\n\r\nIf so then the general idea looks good to me. It sounds like it’s fixing an implementation bug that isn’t likely to get triggered by a properly injected flow of data, but is still an implementation bug nonetheless.\r\n\r\nIt also sounds like the zero estimate @leerho noted might be pointing to a different bug of some sort, not related to the one this patch is fixing? You wouldn’t expect to get a zero estimate when there are nonzero registers, right?\r\n\r\nSeparately, a side note. Discussion of flaws in the design and implementation of existing Druid features is very useful and appreciated. But when choosing words, I’d ask to please be civil and considerate of the fact that in many cases, the original designers and implementers are still around and part of the community.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/461693658/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/461698372","html_url":"https://github.com/apache/druid/pull/6865#issuecomment-461698372","issue_url":"https://api.github.com/repos/apache/druid/issues/6865","id":461698372,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MTY5ODM3Mg==","user":{"login":"leerho","id":12941506,"node_id":"MDQ6VXNlcjEyOTQxNTA2","avatar_url":"https://avatars.githubusercontent.com/u/12941506?v=4","gravatar_id":"","url":"https://api.github.com/users/leerho","html_url":"https://github.com/leerho","followers_url":"https://api.github.com/users/leerho/followers","following_url":"https://api.github.com/users/leerho/following{/other_user}","gists_url":"https://api.github.com/users/leerho/gists{/gist_id}","starred_url":"https://api.github.com/users/leerho/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leerho/subscriptions","organizations_url":"https://api.github.com/users/leerho/orgs","repos_url":"https://api.github.com/users/leerho/repos","events_url":"https://api.github.com/users/leerho/events{/privacy}","received_events_url":"https://api.github.com/users/leerho/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-08T05:49:06Z","updated_at":"2019-02-08T05:49:06Z","author_association":"CONTRIBUTOR","body":"@gianm you are absolutely right and I apologize.  \r\nIt was late in the day and I get frustrated at keep having to return to debugging this code.  For my repentance I will dig in and figure out what is going on.  :)","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/461698372/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/461764415","html_url":"https://github.com/apache/druid/issues/7019#issuecomment-461764415","issue_url":"https://api.github.com/repos/apache/druid/issues/7019","id":461764415,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MTc2NDQxNQ==","user":{"login":"leventov","id":609240,"node_id":"MDQ6VXNlcjYwOTI0MA==","avatar_url":"https://avatars.githubusercontent.com/u/609240?v=4","gravatar_id":"","url":"https://api.github.com/users/leventov","html_url":"https://github.com/leventov","followers_url":"https://api.github.com/users/leventov/followers","following_url":"https://api.github.com/users/leventov/following{/other_user}","gists_url":"https://api.github.com/users/leventov/gists{/gist_id}","starred_url":"https://api.github.com/users/leventov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leventov/subscriptions","organizations_url":"https://api.github.com/users/leventov/orgs","repos_url":"https://api.github.com/users/leventov/repos","events_url":"https://api.github.com/users/leventov/events{/privacy}","received_events_url":"https://api.github.com/users/leventov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-08T10:50:56Z","updated_at":"2019-02-08T10:50:56Z","author_association":"MEMBER","body":"I'm not sure. I see this method is used in `AggregatorFactory.mergeAggregators()`, which is used in `CompactionTask`, and in some metadata-related tasks. I think documentation of `getMergingFactory()` and `AggregatorFactory.mergeAggregators()` could have explained the essence and the importance of this thing better.\r\n\r\n@gianm or @jihoonson could you please comment?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/461764415/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/461806978","html_url":"https://github.com/apache/druid/pull/6896#issuecomment-461806978","issue_url":"https://api.github.com/repos/apache/druid/issues/6896","id":461806978,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MTgwNjk3OA==","user":{"login":"maver1ck","id":4006010,"node_id":"MDQ6VXNlcjQwMDYwMTA=","avatar_url":"https://avatars.githubusercontent.com/u/4006010?v=4","gravatar_id":"","url":"https://api.github.com/users/maver1ck","html_url":"https://github.com/maver1ck","followers_url":"https://api.github.com/users/maver1ck/followers","following_url":"https://api.github.com/users/maver1ck/following{/other_user}","gists_url":"https://api.github.com/users/maver1ck/gists{/gist_id}","starred_url":"https://api.github.com/users/maver1ck/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/maver1ck/subscriptions","organizations_url":"https://api.github.com/users/maver1ck/orgs","repos_url":"https://api.github.com/users/maver1ck/repos","events_url":"https://api.github.com/users/maver1ck/events{/privacy}","received_events_url":"https://api.github.com/users/maver1ck/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-08T13:44:10Z","updated_at":"2019-02-08T13:44:10Z","author_association":"CONTRIBUTOR","body":"Are we planning to automatically build those images and push to dockerhub ?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/461806978/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/461834769","html_url":"https://github.com/apache/druid/pull/6896#issuecomment-461834769","issue_url":"https://api.github.com/repos/apache/druid/issues/6896","id":461834769,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MTgzNDc2OQ==","user":{"login":"donbowman","id":5131923,"node_id":"MDQ6VXNlcjUxMzE5MjM=","avatar_url":"https://avatars.githubusercontent.com/u/5131923?v=4","gravatar_id":"","url":"https://api.github.com/users/donbowman","html_url":"https://github.com/donbowman","followers_url":"https://api.github.com/users/donbowman/followers","following_url":"https://api.github.com/users/donbowman/following{/other_user}","gists_url":"https://api.github.com/users/donbowman/gists{/gist_id}","starred_url":"https://api.github.com/users/donbowman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/donbowman/subscriptions","organizations_url":"https://api.github.com/users/donbowman/orgs","repos_url":"https://api.github.com/users/donbowman/repos","events_url":"https://api.github.com/users/donbowman/events{/privacy}","received_events_url":"https://api.github.com/users/donbowman/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-08T15:14:06Z","updated_at":"2019-02-08T15:14:06Z","author_association":"CONTRIBUTOR","body":"@maver1ck see discussion on dev@druid.apache.org.\r\n\r\nMy vote is obviously yes.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/461834769/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/461891826","html_url":"https://github.com/apache/druid/pull/7023#issuecomment-461891826","issue_url":"https://api.github.com/repos/apache/druid/issues/7023","id":461891826,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MTg5MTgyNg==","user":{"login":"fjy","id":428325,"node_id":"MDQ6VXNlcjQyODMyNQ==","avatar_url":"https://avatars.githubusercontent.com/u/428325?v=4","gravatar_id":"","url":"https://api.github.com/users/fjy","html_url":"https://github.com/fjy","followers_url":"https://api.github.com/users/fjy/followers","following_url":"https://api.github.com/users/fjy/following{/other_user}","gists_url":"https://api.github.com/users/fjy/gists{/gist_id}","starred_url":"https://api.github.com/users/fjy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fjy/subscriptions","organizations_url":"https://api.github.com/users/fjy/orgs","repos_url":"https://api.github.com/users/fjy/repos","events_url":"https://api.github.com/users/fjy/events{/privacy}","received_events_url":"https://api.github.com/users/fjy/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-08T18:02:59Z","updated_at":"2019-02-08T18:02:59Z","author_association":"CONTRIBUTOR","body":"👍 ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/461891826/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/461913177","html_url":"https://github.com/apache/druid/issues/7039#issuecomment-461913177","issue_url":"https://api.github.com/repos/apache/druid/issues/7039","id":461913177,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MTkxMzE3Nw==","user":{"login":"peferron","id":7009852,"node_id":"MDQ6VXNlcjcwMDk4NTI=","avatar_url":"https://avatars.githubusercontent.com/u/7009852?v=4","gravatar_id":"","url":"https://api.github.com/users/peferron","html_url":"https://github.com/peferron","followers_url":"https://api.github.com/users/peferron/followers","following_url":"https://api.github.com/users/peferron/following{/other_user}","gists_url":"https://api.github.com/users/peferron/gists{/gist_id}","starred_url":"https://api.github.com/users/peferron/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/peferron/subscriptions","organizations_url":"https://api.github.com/users/peferron/orgs","repos_url":"https://api.github.com/users/peferron/repos","events_url":"https://api.github.com/users/peferron/events{/privacy}","received_events_url":"https://api.github.com/users/peferron/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-08T19:13:20Z","updated_at":"2019-02-08T19:15:44Z","author_association":"CONTRIBUTOR","body":"Do you mean that the Kafka messages themselves are compressed with gzip, either via a producer or broker configuration? If that's the case, then Druid can automatically handle decompression, just like most Kafka consumers. Try completely removing your `indexSpec` and giving it another shot.\r\n\r\n`dimensionCompression` and `metricCompression` inside the `indexSpec` do not refer to how Druid decompresses messages from Kafka—they refer to how Druid compresses dimension and metric columns *after* consuming messages from Kafka. Decompression speed is usually critical there, which is why the doc lists LZ4 and LZF as possible formats, but not gzip, which is comparatively slower.\r\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/461913177/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/461943061","html_url":"https://github.com/apache/druid/pull/6581#issuecomment-461943061","issue_url":"https://api.github.com/repos/apache/druid/issues/6581","id":461943061,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MTk0MzA2MQ==","user":{"login":"jon-wei","id":8729063,"node_id":"MDQ6VXNlcjg3MjkwNjM=","avatar_url":"https://avatars.githubusercontent.com/u/8729063?v=4","gravatar_id":"","url":"https://api.github.com/users/jon-wei","html_url":"https://github.com/jon-wei","followers_url":"https://api.github.com/users/jon-wei/followers","following_url":"https://api.github.com/users/jon-wei/following{/other_user}","gists_url":"https://api.github.com/users/jon-wei/gists{/gist_id}","starred_url":"https://api.github.com/users/jon-wei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jon-wei/subscriptions","organizations_url":"https://api.github.com/users/jon-wei/orgs","repos_url":"https://api.github.com/users/jon-wei/repos","events_url":"https://api.github.com/users/jon-wei/events{/privacy}","received_events_url":"https://api.github.com/users/jon-wei/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-08T20:52:49Z","updated_at":"2019-02-08T20:52:49Z","author_association":"CONTRIBUTOR","body":"@AlexanderSaydakov that sounds good, the 0.14.0 docs will try to move users away from ApproximateHistogram and the old Druid HLL","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/461943061/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/461968344","html_url":"https://github.com/apache/druid/pull/6349#issuecomment-461968344","issue_url":"https://api.github.com/repos/apache/druid/issues/6349","id":461968344,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MTk2ODM0NA==","user":{"login":"clintropolis","id":1577461,"node_id":"MDQ6VXNlcjE1Nzc0NjE=","avatar_url":"https://avatars.githubusercontent.com/u/1577461?v=4","gravatar_id":"","url":"https://api.github.com/users/clintropolis","html_url":"https://github.com/clintropolis","followers_url":"https://api.github.com/users/clintropolis/followers","following_url":"https://api.github.com/users/clintropolis/following{/other_user}","gists_url":"https://api.github.com/users/clintropolis/gists{/gist_id}","starred_url":"https://api.github.com/users/clintropolis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintropolis/subscriptions","organizations_url":"https://api.github.com/users/clintropolis/orgs","repos_url":"https://api.github.com/users/clintropolis/repos","events_url":"https://api.github.com/users/clintropolis/events{/privacy}","received_events_url":"https://api.github.com/users/clintropolis/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-08T22:26:35Z","updated_at":"2019-02-08T22:26:35Z","author_association":"MEMBER","body":"@glasser I think that would be a useful follow up, I like the 2nd approach better myself since it could be done without first fetching the config and presumably you already know the host you want to add to the list. It would also lend itself to something like adding an http endpoint directly to the historical servers that could be used to have them add themselves to the maintenance list, similar in spirit to what `/druid/worker/v1/enable` and `/druid/worker/v1/disable` provide for middle managers.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/461968344/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/461970799","html_url":"https://github.com/apache/druid/pull/7031#issuecomment-461970799","issue_url":"https://api.github.com/repos/apache/druid/issues/7031","id":461970799,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MTk3MDc5OQ==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-08T22:36:28Z","updated_at":"2019-02-08T22:36:28Z","author_association":"CONTRIBUTOR","body":"@Dylan1312 thanks for the PR! I think this makes sense, but it would be worth to talk about this in dev first. What do you think?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/461970799/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/461970893","html_url":"https://github.com/apache/druid/pull/7031#issuecomment-461970893","issue_url":"https://api.github.com/repos/apache/druid/issues/7031","id":461970893,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MTk3MDg5Mw==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-08T22:36:50Z","updated_at":"2019-02-08T22:36:50Z","author_association":"CONTRIBUTOR","body":"Also, the CI failure looks legit. The license check failed. ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/461970893/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/461978075","html_url":"https://github.com/apache/druid/issues/5111#issuecomment-461978075","issue_url":"https://api.github.com/repos/apache/druid/issues/5111","id":461978075,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MTk3ODA3NQ==","user":{"login":"justinborromeo","id":9417701,"node_id":"MDQ6VXNlcjk0MTc3MDE=","avatar_url":"https://avatars.githubusercontent.com/u/9417701?v=4","gravatar_id":"","url":"https://api.github.com/users/justinborromeo","html_url":"https://github.com/justinborromeo","followers_url":"https://api.github.com/users/justinborromeo/followers","following_url":"https://api.github.com/users/justinborromeo/following{/other_user}","gists_url":"https://api.github.com/users/justinborromeo/gists{/gist_id}","starred_url":"https://api.github.com/users/justinborromeo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/justinborromeo/subscriptions","organizations_url":"https://api.github.com/users/justinborromeo/orgs","repos_url":"https://api.github.com/users/justinborromeo/repos","events_url":"https://api.github.com/users/justinborromeo/events{/privacy}","received_events_url":"https://api.github.com/users/justinborromeo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-08T23:08:49Z","updated_at":"2019-02-08T23:08:49Z","author_association":"CONTRIBUTOR","body":"Is ++ a valid operator in any case?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/461978075/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/461979864","html_url":"https://github.com/apache/druid/issues/5111#issuecomment-461979864","issue_url":"https://api.github.com/repos/apache/druid/issues/5111","id":461979864,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MTk3OTg2NA==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-08T23:17:39Z","updated_at":"2019-02-08T23:17:45Z","author_association":"CONTRIBUTOR","body":"I'm not sure, but no matter what, it shouldn't make a NullPointerException. (It should either report that `++` isn't a valid operator, or it should do something useful with it.)","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/461979864/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/461984288","html_url":"https://github.com/apache/druid/issues/7016#issuecomment-461984288","issue_url":"https://api.github.com/repos/apache/druid/issues/7016","id":461984288,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MTk4NDI4OA==","user":{"login":"surekhasaharan","id":13008746,"node_id":"MDQ6VXNlcjEzMDA4NzQ2","avatar_url":"https://avatars.githubusercontent.com/u/13008746?v=4","gravatar_id":"","url":"https://api.github.com/users/surekhasaharan","html_url":"https://github.com/surekhasaharan","followers_url":"https://api.github.com/users/surekhasaharan/followers","following_url":"https://api.github.com/users/surekhasaharan/following{/other_user}","gists_url":"https://api.github.com/users/surekhasaharan/gists{/gist_id}","starred_url":"https://api.github.com/users/surekhasaharan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/surekhasaharan/subscriptions","organizations_url":"https://api.github.com/users/surekhasaharan/orgs","repos_url":"https://api.github.com/users/surekhasaharan/repos","events_url":"https://api.github.com/users/surekhasaharan/events{/privacy}","received_events_url":"https://api.github.com/users/surekhasaharan/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-08T23:40:32Z","updated_at":"2019-02-08T23:40:32Z","author_association":"NONE","body":"To get rowStats attributes of a task, the overlord api is documented [here](http://druid.io/docs/latest/ingestion/reports.html). In order to get rowStats for each task, we'll have to make a call to this api per task as part of the query. This could potentially slow down retrieval of tasks substantially because it would introduce a network hop for each task. We can speed up the queries by adding a cache, but not sure if it's worth the memory cost, the cache might add.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/461984288/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/462005259","html_url":"https://github.com/apache/druid/pull/7015#issuecomment-462005259","issue_url":"https://api.github.com/repos/apache/druid/issues/7015","id":462005259,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MjAwNTI1OQ==","user":{"login":"jon-wei","id":8729063,"node_id":"MDQ6VXNlcjg3MjkwNjM=","avatar_url":"https://avatars.githubusercontent.com/u/8729063?v=4","gravatar_id":"","url":"https://api.github.com/users/jon-wei","html_url":"https://github.com/jon-wei","followers_url":"https://api.github.com/users/jon-wei/followers","following_url":"https://api.github.com/users/jon-wei/following{/other_user}","gists_url":"https://api.github.com/users/jon-wei/gists{/gist_id}","starred_url":"https://api.github.com/users/jon-wei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jon-wei/subscriptions","organizations_url":"https://api.github.com/users/jon-wei/orgs","repos_url":"https://api.github.com/users/jon-wei/repos","events_url":"https://api.github.com/users/jon-wei/events{/privacy}","received_events_url":"https://api.github.com/users/jon-wei/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-09T02:26:34Z","updated_at":"2019-02-09T02:26:34Z","author_association":"CONTRIBUTOR","body":"@ankit0811 thanks for the fix!","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/462005259/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/462022295","html_url":"https://github.com/apache/druid/issues/6989#issuecomment-462022295","issue_url":"https://api.github.com/repos/apache/druid/issues/6989","id":462022295,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MjAyMjI5NQ==","user":{"login":"glasser","id":16724,"node_id":"MDQ6VXNlcjE2NzI0","avatar_url":"https://avatars.githubusercontent.com/u/16724?v=4","gravatar_id":"","url":"https://api.github.com/users/glasser","html_url":"https://github.com/glasser","followers_url":"https://api.github.com/users/glasser/followers","following_url":"https://api.github.com/users/glasser/following{/other_user}","gists_url":"https://api.github.com/users/glasser/gists{/gist_id}","starred_url":"https://api.github.com/users/glasser/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/glasser/subscriptions","organizations_url":"https://api.github.com/users/glasser/orgs","repos_url":"https://api.github.com/users/glasser/repos","events_url":"https://api.github.com/users/glasser/events{/privacy}","received_events_url":"https://api.github.com/users/glasser/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-09T07:36:27Z","updated_at":"2019-02-09T07:36:27Z","author_association":"CONTRIBUTOR","body":"I started! Another question about locking. In allocateNewSegment there's this comment:\r\n\r\n> List locks whenever allocating a new segment because locks might be revoked and no longer valid.\r\n\r\nBut if I am reading the implementation of TaskLockbox and LockListAction correctly, revoked locks will show up in the response to a LockListAction.  Should that stream have a `filter(taskLock -> !taskLock.isRevoked())` in it? Otherwise you might as well just remember the TaskLocks that were set up in isReady.\r\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/462022295/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/462025060","html_url":"https://github.com/apache/druid/pull/7046#issuecomment-462025060","issue_url":"https://api.github.com/repos/apache/druid/issues/7046","id":462025060,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MjAyNTA2MA==","user":{"login":"glasser","id":16724,"node_id":"MDQ6VXNlcjE2NzI0","avatar_url":"https://avatars.githubusercontent.com/u/16724?v=4","gravatar_id":"","url":"https://api.github.com/users/glasser","html_url":"https://github.com/glasser","followers_url":"https://api.github.com/users/glasser/followers","following_url":"https://api.github.com/users/glasser/following{/other_user}","gists_url":"https://api.github.com/users/glasser/gists{/gist_id}","starred_url":"https://api.github.com/users/glasser/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/glasser/subscriptions","organizations_url":"https://api.github.com/users/glasser/orgs","repos_url":"https://api.github.com/users/glasser/repos","events_url":"https://api.github.com/users/glasser/events{/privacy}","received_events_url":"https://api.github.com/users/glasser/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-09T08:25:30Z","updated_at":"2019-02-09T08:25:30Z","author_association":"CONTRIBUTOR","body":"Work in progress.\r\n\r\nI need to figure out how to effectively run the integration test suite and add to ITParallelIndexTest a second ingestion that replaces segments from the first ingestion.  (It's unclear to me how I can use mvn to run the integration-tests while skipping unit tests (some of which fail due to requiring S3 credentials etc, and which are just slow), and while I got `./run_cluster.sh` to work, I can't figure out how to get IntelliJ to connect to it.)","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/462025060/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/462037218","html_url":"https://github.com/apache/druid/pull/6349#issuecomment-462037218","issue_url":"https://api.github.com/repos/apache/druid/issues/6349","id":462037218,"node_id":"MDEyOklzc3VlQ29tbWVudDQ2MjAzNzIxOA==","user":{"login":"egor-ryashin","id":14215045,"node_id":"MDQ6VXNlcjE0MjE1MDQ1","avatar_url":"https://avatars.githubusercontent.com/u/14215045?v=4","gravatar_id":"","url":"https://api.github.com/users/egor-ryashin","html_url":"https://github.com/egor-ryashin","followers_url":"https://api.github.com/users/egor-ryashin/followers","following_url":"https://api.github.com/users/egor-ryashin/following{/other_user}","gists_url":"https://api.github.com/users/egor-ryashin/gists{/gist_id}","starred_url":"https://api.github.com/users/egor-ryashin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/egor-ryashin/subscriptions","organizations_url":"https://api.github.com/users/egor-ryashin/orgs","repos_url":"https://api.github.com/users/egor-ryashin/repos","events_url":"https://api.github.com/users/egor-ryashin/events{/privacy}","received_events_url":"https://api.github.com/users/egor-ryashin/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-02-09T11:40:17Z","updated_at":"2019-02-09T11:40:17Z","author_association":"CONTRIBUTOR","body":"I have no argument as the PR is supposed to be an MVP. I plan to improve it after I thoroughly test it in production environment at least.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/462037218/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]