[{"url":"https://api.github.com/repos/apache/systemds/issues/comments/698613204","html_url":"https://github.com/apache/systemds/pull/1064#issuecomment-698613204","issue_url":"https://api.github.com/repos/apache/systemds/issues/1064","id":698613204,"node_id":"MDEyOklzc3VlQ29tbWVudDY5ODYxMzIwNA==","user":{"login":"phaniarnab","id":4302361,"node_id":"MDQ6VXNlcjQzMDIzNjE=","avatar_url":"https://avatars.githubusercontent.com/u/4302361?v=4","gravatar_id":"","url":"https://api.github.com/users/phaniarnab","html_url":"https://github.com/phaniarnab","followers_url":"https://api.github.com/users/phaniarnab/followers","following_url":"https://api.github.com/users/phaniarnab/following{/other_user}","gists_url":"https://api.github.com/users/phaniarnab/gists{/gist_id}","starred_url":"https://api.github.com/users/phaniarnab/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/phaniarnab/subscriptions","organizations_url":"https://api.github.com/users/phaniarnab/orgs","repos_url":"https://api.github.com/users/phaniarnab/repos","events_url":"https://api.github.com/users/phaniarnab/events{/privacy}","received_events_url":"https://api.github.com/users/phaniarnab/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-24T22:05:38Z","updated_at":"2020-09-24T22:05:38Z","author_association":"CONTRIBUTOR","body":"Currently running experiments to confirm that 1) these changes don't add any compute or memory overhead, and 2)  reuse always works with deduplication. Till now results look promising.\r\nIn any case, this PR will be merged after 2.0 release.","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/698613204/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/698890649","html_url":"https://github.com/apache/systemds/pull/1062#issuecomment-698890649","issue_url":"https://api.github.com/repos/apache/systemds/issues/1062","id":698890649,"node_id":"MDEyOklzc3VlQ29tbWVudDY5ODg5MDY0OQ==","user":{"login":"kev-inn","id":41760497,"node_id":"MDQ6VXNlcjQxNzYwNDk3","avatar_url":"https://avatars.githubusercontent.com/u/41760497?v=4","gravatar_id":"","url":"https://api.github.com/users/kev-inn","html_url":"https://github.com/kev-inn","followers_url":"https://api.github.com/users/kev-inn/followers","following_url":"https://api.github.com/users/kev-inn/following{/other_user}","gists_url":"https://api.github.com/users/kev-inn/gists{/gist_id}","starred_url":"https://api.github.com/users/kev-inn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kev-inn/subscriptions","organizations_url":"https://api.github.com/users/kev-inn/orgs","repos_url":"https://api.github.com/users/kev-inn/repos","events_url":"https://api.github.com/users/kev-inn/events{/privacy}","received_events_url":"https://api.github.com/users/kev-inn/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-25T12:04:07Z","updated_at":"2020-09-25T12:04:52Z","author_association":"CONTRIBUTOR","body":"@sebwrede could you take a look at the new r/cbind tests? I believe you used it to check transfer privacy constraints, but the fixed rbind and cbind should not transfer (except when writing result to disk), so maybe a simple write test would suffice.\r\nEdit: `FederatedWorkerHandlerTest` fails due to changes","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/698890649/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/698947363","html_url":"https://github.com/apache/systemds/pull/1062#issuecomment-698947363","issue_url":"https://api.github.com/repos/apache/systemds/issues/1062","id":698947363,"node_id":"MDEyOklzc3VlQ29tbWVudDY5ODk0NzM2Mw==","user":{"login":"sebwrede","id":32260341,"node_id":"MDQ6VXNlcjMyMjYwMzQx","avatar_url":"https://avatars.githubusercontent.com/u/32260341?v=4","gravatar_id":"","url":"https://api.github.com/users/sebwrede","html_url":"https://github.com/sebwrede","followers_url":"https://api.github.com/users/sebwrede/followers","following_url":"https://api.github.com/users/sebwrede/following{/other_user}","gists_url":"https://api.github.com/users/sebwrede/gists{/gist_id}","starred_url":"https://api.github.com/users/sebwrede/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sebwrede/subscriptions","organizations_url":"https://api.github.com/users/sebwrede/orgs","repos_url":"https://api.github.com/users/sebwrede/repos","events_url":"https://api.github.com/users/sebwrede/events{/privacy}","received_events_url":"https://api.github.com/users/sebwrede/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-25T14:02:46Z","updated_at":"2020-09-25T14:02:46Z","author_association":"CONTRIBUTOR","body":"> @sebwrede could you take a look at the new r/cbind tests? I believe you used it to check transfer privacy constraints, but the fixed rbind and cbind should not transfer (except when writing result to disk), so maybe a simple write test would suffice.\r\n> Edit: `FederatedWorkerHandlerTest` fails due to changes\r\n\r\nYes, the tests are failing right now because the arguments given are not correct anymore. As you say, they do not even transfer anything anymore, so they are not really relevant to put in a FederatedWorkerHandler test. The test was more relevant when we had the different instructions handled separately on the worker side. Furthermore, I will soon make a PR that changes the way privacy constraints are propagated for RBind and CBind. \r\nWith this in mind, I think we could actually remove or at least ignore the privacy tests that are using CBind and RBind in FederatedWorkerHandlerTest.java. ","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/698947363/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/699659190","html_url":"https://github.com/apache/systemds/pull/1068#issuecomment-699659190","issue_url":"https://api.github.com/repos/apache/systemds/issues/1068","id":699659190,"node_id":"MDEyOklzc3VlQ29tbWVudDY5OTY1OTE5MA==","user":{"login":"j143","id":53068787,"node_id":"MDQ6VXNlcjUzMDY4Nzg3","avatar_url":"https://avatars.githubusercontent.com/u/53068787?v=4","gravatar_id":"","url":"https://api.github.com/users/j143","html_url":"https://github.com/j143","followers_url":"https://api.github.com/users/j143/followers","following_url":"https://api.github.com/users/j143/following{/other_user}","gists_url":"https://api.github.com/users/j143/gists{/gist_id}","starred_url":"https://api.github.com/users/j143/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/j143/subscriptions","organizations_url":"https://api.github.com/users/j143/orgs","repos_url":"https://api.github.com/users/j143/repos","events_url":"https://api.github.com/users/j143/events{/privacy}","received_events_url":"https://api.github.com/users/j143/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-27T16:50:08Z","updated_at":"2020-09-29T03:07:21Z","author_association":"CONTRIBUTOR","body":"**Review summary:**\r\n[Live](https://j143.github.io/systemds/site/algorithms-reference)\r\n\r\nItems to review:\r\n\r\n- [x] Latex syntax\r\n- [ ] Content correctness\r\n- [ ] Content flow\r\n\r\n---\r\n\r\n- [x] Descriptive statistics\r\n- [x] Classification\r\n- [x] Clustering\r\n---\r\n- [x] Regression\r\n- [x] Matrix Factorization\r\n---\r\n- [x] Survival Analysis\r\n- [x] Factorization machines","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/699659190/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/700047212","html_url":"https://github.com/apache/systemds/pull/1066#issuecomment-700047212","issue_url":"https://api.github.com/repos/apache/systemds/issues/1066","id":700047212,"node_id":"MDEyOklzc3VlQ29tbWVudDcwMDA0NzIxMg==","user":{"login":"sebwrede","id":32260341,"node_id":"MDQ6VXNlcjMyMjYwMzQx","avatar_url":"https://avatars.githubusercontent.com/u/32260341?v=4","gravatar_id":"","url":"https://api.github.com/users/sebwrede","html_url":"https://github.com/sebwrede","followers_url":"https://api.github.com/users/sebwrede/followers","following_url":"https://api.github.com/users/sebwrede/following{/other_user}","gists_url":"https://api.github.com/users/sebwrede/gists{/gist_id}","starred_url":"https://api.github.com/users/sebwrede/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sebwrede/subscriptions","organizations_url":"https://api.github.com/users/sebwrede/orgs","repos_url":"https://api.github.com/users/sebwrede/repos","events_url":"https://api.github.com/users/sebwrede/events{/privacy}","received_events_url":"https://api.github.com/users/sebwrede/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-28T14:34:15Z","updated_at":"2020-09-28T14:34:15Z","author_association":"CONTRIBUTOR","body":"The following exception has been fixed: \r\n\r\n> The CBind and RBind propagation results in an exception in tests where privacy constraints are activated in the input:\r\n`Exception : class org.apache.sysds.runtime.DMLRuntimeException\r\nMessage   : CacheableData (1055096410 ...8.0.102//_t0/temp0_0) not available to modify. Status = READ.`\r\nThis needs to be fixed before this PR can be marked as ready for merge. \r\nAdditionally, more integration tests are needed for CBind, ListAppend, and ListRemove. ","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/700047212/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/700187196","html_url":"https://github.com/apache/systemds/pull/1066#issuecomment-700187196","issue_url":"https://api.github.com/repos/apache/systemds/issues/1066","id":700187196,"node_id":"MDEyOklzc3VlQ29tbWVudDcwMDE4NzE5Ng==","user":{"login":"sebwrede","id":32260341,"node_id":"MDQ6VXNlcjMyMjYwMzQx","avatar_url":"https://avatars.githubusercontent.com/u/32260341?v=4","gravatar_id":"","url":"https://api.github.com/users/sebwrede","html_url":"https://github.com/sebwrede","followers_url":"https://api.github.com/users/sebwrede/followers","following_url":"https://api.github.com/users/sebwrede/following{/other_user}","gists_url":"https://api.github.com/users/sebwrede/gists{/gist_id}","starred_url":"https://api.github.com/users/sebwrede/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sebwrede/subscriptions","organizations_url":"https://api.github.com/users/sebwrede/orgs","repos_url":"https://api.github.com/users/sebwrede/repos","events_url":"https://api.github.com/users/sebwrede/events{/privacy}","received_events_url":"https://api.github.com/users/sebwrede/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-28T17:51:35Z","updated_at":"2020-09-28T17:51:35Z","author_association":"CONTRIBUTOR","body":"ListAppend propagation tests are ignored since list objects cannot be written to file.","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/700187196/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/700399125","html_url":"https://github.com/apache/systemds/pull/1068#issuecomment-700399125","issue_url":"https://api.github.com/repos/apache/systemds/issues/1068","id":700399125,"node_id":"MDEyOklzc3VlQ29tbWVudDcwMDM5OTEyNQ==","user":{"login":"j143","id":53068787,"node_id":"MDQ6VXNlcjUzMDY4Nzg3","avatar_url":"https://avatars.githubusercontent.com/u/53068787?v=4","gravatar_id":"","url":"https://api.github.com/users/j143","html_url":"https://github.com/j143","followers_url":"https://api.github.com/users/j143/followers","following_url":"https://api.github.com/users/j143/following{/other_user}","gists_url":"https://api.github.com/users/j143/gists{/gist_id}","starred_url":"https://api.github.com/users/j143/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/j143/subscriptions","organizations_url":"https://api.github.com/users/j143/orgs","repos_url":"https://api.github.com/users/j143/repos","events_url":"https://api.github.com/users/j143/events{/privacy}","received_events_url":"https://api.github.com/users/j143/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-29T03:10:16Z","updated_at":"2020-09-29T03:10:34Z","author_association":"CONTRIBUTOR","body":"Hi @Baunsgaard - I have made some minor changes and pushed to my [`master`](https://github.com/j143/systemds/tree/master) branch. (above comment)\r\n\r\nFew things before merging:\r\n1. Let us decide about the content width for markdown edits laterally.\r\n2. Consideration to tex rendering. ","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/700399125/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/700664117","html_url":"https://github.com/apache/systemds/pull/1068#issuecomment-700664117","issue_url":"https://api.github.com/repos/apache/systemds/issues/1068","id":700664117,"node_id":"MDEyOklzc3VlQ29tbWVudDcwMDY2NDExNw==","user":{"login":"Baunsgaard","id":9947148,"node_id":"MDQ6VXNlcjk5NDcxNDg=","avatar_url":"https://avatars.githubusercontent.com/u/9947148?v=4","gravatar_id":"","url":"https://api.github.com/users/Baunsgaard","html_url":"https://github.com/Baunsgaard","followers_url":"https://api.github.com/users/Baunsgaard/followers","following_url":"https://api.github.com/users/Baunsgaard/following{/other_user}","gists_url":"https://api.github.com/users/Baunsgaard/gists{/gist_id}","starred_url":"https://api.github.com/users/Baunsgaard/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Baunsgaard/subscriptions","organizations_url":"https://api.github.com/users/Baunsgaard/orgs","repos_url":"https://api.github.com/users/Baunsgaard/repos","events_url":"https://api.github.com/users/Baunsgaard/events{/privacy}","received_events_url":"https://api.github.com/users/Baunsgaard/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-29T12:18:11Z","updated_at":"2020-09-29T12:18:11Z","author_association":"CONTRIBUTOR","body":"i tried to make it consistent at least in the text how wide it is,\r\nthe tables them selves and equations are harder to make a consistent width.\r\n\r\nDo you intend me to merge what you have on your master?","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/700664117/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/700666199","html_url":"https://github.com/apache/systemds/pull/1072#issuecomment-700666199","issue_url":"https://api.github.com/repos/apache/systemds/issues/1072","id":700666199,"node_id":"MDEyOklzc3VlQ29tbWVudDcwMDY2NjE5OQ==","user":{"login":"Baunsgaard","id":9947148,"node_id":"MDQ6VXNlcjk5NDcxNDg=","avatar_url":"https://avatars.githubusercontent.com/u/9947148?v=4","gravatar_id":"","url":"https://api.github.com/users/Baunsgaard","html_url":"https://github.com/Baunsgaard","followers_url":"https://api.github.com/users/Baunsgaard/followers","following_url":"https://api.github.com/users/Baunsgaard/following{/other_user}","gists_url":"https://api.github.com/users/Baunsgaard/gists{/gist_id}","starred_url":"https://api.github.com/users/Baunsgaard/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Baunsgaard/subscriptions","organizations_url":"https://api.github.com/users/Baunsgaard/orgs","repos_url":"https://api.github.com/users/Baunsgaard/repos","events_url":"https://api.github.com/users/Baunsgaard/events{/privacy}","received_events_url":"https://api.github.com/users/Baunsgaard/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-29T12:22:25Z","updated_at":"2020-09-29T12:22:45Z","author_association":"CONTRIBUTOR","body":"Hi @j143, this does not work once you go into any sub-page,\r\nsince each of the links refer to relative paths from where you are.\r\n\r\nThis means that from the main page it links correctly, from lets say DML Language Reference it does not.\r\n","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/700666199/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/700673332","html_url":"https://github.com/apache/systemds/pull/1062#issuecomment-700673332","issue_url":"https://api.github.com/repos/apache/systemds/issues/1062","id":700673332,"node_id":"MDEyOklzc3VlQ29tbWVudDcwMDY3MzMzMg==","user":{"login":"Baunsgaard","id":9947148,"node_id":"MDQ6VXNlcjk5NDcxNDg=","avatar_url":"https://avatars.githubusercontent.com/u/9947148?v=4","gravatar_id":"","url":"https://api.github.com/users/Baunsgaard","html_url":"https://github.com/Baunsgaard","followers_url":"https://api.github.com/users/Baunsgaard/followers","following_url":"https://api.github.com/users/Baunsgaard/following{/other_user}","gists_url":"https://api.github.com/users/Baunsgaard/gists{/gist_id}","starred_url":"https://api.github.com/users/Baunsgaard/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Baunsgaard/subscriptions","organizations_url":"https://api.github.com/users/Baunsgaard/orgs","repos_url":"https://api.github.com/users/Baunsgaard/repos","events_url":"https://api.github.com/users/Baunsgaard/events{/privacy}","received_events_url":"https://api.github.com/users/Baunsgaard/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-29T12:36:39Z","updated_at":"2020-09-29T12:36:39Z","author_association":"CONTRIBUTOR","body":"used closing instead of closes... in the merge...\r\nbut this is merged to master therefore i'm closing it.","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/700673332/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/700683655","html_url":"https://github.com/apache/systemds/pull/1047#issuecomment-700683655","issue_url":"https://api.github.com/repos/apache/systemds/issues/1047","id":700683655,"node_id":"MDEyOklzc3VlQ29tbWVudDcwMDY4MzY1NQ==","user":{"login":"Baunsgaard","id":9947148,"node_id":"MDQ6VXNlcjk5NDcxNDg=","avatar_url":"https://avatars.githubusercontent.com/u/9947148?v=4","gravatar_id":"","url":"https://api.github.com/users/Baunsgaard","html_url":"https://github.com/Baunsgaard","followers_url":"https://api.github.com/users/Baunsgaard/followers","following_url":"https://api.github.com/users/Baunsgaard/following{/other_user}","gists_url":"https://api.github.com/users/Baunsgaard/gists{/gist_id}","starred_url":"https://api.github.com/users/Baunsgaard/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Baunsgaard/subscriptions","organizations_url":"https://api.github.com/users/Baunsgaard/orgs","repos_url":"https://api.github.com/users/Baunsgaard/repos","events_url":"https://api.github.com/users/Baunsgaard/events{/privacy}","received_events_url":"https://api.github.com/users/Baunsgaard/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-29T12:55:56Z","updated_at":"2020-09-29T12:55:56Z","author_association":"CONTRIBUTOR","body":"PR, on hold since we haven't found the perfect setup, and therefore the optimization is invalid, since it disables debugging.","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/700683655/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/700715439","html_url":"https://github.com/apache/systemds/pull/1068#issuecomment-700715439","issue_url":"https://api.github.com/repos/apache/systemds/issues/1068","id":700715439,"node_id":"MDEyOklzc3VlQ29tbWVudDcwMDcxNTQzOQ==","user":{"login":"j143","id":53068787,"node_id":"MDQ6VXNlcjUzMDY4Nzg3","avatar_url":"https://avatars.githubusercontent.com/u/53068787?v=4","gravatar_id":"","url":"https://api.github.com/users/j143","html_url":"https://github.com/j143","followers_url":"https://api.github.com/users/j143/followers","following_url":"https://api.github.com/users/j143/following{/other_user}","gists_url":"https://api.github.com/users/j143/gists{/gist_id}","starred_url":"https://api.github.com/users/j143/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/j143/subscriptions","organizations_url":"https://api.github.com/users/j143/orgs","repos_url":"https://api.github.com/users/j143/repos","events_url":"https://api.github.com/users/j143/events{/privacy}","received_events_url":"https://api.github.com/users/j143/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-29T13:47:22Z","updated_at":"2020-09-29T13:47:22Z","author_association":"CONTRIBUTOR","body":"Hi @Baunsgaard\r\n\r\n> Do you intend me to merge what you have on your master?\r\n\r\nYes, If possible can you take in my master branch and apply the commit appropriately.","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/700715439/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/700717507","html_url":"https://github.com/apache/systemds/pull/1072#issuecomment-700717507","issue_url":"https://api.github.com/repos/apache/systemds/issues/1072","id":700717507,"node_id":"MDEyOklzc3VlQ29tbWVudDcwMDcxNzUwNw==","user":{"login":"j143","id":53068787,"node_id":"MDQ6VXNlcjUzMDY4Nzg3","avatar_url":"https://avatars.githubusercontent.com/u/53068787?v=4","gravatar_id":"","url":"https://api.github.com/users/j143","html_url":"https://github.com/j143","followers_url":"https://api.github.com/users/j143/followers","following_url":"https://api.github.com/users/j143/following{/other_user}","gists_url":"https://api.github.com/users/j143/gists{/gist_id}","starred_url":"https://api.github.com/users/j143/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/j143/subscriptions","organizations_url":"https://api.github.com/users/j143/orgs","repos_url":"https://api.github.com/users/j143/repos","events_url":"https://api.github.com/users/j143/events{/privacy}","received_events_url":"https://api.github.com/users/j143/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-29T13:50:14Z","updated_at":"2020-09-29T13:50:14Z","author_association":"CONTRIBUTOR","body":"> this does not work once you go into any sub-page,\r\n> since each of the links refer to relative paths from where you are.\r\n\r\nIs it possible to correct the links based on how you intend the website to deploy. Can you do that? Thanks.\r\n\r\ncc @Baunsgaard ","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/700717507/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/701463735","html_url":"https://github.com/apache/systemds/pull/1072#issuecomment-701463735","issue_url":"https://api.github.com/repos/apache/systemds/issues/1072","id":701463735,"node_id":"MDEyOklzc3VlQ29tbWVudDcwMTQ2MzczNQ==","user":{"login":"Baunsgaard","id":9947148,"node_id":"MDQ6VXNlcjk5NDcxNDg=","avatar_url":"https://avatars.githubusercontent.com/u/9947148?v=4","gravatar_id":"","url":"https://api.github.com/users/Baunsgaard","html_url":"https://github.com/Baunsgaard","followers_url":"https://api.github.com/users/Baunsgaard/followers","following_url":"https://api.github.com/users/Baunsgaard/following{/other_user}","gists_url":"https://api.github.com/users/Baunsgaard/gists{/gist_id}","starred_url":"https://api.github.com/users/Baunsgaard/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Baunsgaard/subscriptions","organizations_url":"https://api.github.com/users/Baunsgaard/orgs","repos_url":"https://api.github.com/users/Baunsgaard/repos","events_url":"https://api.github.com/users/Baunsgaard/events{/privacy}","received_events_url":"https://api.github.com/users/Baunsgaard/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-30T15:26:13Z","updated_at":"2020-09-30T15:26:13Z","author_association":"CONTRIBUTOR","body":"thanks for the PR i have merged it now. I did some minor modifications such as adding an option to go back to the main overview page..","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/701463735/reactions","total_count":2,"+1":0,"-1":0,"laugh":1,"hooray":1,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/701465113","html_url":"https://github.com/apache/systemds/pull/1068#issuecomment-701465113","issue_url":"https://api.github.com/repos/apache/systemds/issues/1068","id":701465113,"node_id":"MDEyOklzc3VlQ29tbWVudDcwMTQ2NTExMw==","user":{"login":"Baunsgaard","id":9947148,"node_id":"MDQ6VXNlcjk5NDcxNDg=","avatar_url":"https://avatars.githubusercontent.com/u/9947148?v=4","gravatar_id":"","url":"https://api.github.com/users/Baunsgaard","html_url":"https://github.com/Baunsgaard","followers_url":"https://api.github.com/users/Baunsgaard/followers","following_url":"https://api.github.com/users/Baunsgaard/following{/other_user}","gists_url":"https://api.github.com/users/Baunsgaard/gists{/gist_id}","starred_url":"https://api.github.com/users/Baunsgaard/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Baunsgaard/subscriptions","organizations_url":"https://api.github.com/users/Baunsgaard/orgs","repos_url":"https://api.github.com/users/Baunsgaard/repos","events_url":"https://api.github.com/users/Baunsgaard/events{/privacy}","received_events_url":"https://api.github.com/users/Baunsgaard/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-09-30T15:28:26Z","updated_at":"2020-09-30T15:28:26Z","author_association":"CONTRIBUTOR","body":"Thanks for the review! and the edits!!\r\nBoth should now be on master. \r\nIt was a slightly more difficult merge since i had to get your edits from your master branch.\r\nThe way i ended up doing it was to make it as two separated commits.\r\nIf there is any issues and i made any errors dont hesitate to point these out :+1: .\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/701465113/reactions","total_count":1,"+1":0,"-1":0,"laugh":1,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/701931912","html_url":"https://github.com/apache/systemds/pull/1074#issuecomment-701931912","issue_url":"https://api.github.com/repos/apache/systemds/issues/1074","id":701931912,"node_id":"MDEyOklzc3VlQ29tbWVudDcwMTkzMTkxMg==","user":{"login":"phaniarnab","id":4302361,"node_id":"MDQ6VXNlcjQzMDIzNjE=","avatar_url":"https://avatars.githubusercontent.com/u/4302361?v=4","gravatar_id":"","url":"https://api.github.com/users/phaniarnab","html_url":"https://github.com/phaniarnab","followers_url":"https://api.github.com/users/phaniarnab/followers","following_url":"https://api.github.com/users/phaniarnab/following{/other_user}","gists_url":"https://api.github.com/users/phaniarnab/gists{/gist_id}","starred_url":"https://api.github.com/users/phaniarnab/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/phaniarnab/subscriptions","organizations_url":"https://api.github.com/users/phaniarnab/orgs","repos_url":"https://api.github.com/users/phaniarnab/repos","events_url":"https://api.github.com/users/phaniarnab/events{/privacy}","received_events_url":"https://api.github.com/users/phaniarnab/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-10-01T07:00:40Z","updated_at":"2020-10-01T07:00:40Z","author_association":"CONTRIBUTOR","body":"What will happen if the result is reused from lineage cache? \r\nI suggest a small test to check. You can enable lineage reuse by passing `-lineage reuse_full` option.","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/701931912/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/702181150","html_url":"https://github.com/apache/systemds/pull/1074#issuecomment-702181150","issue_url":"https://api.github.com/repos/apache/systemds/issues/1074","id":702181150,"node_id":"MDEyOklzc3VlQ29tbWVudDcwMjE4MTE1MA==","user":{"login":"sebwrede","id":32260341,"node_id":"MDQ6VXNlcjMyMjYwMzQx","avatar_url":"https://avatars.githubusercontent.com/u/32260341?v=4","gravatar_id":"","url":"https://api.github.com/users/sebwrede","html_url":"https://github.com/sebwrede","followers_url":"https://api.github.com/users/sebwrede/followers","following_url":"https://api.github.com/users/sebwrede/following{/other_user}","gists_url":"https://api.github.com/users/sebwrede/gists{/gist_id}","starred_url":"https://api.github.com/users/sebwrede/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sebwrede/subscriptions","organizations_url":"https://api.github.com/users/sebwrede/orgs","repos_url":"https://api.github.com/users/sebwrede/repos","events_url":"https://api.github.com/users/sebwrede/events{/privacy}","received_events_url":"https://api.github.com/users/sebwrede/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-10-01T14:38:45Z","updated_at":"2020-10-01T14:38:45Z","author_association":"CONTRIBUTOR","body":"I have now added a test and put the postprocessing of privacy constraints outside the lineage cache if-block in ProgramBlock. In this way, the privacy constraints will be propagated even if the result has been read from the cache. \r\nI needed to add a few lines which is also a part of [another pending PR](https://github.com/apache/systemds/pull/1066) to propagate the fine-grained constraints and to release matrix input. ","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/702181150/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/702183627","html_url":"https://github.com/apache/systemds/pull/1074#issuecomment-702183627","issue_url":"https://api.github.com/repos/apache/systemds/issues/1074","id":702183627,"node_id":"MDEyOklzc3VlQ29tbWVudDcwMjE4MzYyNw==","user":{"login":"phaniarnab","id":4302361,"node_id":"MDQ6VXNlcjQzMDIzNjE=","avatar_url":"https://avatars.githubusercontent.com/u/4302361?v=4","gravatar_id":"","url":"https://api.github.com/users/phaniarnab","html_url":"https://github.com/phaniarnab","followers_url":"https://api.github.com/users/phaniarnab/followers","following_url":"https://api.github.com/users/phaniarnab/following{/other_user}","gists_url":"https://api.github.com/users/phaniarnab/gists{/gist_id}","starred_url":"https://api.github.com/users/phaniarnab/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/phaniarnab/subscriptions","organizations_url":"https://api.github.com/users/phaniarnab/orgs","repos_url":"https://api.github.com/users/phaniarnab/repos","events_url":"https://api.github.com/users/phaniarnab/events{/privacy}","received_events_url":"https://api.github.com/users/phaniarnab/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-10-01T14:42:24Z","updated_at":"2020-10-01T14:42:24Z","author_association":"CONTRIBUTOR","body":"Thanks. Looks good. 🦾 \r\nLGTM (if all the tests pass).","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/702183627/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/706074537","html_url":"https://github.com/apache/systemds/pull/1070#issuecomment-706074537","issue_url":"https://api.github.com/repos/apache/systemds/issues/1070","id":706074537,"node_id":"MDEyOklzc3VlQ29tbWVudDcwNjA3NDUzNw==","user":{"login":"gabrielaozegovic","id":37377409,"node_id":"MDQ6VXNlcjM3Mzc3NDA5","avatar_url":"https://avatars.githubusercontent.com/u/37377409?v=4","gravatar_id":"","url":"https://api.github.com/users/gabrielaozegovic","html_url":"https://github.com/gabrielaozegovic","followers_url":"https://api.github.com/users/gabrielaozegovic/followers","following_url":"https://api.github.com/users/gabrielaozegovic/following{/other_user}","gists_url":"https://api.github.com/users/gabrielaozegovic/gists{/gist_id}","starred_url":"https://api.github.com/users/gabrielaozegovic/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gabrielaozegovic/subscriptions","organizations_url":"https://api.github.com/users/gabrielaozegovic/orgs","repos_url":"https://api.github.com/users/gabrielaozegovic/repos","events_url":"https://api.github.com/users/gabrielaozegovic/events{/privacy}","received_events_url":"https://api.github.com/users/gabrielaozegovic/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-10-09T09:27:19Z","updated_at":"2020-10-09T09:27:19Z","author_association":"CONTRIBUTOR","body":"I pushed my latest changes to the branch.\r\nI did output verification, which I think should be fine since it's matrix factorization. \r\nFor some reason, one test is failing again, even though I did not change anything else.\r\nThank you!","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/706074537/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/706165102","html_url":"https://github.com/apache/systemds/pull/1040#issuecomment-706165102","issue_url":"https://api.github.com/repos/apache/systemds/issues/1040","id":706165102,"node_id":"MDEyOklzc3VlQ29tbWVudDcwNjE2NTEwMg==","user":{"login":"OlgaOvcharenko","id":44943723,"node_id":"MDQ6VXNlcjQ0OTQzNzIz","avatar_url":"https://avatars.githubusercontent.com/u/44943723?v=4","gravatar_id":"","url":"https://api.github.com/users/OlgaOvcharenko","html_url":"https://github.com/OlgaOvcharenko","followers_url":"https://api.github.com/users/OlgaOvcharenko/followers","following_url":"https://api.github.com/users/OlgaOvcharenko/following{/other_user}","gists_url":"https://api.github.com/users/OlgaOvcharenko/gists{/gist_id}","starred_url":"https://api.github.com/users/OlgaOvcharenko/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/OlgaOvcharenko/subscriptions","organizations_url":"https://api.github.com/users/OlgaOvcharenko/orgs","repos_url":"https://api.github.com/users/OlgaOvcharenko/repos","events_url":"https://api.github.com/users/OlgaOvcharenko/events{/privacy}","received_events_url":"https://api.github.com/users/OlgaOvcharenko/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-10-09T12:57:22Z","updated_at":"2020-10-09T12:57:22Z","author_association":"CONTRIBUTOR","body":"@Baunsgaard I also pushed modified FederationUtils (with fed min, max, sum, mean), because it seems like privacy tests are failing without this changes","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/706165102/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/706551018","html_url":"https://github.com/apache/systemds/pull/1040#issuecomment-706551018","issue_url":"https://api.github.com/repos/apache/systemds/issues/1040","id":706551018,"node_id":"MDEyOklzc3VlQ29tbWVudDcwNjU1MTAxOA==","user":{"login":"Baunsgaard","id":9947148,"node_id":"MDQ6VXNlcjk5NDcxNDg=","avatar_url":"https://avatars.githubusercontent.com/u/9947148?v=4","gravatar_id":"","url":"https://api.github.com/users/Baunsgaard","html_url":"https://github.com/Baunsgaard","followers_url":"https://api.github.com/users/Baunsgaard/followers","following_url":"https://api.github.com/users/Baunsgaard/following{/other_user}","gists_url":"https://api.github.com/users/Baunsgaard/gists{/gist_id}","starred_url":"https://api.github.com/users/Baunsgaard/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Baunsgaard/subscriptions","organizations_url":"https://api.github.com/users/Baunsgaard/orgs","repos_url":"https://api.github.com/users/Baunsgaard/repos","events_url":"https://api.github.com/users/Baunsgaard/events{/privacy}","received_events_url":"https://api.github.com/users/Baunsgaard/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-10-10T13:40:54Z","updated_at":"2020-10-10T13:40:54Z","author_association":"CONTRIBUTOR","body":"@OlgaOvcharenko Thanks for the PR. :1st_place_medal: \r\n\r\nWhile merging i fixed the indentation in the test files, and reduced the number of tests run on RowCol aggregate since each test require startup of each worker of 1 second it really grows fast. Thanks again.","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/706551018/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/706555293","html_url":"https://github.com/apache/systemds/pull/1070#issuecomment-706555293","issue_url":"https://api.github.com/repos/apache/systemds/issues/1070","id":706555293,"node_id":"MDEyOklzc3VlQ29tbWVudDcwNjU1NTI5Mw==","user":{"login":"mboehm7","id":13721609,"node_id":"MDQ6VXNlcjEzNzIxNjA5","avatar_url":"https://avatars.githubusercontent.com/u/13721609?v=4","gravatar_id":"","url":"https://api.github.com/users/mboehm7","html_url":"https://github.com/mboehm7","followers_url":"https://api.github.com/users/mboehm7/followers","following_url":"https://api.github.com/users/mboehm7/following{/other_user}","gists_url":"https://api.github.com/users/mboehm7/gists{/gist_id}","starred_url":"https://api.github.com/users/mboehm7/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mboehm7/subscriptions","organizations_url":"https://api.github.com/users/mboehm7/orgs","repos_url":"https://api.github.com/users/mboehm7/repos","events_url":"https://api.github.com/users/mboehm7/events{/privacy}","received_events_url":"https://api.github.com/users/mboehm7/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-10-10T14:13:19Z","updated_at":"2020-10-10T14:13:19Z","author_association":"CONTRIBUTOR","body":"LGTM - thanks for the new builtin functions @gabrielaozegovic. This completes the AMLS project. \r\n\r\nJust for the record, during the merge, I made the following modifications: (1) added an als function, (2) renamed als_cg and als_ds to alsCG and alsDS (for consistency with the lm builtin functions), (3) merged the tests, (4) fix the test formatting (tabs over spaces in java code), (5) removed stats/explain from tests, (6) fixed the function input arguments (e.g., unnecessary format, reg for alsDS) and comments, (7) fixed the output of alsDS (the reason why it was failing was that the output R was not transposed because it was written to Rt instead of R), and (8) made some minor cleanups within the algorithms.","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/706555293/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/706566376","html_url":"https://github.com/apache/systemds/pull/1078#issuecomment-706566376","issue_url":"https://api.github.com/repos/apache/systemds/issues/1078","id":706566376,"node_id":"MDEyOklzc3VlQ29tbWVudDcwNjU2NjM3Ng==","user":{"login":"mboehm7","id":13721609,"node_id":"MDQ6VXNlcjEzNzIxNjA5","avatar_url":"https://avatars.githubusercontent.com/u/13721609?v=4","gravatar_id":"","url":"https://api.github.com/users/mboehm7","html_url":"https://github.com/mboehm7","followers_url":"https://api.github.com/users/mboehm7/followers","following_url":"https://api.github.com/users/mboehm7/following{/other_user}","gists_url":"https://api.github.com/users/mboehm7/gists{/gist_id}","starred_url":"https://api.github.com/users/mboehm7/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mboehm7/subscriptions","organizations_url":"https://api.github.com/users/mboehm7/orgs","repos_url":"https://api.github.com/users/mboehm7/repos","events_url":"https://api.github.com/users/mboehm7/events{/privacy}","received_events_url":"https://api.github.com/users/mboehm7/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-10-10T15:28:32Z","updated_at":"2020-10-10T15:28:32Z","author_association":"CONTRIBUTOR","body":"The current runtime/compiler requires the non-zeros to be exact or unknown (-1) - so we cannot simply set it to fully dense. This information could be mistakenly used (e.g., when rewriting `sum(X!=0)` to `nnz(X)`)","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/706566376/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/706586118","html_url":"https://github.com/apache/systemds/pull/1071#issuecomment-706586118","issue_url":"https://api.github.com/repos/apache/systemds/issues/1071","id":706586118,"node_id":"MDEyOklzc3VlQ29tbWVudDcwNjU4NjExOA==","user":{"login":"mboehm7","id":13721609,"node_id":"MDQ6VXNlcjEzNzIxNjA5","avatar_url":"https://avatars.githubusercontent.com/u/13721609?v=4","gravatar_id":"","url":"https://api.github.com/users/mboehm7","html_url":"https://github.com/mboehm7","followers_url":"https://api.github.com/users/mboehm7/followers","following_url":"https://api.github.com/users/mboehm7/following{/other_user}","gists_url":"https://api.github.com/users/mboehm7/gists{/gist_id}","starred_url":"https://api.github.com/users/mboehm7/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mboehm7/subscriptions","organizations_url":"https://api.github.com/users/mboehm7/orgs","repos_url":"https://api.github.com/users/mboehm7/repos","events_url":"https://api.github.com/users/mboehm7/events{/privacy}","received_events_url":"https://api.github.com/users/mboehm7/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-10-10T17:42:40Z","updated_at":"2020-10-10T17:42:40Z","author_association":"CONTRIBUTOR","body":"LGTM - thanks for the patch @SvenCelin. This completes the AMLS project.\r\n\r\nDuring the merge, I however, made a number of modifications: (1) added test assertions on expected results, (2) fixed the formatting of tests (tabs over spaces for java code), (3) fixed the integration of ppca (the failure was due to a typo: pcaa instead of ppca), (4) modified the outputs of ppca to match the outputs of pca, (5) modified the parameters of ppca (e.g., passing of k), (6) added documentation for the parameters of lasso, and (7) fixed the formatting of builtin functions (2 space indentation).\r\n  ","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/706586118/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/706677614","html_url":"https://github.com/apache/systemds/pull/1078#issuecomment-706677614","issue_url":"https://api.github.com/repos/apache/systemds/issues/1078","id":706677614,"node_id":"MDEyOklzc3VlQ29tbWVudDcwNjY3NzYxNA==","user":{"login":"Baunsgaard","id":9947148,"node_id":"MDQ6VXNlcjk5NDcxNDg=","avatar_url":"https://avatars.githubusercontent.com/u/9947148?v=4","gravatar_id":"","url":"https://api.github.com/users/Baunsgaard","html_url":"https://github.com/Baunsgaard","followers_url":"https://api.github.com/users/Baunsgaard/followers","following_url":"https://api.github.com/users/Baunsgaard/following{/other_user}","gists_url":"https://api.github.com/users/Baunsgaard/gists{/gist_id}","starred_url":"https://api.github.com/users/Baunsgaard/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Baunsgaard/subscriptions","organizations_url":"https://api.github.com/users/Baunsgaard/orgs","repos_url":"https://api.github.com/users/Baunsgaard/repos","events_url":"https://api.github.com/users/Baunsgaard/events{/privacy}","received_events_url":"https://api.github.com/users/Baunsgaard/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-10-11T09:37:51Z","updated_at":"2020-10-11T09:37:51Z","author_association":"CONTRIBUTOR","body":"so would it make sense to set it to unknown?\r\n\r\nI have the same dilemma in compression, since the counting of non zeros also is a factor there.","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/706677614/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/706680533","html_url":"https://github.com/apache/systemds/pull/1078#issuecomment-706680533","issue_url":"https://api.github.com/repos/apache/systemds/issues/1078","id":706680533,"node_id":"MDEyOklzc3VlQ29tbWVudDcwNjY4MDUzMw==","user":{"login":"mboehm7","id":13721609,"node_id":"MDQ6VXNlcjEzNzIxNjA5","avatar_url":"https://avatars.githubusercontent.com/u/13721609?v=4","gravatar_id":"","url":"https://api.github.com/users/mboehm7","html_url":"https://github.com/mboehm7","followers_url":"https://api.github.com/users/mboehm7/followers","following_url":"https://api.github.com/users/mboehm7/following{/other_user}","gists_url":"https://api.github.com/users/mboehm7/gists{/gist_id}","starred_url":"https://api.github.com/users/mboehm7/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mboehm7/subscriptions","organizations_url":"https://api.github.com/users/mboehm7/orgs","repos_url":"https://api.github.com/users/mboehm7/repos","events_url":"https://api.github.com/users/mboehm7/events{/privacy}","received_events_url":"https://api.github.com/users/mboehm7/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-10-11T10:04:22Z","updated_at":"2020-10-11T10:04:22Z","author_association":"CONTRIBUTOR","body":"well, for now I would recommend to properly maintain the non-zeros. It can only become a moderate overhead if the output is large compared to the compute (cubic compute and linear write vs linear counting). What usually helps is to do the nnz maintenance at the end of each multi-threaded computation task, which gives locality.  ","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/706680533/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/711149500","html_url":"https://github.com/apache/systemds/pull/1079#issuecomment-711149500","issue_url":"https://api.github.com/repos/apache/systemds/issues/1079","id":711149500,"node_id":"MDEyOklzc3VlQ29tbWVudDcxMTE0OTUwMA==","user":{"login":"mboehm7","id":13721609,"node_id":"MDQ6VXNlcjEzNzIxNjA5","avatar_url":"https://avatars.githubusercontent.com/u/13721609?v=4","gravatar_id":"","url":"https://api.github.com/users/mboehm7","html_url":"https://github.com/mboehm7","followers_url":"https://api.github.com/users/mboehm7/followers","following_url":"https://api.github.com/users/mboehm7/following{/other_user}","gists_url":"https://api.github.com/users/mboehm7/gists{/gist_id}","starred_url":"https://api.github.com/users/mboehm7/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mboehm7/subscriptions","organizations_url":"https://api.github.com/users/mboehm7/orgs","repos_url":"https://api.github.com/users/mboehm7/repos","events_url":"https://api.github.com/users/mboehm7/events{/privacy}","received_events_url":"https://api.github.com/users/mboehm7/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-10-18T10:46:36Z","updated_at":"2020-10-18T10:46:36Z","author_association":"CONTRIBUTOR","body":"LGTM - thanks @XorSum for catching this issue and the related fix. I'll merge this in, as we indeed removed unnecessary entries in this instruction (in the past this instruction included both row and column blocksize). However, over the last years we mostly switched away from runtime plan costing to analytical cost models at hop level. This is the reason why this code path was also not tested. If you're doing a project were you need the costs, I would recommend to use something like our cost-based operator fusion optimizer: \r\nhttps://github.com/apache/systemds/blob/master/src/main/java/org/apache/sysds/hops/codegen/opt/PlanSelectionFuseCostBasedV2.java#L1014 ","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/711149500/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/711303063","html_url":"https://github.com/apache/systemds/pull/1078#issuecomment-711303063","issue_url":"https://api.github.com/repos/apache/systemds/issues/1078","id":711303063,"node_id":"MDEyOklzc3VlQ29tbWVudDcxMTMwMzA2Mw==","user":{"login":"Baunsgaard","id":9947148,"node_id":"MDQ6VXNlcjk5NDcxNDg=","avatar_url":"https://avatars.githubusercontent.com/u/9947148?v=4","gravatar_id":"","url":"https://api.github.com/users/Baunsgaard","html_url":"https://github.com/Baunsgaard","followers_url":"https://api.github.com/users/Baunsgaard/followers","following_url":"https://api.github.com/users/Baunsgaard/following{/other_user}","gists_url":"https://api.github.com/users/Baunsgaard/gists{/gist_id}","starred_url":"https://api.github.com/users/Baunsgaard/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Baunsgaard/subscriptions","organizations_url":"https://api.github.com/users/Baunsgaard/orgs","repos_url":"https://api.github.com/users/Baunsgaard/repos","events_url":"https://api.github.com/users/Baunsgaard/events{/privacy}","received_events_url":"https://api.github.com/users/Baunsgaard/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-10-18T17:15:39Z","updated_at":"2020-10-18T17:15:39Z","author_association":"CONTRIBUTOR","body":"Closing based on comments","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/711303063/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/712105055","html_url":"https://github.com/apache/systemds/pull/1076#issuecomment-712105055","issue_url":"https://api.github.com/repos/apache/systemds/issues/1076","id":712105055,"node_id":"MDEyOklzc3VlQ29tbWVudDcxMjEwNTA1NQ==","user":{"login":"Baunsgaard","id":9947148,"node_id":"MDQ6VXNlcjk5NDcxNDg=","avatar_url":"https://avatars.githubusercontent.com/u/9947148?v=4","gravatar_id":"","url":"https://api.github.com/users/Baunsgaard","html_url":"https://github.com/Baunsgaard","followers_url":"https://api.github.com/users/Baunsgaard/followers","following_url":"https://api.github.com/users/Baunsgaard/following{/other_user}","gists_url":"https://api.github.com/users/Baunsgaard/gists{/gist_id}","starred_url":"https://api.github.com/users/Baunsgaard/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Baunsgaard/subscriptions","organizations_url":"https://api.github.com/users/Baunsgaard/orgs","repos_url":"https://api.github.com/users/Baunsgaard/repos","events_url":"https://api.github.com/users/Baunsgaard/events{/privacy}","received_events_url":"https://api.github.com/users/Baunsgaard/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-10-19T11:54:08Z","updated_at":"2020-10-19T11:54:08Z","author_association":"CONTRIBUTOR","body":"Hi @manushree635 \r\n\r\nThanks for the guide, I have taken a look and decided to change the install to use Brew.\r\nTherefore i changed it completely, while also following the Ubuntu guides structure.\r\nUnfortunately while changing it, i missed changing the user to you, you are welcome to open another PR, and i will properly merge it as you next time.\r\n\r\nYou are welcome to reach out if there is any issue with the guide!\r\n","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/712105055/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/716124872","html_url":"https://github.com/apache/systemds/pull/1075#issuecomment-716124872","issue_url":"https://api.github.com/repos/apache/systemds/issues/1075","id":716124872,"node_id":"MDEyOklzc3VlQ29tbWVudDcxNjEyNDg3Mg==","user":{"login":"Baunsgaard","id":9947148,"node_id":"MDQ6VXNlcjk5NDcxNDg=","avatar_url":"https://avatars.githubusercontent.com/u/9947148?v=4","gravatar_id":"","url":"https://api.github.com/users/Baunsgaard","html_url":"https://github.com/Baunsgaard","followers_url":"https://api.github.com/users/Baunsgaard/followers","following_url":"https://api.github.com/users/Baunsgaard/following{/other_user}","gists_url":"https://api.github.com/users/Baunsgaard/gists{/gist_id}","starred_url":"https://api.github.com/users/Baunsgaard/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Baunsgaard/subscriptions","organizations_url":"https://api.github.com/users/Baunsgaard/orgs","repos_url":"https://api.github.com/users/Baunsgaard/repos","events_url":"https://api.github.com/users/Baunsgaard/events{/privacy}","received_events_url":"https://api.github.com/users/Baunsgaard/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-10-25T10:32:43Z","updated_at":"2020-10-25T10:32:43Z","author_association":"CONTRIBUTOR","body":"does the removal of WIP, mean it is ready for review?","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/716124872/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/716190136","html_url":"https://github.com/apache/systemds/pull/1087#issuecomment-716190136","issue_url":"https://api.github.com/repos/apache/systemds/issues/1087","id":716190136,"node_id":"MDEyOklzc3VlQ29tbWVudDcxNjE5MDEzNg==","user":{"login":"Baunsgaard","id":9947148,"node_id":"MDQ6VXNlcjk5NDcxNDg=","avatar_url":"https://avatars.githubusercontent.com/u/9947148?v=4","gravatar_id":"","url":"https://api.github.com/users/Baunsgaard","html_url":"https://github.com/Baunsgaard","followers_url":"https://api.github.com/users/Baunsgaard/followers","following_url":"https://api.github.com/users/Baunsgaard/following{/other_user}","gists_url":"https://api.github.com/users/Baunsgaard/gists{/gist_id}","starred_url":"https://api.github.com/users/Baunsgaard/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Baunsgaard/subscriptions","organizations_url":"https://api.github.com/users/Baunsgaard/orgs","repos_url":"https://api.github.com/users/Baunsgaard/repos","events_url":"https://api.github.com/users/Baunsgaard/events{/privacy}","received_events_url":"https://api.github.com/users/Baunsgaard/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-10-25T18:26:00Z","updated_at":"2020-10-25T18:26:00Z","author_association":"CONTRIBUTOR","body":"> In general I really like the PR, but I would propose one change for the json layout.\r\n> Current:\r\n> \r\n> ```json\r\n> {\r\n>     \"[0, 0] - [5, 13]\": {\r\n>         \"filepath\": \"target/testTemp/functions/federated/io/FederatedReaderTest/in/X1\",\r\n>         \"dataType\": \"MATRIX\",\r\n>         \"address\": \"localhost:42441\"\r\n>     },\r\n>     \"[5, 0] - [10, 13]\": {\r\n>         \"filepath\": \"target/testTemp/functions/federated/io/FederatedReaderTest/in/X2\",\r\n>         \"dataType\": \"MATRIX\",\r\n>         \"address\": \"localhost:36989\"\r\n>     }\r\n> }\r\n> ```\r\n> \r\n> My proposal:\r\n> \r\n> ```json\r\n> [\r\n>     {\r\n>         \"filepath\": \"target/testTemp/functions/federated/io/FederatedReaderTest/in/X1\",\r\n>         \"dataType\": \"MATRIX\",\r\n>         \"address\": \"localhost:42441\",\r\n>         \"begin\": [0, 0],\r\n>         \"end\": [5, 13]\r\n>     },\r\n>     {\r\n>         \"filepath\": \"target/testTemp/functions/federated/io/FederatedReaderTest/in/X2\",\r\n>         \"dataType\": \"MATRIX\",\r\n>         \"address\": \"localhost:36989\",\r\n>         \"begin\": [5, 0],\r\n>         \"end\": [10, 13]\r\n>     }\r\n> ]\r\n> ```\r\n\r\nSure will change it to that :) it looks nicer","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/716190136/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/716190344","html_url":"https://github.com/apache/systemds/pull/1087#issuecomment-716190344","issue_url":"https://api.github.com/repos/apache/systemds/issues/1087","id":716190344,"node_id":"MDEyOklzc3VlQ29tbWVudDcxNjE5MDM0NA==","user":{"login":"kev-inn","id":41760497,"node_id":"MDQ6VXNlcjQxNzYwNDk3","avatar_url":"https://avatars.githubusercontent.com/u/41760497?v=4","gravatar_id":"","url":"https://api.github.com/users/kev-inn","html_url":"https://github.com/kev-inn","followers_url":"https://api.github.com/users/kev-inn/followers","following_url":"https://api.github.com/users/kev-inn/following{/other_user}","gists_url":"https://api.github.com/users/kev-inn/gists{/gist_id}","starred_url":"https://api.github.com/users/kev-inn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kev-inn/subscriptions","organizations_url":"https://api.github.com/users/kev-inn/orgs","repos_url":"https://api.github.com/users/kev-inn/repos","events_url":"https://api.github.com/users/kev-inn/events{/privacy}","received_events_url":"https://api.github.com/users/kev-inn/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-10-25T18:27:18Z","updated_at":"2020-10-25T18:27:18Z","author_association":"CONTRIBUTOR","body":"I just checked the code again, wouldn't it be nicer to split up address and port too?","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/716190344/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/716191330","html_url":"https://github.com/apache/systemds/pull/1087#issuecomment-716191330","issue_url":"https://api.github.com/repos/apache/systemds/issues/1087","id":716191330,"node_id":"MDEyOklzc3VlQ29tbWVudDcxNjE5MTMzMA==","user":{"login":"Baunsgaard","id":9947148,"node_id":"MDQ6VXNlcjk5NDcxNDg=","avatar_url":"https://avatars.githubusercontent.com/u/9947148?v=4","gravatar_id":"","url":"https://api.github.com/users/Baunsgaard","html_url":"https://github.com/Baunsgaard","followers_url":"https://api.github.com/users/Baunsgaard/followers","following_url":"https://api.github.com/users/Baunsgaard/following{/other_user}","gists_url":"https://api.github.com/users/Baunsgaard/gists{/gist_id}","starred_url":"https://api.github.com/users/Baunsgaard/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Baunsgaard/subscriptions","organizations_url":"https://api.github.com/users/Baunsgaard/orgs","repos_url":"https://api.github.com/users/Baunsgaard/repos","events_url":"https://api.github.com/users/Baunsgaard/events{/privacy}","received_events_url":"https://api.github.com/users/Baunsgaard/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-10-25T18:34:13Z","updated_at":"2020-10-25T18:34:13Z","author_association":"CONTRIBUTOR","body":"> I just checked the code again, wouldn't it be nicer to split up address and port too?\r\n\r\nsure lets do that as well.\r\nwill look at it tomorrow morning\r\n","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/716191330/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/716460991","html_url":"https://github.com/apache/systemds/pull/1087#issuecomment-716460991","issue_url":"https://api.github.com/repos/apache/systemds/issues/1087","id":716460991,"node_id":"MDEyOklzc3VlQ29tbWVudDcxNjQ2MDk5MQ==","user":{"login":"Baunsgaard","id":9947148,"node_id":"MDQ6VXNlcjk5NDcxNDg=","avatar_url":"https://avatars.githubusercontent.com/u/9947148?v=4","gravatar_id":"","url":"https://api.github.com/users/Baunsgaard","html_url":"https://github.com/Baunsgaard","followers_url":"https://api.github.com/users/Baunsgaard/followers","following_url":"https://api.github.com/users/Baunsgaard/following{/other_user}","gists_url":"https://api.github.com/users/Baunsgaard/gists{/gist_id}","starred_url":"https://api.github.com/users/Baunsgaard/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Baunsgaard/subscriptions","organizations_url":"https://api.github.com/users/Baunsgaard/orgs","repos_url":"https://api.github.com/users/Baunsgaard/repos","events_url":"https://api.github.com/users/Baunsgaard/events{/privacy}","received_events_url":"https://api.github.com/users/Baunsgaard/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-10-26T10:36:56Z","updated_at":"2020-10-26T10:36:56Z","author_association":"CONTRIBUTOR","body":"@kev-inn \r\n\r\nnow it is: \r\n\r\n```json\r\n[\r\n    {\r\n        \"dataType\": \"MATRIX\",\r\n        \"filepath\": \"target/testTemp/functions/federated/io/FederatedReaderTest/in/X1\",\r\n        \"begin\": [\r\n            0,\r\n            0\r\n        ],\r\n        \"end\": [\r\n            5,\r\n            13\r\n        ],\r\n        \"address\": \"localhost:41827\"\r\n    },\r\n    {\r\n        \"dataType\": \"MATRIX\",\r\n        \"filepath\": \"target/testTemp/functions/federated/io/FederatedReaderTest/in/X2\",\r\n        \"begin\": [\r\n            5,\r\n            0\r\n        ],\r\n        \"end\": [\r\n            10,\r\n            13\r\n        ],\r\n        \"address\": \"localhost:41635\"\r\n    }\r\n]\r\n\r\n```","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/716460991/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/716515793","html_url":"https://github.com/apache/systemds/pull/1087#issuecomment-716515793","issue_url":"https://api.github.com/repos/apache/systemds/issues/1087","id":716515793,"node_id":"MDEyOklzc3VlQ29tbWVudDcxNjUxNTc5Mw==","user":{"login":"kev-inn","id":41760497,"node_id":"MDQ6VXNlcjQxNzYwNDk3","avatar_url":"https://avatars.githubusercontent.com/u/41760497?v=4","gravatar_id":"","url":"https://api.github.com/users/kev-inn","html_url":"https://github.com/kev-inn","followers_url":"https://api.github.com/users/kev-inn/followers","following_url":"https://api.github.com/users/kev-inn/following{/other_user}","gists_url":"https://api.github.com/users/kev-inn/gists{/gist_id}","starred_url":"https://api.github.com/users/kev-inn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kev-inn/subscriptions","organizations_url":"https://api.github.com/users/kev-inn/orgs","repos_url":"https://api.github.com/users/kev-inn/repos","events_url":"https://api.github.com/users/kev-inn/events{/privacy}","received_events_url":"https://api.github.com/users/kev-inn/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-10-26T12:30:54Z","updated_at":"2020-10-26T12:30:54Z","author_association":"CONTRIBUTOR","body":"@Baunsgaard LGTM :+1:","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/716515793/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/717148459","html_url":"https://github.com/apache/systemds/pull/1088#issuecomment-717148459","issue_url":"https://api.github.com/repos/apache/systemds/issues/1088","id":717148459,"node_id":"MDEyOklzc3VlQ29tbWVudDcxNzE0ODQ1OQ==","user":{"login":"Baunsgaard","id":9947148,"node_id":"MDQ6VXNlcjk5NDcxNDg=","avatar_url":"https://avatars.githubusercontent.com/u/9947148?v=4","gravatar_id":"","url":"https://api.github.com/users/Baunsgaard","html_url":"https://github.com/Baunsgaard","followers_url":"https://api.github.com/users/Baunsgaard/followers","following_url":"https://api.github.com/users/Baunsgaard/following{/other_user}","gists_url":"https://api.github.com/users/Baunsgaard/gists{/gist_id}","starred_url":"https://api.github.com/users/Baunsgaard/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Baunsgaard/subscriptions","organizations_url":"https://api.github.com/users/Baunsgaard/orgs","repos_url":"https://api.github.com/users/Baunsgaard/repos","events_url":"https://api.github.com/users/Baunsgaard/events{/privacy}","received_events_url":"https://api.github.com/users/Baunsgaard/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-10-27T10:36:28Z","updated_at":"2020-10-27T10:36:28Z","author_association":"CONTRIBUTOR","body":"merged","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/717148459/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/717214432","html_url":"https://github.com/apache/systemds/pull/1075#issuecomment-717214432","issue_url":"https://api.github.com/repos/apache/systemds/issues/1075","id":717214432,"node_id":"MDEyOklzc3VlQ29tbWVudDcxNzIxNDQzMg==","user":{"login":"Baunsgaard","id":9947148,"node_id":"MDQ6VXNlcjk5NDcxNDg=","avatar_url":"https://avatars.githubusercontent.com/u/9947148?v=4","gravatar_id":"","url":"https://api.github.com/users/Baunsgaard","html_url":"https://github.com/Baunsgaard","followers_url":"https://api.github.com/users/Baunsgaard/followers","following_url":"https://api.github.com/users/Baunsgaard/following{/other_user}","gists_url":"https://api.github.com/users/Baunsgaard/gists{/gist_id}","starred_url":"https://api.github.com/users/Baunsgaard/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Baunsgaard/subscriptions","organizations_url":"https://api.github.com/users/Baunsgaard/orgs","repos_url":"https://api.github.com/users/Baunsgaard/repos","events_url":"https://api.github.com/users/Baunsgaard/events{/privacy}","received_events_url":"https://api.github.com/users/Baunsgaard/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-10-27T12:37:44Z","updated_at":"2020-10-27T12:37:44Z","author_association":"CONTRIBUTOR","body":"could you commit something again to make the tests run, i have fixed master so that it should not break like in the last commit.","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/717214432/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/721239204","html_url":"https://github.com/apache/systemds/pull/1081#issuecomment-721239204","issue_url":"https://api.github.com/repos/apache/systemds/issues/1081","id":721239204,"node_id":"MDEyOklzc3VlQ29tbWVudDcyMTIzOTIwNA==","user":{"login":"OlgaOvcharenko","id":44943723,"node_id":"MDQ6VXNlcjQ0OTQzNzIz","avatar_url":"https://avatars.githubusercontent.com/u/44943723?v=4","gravatar_id":"","url":"https://api.github.com/users/OlgaOvcharenko","html_url":"https://github.com/OlgaOvcharenko","followers_url":"https://api.github.com/users/OlgaOvcharenko/followers","following_url":"https://api.github.com/users/OlgaOvcharenko/following{/other_user}","gists_url":"https://api.github.com/users/OlgaOvcharenko/gists{/gist_id}","starred_url":"https://api.github.com/users/OlgaOvcharenko/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/OlgaOvcharenko/subscriptions","organizations_url":"https://api.github.com/users/OlgaOvcharenko/orgs","repos_url":"https://api.github.com/users/OlgaOvcharenko/repos","events_url":"https://api.github.com/users/OlgaOvcharenko/events{/privacy}","received_events_url":"https://api.github.com/users/OlgaOvcharenko/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-11-03T16:34:24Z","updated_at":"2020-11-03T16:34:24Z","author_association":"CONTRIBUTOR","body":"Added @Ignore to federated bivar test, sinc the fed cov, groupedagg instructions are not implemented yet and cm is in different PR.","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/721239204/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/723118768","html_url":"https://github.com/apache/systemds/pull/1047#issuecomment-723118768","issue_url":"https://api.github.com/repos/apache/systemds/issues/1047","id":723118768,"node_id":"MDEyOklzc3VlQ29tbWVudDcyMzExODc2OA==","user":{"login":"kev-inn","id":41760497,"node_id":"MDQ6VXNlcjQxNzYwNDk3","avatar_url":"https://avatars.githubusercontent.com/u/41760497?v=4","gravatar_id":"","url":"https://api.github.com/users/kev-inn","html_url":"https://github.com/kev-inn","followers_url":"https://api.github.com/users/kev-inn/followers","following_url":"https://api.github.com/users/kev-inn/following{/other_user}","gists_url":"https://api.github.com/users/kev-inn/gists{/gist_id}","starred_url":"https://api.github.com/users/kev-inn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kev-inn/subscriptions","organizations_url":"https://api.github.com/users/kev-inn/orgs","repos_url":"https://api.github.com/users/kev-inn/repos","events_url":"https://api.github.com/users/kev-inn/events{/privacy}","received_events_url":"https://api.github.com/users/kev-inn/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-11-06T14:47:08Z","updated_at":"2020-11-06T14:47:08Z","author_association":"CONTRIBUTOR","body":"I fixed the problem with debugging, please read the last commit message to get a view of the current state.\r\nI am not sure if the enhancement (keeping workers alive) should be put into this PR or a new one, since I can imagine that there will be a few trade-offs which require discussion.","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/723118768/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/723297664","html_url":"https://github.com/apache/systemds/pull/1095#issuecomment-723297664","issue_url":"https://api.github.com/repos/apache/systemds/issues/1095","id":723297664,"node_id":"MDEyOklzc3VlQ29tbWVudDcyMzI5NzY2NA==","user":{"login":"Baunsgaard","id":9947148,"node_id":"MDQ6VXNlcjk5NDcxNDg=","avatar_url":"https://avatars.githubusercontent.com/u/9947148?v=4","gravatar_id":"","url":"https://api.github.com/users/Baunsgaard","html_url":"https://github.com/Baunsgaard","followers_url":"https://api.github.com/users/Baunsgaard/followers","following_url":"https://api.github.com/users/Baunsgaard/following{/other_user}","gists_url":"https://api.github.com/users/Baunsgaard/gists{/gist_id}","starred_url":"https://api.github.com/users/Baunsgaard/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Baunsgaard/subscriptions","organizations_url":"https://api.github.com/users/Baunsgaard/orgs","repos_url":"https://api.github.com/users/Baunsgaard/repos","events_url":"https://api.github.com/users/Baunsgaard/events{/privacy}","received_events_url":"https://api.github.com/users/Baunsgaard/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-11-06T21:00:58Z","updated_at":"2020-11-06T21:01:42Z","author_association":"CONTRIBUTOR","body":"On my laptop i get:\r\nof witch the first 3 are normal, then 3 mkl and then 3 openBLAS.\r\nIf anyone would like to review i would like measurements from your machine as well.\r\nIt should be as easy as running the script in scripts/perftest/runAll.sh\r\n\r\n```bash\r\nTotal elapsed time:\t\t21.939 sec.\r\n 1  ba+*          21.214      3\r\nTotal elapsed time:\t\t23.765 sec.\r\n 1  ba+*          22.940      3\r\nTotal elapsed time:\t\t24.867 sec.\r\n 1  ba+*          24.023      3\r\nTotal elapsed time:\t\t26.128 sec.\r\n 1  ba+*          25.239      3\r\nTotal elapsed time:\t\t25.375 sec.\r\n 1  ba+*          24.495      3\r\n        342.403,88 msec task-clock                #   13,748 CPUs utilized            ( +-  3,22% )\r\n   911.071.333.279      cycles                    #    2,661 GHz                      ( +-  0,60% )  (30,77%)\r\n 1.099.760.123.229      instructions              #    1,21  insn per cycle           ( +-  0,03% )  (38,47%)\r\nTotal elapsed time:\t\t4.513 sec.\r\n 1  ba+*           3.616      3\r\nTotal elapsed time:\t\t4.465 sec.\r\n 1  ba+*           3.579      3\r\nTotal elapsed time:\t\t4.542 sec.\r\n 1  ba+*           3.594      3\r\nTotal elapsed time:\t\t4.808 sec.\r\n 1  ba+*           3.966      3\r\nTotal elapsed time:\t\t4.493 sec.\r\n 1  ba+*           3.611      3\r\n         34.108,67 msec task-clock                #    6,727 CPUs utilized            ( +-  1,57% )\r\n    85.121.161.235      cycles                    #    2,496 GHz                      ( +-  1,27% )  (30,78%)\r\n   202.393.564.071      instructions              #    2,38  insn per cycle           ( +-  0,59% )  (38,46%)\r\nTotal elapsed time:\t\t5.259 sec.\r\n 1  ba+*           4.333      3\r\nTotal elapsed time:\t\t5.359 sec.\r\n 1  ba+*           4.471      3\r\nTotal elapsed time:\t\t5.086 sec.\r\n 1  ba+*           4.175      3\r\nTotal elapsed time:\t\t5.277 sec.\r\n 1  ba+*           4.316      3\r\nTotal elapsed time:\t\t5.495 sec.\r\n 1  ba+*           4.493      3\r\n         71.032,45 msec task-clock                #   12,188 CPUs utilized            ( +-  0,96% )\r\n   158.323.022.360      cycles                    #    2,229 GHz                      ( +-  1,12% )  (30,79%)\r\n   232.735.293.658      instructions              #    1,47  insn per cycle           ( +-  1,33% )  (38,47%)\r\n```","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/723297664/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/723299484","html_url":"https://github.com/apache/systemds/pull/1095#issuecomment-723299484","issue_url":"https://api.github.com/repos/apache/systemds/issues/1095","id":723299484,"node_id":"MDEyOklzc3VlQ29tbWVudDcyMzI5OTQ4NA==","user":{"login":"mboehm7","id":13721609,"node_id":"MDQ6VXNlcjEzNzIxNjA5","avatar_url":"https://avatars.githubusercontent.com/u/13721609?v=4","gravatar_id":"","url":"https://api.github.com/users/mboehm7","html_url":"https://github.com/mboehm7","followers_url":"https://api.github.com/users/mboehm7/followers","following_url":"https://api.github.com/users/mboehm7/following{/other_user}","gists_url":"https://api.github.com/users/mboehm7/gists{/gist_id}","starred_url":"https://api.github.com/users/mboehm7/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mboehm7/subscriptions","organizations_url":"https://api.github.com/users/mboehm7/orgs","repos_url":"https://api.github.com/users/mboehm7/repos","events_url":"https://api.github.com/users/mboehm7/events{/privacy}","received_events_url":"https://api.github.com/users/mboehm7/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-11-06T21:06:06Z","updated_at":"2020-11-06T21:06:06Z","author_association":"CONTRIBUTOR","body":"I would recommend to run it with larger matrices and/or much more operations to give the JIT a chance for tiered (cold, warm, hot) just-in-time compilation into native code.","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/723299484/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/723300314","html_url":"https://github.com/apache/systemds/pull/1095#issuecomment-723300314","issue_url":"https://api.github.com/repos/apache/systemds/issues/1095","id":723300314,"node_id":"MDEyOklzc3VlQ29tbWVudDcyMzMwMDMxNA==","user":{"login":"mboehm7","id":13721609,"node_id":"MDQ6VXNlcjEzNzIxNjA5","avatar_url":"https://avatars.githubusercontent.com/u/13721609?v=4","gravatar_id":"","url":"https://api.github.com/users/mboehm7","html_url":"https://github.com/mboehm7","followers_url":"https://api.github.com/users/mboehm7/followers","following_url":"https://api.github.com/users/mboehm7/following{/other_user}","gists_url":"https://api.github.com/users/mboehm7/gists{/gist_id}","starred_url":"https://api.github.com/users/mboehm7/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mboehm7/subscriptions","organizations_url":"https://api.github.com/users/mboehm7/orgs","repos_url":"https://api.github.com/users/mboehm7/repos","events_url":"https://api.github.com/users/mboehm7/events{/privacy}","received_events_url":"https://api.github.com/users/mboehm7/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-11-06T21:08:30Z","updated_at":"2020-11-06T21:08:45Z","author_association":"CONTRIBUTOR","body":"never mind, I read the results as ms not seconds. Then I suspect what you see is the vector width of AVX512.","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/723300314/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/723306282","html_url":"https://github.com/apache/systemds/pull/1095#issuecomment-723306282","issue_url":"https://api.github.com/repos/apache/systemds/issues/1095","id":723306282,"node_id":"MDEyOklzc3VlQ29tbWVudDcyMzMwNjI4Mg==","user":{"login":"Baunsgaard","id":9947148,"node_id":"MDQ6VXNlcjk5NDcxNDg=","avatar_url":"https://avatars.githubusercontent.com/u/9947148?v=4","gravatar_id":"","url":"https://api.github.com/users/Baunsgaard","html_url":"https://github.com/Baunsgaard","followers_url":"https://api.github.com/users/Baunsgaard/followers","following_url":"https://api.github.com/users/Baunsgaard/following{/other_user}","gists_url":"https://api.github.com/users/Baunsgaard/gists{/gist_id}","starred_url":"https://api.github.com/users/Baunsgaard/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Baunsgaard/subscriptions","organizations_url":"https://api.github.com/users/Baunsgaard/orgs","repos_url":"https://api.github.com/users/Baunsgaard/repos","events_url":"https://api.github.com/users/Baunsgaard/events{/privacy}","received_events_url":"https://api.github.com/users/Baunsgaard/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-11-06T21:24:09Z","updated_at":"2020-11-06T21:24:09Z","author_association":"CONTRIBUTOR","body":"On an AMD EPYC 7302 16-Core Processor\r\n\r\n```bash\r\nTotal elapsed time:\t\t9.860 sec.\r\n 1  ba+*           8.542      3\r\nTotal elapsed time:\t\t9.754 sec.\r\n 1  ba+*           8.410      3\r\nTotal elapsed time:\t\t9.542 sec.\r\n 1  ba+*           8.217      3\r\nTotal elapsed time:\t\t9.568 sec.\r\n 1  ba+*           8.349      3\r\nTotal elapsed time:\t\t9.738 sec.\r\n 1  ba+*           8.330      3\r\n         244244.54 msec task-clock                #   23.411 CPUs utilized            ( +-  0.52% )\r\n      615634864321      cycles                    #    2.521 GHz                      ( +-  0.13% )  (33.32%)\r\n     1099917247652      instructions              #    1.79  insn per cycle         \r\nTotal elapsed time:\t\t4.087 sec.\r\n 1  ba+*           2.758      3\r\nTotal elapsed time:\t\t4.067 sec.\r\n 1  ba+*           2.701      3\r\nTotal elapsed time:\t\t3.880 sec.\r\n 1  ba+*           2.656      3\r\nTotal elapsed time:\t\t4.617 sec.\r\n 1  ba+*           3.300      3\r\nTotal elapsed time:\t\t4.175 sec.\r\n 1  ba+*           2.841      3\r\n          50723.62 msec task-clock                #    9.997 CPUs utilized            ( +-  1.29% )\r\n       94475106229      cycles                    #    1.863 GHz                      ( +-  1.02% )  (33.37%)\r\n      214603521520      instructions              #    2.27  insn per cycle         \r\nTotal elapsed time:\t\t4.084 sec.\r\n 1  ba+*           2.683      3\r\nTotal elapsed time:\t\t4.100 sec.\r\n 1  ba+*           2.701      3\r\nTotal elapsed time:\t\t4.030 sec.\r\n 1  ba+*           2.670      3\r\nTotal elapsed time:\t\t3.828 sec.\r\n 1  ba+*           2.651      3\r\nTotal elapsed time:\t\t3.976 sec.\r\n 1  ba+*           2.660      3\r\n          88602.91 msec task-clock                #   17.962 CPUs utilized            ( +-  0.33% )\r\n      165132494019      cycles                    #    1.864 GHz                      ( +-  0.68% )  (33.30%)\r\n      251221873378      instructions              #    1.52  insn per cycle         \r\n\r\n```\r\n\r\non two socket  2x 28 core Intel(R) Xeon(R) Gold 6238R CPU @ 2.20GHz\r\n```bash\r\nTotal elapsed time:\t\t5.208 sec.\r\n 1  ba+*           4.210      3\r\nTotal elapsed time:\t\t5.189 sec.\r\n 1  ba+*           4.234      3\r\nTotal elapsed time:\t\t5.215 sec.\r\n 1  ba+*           4.255      3\r\nTotal elapsed time:\t\t5.352 sec.\r\n 1  ba+*           4.333      3\r\nTotal elapsed time:\t\t5.485 sec.\r\n 1  ba+*           4.321      3\r\n         403205.65 msec task-clock                #   68.960 CPUs utilized            ( +-  2.07% )\r\n     1045022715778      cycles                    #    2.592 GHz                      ( +-  2.16% )  (30.72%)\r\n     1111149539772      instructions              #    1.06  insn per cycle           ( +-  0.08% )  (38.41%)\r\nTotal elapsed time:\t\t3.651 sec.\r\n 1  ba+*           2.165      3\r\nTotal elapsed time:\t\t2.687 sec.\r\n 1  ba+*           1.535      3\r\nTotal elapsed time:\t\t3.269 sec.\r\n 1  ba+*           1.924      3\r\nTotal elapsed time:\t\t3.148 sec.\r\n 1  ba+*           1.818      3\r\nTotal elapsed time:\t\t2.899 sec.\r\n 1  ba+*           1.547      3\r\n         131080.09 msec task-clock                #   35.417 CPUs utilized            ( +-  7.67% )\r\n      327562943703      cycles                    #    2.499 GHz                      ( +-  8.49% )  (30.69%)\r\n      176246317254      instructions              #    0.54  insn per cycle           ( +-  3.37% )  (38.37%)\r\nTotal elapsed time:\t\t3.132 sec.\r\n 1  ba+*           1.490      3\r\nTotal elapsed time:\t\t2.763 sec.\r\n 1  ba+*           1.505      3\r\nTotal elapsed time:\t\t3.474 sec.\r\n 1  ba+*           1.524      3\r\nTotal elapsed time:\t\t2.930 sec.\r\n 1  ba+*           1.516      3\r\nTotal elapsed time:\t\t3.184 sec.\r\n 1  ba+*           1.662      3\r\n         153409.48 msec task-clock                #   41.661 CPUs utilized            ( +-  7.83% )\r\n      397930300980      cycles                    #    2.594 GHz                      ( +-  9.09% )  (30.66%)\r\n      250592134329      instructions              #    0.63  insn per cycle           ( +-  1.03% )  (38.33%)\r\n","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/723306282/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/723307897","html_url":"https://github.com/apache/systemds/pull/1095#issuecomment-723307897","issue_url":"https://api.github.com/repos/apache/systemds/issues/1095","id":723307897,"node_id":"MDEyOklzc3VlQ29tbWVudDcyMzMwNzg5Nw==","user":{"login":"Baunsgaard","id":9947148,"node_id":"MDQ6VXNlcjk5NDcxNDg=","avatar_url":"https://avatars.githubusercontent.com/u/9947148?v=4","gravatar_id":"","url":"https://api.github.com/users/Baunsgaard","html_url":"https://github.com/Baunsgaard","followers_url":"https://api.github.com/users/Baunsgaard/followers","following_url":"https://api.github.com/users/Baunsgaard/following{/other_user}","gists_url":"https://api.github.com/users/Baunsgaard/gists{/gist_id}","starred_url":"https://api.github.com/users/Baunsgaard/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Baunsgaard/subscriptions","organizations_url":"https://api.github.com/users/Baunsgaard/orgs","repos_url":"https://api.github.com/users/Baunsgaard/repos","events_url":"https://api.github.com/users/Baunsgaard/events{/privacy}","received_events_url":"https://api.github.com/users/Baunsgaard/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-11-06T21:28:31Z","updated_at":"2020-11-06T21:28:31Z","author_association":"CONTRIBUTOR","body":"> I would recommend to run it with larger matrices and/or much more operations to give the JIT a chance for tiered (cold, warm, hot) just-in-time compilation into native code.\r\n\r\nI did try larger matrices, but the JIT compilation times did not increase.\r\n\r\nSince a 5k 5k matrix multiplication is this fast on the CPUs take 1 to 8 seconds to do 3 reps is big enough if we do more than 3 repetitions? Or would you rather suggest to use larger matrices and fewer repetitions? We can also do both?","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/723307897/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/723311181","html_url":"https://github.com/apache/systemds/pull/1095#issuecomment-723311181","issue_url":"https://api.github.com/repos/apache/systemds/issues/1095","id":723311181,"node_id":"MDEyOklzc3VlQ29tbWVudDcyMzMxMTE4MQ==","user":{"login":"mboehm7","id":13721609,"node_id":"MDQ6VXNlcjEzNzIxNjA5","avatar_url":"https://avatars.githubusercontent.com/u/13721609?v=4","gravatar_id":"","url":"https://api.github.com/users/mboehm7","html_url":"https://github.com/mboehm7","followers_url":"https://api.github.com/users/mboehm7/followers","following_url":"https://api.github.com/users/mboehm7/following{/other_user}","gists_url":"https://api.github.com/users/mboehm7/gists{/gist_id}","starred_url":"https://api.github.com/users/mboehm7/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mboehm7/subscriptions","organizations_url":"https://api.github.com/users/mboehm7/orgs","repos_url":"https://api.github.com/users/mboehm7/repos","events_url":"https://api.github.com/users/mboehm7/events{/privacy}","received_events_url":"https://api.github.com/users/mboehm7/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-11-06T21:37:31Z","updated_at":"2020-11-06T21:37:53Z","author_association":"CONTRIBUTOR","body":"No you're experiments are fine - I mis-read it as milliseconds without looking at the dimensions. So JIT will already happen during the first matrix multiplication. \r\n\r\nFor me the take-away is that we should have a look into the influence of the higher turbo-frequency, different cache sizes and other characteristics of your laptop to see if there is something we can do about it. ","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/723311181/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/723317125","html_url":"https://github.com/apache/systemds/pull/1095#issuecomment-723317125","issue_url":"https://api.github.com/repos/apache/systemds/issues/1095","id":723317125,"node_id":"MDEyOklzc3VlQ29tbWVudDcyMzMxNzEyNQ==","user":{"login":"mboehm7","id":13721609,"node_id":"MDQ6VXNlcjEzNzIxNjA5","avatar_url":"https://avatars.githubusercontent.com/u/13721609?v=4","gravatar_id":"","url":"https://api.github.com/users/mboehm7","html_url":"https://github.com/mboehm7","followers_url":"https://api.github.com/users/mboehm7/followers","following_url":"https://api.github.com/users/mboehm7/following{/other_user}","gists_url":"https://api.github.com/users/mboehm7/gists{/gist_id}","starred_url":"https://api.github.com/users/mboehm7/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mboehm7/subscriptions","organizations_url":"https://api.github.com/users/mboehm7/orgs","repos_url":"https://api.github.com/users/mboehm7/repos","events_url":"https://api.github.com/users/mboehm7/events{/privacy}","received_events_url":"https://api.github.com/users/mboehm7/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-11-06T21:54:31Z","updated_at":"2020-11-06T21:54:31Z","author_association":"CONTRIBUTOR","body":"One difference that might affect performance here is the associativity of the L2 cache - the Intel 6238R setup has 16 way, AMD EPYC 7302 has 8 way, and your i9-9980HK has 4 way.  This might matter because our dense mm cache blocking largely optimizes for common L2 sizes and behavior.","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/723317125/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/723664017","html_url":"https://github.com/apache/systemds/pull/1096#issuecomment-723664017","issue_url":"https://api.github.com/repos/apache/systemds/issues/1096","id":723664017,"node_id":"MDEyOklzc3VlQ29tbWVudDcyMzY2NDAxNw==","user":{"login":"mboehm7","id":13721609,"node_id":"MDQ6VXNlcjEzNzIxNjA5","avatar_url":"https://avatars.githubusercontent.com/u/13721609?v=4","gravatar_id":"","url":"https://api.github.com/users/mboehm7","html_url":"https://github.com/mboehm7","followers_url":"https://api.github.com/users/mboehm7/followers","following_url":"https://api.github.com/users/mboehm7/following{/other_user}","gists_url":"https://api.github.com/users/mboehm7/gists{/gist_id}","starred_url":"https://api.github.com/users/mboehm7/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mboehm7/subscriptions","organizations_url":"https://api.github.com/users/mboehm7/orgs","repos_url":"https://api.github.com/users/mboehm7/repos","events_url":"https://api.github.com/users/mboehm7/events{/privacy}","received_events_url":"https://api.github.com/users/mboehm7/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-11-08T20:51:38Z","updated_at":"2020-11-08T20:51:38Z","author_association":"CONTRIBUTOR","body":"LGTM - thanks @sergred for this great feature. During the merge I just made a few tweaks: added missing license header, fixed wrong formatting (tabs over spaces), changed the way we present the new statistics, fixed the recomputation by lineage, removed an unnecessary `ExecutionContext.setVariable` (which existed before), and reverted the changes in ByteBuffer as its unrelated to the given feature (the code is still in the PR and we come back once we refactor that).","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/723664017/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/723919758","html_url":"https://github.com/apache/systemds/pull/1093#issuecomment-723919758","issue_url":"https://api.github.com/repos/apache/systemds/issues/1093","id":723919758,"node_id":"MDEyOklzc3VlQ29tbWVudDcyMzkxOTc1OA==","user":{"login":"Baunsgaard","id":9947148,"node_id":"MDQ6VXNlcjk5NDcxNDg=","avatar_url":"https://avatars.githubusercontent.com/u/9947148?v=4","gravatar_id":"","url":"https://api.github.com/users/Baunsgaard","html_url":"https://github.com/Baunsgaard","followers_url":"https://api.github.com/users/Baunsgaard/followers","following_url":"https://api.github.com/users/Baunsgaard/following{/other_user}","gists_url":"https://api.github.com/users/Baunsgaard/gists{/gist_id}","starred_url":"https://api.github.com/users/Baunsgaard/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Baunsgaard/subscriptions","organizations_url":"https://api.github.com/users/Baunsgaard/orgs","repos_url":"https://api.github.com/users/Baunsgaard/repos","events_url":"https://api.github.com/users/Baunsgaard/events{/privacy}","received_events_url":"https://api.github.com/users/Baunsgaard/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-11-09T10:24:12Z","updated_at":"2020-11-09T10:24:12Z","author_association":"CONTRIBUTOR","body":"![image](https://user-images.githubusercontent.com/9947148/98529583-16486900-227e-11eb-920a-dfecdfd04d1b.png)\r\n","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/723919758/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/724729968","html_url":"https://github.com/apache/systemds/pull/1097#issuecomment-724729968","issue_url":"https://api.github.com/repos/apache/systemds/issues/1097","id":724729968,"node_id":"MDEyOklzc3VlQ29tbWVudDcyNDcyOTk2OA==","user":{"login":"Baunsgaard","id":9947148,"node_id":"MDQ6VXNlcjk5NDcxNDg=","avatar_url":"https://avatars.githubusercontent.com/u/9947148?v=4","gravatar_id":"","url":"https://api.github.com/users/Baunsgaard","html_url":"https://github.com/Baunsgaard","followers_url":"https://api.github.com/users/Baunsgaard/followers","following_url":"https://api.github.com/users/Baunsgaard/following{/other_user}","gists_url":"https://api.github.com/users/Baunsgaard/gists{/gist_id}","starred_url":"https://api.github.com/users/Baunsgaard/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Baunsgaard/subscriptions","organizations_url":"https://api.github.com/users/Baunsgaard/orgs","repos_url":"https://api.github.com/users/Baunsgaard/repos","events_url":"https://api.github.com/users/Baunsgaard/events{/privacy}","received_events_url":"https://api.github.com/users/Baunsgaard/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-11-10T14:17:01Z","updated_at":"2020-11-10T14:17:01Z","author_association":"CONTRIBUTOR","body":"> Added tests (builtin and federated) for new split builtin.\r\n> \r\n> I don't understand that it is working with right indexing on the federated outputs but it seems to.\r\n\r\noh nvm it is because it pulls the data to master","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/724729968/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/724965141","html_url":"https://github.com/apache/systemds/pull/1023#issuecomment-724965141","issue_url":"https://api.github.com/repos/apache/systemds/issues/1023","id":724965141,"node_id":"MDEyOklzc3VlQ29tbWVudDcyNDk2NTE0MQ==","user":{"login":"mboehm7","id":13721609,"node_id":"MDQ6VXNlcjEzNzIxNjA5","avatar_url":"https://avatars.githubusercontent.com/u/13721609?v=4","gravatar_id":"","url":"https://api.github.com/users/mboehm7","html_url":"https://github.com/mboehm7","followers_url":"https://api.github.com/users/mboehm7/followers","following_url":"https://api.github.com/users/mboehm7/following{/other_user}","gists_url":"https://api.github.com/users/mboehm7/gists{/gist_id}","starred_url":"https://api.github.com/users/mboehm7/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mboehm7/subscriptions","organizations_url":"https://api.github.com/users/mboehm7/orgs","repos_url":"https://api.github.com/users/mboehm7/repos","events_url":"https://api.github.com/users/mboehm7/events{/privacy}","received_events_url":"https://api.github.com/users/mboehm7/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-11-10T21:03:58Z","updated_at":"2020-11-10T21:03:58Z","author_association":"CONTRIBUTOR","body":"Thanks for the cleanup @Shafaq-Siddiqi - when finalizing the rework, could you please also have a look into (1) making the default number of components consistent with the documentation (1 vs 3), and (2) add tests with default configurations but more than one component (right now it fails for me with dimension mismatches with n=10 but runs fine with n=1). Once this PR is out of WIP status, I'll have a look and merge it in.   ","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/724965141/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/724966340","html_url":"https://github.com/apache/systemds/pull/1097#issuecomment-724966340","issue_url":"https://api.github.com/repos/apache/systemds/issues/1097","id":724966340,"node_id":"MDEyOklzc3VlQ29tbWVudDcyNDk2NjM0MA==","user":{"login":"mboehm7","id":13721609,"node_id":"MDQ6VXNlcjEzNzIxNjA5","avatar_url":"https://avatars.githubusercontent.com/u/13721609?v=4","gravatar_id":"","url":"https://api.github.com/users/mboehm7","html_url":"https://github.com/mboehm7","followers_url":"https://api.github.com/users/mboehm7/followers","following_url":"https://api.github.com/users/mboehm7/following{/other_user}","gists_url":"https://api.github.com/users/mboehm7/gists{/gist_id}","starred_url":"https://api.github.com/users/mboehm7/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mboehm7/subscriptions","organizations_url":"https://api.github.com/users/mboehm7/orgs","repos_url":"https://api.github.com/users/mboehm7/repos","events_url":"https://api.github.com/users/mboehm7/events{/privacy}","received_events_url":"https://api.github.com/users/mboehm7/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-11-10T21:06:16Z","updated_at":"2020-11-10T21:06:16Z","author_association":"CONTRIBUTOR","body":"Yes right, but we have @OlgaOvcharenko 's PR #1098 (federated right indexing) which would then also directly apply to this split contiguous.","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/724966340/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/725545701","html_url":"https://github.com/apache/systemds/pull/1092#issuecomment-725545701","issue_url":"https://api.github.com/repos/apache/systemds/issues/1092","id":725545701,"node_id":"MDEyOklzc3VlQ29tbWVudDcyNTU0NTcwMQ==","user":{"login":"j143","id":53068787,"node_id":"MDQ6VXNlcjUzMDY4Nzg3","avatar_url":"https://avatars.githubusercontent.com/u/53068787?v=4","gravatar_id":"","url":"https://api.github.com/users/j143","html_url":"https://github.com/j143","followers_url":"https://api.github.com/users/j143/followers","following_url":"https://api.github.com/users/j143/following{/other_user}","gists_url":"https://api.github.com/users/j143/gists{/gist_id}","starred_url":"https://api.github.com/users/j143/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/j143/subscriptions","organizations_url":"https://api.github.com/users/j143/orgs","repos_url":"https://api.github.com/users/j143/repos","events_url":"https://api.github.com/users/j143/events{/privacy}","received_events_url":"https://api.github.com/users/j143/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-11-11T17:10:26Z","updated_at":"2020-11-11T17:13:15Z","author_association":"CONTRIBUTOR","body":"Thank you for, providing the self documented commits.\r\n","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/725545701/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/726431330","html_url":"https://github.com/apache/systemds/pull/1102#issuecomment-726431330","issue_url":"https://api.github.com/repos/apache/systemds/issues/1102","id":726431330,"node_id":"MDEyOklzc3VlQ29tbWVudDcyNjQzMTMzMA==","user":{"login":"Baunsgaard","id":9947148,"node_id":"MDQ6VXNlcjk5NDcxNDg=","avatar_url":"https://avatars.githubusercontent.com/u/9947148?v=4","gravatar_id":"","url":"https://api.github.com/users/Baunsgaard","html_url":"https://github.com/Baunsgaard","followers_url":"https://api.github.com/users/Baunsgaard/followers","following_url":"https://api.github.com/users/Baunsgaard/following{/other_user}","gists_url":"https://api.github.com/users/Baunsgaard/gists{/gist_id}","starred_url":"https://api.github.com/users/Baunsgaard/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Baunsgaard/subscriptions","organizations_url":"https://api.github.com/users/Baunsgaard/orgs","repos_url":"https://api.github.com/users/Baunsgaard/repos","events_url":"https://api.github.com/users/Baunsgaard/events{/privacy}","received_events_url":"https://api.github.com/users/Baunsgaard/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-11-13T00:43:59Z","updated_at":"2020-11-13T00:43:59Z","author_association":"CONTRIBUTOR","body":"Hi, @OlgaOvcharenko\r\n\r\nI have taken your code and merged it with master, \r\nthere are some things we need to clean up in federationUtils (partially because i reintroduced some of our working aggregate functions), but otherwise the code looks fine.\r\nTomorrow either you or me have to finish this up to be ready to merge with master.\r\n","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/726431330/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/727259891","html_url":"https://github.com/apache/systemds/pull/1047#issuecomment-727259891","issue_url":"https://api.github.com/repos/apache/systemds/issues/1047","id":727259891,"node_id":"MDEyOklzc3VlQ29tbWVudDcyNzI1OTg5MQ==","user":{"login":"Baunsgaard","id":9947148,"node_id":"MDQ6VXNlcjk5NDcxNDg=","avatar_url":"https://avatars.githubusercontent.com/u/9947148?v=4","gravatar_id":"","url":"https://api.github.com/users/Baunsgaard","html_url":"https://github.com/Baunsgaard","followers_url":"https://api.github.com/users/Baunsgaard/followers","following_url":"https://api.github.com/users/Baunsgaard/following{/other_user}","gists_url":"https://api.github.com/users/Baunsgaard/gists{/gist_id}","starred_url":"https://api.github.com/users/Baunsgaard/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Baunsgaard/subscriptions","organizations_url":"https://api.github.com/users/Baunsgaard/orgs","repos_url":"https://api.github.com/users/Baunsgaard/repos","events_url":"https://api.github.com/users/Baunsgaard/events{/privacy}","received_events_url":"https://api.github.com/users/Baunsgaard/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-11-14T20:17:10Z","updated_at":"2020-11-14T20:17:10Z","author_association":"CONTRIBUTOR","body":"Im closing this PR, because i have just added a faster startup to the federated tests, by adding optional startup time to the threads spawned in a federated tests. This renders this PR obsolite.\r\n\r\nIf this conclusion is wrong feel free to reopen it @kev-inn .","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/727259891/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/727281582","html_url":"https://github.com/apache/systemds/pull/1101#issuecomment-727281582","issue_url":"https://api.github.com/repos/apache/systemds/issues/1101","id":727281582,"node_id":"MDEyOklzc3VlQ29tbWVudDcyNzI4MTU4Mg==","user":{"login":"corepointer","id":49227510,"node_id":"MDQ6VXNlcjQ5MjI3NTEw","avatar_url":"https://avatars.githubusercontent.com/u/49227510?v=4","gravatar_id":"","url":"https://api.github.com/users/corepointer","html_url":"https://github.com/corepointer","followers_url":"https://api.github.com/users/corepointer/followers","following_url":"https://api.github.com/users/corepointer/following{/other_user}","gists_url":"https://api.github.com/users/corepointer/gists{/gist_id}","starred_url":"https://api.github.com/users/corepointer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/corepointer/subscriptions","organizations_url":"https://api.github.com/users/corepointer/orgs","repos_url":"https://api.github.com/users/corepointer/repos","events_url":"https://api.github.com/users/corepointer/events{/privacy}","received_events_url":"https://api.github.com/users/corepointer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-11-14T23:41:42Z","updated_at":"2020-11-14T23:41:42Z","author_association":"CONTRIBUTOR","body":"> \r\n> \r\n> LGTM, i have mainly commented on syntax.\r\n\r\nThank you for the review!\r\nAs I already mentioned in the detailed comment replies, cleanup is WIP. But this PR doesn't make more mess than has already been there. So I think it can be merged nevertheless.","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/727281582/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/727282737","html_url":"https://github.com/apache/systemds/pull/1104#issuecomment-727282737","issue_url":"https://api.github.com/repos/apache/systemds/issues/1104","id":727282737,"node_id":"MDEyOklzc3VlQ29tbWVudDcyNzI4MjczNw==","user":{"login":"Baunsgaard","id":9947148,"node_id":"MDQ6VXNlcjk5NDcxNDg=","avatar_url":"https://avatars.githubusercontent.com/u/9947148?v=4","gravatar_id":"","url":"https://api.github.com/users/Baunsgaard","html_url":"https://github.com/Baunsgaard","followers_url":"https://api.github.com/users/Baunsgaard/followers","following_url":"https://api.github.com/users/Baunsgaard/following{/other_user}","gists_url":"https://api.github.com/users/Baunsgaard/gists{/gist_id}","starred_url":"https://api.github.com/users/Baunsgaard/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Baunsgaard/subscriptions","organizations_url":"https://api.github.com/users/Baunsgaard/orgs","repos_url":"https://api.github.com/users/Baunsgaard/repos","events_url":"https://api.github.com/users/Baunsgaard/events{/privacy}","received_events_url":"https://api.github.com/users/Baunsgaard/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-11-14T23:54:14Z","updated_at":"2020-11-14T23:54:14Z","author_association":"CONTRIBUTOR","body":"Thanks for the PR, well done :100: ","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/727282737/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/727284163","html_url":"https://github.com/apache/systemds/pull/1101#issuecomment-727284163","issue_url":"https://api.github.com/repos/apache/systemds/issues/1101","id":727284163,"node_id":"MDEyOklzc3VlQ29tbWVudDcyNzI4NDE2Mw==","user":{"login":"phaniarnab","id":4302361,"node_id":"MDQ6VXNlcjQzMDIzNjE=","avatar_url":"https://avatars.githubusercontent.com/u/4302361?v=4","gravatar_id":"","url":"https://api.github.com/users/phaniarnab","html_url":"https://github.com/phaniarnab","followers_url":"https://api.github.com/users/phaniarnab/followers","following_url":"https://api.github.com/users/phaniarnab/following{/other_user}","gists_url":"https://api.github.com/users/phaniarnab/gists{/gist_id}","starred_url":"https://api.github.com/users/phaniarnab/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/phaniarnab/subscriptions","organizations_url":"https://api.github.com/users/phaniarnab/orgs","repos_url":"https://api.github.com/users/phaniarnab/repos","events_url":"https://api.github.com/users/phaniarnab/events{/privacy}","received_events_url":"https://api.github.com/users/phaniarnab/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-11-15T00:07:32Z","updated_at":"2020-11-15T00:07:32Z","author_association":"CONTRIBUTOR","body":"LGTM.\r\nThanks for the fix. Pushing nnz counting to native might not produce much performance in mini-batch scenario, probably due to small sizes (openmp is not useful for smaller data), but can be beneficial for higher data sizes.","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/727284163/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/727628915","html_url":"https://github.com/apache/systemds/pull/1106#issuecomment-727628915","issue_url":"https://api.github.com/repos/apache/systemds/issues/1106","id":727628915,"node_id":"MDEyOklzc3VlQ29tbWVudDcyNzYyODkxNQ==","user":{"login":"mboehm7","id":13721609,"node_id":"MDQ6VXNlcjEzNzIxNjA5","avatar_url":"https://avatars.githubusercontent.com/u/13721609?v=4","gravatar_id":"","url":"https://api.github.com/users/mboehm7","html_url":"https://github.com/mboehm7","followers_url":"https://api.github.com/users/mboehm7/followers","following_url":"https://api.github.com/users/mboehm7/following{/other_user}","gists_url":"https://api.github.com/users/mboehm7/gists{/gist_id}","starred_url":"https://api.github.com/users/mboehm7/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mboehm7/subscriptions","organizations_url":"https://api.github.com/users/mboehm7/orgs","repos_url":"https://api.github.com/users/mboehm7/repos","events_url":"https://api.github.com/users/mboehm7/events{/privacy}","received_events_url":"https://api.github.com/users/mboehm7/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-11-15T20:11:19Z","updated_at":"2020-11-15T20:11:19Z","author_association":"CONTRIBUTOR","body":"no, seems fine and I'm also done for now. In order to run the test pipeline fully federated, it would be good though to extend the removeEmpty support for selection vectors, which makes the splitting vastly faster and preserves a nice balance across federated partitions.","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/727628915/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/727639604","html_url":"https://github.com/apache/systemds/pull/1106#issuecomment-727639604","issue_url":"https://api.github.com/repos/apache/systemds/issues/1106","id":727639604,"node_id":"MDEyOklzc3VlQ29tbWVudDcyNzYzOTYwNA==","user":{"login":"mboehm7","id":13721609,"node_id":"MDQ6VXNlcjEzNzIxNjA5","avatar_url":"https://avatars.githubusercontent.com/u/13721609?v=4","gravatar_id":"","url":"https://api.github.com/users/mboehm7","html_url":"https://github.com/mboehm7","followers_url":"https://api.github.com/users/mboehm7/followers","following_url":"https://api.github.com/users/mboehm7/following{/other_user}","gists_url":"https://api.github.com/users/mboehm7/gists{/gist_id}","starred_url":"https://api.github.com/users/mboehm7/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mboehm7/subscriptions","organizations_url":"https://api.github.com/users/mboehm7/orgs","repos_url":"https://api.github.com/users/mboehm7/repos","events_url":"https://api.github.com/users/mboehm7/events{/privacy}","received_events_url":"https://api.github.com/users/mboehm7/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-11-15T21:26:25Z","updated_at":"2020-11-15T21:26:25Z","author_association":"CONTRIBUTOR","body":"A general question on this: isn't a full block just a row or column partitioned federated matrix and hence the existing operations can directly be applied. Yes, we could implement them more efficiently (basic forwarding, no aggregation, etc) but as this is a special case I'm not sure it's worth the implementation complexity. Any thoughts? ","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/727639604/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/727640449","html_url":"https://github.com/apache/systemds/pull/1106#issuecomment-727640449","issue_url":"https://api.github.com/repos/apache/systemds/issues/1106","id":727640449,"node_id":"MDEyOklzc3VlQ29tbWVudDcyNzY0MDQ0OQ==","user":{"login":"Baunsgaard","id":9947148,"node_id":"MDQ6VXNlcjk5NDcxNDg=","avatar_url":"https://avatars.githubusercontent.com/u/9947148?v=4","gravatar_id":"","url":"https://api.github.com/users/Baunsgaard","html_url":"https://github.com/Baunsgaard","followers_url":"https://api.github.com/users/Baunsgaard/followers","following_url":"https://api.github.com/users/Baunsgaard/following{/other_user}","gists_url":"https://api.github.com/users/Baunsgaard/gists{/gist_id}","starred_url":"https://api.github.com/users/Baunsgaard/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Baunsgaard/subscriptions","organizations_url":"https://api.github.com/users/Baunsgaard/orgs","repos_url":"https://api.github.com/users/Baunsgaard/repos","events_url":"https://api.github.com/users/Baunsgaard/events{/privacy}","received_events_url":"https://api.github.com/users/Baunsgaard/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-11-15T21:32:25Z","updated_at":"2020-11-15T21:32:25Z","author_association":"CONTRIBUTOR","body":"> A general question on this: isn't a full block just a row or column partitioned federated matrix and hence the existing operations can directly be applied. Yes, we could implement them more efficiently (basic forwarding, no aggregation, etc) but as this is a special case I'm not sure it's worth the implementation complexity. Any thoughts?\r\n\r\nyes, but the basic issue is that when you only have one federated location, should i initialize as a row or a col?\r\nCurrently this dilemma results in scenarios where the data is aggregated from the federated sites when we have one worker.\r\n\r\nI don't intend to optimize particularly for it, but with this addition we are able to leverage both our row and col optimized operations in this special case with not to much extra code.\r\n","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/727640449/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/727640839","html_url":"https://github.com/apache/systemds/pull/1106#issuecomment-727640839","issue_url":"https://api.github.com/repos/apache/systemds/issues/1106","id":727640839,"node_id":"MDEyOklzc3VlQ29tbWVudDcyNzY0MDgzOQ==","user":{"login":"mboehm7","id":13721609,"node_id":"MDQ6VXNlcjEzNzIxNjA5","avatar_url":"https://avatars.githubusercontent.com/u/13721609?v=4","gravatar_id":"","url":"https://api.github.com/users/mboehm7","html_url":"https://github.com/mboehm7","followers_url":"https://api.github.com/users/mboehm7/followers","following_url":"https://api.github.com/users/mboehm7/following{/other_user}","gists_url":"https://api.github.com/users/mboehm7/gists{/gist_id}","starred_url":"https://api.github.com/users/mboehm7/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mboehm7/subscriptions","organizations_url":"https://api.github.com/users/mboehm7/orgs","repos_url":"https://api.github.com/users/mboehm7/repos","events_url":"https://api.github.com/users/mboehm7/events{/privacy}","received_events_url":"https://api.github.com/users/mboehm7/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-11-15T21:35:12Z","updated_at":"2020-11-15T21:35:12Z","author_association":"CONTRIBUTOR","body":"ok, increasing the generality of implementations is a good idea. In that case I would recommend to not probe for type FULL in individual operations, but put methods isRowPartitioned (ROW or FULL), isColumnPartitions (COL or FULL) into the enum type and then probe these methods from the instructions.","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/727640839/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/727640947","html_url":"https://github.com/apache/systemds/pull/1106#issuecomment-727640947","issue_url":"https://api.github.com/repos/apache/systemds/issues/1106","id":727640947,"node_id":"MDEyOklzc3VlQ29tbWVudDcyNzY0MDk0Nw==","user":{"login":"Baunsgaard","id":9947148,"node_id":"MDQ6VXNlcjk5NDcxNDg=","avatar_url":"https://avatars.githubusercontent.com/u/9947148?v=4","gravatar_id":"","url":"https://api.github.com/users/Baunsgaard","html_url":"https://github.com/Baunsgaard","followers_url":"https://api.github.com/users/Baunsgaard/followers","following_url":"https://api.github.com/users/Baunsgaard/following{/other_user}","gists_url":"https://api.github.com/users/Baunsgaard/gists{/gist_id}","starred_url":"https://api.github.com/users/Baunsgaard/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Baunsgaard/subscriptions","organizations_url":"https://api.github.com/users/Baunsgaard/orgs","repos_url":"https://api.github.com/users/Baunsgaard/repos","events_url":"https://api.github.com/users/Baunsgaard/events{/privacy}","received_events_url":"https://api.github.com/users/Baunsgaard/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-11-15T21:36:03Z","updated_at":"2020-11-15T21:36:03Z","author_association":"CONTRIBUTOR","body":"> ok, increasing the generality of implementations is a good idea. In that case I would recommend to not probe for type FULL in individual operations, but put methods isRowPartitioned (ROW or FULL), isColumnPartitions (COL or FULL) into the enum type and then probe these methods from the instructions.\r\n\r\nAh good idea, I forgot java can do this with Enums","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/727640947/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/728301245","html_url":"https://github.com/apache/systemds/pull/1023#issuecomment-728301245","issue_url":"https://api.github.com/repos/apache/systemds/issues/1023","id":728301245,"node_id":"MDEyOklzc3VlQ29tbWVudDcyODMwMTI0NQ==","user":{"login":"mboehm7","id":13721609,"node_id":"MDQ6VXNlcjEzNzIxNjA5","avatar_url":"https://avatars.githubusercontent.com/u/13721609?v=4","gravatar_id":"","url":"https://api.github.com/users/mboehm7","html_url":"https://github.com/mboehm7","followers_url":"https://api.github.com/users/mboehm7/followers","following_url":"https://api.github.com/users/mboehm7/following{/other_user}","gists_url":"https://api.github.com/users/mboehm7/gists{/gist_id}","starred_url":"https://api.github.com/users/mboehm7/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mboehm7/subscriptions","organizations_url":"https://api.github.com/users/mboehm7/orgs","repos_url":"https://api.github.com/users/mboehm7/repos","events_url":"https://api.github.com/users/mboehm7/events{/privacy}","received_events_url":"https://api.github.com/users/mboehm7/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-11-16T20:19:03Z","updated_at":"2020-11-16T20:19:03Z","author_association":"CONTRIBUTOR","body":"LGTM - thanks for the cleanup @Shafaq-Siddiqi. The scenario with 10 components was still failing, but after some debugging it turned out this was due to Kmeans not converging. During the merge I fixed the hard-coded maximum iterations for Kmeans, some formatting issues, and vectorized part of the cholesky computation. With those changes it ran fine.","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/728301245/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/730010319","html_url":"https://github.com/apache/systemds/pull/1110#issuecomment-730010319","issue_url":"https://api.github.com/repos/apache/systemds/issues/1110","id":730010319,"node_id":"MDEyOklzc3VlQ29tbWVudDczMDAxMDMxOQ==","user":{"login":"Baunsgaard","id":9947148,"node_id":"MDQ6VXNlcjk5NDcxNDg=","avatar_url":"https://avatars.githubusercontent.com/u/9947148?v=4","gravatar_id":"","url":"https://api.github.com/users/Baunsgaard","html_url":"https://github.com/Baunsgaard","followers_url":"https://api.github.com/users/Baunsgaard/followers","following_url":"https://api.github.com/users/Baunsgaard/following{/other_user}","gists_url":"https://api.github.com/users/Baunsgaard/gists{/gist_id}","starred_url":"https://api.github.com/users/Baunsgaard/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Baunsgaard/subscriptions","organizations_url":"https://api.github.com/users/Baunsgaard/orgs","repos_url":"https://api.github.com/users/Baunsgaard/repos","events_url":"https://api.github.com/users/Baunsgaard/events{/privacy}","received_events_url":"https://api.github.com/users/Baunsgaard/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-11-18T22:58:45Z","updated_at":"2020-11-18T22:58:45Z","author_association":"CONTRIBUTOR","body":"```code\r\nBefore\r\n  2  tak+*         16.672   1200\r\nAfter\r\n  2  tak+*          6.257    600\r\n```","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/730010319/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/730038154","html_url":"https://github.com/apache/systemds/pull/1110#issuecomment-730038154","issue_url":"https://api.github.com/repos/apache/systemds/issues/1110","id":730038154,"node_id":"MDEyOklzc3VlQ29tbWVudDczMDAzODE1NA==","user":{"login":"mboehm7","id":13721609,"node_id":"MDQ6VXNlcjEzNzIxNjA5","avatar_url":"https://avatars.githubusercontent.com/u/13721609?v=4","gravatar_id":"","url":"https://api.github.com/users/mboehm7","html_url":"https://github.com/mboehm7","followers_url":"https://api.github.com/users/mboehm7/followers","following_url":"https://api.github.com/users/mboehm7/following{/other_user}","gists_url":"https://api.github.com/users/mboehm7/gists{/gist_id}","starred_url":"https://api.github.com/users/mboehm7/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mboehm7/subscriptions","organizations_url":"https://api.github.com/users/mboehm7/orgs","repos_url":"https://api.github.com/users/mboehm7/repos","events_url":"https://api.github.com/users/mboehm7/events{/privacy}","received_events_url":"https://api.github.com/users/mboehm7/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-11-19T00:13:58Z","updated_at":"2020-11-19T00:13:58Z","author_association":"CONTRIBUTOR","body":"adding ternary aggregates is fine, but has nothing to do with the title of disabling rmvar right? Regarding the deleted wait on cleanup, please be aware that this might require federated worker changes as now they have to deal with concurrent RPC on a single execution context (not just concurrent RPC on different execution contexts that are managed in a concurrent hashmap). So it has a chance of brittle failures when these RPCs conflict on symbol table updates.","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/730038154/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/730042382","html_url":"https://github.com/apache/systemds/pull/1110#issuecomment-730042382","issue_url":"https://api.github.com/repos/apache/systemds/issues/1110","id":730042382,"node_id":"MDEyOklzc3VlQ29tbWVudDczMDA0MjM4Mg==","user":{"login":"Baunsgaard","id":9947148,"node_id":"MDQ6VXNlcjk5NDcxNDg=","avatar_url":"https://avatars.githubusercontent.com/u/9947148?v=4","gravatar_id":"","url":"https://api.github.com/users/Baunsgaard","html_url":"https://github.com/Baunsgaard","followers_url":"https://api.github.com/users/Baunsgaard/followers","following_url":"https://api.github.com/users/Baunsgaard/following{/other_user}","gists_url":"https://api.github.com/users/Baunsgaard/gists{/gist_id}","starred_url":"https://api.github.com/users/Baunsgaard/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Baunsgaard/subscriptions","organizations_url":"https://api.github.com/users/Baunsgaard/orgs","repos_url":"https://api.github.com/users/Baunsgaard/repos","events_url":"https://api.github.com/users/Baunsgaard/events{/privacy}","received_events_url":"https://api.github.com/users/Baunsgaard/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-11-19T00:25:47Z","updated_at":"2020-11-19T00:25:47Z","author_association":"CONTRIBUTOR","body":"Yes, I have realized that, i have simply gone back to having a background thread doing the cleanup.\r\nOlga added a line at some point, forcing this to be run in the same thread, this made the rm-var a blocking operation on federated variables, unlike before.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/730042382/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/730042985","html_url":"https://github.com/apache/systemds/pull/1110#issuecomment-730042985","issue_url":"https://api.github.com/repos/apache/systemds/issues/1110","id":730042985,"node_id":"MDEyOklzc3VlQ29tbWVudDczMDA0Mjk4NQ==","user":{"login":"Baunsgaard","id":9947148,"node_id":"MDQ6VXNlcjk5NDcxNDg=","avatar_url":"https://avatars.githubusercontent.com/u/9947148?v=4","gravatar_id":"","url":"https://api.github.com/users/Baunsgaard","html_url":"https://github.com/Baunsgaard","followers_url":"https://api.github.com/users/Baunsgaard/followers","following_url":"https://api.github.com/users/Baunsgaard/following{/other_user}","gists_url":"https://api.github.com/users/Baunsgaard/gists{/gist_id}","starred_url":"https://api.github.com/users/Baunsgaard/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Baunsgaard/subscriptions","organizations_url":"https://api.github.com/users/Baunsgaard/orgs","repos_url":"https://api.github.com/users/Baunsgaard/repos","events_url":"https://api.github.com/users/Baunsgaard/events{/privacy}","received_events_url":"https://api.github.com/users/Baunsgaard/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-11-19T00:27:26Z","updated_at":"2020-11-19T00:27:26Z","author_association":"CONTRIBUTOR","body":"> adding ternary aggregates is fine, but has nothing to do with the title of disabling rmvar right? Regarding the deleted wait on cleanup, please be aware that this might require federated worker changes as now they have to deal with concurrent RPC on a single execution context (not just concurrent RPC on different execution contexts that are managed in a concurrent hashmap). So it has a chance of brittle failures when these RPCs conflict on symbol table updates.\r\n\r\nno ternary has nothing to do with the pr.. but it was one of the operation s making L2SVM slow, so i just added it.\r\nUnfortunally it is only relevant if y is federated as well. But in that case, the wide network becomes very slow.","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/730042985/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/732130997","html_url":"https://github.com/apache/systemds/pull/1113#issuecomment-732130997","issue_url":"https://api.github.com/repos/apache/systemds/issues/1113","id":732130997,"node_id":"MDEyOklzc3VlQ29tbWVudDczMjEzMDk5Nw==","user":{"login":"sebwrede","id":32260341,"node_id":"MDQ6VXNlcjMyMjYwMzQx","avatar_url":"https://avatars.githubusercontent.com/u/32260341?v=4","gravatar_id":"","url":"https://api.github.com/users/sebwrede","html_url":"https://github.com/sebwrede","followers_url":"https://api.github.com/users/sebwrede/followers","following_url":"https://api.github.com/users/sebwrede/following{/other_user}","gists_url":"https://api.github.com/users/sebwrede/gists{/gist_id}","starred_url":"https://api.github.com/users/sebwrede/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sebwrede/subscriptions","organizations_url":"https://api.github.com/users/sebwrede/orgs","repos_url":"https://api.github.com/users/sebwrede/repos","events_url":"https://api.github.com/users/sebwrede/events{/privacy}","received_events_url":"https://api.github.com/users/sebwrede/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-11-23T12:26:01Z","updated_at":"2020-11-23T12:26:01Z","author_association":"CONTRIBUTOR","body":"**Generally, I think this PR looks good.** \r\nIn AutomatedTestBase:640, you create a new PrivacyConstraint. This means that it writes the privacy level to the metadata file. Is this necessary for your tests? You could just pass null to the method call and then it would not write any privacy constraints to the metadata file. \r\n\r\n**Comments on you questions/issues:**\r\n\r\n> The hybrid federated parameter server unit tests fail stating \"Shuffle\" scheme is not supported. This is because the read somehow pulls in the matrix and presents it as a dense block. This means the parameter server is running in regular mode thus failing on the shuffle scheme.\r\n\r\nWhich \"read\" are you talking about here? Is it the one in ShuffleFederatedScheme or is it the one that originally reads the input? \r\n\r\n> The federated parameter server unit test input directory is currently not cleaned up. Should this be done after every run?\r\n\r\nI think that tests in other packages do not clean this up. That is at least what I have observed, so I don't think you have to worry about it. \r\n\r\n> How to generate the ID of a newly created FederationMap correctly?\r\n\r\nI think that you can make a call to: \r\n`FederationUtils.getNextFedDataID()`","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/732130997/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/732284324","html_url":"https://github.com/apache/systemds/pull/1114#issuecomment-732284324","issue_url":"https://api.github.com/repos/apache/systemds/issues/1114","id":732284324,"node_id":"MDEyOklzc3VlQ29tbWVudDczMjI4NDMyNA==","user":{"login":"Baunsgaard","id":9947148,"node_id":"MDQ6VXNlcjk5NDcxNDg=","avatar_url":"https://avatars.githubusercontent.com/u/9947148?v=4","gravatar_id":"","url":"https://api.github.com/users/Baunsgaard","html_url":"https://github.com/Baunsgaard","followers_url":"https://api.github.com/users/Baunsgaard/followers","following_url":"https://api.github.com/users/Baunsgaard/following{/other_user}","gists_url":"https://api.github.com/users/Baunsgaard/gists{/gist_id}","starred_url":"https://api.github.com/users/Baunsgaard/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Baunsgaard/subscriptions","organizations_url":"https://api.github.com/users/Baunsgaard/orgs","repos_url":"https://api.github.com/users/Baunsgaard/repos","events_url":"https://api.github.com/users/Baunsgaard/events{/privacy}","received_events_url":"https://api.github.com/users/Baunsgaard/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-11-23T16:48:15Z","updated_at":"2020-11-23T16:48:15Z","author_association":"CONTRIBUTOR","body":"Measurements before was wrong actual results are:\r\n```code\r\ncla     ,              3.1200\r\nlcla    ,              0.4000\r\nmkl     ,             62.3300\r\ncla     ,              3.0800\r\nlcla    ,              0.4300\r\nmkl     ,             64.5300\r\n```","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/732284324/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/732436450","html_url":"https://github.com/apache/systemds/pull/1055#issuecomment-732436450","issue_url":"https://api.github.com/repos/apache/systemds/issues/1055","id":732436450,"node_id":"MDEyOklzc3VlQ29tbWVudDczMjQzNjQ1MA==","user":{"login":"Shafaq-Siddiqi","id":53634062,"node_id":"MDQ6VXNlcjUzNjM0MDYy","avatar_url":"https://avatars.githubusercontent.com/u/53634062?v=4","gravatar_id":"","url":"https://api.github.com/users/Shafaq-Siddiqi","html_url":"https://github.com/Shafaq-Siddiqi","followers_url":"https://api.github.com/users/Shafaq-Siddiqi/followers","following_url":"https://api.github.com/users/Shafaq-Siddiqi/following{/other_user}","gists_url":"https://api.github.com/users/Shafaq-Siddiqi/gists{/gist_id}","starred_url":"https://api.github.com/users/Shafaq-Siddiqi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Shafaq-Siddiqi/subscriptions","organizations_url":"https://api.github.com/users/Shafaq-Siddiqi/orgs","repos_url":"https://api.github.com/users/Shafaq-Siddiqi/repos","events_url":"https://api.github.com/users/Shafaq-Siddiqi/events{/privacy}","received_events_url":"https://api.github.com/users/Shafaq-Siddiqi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-11-23T21:27:10Z","updated_at":"2020-11-23T21:27:10Z","author_association":"CONTRIBUTOR","body":"The functionalities with minor improvements are merged into a new PR with the same name.","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/732436450/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/732810912","html_url":"https://github.com/apache/systemds/pull/1113#issuecomment-732810912","issue_url":"https://api.github.com/repos/apache/systemds/issues/1113","id":732810912,"node_id":"MDEyOklzc3VlQ29tbWVudDczMjgxMDkxMg==","user":{"login":"tobiasrieger","id":39962737,"node_id":"MDQ6VXNlcjM5OTYyNzM3","avatar_url":"https://avatars.githubusercontent.com/u/39962737?v=4","gravatar_id":"","url":"https://api.github.com/users/tobiasrieger","html_url":"https://github.com/tobiasrieger","followers_url":"https://api.github.com/users/tobiasrieger/followers","following_url":"https://api.github.com/users/tobiasrieger/following{/other_user}","gists_url":"https://api.github.com/users/tobiasrieger/gists{/gist_id}","starred_url":"https://api.github.com/users/tobiasrieger/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tobiasrieger/subscriptions","organizations_url":"https://api.github.com/users/tobiasrieger/orgs","repos_url":"https://api.github.com/users/tobiasrieger/repos","events_url":"https://api.github.com/users/tobiasrieger/events{/privacy}","received_events_url":"https://api.github.com/users/tobiasrieger/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-11-24T10:35:34Z","updated_at":"2020-11-24T10:35:34Z","author_association":"CONTRIBUTOR","body":"I'm talking about the read, that originally reads the input. I've already asked Sebastian B. to take a look, as I don't think the issue is with the parameter server. \r\n\r\nThank you so much for your other suggestions, I've implemented them!","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/732810912/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/735300632","html_url":"https://github.com/apache/systemds/pull/1113#issuecomment-735300632","issue_url":"https://api.github.com/repos/apache/systemds/issues/1113","id":735300632,"node_id":"MDEyOklzc3VlQ29tbWVudDczNTMwMDYzMg==","user":{"login":"mboehm7","id":13721609,"node_id":"MDQ6VXNlcjEzNzIxNjA5","avatar_url":"https://avatars.githubusercontent.com/u/13721609?v=4","gravatar_id":"","url":"https://api.github.com/users/mboehm7","html_url":"https://github.com/mboehm7","followers_url":"https://api.github.com/users/mboehm7/followers","following_url":"https://api.github.com/users/mboehm7/following{/other_user}","gists_url":"https://api.github.com/users/mboehm7/gists{/gist_id}","starred_url":"https://api.github.com/users/mboehm7/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mboehm7/subscriptions","organizations_url":"https://api.github.com/users/mboehm7/orgs","repos_url":"https://api.github.com/users/mboehm7/repos","events_url":"https://api.github.com/users/mboehm7/events{/privacy}","received_events_url":"https://api.github.com/users/mboehm7/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-11-28T22:49:00Z","updated_at":"2020-11-28T22:49:00Z","author_association":"CONTRIBUTOR","body":"ok, this invalid data consolidation issue is now fixed in master - please rebase.","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/735300632/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/743759054","html_url":"https://github.com/apache/systemds/pull/1123#issuecomment-743759054","issue_url":"https://api.github.com/repos/apache/systemds/issues/1123","id":743759054,"node_id":"MDEyOklzc3VlQ29tbWVudDc0Mzc1OTA1NA==","user":{"login":"mboehm7","id":13721609,"node_id":"MDQ6VXNlcjEzNzIxNjA5","avatar_url":"https://avatars.githubusercontent.com/u/13721609?v=4","gravatar_id":"","url":"https://api.github.com/users/mboehm7","html_url":"https://github.com/mboehm7","followers_url":"https://api.github.com/users/mboehm7/followers","following_url":"https://api.github.com/users/mboehm7/following{/other_user}","gists_url":"https://api.github.com/users/mboehm7/gists{/gist_id}","starred_url":"https://api.github.com/users/mboehm7/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mboehm7/subscriptions","organizations_url":"https://api.github.com/users/mboehm7/orgs","repos_url":"https://api.github.com/users/mboehm7/repos","events_url":"https://api.github.com/users/mboehm7/events{/privacy}","received_events_url":"https://api.github.com/users/mboehm7/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-12-12T13:50:26Z","updated_at":"2020-12-12T13:50:26Z","author_association":"CONTRIBUTOR","body":"Thanks @Baunsgaard for eliminating the unnecessary colMeans in case of center and scale. However, please refrain from unnecessary changes of APIs and external behavior. I'll revert to the original script and simplify the scale case accordingly. As minor notes: the tests were failing because we only support right-hand-side broadcasting, all inputs for an ifelse are computed within a single DAG which led to unnecessary computation, the scale vector replaced NaN and not zeros, and please avoid empty lines before closing braces.","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/743759054/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/743764247","html_url":"https://github.com/apache/systemds/pull/1123#issuecomment-743764247","issue_url":"https://api.github.com/repos/apache/systemds/issues/1123","id":743764247,"node_id":"MDEyOklzc3VlQ29tbWVudDc0Mzc2NDI0Nw==","user":{"login":"Baunsgaard","id":9947148,"node_id":"MDQ6VXNlcjk5NDcxNDg=","avatar_url":"https://avatars.githubusercontent.com/u/9947148?v=4","gravatar_id":"","url":"https://api.github.com/users/Baunsgaard","html_url":"https://github.com/Baunsgaard","followers_url":"https://api.github.com/users/Baunsgaard/followers","following_url":"https://api.github.com/users/Baunsgaard/following{/other_user}","gists_url":"https://api.github.com/users/Baunsgaard/gists{/gist_id}","starred_url":"https://api.github.com/users/Baunsgaard/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Baunsgaard/subscriptions","organizations_url":"https://api.github.com/users/Baunsgaard/orgs","repos_url":"https://api.github.com/users/Baunsgaard/repos","events_url":"https://api.github.com/users/Baunsgaard/events{/privacy}","received_events_url":"https://api.github.com/users/Baunsgaard/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-12-12T14:30:09Z","updated_at":"2020-12-12T14:30:09Z","author_association":"CONTRIBUTOR","body":"1. I changed the replace Nan because the NaN would be introduced in cases of division by zero. therefore it made sense to change the replacement on the scale factor. This would of cause not remove already existing NaN values in the matrix, but i would say it's fair to do such a cleanup before calling PCA, even if it change the external behavior.\r\n2. the changes in API allowed us to make a PCA predict function, such that you could \"train\" a PCA, using the methods already provided and actually reconstruct the approximation of the original data using the extra returned parameters, and predict using PCA on unseen data. If the colMeans, and scale is not returned this is impossible. Furthermore those returns could simply be ignored by the end user with no impact on performance.\r\n3. I wanted to have a measure of how much a PCA was effected by lossy compression since this would give a fair measure of lost data, therefore i needed the extra outputs in the API. \r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/743764247/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/743766561","html_url":"https://github.com/apache/systemds/pull/1123#issuecomment-743766561","issue_url":"https://api.github.com/repos/apache/systemds/issues/1123","id":743766561,"node_id":"MDEyOklzc3VlQ29tbWVudDc0Mzc2NjU2MQ==","user":{"login":"mboehm7","id":13721609,"node_id":"MDQ6VXNlcjEzNzIxNjA5","avatar_url":"https://avatars.githubusercontent.com/u/13721609?v=4","gravatar_id":"","url":"https://api.github.com/users/mboehm7","html_url":"https://github.com/mboehm7","followers_url":"https://api.github.com/users/mboehm7/followers","following_url":"https://api.github.com/users/mboehm7/following{/other_user}","gists_url":"https://api.github.com/users/mboehm7/gists{/gist_id}","starred_url":"https://api.github.com/users/mboehm7/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mboehm7/subscriptions","organizations_url":"https://api.github.com/users/mboehm7/orgs","repos_url":"https://api.github.com/users/mboehm7/repos","events_url":"https://api.github.com/users/mboehm7/events{/privacy}","received_events_url":"https://api.github.com/users/mboehm7/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-12-12T14:47:24Z","updated_at":"2020-12-12T14:47:24Z","author_association":"CONTRIBUTOR","body":"ad 1) besides the changed overall behavior, the comment referred to `replace(target=ScaleFactor, pattern=NaN, replacement=1e-16);`, which would need to replace zero as this happens before the division.\r\n\r\nad 2/3) for local experiments this is fine, but for the hierarchy of builtin functions, we should aim for simple and stable APIs and find other ways to automatically remove redundancy (e.g., by lineage-based reuse). Passing all these intermediates around would quickly become really messy and confusing for both users and developers. Which PCA predict do you refer to - is there already a  builtin function for it? Generally, please don't rewrite the builtin functions just to make them more amenable for compressed operations.","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/743766561/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/743772534","html_url":"https://github.com/apache/systemds/pull/1123#issuecomment-743772534","issue_url":"https://api.github.com/repos/apache/systemds/issues/1123","id":743772534,"node_id":"MDEyOklzc3VlQ29tbWVudDc0Mzc3MjUzNA==","user":{"login":"Baunsgaard","id":9947148,"node_id":"MDQ6VXNlcjk5NDcxNDg=","avatar_url":"https://avatars.githubusercontent.com/u/9947148?v=4","gravatar_id":"","url":"https://api.github.com/users/Baunsgaard","html_url":"https://github.com/Baunsgaard","followers_url":"https://api.github.com/users/Baunsgaard/followers","following_url":"https://api.github.com/users/Baunsgaard/following{/other_user}","gists_url":"https://api.github.com/users/Baunsgaard/gists{/gist_id}","starred_url":"https://api.github.com/users/Baunsgaard/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Baunsgaard/subscriptions","organizations_url":"https://api.github.com/users/Baunsgaard/orgs","repos_url":"https://api.github.com/users/Baunsgaard/repos","events_url":"https://api.github.com/users/Baunsgaard/events{/privacy}","received_events_url":"https://api.github.com/users/Baunsgaard/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-12-12T15:31:15Z","updated_at":"2020-12-12T15:31:15Z","author_association":"CONTRIBUTOR","body":"> ad 1) besides the changed overall behavior, the comment referred to `replace(target=ScaleFactor, pattern=NaN, replacement=1e-16);`, which would need to replace zero as this happens before the division.\r\n\r\nYes, and exactly why i replace all the 0 values, to avoid introducing NaN. instead of removing the NaN on the full matrix after the division operation.\r\n \r\n> ad 2/3) for local experiments this is fine, but for the hierarchy of builtin functions, we should aim for simple and stable APIs and find other ways to automatically remove redundancy (e.g., by lineage-based reuse).\r\n\r\nI agree simplicity is of utmost importance, but with the current PCA, we are limited to only apply the standard version without scaling if we want to be able to reuse the model on unseen data. This results in a limited system overall. The redundancy of the extra return values, should be handled already by the system.\r\n\r\n> Passing all these intermediates around would quickly become really messy and confusing for both users and developers. Which PCA predict do you refer to - is there already a builtin function for it?\r\n\r\nI agree that it becomes messy, and it have been for a while, especially if you consider the neural network part of the system. where each layers weight and bias is parsed back. But these returns are necessary for inference on unseen data. I have added a PR with the PCA predict #1124 . Maybe it could be nice containing all the methods for an algorithm in the same file, such that the predict is located inside the same file?\r\n\r\n> Generally, please don't rewrite the builtin functions just to make them more amenable for compressed operations.\r\n\r\nI would argue that these changes are for the \"greater good\", and therefore also better for compression, I am avoiding changing things just for compressions sake, but thanks for the reminder :smile: .\r\n","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/743772534/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/743777089","html_url":"https://github.com/apache/systemds/pull/1123#issuecomment-743777089","issue_url":"https://api.github.com/repos/apache/systemds/issues/1123","id":743777089,"node_id":"MDEyOklzc3VlQ29tbWVudDc0Mzc3NzA4OQ==","user":{"login":"mboehm7","id":13721609,"node_id":"MDQ6VXNlcjEzNzIxNjA5","avatar_url":"https://avatars.githubusercontent.com/u/13721609?v=4","gravatar_id":"","url":"https://api.github.com/users/mboehm7","html_url":"https://github.com/mboehm7","followers_url":"https://api.github.com/users/mboehm7/followers","following_url":"https://api.github.com/users/mboehm7/following{/other_user}","gists_url":"https://api.github.com/users/mboehm7/gists{/gist_id}","starred_url":"https://api.github.com/users/mboehm7/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mboehm7/subscriptions","organizations_url":"https://api.github.com/users/mboehm7/orgs","repos_url":"https://api.github.com/users/mboehm7/repos","events_url":"https://api.github.com/users/mboehm7/events{/privacy}","received_events_url":"https://api.github.com/users/mboehm7/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-12-12T16:04:15Z","updated_at":"2020-12-12T16:04:15Z","author_association":"CONTRIBUTOR","body":"ad 1) there is a mismatch between what you wanted to do and what your code actual did, the comment just pointed that out. The PR did this\r\n\r\n`replace(target=ScaleFactor, pattern=NaN, replacement=1e-16);` \r\n\r\nbut you **wanted** to do this\r\n\r\n`replace(target=ScaleFactor, pattern=0, replacement=1e-16);`\r\n","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/743777089/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/743778523","html_url":"https://github.com/apache/systemds/pull/1123#issuecomment-743778523","issue_url":"https://api.github.com/repos/apache/systemds/issues/1123","id":743778523,"node_id":"MDEyOklzc3VlQ29tbWVudDc0Mzc3ODUyMw==","user":{"login":"Baunsgaard","id":9947148,"node_id":"MDQ6VXNlcjk5NDcxNDg=","avatar_url":"https://avatars.githubusercontent.com/u/9947148?v=4","gravatar_id":"","url":"https://api.github.com/users/Baunsgaard","html_url":"https://github.com/Baunsgaard","followers_url":"https://api.github.com/users/Baunsgaard/followers","following_url":"https://api.github.com/users/Baunsgaard/following{/other_user}","gists_url":"https://api.github.com/users/Baunsgaard/gists{/gist_id}","starred_url":"https://api.github.com/users/Baunsgaard/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Baunsgaard/subscriptions","organizations_url":"https://api.github.com/users/Baunsgaard/orgs","repos_url":"https://api.github.com/users/Baunsgaard/repos","events_url":"https://api.github.com/users/Baunsgaard/events{/privacy}","received_events_url":"https://api.github.com/users/Baunsgaard/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-12-12T16:15:41Z","updated_at":"2020-12-12T16:15:41Z","author_association":"CONTRIBUTOR","body":"> but you **wanted** to do this\r\n\r\nups, logic fine ... execution wrong. Great catch, thanks!","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/743778523/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/747368122","html_url":"https://github.com/apache/systemds/pull/1125#issuecomment-747368122","issue_url":"https://api.github.com/repos/apache/systemds/issues/1125","id":747368122,"node_id":"MDEyOklzc3VlQ29tbWVudDc0NzM2ODEyMg==","user":{"login":"Shafaq-Siddiqi","id":53634062,"node_id":"MDQ6VXNlcjUzNjM0MDYy","avatar_url":"https://avatars.githubusercontent.com/u/53634062?v=4","gravatar_id":"","url":"https://api.github.com/users/Shafaq-Siddiqi","html_url":"https://github.com/Shafaq-Siddiqi","followers_url":"https://api.github.com/users/Shafaq-Siddiqi/followers","following_url":"https://api.github.com/users/Shafaq-Siddiqi/following{/other_user}","gists_url":"https://api.github.com/users/Shafaq-Siddiqi/gists{/gist_id}","starred_url":"https://api.github.com/users/Shafaq-Siddiqi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Shafaq-Siddiqi/subscriptions","organizations_url":"https://api.github.com/users/Shafaq-Siddiqi/orgs","repos_url":"https://api.github.com/users/Shafaq-Siddiqi/repos","events_url":"https://api.github.com/users/Shafaq-Siddiqi/events{/privacy}","received_events_url":"https://api.github.com/users/Shafaq-Siddiqi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-12-17T10:58:31Z","updated_at":"2020-12-17T10:58:31Z","author_association":"CONTRIBUTOR","body":"Hi,\r\nI appreciate the design draft, it is a good effort. I would suggest doing the mapping of Scikit-learn algorithms to DML and vice versa. Keep it simple you only need to do the part that fits the project scope. I will suggest starting with a very simple pipeline of algorithms that are present in both DML and Scikit-learn like \"scale and Kmeans\" or \"scale, PCA and Kmeans\".  This seems quite a good contribution to me. \r\n@mboehm7 I would appreciate your input on this.  ","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/747368122/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/747405712","html_url":"https://github.com/apache/systemds/pull/1126#issuecomment-747405712","issue_url":"https://api.github.com/repos/apache/systemds/issues/1126","id":747405712,"node_id":"MDEyOklzc3VlQ29tbWVudDc0NzQwNTcxMg==","user":{"login":"mboehm7","id":13721609,"node_id":"MDQ6VXNlcjEzNzIxNjA5","avatar_url":"https://avatars.githubusercontent.com/u/13721609?v=4","gravatar_id":"","url":"https://api.github.com/users/mboehm7","html_url":"https://github.com/mboehm7","followers_url":"https://api.github.com/users/mboehm7/followers","following_url":"https://api.github.com/users/mboehm7/following{/other_user}","gists_url":"https://api.github.com/users/mboehm7/gists{/gist_id}","starred_url":"https://api.github.com/users/mboehm7/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mboehm7/subscriptions","organizations_url":"https://api.github.com/users/mboehm7/orgs","repos_url":"https://api.github.com/users/mboehm7/repos","events_url":"https://api.github.com/users/mboehm7/events{/privacy}","received_events_url":"https://api.github.com/users/mboehm7/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-12-17T12:19:00Z","updated_at":"2020-12-17T12:19:00Z","author_association":"CONTRIBUTOR","body":"LGTM - thanks for the test @sebwrede. I now added explicit error handling for inconsistent federated data characteristics, and fixed the test accordingly (the underlying issues of not applying the rewrites was that the fedinit specified zero columns for y).","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/747405712/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/747424448","html_url":"https://github.com/apache/systemds/pull/1127#issuecomment-747424448","issue_url":"https://api.github.com/repos/apache/systemds/issues/1127","id":747424448,"node_id":"MDEyOklzc3VlQ29tbWVudDc0NzQyNDQ0OA==","user":{"login":"mboehm7","id":13721609,"node_id":"MDQ6VXNlcjEzNzIxNjA5","avatar_url":"https://avatars.githubusercontent.com/u/13721609?v=4","gravatar_id":"","url":"https://api.github.com/users/mboehm7","html_url":"https://github.com/mboehm7","followers_url":"https://api.github.com/users/mboehm7/followers","following_url":"https://api.github.com/users/mboehm7/following{/other_user}","gists_url":"https://api.github.com/users/mboehm7/gists{/gist_id}","starred_url":"https://api.github.com/users/mboehm7/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mboehm7/subscriptions","organizations_url":"https://api.github.com/users/mboehm7/orgs","repos_url":"https://api.github.com/users/mboehm7/repos","events_url":"https://api.github.com/users/mboehm7/events{/privacy}","received_events_url":"https://api.github.com/users/mboehm7/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-12-17T12:59:41Z","updated_at":"2020-12-17T12:59:41Z","author_association":"CONTRIBUTOR","body":"I'll have a look tonight and see what we can do. Airline was dense, right?","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/747424448/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/747424955","html_url":"https://github.com/apache/systemds/pull/1127#issuecomment-747424955","issue_url":"https://api.github.com/repos/apache/systemds/issues/1127","id":747424955,"node_id":"MDEyOklzc3VlQ29tbWVudDc0NzQyNDk1NQ==","user":{"login":"Baunsgaard","id":9947148,"node_id":"MDQ6VXNlcjk5NDcxNDg=","avatar_url":"https://avatars.githubusercontent.com/u/9947148?v=4","gravatar_id":"","url":"https://api.github.com/users/Baunsgaard","html_url":"https://github.com/Baunsgaard","followers_url":"https://api.github.com/users/Baunsgaard/followers","following_url":"https://api.github.com/users/Baunsgaard/following{/other_user}","gists_url":"https://api.github.com/users/Baunsgaard/gists{/gist_id}","starred_url":"https://api.github.com/users/Baunsgaard/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Baunsgaard/subscriptions","organizations_url":"https://api.github.com/users/Baunsgaard/orgs","repos_url":"https://api.github.com/users/Baunsgaard/repos","events_url":"https://api.github.com/users/Baunsgaard/events{/privacy}","received_events_url":"https://api.github.com/users/Baunsgaard/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-12-17T13:00:44Z","updated_at":"2020-12-17T13:00:44Z","author_association":"CONTRIBUTOR","body":"The large 15 mil case seems to have little to no difference.\r\n\r\nBut there still is a bug somewhere.\r\n\r\nXPS:\r\n```bash\r\nscripts/perftest/results/transpose-large.log\r\nTotal elapsed time:             7.377 sec.\r\n 1  r'             4.352      1\r\nTotal elapsed time:             7.835 sec.\r\n 1  r'             4.649      1\r\nTotal elapsed time:             7.659 sec.\r\n 1  r'             4.398      1\r\nTotal elapsed time:             7.903 sec.\r\n 1  r'             4.677      1\r\nTotal elapsed time:             7.723 sec.\r\n 1  r'             4.445      1\r\n         36.435,71 msec task-clock                #    4,264 CPUs utilized            ( +-  1,27% )\r\n   134.881.449.707      cycles                    #    3,702 GHz                      ( +-  0,43% )  (30,65%)\r\n   119.303.817.112      instructions              #    0,88  insn per cycle           ( +-  0,37% )  (38,39%)\r\n```\r\n\r\nAlpha:\r\n```bash\r\nscripts/perftest/results/transpose-large.log\r\nTotal elapsed time:\t\t8.531 sec.\r\n 1  r'             5.459      1\r\nTotal elapsed time:\t\t8.366 sec.\r\n 1  r'             5.412      1\r\nTotal elapsed time:\t\t10.413 sec.\r\n 1  r'             7.507      1\r\nTotal elapsed time:\t\t8.373 sec.\r\n 1  r'             5.420      1\r\nTotal elapsed time:\t\t8.254 sec.\r\n 1  r'             5.394      1\r\n         100414.75 msec task-clock                #   10.271 CPUs utilized            ( +-  5.07% )\r\n      314073685855      cycles                    #    3.128 GHz                      ( +-  4.82% )  (30.86%)\r\n      127951221368      instructions              #    0.41  insn per cycle           ( +-  3.10% )  (38.62%)\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/747424955/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/747426098","html_url":"https://github.com/apache/systemds/pull/1127#issuecomment-747426098","issue_url":"https://api.github.com/repos/apache/systemds/issues/1127","id":747426098,"node_id":"MDEyOklzc3VlQ29tbWVudDc0NzQyNjA5OA==","user":{"login":"Baunsgaard","id":9947148,"node_id":"MDQ6VXNlcjk5NDcxNDg=","avatar_url":"https://avatars.githubusercontent.com/u/9947148?v=4","gravatar_id":"","url":"https://api.github.com/users/Baunsgaard","html_url":"https://github.com/Baunsgaard","followers_url":"https://api.github.com/users/Baunsgaard/followers","following_url":"https://api.github.com/users/Baunsgaard/following{/other_user}","gists_url":"https://api.github.com/users/Baunsgaard/gists{/gist_id}","starred_url":"https://api.github.com/users/Baunsgaard/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Baunsgaard/subscriptions","organizations_url":"https://api.github.com/users/Baunsgaard/orgs","repos_url":"https://api.github.com/users/Baunsgaard/repos","events_url":"https://api.github.com/users/Baunsgaard/events{/privacy}","received_events_url":"https://api.github.com/users/Baunsgaard/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-12-17T13:03:05Z","updated_at":"2020-12-17T13:05:18Z","author_association":"CONTRIBUTOR","body":"> I'll have a look tonight and see what we can do. Airline was dense, right?\r\n\r\nYes airline is dense, and i don't seem to be able to reproduce the bad performance calling transpose in a script.\r\n\r\ndimensions on airline is:\r\n14.5mil row, 29 col, 220 mil nnz\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/747426098/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/747535307","html_url":"https://github.com/apache/systemds/pull/1125#issuecomment-747535307","issue_url":"https://api.github.com/repos/apache/systemds/issues/1125","id":747535307,"node_id":"MDEyOklzc3VlQ29tbWVudDc0NzUzNTMwNw==","user":{"login":"mboehm7","id":13721609,"node_id":"MDQ6VXNlcjEzNzIxNjA5","avatar_url":"https://avatars.githubusercontent.com/u/13721609?v=4","gravatar_id":"","url":"https://api.github.com/users/mboehm7","html_url":"https://github.com/mboehm7","followers_url":"https://api.github.com/users/mboehm7/followers","following_url":"https://api.github.com/users/mboehm7/following{/other_user}","gists_url":"https://api.github.com/users/mboehm7/gists{/gist_id}","starred_url":"https://api.github.com/users/mboehm7/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mboehm7/subscriptions","organizations_url":"https://api.github.com/users/mboehm7/orgs","repos_url":"https://api.github.com/users/mboehm7/repos","events_url":"https://api.github.com/users/mboehm7/events{/privacy}","received_events_url":"https://api.github.com/users/mboehm7/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-12-17T16:05:47Z","updated_at":"2020-12-17T16:05:47Z","author_association":"CONTRIBUTOR","body":"In general, that's a good starting point. We had another use case of importing sk-learn pipelines in mind, but adding the sklearn-onnx-dml model converter is also an interesting exploratory project which we can put into staging (so the dependencies do not affect our runtime). \r\n\r\nFor sk-learn pipelines we would have taken some example pipelines (see make_pipeline) composed of primitives like scaling, encoding, cross validation, model training and converted that into a DML script that calls the respective existing builtin functions for scale, encoding, etc. \r\n\r\nONNX on the other hand is primarily used as exchange format for neural network specifications and models. So it's not a direct fit for encoding such ML pipelines. However, focusing on the exchange of a trained model and its use, many linear models can be encoded via fully connected layers and similar operations. So from my perspective, it's fine to pursue this project. I moved the existing onnx converter from our python API to staging because an incompatible API change. Fixing the onnx importer in the process would be nice, and should not be that much overhead.  ","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/747535307/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/747736880","html_url":"https://github.com/apache/systemds/pull/1127#issuecomment-747736880","issue_url":"https://api.github.com/repos/apache/systemds/issues/1127","id":747736880,"node_id":"MDEyOklzc3VlQ29tbWVudDc0NzczNjg4MA==","user":{"login":"mboehm7","id":13721609,"node_id":"MDQ6VXNlcjEzNzIxNjA5","avatar_url":"https://avatars.githubusercontent.com/u/13721609?v=4","gravatar_id":"","url":"https://api.github.com/users/mboehm7","html_url":"https://github.com/mboehm7","followers_url":"https://api.github.com/users/mboehm7/followers","following_url":"https://api.github.com/users/mboehm7/following{/other_user}","gists_url":"https://api.github.com/users/mboehm7/gists{/gist_id}","starred_url":"https://api.github.com/users/mboehm7/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mboehm7/subscriptions","organizations_url":"https://api.github.com/users/mboehm7/orgs","repos_url":"https://api.github.com/users/mboehm7/repos","events_url":"https://api.github.com/users/mboehm7/events{/privacy}","received_events_url":"https://api.github.com/users/mboehm7/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-12-17T22:21:15Z","updated_at":"2020-12-17T22:21:15Z","author_association":"CONTRIBUTOR","body":"ok, I just pushed some minor performance improvements for sparse-sparse transpose operations which reduced the execution time of ten 2.5M x 50 (sparsity=0.1, seed=12) operations from 2.7 to 1.9s. Furthermore, I found the following:\r\n\r\n* For dense transpose operations, we have two significant parts: allocating the dense output, and the multi-threaded transpose operation. On a box with 112 vcores, the allocation is 10x more expensive than the actual transpose operation. The conclusion would be an in-place transpose wherever possible. For example, compression is injected directly after the persistent read which makes it safe to use in-place by default for both local and distributed compression. This approach would not just improve compression times but also eliminate the unnecessary temporary memory requirements. I leave this up to you though.\r\n* In all my tests the sparse-sparse operations were slower for tall&skinny compared to short&wide of the same dimensions. Looking at the implementation, it also makes sense because the sparse-sparse transpose parallelizes over input columns which allows unsynchronized output row updates. Did the above results maybe originate from earlier experiments where the scripts inverted the input arguments?\r\n","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/747736880/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/748005848","html_url":"https://github.com/apache/systemds/pull/1127#issuecomment-748005848","issue_url":"https://api.github.com/repos/apache/systemds/issues/1127","id":748005848,"node_id":"MDEyOklzc3VlQ29tbWVudDc0ODAwNTg0OA==","user":{"login":"Baunsgaard","id":9947148,"node_id":"MDQ6VXNlcjk5NDcxNDg=","avatar_url":"https://avatars.githubusercontent.com/u/9947148?v=4","gravatar_id":"","url":"https://api.github.com/users/Baunsgaard","html_url":"https://github.com/Baunsgaard","followers_url":"https://api.github.com/users/Baunsgaard/followers","following_url":"https://api.github.com/users/Baunsgaard/following{/other_user}","gists_url":"https://api.github.com/users/Baunsgaard/gists{/gist_id}","starred_url":"https://api.github.com/users/Baunsgaard/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Baunsgaard/subscriptions","organizations_url":"https://api.github.com/users/Baunsgaard/orgs","repos_url":"https://api.github.com/users/Baunsgaard/repos","events_url":"https://api.github.com/users/Baunsgaard/events{/privacy}","received_events_url":"https://api.github.com/users/Baunsgaard/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-12-18T10:20:38Z","updated_at":"2020-12-18T10:20:38Z","author_association":"CONTRIBUTOR","body":"When looking at before and after (the way i tested it was dropping the transpose commit from the history.) it looks like i might have done something wrong in the initial tests. That said, it does not look like the changes had any impact, but it did make me notice the difference between executions on the wide transpose is large. Sometimes it takes 5 seconds sometimes 2.5 I'm guessing it has to do with the two NUMA nodes?\r\n\r\nThe Full transpose micro benchmark:\r\n\r\nAfter change Alpha\r\n```code\r\nscripts/perftest/results/transpose-skinny-1.0.log\r\nTotal elapsed time:\t\t5.177 sec.\r\n 1  r'             2.567      5\r\nTotal elapsed time:\t\t5.592 sec.\r\n 1  r'             2.487      5\r\nTotal elapsed time:\t\t5.394 sec.\r\n 2  r'             2.393      5\r\nTotal elapsed time:\t\t5.607 sec.\r\n 1  r'             2.496      5\r\nTotal elapsed time:\t\t5.361 sec.\r\n 1  r'             2.531      5\r\n         195735.81 msec task-clock                #   31.188 CPUs utilized            ( +-  3.50% )\r\n      595845281584      cycles                    #    3.044 GHz                      ( +-  3.34% )  (30.75%)\r\n       67405027834      instructions              #    0.11  insn per cycle           ( +-  2.26% )  (38.51%)\r\nscripts/perftest/results/transpose-wide-1.0.log\r\nTotal elapsed time:\t\t4.870 sec.\r\n 1  r'             2.439      5\r\nTotal elapsed time:\t\t5.466 sec.\r\n 1  r'             2.418      5\r\nTotal elapsed time:\t\t5.381 sec.\r\n 1  r'             2.393      5\r\nTotal elapsed time:\t\t5.257 sec.\r\n 1  r'             2.343      5\r\nTotal elapsed time:\t\t4.880 sec.\r\n 1  r'             2.453      5\r\n         197370.59 msec task-clock                #   32.701 CPUs utilized            ( +-  6.74% )\r\n      598434626116      cycles                    #    3.032 GHz                      ( +-  6.70% )  (30.76%)\r\n       70128163005      instructions              #    0.12  insn per cycle           ( +-  1.65% )  (38.51%)\r\nscripts/perftest/results/transpose-full-1.0.log\r\nTotal elapsed time:\t\t3.736 sec.\r\n 2  r'             1.343      5\r\nTotal elapsed time:\t\t3.858 sec.\r\n 2  r'             1.326      5\r\nTotal elapsed time:\t\t3.500 sec.\r\n 2  r'             1.299      5\r\nTotal elapsed time:\t\t3.894 sec.\r\n 2  r'             1.305      5\r\nTotal elapsed time:\t\t3.526 sec.\r\n 2  r'             1.304      5\r\n         104490.76 msec task-clock                #   22.819 CPUs utilized            ( +-  1.56% )\r\n      320478636150      cycles                    #    3.067 GHz                      ( +-  1.69% )  (30.80%)\r\n       62146562879      instructions              #    0.19  insn per cycle           ( +-  1.59% )  (38.55%)\r\nscripts/perftest/results/transpose-skinny-0.1.log\r\nTotal elapsed time:\t\t2.701 sec.\r\n 1  r'             1.437      5\r\nTotal elapsed time:\t\t2.659 sec.\r\n 1  r'             1.141      5\r\nTotal elapsed time:\t\t3.174 sec.\r\n 1  r'             1.761      5\r\nTotal elapsed time:\t\t2.705 sec.\r\n 1  r'             1.103      5\r\nTotal elapsed time:\t\t3.112 sec.\r\n 1  r'             1.472      5\r\n         152922.25 msec task-clock                #   43.917 CPUs utilized            ( +-  5.32% )\r\n      473697710114      cycles                    #    3.098 GHz                      ( +-  5.32% )  (31.11%)\r\n       75871932728      instructions              #    0.16  insn per cycle           ( +-  2.13% )  (38.92%)\r\nscripts/perftest/results/transpose-wide-0.1.log\r\nTotal elapsed time:\t\t7.215 sec.\r\n 1  r'             5.376      5\r\nTotal elapsed time:\t\t6.703 sec.\r\n 1  r'             4.871      5\r\nTotal elapsed time:\t\t4.625 sec.\r\n 1  r'             2.815      5\r\nTotal elapsed time:\t\t4.400 sec.\r\n 1  r'             2.592      5\r\nTotal elapsed time:\t\t5.506 sec.\r\n 1  r'             3.721      5\r\n         214645.79 msec task-clock                #   33.943 CPUs utilized            ( +- 18.68% )\r\n      658068071617      cycles                    #    3.066 GHz                      ( +- 18.75% )  (30.71%)\r\n       78768925872      instructions              #    0.12  insn per cycle           ( +- 21.76% )  (38.42%)\r\nscripts/perftest/results/transpose-full-0.1.log\r\nTotal elapsed time:\t\t1.368 sec.\r\n 1  r'             0.583      5\r\nTotal elapsed time:\t\t1.365 sec.\r\n 1  r'             0.574      5\r\nTotal elapsed time:\t\t1.724 sec.\r\n 1  r'             0.835      5\r\nTotal elapsed time:\t\t1.564 sec.\r\n 1  r'             0.708      5\r\nTotal elapsed time:\t\t1.404 sec.\r\n 1  r'             0.522      5\r\n          79268.38 msec task-clock                #   38.130 CPUs utilized            ( +-  8.03% )\r\n      239815721367      cycles                    #    3.025 GHz                      ( +-  7.83% )  (30.85%)\r\n       32295607242      instructions              #    0.13  insn per cycle           ( +-  2.61% )  (38.69%)\r\nscripts/perftest/results/transpose-large.log\r\nTotal elapsed time:\t\t34.586 sec.\r\n 1  r'            31.577      5\r\nTotal elapsed time:\t\t31.789 sec.\r\n 1  r'            28.383      5\r\nTotal elapsed time:\t\t31.772 sec.\r\n 1  r'            28.304      5\r\nTotal elapsed time:\t\t31.899 sec.\r\n 1  r'            28.529      5\r\nTotal elapsed time:\t\t32.218 sec.\r\n 1  r'            28.521      5\r\n         220380.73 msec task-clock                #    6.530 CPUs utilized            ( +-  4.50% )\r\n      702976272821      cycles                    #    3.190 GHz                      ( +-  4.32% )  (30.77%)\r\n      341876674221      instructions              #    0.49  insn per cycle           ( +-  1.53% )  (38.51%)\r\n```\r\nAlpha Before:\r\n\r\n``` code\r\nscripts/perftest/results/transpose-skinny-1.0.log\r\nTotal elapsed time:\t\t4.930 sec.\r\n 1  r'             2.404      5\r\nTotal elapsed time:\t\t5.457 sec.\r\n 2  r'             2.394      5\r\nTotal elapsed time:\t\t5.097 sec.\r\n 1  r'             2.435      5\r\nTotal elapsed time:\t\t5.163 sec.\r\n 1  r'             2.422      5\r\nTotal elapsed time:\t\t4.820 sec.\r\n 1  r'             2.399      5\r\n         168393.69 msec task-clock                #   28.362 CPUs utilized            ( +-  5.87% )\r\n      509712089539      cycles                    #    3.027 GHz                      ( +-  5.78% )  (30.68%)\r\n       64186798883      instructions              #    0.13  insn per cycle           ( +-  2.02% )  (38.44%)\r\nscripts/perftest/results/transpose-wide-1.0.log\r\nTotal elapsed time:\t\t5.288 sec.\r\n 1  r'             2.408      5\r\nTotal elapsed time:\t\t4.944 sec.\r\n 1  r'             2.386      5\r\nTotal elapsed time:\t\t5.192 sec.\r\n 1  r'             2.440      5\r\nTotal elapsed time:\t\t4.996 sec.\r\n 1  r'             2.410      5\r\nTotal elapsed time:\t\t5.010 sec.\r\n 1  r'             2.450      5\r\n         179656.42 msec task-clock                #   30.310 CPUs utilized            ( +-  4.60% )\r\n      543794617678      cycles                    #    3.027 GHz                      ( +-  4.54% )  (30.82%)\r\n       68647994631      instructions              #    0.13  insn per cycle           ( +-  1.66% )  (38.59%)\r\nscripts/perftest/results/transpose-full-1.0.log\r\nTotal elapsed time:\t\t4.217 sec.\r\n 2  r'             1.321      5\r\nTotal elapsed time:\t\t3.806 sec.\r\n 2  r'             1.304      5\r\nTotal elapsed time:\t\t3.456 sec.\r\n 2  r'             0.864      5\r\nTotal elapsed time:\t\t4.261 sec.\r\n 2  r'             1.303      5\r\nTotal elapsed time:\t\t3.254 sec.\r\n 2  r'             0.853      5\r\n         117925.13 msec task-clock                #   25.265 CPUs utilized            ( +-  7.35% )\r\n      358782539233      cycles                    #    3.042 GHz                      ( +-  7.25% )  (30.63%)\r\n       59148304387      instructions              #    0.16  insn per cycle           ( +-  1.26% )  (38.40%)\r\nscripts/perftest/results/transpose-skinny-0.1.log\r\nTotal elapsed time:\t\t3.027 sec.\r\n 1  r'             1.638      5\r\nTotal elapsed time:\t\t3.016 sec.\r\n 1  r'             1.583      5\r\nTotal elapsed time:\t\t2.768 sec.\r\n 1  r'             1.461      5\r\nTotal elapsed time:\t\t3.227 sec.\r\n 1  r'             1.709      5\r\nTotal elapsed time:\t\t2.434 sec.\r\n 1  r'             1.421      5\r\n         103834.93 msec task-clock                #   29.698 CPUs utilized            ( +-  6.79% )\r\n      324467854857      cycles                    #    3.125 GHz                      ( +-  6.93% )  (30.72%)\r\n       47190326093      instructions              #    0.15  insn per cycle           ( +-  1.21% )  (38.48%)\r\nscripts/perftest/results/transpose-wide-0.1.log\r\nTotal elapsed time:\t\t4.556 sec.\r\n 1  r'             2.705      5\r\nTotal elapsed time:\t\t4.808 sec.\r\n 1  r'             3.000      5\r\nTotal elapsed time:\t\t4.250 sec.\r\n 1  r'             2.398      5\r\nTotal elapsed time:\t\t7.544 sec.\r\n 1  r'             5.691      5\r\nTotal elapsed time:\t\t5.221 sec.\r\n 1  r'             3.368      5\r\n         179756.00 msec task-clock                #   30.373 CPUs utilized            ( +- 24.85% )\r\n      548210698316      cycles                    #    3.050 GHz                      ( +- 24.92% )  (30.83%)\r\n       71613380037      instructions              #    0.13  insn per cycle           ( +- 24.12% )  (38.56%)\r\nscripts/perftest/results/transpose-full-0.1.log\r\nTotal elapsed time:\t\t1.314 sec.\r\n 1  r'             0.533      5\r\nTotal elapsed time:\t\t1.489 sec.\r\n 1  r'             0.629      5\r\nTotal elapsed time:\t\t1.621 sec.\r\n 1  r'             0.823      5\r\nTotal elapsed time:\t\t1.269 sec.\r\n 1  r'             0.518      5\r\nTotal elapsed time:\t\t1.346 sec.\r\n 1  r'             0.532      5\r\n          69956.45 msec task-clock                #   35.093 CPUs utilized            ( +-  8.36% )\r\n      212798679757      cycles                    #    3.042 GHz                      ( +-  8.18% )  (30.91%)\r\n       33221409066      instructions              #    0.16  insn per cycle           ( +-  3.80% )  (38.69%)\r\nscripts/perftest/results/transpose-large.log\r\nTotal elapsed time:\t\t34.882 sec.\r\n 1  r'            32.116      5\r\nTotal elapsed time:\t\t31.270 sec.\r\n 1  r'            28.360      5\r\nTotal elapsed time:\t\t32.466 sec.\r\n 1  r'            28.763      5\r\nTotal elapsed time:\t\t33.783 sec.\r\n 1  r'            30.827      5\r\nTotal elapsed time:\t\t34.388 sec.\r\n 1  r'            31.564      5\r\n         226007.94 msec task-clock                #    6.518 CPUs utilized            ( +-  4.21% )\r\n      719315156077      cycles                    #    3.183 GHz                      ( +-  4.15% )  (30.82%)\r\n      350177806352      instructions              #    0.49  insn per cycle           ( +-  1.34% )  (38.56%)\r\n\r\n```","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/748005848/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/748006108","html_url":"https://github.com/apache/systemds/pull/1127#issuecomment-748006108","issue_url":"https://api.github.com/repos/apache/systemds/issues/1127","id":748006108,"node_id":"MDEyOklzc3VlQ29tbWVudDc0ODAwNjEwOA==","user":{"login":"Baunsgaard","id":9947148,"node_id":"MDQ6VXNlcjk5NDcxNDg=","avatar_url":"https://avatars.githubusercontent.com/u/9947148?v=4","gravatar_id":"","url":"https://api.github.com/users/Baunsgaard","html_url":"https://github.com/Baunsgaard","followers_url":"https://api.github.com/users/Baunsgaard/followers","following_url":"https://api.github.com/users/Baunsgaard/following{/other_user}","gists_url":"https://api.github.com/users/Baunsgaard/gists{/gist_id}","starred_url":"https://api.github.com/users/Baunsgaard/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Baunsgaard/subscriptions","organizations_url":"https://api.github.com/users/Baunsgaard/orgs","repos_url":"https://api.github.com/users/Baunsgaard/repos","events_url":"https://api.github.com/users/Baunsgaard/events{/privacy}","received_events_url":"https://api.github.com/users/Baunsgaard/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-12-18T10:21:14Z","updated_at":"2020-12-18T10:21:14Z","author_association":"CONTRIBUTOR","body":"\r\n>     * For dense transpose operations, we have two significant parts: allocating the dense output, and the multi-threaded transpose operation. On a box with 112 vcores, the allocation is 10x more expensive than the actual transpose operation. The conclusion would be an in-place transpose wherever possible. For example, compression is injected directly after the persistent read which makes it safe to use in-place by default for both local and distributed compression. This approach would not just improve compression times but also eliminate the unnecessary temporary memory requirements. I leave this up to you though.\r\n\r\nI will look at this! :+1: \r\n","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/748006108/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/748194671","html_url":"https://github.com/apache/systemds/pull/1113#issuecomment-748194671","issue_url":"https://api.github.com/repos/apache/systemds/issues/1113","id":748194671,"node_id":"MDEyOklzc3VlQ29tbWVudDc0ODE5NDY3MQ==","user":{"login":"tobiasrieger","id":39962737,"node_id":"MDQ6VXNlcjM5OTYyNzM3","avatar_url":"https://avatars.githubusercontent.com/u/39962737?v=4","gravatar_id":"","url":"https://api.github.com/users/tobiasrieger","html_url":"https://github.com/tobiasrieger","followers_url":"https://api.github.com/users/tobiasrieger/followers","following_url":"https://api.github.com/users/tobiasrieger/following{/other_user}","gists_url":"https://api.github.com/users/tobiasrieger/gists{/gist_id}","starred_url":"https://api.github.com/users/tobiasrieger/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tobiasrieger/subscriptions","organizations_url":"https://api.github.com/users/tobiasrieger/orgs","repos_url":"https://api.github.com/users/tobiasrieger/repos","events_url":"https://api.github.com/users/tobiasrieger/events{/privacy}","received_events_url":"https://api.github.com/users/tobiasrieger/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-12-18T16:38:55Z","updated_at":"2020-12-18T16:38:55Z","author_association":"CONTRIBUTOR","body":"Closed, because of a new pull request containing these features","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/748194671/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/748197271","html_url":"https://github.com/apache/systemds/pull/1127#issuecomment-748197271","issue_url":"https://api.github.com/repos/apache/systemds/issues/1127","id":748197271,"node_id":"MDEyOklzc3VlQ29tbWVudDc0ODE5NzI3MQ==","user":{"login":"mboehm7","id":13721609,"node_id":"MDQ6VXNlcjEzNzIxNjA5","avatar_url":"https://avatars.githubusercontent.com/u/13721609?v=4","gravatar_id":"","url":"https://api.github.com/users/mboehm7","html_url":"https://github.com/mboehm7","followers_url":"https://api.github.com/users/mboehm7/followers","following_url":"https://api.github.com/users/mboehm7/following{/other_user}","gists_url":"https://api.github.com/users/mboehm7/gists{/gist_id}","starred_url":"https://api.github.com/users/mboehm7/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mboehm7/subscriptions","organizations_url":"https://api.github.com/users/mboehm7/orgs","repos_url":"https://api.github.com/users/mboehm7/repos","events_url":"https://api.github.com/users/mboehm7/events{/privacy}","received_events_url":"https://api.github.com/users/mboehm7/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-12-18T16:44:03Z","updated_at":"2020-12-18T16:44:03Z","author_association":"CONTRIBUTOR","body":"Just as a side note: these operations are best profiled with more operations, and printing the execution time per operation (simply decomment that in `LibMatrixReorg`) then you'll see that often the variance comes from individual operations (e.g., first 2-3 times due to JIT, or arbitrary ones due to GC). Generally, we try to optimize for the steady state after JIT and without one-time GC influences. Anyway, thanks for inspiring the sparse-sparse improvements.","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/748197271/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/748529081","html_url":"https://github.com/apache/systemds/pull/1132#issuecomment-748529081","issue_url":"https://api.github.com/repos/apache/systemds/issues/1132","id":748529081,"node_id":"MDEyOklzc3VlQ29tbWVudDc0ODUyOTA4MQ==","user":{"login":"mboehm7","id":13721609,"node_id":"MDQ6VXNlcjEzNzIxNjA5","avatar_url":"https://avatars.githubusercontent.com/u/13721609?v=4","gravatar_id":"","url":"https://api.github.com/users/mboehm7","html_url":"https://github.com/mboehm7","followers_url":"https://api.github.com/users/mboehm7/followers","following_url":"https://api.github.com/users/mboehm7/following{/other_user}","gists_url":"https://api.github.com/users/mboehm7/gists{/gist_id}","starred_url":"https://api.github.com/users/mboehm7/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mboehm7/subscriptions","organizations_url":"https://api.github.com/users/mboehm7/orgs","repos_url":"https://api.github.com/users/mboehm7/repos","events_url":"https://api.github.com/users/mboehm7/events{/privacy}","received_events_url":"https://api.github.com/users/mboehm7/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-12-19T21:39:39Z","updated_at":"2020-12-19T21:39:39Z","author_association":"CONTRIBUTOR","body":"LGTM - thanks for the initiative and the patch @Shafaq-Siddiqi. This is a great addition. I now fixed the spark instructions (seed generation, block sizes) and a few other issues (matrix redirect to reshape, warnings, formatting, frame recompilation, tests), as well as started refactoring `DataExpression` to make it more maintainable. \r\n\r\nIn a follow-up PR (whenever you get a chance), please fix the hard-coded seed though. This requires consistent seed generation for 1k blocks on the CP side too so both CP and Spark generate exactly the same results.  ","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/748529081/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/748534536","html_url":"https://github.com/apache/systemds/pull/1129#issuecomment-748534536","issue_url":"https://api.github.com/repos/apache/systemds/issues/1129","id":748534536,"node_id":"MDEyOklzc3VlQ29tbWVudDc0ODUzNDUzNg==","user":{"login":"mboehm7","id":13721609,"node_id":"MDQ6VXNlcjEzNzIxNjA5","avatar_url":"https://avatars.githubusercontent.com/u/13721609?v=4","gravatar_id":"","url":"https://api.github.com/users/mboehm7","html_url":"https://github.com/mboehm7","followers_url":"https://api.github.com/users/mboehm7/followers","following_url":"https://api.github.com/users/mboehm7/following{/other_user}","gists_url":"https://api.github.com/users/mboehm7/gists{/gist_id}","starred_url":"https://api.github.com/users/mboehm7/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mboehm7/subscriptions","organizations_url":"https://api.github.com/users/mboehm7/orgs","repos_url":"https://api.github.com/users/mboehm7/repos","events_url":"https://api.github.com/users/mboehm7/events{/privacy}","received_events_url":"https://api.github.com/users/mboehm7/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-12-19T22:36:56Z","updated_at":"2020-12-19T22:36:56Z","author_association":"CONTRIBUTOR","body":"LGTM - thanks for the patch @OlgaOvcharenko. During the merge I only made minor formatting changes, removed warnings, and remove the new `executeDifferentInstructions` to avoid duplication.","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/748534536/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/748644422","html_url":"https://github.com/apache/systemds/pull/1120#issuecomment-748644422","issue_url":"https://api.github.com/repos/apache/systemds/issues/1120","id":748644422,"node_id":"MDEyOklzc3VlQ29tbWVudDc0ODY0NDQyMg==","user":{"login":"mboehm7","id":13721609,"node_id":"MDQ6VXNlcjEzNzIxNjA5","avatar_url":"https://avatars.githubusercontent.com/u/13721609?v=4","gravatar_id":"","url":"https://api.github.com/users/mboehm7","html_url":"https://github.com/mboehm7","followers_url":"https://api.github.com/users/mboehm7/followers","following_url":"https://api.github.com/users/mboehm7/following{/other_user}","gists_url":"https://api.github.com/users/mboehm7/gists{/gist_id}","starred_url":"https://api.github.com/users/mboehm7/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mboehm7/subscriptions","organizations_url":"https://api.github.com/users/mboehm7/orgs","repos_url":"https://api.github.com/users/mboehm7/repos","events_url":"https://api.github.com/users/mboehm7/events{/privacy}","received_events_url":"https://api.github.com/users/mboehm7/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-12-20T18:37:00Z","updated_at":"2020-12-20T18:37:00Z","author_association":"CONTRIBUTOR","body":"LGTM - thanks @sebwrede for the patch and sorry for the delay. During the merge I just slightly modified some formatting and fixed missing articles in the javadoc.","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/748644422/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/748652239","html_url":"https://github.com/apache/systemds/pull/1131#issuecomment-748652239","issue_url":"https://api.github.com/repos/apache/systemds/issues/1131","id":748652239,"node_id":"MDEyOklzc3VlQ29tbWVudDc0ODY1MjIzOQ==","user":{"login":"mboehm7","id":13721609,"node_id":"MDQ6VXNlcjEzNzIxNjA5","avatar_url":"https://avatars.githubusercontent.com/u/13721609?v=4","gravatar_id":"","url":"https://api.github.com/users/mboehm7","html_url":"https://github.com/mboehm7","followers_url":"https://api.github.com/users/mboehm7/followers","following_url":"https://api.github.com/users/mboehm7/following{/other_user}","gists_url":"https://api.github.com/users/mboehm7/gists{/gist_id}","starred_url":"https://api.github.com/users/mboehm7/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mboehm7/subscriptions","organizations_url":"https://api.github.com/users/mboehm7/orgs","repos_url":"https://api.github.com/users/mboehm7/repos","events_url":"https://api.github.com/users/mboehm7/events{/privacy}","received_events_url":"https://api.github.com/users/mboehm7/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-12-20T19:45:06Z","updated_at":"2020-12-20T19:45:06Z","author_association":"CONTRIBUTOR","body":"LGTM - thanks for the extensions @tobiasrieger. This patch is a good start for experiments on these balancing and data partitioning techniques.\r\n\r\nDuring the merge, I only made a few tweaks here and there: added serial IDs to serializable classes, renamed `getFRangeFDataMap` to `getMap`, capitalized all class names, replaced the prints of non-implemented errors with `NotImplementedException`s, replaced the progress printing with log info messages (so they can be disabled if needed), reconfigured the matrix multiplies for shuffling, replication, and sampling to the available vcores (instead of 1), changed the wait in the federated paramserv test to the global fed-worker wait configuration, and made some minor formatting changes.","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/748652239/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/751824736","html_url":"https://github.com/apache/systemds/pull/1136#issuecomment-751824736","issue_url":"https://api.github.com/repos/apache/systemds/issues/1136","id":751824736,"node_id":"MDEyOklzc3VlQ29tbWVudDc1MTgyNDczNg==","user":{"login":"phaniarnab","id":4302361,"node_id":"MDQ6VXNlcjQzMDIzNjE=","avatar_url":"https://avatars.githubusercontent.com/u/4302361?v=4","gravatar_id":"","url":"https://api.github.com/users/phaniarnab","html_url":"https://github.com/phaniarnab","followers_url":"https://api.github.com/users/phaniarnab/followers","following_url":"https://api.github.com/users/phaniarnab/following{/other_user}","gists_url":"https://api.github.com/users/phaniarnab/gists{/gist_id}","starred_url":"https://api.github.com/users/phaniarnab/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/phaniarnab/subscriptions","organizations_url":"https://api.github.com/users/phaniarnab/orgs","repos_url":"https://api.github.com/users/phaniarnab/repos","events_url":"https://api.github.com/users/phaniarnab/events{/privacy}","received_events_url":"https://api.github.com/users/phaniarnab/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-12-28T18:42:08Z","updated_at":"2020-12-28T18:42:08Z","author_association":"CONTRIBUTOR","body":"@codeRed-d, thanks for the changes. I only fixed a few formatting issues and reduced the number of epochs in the test before merging.","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/751824736/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/751825974","html_url":"https://github.com/apache/systemds/pull/1134#issuecomment-751825974","issue_url":"https://api.github.com/repos/apache/systemds/issues/1134","id":751825974,"node_id":"MDEyOklzc3VlQ29tbWVudDc1MTgyNTk3NA==","user":{"login":"phaniarnab","id":4302361,"node_id":"MDQ6VXNlcjQzMDIzNjE=","avatar_url":"https://avatars.githubusercontent.com/u/4302361?v=4","gravatar_id":"","url":"https://api.github.com/users/phaniarnab","html_url":"https://github.com/phaniarnab","followers_url":"https://api.github.com/users/phaniarnab/followers","following_url":"https://api.github.com/users/phaniarnab/following{/other_user}","gists_url":"https://api.github.com/users/phaniarnab/gists{/gist_id}","starred_url":"https://api.github.com/users/phaniarnab/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/phaniarnab/subscriptions","organizations_url":"https://api.github.com/users/phaniarnab/orgs","repos_url":"https://api.github.com/users/phaniarnab/repos","events_url":"https://api.github.com/users/phaniarnab/events{/privacy}","received_events_url":"https://api.github.com/users/phaniarnab/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-12-28T18:46:27Z","updated_at":"2020-12-28T18:46:27Z","author_association":"CONTRIBUTOR","body":"I will keep this PR open for a few days to track the eviction test runs, and confirm that it is not failing intermittently. ","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/751825974/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/751827524","html_url":"https://github.com/apache/systemds/pull/1136#issuecomment-751827524","issue_url":"https://api.github.com/repos/apache/systemds/issues/1136","id":751827524,"node_id":"MDEyOklzc3VlQ29tbWVudDc1MTgyNzUyNA==","user":{"login":"mboehm7","id":13721609,"node_id":"MDQ6VXNlcjEzNzIxNjA5","avatar_url":"https://avatars.githubusercontent.com/u/13721609?v=4","gravatar_id":"","url":"https://api.github.com/users/mboehm7","html_url":"https://github.com/mboehm7","followers_url":"https://api.github.com/users/mboehm7/followers","following_url":"https://api.github.com/users/mboehm7/following{/other_user}","gists_url":"https://api.github.com/users/mboehm7/gists{/gist_id}","starred_url":"https://api.github.com/users/mboehm7/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mboehm7/subscriptions","organizations_url":"https://api.github.com/users/mboehm7/orgs","repos_url":"https://api.github.com/users/mboehm7/repos","events_url":"https://api.github.com/users/mboehm7/events{/privacy}","received_events_url":"https://api.github.com/users/mboehm7/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-12-28T18:52:12Z","updated_at":"2020-12-28T18:52:12Z","author_association":"CONTRIBUTOR","body":"@codeRed-d could you please associate the email you used in your commit (mr.krovyak@gmail.com) as a secondary email with your github handle, otherwise you would not show up in the contributors list.","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/751827524/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/751864222","html_url":"https://github.com/apache/systemds/pull/1133#issuecomment-751864222","issue_url":"https://api.github.com/repos/apache/systemds/issues/1133","id":751864222,"node_id":"MDEyOklzc3VlQ29tbWVudDc1MTg2NDIyMg==","user":{"login":"mboehm7","id":13721609,"node_id":"MDQ6VXNlcjEzNzIxNjA5","avatar_url":"https://avatars.githubusercontent.com/u/13721609?v=4","gravatar_id":"","url":"https://api.github.com/users/mboehm7","html_url":"https://github.com/mboehm7","followers_url":"https://api.github.com/users/mboehm7/followers","following_url":"https://api.github.com/users/mboehm7/following{/other_user}","gists_url":"https://api.github.com/users/mboehm7/gists{/gist_id}","starred_url":"https://api.github.com/users/mboehm7/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mboehm7/subscriptions","organizations_url":"https://api.github.com/users/mboehm7/orgs","repos_url":"https://api.github.com/users/mboehm7/repos","events_url":"https://api.github.com/users/mboehm7/events{/privacy}","received_events_url":"https://api.github.com/users/mboehm7/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-12-28T21:06:45Z","updated_at":"2020-12-28T21:06:45Z","author_association":"CONTRIBUTOR","body":"LGTM - welcome to SystemDS and thanks for the patch @ywcb00. During the merge, I made a number of smaller corrections - don't worry about them but please keep them in mind for the future. \r\n\r\nFirst, avoid git-merges and an unnecessarily fine-grained commit log as this creates lots of conflicts and issues during the final merge (I actually took the code, and created a commit from scratch under your name). You can rebase to master if necessary. Second, regarding formatting, we use 2-space indentation for scripts, but tab-indentation for Java code (your code used 2-spaces there too). Similarly, try to avoid long generic variable names (e.g., execution_context, matrix_object_1). Third, I fixed the test to avoid unnecessary state updates (test_name), use spark execution type for the reference runs too, and moved this test to the primitives package (which is already part of our github actions). Fourth, I changed the handling of expected federated inputs to throw an exception on unsupported combinations to avoid silent errors of not producing the output. \r\n\r\nIf you want to continue with the quaternary operations, I would recommend to (1) handle the remaining loss functions wsloss and wsigmoid, then (2) the factor updates wdivmm and wumm. Once we have them all, we can add respective algorithm-level tests like ALS-CG. Thanks for your contributions.     \r\n\r\nBtw, please add you chosen commit email address (in your commit message) with your github handle (e.g., as a secondary email address), otherwise your account it not properly linked to the commit and you don't show up as a contributor.","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/751864222/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/753025612","html_url":"https://github.com/apache/systemds/pull/1137#issuecomment-753025612","issue_url":"https://api.github.com/repos/apache/systemds/issues/1137","id":753025612,"node_id":"MDEyOklzc3VlQ29tbWVudDc1MzAyNTYxMg==","user":{"login":"mboehm7","id":13721609,"node_id":"MDQ6VXNlcjEzNzIxNjA5","avatar_url":"https://avatars.githubusercontent.com/u/13721609?v=4","gravatar_id":"","url":"https://api.github.com/users/mboehm7","html_url":"https://github.com/mboehm7","followers_url":"https://api.github.com/users/mboehm7/followers","following_url":"https://api.github.com/users/mboehm7/following{/other_user}","gists_url":"https://api.github.com/users/mboehm7/gists{/gist_id}","starred_url":"https://api.github.com/users/mboehm7/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mboehm7/subscriptions","organizations_url":"https://api.github.com/users/mboehm7/orgs","repos_url":"https://api.github.com/users/mboehm7/repos","events_url":"https://api.github.com/users/mboehm7/events{/privacy}","received_events_url":"https://api.github.com/users/mboehm7/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-12-31T18:48:07Z","updated_at":"2020-12-31T18:48:07Z","author_association":"CONTRIBUTOR","body":"LGTM - welcome to SystemDS and thanks for the contribution @juulez. This is a very good start for future improvements of this arima script. During the merge, I just made some minor formatting changes and removed some warnings. Regarding tests, I enabled a few configurations that are already passing and will have a look into the other cases soon. Thanks.","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/753025612/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/753058524","html_url":"https://github.com/apache/systemds/pull/1054#issuecomment-753058524","issue_url":"https://api.github.com/repos/apache/systemds/issues/1054","id":753058524,"node_id":"MDEyOklzc3VlQ29tbWVudDc1MzA1ODUyNA==","user":{"login":"mboehm7","id":13721609,"node_id":"MDQ6VXNlcjEzNzIxNjA5","avatar_url":"https://avatars.githubusercontent.com/u/13721609?v=4","gravatar_id":"","url":"https://api.github.com/users/mboehm7","html_url":"https://github.com/mboehm7","followers_url":"https://api.github.com/users/mboehm7/followers","following_url":"https://api.github.com/users/mboehm7/following{/other_user}","gists_url":"https://api.github.com/users/mboehm7/gists{/gist_id}","starred_url":"https://api.github.com/users/mboehm7/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mboehm7/subscriptions","organizations_url":"https://api.github.com/users/mboehm7/orgs","repos_url":"https://api.github.com/users/mboehm7/repos","events_url":"https://api.github.com/users/mboehm7/events{/privacy}","received_events_url":"https://api.github.com/users/mboehm7/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-12-31T19:54:43Z","updated_at":"2020-12-31T19:54:43Z","author_association":"CONTRIBUTOR","body":"LGTM - thanks for the detailed reasoning. I only added log error messages at the federated site to allow for debugging.","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/753058524/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/753533113","html_url":"https://github.com/apache/systemds/pull/1139#issuecomment-753533113","issue_url":"https://api.github.com/repos/apache/systemds/issues/1139","id":753533113,"node_id":"MDEyOklzc3VlQ29tbWVudDc1MzUzMzExMw==","user":{"login":"Shafaq-Siddiqi","id":53634062,"node_id":"MDQ6VXNlcjUzNjM0MDYy","avatar_url":"https://avatars.githubusercontent.com/u/53634062?v=4","gravatar_id":"","url":"https://api.github.com/users/Shafaq-Siddiqi","html_url":"https://github.com/Shafaq-Siddiqi","followers_url":"https://api.github.com/users/Shafaq-Siddiqi/followers","following_url":"https://api.github.com/users/Shafaq-Siddiqi/following{/other_user}","gists_url":"https://api.github.com/users/Shafaq-Siddiqi/gists{/gist_id}","starred_url":"https://api.github.com/users/Shafaq-Siddiqi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Shafaq-Siddiqi/subscriptions","organizations_url":"https://api.github.com/users/Shafaq-Siddiqi/orgs","repos_url":"https://api.github.com/users/Shafaq-Siddiqi/repos","events_url":"https://api.github.com/users/Shafaq-Siddiqi/events{/privacy}","received_events_url":"https://api.github.com/users/Shafaq-Siddiqi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-01-02T21:40:06Z","updated_at":"2021-01-02T21:40:06Z","author_association":"CONTRIBUTOR","body":"> This PR adds a new built-in mdedup for detecting duplicates in frames using matching dependencies (like Street 0.95, City 0.90 -> ZIP 1.0).\r\n> @Shafaq-Siddiqi For simplicity, used Jaccard similarity, but if found out that Levenshtein or Jaro distance could also be used, should I also add them? To compute Jaccard similarity between rows (strings) of a vector (nx1) the map with 2 args was added dist = map(Xi, \"(x, y) -> UtilFunctions.jaccardSim(x, y)\").\r\n> \r\n> I also modified discoverFD built-in by setting diag to 1.\r\n\r\nThanks @OlgaOvcharenko, for now it is fine to have Jaccard similarity only we will come to other methods when we will extend the overall implementation. ","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/753533113/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]