[{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/300965641","html_url":"https://github.com/apache/pulsar/pull/399#issuecomment-300965641","issue_url":"https://api.github.com/repos/apache/pulsar/issues/399","id":300965641,"node_id":"MDEyOklzc3VlQ29tbWVudDMwMDk2NTY0MQ==","user":{"login":"nkurihar","id":22067228,"node_id":"MDQ6VXNlcjIyMDY3MjI4","avatar_url":"https://avatars.githubusercontent.com/u/22067228?v=4","gravatar_id":"","url":"https://api.github.com/users/nkurihar","html_url":"https://github.com/nkurihar","followers_url":"https://api.github.com/users/nkurihar/followers","following_url":"https://api.github.com/users/nkurihar/following{/other_user}","gists_url":"https://api.github.com/users/nkurihar/gists{/gist_id}","starred_url":"https://api.github.com/users/nkurihar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nkurihar/subscriptions","organizations_url":"https://api.github.com/users/nkurihar/orgs","repos_url":"https://api.github.com/users/nkurihar/repos","events_url":"https://api.github.com/users/nkurihar/events{/privacy}","received_events_url":"https://api.github.com/users/nkurihar/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-05-12T02:15:09Z","updated_at":"2017-05-12T02:15:09Z","author_association":"CONTRIBUTOR","body":"LGTM","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/300965641/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/300967997","html_url":"https://github.com/apache/pulsar/issues/401#issuecomment-300967997","issue_url":"https://api.github.com/repos/apache/pulsar/issues/401","id":300967997,"node_id":"MDEyOklzc3VlQ29tbWVudDMwMDk2Nzk5Nw==","user":{"login":"sunning9001","id":18050529,"node_id":"MDQ6VXNlcjE4MDUwNTI5","avatar_url":"https://avatars.githubusercontent.com/u/18050529?v=4","gravatar_id":"","url":"https://api.github.com/users/sunning9001","html_url":"https://github.com/sunning9001","followers_url":"https://api.github.com/users/sunning9001/followers","following_url":"https://api.github.com/users/sunning9001/following{/other_user}","gists_url":"https://api.github.com/users/sunning9001/gists{/gist_id}","starred_url":"https://api.github.com/users/sunning9001/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sunning9001/subscriptions","organizations_url":"https://api.github.com/users/sunning9001/orgs","repos_url":"https://api.github.com/users/sunning9001/repos","events_url":"https://api.github.com/users/sunning9001/events{/privacy}","received_events_url":"https://api.github.com/users/sunning9001/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-05-12T02:33:21Z","updated_at":"2017-05-12T02:33:21Z","author_association":"NONE","body":"@jai1 @merlimat    thanks  ,very much !   very  sorry  for  spentding  your   a   lot  of  time.   \r\nI  change   to   another  VMmave .     just  ok .   ","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/300967997/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/301197442","html_url":"https://github.com/apache/pulsar/pull/399#issuecomment-301197442","issue_url":"https://api.github.com/repos/apache/pulsar/issues/399","id":301197442,"node_id":"MDEyOklzc3VlQ29tbWVudDMwMTE5NzQ0Mg==","user":{"login":"merlimat","id":62500,"node_id":"MDQ6VXNlcjYyNTAw","avatar_url":"https://avatars.githubusercontent.com/u/62500?v=4","gravatar_id":"","url":"https://api.github.com/users/merlimat","html_url":"https://github.com/merlimat","followers_url":"https://api.github.com/users/merlimat/followers","following_url":"https://api.github.com/users/merlimat/following{/other_user}","gists_url":"https://api.github.com/users/merlimat/gists{/gist_id}","starred_url":"https://api.github.com/users/merlimat/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/merlimat/subscriptions","organizations_url":"https://api.github.com/users/merlimat/orgs","repos_url":"https://api.github.com/users/merlimat/repos","events_url":"https://api.github.com/users/merlimat/events{/privacy}","received_events_url":"https://api.github.com/users/merlimat/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-05-12T22:11:16Z","updated_at":"2017-05-12T22:11:16Z","author_association":"CONTRIBUTOR","body":"@rdhabalia Once this is merged, can you also redo the same test for which you posted the GC graphs above? Just to see that 1.5s pauses effectively go away.","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/301197442/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/301198443","html_url":"https://github.com/apache/pulsar/pull/394#issuecomment-301198443","issue_url":"https://api.github.com/repos/apache/pulsar/issues/394","id":301198443,"node_id":"MDEyOklzc3VlQ29tbWVudDMwMTE5ODQ0Mw==","user":{"login":"merlimat","id":62500,"node_id":"MDQ6VXNlcjYyNTAw","avatar_url":"https://avatars.githubusercontent.com/u/62500?v=4","gravatar_id":"","url":"https://api.github.com/users/merlimat","html_url":"https://github.com/merlimat","followers_url":"https://api.github.com/users/merlimat/followers","following_url":"https://api.github.com/users/merlimat/following{/other_user}","gists_url":"https://api.github.com/users/merlimat/gists{/gist_id}","starred_url":"https://api.github.com/users/merlimat/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/merlimat/subscriptions","organizations_url":"https://api.github.com/users/merlimat/orgs","repos_url":"https://api.github.com/users/merlimat/repos","events_url":"https://api.github.com/users/merlimat/events{/privacy}","received_events_url":"https://api.github.com/users/merlimat/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-05-12T22:18:05Z","updated_at":"2017-05-12T22:18:05Z","author_association":"CONTRIBUTOR","body":"@rdhabalia @saandrews Please take a look","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/301198443/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/301201511","html_url":"https://github.com/apache/pulsar/pull/399#issuecomment-301201511","issue_url":"https://api.github.com/repos/apache/pulsar/issues/399","id":301201511,"node_id":"MDEyOklzc3VlQ29tbWVudDMwMTIwMTUxMQ==","user":{"login":"rdhabalia","id":2898254,"node_id":"MDQ6VXNlcjI4OTgyNTQ=","avatar_url":"https://avatars.githubusercontent.com/u/2898254?v=4","gravatar_id":"","url":"https://api.github.com/users/rdhabalia","html_url":"https://github.com/rdhabalia","followers_url":"https://api.github.com/users/rdhabalia/followers","following_url":"https://api.github.com/users/rdhabalia/following{/other_user}","gists_url":"https://api.github.com/users/rdhabalia/gists{/gist_id}","starred_url":"https://api.github.com/users/rdhabalia/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rdhabalia/subscriptions","organizations_url":"https://api.github.com/users/rdhabalia/orgs","repos_url":"https://api.github.com/users/rdhabalia/repos","events_url":"https://api.github.com/users/rdhabalia/events{/privacy}","received_events_url":"https://api.github.com/users/rdhabalia/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-05-12T22:39:15Z","updated_at":"2017-05-12T22:41:29Z","author_association":"CONTRIBUTOR","body":"> Once this is merged, can you also redo the same test for which you posted the GC graphs above? Just to see that 1.5s pauses effectively go away.\r\n\r\nYes, but we may need similar improvement as `ConcurrentLongLongPairHashMap pendingAcks` at `PersistentDispatcherMultipleConsumers.messagesToReplay`. We have seen that on redelivery `Consumer` adds all unackMsg positions to `PersistentDispatcherMultipleConsumers.messagesToReplay` and heap-dump shows that size of this list reached to 120k-200k and if delivery is slow then these objects live in memory for some more time and it can also cause gc. ","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/301201511/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/301202227","html_url":"https://github.com/apache/pulsar/pull/399#issuecomment-301202227","issue_url":"https://api.github.com/repos/apache/pulsar/issues/399","id":301202227,"node_id":"MDEyOklzc3VlQ29tbWVudDMwMTIwMjIyNw==","user":{"login":"merlimat","id":62500,"node_id":"MDQ6VXNlcjYyNTAw","avatar_url":"https://avatars.githubusercontent.com/u/62500?v=4","gravatar_id":"","url":"https://api.github.com/users/merlimat","html_url":"https://github.com/merlimat","followers_url":"https://api.github.com/users/merlimat/followers","following_url":"https://api.github.com/users/merlimat/following{/other_user}","gists_url":"https://api.github.com/users/merlimat/gists{/gist_id}","starred_url":"https://api.github.com/users/merlimat/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/merlimat/subscriptions","organizations_url":"https://api.github.com/users/merlimat/orgs","repos_url":"https://api.github.com/users/merlimat/repos","events_url":"https://api.github.com/users/merlimat/events{/privacy}","received_events_url":"https://api.github.com/users/merlimat/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-05-12T22:44:20Z","updated_at":"2017-05-12T22:44:20Z","author_association":"CONTRIBUTOR","body":"> PersistentDispatcherMultipleConsumers.messagesToReplay and heap-dump shows that size of this list reached to 120k-200k and if delivery is slow then these objects live in memory for some more time and it can also cause gc.\r\n\r\nI see : \r\n```java\r\n    private TreeSet<PositionImpl> messagesToReplay;\r\n```\r\n\r\nWe use a tree-set to redeliver in order, though it shouldn't be strictly necessary. \r\nI guess we could either: \r\n * Use ConcurrentLongPairSet and forget about order\r\n * Implement a `Queue< Pair<Long, Long> >` that is actually implemented as an array of primitive longs","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/301202227/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/301204495","html_url":"https://github.com/apache/pulsar/pull/399#issuecomment-301204495","issue_url":"https://api.github.com/repos/apache/pulsar/issues/399","id":301204495,"node_id":"MDEyOklzc3VlQ29tbWVudDMwMTIwNDQ5NQ==","user":{"login":"rdhabalia","id":2898254,"node_id":"MDQ6VXNlcjI4OTgyNTQ=","avatar_url":"https://avatars.githubusercontent.com/u/2898254?v=4","gravatar_id":"","url":"https://api.github.com/users/rdhabalia","html_url":"https://github.com/rdhabalia","followers_url":"https://api.github.com/users/rdhabalia/followers","following_url":"https://api.github.com/users/rdhabalia/following{/other_user}","gists_url":"https://api.github.com/users/rdhabalia/gists{/gist_id}","starred_url":"https://api.github.com/users/rdhabalia/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rdhabalia/subscriptions","organizations_url":"https://api.github.com/users/rdhabalia/orgs","repos_url":"https://api.github.com/users/rdhabalia/repos","events_url":"https://api.github.com/users/rdhabalia/events{/privacy}","received_events_url":"https://api.github.com/users/rdhabalia/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-05-12T23:01:39Z","updated_at":"2017-05-12T23:01:39Z","author_association":"CONTRIBUTOR","body":"> We use a tree-set to redeliver in order, though it shouldn't be strictly necessary.\r\nI guess we could either:\r\n\r\nyes, if we think ordering can be ignored then I will change it with `ConcurrentLongPairSet`.","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/301204495/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/301205290","html_url":"https://github.com/apache/pulsar/pull/399#issuecomment-301205290","issue_url":"https://api.github.com/repos/apache/pulsar/issues/399","id":301205290,"node_id":"MDEyOklzc3VlQ29tbWVudDMwMTIwNTI5MA==","user":{"login":"merlimat","id":62500,"node_id":"MDQ6VXNlcjYyNTAw","avatar_url":"https://avatars.githubusercontent.com/u/62500?v=4","gravatar_id":"","url":"https://api.github.com/users/merlimat","html_url":"https://github.com/merlimat","followers_url":"https://api.github.com/users/merlimat/followers","following_url":"https://api.github.com/users/merlimat/following{/other_user}","gists_url":"https://api.github.com/users/merlimat/gists{/gist_id}","starred_url":"https://api.github.com/users/merlimat/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/merlimat/subscriptions","organizations_url":"https://api.github.com/users/merlimat/orgs","repos_url":"https://api.github.com/users/merlimat/repos","events_url":"https://api.github.com/users/merlimat/events{/privacy}","received_events_url":"https://api.github.com/users/merlimat/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-05-12T23:07:56Z","updated_at":"2017-05-12T23:07:56Z","author_association":"CONTRIBUTOR","body":"> yes, if we think ordering can be ignored then I will change it with ConcurrentLongPairSet.\r\n\r\nThe only reason to have ordering there is to fill the gaps in the ack-sequence as soon as possible. Now, since we persist the individually deleted messages, I think that it would be less important to do so.\r\n\r\nAlso, since the number of unacked messages is limited, the out-of-order is still restricted to that amount of messages.\r\n\r\nSo we should go ahead with `ConcurrentLongPairSet`, except that we don't have that class ;) \r\nWe need to add a new specialization for the `Set<Pair<Long,Long>>` case.\r\n","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/301205290/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/301207800","html_url":"https://github.com/apache/pulsar/pull/399#issuecomment-301207800","issue_url":"https://api.github.com/repos/apache/pulsar/issues/399","id":301207800,"node_id":"MDEyOklzc3VlQ29tbWVudDMwMTIwNzgwMA==","user":{"login":"rdhabalia","id":2898254,"node_id":"MDQ6VXNlcjI4OTgyNTQ=","avatar_url":"https://avatars.githubusercontent.com/u/2898254?v=4","gravatar_id":"","url":"https://api.github.com/users/rdhabalia","html_url":"https://github.com/rdhabalia","followers_url":"https://api.github.com/users/rdhabalia/followers","following_url":"https://api.github.com/users/rdhabalia/following{/other_user}","gists_url":"https://api.github.com/users/rdhabalia/gists{/gist_id}","starred_url":"https://api.github.com/users/rdhabalia/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rdhabalia/subscriptions","organizations_url":"https://api.github.com/users/rdhabalia/orgs","repos_url":"https://api.github.com/users/rdhabalia/repos","events_url":"https://api.github.com/users/rdhabalia/events{/privacy}","received_events_url":"https://api.github.com/users/rdhabalia/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-05-12T23:30:46Z","updated_at":"2017-05-12T23:30:46Z","author_association":"CONTRIBUTOR","body":"> So we should go ahead with ConcurrentLongPairSet, except that we don't have that class ;)\r\nWe need to add a new specialization for the Set<Pair<Long,Long>> case.\r\n\r\nYes, can we merge this PR and I will create a separate one with this change.","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/301207800/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/301219488","html_url":"https://github.com/apache/pulsar/pull/403#issuecomment-301219488","issue_url":"https://api.github.com/repos/apache/pulsar/issues/403","id":301219488,"node_id":"MDEyOklzc3VlQ29tbWVudDMwMTIxOTQ4OA==","user":{"login":"merlimat","id":62500,"node_id":"MDQ6VXNlcjYyNTAw","avatar_url":"https://avatars.githubusercontent.com/u/62500?v=4","gravatar_id":"","url":"https://api.github.com/users/merlimat","html_url":"https://github.com/merlimat","followers_url":"https://api.github.com/users/merlimat/followers","following_url":"https://api.github.com/users/merlimat/following{/other_user}","gists_url":"https://api.github.com/users/merlimat/gists{/gist_id}","starred_url":"https://api.github.com/users/merlimat/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/merlimat/subscriptions","organizations_url":"https://api.github.com/users/merlimat/orgs","repos_url":"https://api.github.com/users/merlimat/repos","events_url":"https://api.github.com/users/merlimat/events{/privacy}","received_events_url":"https://api.github.com/users/merlimat/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-05-13T02:20:25Z","updated_at":"2017-05-13T02:20:25Z","author_association":"CONTRIBUTOR","body":"@rdhabalia Looks like the tests are failing the websocket module by getting stuck for 10min\r\nI cannot reproduce that locally though.","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/301219488/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/301224582","html_url":"https://github.com/apache/pulsar/pull/403#issuecomment-301224582","issue_url":"https://api.github.com/repos/apache/pulsar/issues/403","id":301224582,"node_id":"MDEyOklzc3VlQ29tbWVudDMwMTIyNDU4Mg==","user":{"login":"rdhabalia","id":2898254,"node_id":"MDQ6VXNlcjI4OTgyNTQ=","avatar_url":"https://avatars.githubusercontent.com/u/2898254?v=4","gravatar_id":"","url":"https://api.github.com/users/rdhabalia","html_url":"https://github.com/rdhabalia","followers_url":"https://api.github.com/users/rdhabalia/followers","following_url":"https://api.github.com/users/rdhabalia/following{/other_user}","gists_url":"https://api.github.com/users/rdhabalia/gists{/gist_id}","starred_url":"https://api.github.com/users/rdhabalia/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rdhabalia/subscriptions","organizations_url":"https://api.github.com/users/rdhabalia/orgs","repos_url":"https://api.github.com/users/rdhabalia/repos","events_url":"https://api.github.com/users/rdhabalia/events{/privacy}","received_events_url":"https://api.github.com/users/rdhabalia/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-05-13T04:34:03Z","updated_at":"2017-05-13T04:34:03Z","author_association":"CONTRIBUTOR","body":"checking","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/301224582/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/301224818","html_url":"https://github.com/apache/pulsar/pull/403#issuecomment-301224818","issue_url":"https://api.github.com/repos/apache/pulsar/issues/403","id":301224818,"node_id":"MDEyOklzc3VlQ29tbWVudDMwMTIyNDgxOA==","user":{"login":"rdhabalia","id":2898254,"node_id":"MDQ6VXNlcjI4OTgyNTQ=","avatar_url":"https://avatars.githubusercontent.com/u/2898254?v=4","gravatar_id":"","url":"https://api.github.com/users/rdhabalia","html_url":"https://github.com/rdhabalia","followers_url":"https://api.github.com/users/rdhabalia/followers","following_url":"https://api.github.com/users/rdhabalia/following{/other_user}","gists_url":"https://api.github.com/users/rdhabalia/gists{/gist_id}","starred_url":"https://api.github.com/users/rdhabalia/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rdhabalia/subscriptions","organizations_url":"https://api.github.com/users/rdhabalia/orgs","repos_url":"https://api.github.com/users/rdhabalia/repos","events_url":"https://api.github.com/users/rdhabalia/events{/privacy}","received_events_url":"https://api.github.com/users/rdhabalia/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-05-13T04:41:29Z","updated_at":"2017-05-13T04:41:29Z","author_association":"CONTRIBUTOR","body":"last travis build failed [failed](https://s3.amazonaws.com/archive.travis-ci.org/jobs/231771076/log.txt?X-Amz-Expires=30&X-Amz-Date=20170513T043438Z&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAJRYRXRSVGNKPKO5A/20170513/us-east-1/s3/aws4_request&X-Amz-SignedHeaders=host&X-Amz-Signature=14b59b21db2e871c2559fa93485bf3d09b7f32d8adb1bedfc1bf298511113458) at \r\n```\r\nFailed tests: \r\n\r\n  OwnershipCacheTest.testGetOwner:164 Â» Execution org.apache.zookeeper.KeeperExc...\r\n\r\n\r\n\r\nTests run: 479, Failures: 1, Errors: 0, Skipped: 0\r\n```\r\n\r\nrestarting","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/301224818/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/301582137","html_url":"https://github.com/apache/pulsar/pull/407#issuecomment-301582137","issue_url":"https://api.github.com/repos/apache/pulsar/issues/407","id":301582137,"node_id":"MDEyOklzc3VlQ29tbWVudDMwMTU4MjEzNw==","user":{"login":"saandrews","id":20527148,"node_id":"MDQ6VXNlcjIwNTI3MTQ4","avatar_url":"https://avatars.githubusercontent.com/u/20527148?v=4","gravatar_id":"","url":"https://api.github.com/users/saandrews","html_url":"https://github.com/saandrews","followers_url":"https://api.github.com/users/saandrews/followers","following_url":"https://api.github.com/users/saandrews/following{/other_user}","gists_url":"https://api.github.com/users/saandrews/gists{/gist_id}","starred_url":"https://api.github.com/users/saandrews/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/saandrews/subscriptions","organizations_url":"https://api.github.com/users/saandrews/orgs","repos_url":"https://api.github.com/users/saandrews/repos","events_url":"https://api.github.com/users/saandrews/events{/privacy}","received_events_url":"https://api.github.com/users/saandrews/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-05-15T19:42:16Z","updated_at":"2017-05-15T19:42:16Z","author_association":"CONTRIBUTOR","body":"Brad will resend the pull request against latest master. So, Closing.","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/301582137/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/301583408","html_url":"https://github.com/apache/pulsar/pull/406#issuecomment-301583408","issue_url":"https://api.github.com/repos/apache/pulsar/issues/406","id":301583408,"node_id":"MDEyOklzc3VlQ29tbWVudDMwMTU4MzQwOA==","user":{"login":"saandrews","id":20527148,"node_id":"MDQ6VXNlcjIwNTI3MTQ4","avatar_url":"https://avatars.githubusercontent.com/u/20527148?v=4","gravatar_id":"","url":"https://api.github.com/users/saandrews","html_url":"https://github.com/saandrews","followers_url":"https://api.github.com/users/saandrews/followers","following_url":"https://api.github.com/users/saandrews/following{/other_user}","gists_url":"https://api.github.com/users/saandrews/gists{/gist_id}","starred_url":"https://api.github.com/users/saandrews/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/saandrews/subscriptions","organizations_url":"https://api.github.com/users/saandrews/orgs","repos_url":"https://api.github.com/users/saandrews/repos","events_url":"https://api.github.com/users/saandrews/events{/privacy}","received_events_url":"https://api.github.com/users/saandrews/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-05-15T19:47:21Z","updated_at":"2017-05-15T19:47:21Z","author_association":"CONTRIBUTOR","body":"Though using this will resolve broker side of issue, I am not sure if clients would prefer to see older messages deliver much later which could happen if we don't maintain order with unacked list. Some use cases have many tens of consumers, so 200k unacked could cause some older message linger for a long time before delivered.","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/301583408/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/301584127","html_url":"https://github.com/apache/pulsar/pull/406#issuecomment-301584127","issue_url":"https://api.github.com/repos/apache/pulsar/issues/406","id":301584127,"node_id":"MDEyOklzc3VlQ29tbWVudDMwMTU4NDEyNw==","user":{"login":"merlimat","id":62500,"node_id":"MDQ6VXNlcjYyNTAw","avatar_url":"https://avatars.githubusercontent.com/u/62500?v=4","gravatar_id":"","url":"https://api.github.com/users/merlimat","html_url":"https://github.com/merlimat","followers_url":"https://api.github.com/users/merlimat/followers","following_url":"https://api.github.com/users/merlimat/following{/other_user}","gists_url":"https://api.github.com/users/merlimat/gists{/gist_id}","starred_url":"https://api.github.com/users/merlimat/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/merlimat/subscriptions","organizations_url":"https://api.github.com/users/merlimat/orgs","repos_url":"https://api.github.com/users/merlimat/repos","events_url":"https://api.github.com/users/merlimat/events{/privacy}","received_events_url":"https://api.github.com/users/merlimat/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-05-15T19:50:15Z","updated_at":"2017-05-15T19:50:15Z","author_association":"CONTRIBUTOR","body":"@saandrews Though the out-of-order acks are now being persisted. So you'll get the 200K messages, in no particular order, but without the risk of getting everything back again. ","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/301584127/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/301624267","html_url":"https://github.com/apache/pulsar/pull/410#issuecomment-301624267","issue_url":"https://api.github.com/repos/apache/pulsar/issues/410","id":301624267,"node_id":"MDEyOklzc3VlQ29tbWVudDMwMTYyNDI2Nw==","user":{"login":"yahoocla","id":6155154,"node_id":"MDQ6VXNlcjYxNTUxNTQ=","avatar_url":"https://avatars.githubusercontent.com/u/6155154?v=4","gravatar_id":"","url":"https://api.github.com/users/yahoocla","html_url":"https://github.com/yahoocla","followers_url":"https://api.github.com/users/yahoocla/followers","following_url":"https://api.github.com/users/yahoocla/following{/other_user}","gists_url":"https://api.github.com/users/yahoocla/gists{/gist_id}","starred_url":"https://api.github.com/users/yahoocla/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yahoocla/subscriptions","organizations_url":"https://api.github.com/users/yahoocla/orgs","repos_url":"https://api.github.com/users/yahoocla/repos","events_url":"https://api.github.com/users/yahoocla/events{/privacy}","received_events_url":"https://api.github.com/users/yahoocla/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-05-15T22:34:31Z","updated_at":"2017-05-15T22:34:31Z","author_association":"NONE","body":"Thank you for submitting this pull request, however I do not see a valid CLA on file for you. Before we can merge this request please visit https://yahoocla.herokuapp.com/ and agree to the terms. Thanks! :smile:","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/301624267/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/301634268","html_url":"https://github.com/apache/pulsar/pull/406#issuecomment-301634268","issue_url":"https://api.github.com/repos/apache/pulsar/issues/406","id":301634268,"node_id":"MDEyOklzc3VlQ29tbWVudDMwMTYzNDI2OA==","user":{"login":"rdhabalia","id":2898254,"node_id":"MDQ6VXNlcjI4OTgyNTQ=","avatar_url":"https://avatars.githubusercontent.com/u/2898254?v=4","gravatar_id":"","url":"https://api.github.com/users/rdhabalia","html_url":"https://github.com/rdhabalia","followers_url":"https://api.github.com/users/rdhabalia/followers","following_url":"https://api.github.com/users/rdhabalia/following{/other_user}","gists_url":"https://api.github.com/users/rdhabalia/gists{/gist_id}","starred_url":"https://api.github.com/users/rdhabalia/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rdhabalia/subscriptions","organizations_url":"https://api.github.com/users/rdhabalia/orgs","repos_url":"https://api.github.com/users/rdhabalia/repos","events_url":"https://api.github.com/users/rdhabalia/events{/privacy}","received_events_url":"https://api.github.com/users/rdhabalia/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-05-15T23:37:47Z","updated_at":"2017-05-15T23:37:47Z","author_association":"CONTRIBUTOR","body":"I think what @saandrews  is mentioning that right now, with ordering there is a predictability that out of 200K msgs in messageReplay-bucket, broker always dispatch oldest unacked-messages and client is getting opportunity to receive and process oldest unack-messages. However, I am not sure sending oldest unack-msgs and keeping predictability of ordering message-redelivery will be useful for client or not.\r\nI am going to do another round of test similar we did for #399 and will post the result with this patch.\r\n","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/301634268/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/301634546","html_url":"https://github.com/apache/pulsar/pull/406#issuecomment-301634546","issue_url":"https://api.github.com/repos/apache/pulsar/issues/406","id":301634546,"node_id":"MDEyOklzc3VlQ29tbWVudDMwMTYzNDU0Ng==","user":{"login":"merlimat","id":62500,"node_id":"MDQ6VXNlcjYyNTAw","avatar_url":"https://avatars.githubusercontent.com/u/62500?v=4","gravatar_id":"","url":"https://api.github.com/users/merlimat","html_url":"https://github.com/merlimat","followers_url":"https://api.github.com/users/merlimat/followers","following_url":"https://api.github.com/users/merlimat/following{/other_user}","gists_url":"https://api.github.com/users/merlimat/gists{/gist_id}","starred_url":"https://api.github.com/users/merlimat/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/merlimat/subscriptions","organizations_url":"https://api.github.com/users/merlimat/orgs","repos_url":"https://api.github.com/users/merlimat/repos","events_url":"https://api.github.com/users/merlimat/events{/privacy}","received_events_url":"https://api.github.com/users/merlimat/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-05-15T23:39:47Z","updated_at":"2017-05-15T23:39:47Z","author_association":"CONTRIBUTOR","body":"@rdhabalia @saandrews \r\nThe other option would be to have a priority queue (min-heap), of (long, long) to get the positions out in order.","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/301634546/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/301634727","html_url":"https://github.com/apache/pulsar/pull/394#issuecomment-301634727","issue_url":"https://api.github.com/repos/apache/pulsar/issues/394","id":301634727,"node_id":"MDEyOklzc3VlQ29tbWVudDMwMTYzNDcyNw==","user":{"login":"saandrews","id":20527148,"node_id":"MDQ6VXNlcjIwNTI3MTQ4","avatar_url":"https://avatars.githubusercontent.com/u/20527148?v=4","gravatar_id":"","url":"https://api.github.com/users/saandrews","html_url":"https://github.com/saandrews","followers_url":"https://api.github.com/users/saandrews/followers","following_url":"https://api.github.com/users/saandrews/following{/other_user}","gists_url":"https://api.github.com/users/saandrews/gists{/gist_id}","starred_url":"https://api.github.com/users/saandrews/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/saandrews/subscriptions","organizations_url":"https://api.github.com/users/saandrews/orgs","repos_url":"https://api.github.com/users/saandrews/repos","events_url":"https://api.github.com/users/saandrews/events{/privacy}","received_events_url":"https://api.github.com/users/saandrews/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-05-15T23:41:03Z","updated_at":"2017-05-15T23:41:03Z","author_association":"CONTRIBUTOR","body":"The change looks good. We have to hold this pull request until we are ready with all the dependent tools to handle binary format. ","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/301634727/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/301635462","html_url":"https://github.com/apache/pulsar/pull/394#issuecomment-301635462","issue_url":"https://api.github.com/repos/apache/pulsar/issues/394","id":301635462,"node_id":"MDEyOklzc3VlQ29tbWVudDMwMTYzNTQ2Mg==","user":{"login":"merlimat","id":62500,"node_id":"MDQ6VXNlcjYyNTAw","avatar_url":"https://avatars.githubusercontent.com/u/62500?v=4","gravatar_id":"","url":"https://api.github.com/users/merlimat","html_url":"https://github.com/merlimat","followers_url":"https://api.github.com/users/merlimat/followers","following_url":"https://api.github.com/users/merlimat/following{/other_user}","gists_url":"https://api.github.com/users/merlimat/gists{/gist_id}","starred_url":"https://api.github.com/users/merlimat/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/merlimat/subscriptions","organizations_url":"https://api.github.com/users/merlimat/orgs","repos_url":"https://api.github.com/users/merlimat/repos","events_url":"https://api.github.com/users/merlimat/events{/privacy}","received_events_url":"https://api.github.com/users/merlimat/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-05-15T23:46:13Z","updated_at":"2017-05-15T23:46:13Z","author_association":"CONTRIBUTOR","body":"> The change looks good. We have to hold this pull request until we are ready with all the dependent tools to handle binary format.\r\n\r\nThe tool to get the ML metadata in text format is already in 1.17: \r\n```\r\nbin/pulsar-admin persistent info-internal $MY_TOPIC\r\n```\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/301635462/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/301637304","html_url":"https://github.com/apache/pulsar/pull/394#issuecomment-301637304","issue_url":"https://api.github.com/repos/apache/pulsar/issues/394","id":301637304,"node_id":"MDEyOklzc3VlQ29tbWVudDMwMTYzNzMwNA==","user":{"login":"saandrews","id":20527148,"node_id":"MDQ6VXNlcjIwNTI3MTQ4","avatar_url":"https://avatars.githubusercontent.com/u/20527148?v=4","gravatar_id":"","url":"https://api.github.com/users/saandrews","html_url":"https://github.com/saandrews","followers_url":"https://api.github.com/users/saandrews/followers","following_url":"https://api.github.com/users/saandrews/following{/other_user}","gists_url":"https://api.github.com/users/saandrews/gists{/gist_id}","starred_url":"https://api.github.com/users/saandrews/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/saandrews/subscriptions","organizations_url":"https://api.github.com/users/saandrews/orgs","repos_url":"https://api.github.com/users/saandrews/repos","events_url":"https://api.github.com/users/saandrews/events{/privacy}","received_events_url":"https://api.github.com/users/saandrews/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-05-15T23:59:40Z","updated_at":"2017-05-15T23:59:40Z","author_association":"CONTRIBUTOR","body":"Well, we have some internal tools as well :) I will merge it as soon as we are ready.","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/301637304/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/301639880","html_url":"https://github.com/apache/pulsar/pull/406#issuecomment-301639880","issue_url":"https://api.github.com/repos/apache/pulsar/issues/406","id":301639880,"node_id":"MDEyOklzc3VlQ29tbWVudDMwMTYzOTg4MA==","user":{"login":"rdhabalia","id":2898254,"node_id":"MDQ6VXNlcjI4OTgyNTQ=","avatar_url":"https://avatars.githubusercontent.com/u/2898254?v=4","gravatar_id":"","url":"https://api.github.com/users/rdhabalia","html_url":"https://github.com/rdhabalia","followers_url":"https://api.github.com/users/rdhabalia/followers","following_url":"https://api.github.com/users/rdhabalia/following{/other_user}","gists_url":"https://api.github.com/users/rdhabalia/gists{/gist_id}","starred_url":"https://api.github.com/users/rdhabalia/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rdhabalia/subscriptions","organizations_url":"https://api.github.com/users/rdhabalia/orgs","repos_url":"https://api.github.com/users/rdhabalia/repos","events_url":"https://api.github.com/users/rdhabalia/events{/privacy}","received_events_url":"https://api.github.com/users/rdhabalia/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-05-16T00:18:13Z","updated_at":"2017-05-16T00:18:13Z","author_association":"CONTRIBUTOR","body":"> The other option would be to have a priority queue (min-heap), of (long, long) to get the positions out in order.\r\n\r\nyes, I think that could be a right option. though do you think if this queue is already available as part of library else we can create one.\r\nI will try to collect test-result and if looks fine then will merge the PR.","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/301639880/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/301640336","html_url":"https://github.com/apache/pulsar/pull/406#issuecomment-301640336","issue_url":"https://api.github.com/repos/apache/pulsar/issues/406","id":301640336,"node_id":"MDEyOklzc3VlQ29tbWVudDMwMTY0MDMzNg==","user":{"login":"merlimat","id":62500,"node_id":"MDQ6VXNlcjYyNTAw","avatar_url":"https://avatars.githubusercontent.com/u/62500?v=4","gravatar_id":"","url":"https://api.github.com/users/merlimat","html_url":"https://github.com/merlimat","followers_url":"https://api.github.com/users/merlimat/followers","following_url":"https://api.github.com/users/merlimat/following{/other_user}","gists_url":"https://api.github.com/users/merlimat/gists{/gist_id}","starred_url":"https://api.github.com/users/merlimat/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/merlimat/subscriptions","organizations_url":"https://api.github.com/users/merlimat/orgs","repos_url":"https://api.github.com/users/merlimat/repos","events_url":"https://api.github.com/users/merlimat/events{/privacy}","received_events_url":"https://api.github.com/users/merlimat/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-05-16T00:21:41Z","updated_at":"2017-05-16T00:21:41Z","author_association":"CONTRIBUTOR","body":"> yes, I think that could be a right option. though do you think if this queue is already available as part of library else we can create one.\r\n\r\nWe would have to create one specialized for (long,long) values. Thread safety shouldn't be an issue given that it's already behind a mutex.\r\n\r\nThough, using the priority queue has a different impact than hash-map (logN for both insert and remove) and also we cannot just peen N items and later remove, so the logic in the dispatcher would need to change a bit.","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/301640336/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/301869657","html_url":"https://github.com/apache/pulsar/pull/406#issuecomment-301869657","issue_url":"https://api.github.com/repos/apache/pulsar/issues/406","id":301869657,"node_id":"MDEyOklzc3VlQ29tbWVudDMwMTg2OTY1Nw==","user":{"login":"rdhabalia","id":2898254,"node_id":"MDQ6VXNlcjI4OTgyNTQ=","avatar_url":"https://avatars.githubusercontent.com/u/2898254?v=4","gravatar_id":"","url":"https://api.github.com/users/rdhabalia","html_url":"https://github.com/rdhabalia","followers_url":"https://api.github.com/users/rdhabalia/followers","following_url":"https://api.github.com/users/rdhabalia/following{/other_user}","gists_url":"https://api.github.com/users/rdhabalia/gists{/gist_id}","starred_url":"https://api.github.com/users/rdhabalia/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rdhabalia/subscriptions","organizations_url":"https://api.github.com/users/rdhabalia/orgs","repos_url":"https://api.github.com/users/rdhabalia/repos","events_url":"https://api.github.com/users/rdhabalia/events{/privacy}","received_events_url":"https://api.github.com/users/rdhabalia/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-05-16T18:16:42Z","updated_at":"2017-05-16T18:16:42Z","author_association":"CONTRIBUTOR","body":"After adding this change:\r\nyoung gc: avg 300 msec\r\n\r\n![screenshot from without-changes](http://i.imgur.com/DhSSXGo.png)","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/301869657/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/301870262","html_url":"https://github.com/apache/pulsar/pull/406#issuecomment-301870262","issue_url":"https://api.github.com/repos/apache/pulsar/issues/406","id":301870262,"node_id":"MDEyOklzc3VlQ29tbWVudDMwMTg3MDI2Mg==","user":{"login":"merlimat","id":62500,"node_id":"MDQ6VXNlcjYyNTAw","avatar_url":"https://avatars.githubusercontent.com/u/62500?v=4","gravatar_id":"","url":"https://api.github.com/users/merlimat","html_url":"https://github.com/merlimat","followers_url":"https://api.github.com/users/merlimat/followers","following_url":"https://api.github.com/users/merlimat/following{/other_user}","gists_url":"https://api.github.com/users/merlimat/gists{/gist_id}","starred_url":"https://api.github.com/users/merlimat/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/merlimat/subscriptions","organizations_url":"https://api.github.com/users/merlimat/orgs","repos_url":"https://api.github.com/users/merlimat/repos","events_url":"https://api.github.com/users/merlimat/events{/privacy}","received_events_url":"https://api.github.com/users/merlimat/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-05-16T18:19:05Z","updated_at":"2017-05-16T18:19:05Z","author_association":"CONTRIBUTOR","body":"@rdhabalia Looks good. Though try to get the x-axis aggregation to 1min, otherwise you might see the y-values averaged out over the 1hour period.","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/301870262/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/301874922","html_url":"https://github.com/apache/pulsar/pull/406#issuecomment-301874922","issue_url":"https://api.github.com/repos/apache/pulsar/issues/406","id":301874922,"node_id":"MDEyOklzc3VlQ29tbWVudDMwMTg3NDkyMg==","user":{"login":"rdhabalia","id":2898254,"node_id":"MDQ6VXNlcjI4OTgyNTQ=","avatar_url":"https://avatars.githubusercontent.com/u/2898254?v=4","gravatar_id":"","url":"https://api.github.com/users/rdhabalia","html_url":"https://github.com/rdhabalia","followers_url":"https://api.github.com/users/rdhabalia/followers","following_url":"https://api.github.com/users/rdhabalia/following{/other_user}","gists_url":"https://api.github.com/users/rdhabalia/gists{/gist_id}","starred_url":"https://api.github.com/users/rdhabalia/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rdhabalia/subscriptions","organizations_url":"https://api.github.com/users/rdhabalia/orgs","repos_url":"https://api.github.com/users/rdhabalia/repos","events_url":"https://api.github.com/users/rdhabalia/events{/privacy}","received_events_url":"https://api.github.com/users/rdhabalia/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-05-16T18:35:42Z","updated_at":"2017-05-16T18:36:13Z","author_association":"CONTRIBUTOR","body":">Though try to get the x-axis aggregation to 1min\r\n\r\nSure. Please find below numbers with 1 min aggregation\r\n\r\n1. Without any change: frequent young-gc and old-gc\r\n![screenshot from without-changes](http://i.imgur.com/sgao5kF.png)\r\n\r\n2. with dispatcher block changes: no old gc but avg young-gc 2 sec\r\n![screenshot from without-changes](http://i.imgur.com/0JgIMcO.png)\r\n\r\n3. with (2) and primitive collections at consumer and dispatcher: young-gc : 850 msec\r\n![screenshot from without-changes](http://i.imgur.com/EP5jgI2.png)\r\n\r\nPlease click on image to see clear number.","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/301874922/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/301878971","html_url":"https://github.com/apache/pulsar/pull/406#issuecomment-301878971","issue_url":"https://api.github.com/repos/apache/pulsar/issues/406","id":301878971,"node_id":"MDEyOklzc3VlQ29tbWVudDMwMTg3ODk3MQ==","user":{"login":"merlimat","id":62500,"node_id":"MDQ6VXNlcjYyNTAw","avatar_url":"https://avatars.githubusercontent.com/u/62500?v=4","gravatar_id":"","url":"https://api.github.com/users/merlimat","html_url":"https://github.com/merlimat","followers_url":"https://api.github.com/users/merlimat/followers","following_url":"https://api.github.com/users/merlimat/following{/other_user}","gists_url":"https://api.github.com/users/merlimat/gists{/gist_id}","starred_url":"https://api.github.com/users/merlimat/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/merlimat/subscriptions","organizations_url":"https://api.github.com/users/merlimat/orgs","repos_url":"https://api.github.com/users/merlimat/repos","events_url":"https://api.github.com/users/merlimat/events{/privacy}","received_events_url":"https://api.github.com/users/merlimat/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-05-16T18:50:34Z","updated_at":"2017-05-16T18:50:34Z","author_association":"CONTRIBUTOR","body":"Thanks @rdhabalia. I think we can go ahead and merge this PR, unless you guys want to look at the priority queue approach. \r\nI'd vote for merging this now.\r\n\r\nAlso, the ~600ms is still quite high (though not as tragic as before ;) ) and we should try to understand a bit more on what driving that.","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/301878971/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/301881379","html_url":"https://github.com/apache/pulsar/pull/406#issuecomment-301881379","issue_url":"https://api.github.com/repos/apache/pulsar/issues/406","id":301881379,"node_id":"MDEyOklzc3VlQ29tbWVudDMwMTg4MTM3OQ==","user":{"login":"rdhabalia","id":2898254,"node_id":"MDQ6VXNlcjI4OTgyNTQ=","avatar_url":"https://avatars.githubusercontent.com/u/2898254?v=4","gravatar_id":"","url":"https://api.github.com/users/rdhabalia","html_url":"https://github.com/rdhabalia","followers_url":"https://api.github.com/users/rdhabalia/followers","following_url":"https://api.github.com/users/rdhabalia/following{/other_user}","gists_url":"https://api.github.com/users/rdhabalia/gists{/gist_id}","starred_url":"https://api.github.com/users/rdhabalia/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rdhabalia/subscriptions","organizations_url":"https://api.github.com/users/rdhabalia/orgs","repos_url":"https://api.github.com/users/rdhabalia/repos","events_url":"https://api.github.com/users/rdhabalia/events{/privacy}","received_events_url":"https://api.github.com/users/rdhabalia/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-05-16T18:59:36Z","updated_at":"2017-05-16T18:59:36Z","author_association":"CONTRIBUTOR","body":"> Also, the ~600ms is still quite high (though not as tragic as before ;) ) and we should try to understand a bit more on what driving that.\r\n\r\nyes, will spend some more time to take a deeper look in it.\r\n\r\n> I think we can go ahead and merge this PR, unless you guys want to look at the priority queue approach. I'd vote for merging this now.\r\n\r\nyes, we are thinking to support message ordering but we can merge it for now and can introduce with next PR. @saandrews any suggestion?\r\n","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/301881379/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/301889055","html_url":"https://github.com/apache/pulsar/pull/406#issuecomment-301889055","issue_url":"https://api.github.com/repos/apache/pulsar/issues/406","id":301889055,"node_id":"MDEyOklzc3VlQ29tbWVudDMwMTg4OTA1NQ==","user":{"login":"saandrews","id":20527148,"node_id":"MDQ6VXNlcjIwNTI3MTQ4","avatar_url":"https://avatars.githubusercontent.com/u/20527148?v=4","gravatar_id":"","url":"https://api.github.com/users/saandrews","html_url":"https://github.com/saandrews","followers_url":"https://api.github.com/users/saandrews/followers","following_url":"https://api.github.com/users/saandrews/following{/other_user}","gists_url":"https://api.github.com/users/saandrews/gists{/gist_id}","starred_url":"https://api.github.com/users/saandrews/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/saandrews/subscriptions","organizations_url":"https://api.github.com/users/saandrews/orgs","repos_url":"https://api.github.com/users/saandrews/repos","events_url":"https://api.github.com/users/saandrews/events{/privacy}","received_events_url":"https://api.github.com/users/saandrews/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-05-16T19:25:02Z","updated_at":"2017-05-16T19:25:02Z","author_association":"CONTRIBUTOR","body":"Ok, lets merge this for now. I almost see customers complain about it when we break ordering. So, we should get that as well if the penalty isn't bad.","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/301889055/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/301889741","html_url":"https://github.com/apache/pulsar/pull/406#issuecomment-301889741","issue_url":"https://api.github.com/repos/apache/pulsar/issues/406","id":301889741,"node_id":"MDEyOklzc3VlQ29tbWVudDMwMTg4OTc0MQ==","user":{"login":"merlimat","id":62500,"node_id":"MDQ6VXNlcjYyNTAw","avatar_url":"https://avatars.githubusercontent.com/u/62500?v=4","gravatar_id":"","url":"https://api.github.com/users/merlimat","html_url":"https://github.com/merlimat","followers_url":"https://api.github.com/users/merlimat/followers","following_url":"https://api.github.com/users/merlimat/following{/other_user}","gists_url":"https://api.github.com/users/merlimat/gists{/gist_id}","starred_url":"https://api.github.com/users/merlimat/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/merlimat/subscriptions","organizations_url":"https://api.github.com/users/merlimat/orgs","repos_url":"https://api.github.com/users/merlimat/repos","events_url":"https://api.github.com/users/merlimat/events{/privacy}","received_events_url":"https://api.github.com/users/merlimat/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-05-16T19:27:39Z","updated_at":"2017-05-16T19:27:39Z","author_association":"CONTRIBUTOR","body":">  I almost see customers complain about it when we break ordering \r\n\r\nOrdering is already _broken_ on message redeliveries 😃 ","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/301889741/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/302434483","html_url":"https://github.com/apache/pulsar/issues/402#issuecomment-302434483","issue_url":"https://api.github.com/repos/apache/pulsar/issues/402","id":302434483,"node_id":"MDEyOklzc3VlQ29tbWVudDMwMjQzNDQ4Mw==","user":{"login":"bradtm","id":2708055,"node_id":"MDQ6VXNlcjI3MDgwNTU=","avatar_url":"https://avatars.githubusercontent.com/u/2708055?v=4","gravatar_id":"","url":"https://api.github.com/users/bradtm","html_url":"https://github.com/bradtm","followers_url":"https://api.github.com/users/bradtm/followers","following_url":"https://api.github.com/users/bradtm/following{/other_user}","gists_url":"https://api.github.com/users/bradtm/gists{/gist_id}","starred_url":"https://api.github.com/users/bradtm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bradtm/subscriptions","organizations_url":"https://api.github.com/users/bradtm/orgs","repos_url":"https://api.github.com/users/bradtm/repos","events_url":"https://api.github.com/users/bradtm/events{/privacy}","received_events_url":"https://api.github.com/users/bradtm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-05-18T15:13:18Z","updated_at":"2017-05-18T15:13:18Z","author_association":"CONTRIBUTOR","body":"A flexible way to implement the configuration of this feature would be similar to how namespace isolation policies are configured:\r\n\r\n1. A regex can be supplied which maps to a rate limiting policy (basically, maximum messages per second). If the regex matches a topic, then all subscriptions on that topic would get the rate limit applied\r\n2. A default policy can also be supplied \r\n3. If there is no match and no default, then the current behavior is in effect (no rate limiting)\r\n\r\nIf a topic matches more than one policy, it can choose the more restrictive policy.\r\n\r\nIf using regex'es is too heavyweight, we can opt for having just the default and a (hopefully small) list of overrides where the exact topic name is provided. This gives the ability to rate limit only certain topics (or raise the limit over the default for certain topics).\r\n\r\nThe motivation for this feature is not to reduce GC pressure, but rather to protect against DOS when consumers consume too high of a rate in the steady state.","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/302434483/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/302484149","html_url":"https://github.com/apache/pulsar/issues/402#issuecomment-302484149","issue_url":"https://api.github.com/repos/apache/pulsar/issues/402","id":302484149,"node_id":"MDEyOklzc3VlQ29tbWVudDMwMjQ4NDE0OQ==","user":{"login":"msb-at-yahoo","id":7442825,"node_id":"MDQ6VXNlcjc0NDI4MjU=","avatar_url":"https://avatars.githubusercontent.com/u/7442825?v=4","gravatar_id":"","url":"https://api.github.com/users/msb-at-yahoo","html_url":"https://github.com/msb-at-yahoo","followers_url":"https://api.github.com/users/msb-at-yahoo/followers","following_url":"https://api.github.com/users/msb-at-yahoo/following{/other_user}","gists_url":"https://api.github.com/users/msb-at-yahoo/gists{/gist_id}","starred_url":"https://api.github.com/users/msb-at-yahoo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/msb-at-yahoo/subscriptions","organizations_url":"https://api.github.com/users/msb-at-yahoo/orgs","repos_url":"https://api.github.com/users/msb-at-yahoo/repos","events_url":"https://api.github.com/users/msb-at-yahoo/events{/privacy}","received_events_url":"https://api.github.com/users/msb-at-yahoo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-05-18T17:30:31Z","updated_at":"2017-05-18T17:30:31Z","author_association":"CONTRIBUTOR","body":"Are you sure this is the right approach? It seems like it'd make since to have a global rate limit and then do some sort of fair queuing to the ready sockets on dispatch.\r\n\r\nalso, is this issue to cover consumers, producers, or both?","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/302484149/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/302557400","html_url":"https://github.com/apache/pulsar/pull/406#issuecomment-302557400","issue_url":"https://api.github.com/repos/apache/pulsar/issues/406","id":302557400,"node_id":"MDEyOklzc3VlQ29tbWVudDMwMjU1NzQwMA==","user":{"login":"rdhabalia","id":2898254,"node_id":"MDQ6VXNlcjI4OTgyNTQ=","avatar_url":"https://avatars.githubusercontent.com/u/2898254?v=4","gravatar_id":"","url":"https://api.github.com/users/rdhabalia","html_url":"https://github.com/rdhabalia","followers_url":"https://api.github.com/users/rdhabalia/followers","following_url":"https://api.github.com/users/rdhabalia/following{/other_user}","gists_url":"https://api.github.com/users/rdhabalia/gists{/gist_id}","starred_url":"https://api.github.com/users/rdhabalia/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rdhabalia/subscriptions","organizations_url":"https://api.github.com/users/rdhabalia/orgs","repos_url":"https://api.github.com/users/rdhabalia/repos","events_url":"https://api.github.com/users/rdhabalia/events{/privacy}","received_events_url":"https://api.github.com/users/rdhabalia/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-05-18T22:19:31Z","updated_at":"2017-05-18T22:19:31Z","author_association":"CONTRIBUTOR","body":"@saandrews as we know now that it was a mistake at client side while checking logs regarding not getting messages on redelivery, so there might not be any issue if we don't follow the ordering.\r\nSo, even if `messageReplay` bucket has 200K messages, it could get delivered in 10 mins on redelivery and as it is a shared subscription, messages are not going in order to any consumer. So, anyway in shared-subscription ordering is broken.\r\nSo, I think we can merge this PR right now, and can introduce priority min queue if we see further issue.?","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/302557400/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/302563694","html_url":"https://github.com/apache/pulsar/issues/422#issuecomment-302563694","issue_url":"https://api.github.com/repos/apache/pulsar/issues/422","id":302563694,"node_id":"MDEyOklzc3VlQ29tbWVudDMwMjU2MzY5NA==","user":{"login":"jai1","id":8659452,"node_id":"MDQ6VXNlcjg2NTk0NTI=","avatar_url":"https://avatars.githubusercontent.com/u/8659452?v=4","gravatar_id":"","url":"https://api.github.com/users/jai1","html_url":"https://github.com/jai1","followers_url":"https://api.github.com/users/jai1/followers","following_url":"https://api.github.com/users/jai1/following{/other_user}","gists_url":"https://api.github.com/users/jai1/gists{/gist_id}","starred_url":"https://api.github.com/users/jai1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jai1/subscriptions","organizations_url":"https://api.github.com/users/jai1/orgs","repos_url":"https://api.github.com/users/jai1/repos","events_url":"https://api.github.com/users/jai1/events{/privacy}","received_events_url":"https://api.github.com/users/jai1/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-05-18T22:56:24Z","updated_at":"2017-05-18T22:56:24Z","author_association":"CONTRIBUTOR","body":"@merlimat @rdhabalia @saandrews @msb-at-yahoo @sschepens ","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/302563694/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/302564053","html_url":"https://github.com/apache/pulsar/pull/406#issuecomment-302564053","issue_url":"https://api.github.com/repos/apache/pulsar/issues/406","id":302564053,"node_id":"MDEyOklzc3VlQ29tbWVudDMwMjU2NDA1Mw==","user":{"login":"saandrews","id":20527148,"node_id":"MDQ6VXNlcjIwNTI3MTQ4","avatar_url":"https://avatars.githubusercontent.com/u/20527148?v=4","gravatar_id":"","url":"https://api.github.com/users/saandrews","html_url":"https://github.com/saandrews","followers_url":"https://api.github.com/users/saandrews/followers","following_url":"https://api.github.com/users/saandrews/following{/other_user}","gists_url":"https://api.github.com/users/saandrews/gists{/gist_id}","starred_url":"https://api.github.com/users/saandrews/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/saandrews/subscriptions","organizations_url":"https://api.github.com/users/saandrews/orgs","repos_url":"https://api.github.com/users/saandrews/repos","events_url":"https://api.github.com/users/saandrews/events{/privacy}","received_events_url":"https://api.github.com/users/saandrews/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-05-18T22:58:39Z","updated_at":"2017-05-18T22:58:39Z","author_association":"CONTRIBUTOR","body":"@rdhabalia Your claim of mistake at client side is not confirmed yet.  Irrespective of that outcome, my point was not about this use case. In general we could end up with older messages in the unacked list while delivering newer messages, when the replay list is not drained.\r\n\r\nLet us merge this for now and address it if we come across a use case.","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/302564053/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/302622758","html_url":"https://github.com/apache/pulsar/pull/299#issuecomment-302622758","issue_url":"https://api.github.com/repos/apache/pulsar/issues/299","id":302622758,"node_id":"MDEyOklzc3VlQ29tbWVudDMwMjYyMjc1OA==","user":{"login":"rdhabalia","id":2898254,"node_id":"MDQ6VXNlcjI4OTgyNTQ=","avatar_url":"https://avatars.githubusercontent.com/u/2898254?v=4","gravatar_id":"","url":"https://api.github.com/users/rdhabalia","html_url":"https://github.com/rdhabalia","followers_url":"https://api.github.com/users/rdhabalia/followers","following_url":"https://api.github.com/users/rdhabalia/following{/other_user}","gists_url":"https://api.github.com/users/rdhabalia/gists{/gist_id}","starred_url":"https://api.github.com/users/rdhabalia/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rdhabalia/subscriptions","organizations_url":"https://api.github.com/users/rdhabalia/orgs","repos_url":"https://api.github.com/users/rdhabalia/repos","events_url":"https://api.github.com/users/rdhabalia/events{/privacy}","received_events_url":"https://api.github.com/users/rdhabalia/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-05-19T06:44:34Z","updated_at":"2017-05-19T06:44:34Z","author_association":"CONTRIBUTOR","body":"yes, rebased with master.","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/302622758/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/302698844","html_url":"https://github.com/apache/pulsar/issues/422#issuecomment-302698844","issue_url":"https://api.github.com/repos/apache/pulsar/issues/422","id":302698844,"node_id":"MDEyOklzc3VlQ29tbWVudDMwMjY5ODg0NA==","user":{"login":"sschepens","id":3072509,"node_id":"MDQ6VXNlcjMwNzI1MDk=","avatar_url":"https://avatars.githubusercontent.com/u/3072509?v=4","gravatar_id":"","url":"https://api.github.com/users/sschepens","html_url":"https://github.com/sschepens","followers_url":"https://api.github.com/users/sschepens/followers","following_url":"https://api.github.com/users/sschepens/following{/other_user}","gists_url":"https://api.github.com/users/sschepens/gists{/gist_id}","starred_url":"https://api.github.com/users/sschepens/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sschepens/subscriptions","organizations_url":"https://api.github.com/users/sschepens/orgs","repos_url":"https://api.github.com/users/sschepens/repos","events_url":"https://api.github.com/users/sschepens/events{/privacy}","received_events_url":"https://api.github.com/users/sschepens/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-05-19T13:11:28Z","updated_at":"2017-05-19T13:11:28Z","author_association":"CONTRIBUTOR","body":"Totally agree, `blockIfQUeueFull` should default to `false`","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/302698844/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/302763189","html_url":"https://github.com/apache/pulsar/issues/422#issuecomment-302763189","issue_url":"https://api.github.com/repos/apache/pulsar/issues/422","id":302763189,"node_id":"MDEyOklzc3VlQ29tbWVudDMwMjc2MzE4OQ==","user":{"login":"saandrews","id":20527148,"node_id":"MDQ6VXNlcjIwNTI3MTQ4","avatar_url":"https://avatars.githubusercontent.com/u/20527148?v=4","gravatar_id":"","url":"https://api.github.com/users/saandrews","html_url":"https://github.com/saandrews","followers_url":"https://api.github.com/users/saandrews/followers","following_url":"https://api.github.com/users/saandrews/following{/other_user}","gists_url":"https://api.github.com/users/saandrews/gists{/gist_id}","starred_url":"https://api.github.com/users/saandrews/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/saandrews/subscriptions","organizations_url":"https://api.github.com/users/saandrews/orgs","repos_url":"https://api.github.com/users/saandrews/repos","events_url":"https://api.github.com/users/saandrews/events{/privacy}","received_events_url":"https://api.github.com/users/saandrews/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-05-19T17:27:42Z","updated_at":"2017-05-19T17:27:42Z","author_association":"CONTRIBUTOR","body":"I also vote to change the default to false.\n\nOn Fri, May 19, 2017 at 6:11 AM, sschepens <notifications@github.com> wrote:\n\n> Totally agree, blockIfQUeueFull should default to false\n>\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/yahoo/pulsar/issues/422#issuecomment-302698844>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/ATk4LHXxaorKjHLkK6TLDGQPeWKWFQnCks5r7ZUDgaJpZM4Nf5AR>\n> .\n>\n","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/302763189/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/302765034","html_url":"https://github.com/apache/pulsar/issues/422#issuecomment-302765034","issue_url":"https://api.github.com/repos/apache/pulsar/issues/422","id":302765034,"node_id":"MDEyOklzc3VlQ29tbWVudDMwMjc2NTAzNA==","user":{"login":"msb-at-yahoo","id":7442825,"node_id":"MDQ6VXNlcjc0NDI4MjU=","avatar_url":"https://avatars.githubusercontent.com/u/7442825?v=4","gravatar_id":"","url":"https://api.github.com/users/msb-at-yahoo","html_url":"https://github.com/msb-at-yahoo","followers_url":"https://api.github.com/users/msb-at-yahoo/followers","following_url":"https://api.github.com/users/msb-at-yahoo/following{/other_user}","gists_url":"https://api.github.com/users/msb-at-yahoo/gists{/gist_id}","starred_url":"https://api.github.com/users/msb-at-yahoo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/msb-at-yahoo/subscriptions","organizations_url":"https://api.github.com/users/msb-at-yahoo/orgs","repos_url":"https://api.github.com/users/msb-at-yahoo/repos","events_url":"https://api.github.com/users/msb-at-yahoo/events{/privacy}","received_events_url":"https://api.github.com/users/msb-at-yahoo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-05-19T17:35:23Z","updated_at":"2017-05-19T17:35:23Z","author_association":"CONTRIBUTOR","body":":+1: \r\nat Yahoo, we may want to communicate this change loudly.  for most applications, it's likely to make things work the way the developers expected, but there's always seems to be someone who depends upon bizarre semantics.\r\n","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/302765034/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/302765629","html_url":"https://github.com/apache/pulsar/issues/422#issuecomment-302765629","issue_url":"https://api.github.com/repos/apache/pulsar/issues/422","id":302765629,"node_id":"MDEyOklzc3VlQ29tbWVudDMwMjc2NTYyOQ==","user":{"login":"merlimat","id":62500,"node_id":"MDQ6VXNlcjYyNTAw","avatar_url":"https://avatars.githubusercontent.com/u/62500?v=4","gravatar_id":"","url":"https://api.github.com/users/merlimat","html_url":"https://github.com/merlimat","followers_url":"https://api.github.com/users/merlimat/followers","following_url":"https://api.github.com/users/merlimat/following{/other_user}","gists_url":"https://api.github.com/users/merlimat/gists{/gist_id}","starred_url":"https://api.github.com/users/merlimat/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/merlimat/subscriptions","organizations_url":"https://api.github.com/users/merlimat/orgs","repos_url":"https://api.github.com/users/merlimat/repos","events_url":"https://api.github.com/users/merlimat/events{/privacy}","received_events_url":"https://api.github.com/users/merlimat/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-05-19T17:37:30Z","updated_at":"2017-05-19T17:37:30Z","author_association":"CONTRIBUTOR","body":"I agree too. Would it make sense to increase the default queue size as well? \r\n\r\nIf you're publishing 1K msg/s, a queue size of 1K will buffer up for 1 seconds. After that you will start seeing publish failures.","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/302765629/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/302779464","html_url":"https://github.com/apache/pulsar/issues/424#issuecomment-302779464","issue_url":"https://api.github.com/repos/apache/pulsar/issues/424","id":302779464,"node_id":"MDEyOklzc3VlQ29tbWVudDMwMjc3OTQ2NA==","user":{"login":"merlimat","id":62500,"node_id":"MDQ6VXNlcjYyNTAw","avatar_url":"https://avatars.githubusercontent.com/u/62500?v=4","gravatar_id":"","url":"https://api.github.com/users/merlimat","html_url":"https://github.com/merlimat","followers_url":"https://api.github.com/users/merlimat/followers","following_url":"https://api.github.com/users/merlimat/following{/other_user}","gists_url":"https://api.github.com/users/merlimat/gists{/gist_id}","starred_url":"https://api.github.com/users/merlimat/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/merlimat/subscriptions","organizations_url":"https://api.github.com/users/merlimat/orgs","repos_url":"https://api.github.com/users/merlimat/repos","events_url":"https://api.github.com/users/merlimat/events{/privacy}","received_events_url":"https://api.github.com/users/merlimat/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-05-19T18:36:52Z","updated_at":"2017-05-19T18:36:52Z","author_association":"CONTRIBUTOR","body":"There is already a limit of 1K pending entries for a given TCP connection. After that the broker stops reading from that connection.","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/302779464/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/302787794","html_url":"https://github.com/apache/pulsar/issues/424#issuecomment-302787794","issue_url":"https://api.github.com/repos/apache/pulsar/issues/424","id":302787794,"node_id":"MDEyOklzc3VlQ29tbWVudDMwMjc4Nzc5NA==","user":{"login":"saandrews","id":20527148,"node_id":"MDQ6VXNlcjIwNTI3MTQ4","avatar_url":"https://avatars.githubusercontent.com/u/20527148?v=4","gravatar_id":"","url":"https://api.github.com/users/saandrews","html_url":"https://github.com/saandrews","followers_url":"https://api.github.com/users/saandrews/followers","following_url":"https://api.github.com/users/saandrews/following{/other_user}","gists_url":"https://api.github.com/users/saandrews/gists{/gist_id}","starred_url":"https://api.github.com/users/saandrews/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/saandrews/subscriptions","organizations_url":"https://api.github.com/users/saandrews/orgs","repos_url":"https://api.github.com/users/saandrews/repos","events_url":"https://api.github.com/users/saandrews/events{/privacy}","received_events_url":"https://api.github.com/users/saandrews/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-05-19T19:13:00Z","updated_at":"2017-05-19T19:13:00Z","author_association":"CONTRIBUTOR","body":"Oh, yeah. Forgot about it. Closing this issue.","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/302787794/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/303160846","html_url":"https://github.com/apache/pulsar/issues/428#issuecomment-303160846","issue_url":"https://api.github.com/repos/apache/pulsar/issues/428","id":303160846,"node_id":"MDEyOklzc3VlQ29tbWVudDMwMzE2MDg0Ng==","user":{"login":"merlimat","id":62500,"node_id":"MDQ6VXNlcjYyNTAw","avatar_url":"https://avatars.githubusercontent.com/u/62500?v=4","gravatar_id":"","url":"https://api.github.com/users/merlimat","html_url":"https://github.com/merlimat","followers_url":"https://api.github.com/users/merlimat/followers","following_url":"https://api.github.com/users/merlimat/following{/other_user}","gists_url":"https://api.github.com/users/merlimat/gists{/gist_id}","starred_url":"https://api.github.com/users/merlimat/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/merlimat/subscriptions","organizations_url":"https://api.github.com/users/merlimat/orgs","repos_url":"https://api.github.com/users/merlimat/repos","events_url":"https://api.github.com/users/merlimat/events{/privacy}","received_events_url":"https://api.github.com/users/merlimat/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-05-22T17:05:28Z","updated_at":"2017-05-22T17:05:28Z","author_association":"CONTRIBUTOR","body":"Hi @t2y, the comment in the code is actually wrong, or better said outdated.\r\n\r\nTypically, the `metadataAndPayload` that is passed, starts with the `[MAGIC_NUMBER][CHECKSUM] ...` header. \r\n\r\nThe only reason why it might not be the case is if the client library is very old (in fact, that can only be true at Yahoo, since the checksum was added before open-sourcing the code).\r\n\r\nSo, if the producer included the checksum, but the consumer was not updated yet, the broker would strip it before sending.  https://github.com/yahoo/pulsar/blob/a2ce53608916eb60a88d7a57c69e627666dbdb4e/pulsar-broker/src/main/java/com/yahoo/pulsar/broker/service/Consumer.java#L184\r\n\r\nRight now, I think we should just update the comment to reflect the right wire format that is applied.","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/303160846/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/303321555","html_url":"https://github.com/apache/pulsar/issues/428#issuecomment-303321555","issue_url":"https://api.github.com/repos/apache/pulsar/issues/428","id":303321555,"node_id":"MDEyOklzc3VlQ29tbWVudDMwMzMyMTU1NQ==","user":{"login":"t2y","id":96569,"node_id":"MDQ6VXNlcjk2NTY5","avatar_url":"https://avatars.githubusercontent.com/u/96569?v=4","gravatar_id":"","url":"https://api.github.com/users/t2y","html_url":"https://github.com/t2y","followers_url":"https://api.github.com/users/t2y/followers","following_url":"https://api.github.com/users/t2y/following{/other_user}","gists_url":"https://api.github.com/users/t2y/gists{/gist_id}","starred_url":"https://api.github.com/users/t2y/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/t2y/subscriptions","organizations_url":"https://api.github.com/users/t2y/orgs","repos_url":"https://api.github.com/users/t2y/repos","events_url":"https://api.github.com/users/t2y/events{/privacy}","received_events_url":"https://api.github.com/users/t2y/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-05-23T08:06:12Z","updated_at":"2017-05-23T08:15:38Z","author_association":"CONTRIBUTOR","body":"Hi @merlimat , thank you for explaining the background. I think I could understand what the pulsar producer and consumer currently behave.\r\n\r\nLet me confirm my understanding.\r\n\r\nMy debugging environment is here. I started standalone with almost default settings.\r\n\r\n```bash\r\n$ bin/pulsar standalone\r\n```\r\n\r\nI use java pulsar-client and verify communication between producer and consumer as below.\r\n\r\n```bash\r\n$ bin/pulsar-client produce -m 'hello' 'persistent://sample/standalone/ns1/my-topic'\r\n```\r\nthen,\r\n```bash\r\n$ bin/pulsar-client consume -s 'sub' 'persistent://sample/standalone/ns1/my-topic'\r\n```\r\n\r\nI learned that `serializeCommandMessageWithSize()` method just handles `metadataAndPayload`, and it can include the checksum if a producer stores it (into bookkeeper's entry?). But, in my environment, a broker send Command Message without checksum when a consumer would request to retrieve.\r\n\r\nThen, I found pulsar-client also can handle without checksum verifying `[MAGIC_NUMBER]`.\r\n\r\n```java\r\n    void messageReceived(MessageIdData messageId, ByteBuf headersAndPayload, ClientCnx cnx) {\r\n    ...\r\n        if (!verifyChecksum(headersAndPayload, messageId)) {\r\n            // discard message with checksum error\r\n            discardCorruptedMessage(messageId, cnx, ValidationError.ChecksumMismatch);\r\n            return;\r\n        }\r\n```\r\n\r\nhttps://github.com/yahoo/pulsar/blob/7badf1a/pulsar-client/src/main/java/com/yahoo/pulsar/client/impl/ConsumerImpl.java#L672\r\n\r\nThat is to say, it seems that broker and client can handle both the message with checksum and the message without checksum. Probably, in the future, a broker will handle only the message with checksum.\r\n\r\nI can understand this behavior is not specification, but it is just happened in transition phase.\r\n\r\n> Right now, I think we should just update the comment to reflect the right wire format that is applied.\r\n\r\nI agree with it.","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/303321555/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/303483928","html_url":"https://github.com/apache/pulsar/issues/411#issuecomment-303483928","issue_url":"https://api.github.com/repos/apache/pulsar/issues/411","id":303483928,"node_id":"MDEyOklzc3VlQ29tbWVudDMwMzQ4MzkyOA==","user":{"login":"merlimat","id":62500,"node_id":"MDQ6VXNlcjYyNTAw","avatar_url":"https://avatars.githubusercontent.com/u/62500?v=4","gravatar_id":"","url":"https://api.github.com/users/merlimat","html_url":"https://github.com/merlimat","followers_url":"https://api.github.com/users/merlimat/followers","following_url":"https://api.github.com/users/merlimat/following{/other_user}","gists_url":"https://api.github.com/users/merlimat/gists{/gist_id}","starred_url":"https://api.github.com/users/merlimat/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/merlimat/subscriptions","organizations_url":"https://api.github.com/users/merlimat/orgs","repos_url":"https://api.github.com/users/merlimat/repos","events_url":"https://api.github.com/users/merlimat/events{/privacy}","received_events_url":"https://api.github.com/users/merlimat/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-05-23T18:04:13Z","updated_at":"2017-05-23T18:04:13Z","author_association":"CONTRIBUTOR","body":"> We're setting heap space to 4g, I wonder if dbStorage_rocksDB_blockCacheSize=4294967296 could be the issue, does this memory come from direct memory? or heap space?\r\n\r\nThe rocksdb memory is allocated from the C++ library, and it's completely outside the JVM. It won't contribute to neither heap or direct memory.\r\n\r\nI tried to open the heap dump with several tools but it looks invalid and the fail to process it.\r\n\r\nFrom the histo, it looks like the reason for the OOM are the 3.7G of heap retained in `long[]` arrays\r\n\r\n```\r\n num     #instances         #bytes  class name\r\n----------------------------------------------\r\n   1:           854     3732598224  [J\r\n   2:          4249        4305384  [Ljava.lang.Object;\r\n...\r\n```\r\n\r\nCan you take a look where the references to these arrays are coming from?\r\n\r\nIn any case, if you are storing a lot of entries for long time, try to increase the JVM heap size.\r\n\r\nYou can check the current heap & direct mem utlization in bookies on the `data/bookkeeper/bookie-stats.json`: \r\n\r\n```\r\n...\r\n \"jvm.DIRECT_MEMORY_TOTAL\" : 4294967296,\r\n  \"jvm.DIRECT_MEMORY_USED\" : 178203,\r\n  \"jvm.GC_OLD_COUNT\" : 0,\r\n  \"jvm.GC_OLD_TIME\" : 0,\r\n  \"jvm.GC_YOUNG_COUNT\" : 2,\r\n  \"jvm.GC_YOUNG_TIME\" : 102,\r\n  \"jvm.HEAP_TOTAL\" : 2147483648,\r\n  \"jvm.HEAP_USED\" : 145288440,\r\n  \"jvm.NETTY_POOL_ALLOCATED\" : 268435456,\r\n  \"jvm.NETTY_POOL_USED\" : 1056768,\r\n...\r\n```","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/303483928/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/303598500","html_url":"https://github.com/apache/pulsar/issues/422#issuecomment-303598500","issue_url":"https://api.github.com/repos/apache/pulsar/issues/422","id":303598500,"node_id":"MDEyOklzc3VlQ29tbWVudDMwMzU5ODUwMA==","user":{"login":"jai1","id":8659452,"node_id":"MDQ6VXNlcjg2NTk0NTI=","avatar_url":"https://avatars.githubusercontent.com/u/8659452?v=4","gravatar_id":"","url":"https://api.github.com/users/jai1","html_url":"https://github.com/jai1","followers_url":"https://api.github.com/users/jai1/followers","following_url":"https://api.github.com/users/jai1/following{/other_user}","gists_url":"https://api.github.com/users/jai1/gists{/gist_id}","starred_url":"https://api.github.com/users/jai1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jai1/subscriptions","organizations_url":"https://api.github.com/users/jai1/orgs","repos_url":"https://api.github.com/users/jai1/repos","events_url":"https://api.github.com/users/jai1/events{/privacy}","received_events_url":"https://api.github.com/users/jai1/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-05-24T02:14:11Z","updated_at":"2017-05-24T02:14:11Z","author_association":"CONTRIBUTOR","body":"@merlimat - I agree that the number of publish failures may go up in case broker is unresponsive even for a second. \r\n@saandrews @rdhabalia - Does 5K seem a good number - I don't think any property publishes more than 1K mps so 5K limit will give the broker 5 seconds breathing space in case of GC pauses.","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/303598500/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/303795546","html_url":"https://github.com/apache/pulsar/issues/422#issuecomment-303795546","issue_url":"https://api.github.com/repos/apache/pulsar/issues/422","id":303795546,"node_id":"MDEyOklzc3VlQ29tbWVudDMwMzc5NTU0Ng==","user":{"login":"saandrews","id":20527148,"node_id":"MDQ6VXNlcjIwNTI3MTQ4","avatar_url":"https://avatars.githubusercontent.com/u/20527148?v=4","gravatar_id":"","url":"https://api.github.com/users/saandrews","html_url":"https://github.com/saandrews","followers_url":"https://api.github.com/users/saandrews/followers","following_url":"https://api.github.com/users/saandrews/following{/other_user}","gists_url":"https://api.github.com/users/saandrews/gists{/gist_id}","starred_url":"https://api.github.com/users/saandrews/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/saandrews/subscriptions","organizations_url":"https://api.github.com/users/saandrews/orgs","repos_url":"https://api.github.com/users/saandrews/repos","events_url":"https://api.github.com/users/saandrews/events{/privacy}","received_events_url":"https://api.github.com/users/saandrews/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-05-24T17:31:33Z","updated_at":"2017-05-24T17:31:33Z","author_association":"CONTRIBUTOR","body":"I was thinking 30k which covers our timeout duration. But client mem usage will shoot up. Any thoughts @merlimat ?","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/303795546/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/303881956","html_url":"https://github.com/apache/pulsar/pull/431#issuecomment-303881956","issue_url":"https://api.github.com/repos/apache/pulsar/issues/431","id":303881956,"node_id":"MDEyOklzc3VlQ29tbWVudDMwMzg4MTk1Ng==","user":{"login":"jai1","id":8659452,"node_id":"MDQ6VXNlcjg2NTk0NTI=","avatar_url":"https://avatars.githubusercontent.com/u/8659452?v=4","gravatar_id":"","url":"https://api.github.com/users/jai1","html_url":"https://github.com/jai1","followers_url":"https://api.github.com/users/jai1/followers","following_url":"https://api.github.com/users/jai1/following{/other_user}","gists_url":"https://api.github.com/users/jai1/gists{/gist_id}","starred_url":"https://api.github.com/users/jai1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jai1/subscriptions","organizations_url":"https://api.github.com/users/jai1/orgs","repos_url":"https://api.github.com/users/jai1/repos","events_url":"https://api.github.com/users/jai1/events{/privacy}","received_events_url":"https://api.github.com/users/jai1/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-05-24T23:35:05Z","updated_at":"2017-05-24T23:35:05Z","author_association":"CONTRIBUTOR","body":"👍 ","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/303881956/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/304300962","html_url":"https://github.com/apache/pulsar/issues/411#issuecomment-304300962","issue_url":"https://api.github.com/repos/apache/pulsar/issues/411","id":304300962,"node_id":"MDEyOklzc3VlQ29tbWVudDMwNDMwMDk2Mg==","user":{"login":"sschepens","id":3072509,"node_id":"MDQ6VXNlcjMwNzI1MDk=","avatar_url":"https://avatars.githubusercontent.com/u/3072509?v=4","gravatar_id":"","url":"https://api.github.com/users/sschepens","html_url":"https://github.com/sschepens","followers_url":"https://api.github.com/users/sschepens/followers","following_url":"https://api.github.com/users/sschepens/following{/other_user}","gists_url":"https://api.github.com/users/sschepens/gists{/gist_id}","starred_url":"https://api.github.com/users/sschepens/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sschepens/subscriptions","organizations_url":"https://api.github.com/users/sschepens/orgs","repos_url":"https://api.github.com/users/sschepens/repos","events_url":"https://api.github.com/users/sschepens/events{/privacy}","received_events_url":"https://api.github.com/users/sschepens/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-05-26T14:41:49Z","updated_at":"2017-05-26T14:41:49Z","author_association":"CONTRIBUTOR","body":"@merlimat we're gonna try incrementing heap without decrementing rocksdb cache then.\r\nDo you know why  `readAheadCache` is not working for us? we have desabled it now.","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/304300962/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/304419832","html_url":"https://github.com/apache/pulsar/pull/294#issuecomment-304419832","issue_url":"https://api.github.com/repos/apache/pulsar/issues/294","id":304419832,"node_id":"MDEyOklzc3VlQ29tbWVudDMwNDQxOTgzMg==","user":{"login":"merlimat","id":62500,"node_id":"MDQ6VXNlcjYyNTAw","avatar_url":"https://avatars.githubusercontent.com/u/62500?v=4","gravatar_id":"","url":"https://api.github.com/users/merlimat","html_url":"https://github.com/merlimat","followers_url":"https://api.github.com/users/merlimat/followers","following_url":"https://api.github.com/users/merlimat/following{/other_user}","gists_url":"https://api.github.com/users/merlimat/gists{/gist_id}","starred_url":"https://api.github.com/users/merlimat/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/merlimat/subscriptions","organizations_url":"https://api.github.com/users/merlimat/orgs","repos_url":"https://api.github.com/users/merlimat/repos","events_url":"https://api.github.com/users/merlimat/events{/privacy}","received_events_url":"https://api.github.com/users/merlimat/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-05-27T02:08:18Z","updated_at":"2017-05-27T02:08:18Z","author_association":"CONTRIBUTOR","body":"@rdhabalia Updated, PTAL","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/304419832/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/305008065","html_url":"https://github.com/apache/pulsar/pull/320#issuecomment-305008065","issue_url":"https://api.github.com/repos/apache/pulsar/issues/320","id":305008065,"node_id":"MDEyOklzc3VlQ29tbWVudDMwNTAwODA2NQ==","user":{"login":"merlimat","id":62500,"node_id":"MDQ6VXNlcjYyNTAw","avatar_url":"https://avatars.githubusercontent.com/u/62500?v=4","gravatar_id":"","url":"https://api.github.com/users/merlimat","html_url":"https://github.com/merlimat","followers_url":"https://api.github.com/users/merlimat/followers","following_url":"https://api.github.com/users/merlimat/following{/other_user}","gists_url":"https://api.github.com/users/merlimat/gists{/gist_id}","starred_url":"https://api.github.com/users/merlimat/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/merlimat/subscriptions","organizations_url":"https://api.github.com/users/merlimat/orgs","repos_url":"https://api.github.com/users/merlimat/repos","events_url":"https://api.github.com/users/merlimat/events{/privacy}","received_events_url":"https://api.github.com/users/merlimat/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-05-30T21:05:39Z","updated_at":"2017-05-30T21:05:39Z","author_association":"CONTRIBUTOR","body":"@rdhabalia Please take a look at #436. I think we should use the same trick on the client side. Instrumenting ZooKeeper to add the metrics for rates and latencies.","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/305008065/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/305053706","html_url":"https://github.com/apache/pulsar/issues/438#issuecomment-305053706","issue_url":"https://api.github.com/repos/apache/pulsar/issues/438","id":305053706,"node_id":"MDEyOklzc3VlQ29tbWVudDMwNTA1MzcwNg==","user":{"login":"merlimat","id":62500,"node_id":"MDQ6VXNlcjYyNTAw","avatar_url":"https://avatars.githubusercontent.com/u/62500?v=4","gravatar_id":"","url":"https://api.github.com/users/merlimat","html_url":"https://github.com/merlimat","followers_url":"https://api.github.com/users/merlimat/followers","following_url":"https://api.github.com/users/merlimat/following{/other_user}","gists_url":"https://api.github.com/users/merlimat/gists{/gist_id}","starred_url":"https://api.github.com/users/merlimat/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/merlimat/subscriptions","organizations_url":"https://api.github.com/users/merlimat/orgs","repos_url":"https://api.github.com/users/merlimat/repos","events_url":"https://api.github.com/users/merlimat/events{/privacy}","received_events_url":"https://api.github.com/users/merlimat/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-05-31T01:14:05Z","updated_at":"2017-05-31T01:14:05Z","author_association":"CONTRIBUTOR","body":"> any topic can have non-persistent subscription along with durable/non-durable subscription.\r\n\r\nI am a bit confused on the distinction between non-persistent and non-durable.\r\n\r\nWouldn't it be easier to introduce a new topic type `non-persistent` as opposed as the current `persistent` topic? \r\n\r\nThat way, the distinction would be clear, and the expectation would be set in the resource name itself. \r\n\r\nNow the `non-persistent` topic should completely bypass ManagedLedger which is an API for Storage 😄, and just serve from memory. ","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/305053706/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/305060200","html_url":"https://github.com/apache/pulsar/issues/438#issuecomment-305060200","issue_url":"https://api.github.com/repos/apache/pulsar/issues/438","id":305060200,"node_id":"MDEyOklzc3VlQ29tbWVudDMwNTA2MDIwMA==","user":{"login":"rdhabalia","id":2898254,"node_id":"MDQ6VXNlcjI4OTgyNTQ=","avatar_url":"https://avatars.githubusercontent.com/u/2898254?v=4","gravatar_id":"","url":"https://api.github.com/users/rdhabalia","html_url":"https://github.com/rdhabalia","followers_url":"https://api.github.com/users/rdhabalia/followers","following_url":"https://api.github.com/users/rdhabalia/following{/other_user}","gists_url":"https://api.github.com/users/rdhabalia/gists{/gist_id}","starred_url":"https://api.github.com/users/rdhabalia/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rdhabalia/subscriptions","organizations_url":"https://api.github.com/users/rdhabalia/orgs","repos_url":"https://api.github.com/users/rdhabalia/repos","events_url":"https://api.github.com/users/rdhabalia/events{/privacy}","received_events_url":"https://api.github.com/users/rdhabalia/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-05-31T01:57:19Z","updated_at":"2017-05-31T01:57:19Z","author_association":"CONTRIBUTOR","body":"> I am a bit confused on the distinction between non-persistent and non-durable. Wouldn't it be easier to introduce a new topic type non-persistent as opposed as the current persistent topic?\r\n\r\nYes, I was thinking to add pluggable code for non-persistent to leverage stats and other things with minimal code change. However, introducing NonPersistentTopic and subscription could be more cleaner approach and yes, we can bypass managed-ledger as well. I will close #439 and will create a separate PR for this.","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/305060200/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/305282897","html_url":"https://github.com/apache/pulsar/pull/441#issuecomment-305282897","issue_url":"https://api.github.com/repos/apache/pulsar/issues/441","id":305282897,"node_id":"MDEyOklzc3VlQ29tbWVudDMwNTI4Mjg5Nw==","user":{"login":"msb-at-yahoo","id":7442825,"node_id":"MDQ6VXNlcjc0NDI4MjU=","avatar_url":"https://avatars.githubusercontent.com/u/7442825?v=4","gravatar_id":"","url":"https://api.github.com/users/msb-at-yahoo","html_url":"https://github.com/msb-at-yahoo","followers_url":"https://api.github.com/users/msb-at-yahoo/followers","following_url":"https://api.github.com/users/msb-at-yahoo/following{/other_user}","gists_url":"https://api.github.com/users/msb-at-yahoo/gists{/gist_id}","starred_url":"https://api.github.com/users/msb-at-yahoo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/msb-at-yahoo/subscriptions","organizations_url":"https://api.github.com/users/msb-at-yahoo/orgs","repos_url":"https://api.github.com/users/msb-at-yahoo/repos","events_url":"https://api.github.com/users/msb-at-yahoo/events{/privacy}","received_events_url":"https://api.github.com/users/msb-at-yahoo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-05-31T18:53:57Z","updated_at":"2017-05-31T18:53:57Z","author_association":"CONTRIBUTOR","body":"how is the default queue size change related?","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/305282897/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/305285737","html_url":"https://github.com/apache/pulsar/pull/441#issuecomment-305285737","issue_url":"https://api.github.com/repos/apache/pulsar/issues/441","id":305285737,"node_id":"MDEyOklzc3VlQ29tbWVudDMwNTI4NTczNw==","user":{"login":"jai1","id":8659452,"node_id":"MDQ6VXNlcjg2NTk0NTI=","avatar_url":"https://avatars.githubusercontent.com/u/8659452?v=4","gravatar_id":"","url":"https://api.github.com/users/jai1","html_url":"https://github.com/jai1","followers_url":"https://api.github.com/users/jai1/followers","following_url":"https://api.github.com/users/jai1/following{/other_user}","gists_url":"https://api.github.com/users/jai1/gists{/gist_id}","starred_url":"https://api.github.com/users/jai1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jai1/subscriptions","organizations_url":"https://api.github.com/users/jai1/orgs","repos_url":"https://api.github.com/users/jai1/repos","events_url":"https://api.github.com/users/jai1/events{/privacy}","received_events_url":"https://api.github.com/users/jai1/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-05-31T19:04:11Z","updated_at":"2017-05-31T19:10:42Z","author_association":"CONTRIBUTOR","body":"In production, if we have a producer with the following config:-\r\na. Queue size 1K\r\nb. Produce rate = 2K msg/s\r\n\r\nAnd lets say the broker has a GC pause of 500 milliseconds or a rolling restart is going on then:- \r\na. With current code base the sendAsync will block for few milliseconds and client will not even know that there was some issue (except high latency)\r\nb. After this PR the client will start seeing failures and will come to the conclusion that the service is down or not working. \r\n\r\nSo in order to prevent clients seeing failures, we assumed that most properties will not produce over 1K MPS and so a queue size of 30K will prevent them from seeing failures before 30 seconds (default timeout). \r\n\r\nBut yes I expect there to be some discussion regarding the queue size before the PR is merged \r\n\r\n@merlimat @saandrews @rdhabalia  - do you agree with this approach?","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/305285737/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/305288341","html_url":"https://github.com/apache/pulsar/pull/441#issuecomment-305288341","issue_url":"https://api.github.com/repos/apache/pulsar/issues/441","id":305288341,"node_id":"MDEyOklzc3VlQ29tbWVudDMwNTI4ODM0MQ==","user":{"login":"msb-at-yahoo","id":7442825,"node_id":"MDQ6VXNlcjc0NDI4MjU=","avatar_url":"https://avatars.githubusercontent.com/u/7442825?v=4","gravatar_id":"","url":"https://api.github.com/users/msb-at-yahoo","html_url":"https://github.com/msb-at-yahoo","followers_url":"https://api.github.com/users/msb-at-yahoo/followers","following_url":"https://api.github.com/users/msb-at-yahoo/following{/other_user}","gists_url":"https://api.github.com/users/msb-at-yahoo/gists{/gist_id}","starred_url":"https://api.github.com/users/msb-at-yahoo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/msb-at-yahoo/subscriptions","organizations_url":"https://api.github.com/users/msb-at-yahoo/orgs","repos_url":"https://api.github.com/users/msb-at-yahoo/repos","events_url":"https://api.github.com/users/msb-at-yahoo/events{/privacy}","received_events_url":"https://api.github.com/users/msb-at-yahoo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-05-31T19:14:08Z","updated_at":"2017-05-31T19:14:08Z","author_association":"CONTRIBUTOR","body":"i think it'd be better to separate the queue size change from the block if full change. both might make sense, but they're not related.","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/305288341/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/305298093","html_url":"https://github.com/apache/pulsar/pull/437#issuecomment-305298093","issue_url":"https://api.github.com/repos/apache/pulsar/issues/437","id":305298093,"node_id":"MDEyOklzc3VlQ29tbWVudDMwNTI5ODA5Mw==","user":{"login":"bobbeyreese","id":25467949,"node_id":"MDQ6VXNlcjI1NDY3OTQ5","avatar_url":"https://avatars.githubusercontent.com/u/25467949?v=4","gravatar_id":"","url":"https://api.github.com/users/bobbeyreese","html_url":"https://github.com/bobbeyreese","followers_url":"https://api.github.com/users/bobbeyreese/followers","following_url":"https://api.github.com/users/bobbeyreese/following{/other_user}","gists_url":"https://api.github.com/users/bobbeyreese/gists{/gist_id}","starred_url":"https://api.github.com/users/bobbeyreese/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bobbeyreese/subscriptions","organizations_url":"https://api.github.com/users/bobbeyreese/orgs","repos_url":"https://api.github.com/users/bobbeyreese/repos","events_url":"https://api.github.com/users/bobbeyreese/events{/privacy}","received_events_url":"https://api.github.com/users/bobbeyreese/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-05-31T19:53:05Z","updated_at":"2017-05-31T19:53:05Z","author_association":"CONTRIBUTOR","body":"Note: there appears to be failing tests that I am currently investigating.","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/305298093/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/305375462","html_url":"https://github.com/apache/pulsar/pull/440#issuecomment-305375462","issue_url":"https://api.github.com/repos/apache/pulsar/issues/440","id":305375462,"node_id":"MDEyOklzc3VlQ29tbWVudDMwNTM3NTQ2Mg==","user":{"login":"massakam","id":22543882,"node_id":"MDQ6VXNlcjIyNTQzODgy","avatar_url":"https://avatars.githubusercontent.com/u/22543882?v=4","gravatar_id":"","url":"https://api.github.com/users/massakam","html_url":"https://github.com/massakam","followers_url":"https://api.github.com/users/massakam/followers","following_url":"https://api.github.com/users/massakam/following{/other_user}","gists_url":"https://api.github.com/users/massakam/gists{/gist_id}","starred_url":"https://api.github.com/users/massakam/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/massakam/subscriptions","organizations_url":"https://api.github.com/users/massakam/orgs","repos_url":"https://api.github.com/users/massakam/repos","events_url":"https://api.github.com/users/massakam/events{/privacy}","received_events_url":"https://api.github.com/users/massakam/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-06-01T02:56:53Z","updated_at":"2017-06-01T02:56:53Z","author_association":"CONTRIBUTOR","body":"Normal client seems to do not use `createSslContext()` but `createNettySslContext()`.\r\nAs far as I've tried, normal client can trust multiple certificates even without this modification.","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/305375462/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/305386581","html_url":"https://github.com/apache/pulsar/pull/440#issuecomment-305386581","issue_url":"https://api.github.com/repos/apache/pulsar/issues/440","id":305386581,"node_id":"MDEyOklzc3VlQ29tbWVudDMwNTM4NjU4MQ==","user":{"login":"merlimat","id":62500,"node_id":"MDQ6VXNlcjYyNTAw","avatar_url":"https://avatars.githubusercontent.com/u/62500?v=4","gravatar_id":"","url":"https://api.github.com/users/merlimat","html_url":"https://github.com/merlimat","followers_url":"https://api.github.com/users/merlimat/followers","following_url":"https://api.github.com/users/merlimat/following{/other_user}","gists_url":"https://api.github.com/users/merlimat/gists{/gist_id}","starred_url":"https://api.github.com/users/merlimat/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/merlimat/subscriptions","organizations_url":"https://api.github.com/users/merlimat/orgs","repos_url":"https://api.github.com/users/merlimat/repos","events_url":"https://api.github.com/users/merlimat/events{/privacy}","received_events_url":"https://api.github.com/users/merlimat/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-06-01T04:34:44Z","updated_at":"2017-06-01T04:34:44Z","author_association":"CONTRIBUTOR","body":"@massakam Thanks for the clarification! ","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/305386581/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/305563109","html_url":"https://github.com/apache/pulsar/pull/441#issuecomment-305563109","issue_url":"https://api.github.com/repos/apache/pulsar/issues/441","id":305563109,"node_id":"MDEyOklzc3VlQ29tbWVudDMwNTU2MzEwOQ==","user":{"login":"jai1","id":8659452,"node_id":"MDQ6VXNlcjg2NTk0NTI=","avatar_url":"https://avatars.githubusercontent.com/u/8659452?v=4","gravatar_id":"","url":"https://api.github.com/users/jai1","html_url":"https://github.com/jai1","followers_url":"https://api.github.com/users/jai1/followers","following_url":"https://api.github.com/users/jai1/following{/other_user}","gists_url":"https://api.github.com/users/jai1/gists{/gist_id}","starred_url":"https://api.github.com/users/jai1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jai1/subscriptions","organizations_url":"https://api.github.com/users/jai1/orgs","repos_url":"https://api.github.com/users/jai1/repos","events_url":"https://api.github.com/users/jai1/events{/privacy}","received_events_url":"https://api.github.com/users/jai1/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-06-01T17:26:49Z","updated_at":"2017-06-01T17:26:49Z","author_association":"CONTRIBUTOR","body":"@merlimat - Updated the docs\r\n@msb-at-yahoo - Moving the maxPendingMessages changes to separate PR  #445","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/305563109/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/305568459","html_url":"https://github.com/apache/pulsar/pull/441#issuecomment-305568459","issue_url":"https://api.github.com/repos/apache/pulsar/issues/441","id":305568459,"node_id":"MDEyOklzc3VlQ29tbWVudDMwNTU2ODQ1OQ==","user":{"login":"jai1","id":8659452,"node_id":"MDQ6VXNlcjg2NTk0NTI=","avatar_url":"https://avatars.githubusercontent.com/u/8659452?v=4","gravatar_id":"","url":"https://api.github.com/users/jai1","html_url":"https://github.com/jai1","followers_url":"https://api.github.com/users/jai1/followers","following_url":"https://api.github.com/users/jai1/following{/other_user}","gists_url":"https://api.github.com/users/jai1/gists{/gist_id}","starred_url":"https://api.github.com/users/jai1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jai1/subscriptions","organizations_url":"https://api.github.com/users/jai1/orgs","repos_url":"https://api.github.com/users/jai1/repos","events_url":"https://api.github.com/users/jai1/events{/privacy}","received_events_url":"https://api.github.com/users/jai1/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-06-01T17:47:33Z","updated_at":"2017-06-01T17:47:33Z","author_association":"CONTRIBUTOR","body":"@saandrews - Have made relevant change to Open Source documentation, will update Yahoo wrapper documentation and release notes once the PR is merged.","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/305568459/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/305912514","html_url":"https://github.com/apache/pulsar/pull/447#issuecomment-305912514","issue_url":"https://api.github.com/repos/apache/pulsar/issues/447","id":305912514,"node_id":"MDEyOklzc3VlQ29tbWVudDMwNTkxMjUxNA==","user":{"login":"merlimat","id":62500,"node_id":"MDQ6VXNlcjYyNTAw","avatar_url":"https://avatars.githubusercontent.com/u/62500?v=4","gravatar_id":"","url":"https://api.github.com/users/merlimat","html_url":"https://github.com/merlimat","followers_url":"https://api.github.com/users/merlimat/followers","following_url":"https://api.github.com/users/merlimat/following{/other_user}","gists_url":"https://api.github.com/users/merlimat/gists{/gist_id}","starred_url":"https://api.github.com/users/merlimat/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/merlimat/subscriptions","organizations_url":"https://api.github.com/users/merlimat/orgs","repos_url":"https://api.github.com/users/merlimat/repos","events_url":"https://api.github.com/users/merlimat/events{/privacy}","received_events_url":"https://api.github.com/users/merlimat/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-06-02T21:23:08Z","updated_at":"2017-06-02T21:23:08Z","author_association":"CONTRIBUTOR","body":"@nkurihar The change looks good. I just have a couple of questions:\r\n * What are the values of `b1.readableBytes()` and `b2.readableBytes()` ? \r\n * Why is this happening only for TLS and not regular messages?\r\n * Can you add a test method in `DoubleByteBuf` to demonstrate this issue just with the buffer itself?","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/305912514/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/306179293","html_url":"https://github.com/apache/pulsar/pull/447#issuecomment-306179293","issue_url":"https://api.github.com/repos/apache/pulsar/issues/447","id":306179293,"node_id":"MDEyOklzc3VlQ29tbWVudDMwNjE3OTI5Mw==","user":{"login":"nkurihar","id":22067228,"node_id":"MDQ6VXNlcjIyMDY3MjI4","avatar_url":"https://avatars.githubusercontent.com/u/22067228?v=4","gravatar_id":"","url":"https://api.github.com/users/nkurihar","html_url":"https://github.com/nkurihar","followers_url":"https://api.github.com/users/nkurihar/followers","following_url":"https://api.github.com/users/nkurihar/following{/other_user}","gists_url":"https://api.github.com/users/nkurihar/gists{/gist_id}","starred_url":"https://api.github.com/users/nkurihar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nkurihar/subscriptions","organizations_url":"https://api.github.com/users/nkurihar/orgs","repos_url":"https://api.github.com/users/nkurihar/repos","events_url":"https://api.github.com/users/nkurihar/events{/privacy}","received_events_url":"https://api.github.com/users/nkurihar/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-06-05T12:48:59Z","updated_at":"2017-06-05T12:48:59Z","author_association":"CONTRIBUTOR","body":"@merlimat \r\n> What are the values of b1.readableBytes() and b2.readableBytes() ?\r\n\r\nThey are defined as `b1(b2).writerIndex - b1(b2).readerIndex`.\r\nIn this case, `readerIndex` and `writerIndex` are the start and the end of the buffer, respectively.\r\nSince no method in `DoubleByteBuf` updates `readerIndex` and `writerIndex`, `b1(b2).readableBytes()` always returns the length of the buffer.\r\n\r\n> Why is this happening only for TLS and not regular messages?\r\n\r\nIf TLS is disabled, messages larger than 16384 bytes can be sent at one time.\r\nHowever, if TLS is enabled, such messages are divided into chunks and sent at more than one time.\r\n\r\n> Can you add a test method in DoubleByteBuf to demonstrate this issue just with the buffer itself?\r\n\r\nI added a test code for `DoubleByteBuf#readableBytes`.","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/306179293/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/306496139","html_url":"https://github.com/apache/pulsar/issues/411#issuecomment-306496139","issue_url":"https://api.github.com/repos/apache/pulsar/issues/411","id":306496139,"node_id":"MDEyOklzc3VlQ29tbWVudDMwNjQ5NjEzOQ==","user":{"login":"estebangarcia","id":16657038,"node_id":"MDQ6VXNlcjE2NjU3MDM4","avatar_url":"https://avatars.githubusercontent.com/u/16657038?v=4","gravatar_id":"","url":"https://api.github.com/users/estebangarcia","html_url":"https://github.com/estebangarcia","followers_url":"https://api.github.com/users/estebangarcia/followers","following_url":"https://api.github.com/users/estebangarcia/following{/other_user}","gists_url":"https://api.github.com/users/estebangarcia/gists{/gist_id}","starred_url":"https://api.github.com/users/estebangarcia/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/estebangarcia/subscriptions","organizations_url":"https://api.github.com/users/estebangarcia/orgs","repos_url":"https://api.github.com/users/estebangarcia/repos","events_url":"https://api.github.com/users/estebangarcia/events{/privacy}","received_events_url":"https://api.github.com/users/estebangarcia/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-06-06T14:03:43Z","updated_at":"2017-06-06T14:03:43Z","author_association":"NONE","body":"@merlimat We increased our heap to 8GB and had the same issue. We took another dump (you can download it here: https://s3.amazonaws.com/pulsardumps/dump_ip-10-64-103-165.tar.gz)\r\n\r\nWe found the same behaviour with the long[]:\r\n![screenshot from 2017-06-05 16-01-49](https://cloud.githubusercontent.com/assets/16657038/26798779/4e9495c4-4a08-11e7-94ee-d1235d46ac76.png)\r\n\r\nThese are the objects referencing those longs:\r\n\r\n![screenshot from 2017-06-05 15-57-04](https://cloud.githubusercontent.com/assets/16657038/26798780/4e9685be-4a08-11e7-99fe-14a7525a6ca6.png)\r\n\r\nHeap Usage of the last two days:\r\n\r\n![screenshot from 2017-06-05 16-17-19](https://cloud.githubusercontent.com/assets/16657038/26799087/7dbce584-4a0a-11e7-931a-b6e39dfba126.png)\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/306496139/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/306707839","html_url":"https://github.com/apache/pulsar/issues/451#issuecomment-306707839","issue_url":"https://api.github.com/repos/apache/pulsar/issues/451","id":306707839,"node_id":"MDEyOklzc3VlQ29tbWVudDMwNjcwNzgzOQ==","user":{"login":"jai1","id":8659452,"node_id":"MDQ6VXNlcjg2NTk0NTI=","avatar_url":"https://avatars.githubusercontent.com/u/8659452?v=4","gravatar_id":"","url":"https://api.github.com/users/jai1","html_url":"https://github.com/jai1","followers_url":"https://api.github.com/users/jai1/followers","following_url":"https://api.github.com/users/jai1/following{/other_user}","gists_url":"https://api.github.com/users/jai1/gists{/gist_id}","starred_url":"https://api.github.com/users/jai1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jai1/subscriptions","organizations_url":"https://api.github.com/users/jai1/orgs","repos_url":"https://api.github.com/users/jai1/repos","events_url":"https://api.github.com/users/jai1/events{/privacy}","received_events_url":"https://api.github.com/users/jai1/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-06-07T07:14:09Z","updated_at":"2017-06-07T07:14:09Z","author_association":"CONTRIBUTOR","body":"Just a thought\r\n\r\n>  if consumer is not fast enough to consume messages and internal receive queue is full with the received messages then client consumer will drop newly incoming messages\r\n\r\nIf the dropping mechanism will be on client side then can we drop old messages in receiver queue and fetch more messages from broker (via CommandFlow) rather than dropping the newly incoming messages - so that even though there is a pause in the consumer end we always deliver the latest messages. The Usecase also states that consumer only wants recent messages - no point giving it 1000 old messages (Receiver queue size)","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/306707839/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/306727859","html_url":"https://github.com/apache/pulsar/pull/448#issuecomment-306727859","issue_url":"https://api.github.com/repos/apache/pulsar/issues/448","id":306727859,"node_id":"MDEyOklzc3VlQ29tbWVudDMwNjcyNzg1OQ==","user":{"login":"yush1ga","id":22343413,"node_id":"MDQ6VXNlcjIyMzQzNDEz","avatar_url":"https://avatars.githubusercontent.com/u/22343413?v=4","gravatar_id":"","url":"https://api.github.com/users/yush1ga","html_url":"https://github.com/yush1ga","followers_url":"https://api.github.com/users/yush1ga/followers","following_url":"https://api.github.com/users/yush1ga/following{/other_user}","gists_url":"https://api.github.com/users/yush1ga/gists{/gist_id}","starred_url":"https://api.github.com/users/yush1ga/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yush1ga/subscriptions","organizations_url":"https://api.github.com/users/yush1ga/orgs","repos_url":"https://api.github.com/users/yush1ga/repos","events_url":"https://api.github.com/users/yush1ga/events{/privacy}","received_events_url":"https://api.github.com/users/yush1ga/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-06-07T08:32:35Z","updated_at":"2017-06-07T08:54:21Z","author_association":"CONTRIBUTOR","body":"~~Some tests were failed.~~\r\n~~I'm going to cope with it.~~\r\nThe local test has been passed.","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/306727859/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/306904964","html_url":"https://github.com/apache/pulsar/issues/451#issuecomment-306904964","issue_url":"https://api.github.com/repos/apache/pulsar/issues/451","id":306904964,"node_id":"MDEyOklzc3VlQ29tbWVudDMwNjkwNDk2NA==","user":{"login":"msb-at-yahoo","id":7442825,"node_id":"MDQ6VXNlcjc0NDI4MjU=","avatar_url":"https://avatars.githubusercontent.com/u/7442825?v=4","gravatar_id":"","url":"https://api.github.com/users/msb-at-yahoo","html_url":"https://github.com/msb-at-yahoo","followers_url":"https://api.github.com/users/msb-at-yahoo/followers","following_url":"https://api.github.com/users/msb-at-yahoo/following{/other_user}","gists_url":"https://api.github.com/users/msb-at-yahoo/gists{/gist_id}","starred_url":"https://api.github.com/users/msb-at-yahoo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/msb-at-yahoo/subscriptions","organizations_url":"https://api.github.com/users/msb-at-yahoo/orgs","repos_url":"https://api.github.com/users/msb-at-yahoo/repos","events_url":"https://api.github.com/users/msb-at-yahoo/events{/privacy}","received_events_url":"https://api.github.com/users/msb-at-yahoo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-06-07T19:48:33Z","updated_at":"2017-06-07T19:48:33Z","author_association":"CONTRIBUTOR","body":"You need something on the broker side to defend from hostile clients.\r\n\r\nOn the client side, how old is too old before dropping? A long GC pause may lead to surprising behavior, for example.  Make it a config setting with a default of 30s?","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/306904964/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/306916356","html_url":"https://github.com/apache/pulsar/issues/451#issuecomment-306916356","issue_url":"https://api.github.com/repos/apache/pulsar/issues/451","id":306916356,"node_id":"MDEyOklzc3VlQ29tbWVudDMwNjkxNjM1Ng==","user":{"login":"rdhabalia","id":2898254,"node_id":"MDQ6VXNlcjI4OTgyNTQ=","avatar_url":"https://avatars.githubusercontent.com/u/2898254?v=4","gravatar_id":"","url":"https://api.github.com/users/rdhabalia","html_url":"https://github.com/rdhabalia","followers_url":"https://api.github.com/users/rdhabalia/followers","following_url":"https://api.github.com/users/rdhabalia/following{/other_user}","gists_url":"https://api.github.com/users/rdhabalia/gists{/gist_id}","starred_url":"https://api.github.com/users/rdhabalia/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rdhabalia/subscriptions","organizations_url":"https://api.github.com/users/rdhabalia/orgs","repos_url":"https://api.github.com/users/rdhabalia/repos","events_url":"https://api.github.com/users/rdhabalia/events{/privacy}","received_events_url":"https://api.github.com/users/rdhabalia/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-06-07T20:33:43Z","updated_at":"2017-06-07T20:33:43Z","author_association":"CONTRIBUTOR","body":"> If the dropping mechanism will be on client side then can we drop old messages in receiver queue \r\n\r\nYes, I think we can remove oldest message in the queue if queue is full and then can add newly incoming message.\r\n\r\n> You need something on the broker side to defend from hostile clients.\r\n\r\nRight now, at broker side we have rate limiter for publish message where publisher can publish 1K message per second and broker fails publish over that limit.\r\n\r\n> On the client side, how old is too old before dropping? A long GC pause may lead to surprising behavior.\r\n\r\nActually, client only drops message if consumer is slow and not able to consume already received messages and internal receive queue is full. So, if consumer can tune message queue according to consumption rate so, it doesn't have to drop any of the message.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/306916356/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/306920216","html_url":"https://github.com/apache/pulsar/issues/451#issuecomment-306920216","issue_url":"https://api.github.com/repos/apache/pulsar/issues/451","id":306920216,"node_id":"MDEyOklzc3VlQ29tbWVudDMwNjkyMDIxNg==","user":{"login":"merlimat","id":62500,"node_id":"MDQ6VXNlcjYyNTAw","avatar_url":"https://avatars.githubusercontent.com/u/62500?v=4","gravatar_id":"","url":"https://api.github.com/users/merlimat","html_url":"https://github.com/merlimat","followers_url":"https://api.github.com/users/merlimat/followers","following_url":"https://api.github.com/users/merlimat/following{/other_user}","gists_url":"https://api.github.com/users/merlimat/gists{/gist_id}","starred_url":"https://api.github.com/users/merlimat/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/merlimat/subscriptions","organizations_url":"https://api.github.com/users/merlimat/orgs","repos_url":"https://api.github.com/users/merlimat/repos","events_url":"https://api.github.com/users/merlimat/events{/privacy}","received_events_url":"https://api.github.com/users/merlimat/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-06-07T20:48:43Z","updated_at":"2017-06-07T20:48:43Z","author_association":"CONTRIBUTOR","body":"> You need something on the broker side to defend from hostile clients.\r\n\r\n@msb-at-yahoo We have not big protections so far against hostile clients even for persistent topics. The protections that are in place are for back-pressure or work cooperatively with the client library. There is little protection against circumventing these mechanisms.\r\n\r\n> Right now, at broker side we have rate limiter for publish message where publisher can publish 1K message per second and broker fails publish over that limit.\r\n\r\n@rdhabalia A fixed rate limit is not very flexible and it can be tricky to set. Also, if you do it at the broker level, it applies to everything. \r\nIn general, I should be able to send/receive as fast as possible and if any bottleneck is reached, then the backpressure should apply all the way back to the source.\r\n\r\nIn case on non-persistent, you can still enforce a max number of in-flight messages from a particular connection. \r\n\r\nIn case the consumers are not able to keep up with the rate, then the messages should just be dropped.","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/306920216/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/306922490","html_url":"https://github.com/apache/pulsar/issues/451#issuecomment-306922490","issue_url":"https://api.github.com/repos/apache/pulsar/issues/451","id":306922490,"node_id":"MDEyOklzc3VlQ29tbWVudDMwNjkyMjQ5MA==","user":{"login":"rdhabalia","id":2898254,"node_id":"MDQ6VXNlcjI4OTgyNTQ=","avatar_url":"https://avatars.githubusercontent.com/u/2898254?v=4","gravatar_id":"","url":"https://api.github.com/users/rdhabalia","html_url":"https://github.com/rdhabalia","followers_url":"https://api.github.com/users/rdhabalia/followers","following_url":"https://api.github.com/users/rdhabalia/following{/other_user}","gists_url":"https://api.github.com/users/rdhabalia/gists{/gist_id}","starred_url":"https://api.github.com/users/rdhabalia/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rdhabalia/subscriptions","organizations_url":"https://api.github.com/users/rdhabalia/orgs","repos_url":"https://api.github.com/users/rdhabalia/repos","events_url":"https://api.github.com/users/rdhabalia/events{/privacy}","received_events_url":"https://api.github.com/users/rdhabalia/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-06-07T20:57:03Z","updated_at":"2017-06-07T20:57:03Z","author_association":"CONTRIBUTOR","body":"> In case on non-persistent, you can still enforce a max number of in-flight messages from a particular connection.\r\n\r\nSure, right now we have added rate-limiting per [non-persistent-topic](https://github.com/rdhabalia/pulsar/blob/34534370d7bb71fe83175a818090f951824696f2/pulsar-broker/src/main/java/com/yahoo/pulsar/broker/service/non/persistent/NonPersistentTopic.java#L189), but yes, I think it's better to enforce max number of in-flight messages per connection rather. I will make that change in PR.\r\n","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/306922490/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/306924327","html_url":"https://github.com/apache/pulsar/issues/451#issuecomment-306924327","issue_url":"https://api.github.com/repos/apache/pulsar/issues/451","id":306924327,"node_id":"MDEyOklzc3VlQ29tbWVudDMwNjkyNDMyNw==","user":{"login":"merlimat","id":62500,"node_id":"MDQ6VXNlcjYyNTAw","avatar_url":"https://avatars.githubusercontent.com/u/62500?v=4","gravatar_id":"","url":"https://api.github.com/users/merlimat","html_url":"https://github.com/merlimat","followers_url":"https://api.github.com/users/merlimat/followers","following_url":"https://api.github.com/users/merlimat/following{/other_user}","gists_url":"https://api.github.com/users/merlimat/gists{/gist_id}","starred_url":"https://api.github.com/users/merlimat/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/merlimat/subscriptions","organizations_url":"https://api.github.com/users/merlimat/orgs","repos_url":"https://api.github.com/users/merlimat/repos","events_url":"https://api.github.com/users/merlimat/events{/privacy}","received_events_url":"https://api.github.com/users/merlimat/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-06-07T21:03:54Z","updated_at":"2017-06-07T21:03:54Z","author_association":"CONTRIBUTOR","body":"Right now the logic is based on \"messages in flight to bookies\" so we can easily apply backpressure there if we cannot write to bookies fast enough. \r\n\r\nFor non-persistent, though, what can we use for metric? \r\n\r\nOn the flip side, the client can keep sending messages anyway (irrespectively of us trying to tell him not to do it). But if the act of action when getting a message and the consumers are not available/ready/... is to drop it on the floor, then do we need rate limiting?\r\n\r\nThe next question is: should the producer adapt to the speed of consumers or should the messages be dropped?\r\n\r\nIn persistent mode, producers and consumers are isolated by the storage, which can be thought as an *infinite* buffer. So the backpressure is only applied on *persisting* the message to storage, irrespective of the consumption side.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/306924327/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/306931033","html_url":"https://github.com/apache/pulsar/issues/451#issuecomment-306931033","issue_url":"https://api.github.com/repos/apache/pulsar/issues/451","id":306931033,"node_id":"MDEyOklzc3VlQ29tbWVudDMwNjkzMTAzMw==","user":{"login":"rdhabalia","id":2898254,"node_id":"MDQ6VXNlcjI4OTgyNTQ=","avatar_url":"https://avatars.githubusercontent.com/u/2898254?v=4","gravatar_id":"","url":"https://api.github.com/users/rdhabalia","html_url":"https://github.com/rdhabalia","followers_url":"https://api.github.com/users/rdhabalia/followers","following_url":"https://api.github.com/users/rdhabalia/following{/other_user}","gists_url":"https://api.github.com/users/rdhabalia/gists{/gist_id}","starred_url":"https://api.github.com/users/rdhabalia/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rdhabalia/subscriptions","organizations_url":"https://api.github.com/users/rdhabalia/orgs","repos_url":"https://api.github.com/users/rdhabalia/repos","events_url":"https://api.github.com/users/rdhabalia/events{/privacy}","received_events_url":"https://api.github.com/users/rdhabalia/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-06-07T21:30:43Z","updated_at":"2017-06-07T21:30:43Z","author_association":"CONTRIBUTOR","body":"> But if the act of action when getting a message and the consumers are not available/ready/... is to drop it on the floor, then do we need rate limiting?\r\n\r\nRight now, we do rate limiting as soon as message is published and if it is able to acquire permit then it will send message to consumer else it fails the publish with `TooManyRequestError`. So, broker does rate limiting even without any consumer connected.\r\n\r\n> The next question is: should the producer adapt to the speed of consumers or should the messages be dropped? \r\n\r\nBut right now broker keeps pushing message data to consumer without considering consumer's permit so, broker and producer don't have knowledge about how consumer is doing in terms of consumer's consumption rate. So, it will be hard to adapt consumer's speed.\r\n\r\n> For non-persistent, though, what can we use for metric?\r\n\r\nI was thinking to have 1 semaphore per connection and it acquires permit as soon msg is received and release permits once that message is delivered to all consumers and broker doesn't need that message in memory. In that way, per connection we can control max memory. And if we want to control n/w bandwidth then we may need rate-limiting to control msg in-rate/out-rate ?","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/306931033/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/306932132","html_url":"https://github.com/apache/pulsar/pull/454#issuecomment-306932132","issue_url":"https://api.github.com/repos/apache/pulsar/issues/454","id":306932132,"node_id":"MDEyOklzc3VlQ29tbWVudDMwNjkzMjEzMg==","user":{"login":"bradtm","id":2708055,"node_id":"MDQ6VXNlcjI3MDgwNTU=","avatar_url":"https://avatars.githubusercontent.com/u/2708055?v=4","gravatar_id":"","url":"https://api.github.com/users/bradtm","html_url":"https://github.com/bradtm","followers_url":"https://api.github.com/users/bradtm/followers","following_url":"https://api.github.com/users/bradtm/following{/other_user}","gists_url":"https://api.github.com/users/bradtm/gists{/gist_id}","starred_url":"https://api.github.com/users/bradtm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bradtm/subscriptions","organizations_url":"https://api.github.com/users/bradtm/orgs","repos_url":"https://api.github.com/users/bradtm/repos","events_url":"https://api.github.com/users/bradtm/events{/privacy}","received_events_url":"https://api.github.com/users/bradtm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-06-07T21:35:15Z","updated_at":"2017-06-07T21:37:30Z","author_association":"CONTRIBUTOR","body":"The percentage is configurable (loadBalancerReportUpdateThresholdPercentage) but it is not dynamic (now it is :)","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/306932132/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/306940409","html_url":"https://github.com/apache/pulsar/issues/434#issuecomment-306940409","issue_url":"https://api.github.com/repos/apache/pulsar/issues/434","id":306940409,"node_id":"MDEyOklzc3VlQ29tbWVudDMwNjk0MDQwOQ==","user":{"login":"rdhabalia","id":2898254,"node_id":"MDQ6VXNlcjI4OTgyNTQ=","avatar_url":"https://avatars.githubusercontent.com/u/2898254?v=4","gravatar_id":"","url":"https://api.github.com/users/rdhabalia","html_url":"https://github.com/rdhabalia","followers_url":"https://api.github.com/users/rdhabalia/followers","following_url":"https://api.github.com/users/rdhabalia/following{/other_user}","gists_url":"https://api.github.com/users/rdhabalia/gists{/gist_id}","starred_url":"https://api.github.com/users/rdhabalia/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rdhabalia/subscriptions","organizations_url":"https://api.github.com/users/rdhabalia/orgs","repos_url":"https://api.github.com/users/rdhabalia/repos","events_url":"https://api.github.com/users/rdhabalia/events{/privacy}","received_events_url":"https://api.github.com/users/rdhabalia/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-06-07T22:13:15Z","updated_at":"2017-06-07T22:13:15Z","author_association":"CONTRIBUTOR","body":"Recently found that multiple times testcases get stuck due to some deadlock condition. I was able to reproduce for one of the test case:\r\n\r\n```\r\n\"pulsar-web-2757-13\":\r\n        at org.apache.zookeeper.MockZooKeeper.lambda$3(MockZooKeeper.java:245)\r\n        - waiting to lock <0x000000079ff4f388> (a org.apache.zookeeper.MockZooKeeper)\r\n        at org.apache.zookeeper.MockZooKeeper$$Lambda$14/1053967012.run(Unknown Source)\r\n        at com.google.common.util.concurrent.MoreExecutors$SameThreadExecutorService.execute(MoreExecutors.java:297)\r\n        at org.apache.zookeeper.MockZooKeeper.getData(MockZooKeeper.java:243)\r\n        at com.yahoo.pulsar.zookeeper.ZooKeeperCache.lambda$5(ZooKeeperCache.java:292)\r\n        at com.yahoo.pulsar.zookeeper.ZooKeeperCache$$Lambda$10/249177573.apply(Unknown Source)\r\n        at com.github.benmanes.caffeine.cache.LocalAsyncLoadingCache.lambda$get$2(LocalAsyncLoadingCache.java:126)\r\n        at com.github.benmanes.caffeine.cache.LocalAsyncLoadingCache$$Lambda$11/905080434.apply(Unknown Source)\r\n        at com.github.benmanes.caffeine.cache.BoundedLocalCache.lambda$doComputeIfAbsent$16(BoundedLocalCache.java:1973)\r\n        at com.github.benmanes.caffeine.cache.BoundedLocalCache$$Lambda$12/1344519051.apply(Unknown Source)\r\n        at java.util.concurrent.ConcurrentHashMap.compute(ConcurrentHashMap.java:1853)\r\n        - locked <0x000000079915fc28> (a java.util.concurrent.ConcurrentHashMap$ReservationNode)\r\n        at com.github.benmanes.caffeine.cache.BoundedLocalCache.doComputeIfAbsent(BoundedLocalCache.java:1971)\r\n        at com.github.benmanes.caffeine.cache.BoundedLocalCache.computeIfAbsent(BoundedLocalCache.java:1954)\r\n        at com.github.benmanes.caffeine.cache.LocalAsyncLoadingCache.get(LocalAsyncLoadingCache.java:125)\r\n        at com.github.benmanes.caffeine.cache.LocalAsyncLoadingCache.get(LocalAsyncLoadingCache.java:117)\r\n        at com.yahoo.pulsar.zookeeper.ZooKeeperCache.getDataAsync(ZooKeeperCache.java:286)\r\n        at com.yahoo.pulsar.zookeeper.ZooKeeperDataCache.getAsync(ZooKeeperDataCache.java:62)\r\n        at com.yahoo.pulsar.broker.namespace.OwnershipCache.getOwnerAsync(OwnershipCache.java:189)\r\n        at com.yahoo.pulsar.broker.namespace.NamespaceService.findBrokerServiceUrl(NamespaceService.java:283)\r\n        at com.yahoo.pulsar.broker.namespace.NamespaceService.lambda$0(NamespaceService.java:132)\r\n        at com.yahoo.pulsar.broker.namespace.NamespaceService$$Lambda$109/1534543810.apply(Unknown Source)\r\n        at java.util.concurrent.CompletableFuture.uniComposeStage(CompletableFuture.java:981)\r\n        at java.util.concurrent.CompletableFuture.thenCompose(CompletableFuture.java:2124)\r\n        at com.yahoo.pulsar.broker.namespace.NamespaceService.getBrokerServiceUrlAsync(NamespaceService.java:132)\r\n        at com.yahoo.pulsar.broker.namespace.NamespaceService$$EnhancerByMockitoWithCGLIB$$6d2de1de.CGLIB$getBrokerServiceUrlAsync$0(<generated>)\r\n        at com.yahoo.pulsar.broker.namespace.NamespaceService$$EnhancerByMockitoWithCGLIB$$6d2de1de$$FastClassByMockitoWithCGLIB$$82215ef5.invoke(<generated>)\r\n        at org.mockito.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:216)\r\n        at org.powermock.api.mockito.repackaged.DelegatingMockitoMethodProxy.invokeSuper(DelegatingMockitoMethodProxy.java:20)\r\n        at org.mockito.internal.invocation.realmethod.DefaultRealMethod.invoke(DefaultRealMethod.java:21)\r\n        at org.mockito.internal.invocation.realmethod.CleanTraceRealMethod.invoke(CleanTraceRealMethod.java:30)\r\n        at org.mockito.internal.invocation.InvocationImpl.callRealMethod(InvocationImpl.java:112)\r\n        at org.mockito.internal.stubbing.answers.CallsRealMethods.answer(CallsRealMethods.java:41)\r\n        at org.mockito.internal.handler.MockHandlerImpl.handle(MockHandlerImpl.java:93)\r\n        at org.mockito.internal.handler.NullResultGuardian.handle(NullResultGuardian.java:29)\r\n        at org.mockito.internal.handler.InvocationNotifierHandler.handle(InvocationNotifierHandler.java:38)\r\n        at org.powermock.api.mockito.repackaged.MethodInterceptorFilter.intercept(MethodInterceptorFilter.java:60)\r\n        at com.yahoo.pulsar.broker.namespace.NamespaceService$$EnhancerByMockitoWithCGLIB$$6d2de1de.getBrokerServiceUrlAsync(<generated>)\r\n        at com.yahoo.pulsar.broker.lookup.DestinationLookup.lookupDestinationAsync(DestinationLookup.java:100)\r\n        at com.yahoo.pulsar.broker.lookup.DestinationLookup.lookupNonPersistentDestinationAsync(DestinationLookup.java:66)\r\n        at sun.reflect.GeneratedMethodAccessor9.invoke(Unknown Source)\r\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n        at java.lang.reflect.Method.invoke(Method.java:498)\r\n        at org.glassfish.jersey.server.model.internal.ResourceMethodInvocationHandlerFactory$1.invoke(ResourceMethodInvocationHandlerFactory.java:81)\r\n        at org.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher$1.run(AbstractJavaResourceMethodDispatcher.java:144)\r\n        at org.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher.invoke(AbstractJavaResourceMethodDispatcher.java:161)\r\n        at org.glassfish.jersey.server.model.internal.JavaResourceMethodDispatcherProvider$VoidOutInvoker.doDispatch(JavaResourceMethodDispatcherProvider.java:143)\r\n        at org.glassfish.jersey.server.model.internal.AbstractJavaResourceMethodDispatcher.dispatch(AbstractJavaResourceMethodDispatcher.java:99)\r\n        at org.glassfish.jersey.server.model.ResourceMethodInvoker.invoke(ResourceMethodInvoker.java:389)\r\n        at org.glassfish.jersey.server.model.ResourceMethodInvoker.apply(ResourceMethodInvoker.java:347)\r\n        at org.glassfish.jersey.server.model.ResourceMethodInvoker.apply(ResourceMethodInvoker.java:102)\r\n        at org.glassfish.jersey.server.ServerRuntime$2.run(ServerRuntime.java:326)\r\n        at org.glassfish.jersey.internal.Errors$1.call(Errors.java:271)\r\n        at org.glassfish.jersey.internal.Errors$1.call(Errors.java:267)\r\n        at org.glassfish.jersey.internal.Errors.process(Errors.java:315)\r\n        at org.glassfish.jersey.internal.Errors.process(Errors.java:297)\r\n        at org.glassfish.jersey.internal.Errors.process(Errors.java:267)\r\n        at org.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:317)\r\n        at org.glassfish.jersey.server.ServerRuntime.process(ServerRuntime.java:305)\r\n        at org.glassfish.jersey.server.ApplicationHandler.handle(ApplicationHandler.java:1154)\r\n        at org.glassfish.jersey.servlet.WebComponent.serviceImpl(WebComponent.java:473)\r\n        at org.glassfish.jersey.servlet.WebComponent.service(WebComponent.java:427)\r\n        at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:388)\r\n        at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:341)\r\n        at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:228)\r\n        at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:845)\r\n        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1689)\r\n        at com.yahoo.pulsar.broker.web.ResponseHandlerFilter.doFilter(ResponseHandlerFilter.java:51)\r\n        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1676)\r\n        at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:581)\r\n        at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:224)\r\n        at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1180)\r\n        at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:511)\r\n        at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)\r\n        at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1112)\r\n        at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)\r\n        at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:213)\r\n        at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:119)\r\n        at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:134)\r\n        at org.eclipse.jetty.server.Server.handle(Server.java:524)\r\n        at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:319)\r\n        at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:253)\r\n        at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:273)\r\n        at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:95)\r\n        at org.eclipse.jetty.io.SelectChannelEndPoint$2.run(SelectChannelEndPoint.java:93)\r\n        at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.executeProduceConsume(ExecuteProduceConsume.java:303)\r\n        at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.produceConsume(ExecuteProduceConsume.java:148)\r\n        at org.eclipse.jetty.util.thread.strategy.ExecuteProduceConsume.run(ExecuteProduceConsume.java:136)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\r\n        at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:144)\r\n        at java.lang.Thread.run(Thread.java:745)\r\n\"zk-cache-callback-2716-1\":\r\n        at java.util.concurrent.ConcurrentHashMap.compute(ConcurrentHashMap.java:1868)\r\n        - waiting to lock <0x000000079915fc28> (a java.util.concurrent.ConcurrentHashMap$ReservationNode)\r\n        at com.github.benmanes.caffeine.cache.BoundedLocalCache.doComputeIfAbsent(BoundedLocalCache.java:1971)\r\n        at com.github.benmanes.caffeine.cache.BoundedLocalCache.computeIfAbsent(BoundedLocalCache.java:1954)\r\n        at com.github.benmanes.caffeine.cache.LocalAsyncLoadingCache.get(LocalAsyncLoadingCache.java:125)\r\n        at com.github.benmanes.caffeine.cache.LocalAsyncLoadingCache.get(LocalAsyncLoadingCache.java:117)\r\n        at com.yahoo.pulsar.zookeeper.ZooKeeperCache.getDataAsync(ZooKeeperCache.java:286)\r\n        at com.yahoo.pulsar.zookeeper.ZooKeeperDataCache.getAsync(ZooKeeperDataCache.java:62)\r\n        at com.yahoo.pulsar.broker.namespace.OwnershipCache.getOwnerAsync(OwnershipCache.java:189)\r\n        at com.yahoo.pulsar.broker.namespace.NamespaceService.findBrokerServiceUrl(NamespaceService.java:283)\r\n        at com.yahoo.pulsar.broker.namespace.NamespaceService.lambda$0(NamespaceService.java:132)\r\n        at com.yahoo.pulsar.broker.namespace.NamespaceService$$Lambda$109/1534543810.apply(Unknown Source)\r\n        at java.util.concurrent.CompletableFuture.uniCompose(CompletableFuture.java:952)\r\n        at java.util.concurrent.CompletableFuture$UniCompose.tryFire(CompletableFuture.java:926)\r\n        at java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:474)\r\n        at java.util.concurrent.CompletableFuture.complete(CompletableFuture.java:1962)\r\n        at com.yahoo.pulsar.common.naming.NamespaceBundleFactory.lambda$2(NamespaceBundleFactory.java:80)\r\n        at com.yahoo.pulsar.common.naming.NamespaceBundleFactory$$Lambda$71/1037942373.accept(Unknown Source)\r\n        at java.util.concurrent.CompletableFuture.uniAccept(CompletableFuture.java:656)\r\n        at java.util.concurrent.CompletableFuture$UniAccept.tryFire(CompletableFuture.java:632)\r\n        at java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:474)\r\n        at java.util.concurrent.CompletableFuture.complete(CompletableFuture.java:1962)\r\n        at com.yahoo.pulsar.broker.cache.LocalZooKeeperCacheService$2.lambda$2(LocalZooKeeperCacheService.java:91)\r\n        at com.yahoo.pulsar.broker.cache.LocalZooKeeperCacheService$2$$Lambda$68/1720865719.accept(Unknown Source)\r\n        at java.util.concurrent.CompletableFuture.uniAccept(CompletableFuture.java:656)\r\n        at java.util.concurrent.CompletableFuture$UniAccept.tryFire(CompletableFuture.java:632)\r\n        at java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:474)\r\n        at java.util.concurrent.CompletableFuture.complete(CompletableFuture.java:1962)\r\n        at com.yahoo.pulsar.broker.cache.LocalZooKeeperCacheService.lambda$4(LocalZooKeeperCacheService.java:204)\r\n        at com.yahoo.pulsar.broker.cache.LocalZooKeeperCacheService$$Lambda$107/430411351.processResult(Unknown Source)\r\n        at org.apache.bookkeeper.util.ZkUtils$1.processResult(ZkUtils.java:79)\r\n        at org.apache.zookeeper.MockZooKeeper.lambda$1(MockZooKeeper.java:187)\r\n        - locked <0x000000079ff4f388> (a org.apache.zookeeper.MockZooKeeper)\r\n        at org.apache.zookeeper.MockZooKeeper$$Lambda$1/1500608548.run(Unknown Source)\r\n        at com.google.common.util.concurrent.MoreExecutors$SameThreadExecutorService.execute(MoreExecutors.java:297)\r\n        at org.apache.zookeeper.MockZooKeeper.create(MockZooKeeper.java:173)\r\n        - locked <0x000000079ff4f388> (a org.apache.zookeeper.MockZooKeeper)\r\n        at org.apache.bookkeeper.util.ZkUtils.asyncCreateFullPathOptimistic(ZkUtils.java:74)\r\n        at org.apache.bookkeeper.util.ZkUtils$1$1.processResult(ZkUtils.java:95)\r\n        at org.apache.bookkeeper.util.ZkUtils$1.processResult(ZkUtils.java:79)\r\n        at org.apache.zookeeper.MockZooKeeper.lambda$1(MockZooKeeper.java:187)\r\n        - locked <0x000000079ff4f388> (a org.apache.zookeeper.MockZooKeeper)\r\n        at org.apache.zookeeper.MockZooKeeper$$Lambda$1/1500608548.run(Unknown Source)\r\n        at com.google.common.util.concurrent.MoreExecutors$SameThreadExecutorService.execute(MoreExecutors.java:297)\r\n        at org.apache.zookeeper.MockZooKeeper.create(MockZooKeeper.java:173)\r\n        - locked <0x000000079ff4f388> (a org.apache.zookeeper.MockZooKeeper)\r\n        at org.apache.bookkeeper.util.ZkUtils.asyncCreateFullPathOptimistic(ZkUtils.java:74)\r\n        at org.apache.bookkeeper.util.ZkUtils$1$1.processResult(ZkUtils.java:95)\r\n        at org.apache.bookkeeper.util.ZkUtils$1.processResult(ZkUtils.java:79)\r\n        at org.apache.zookeeper.MockZooKeeper.lambda$1(MockZooKeeper.java:187)\r\n        - locked <0x000000079ff4f388> (a org.apache.zookeeper.MockZooKeeper)\r\n        at org.apache.zookeeper.MockZooKeeper$$Lambda$1/1500608548.run(Unknown Source)\r\n        at com.google.common.util.concurrent.MoreExecutors$SameThreadExecutorService.execute(MoreExecutors.java:297)\r\n        at org.apache.zookeeper.MockZooKeeper.create(MockZooKeeper.java:173)\r\n        - locked <0x000000079ff4f388> (a org.apache.zookeeper.MockZooKeeper)\r\n        at org.apache.bookkeeper.util.ZkUtils.asyncCreateFullPathOptimistic(ZkUtils.java:74)\r\n        at org.apache.bookkeeper.util.ZkUtils$1.processResult(ZkUtils.java:87)\r\n        at org.apache.zookeeper.MockZooKeeper.lambda$1(MockZooKeeper.java:184)\r\n        - locked <0x000000079ff4f388> (a org.apache.zookeeper.MockZooKeeper)\r\n        at org.apache.zookeeper.MockZooKeeper$$Lambda$1/1500608548.run(Unknown Source)\r\n        at com.google.common.util.concurrent.MoreExecutors$SameThreadExecutorService.execute(MoreExecutors.java:297)\r\n        at org.apache.zookeeper.MockZooKeeper.create(MockZooKeeper.java:173)\r\n        - locked <0x000000079ff4f388> (a org.apache.zookeeper.MockZooKeeper)\r\n        at org.apache.bookkeeper.util.ZkUtils.asyncCreateFullPathOptimistic(ZkUtils.java:74)\r\n        at org.apache.bookkeeper.util.ZkUtils$1.processResult(ZkUtils.java:87)\r\n        at org.apache.zookeeper.MockZooKeeper.lambda$1(MockZooKeeper.java:184)\r\n        - locked <0x000000079ff4f388> (a org.apache.zookeeper.MockZooKeeper)\r\n\t\tat org.apache.zookeeper.MockZooKeeper$$Lambda$1/1500608548.run(Unknown Source)\r\n        at com.google.common.util.concurrent.MoreExecutors$SameThreadExecutorService.execute(MoreExecutors.java:297)\r\n        at org.apache.zookeeper.MockZooKeeper.create(MockZooKeeper.java:173)\r\n        - locked <0x000000079ff4f388> (a org.apache.zookeeper.MockZooKeeper)\r\n        at org.apache.bookkeeper.util.ZkUtils.asyncCreateFullPathOptimistic(ZkUtils.java:74)\r\n        at com.yahoo.pulsar.broker.cache.LocalZooKeeperCacheService.lambda$2(LocalZooKeeperCacheService.java:199)\r\n        at com.yahoo.pulsar.broker.cache.LocalZooKeeperCacheService$$Lambda$66/854989361.accept(Unknown Source)\r\n        at java.util.concurrent.CompletableFuture.uniAccept(CompletableFuture.java:656)\r\n        at java.util.concurrent.CompletableFuture$UniAccept.tryFire(CompletableFuture.java:632)\r\n        at java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:474)\r\n        at java.util.concurrent.CompletableFuture.complete(CompletableFuture.java:1962)\r\n        at com.yahoo.pulsar.broker.cache.LocalZooKeeperCacheService.lambda$0(LocalZooKeeperCacheService.java:167)\r\n        at com.yahoo.pulsar.broker.cache.LocalZooKeeperCacheService$$Lambda$64/1824570614.accept(Unknown Source)\r\n        at java.util.concurrent.CompletableFuture.uniAccept(CompletableFuture.java:656)\r\n        at java.util.concurrent.CompletableFuture$UniAccept.tryFire(CompletableFuture.java:632)\r\n        at java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:474)\r\n        at java.util.concurrent.CompletableFuture.complete(CompletableFuture.java:1962)\r\n        at com.yahoo.pulsar.zookeeper.ZooKeeperDataCache.lambda$0(ZooKeeperDataCache.java:63)\r\n        at com.yahoo.pulsar.zookeeper.ZooKeeperDataCache$$Lambda$60/1428726828.accept(Unknown Source)\r\n        at java.util.concurrent.CompletableFuture.uniAccept(CompletableFuture.java:656)\r\n        at java.util.concurrent.CompletableFuture$UniAccept.tryFire(CompletableFuture.java:632)\r\n        at java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:474)\r\n        at java.util.concurrent.CompletableFuture.complete(CompletableFuture.java:1962)\r\n        at com.yahoo.pulsar.zookeeper.ZooKeeperCache.lambda$6(ZooKeeperCache.java:317)\r\n        at com.yahoo.pulsar.zookeeper.ZooKeeperCache$$Lambda$18/512549200.accept(Unknown Source)\r\n        at java.util.concurrent.CompletableFuture.uniAccept(CompletableFuture.java:656)\r\n        at java.util.concurrent.CompletableFuture$UniAccept.tryFire(CompletableFuture.java:632)\r\n        at java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:474)\r\n        at java.util.concurrent.CompletableFuture.complete(CompletableFuture.java:1962)\r\n        at com.yahoo.pulsar.zookeeper.ZooKeeperCache.lambda$10(ZooKeeperCache.java:298)\r\n        at com.yahoo.pulsar.zookeeper.ZooKeeperCache$$Lambda$32/1337829755.run(Unknown Source)\r\n        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n        at java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n        at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n        at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\r\n        at io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:144)\r\n        at java.lang.Thread.run(Thread.java:745)\r\n\r\nFound 1 deadlock.\r\n```\r\n\r\n\r\nIt seems like it is mainly happening due to deadlock between `ZkUtils->MockZooKeeper` and `ZooKeeperCache(com.github.benmanes.caffeine.cache.BoundedLocalCache.lambda$doComputeIfAbsent$16(BoundedLocalCache.java:1973))`.\r\n\r\neg:\r\n(1) MockZooKeeper acquires mutex after creating a znode and it's callback waits on ZkCache-lock that acquires in below step2:\r\n On lookup to find service-url->\r\n```\r\n       - waiting to lock <0x000000079923e9f8> (a java.util.concurrent.ConcurrentHashMap$ReservationNode)\r\n        at com.github.benmanes.caffeine.cache.BoundedLocalCache.doComputeIfAbsent(BoundedLocalCache.java:1971)\r\n        at com.github.benmanes.caffeine.cache.BoundedLocalCache.computeIfAbsent(BoundedLocalCache.java:1954)\r\n        at com.github.benmanes.caffeine.cache.LocalAsyncLoadingCache.get(LocalAsyncLoadingCache.java:125)\r\n        at com.github.benmanes.caffeine.cache.LocalAsyncLoadingCache.get(LocalAsyncLoadingCache.java:117)\r\n        at com.yahoo.pulsar.zookeeper.ZooKeeperCache.getDataAsync(ZooKeeperCache.java:286)\r\n        at com.yahoo.pulsar.zookeeper.ZooKeeperDataCache.getAsync(ZooKeeperDataCache.java:62)\r\n        at com.yahoo.pulsar.broker.namespace.OwnershipCache.getOwnerAsync(OwnershipCache.java:189)\r\n        at com.yahoo.pulsar.broker.namespace.NamespaceService.findBrokerServiceUrl(NamespaceService.java:283)\r\n        at com.yahoo.pulsar.broker.namespace.NamespaceService.lambda$0(NamespaceService.java:132)\r\n        at com.yahoo.pulsar.broker.namespace.NamespaceService$$Lambda$109/19709373.apply(Unknown Source)\r\n        at java.util.concurrent.CompletableFuture.uniCompose(CompletableFuture.java:952)\r\n        at java.util.concurrent.CompletableFuture$UniCompose.tryFire(CompletableFuture.java:926)\r\n        at java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:474)\r\n        at java.util.concurrent.CompletableFuture.complete(CompletableFuture.java:1962)\r\n        at com.yahoo.pulsar.common.naming.NamespaceBundleFactory.lambda$2(NamespaceBundleFactory.java:80)\r\n        at com.yahoo.pulsar.common.naming.NamespaceBundleFactory$$Lambda$71/710220387.accept(Unknown Source)\r\n        at java.util.concurrent.CompletableFuture.uniAccept(CompletableFuture.java:656)\r\n        at java.util.concurrent.CompletableFuture$UniAccept.tryFire(CompletableFuture.java:632)\r\n        at java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:474)\r\n        at java.util.concurrent.CompletableFuture.complete(CompletableFuture.java:1962)\r\n        at com.yahoo.pulsar.broker.cache.LocalZooKeeperCacheService$2.lambda$2(LocalZooKeeperCacheService.java:91)\r\n        at com.yahoo.pulsar.broker.cache.LocalZooKeeperCacheService$2$$Lambda$68/1424788681.accept(Unknown Source)\r\n        at java.util.concurrent.CompletableFuture.uniAccept(CompletableFuture.java:656)\r\n        at java.util.concurrent.CompletableFuture$UniAccept.tryFire(CompletableFuture.java:632)\r\n        at java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:474)\r\n        at java.util.concurrent.CompletableFuture.complete(CompletableFuture.java:1962)\r\n        at com.yahoo.pulsar.broker.cache.LocalZooKeeperCacheService.lambda$4(LocalZooKeeperCacheService.java:204)\r\n        at com.yahoo.pulsar.broker.cache.LocalZooKeeperCacheService$$Lambda$107/1056863997.processResult(Unknown Source)\r\n        at org.apache.bookkeeper.util.ZkUtils$1.processResult(ZkUtils.java:79)\r\n        at org.apache.zookeeper.MockZooKeeper.lambda$1(MockZooKeeper.java:189)\r\n        - locked <0x000000079d08af40> (a org.apache.zookeeper.MockZooKeeper)\r\n```\r\n\r\n(2) And some other thread: first takes lock on ZKCache(com.github.benmanes.caffeine.cache.BoundedLocalCache.lambda$doComputeIfAbsent$16(BoundedLocalCache.java:1973)) and then go to MockZooKeeper to get data which waits for acquired mutex on step 1.\r\n\r\n```\r\n\"pulsar-web-3779-12\":\r\n        at org.apache.zookeeper.MockZooKeeper.lambda$3(MockZooKeeper.java:247)\r\n        - waiting to lock <0x000000079d08af40> (a org.apache.zookeeper.MockZooKeeper)\r\n        at org.apache.zookeeper.MockZooKeeper$$Lambda$14/1670993182.run(Unknown Source)\r\n        at com.google.common.util.concurrent.MoreExecutors$SameThreadExecutorService.execute(MoreExecutors.java:297)\r\n        at org.apache.zookeeper.MockZooKeeper.getData(MockZooKeeper.java:245)\r\n        at com.yahoo.pulsar.zookeeper.ZooKeeperCache.lambda$5(ZooKeeperCache.java:292)\r\n        at com.yahoo.pulsar.zookeeper.ZooKeeperCache$$Lambda$10/2048537720.apply(Unknown Source)\r\n        at com.github.benmanes.caffeine.cache.LocalAsyncLoadingCache.lambda$get$2(LocalAsyncLoadingCache.java:126)\r\n        at com.github.benmanes.caffeine.cache.LocalAsyncLoadingCache$$Lambda$11/1265012928.apply(Unknown Source)\r\n        at com.github.benmanes.caffeine.cache.BoundedLocalCache.lambda$doComputeIfAbsent$16(BoundedLocalCache.java:1973)\r\n        at com.github.benmanes.caffeine.cache.BoundedLocalCache$$Lambda$12/801569151.apply(Unknown Source)\r\n        at java.util.concurrent.ConcurrentHashMap.compute(ConcurrentHashMap.java:1853)\r\n        - locked <0x000000079923e9f8> (a java.util.concurrent.ConcurrentHashMap$ReservationNode)\r\n        at com.github.benmanes.caffeine.cache.BoundedLocalCache.doComputeIfAbsent(BoundedLocalCache.java:1971)\r\n        at com.github.benmanes.caffeine.cache.BoundedLocalCache.computeIfAbsent(BoundedLocalCache.java:1954)\r\n        at com.github.benmanes.caffeine.cache.LocalAsyncLoadingCache.get(LocalAsyncLoadingCache.java:125)\r\n        at com.github.benmanes.caffeine.cache.LocalAsyncLoadingCache.get(LocalAsyncLoadingCache.java:117)\r\n        at com.yahoo.pulsar.zookeeper.ZooKeeperCache.getDataAsync(ZooKeeperCache.java:286)\r\n        at com.yahoo.pulsar.zookeeper.ZooKeeperDataCache.getAsync(ZooKeeperDataCache.java:62)\r\n\r\n```","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/306940409/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/306940585","html_url":"https://github.com/apache/pulsar/issues/411#issuecomment-306940585","issue_url":"https://api.github.com/repos/apache/pulsar/issues/411","id":306940585,"node_id":"MDEyOklzc3VlQ29tbWVudDMwNjk0MDU4NQ==","user":{"login":"merlimat","id":62500,"node_id":"MDQ6VXNlcjYyNTAw","avatar_url":"https://avatars.githubusercontent.com/u/62500?v=4","gravatar_id":"","url":"https://api.github.com/users/merlimat","html_url":"https://github.com/merlimat","followers_url":"https://api.github.com/users/merlimat/followers","following_url":"https://api.github.com/users/merlimat/following{/other_user}","gists_url":"https://api.github.com/users/merlimat/gists{/gist_id}","starred_url":"https://api.github.com/users/merlimat/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/merlimat/subscriptions","organizations_url":"https://api.github.com/users/merlimat/orgs","repos_url":"https://api.github.com/users/merlimat/repos","events_url":"https://api.github.com/users/merlimat/events{/privacy}","received_events_url":"https://api.github.com/users/merlimat/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-06-07T22:14:12Z","updated_at":"2017-06-07T22:14:12Z","author_association":"CONTRIBUTOR","body":"@estebangarcia I took a look at the heap dump. \r\n\r\nIt seems like there are a lot of entries that were stored into the read cache. Just the hashmaps that are used to track the read cache are taking 1.7Gb of heap memory.\r\n\r\nYou are saying that you have the read-ahead cache disabled, right? In any case, the entries are inserted into read-cache after reading (the intention is to save eventual subsequent reads, though it might not be the best option...).\r\n\r\nI think you can reduce the heap size needed by the hashmap, if you reduce the size of the read-cache: \r\n\r\n```properties\r\ndbStorage_readAheadCacheMaxSizeMb=12288\r\n```\r\n\r\nTry to tune this down to something like 512m or 1G and the memory usage should not grow much.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/306940585/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/306941248","html_url":"https://github.com/apache/pulsar/issues/411#issuecomment-306941248","issue_url":"https://api.github.com/repos/apache/pulsar/issues/411","id":306941248,"node_id":"MDEyOklzc3VlQ29tbWVudDMwNjk0MTI0OA==","user":{"login":"merlimat","id":62500,"node_id":"MDQ6VXNlcjYyNTAw","avatar_url":"https://avatars.githubusercontent.com/u/62500?v=4","gravatar_id":"","url":"https://api.github.com/users/merlimat","html_url":"https://github.com/merlimat","followers_url":"https://api.github.com/users/merlimat/followers","following_url":"https://api.github.com/users/merlimat/following{/other_user}","gists_url":"https://api.github.com/users/merlimat/gists{/gist_id}","starred_url":"https://api.github.com/users/merlimat/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/merlimat/subscriptions","organizations_url":"https://api.github.com/users/merlimat/orgs","repos_url":"https://api.github.com/users/merlimat/repos","events_url":"https://api.github.com/users/merlimat/events{/privacy}","received_events_url":"https://api.github.com/users/merlimat/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-06-07T22:17:24Z","updated_at":"2017-06-07T22:17:24Z","author_association":"CONTRIBUTOR","body":"To clarify, the 12Gb configured there are referring to direct memory where the entries are stored in the read cache.\r\n\r\nOn top of it, we need to keep a hashmap (in JVM heap) to index the entries with their location in the direct memory. For each entry there will be (8 * 4) bytes + the overhead of the hasmap (target fill rate is 66%, before triggering a hashmap expansion).\r\n","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/306941248/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/306941671","html_url":"https://github.com/apache/pulsar/issues/434#issuecomment-306941671","issue_url":"https://api.github.com/repos/apache/pulsar/issues/434","id":306941671,"node_id":"MDEyOklzc3VlQ29tbWVudDMwNjk0MTY3MQ==","user":{"login":"merlimat","id":62500,"node_id":"MDQ6VXNlcjYyNTAw","avatar_url":"https://avatars.githubusercontent.com/u/62500?v=4","gravatar_id":"","url":"https://api.github.com/users/merlimat","html_url":"https://github.com/merlimat","followers_url":"https://api.github.com/users/merlimat/followers","following_url":"https://api.github.com/users/merlimat/following{/other_user}","gists_url":"https://api.github.com/users/merlimat/gists{/gist_id}","starred_url":"https://api.github.com/users/merlimat/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/merlimat/subscriptions","organizations_url":"https://api.github.com/users/merlimat/orgs","repos_url":"https://api.github.com/users/merlimat/repos","events_url":"https://api.github.com/users/merlimat/events{/privacy}","received_events_url":"https://api.github.com/users/merlimat/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-06-07T22:19:39Z","updated_at":"2017-06-07T22:19:39Z","author_association":"CONTRIBUTOR","body":"The only recent change on `MockZooKeeper` was 01b510464a0ea153dfe20ccef0cc0e1173bbb055. Can it be somewhat related?","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/306941671/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/306943239","html_url":"https://github.com/apache/pulsar/issues/434#issuecomment-306943239","issue_url":"https://api.github.com/repos/apache/pulsar/issues/434","id":306943239,"node_id":"MDEyOklzc3VlQ29tbWVudDMwNjk0MzIzOQ==","user":{"login":"rdhabalia","id":2898254,"node_id":"MDQ6VXNlcjI4OTgyNTQ=","avatar_url":"https://avatars.githubusercontent.com/u/2898254?v=4","gravatar_id":"","url":"https://api.github.com/users/rdhabalia","html_url":"https://github.com/rdhabalia","followers_url":"https://api.github.com/users/rdhabalia/followers","following_url":"https://api.github.com/users/rdhabalia/following{/other_user}","gists_url":"https://api.github.com/users/rdhabalia/gists{/gist_id}","starred_url":"https://api.github.com/users/rdhabalia/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rdhabalia/subscriptions","organizations_url":"https://api.github.com/users/rdhabalia/orgs","repos_url":"https://api.github.com/users/rdhabalia/repos","events_url":"https://api.github.com/users/rdhabalia/events{/privacy}","received_events_url":"https://api.github.com/users/rdhabalia/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-06-07T22:27:57Z","updated_at":"2017-06-07T22:27:57Z","author_association":"CONTRIBUTOR","body":"I don't think so, because it is kind of dead-lock between `MockZooKeeper` and `Caffeine.ConcurrentHashMap (from ZKCache)` where 1 thread first takes mutex on MockZk and same thread process callback which eventually hits `Caffeine.ConcurrentHashMap` and other end 2nd thread first hits `Caffeine.ConcurrentHashMap`  and it tries to get data from `MockZk`. So, we need to break this deadlock. I will create a PR for MockZk.","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/306943239/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/306943371","html_url":"https://github.com/apache/pulsar/issues/451#issuecomment-306943371","issue_url":"https://api.github.com/repos/apache/pulsar/issues/451","id":306943371,"node_id":"MDEyOklzc3VlQ29tbWVudDMwNjk0MzM3MQ==","user":{"login":"merlimat","id":62500,"node_id":"MDQ6VXNlcjYyNTAw","avatar_url":"https://avatars.githubusercontent.com/u/62500?v=4","gravatar_id":"","url":"https://api.github.com/users/merlimat","html_url":"https://github.com/merlimat","followers_url":"https://api.github.com/users/merlimat/followers","following_url":"https://api.github.com/users/merlimat/following{/other_user}","gists_url":"https://api.github.com/users/merlimat/gists{/gist_id}","starred_url":"https://api.github.com/users/merlimat/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/merlimat/subscriptions","organizations_url":"https://api.github.com/users/merlimat/orgs","repos_url":"https://api.github.com/users/merlimat/repos","events_url":"https://api.github.com/users/merlimat/events{/privacy}","received_events_url":"https://api.github.com/users/merlimat/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-06-07T22:28:30Z","updated_at":"2017-06-07T22:28:30Z","author_association":"CONTRIBUTOR","body":"> Right now, we do rate limiting as soon as message is published and if it is able to acquire permit then it will send message to consumer else it fails the publish with TooManyRequestError. So, broker does rate limiting even without any consumer connected.\r\n\r\nWhat is the behavior of the client library when receiving `TooManyRequestError`? Will it retry? Send the error to application? Exponential backoff?\r\n\r\nIf the app is not retrying, then silently dropping the message on the broker would be equivalent, because you're not exactly doing \"rate limiting\" in the sense to force the client to a certain speed, but rather discarding everything on top of a certain rate.\r\n\r\nIn any case, if the consumer is able to consume above the rate limiting threshold, why not just send to the consumer? The load-balancer should then take care of placing the topic into an appropriate broker.\r\n\r\n>But right now broker keeps pushing message data to consumer without considering consumer's permit so, broker and producer don't have knowledge about how consumer is doing in terms of consumer's consumption rate. So, it will be hard to adapt consumer's speed.\r\n\r\nThe dispatcher knows the permits for a particular consumer, right? or am I missing context here?\r\n\r\n> I was thinking to have 1 semaphore per connection and it acquires permit as soon msg is received and release permits once that message is delivered to all consumers and broker doesn't need that message in memory\r\n\r\nBut that only would help if the dispatching is done in background threads. If you dispatch from same thread where you read from the producer, then you don't need the semaphore.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/306943371/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/306948955","html_url":"https://github.com/apache/pulsar/issues/451#issuecomment-306948955","issue_url":"https://api.github.com/repos/apache/pulsar/issues/451","id":306948955,"node_id":"MDEyOklzc3VlQ29tbWVudDMwNjk0ODk1NQ==","user":{"login":"rdhabalia","id":2898254,"node_id":"MDQ6VXNlcjI4OTgyNTQ=","avatar_url":"https://avatars.githubusercontent.com/u/2898254?v=4","gravatar_id":"","url":"https://api.github.com/users/rdhabalia","html_url":"https://github.com/rdhabalia","followers_url":"https://api.github.com/users/rdhabalia/followers","following_url":"https://api.github.com/users/rdhabalia/following{/other_user}","gists_url":"https://api.github.com/users/rdhabalia/gists{/gist_id}","starred_url":"https://api.github.com/users/rdhabalia/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rdhabalia/subscriptions","organizations_url":"https://api.github.com/users/rdhabalia/orgs","repos_url":"https://api.github.com/users/rdhabalia/repos","events_url":"https://api.github.com/users/rdhabalia/events{/privacy}","received_events_url":"https://api.github.com/users/rdhabalia/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-06-07T22:57:42Z","updated_at":"2017-06-07T22:57:42Z","author_association":"CONTRIBUTOR","body":"> The dispatcher knows the permits for a particular consumer, right? or am I missing context here?\r\n\r\nIn non-persistent topic as we don't have privilege to persist message so, broker dispatches message to consumer as soon as it receives message so, broker doesn't consider consumer's permit and it keeps delivering messages to consumer in [background thread](https://github.com/rdhabalia/pulsar/blob/34534370d7bb71fe83175a818090f951824696f2/pulsar-broker/src/main/java/com/yahoo/pulsar/broker/service/non/persistent/NonPersistentTopic.java#L192). \r\n\r\n> What is the behavior of the client library when receiving TooManyRequestError? Will it retry? Send the error to application? Exponential backoff?\r\n\r\nRight now, producer handles `TooManyRequestError` same as other error and in that case it closes the connection and reconnect with broker and resend those messages again from the `pendingMessages` queue. In case that queue will be full then client-library will default block/fail the callback.","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/306948955/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/306962984","html_url":"https://github.com/apache/pulsar/issues/451#issuecomment-306962984","issue_url":"https://api.github.com/repos/apache/pulsar/issues/451","id":306962984,"node_id":"MDEyOklzc3VlQ29tbWVudDMwNjk2Mjk4NA==","user":{"login":"saandrews","id":20527148,"node_id":"MDQ6VXNlcjIwNTI3MTQ4","avatar_url":"https://avatars.githubusercontent.com/u/20527148?v=4","gravatar_id":"","url":"https://api.github.com/users/saandrews","html_url":"https://github.com/saandrews","followers_url":"https://api.github.com/users/saandrews/followers","following_url":"https://api.github.com/users/saandrews/following{/other_user}","gists_url":"https://api.github.com/users/saandrews/gists{/gist_id}","starred_url":"https://api.github.com/users/saandrews/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/saandrews/subscriptions","organizations_url":"https://api.github.com/users/saandrews/orgs","repos_url":"https://api.github.com/users/saandrews/repos","events_url":"https://api.github.com/users/saandrews/events{/privacy}","received_events_url":"https://api.github.com/users/saandrews/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-06-08T00:22:21Z","updated_at":"2017-06-08T00:22:39Z","author_association":"CONTRIBUTOR","body":"> Right now, we do rate limiting as soon as message is published and if it is able to acquire permit then it will send message to consumer else it fails the publish with TooManyRequestError. So, broker does rate limiting even without any consumer connected.\r\n\r\nInstead of failing the publish, isn't it better to drop the old messages? In cases like many different non persistent consumers connected and trying to consume the message, some of them might be running slow than the rest. So, it's better to let the producer continue producing the events and allow the fast consumers to receive while the slow consumers might miss some.","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/306962984/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/306966049","html_url":"https://github.com/apache/pulsar/issues/451#issuecomment-306966049","issue_url":"https://api.github.com/repos/apache/pulsar/issues/451","id":306966049,"node_id":"MDEyOklzc3VlQ29tbWVudDMwNjk2NjA0OQ==","user":{"login":"merlimat","id":62500,"node_id":"MDQ6VXNlcjYyNTAw","avatar_url":"https://avatars.githubusercontent.com/u/62500?v=4","gravatar_id":"","url":"https://api.github.com/users/merlimat","html_url":"https://github.com/merlimat","followers_url":"https://api.github.com/users/merlimat/followers","following_url":"https://api.github.com/users/merlimat/following{/other_user}","gists_url":"https://api.github.com/users/merlimat/gists{/gist_id}","starred_url":"https://api.github.com/users/merlimat/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/merlimat/subscriptions","organizations_url":"https://api.github.com/users/merlimat/orgs","repos_url":"https://api.github.com/users/merlimat/repos","events_url":"https://api.github.com/users/merlimat/events{/privacy}","received_events_url":"https://api.github.com/users/merlimat/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-06-08T00:47:05Z","updated_at":"2017-06-08T00:47:05Z","author_association":"CONTRIBUTOR","body":"> broker doesn't consider consumer's permit and it keeps delivering messages to consumer in background thread.\r\n\r\nWhy not? You can check that if you don't have permits, or the connection is not writable you throw the message away.\r\n\r\n> Right now, producer handles TooManyRequestError same as other error and in that case it closes the connection and reconnect with broker and resend those messages again from the pendingMessages queue. In case that queue will be full then client-library will default block/fail the callback.\r\n\r\nBut then you're flooding the broker again, right? For the broker it's anyway less expensive to throw the message away immediately and to say \"ok\" to producer.","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/306966049/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/306966209","html_url":"https://github.com/apache/pulsar/issues/451#issuecomment-306966209","issue_url":"https://api.github.com/repos/apache/pulsar/issues/451","id":306966209,"node_id":"MDEyOklzc3VlQ29tbWVudDMwNjk2NjIwOQ==","user":{"login":"merlimat","id":62500,"node_id":"MDQ6VXNlcjYyNTAw","avatar_url":"https://avatars.githubusercontent.com/u/62500?v=4","gravatar_id":"","url":"https://api.github.com/users/merlimat","html_url":"https://github.com/merlimat","followers_url":"https://api.github.com/users/merlimat/followers","following_url":"https://api.github.com/users/merlimat/following{/other_user}","gists_url":"https://api.github.com/users/merlimat/gists{/gist_id}","starred_url":"https://api.github.com/users/merlimat/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/merlimat/subscriptions","organizations_url":"https://api.github.com/users/merlimat/orgs","repos_url":"https://api.github.com/users/merlimat/repos","events_url":"https://api.github.com/users/merlimat/events{/privacy}","received_events_url":"https://api.github.com/users/merlimat/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-06-08T00:48:20Z","updated_at":"2017-06-08T00:48:20Z","author_association":"CONTRIBUTOR","body":"> Instead of failing the publish, isn't it better to drop the old messages?\r\n\r\nThat you can only do if you are queuing the messages in the broker. If you dispatch immediately to the consumer, when the consumer is saturated you can only drop the *new* messages.","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/306966209/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/306969986","html_url":"https://github.com/apache/pulsar/issues/451#issuecomment-306969986","issue_url":"https://api.github.com/repos/apache/pulsar/issues/451","id":306969986,"node_id":"MDEyOklzc3VlQ29tbWVudDMwNjk2OTk4Ng==","user":{"login":"rdhabalia","id":2898254,"node_id":"MDQ6VXNlcjI4OTgyNTQ=","avatar_url":"https://avatars.githubusercontent.com/u/2898254?v=4","gravatar_id":"","url":"https://api.github.com/users/rdhabalia","html_url":"https://github.com/rdhabalia","followers_url":"https://api.github.com/users/rdhabalia/followers","following_url":"https://api.github.com/users/rdhabalia/following{/other_user}","gists_url":"https://api.github.com/users/rdhabalia/gists{/gist_id}","starred_url":"https://api.github.com/users/rdhabalia/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rdhabalia/subscriptions","organizations_url":"https://api.github.com/users/rdhabalia/orgs","repos_url":"https://api.github.com/users/rdhabalia/repos","events_url":"https://api.github.com/users/rdhabalia/events{/privacy}","received_events_url":"https://api.github.com/users/rdhabalia/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-06-08T01:15:44Z","updated_at":"2017-06-08T01:15:44Z","author_association":"CONTRIBUTOR","body":"> Why not? You can check that if you don't have permits, or the connection is not writable you throw the message away.\r\n\r\nThe only reason is: as consumer cares about newly published messages so, broker can keep dispatching the message and if client queue is full then client can discard old message and try to consume newly added message. So, in that way client always sees new messages and forget old ones like live-streaming. If we think consuming old message vs new message is fine then we can take permits approach and dispatch only if permit is available.\r\n\r\n> For the broker it's anyway less expensive to throw the message away immediately and to say \"ok\" to producer.\r\n\r\nSure. But only drawback is publisher is keep thinking that message is being published successfully and broker silently drops it and there will not be any visibility for number of dropped messages. Probably then we can show these numbers in stats: msgInRate and msgDroppedRate for client visibility.??","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/306969986/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/307167557","html_url":"https://github.com/apache/pulsar/pull/455#issuecomment-307167557","issue_url":"https://api.github.com/repos/apache/pulsar/issues/455","id":307167557,"node_id":"MDEyOklzc3VlQ29tbWVudDMwNzE2NzU1Nw==","user":{"login":"merlimat","id":62500,"node_id":"MDQ6VXNlcjYyNTAw","avatar_url":"https://avatars.githubusercontent.com/u/62500?v=4","gravatar_id":"","url":"https://api.github.com/users/merlimat","html_url":"https://github.com/merlimat","followers_url":"https://api.github.com/users/merlimat/followers","following_url":"https://api.github.com/users/merlimat/following{/other_user}","gists_url":"https://api.github.com/users/merlimat/gists{/gist_id}","starred_url":"https://api.github.com/users/merlimat/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/merlimat/subscriptions","organizations_url":"https://api.github.com/users/merlimat/orgs","repos_url":"https://api.github.com/users/merlimat/repos","events_url":"https://api.github.com/users/merlimat/events{/privacy}","received_events_url":"https://api.github.com/users/merlimat/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-06-08T17:10:27Z","updated_at":"2017-06-08T17:10:27Z","author_association":"CONTRIBUTOR","body":"@rdhabalia I have tried to make a minimal change: replace `synchronized` with `ReentrantMutex` and release the mutex before triggering callbacks, in order to fix the deadlock without changing the locking logic in that class. Sending as a separate PR.","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/307167557/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/307171296","html_url":"https://github.com/apache/pulsar/pull/455#issuecomment-307171296","issue_url":"https://api.github.com/repos/apache/pulsar/issues/455","id":307171296,"node_id":"MDEyOklzc3VlQ29tbWVudDMwNzE3MTI5Ng==","user":{"login":"rdhabalia","id":2898254,"node_id":"MDQ6VXNlcjI4OTgyNTQ=","avatar_url":"https://avatars.githubusercontent.com/u/2898254?v=4","gravatar_id":"","url":"https://api.github.com/users/rdhabalia","html_url":"https://github.com/rdhabalia","followers_url":"https://api.github.com/users/rdhabalia/followers","following_url":"https://api.github.com/users/rdhabalia/following{/other_user}","gists_url":"https://api.github.com/users/rdhabalia/gists{/gist_id}","starred_url":"https://api.github.com/users/rdhabalia/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rdhabalia/subscriptions","organizations_url":"https://api.github.com/users/rdhabalia/orgs","repos_url":"https://api.github.com/users/rdhabalia/repos","events_url":"https://api.github.com/users/rdhabalia/events{/privacy}","received_events_url":"https://api.github.com/users/rdhabalia/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-06-08T17:24:29Z","updated_at":"2017-06-08T17:24:29Z","author_association":"CONTRIBUTOR","body":"Ok. closing this one then,","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/307171296/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/307181988","html_url":"https://github.com/apache/pulsar/issues/451#issuecomment-307181988","issue_url":"https://api.github.com/repos/apache/pulsar/issues/451","id":307181988,"node_id":"MDEyOklzc3VlQ29tbWVudDMwNzE4MTk4OA==","user":{"login":"rdhabalia","id":2898254,"node_id":"MDQ6VXNlcjI4OTgyNTQ=","avatar_url":"https://avatars.githubusercontent.com/u/2898254?v=4","gravatar_id":"","url":"https://api.github.com/users/rdhabalia","html_url":"https://github.com/rdhabalia","followers_url":"https://api.github.com/users/rdhabalia/followers","following_url":"https://api.github.com/users/rdhabalia/following{/other_user}","gists_url":"https://api.github.com/users/rdhabalia/gists{/gist_id}","starred_url":"https://api.github.com/users/rdhabalia/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rdhabalia/subscriptions","organizations_url":"https://api.github.com/users/rdhabalia/orgs","repos_url":"https://api.github.com/users/rdhabalia/repos","events_url":"https://api.github.com/users/rdhabalia/events{/privacy}","received_events_url":"https://api.github.com/users/rdhabalia/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-06-08T18:04:37Z","updated_at":"2017-06-08T18:04:37Z","author_association":"CONTRIBUTOR","body":"Alright from all suggestions above we have two approaches for rate limiting publish and delivery of messages. \r\n\r\n**Consumer:**\r\n**Approach 1: Consider consumer permits:** Broker should consider consumer's permit and dispatch message accordingly else broker drops the message if consumer doesn't have permit when consumer's queue is full.\r\n**Approach 2:  Don't consider consumer permit:** broker doesn't consider consumer permits and keep pushing published messages. If consumer is slow enough to consume messages and queue is full then consumer can discard old message from the queue and insert new message so, consumer can always have new messages and doesn't care about old messages.\r\n\r\n**Producer:**\r\nBroker can control max in-flight messages per connection and if broker receives messages beyond that limit then\r\n**Approach 1: broker drops message:** Broker silently drops the message and doesn’t deliver to any consumer and send success to publisher. In this approach publisher will not know if message is actually successfully published or not.\r\n\r\n**Approach 2: client does backoff:** Broker sends publish failure to producer and doesn’t deliver to any consumers. Client-producer will receive “TooManyRequestError” and client fails published message and also backoff for 100 msec. So, during that 100 ms if client tries to produce message it will immediately gets publish failure without sending request to broker. With this approach client will at least know about publish-failure and with backoff it will not publish messages for broker during backoff time.\r\n\r\n@merlimat @saandrews : any thoughts which one we should take.","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/307181988/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/307184100","html_url":"https://github.com/apache/pulsar/issues/451#issuecomment-307184100","issue_url":"https://api.github.com/repos/apache/pulsar/issues/451","id":307184100,"node_id":"MDEyOklzc3VlQ29tbWVudDMwNzE4NDEwMA==","user":{"login":"merlimat","id":62500,"node_id":"MDQ6VXNlcjYyNTAw","avatar_url":"https://avatars.githubusercontent.com/u/62500?v=4","gravatar_id":"","url":"https://api.github.com/users/merlimat","html_url":"https://github.com/merlimat","followers_url":"https://api.github.com/users/merlimat/followers","following_url":"https://api.github.com/users/merlimat/following{/other_user}","gists_url":"https://api.github.com/users/merlimat/gists{/gist_id}","starred_url":"https://api.github.com/users/merlimat/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/merlimat/subscriptions","organizations_url":"https://api.github.com/users/merlimat/orgs","repos_url":"https://api.github.com/users/merlimat/repos","events_url":"https://api.github.com/users/merlimat/events{/privacy}","received_events_url":"https://api.github.com/users/merlimat/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-06-08T18:12:44Z","updated_at":"2017-06-08T18:12:44Z","author_association":"CONTRIBUTOR","body":"\r\n#### Consumer\r\n\r\n> Approach 2: Don't consider consumer permit: \r\n\r\nEven if the consumer drops the messages, you're going to flood it with messages. \r\nI think approach 1 is better, use existing flow control mechanism, and requires no changes in the client code.\r\n\r\n\r\n#### Producer\r\n\r\n> Approach 1: broker drops message: Broker silently drops the message and doesn’t deliver to any consumer and send success to publisher. In this approach publisher will not know if message is actually successfully published or not.\r\n\r\nWhat does that mean for the message to be successfully published in this context?\r\nIf the message is to be stored in broker's memory, then we are already \"successful\", since the message already reached that point. \r\nI think the publish outcome should be detached by what action the broker can take later (eg: drop the message if consumers are slow or not available)\r\n\r\n> Approach 2: client does backoff: Broker sends publish failure to producer and doesn’t deliver to any consumers. Client-producer will receive “TooManyRequestError” and client fails published message and also backoff for 100 msec. So, during that 100 ms if client tries to produce message it will immediately gets publish failure without sending request to broker. With this approach client will at least know about publish-failure and with backoff it will not publish messages for broker during backoff time.\r\n\r\nI think this approach would break the basis of pub-sub (detaching producer and consumers). In this case you're going to slow down the producer according to consumers capacity.\r\n\r\n\r\nSo, my vote goes on 1  & 1","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/307184100/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/307192930","html_url":"https://github.com/apache/pulsar/issues/451#issuecomment-307192930","issue_url":"https://api.github.com/repos/apache/pulsar/issues/451","id":307192930,"node_id":"MDEyOklzc3VlQ29tbWVudDMwNzE5MjkzMA==","user":{"login":"rdhabalia","id":2898254,"node_id":"MDQ6VXNlcjI4OTgyNTQ=","avatar_url":"https://avatars.githubusercontent.com/u/2898254?v=4","gravatar_id":"","url":"https://api.github.com/users/rdhabalia","html_url":"https://github.com/rdhabalia","followers_url":"https://api.github.com/users/rdhabalia/followers","following_url":"https://api.github.com/users/rdhabalia/following{/other_user}","gists_url":"https://api.github.com/users/rdhabalia/gists{/gist_id}","starred_url":"https://api.github.com/users/rdhabalia/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rdhabalia/subscriptions","organizations_url":"https://api.github.com/users/rdhabalia/orgs","repos_url":"https://api.github.com/users/rdhabalia/repos","events_url":"https://api.github.com/users/rdhabalia/events{/privacy}","received_events_url":"https://api.github.com/users/rdhabalia/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-06-08T18:46:09Z","updated_at":"2017-06-08T18:46:09Z","author_association":"CONTRIBUTOR","body":"> So, my vote goes on 1 & 1\r\n\r\nSure.\r\n\r\n> I think this approach would break the basis of pub-sub (detaching producer and consumers). In this case you're going to slow down the producer according to consumers capacity.\r\n\r\nActually that's what not I mean here, we should not slow down producer according to consumer's capacity. What I mean if producer is publishing more than rate-limiting per-connection then broker can give publish-failure and producer at client-lib handles this failure by doing two things:\r\n1. notify client producer with publish failure.\r\n2. set back-off for X millisecond (eg. 100) and in that duration producer will get publish failure immediately at client-lib so, producer can't send more publish-msg request to broker in that back-off duration.\r\n- Or as you mentioned: producer can have option to configure where producer is fine for message to be dropped silently.","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/307192930/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/307194158","html_url":"https://github.com/apache/pulsar/issues/451#issuecomment-307194158","issue_url":"https://api.github.com/repos/apache/pulsar/issues/451","id":307194158,"node_id":"MDEyOklzc3VlQ29tbWVudDMwNzE5NDE1OA==","user":{"login":"joefk","id":22042978,"node_id":"MDQ6VXNlcjIyMDQyOTc4","avatar_url":"https://avatars.githubusercontent.com/u/22042978?v=4","gravatar_id":"","url":"https://api.github.com/users/joefk","html_url":"https://github.com/joefk","followers_url":"https://api.github.com/users/joefk/followers","following_url":"https://api.github.com/users/joefk/following{/other_user}","gists_url":"https://api.github.com/users/joefk/gists{/gist_id}","starred_url":"https://api.github.com/users/joefk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/joefk/subscriptions","organizations_url":"https://api.github.com/users/joefk/orgs","repos_url":"https://api.github.com/users/joefk/repos","events_url":"https://api.github.com/users/joefk/events{/privacy}","received_events_url":"https://api.github.com/users/joefk/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-06-08T18:51:02Z","updated_at":"2017-06-08T18:51:02Z","author_association":"CONTRIBUTOR","body":"@merlimat  I think we are mixing 2 things up. \r\n\r\n1) How many messages can a producer produce?  This is unrelated to consumption.  There is a limit, whether configurable or imposed by resources. What happens when that limit is reached?\r\n\r\nDrop silently/Drop with notification\r\n\r\n2) What happens when consumers cant keep up with publishers?  \r\n\r\nDrop current/Drop oldest.\r\n\r\nLet's figure whether we should support these use cases, and then discuss how to do it","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/307194158/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/307232081","html_url":"https://github.com/apache/pulsar/pull/455#issuecomment-307232081","issue_url":"https://api.github.com/repos/apache/pulsar/issues/455","id":307232081,"node_id":"MDEyOklzc3VlQ29tbWVudDMwNzIzMjA4MQ==","user":{"login":"merlimat","id":62500,"node_id":"MDQ6VXNlcjYyNTAw","avatar_url":"https://avatars.githubusercontent.com/u/62500?v=4","gravatar_id":"","url":"https://api.github.com/users/merlimat","html_url":"https://github.com/merlimat","followers_url":"https://api.github.com/users/merlimat/followers","following_url":"https://api.github.com/users/merlimat/following{/other_user}","gists_url":"https://api.github.com/users/merlimat/gists{/gist_id}","starred_url":"https://api.github.com/users/merlimat/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/merlimat/subscriptions","organizations_url":"https://api.github.com/users/merlimat/orgs","repos_url":"https://api.github.com/users/merlimat/repos","events_url":"https://api.github.com/users/merlimat/events{/privacy}","received_events_url":"https://api.github.com/users/merlimat/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-06-08T21:26:15Z","updated_at":"2017-06-08T21:26:15Z","author_association":"CONTRIBUTOR","body":"@rdhabalia Actually, your PR is working and mine is not :)\r\nI'd rather merge this one right now.","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/307232081/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/307233131","html_url":"https://github.com/apache/pulsar/pull/455#issuecomment-307233131","issue_url":"https://api.github.com/repos/apache/pulsar/issues/455","id":307233131,"node_id":"MDEyOklzc3VlQ29tbWVudDMwNzIzMzEzMQ==","user":{"login":"rdhabalia","id":2898254,"node_id":"MDQ6VXNlcjI4OTgyNTQ=","avatar_url":"https://avatars.githubusercontent.com/u/2898254?v=4","gravatar_id":"","url":"https://api.github.com/users/rdhabalia","html_url":"https://github.com/rdhabalia","followers_url":"https://api.github.com/users/rdhabalia/followers","following_url":"https://api.github.com/users/rdhabalia/following{/other_user}","gists_url":"https://api.github.com/users/rdhabalia/gists{/gist_id}","starred_url":"https://api.github.com/users/rdhabalia/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rdhabalia/subscriptions","organizations_url":"https://api.github.com/users/rdhabalia/orgs","repos_url":"https://api.github.com/users/rdhabalia/repos","events_url":"https://api.github.com/users/rdhabalia/events{/privacy}","received_events_url":"https://api.github.com/users/rdhabalia/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-06-08T21:30:30Z","updated_at":"2017-06-08T21:30:30Z","author_association":"CONTRIBUTOR","body":"I think our PR is to prevent deadlock which causes build to be stuck and it seems failure in your PR is due to intermittent test-failure and not due to PR. Restarted build again let's see if it passes this time, else we can merge this one.","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/307233131/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/307234785","html_url":"https://github.com/apache/pulsar/pull/437#issuecomment-307234785","issue_url":"https://api.github.com/repos/apache/pulsar/issues/437","id":307234785,"node_id":"MDEyOklzc3VlQ29tbWVudDMwNzIzNDc4NQ==","user":{"login":"bobbeyreese","id":25467949,"node_id":"MDQ6VXNlcjI1NDY3OTQ5","avatar_url":"https://avatars.githubusercontent.com/u/25467949?v=4","gravatar_id":"","url":"https://api.github.com/users/bobbeyreese","html_url":"https://github.com/bobbeyreese","followers_url":"https://api.github.com/users/bobbeyreese/followers","following_url":"https://api.github.com/users/bobbeyreese/following{/other_user}","gists_url":"https://api.github.com/users/bobbeyreese/gists{/gist_id}","starred_url":"https://api.github.com/users/bobbeyreese/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bobbeyreese/subscriptions","organizations_url":"https://api.github.com/users/bobbeyreese/orgs","repos_url":"https://api.github.com/users/bobbeyreese/repos","events_url":"https://api.github.com/users/bobbeyreese/events{/privacy}","received_events_url":"https://api.github.com/users/bobbeyreese/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-06-08T21:37:56Z","updated_at":"2017-06-08T21:37:56Z","author_association":"CONTRIBUTOR","body":"A note before this gets merged, it appears that doing both a `get` and an `exists` puts substantially more strain on `MockZooKeeper` during testing, which synchronized all of its methods. I have not yet had time to see if the same is true for the usual `ZooKeeper` (I do not think it would be because it is more asynchronous), but nonetheless it is concerning that the time it takes to perform the testing it much longer. I will need to either\r\na) Make `MockZooKeeper` more efficient under high contention scenarios if there is not a noticeable effect on `ZooKeeper` or\r\nb)  Find another solution entirely","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/307234785/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/307310777","html_url":"https://github.com/apache/pulsar/pull/452#issuecomment-307310777","issue_url":"https://api.github.com/repos/apache/pulsar/issues/452","id":307310777,"node_id":"MDEyOklzc3VlQ29tbWVudDMwNzMxMDc3Nw==","user":{"login":"rdhabalia","id":2898254,"node_id":"MDQ6VXNlcjI4OTgyNTQ=","avatar_url":"https://avatars.githubusercontent.com/u/2898254?v=4","gravatar_id":"","url":"https://api.github.com/users/rdhabalia","html_url":"https://github.com/rdhabalia","followers_url":"https://api.github.com/users/rdhabalia/followers","following_url":"https://api.github.com/users/rdhabalia/following{/other_user}","gists_url":"https://api.github.com/users/rdhabalia/gists{/gist_id}","starred_url":"https://api.github.com/users/rdhabalia/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rdhabalia/subscriptions","organizations_url":"https://api.github.com/users/rdhabalia/orgs","repos_url":"https://api.github.com/users/rdhabalia/repos","events_url":"https://api.github.com/users/rdhabalia/events{/privacy}","received_events_url":"https://api.github.com/users/rdhabalia/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-06-09T06:52:58Z","updated_at":"2017-06-09T06:52:58Z","author_association":"CONTRIBUTOR","body":"as per discussion at #451 made two changes:\r\n1. Broker dispatches message to subscriber as per available permits else broker will drop message for that subscriber and doesn't deliver the message if that subscriber doesn't have permit.\r\n2. Broker allows configured number of max in-flight messages per connection and beyond that limit, broker will not process that message and immediately sends `success-ack` back to producer.\r\n**Note:** by default broker sets `msgId=0:0` except on above usecase2 where if message is not processed successfully then it sends `msgId=-1:-1` (at least some indication that broker has not processed the message successfully due to rate limit)","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/307310777/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/307314982","html_url":"https://github.com/apache/pulsar/pull/460#issuecomment-307314982","issue_url":"https://api.github.com/repos/apache/pulsar/issues/460","id":307314982,"node_id":"MDEyOklzc3VlQ29tbWVudDMwNzMxNDk4Mg==","user":{"login":"rdhabalia","id":2898254,"node_id":"MDQ6VXNlcjI4OTgyNTQ=","avatar_url":"https://avatars.githubusercontent.com/u/2898254?v=4","gravatar_id":"","url":"https://api.github.com/users/rdhabalia","html_url":"https://github.com/rdhabalia","followers_url":"https://api.github.com/users/rdhabalia/followers","following_url":"https://api.github.com/users/rdhabalia/following{/other_user}","gists_url":"https://api.github.com/users/rdhabalia/gists{/gist_id}","starred_url":"https://api.github.com/users/rdhabalia/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rdhabalia/subscriptions","organizations_url":"https://api.github.com/users/rdhabalia/orgs","repos_url":"https://api.github.com/users/rdhabalia/repos","events_url":"https://api.github.com/users/rdhabalia/events{/privacy}","received_events_url":"https://api.github.com/users/rdhabalia/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-06-09T07:17:58Z","updated_at":"2017-06-09T07:17:58Z","author_association":"CONTRIBUTOR","body":"I think we should merge this PR because it fails with `ModularLoadManagerImplTest.testNeedBrokerDataUpdate:371` and I can see other PR failure on the same testcase so, we can fix this flickery test later.","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/307314982/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/307417318","html_url":"https://github.com/apache/pulsar/issues/411#issuecomment-307417318","issue_url":"https://api.github.com/repos/apache/pulsar/issues/411","id":307417318,"node_id":"MDEyOklzc3VlQ29tbWVudDMwNzQxNzMxOA==","user":{"login":"sschepens","id":3072509,"node_id":"MDQ6VXNlcjMwNzI1MDk=","avatar_url":"https://avatars.githubusercontent.com/u/3072509?v=4","gravatar_id":"","url":"https://api.github.com/users/sschepens","html_url":"https://github.com/sschepens","followers_url":"https://api.github.com/users/sschepens/followers","following_url":"https://api.github.com/users/sschepens/following{/other_user}","gists_url":"https://api.github.com/users/sschepens/gists{/gist_id}","starred_url":"https://api.github.com/users/sschepens/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sschepens/subscriptions","organizations_url":"https://api.github.com/users/sschepens/orgs","repos_url":"https://api.github.com/users/sschepens/repos","events_url":"https://api.github.com/users/sschepens/events{/privacy}","received_events_url":"https://api.github.com/users/sschepens/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-06-09T15:17:07Z","updated_at":"2017-06-09T19:04:13Z","author_association":"CONTRIBUTOR","body":"@merlimat, thanks for the help.\r\nHave you considered using a full off-heap map for this use case? I found this two libraries https://github.com/cfelde/BinaryOffheapHashMap and https://github.com/snazy/ohc\r\nUsing a full off-heap map would allow the readahead cache to grow indefinitely without affecting heap and GC, the only downside is that keys have to be serialized and copied for usage, which would introduce a small overhead, this would prove annoying mostly if we get a misses most of the time. We could probably add a Bloom Filter or some other algorithm on heap to check if an entry may de un the cache.\r\n","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/307417318/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/307462730","html_url":"https://github.com/apache/pulsar/pull/464#issuecomment-307462730","issue_url":"https://api.github.com/repos/apache/pulsar/issues/464","id":307462730,"node_id":"MDEyOklzc3VlQ29tbWVudDMwNzQ2MjczMA==","user":{"login":"jai1","id":8659452,"node_id":"MDQ6VXNlcjg2NTk0NTI=","avatar_url":"https://avatars.githubusercontent.com/u/8659452?v=4","gravatar_id":"","url":"https://api.github.com/users/jai1","html_url":"https://github.com/jai1","followers_url":"https://api.github.com/users/jai1/followers","following_url":"https://api.github.com/users/jai1/following{/other_user}","gists_url":"https://api.github.com/users/jai1/gists{/gist_id}","starred_url":"https://api.github.com/users/jai1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jai1/subscriptions","organizations_url":"https://api.github.com/users/jai1/orgs","repos_url":"https://api.github.com/users/jai1/repos","events_url":"https://api.github.com/users/jai1/events{/privacy}","received_events_url":"https://api.github.com/users/jai1/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-06-09T18:18:35Z","updated_at":"2017-06-09T18:18:55Z","author_association":"CONTRIBUTOR","body":"👍 \r\n\r\n@bradtm ","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/307462730/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/307470264","html_url":"https://github.com/apache/pulsar/pull/460#issuecomment-307470264","issue_url":"https://api.github.com/repos/apache/pulsar/issues/460","id":307470264,"node_id":"MDEyOklzc3VlQ29tbWVudDMwNzQ3MDI2NA==","user":{"login":"rdhabalia","id":2898254,"node_id":"MDQ6VXNlcjI4OTgyNTQ=","avatar_url":"https://avatars.githubusercontent.com/u/2898254?v=4","gravatar_id":"","url":"https://api.github.com/users/rdhabalia","html_url":"https://github.com/rdhabalia","followers_url":"https://api.github.com/users/rdhabalia/followers","following_url":"https://api.github.com/users/rdhabalia/following{/other_user}","gists_url":"https://api.github.com/users/rdhabalia/gists{/gist_id}","starred_url":"https://api.github.com/users/rdhabalia/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rdhabalia/subscriptions","organizations_url":"https://api.github.com/users/rdhabalia/orgs","repos_url":"https://api.github.com/users/rdhabalia/repos","events_url":"https://api.github.com/users/rdhabalia/events{/privacy}","received_events_url":"https://api.github.com/users/rdhabalia/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-06-09T18:49:26Z","updated_at":"2017-06-09T18:49:26Z","author_association":"CONTRIBUTOR","body":"Fixed test #464 made [build green](https://travis-ci.org/yahoo/pulsar/builds/241298883) so, I think now we can merge this one or can trigger the build after rebasing.","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/307470264/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/307492078","html_url":"https://github.com/apache/pulsar/pull/460#issuecomment-307492078","issue_url":"https://api.github.com/repos/apache/pulsar/issues/460","id":307492078,"node_id":"MDEyOklzc3VlQ29tbWVudDMwNzQ5MjA3OA==","user":{"login":"merlimat","id":62500,"node_id":"MDQ6VXNlcjYyNTAw","avatar_url":"https://avatars.githubusercontent.com/u/62500?v=4","gravatar_id":"","url":"https://api.github.com/users/merlimat","html_url":"https://github.com/merlimat","followers_url":"https://api.github.com/users/merlimat/followers","following_url":"https://api.github.com/users/merlimat/following{/other_user}","gists_url":"https://api.github.com/users/merlimat/gists{/gist_id}","starred_url":"https://api.github.com/users/merlimat/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/merlimat/subscriptions","organizations_url":"https://api.github.com/users/merlimat/orgs","repos_url":"https://api.github.com/users/merlimat/repos","events_url":"https://api.github.com/users/merlimat/events{/privacy}","received_events_url":"https://api.github.com/users/merlimat/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-06-09T20:30:03Z","updated_at":"2017-06-09T20:30:03Z","author_association":"CONTRIBUTOR","body":"Rebased on master","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/307492078/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/307507738","html_url":"https://github.com/apache/pulsar/pull/455#issuecomment-307507738","issue_url":"https://api.github.com/repos/apache/pulsar/issues/455","id":307507738,"node_id":"MDEyOklzc3VlQ29tbWVudDMwNzUwNzczOA==","user":{"login":"merlimat","id":62500,"node_id":"MDQ6VXNlcjYyNTAw","avatar_url":"https://avatars.githubusercontent.com/u/62500?v=4","gravatar_id":"","url":"https://api.github.com/users/merlimat","html_url":"https://github.com/merlimat","followers_url":"https://api.github.com/users/merlimat/followers","following_url":"https://api.github.com/users/merlimat/following{/other_user}","gists_url":"https://api.github.com/users/merlimat/gists{/gist_id}","starred_url":"https://api.github.com/users/merlimat/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/merlimat/subscriptions","organizations_url":"https://api.github.com/users/merlimat/orgs","repos_url":"https://api.github.com/users/merlimat/repos","events_url":"https://api.github.com/users/merlimat/events{/privacy}","received_events_url":"https://api.github.com/users/merlimat/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-06-09T21:48:29Z","updated_at":"2017-06-09T21:48:29Z","author_association":"CONTRIBUTOR","body":"Merged the other PR. re-closing this one","reactions":{"url":"https://api.github.com/repos/apache/pulsar/issues/comments/307507738/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]