[{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612650049","html_url":"https://github.com/apache/storm/issues/5094#issuecomment-2612650049","issue_url":"https://api.github.com/repos/apache/storm/issues/5094","id":2612650049,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NTAwNDk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-27T03:31:29Z","updated_at":"2025-01-24T14:22:34Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user hustfxj commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1047#discussion_r50937532\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1047#discussion_r50937532</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/zookeeper/Zookeeper.java &#8212;<br/>\n    @@ -0,0 +1,355 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.zookeeper;<br/>\n    +<br/>\n    +import clojure.lang.PersistentArrayMap;<br/>\n    +import clojure.lang.RT;<br/>\n    +import org.apache.commons.lang.StringUtils;<br/>\n    +import org.apache.curator.framework.CuratorFramework;<br/>\n    +import org.apache.curator.framework.api.CuratorEvent;<br/>\n    +import org.apache.curator.framework.api.CuratorEventType;<br/>\n    +import org.apache.curator.framework.api.CuratorListener;<br/>\n    +import org.apache.curator.framework.api.UnhandledErrorListener;<br/>\n    +import org.apache.curator.framework.recipes.leader.LeaderLatch;<br/>\n    +import org.apache.curator.framework.recipes.leader.LeaderLatchListener;<br/>\n    +import org.apache.curator.framework.recipes.leader.Participant;<br/>\n    +import org.apache.curator.framework.state.ConnectionStateListener;<br/>\n    +import org.apache.storm.Config;<br/>\n    +import org.apache.storm.callback.DefaultWatcherCallBack;<br/>\n    +import org.apache.storm.callback.WatcherCallBack;<br/>\n    +import org.apache.storm.nimbus.ILeaderElector;<br/>\n    +import org.apache.storm.nimbus.NimbusInfo;<br/>\n    +import org.apache.storm.utils.Utils;<br/>\n    +import org.apache.storm.utils.ZookeeperAuthInfo;<br/>\n    +import org.apache.zookeeper.KeeperException;<br/>\n    +import org.apache.zookeeper.WatchedEvent;<br/>\n    +import org.apache.zookeeper.data.ACL;<br/>\n    +import org.apache.zookeeper.data.Stat;<br/>\n    +import org.apache.zookeeper.server.NIOServerCnxnFactory;<br/>\n    +import org.apache.zookeeper.server.ZooKeeperServer;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +import java.io.File;<br/>\n    +import java.io.IOException;<br/>\n    +import java.net.BindException;<br/>\n    +import java.net.InetAddress;<br/>\n    +import java.net.InetSocketAddress;<br/>\n    +import java.util.List;<br/>\n    +import java.util.Map;<br/>\n    +import java.util.concurrent.atomic.AtomicReference;<br/>\n    +<br/>\n    +public class Zookeeper {<br/>\n    +<br/>\n    +    private static Logger LOG = LoggerFactory.getLogger(Zookeeper.class);<br/>\n    +<br/>\n    +    public static CuratorFramework mkClient(Map conf, List<String> servers, Object port, String root) </p>\n{\n    +return mkClient(conf, servers, port, root, new DefaultWatcherCallBack());\n    +    }\n<p>    +<br/>\n    +    public static CuratorFramework mkClient(Map conf, List<String> servers, Object port, Map authConf) </p>\n{\n    +return mkClient(conf, servers, port, \"\", new DefaultWatcherCallBack(), authConf);\n    +    }\n<p>    +<br/>\n    +    public static CuratorFramework mkClient(Map conf, List<String> servers, Object port, String root, Map authConf) </p>\n{\n    +return mkClient(conf, servers, port, root, new DefaultWatcherCallBack(), authConf);\n    +    }\n<p>    +<br/>\n    +    public static CuratorFramework mkClient(Map conf, List<String> servers, Object port, String root, final WatcherCallBack watcher, Map authConf) {<br/>\n    +CuratorFramework fk;<br/>\n    +if (authConf != null) </p>\n{\n    +    fk = Utils.newCurator(conf, servers, port, root, new ZookeeperAuthInfo(authConf));\n    +}\n<p> else </p>\n{\n    +    fk = Utils.newCurator(conf, servers, port, root);\n    +}\n<p>    +<br/>\n    +fk.getCuratorListenable().addListener(new CuratorListener() {<br/>\n    +    @Override<br/>\n    +    public void eventReceived(CuratorFramework _fk, CuratorEvent e) throws Exception {<br/>\n    +if (e.getType().equals(CuratorEventType.WATCHED)) </p>\n{\n    +    WatchedEvent event = e.getWatchedEvent();\n    +\n    +    watcher.execute(event.getState(), event.getType(), event.getPath());\n    +}\n<p>    +<br/>\n    +    }<br/>\n    +});<br/>\n    +fk.start();<br/>\n    +return fk;<br/>\n    +    }<br/>\n    +<br/>\n    +    /**<br/>\n    +     * connect ZK, register Watch/unhandle Watch<br/>\n    +     *<br/>\n    +     * @return<br/>\n    +     */<br/>\n    +    public static CuratorFramework mkClient(Map conf, List<String> servers, Object port, String root, final WatcherCallBack watcher) {<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    OK</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612650049/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/175378568","html_url":"https://github.com/apache/storm/pull/1049#issuecomment-175378568","issue_url":"https://api.github.com/repos/apache/storm/issues/1049","id":175378568,"node_id":"MDEyOklzc3VlQ29tbWVudDE3NTM3ODU2OA==","user":{"login":"ptgoetz","id":260896,"node_id":"MDQ6VXNlcjI2MDg5Ng==","avatar_url":"https://avatars.githubusercontent.com/u/260896?v=4","gravatar_id":"","url":"https://api.github.com/users/ptgoetz","html_url":"https://github.com/ptgoetz","followers_url":"https://api.github.com/users/ptgoetz/followers","following_url":"https://api.github.com/users/ptgoetz/following{/other_user}","gists_url":"https://api.github.com/users/ptgoetz/gists{/gist_id}","starred_url":"https://api.github.com/users/ptgoetz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ptgoetz/subscriptions","organizations_url":"https://api.github.com/users/ptgoetz/orgs","repos_url":"https://api.github.com/users/ptgoetz/repos","events_url":"https://api.github.com/users/ptgoetz/events{/privacy}","received_events_url":"https://api.github.com/users/ptgoetz/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-27T04:00:01Z","updated_at":"2016-01-27T04:00:01Z","author_association":"MEMBER","body":"+1  \n\nFor now I'd say it should be applied to the 1.x branch. Master should be considered as well, since the .clj files involved haven't really come into play yet, in terms of migration.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/175378568/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612704884","html_url":"https://github.com/apache/storm/issues/5329#issuecomment-2612704884","issue_url":"https://api.github.com/repos/apache/storm/issues/5329","id":2612704884,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI3MDQ4ODQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-27T04:00:03Z","updated_at":"2025-01-24T14:46:19Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user ptgoetz commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1049#issuecomment-175378568\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1049#issuecomment-175378568</a></p>\n\n<p>    +1  </p>\n\n<p>    For now I'd say it should be applied to the 1.x branch. Master should be considered as well, since the .clj files involved haven't really come into play yet, in terms of migration.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612704884/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612679588","html_url":"https://github.com/apache/storm/issues/5177#issuecomment-2612679588","issue_url":"https://api.github.com/repos/apache/storm/issues/5177","id":2612679588,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2Nzk1ODg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-27T05:01:15Z","updated_at":"2025-01-24T14:35:59Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=erikdw\">erikdw</a>:</i>\n<p><a href=\"https://issues.apache.org/jira/browse/STORM-1494\" title=\"Storm UI - Add link to supervisor log\" class=\"issue-link\" data-issue-key=\"STORM-1494\"><del>STORM-1494</del></a> is adding support for the supervisor logs to be linked from the Nimbus UI.  So this will likely be another area to adjust when (if!?) this is fixed.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612679588/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612864875","html_url":"https://github.com/apache/storm/issues/5340#issuecomment-2612864875","issue_url":"https://api.github.com/repos/apache/storm/issues/5340","id":2612864875,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4NjQ4NzU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-27T10:39:50Z","updated_at":"2025-01-24T15:58:56Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>GitHub user arunmahadevan opened a pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1050\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1050</a></p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1505\" title=\"Add map, flatMap and filter operations in trident api\" class=\"issue-link\" data-issue-key=\"STORM-1505\"><del>STORM-1505</del></a> Add map and flatMap functions in trident stream</p>\n\n<p>    `map` and `flatmap` are common stream operations. </p>\n\n<p>    Right now in trident this has to be implemented via each() which also sends the input field values<br/>\n    in addition to the mapped field values, so the map and flatmap should make things slightly<br/>\n    more efficient and easy.</p>\n\n<p>You can merge this pull request into a Git repository by running:</p>\n\n<p>    $ git pull <a href=\"https://github.com/arunmahadevan/storm\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/arunmahadevan/storm</a> <a href=\"https://issues.apache.org/jira/browse/STORM-1505\" title=\"Add map, flatMap and filter operations in trident api\" class=\"issue-link\" data-issue-key=\"STORM-1505\"><del>STORM-1505</del></a></p>\n\n<p>Alternatively you can review and apply these changes as the patch at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1050.patch\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1050.patch</a></p>\n\n<p>To close this pull request, make a commit to your master/trunk branch<br/>\nwith (at least) the following in the commit message:</p>\n\n<p>    This closes #1050</p>\n\n<hr />\n<p>commit 1832c369735576df61c6533ff772814b537e5d68<br/>\nAuthor: Arun Mahadevan <aiyer@hortonworks.com><br/>\nDate:   2016-01-27T07:02:33Z</p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1505\" title=\"Add map, flatMap and filter operations in trident api\" class=\"issue-link\" data-issue-key=\"STORM-1505\"><del>STORM-1505</del></a> Add map and flatMap functions in trident stream</p>\n\n<p>    map and flatmap are common stream operations. Right now in trident this has to be<br/>\n    implemented via each() which also sends the input field values<br/>\n    in addition to the mapped field values, so the map and flatmap should make things slightly<br/>\n    more efficient and easy.</p>\n\n<hr />","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612864875/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/175547593","html_url":"https://github.com/apache/storm/pull/1026#issuecomment-175547593","issue_url":"https://api.github.com/repos/apache/storm/issues/1026","id":175547593,"node_id":"MDEyOklzc3VlQ29tbWVudDE3NTU0NzU5Mw==","user":{"login":"abhishekagarwal87","id":1477457,"node_id":"MDQ6VXNlcjE0Nzc0NTc=","avatar_url":"https://avatars.githubusercontent.com/u/1477457?v=4","gravatar_id":"","url":"https://api.github.com/users/abhishekagarwal87","html_url":"https://github.com/abhishekagarwal87","followers_url":"https://api.github.com/users/abhishekagarwal87/followers","following_url":"https://api.github.com/users/abhishekagarwal87/following{/other_user}","gists_url":"https://api.github.com/users/abhishekagarwal87/gists{/gist_id}","starred_url":"https://api.github.com/users/abhishekagarwal87/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/abhishekagarwal87/subscriptions","organizations_url":"https://api.github.com/users/abhishekagarwal87/orgs","repos_url":"https://api.github.com/users/abhishekagarwal87/repos","events_url":"https://api.github.com/users/abhishekagarwal87/events{/privacy}","received_events_url":"https://api.github.com/users/abhishekagarwal87/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-27T10:45:56Z","updated_at":"2016-01-27T10:45:56Z","author_association":"CONTRIBUTOR","body":"Thank you. can you merge this into master and also select these commits for backport onto 1.0 release? \n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/175547593/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612698423","html_url":"https://github.com/apache/storm/issues/5290#issuecomment-2612698423","issue_url":"https://api.github.com/repos/apache/storm/issues/5290","id":2612698423,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTg0MjM=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-27T10:45:58Z","updated_at":"2025-01-24T14:43:35Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user abhishekagarwal87 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1026#issuecomment-175547593\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1026#issuecomment-175547593</a></p>\n\n<p>    Thank you. can you merge this into master and also select these commits for backport onto 1.0 release? </p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612698423/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612650053","html_url":"https://github.com/apache/storm/issues/5094#issuecomment-2612650053","issue_url":"https://api.github.com/repos/apache/storm/issues/5094","id":2612650053,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NTAwNTM=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-27T12:24:01Z","updated_at":"2025-01-24T14:22:34Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user hustfxj commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1047#discussion_r50976437\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1047#discussion_r50976437</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/zookeeper/Zookeeper.java &#8212;<br/>\n    @@ -0,0 +1,355 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.zookeeper;<br/>\n    +<br/>\n    +import clojure.lang.PersistentArrayMap;<br/>\n    +import clojure.lang.RT;<br/>\n    +import org.apache.commons.lang.StringUtils;<br/>\n    +import org.apache.curator.framework.CuratorFramework;<br/>\n    +import org.apache.curator.framework.api.CuratorEvent;<br/>\n    +import org.apache.curator.framework.api.CuratorEventType;<br/>\n    +import org.apache.curator.framework.api.CuratorListener;<br/>\n    +import org.apache.curator.framework.api.UnhandledErrorListener;<br/>\n    +import org.apache.curator.framework.recipes.leader.LeaderLatch;<br/>\n    +import org.apache.curator.framework.recipes.leader.LeaderLatchListener;<br/>\n    +import org.apache.curator.framework.recipes.leader.Participant;<br/>\n    +import org.apache.curator.framework.state.ConnectionStateListener;<br/>\n    +import org.apache.storm.Config;<br/>\n    +import org.apache.storm.callback.DefaultWatcherCallBack;<br/>\n    +import org.apache.storm.callback.WatcherCallBack;<br/>\n    +import org.apache.storm.nimbus.ILeaderElector;<br/>\n    +import org.apache.storm.nimbus.NimbusInfo;<br/>\n    +import org.apache.storm.utils.Utils;<br/>\n    +import org.apache.storm.utils.ZookeeperAuthInfo;<br/>\n    +import org.apache.zookeeper.KeeperException;<br/>\n    +import org.apache.zookeeper.WatchedEvent;<br/>\n    +import org.apache.zookeeper.data.ACL;<br/>\n    +import org.apache.zookeeper.data.Stat;<br/>\n    +import org.apache.zookeeper.server.NIOServerCnxnFactory;<br/>\n    +import org.apache.zookeeper.server.ZooKeeperServer;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +import java.io.File;<br/>\n    +import java.io.IOException;<br/>\n    +import java.net.BindException;<br/>\n    +import java.net.InetAddress;<br/>\n    +import java.net.InetSocketAddress;<br/>\n    +import java.util.List;<br/>\n    +import java.util.Map;<br/>\n    +import java.util.concurrent.atomic.AtomicReference;<br/>\n    +<br/>\n    +public class Zookeeper {<br/>\n    +<br/>\n    +    private static Logger LOG = LoggerFactory.getLogger(Zookeeper.class);<br/>\n    +<br/>\n    +    public static CuratorFramework mkClient(Map conf, List<String> servers, Object port, String root) </p>\n{\n    +return mkClient(conf, servers, port, root, new DefaultWatcherCallBack());\n    +    }\n<p>    +<br/>\n    +    public static CuratorFramework mkClient(Map conf, List<String> servers, Object port, Map authConf) </p>\n{\n    +return mkClient(conf, servers, port, \"\", new DefaultWatcherCallBack(), authConf);\n    +    }\n<p>    +<br/>\n    +    public static CuratorFramework mkClient(Map conf, List<String> servers, Object port, String root, Map authConf) </p>\n{\n    +return mkClient(conf, servers, port, root, new DefaultWatcherCallBack(), authConf);\n    +    }\n<p>    +<br/>\n    +    public static CuratorFramework mkClient(Map conf, List<String> servers, Object port, String root, final WatcherCallBack watcher, Map authConf) {<br/>\n    +CuratorFramework fk;<br/>\n    +if (authConf != null) </p>\n{\n    +    fk = Utils.newCurator(conf, servers, port, root, new ZookeeperAuthInfo(authConf));\n    +}\n<p> else </p>\n{\n    +    fk = Utils.newCurator(conf, servers, port, root);\n    +}\n<p>    +<br/>\n    +fk.getCuratorListenable().addListener(new CuratorListener() {<br/>\n    +    @Override<br/>\n    +    public void eventReceived(CuratorFramework _fk, CuratorEvent e) throws Exception {<br/>\n    +if (e.getType().equals(CuratorEventType.WATCHED)) </p>\n{\n    +    WatchedEvent event = e.getWatchedEvent();\n    +\n    +    watcher.execute(event.getState(), event.getType(), event.getPath());\n    +}\n<p>    +<br/>\n    +    }<br/>\n    +});<br/>\n    +fk.start();<br/>\n    +return fk;<br/>\n    +    }<br/>\n    +<br/>\n    +    /**<br/>\n    +     * connect ZK, register Watch/unhandle Watch<br/>\n    +     *<br/>\n    +     * @return<br/>\n    +     */<br/>\n    +    public static CuratorFramework mkClient(Map conf, List<String> servers, Object port, String root, final WatcherCallBack watcher) </p>\n{\n    +\n    +return mkClient(conf, servers, port, root, watcher, null);\n    +    }\n<p>    +<br/>\n    +    public static String createNode(CuratorFramework zk, String path, byte[] data, org.apache.zookeeper.CreateMode mode, List<ACL> acls)<br/>\n    +    throws RuntimeException {<br/>\n    +<br/>\n    +String ret = null;<br/>\n    +try </p>\n{\n    +    String npath = Utils.normalizePath(path);\n    +    ret = zk.create().withMode(mode).withACL(acls).forPath(npath, data);\n    +}\n<p> catch (Exception e) </p>\n{\n    +    throw Utils.wrapInRuntime(e);\n    +}<br/>\n    +return ret;<br/>\n    +    }<br/>\n    +<br/>\n    +    public static String createNode(CuratorFramework zk, String path, byte[] data, List<ACL> acls) throws RuntimeException {\n    +return createNode(zk, path, data, org.apache.zookeeper.CreateMode.PERSISTENT, acls);\n    +    }<br/>\n    +<br/>\n    +    public static boolean existsNode(CuratorFramework zk, String path, boolean watch) throws RuntimeException {<br/>\n    +Stat stat = null;<br/>\n    +try {<br/>\n    +    if (watch) {\n    +stat = zk.checkExists().watched().forPath(Utils.normalizePath(path));\n    +    } else {\n    +stat = zk.checkExists().forPath(Utils.normalizePath(path));\n    +    }<br/>\n    +} catch (Exception e) {    +    throw Utils.wrapInRuntime(e);    +}\n<p>    +<br/>\n    +return stat != null;<br/>\n    +    }<br/>\n    +<br/>\n    +    public static void deleteNode(CuratorFramework zk, String path) throws RuntimeException {<br/>\n    +try {<br/>\n    +    String npath = Utils.normalizePath(path);<br/>\n    +    if (existsNode(zk, npath, false)) </p>\n{\n    +zk.delete().deletingChildrenIfNeeded().forPath(Utils.normalizePath(path));\n    +    }\n<p>    +<br/>\n    +} catch (KeeperException.NoNodeException e) </p>\n{\n    +    LOG.info(\"exception\", e);\n    +}\n<p> catch (Exception e) </p>\n{\n    +    throw Utils.wrapInRuntime(e);\n    +}<br/>\n    +    }<br/>\n    +<br/>\n    +    public static void mkdirs(CuratorFramework zk, String path, List<ACL> acls) throws RuntimeException {<br/>\n    +<br/>\n    +String npath = Utils.normalizePath(path);<br/>\n    +if (npath.equals(\"/\")) {\n    +    return;\n    +}<br/>\n    +if (existsNode(zk, npath, false)) {    +    return;    +}<br/>\n    +byte[] byteArray = new byte<span class=\"error\">&#91;1&#93;</span>;<br/>\n    +byteArray<span class=\"error\">&#91;0&#93;</span> = (byte) 7;<br/>\n    +createNode(zk, npath, byteArray, org.apache.zookeeper.CreateMode.PERSISTENT, acls);<br/>\n    +<br/>\n    +    }<br/>\n    +<br/>\n    +    public static void syncPath(CuratorFramework zk, String path) throws RuntimeException {<br/>\n    +try {\n    +    zk.sync().forPath(Utils.normalizePath(path));\n    +} catch (Exception e) {    +    throw Utils.wrapInRuntime(e);    +}\n<p>    +    }<br/>\n    +<br/>\n    +    public static void addListener(CuratorFramework zk, ConnectionStateListener listener) </p>\n{\n    +zk.getConnectionStateListenable().addListener(listener);\n    +    }\n<p>    +<br/>\n    +    public static byte[] getData(CuratorFramework zk, String path, boolean watch) throws RuntimeException {<br/>\n    +<br/>\n    +try {<br/>\n    +    String npath = Utils.normalizePath(path);<br/>\n    +    if (existsNode(zk, npath, watch)) {<br/>\n    +if (watch) </p>\n{\n    +    return zk.getData().watched().forPath(npath);\n    +}\n<p> else </p>\n{\n    +    return zk.getData().forPath(npath);\n    +}\n<p>    +    }<br/>\n    +} catch (KeeperException e) </p>\n{\n    +    // this is fine b/c we still have a watch from the successful exists call\n    +}\n<p> catch (Exception e) </p>\n{\n    +    throw Utils.wrapInRuntime(e);\n    +}<br/>\n    +<br/>\n    +return null;<br/>\n    +    }<br/>\n    +<br/>\n    +    public static Integer getVersion(CuratorFramework zk, String path, boolean watch) throws Exception {<br/>\n    +String npath = Utils.normalizePath(path);<br/>\n    +Stat stat = null;<br/>\n    +if (existsNode(zk, npath, watch)) {<br/>\n    +    if (watch) {\n    +stat = zk.checkExists().watched().forPath(Utils.normalizePath(path));\n    +    } else {\n    +stat = zk.checkExists().forPath(Utils.normalizePath(path));\n    +    }<br/>\n    +    return Integer.valueOf(stat.getVersion());<br/>\n    +}<br/>\n    +<br/>\n    +return null;<br/>\n    +    }<br/>\n    +<br/>\n    +    public static List<String> getChildren(CuratorFramework zk, String path, boolean watch) throws RuntimeException {<br/>\n    +<br/>\n    +try {<br/>\n    +    String npath = Utils.normalizePath(path);<br/>\n    +    if (watch) {\n    +return zk.getChildren().watched().forPath(npath);\n    +    } else {\n    +return zk.getChildren().forPath(npath);\n    +    }<br/>\n    +} catch (Exception e) {    +    throw Utils.wrapInRuntime(e);    +}\n<p>    +    }<br/>\n    +<br/>\n    +    // Deletes the state inside the zookeeper for a key, for which the<br/>\n    +    // contents of the key starts with nimbus host port information<br/>\n    +    public static void deleteDodeBlobstore(CuratorFramework zk, String parentPath, String hostPortInfo) throws RuntimeException {<br/>\n    +String parentnPath = Utils.normalizePath(parentPath);<br/>\n    +List<String> childPathList = null;<br/>\n    +if (existsNode(zk, parentnPath, false)) </p>\n{\n    +    childPathList = getChildren(zk, parentnPath, false);\n    +}\n<p>    +for (String child : childPathList) {<br/>\n    +    if (child.startsWith(hostPortInfo)) </p>\n{\n    +LOG.debug(\"deleteNode child \" + child);\n    +deleteNode(zk, parentnPath + \"/\" + child);\n    +    }\n<p>    +}<br/>\n    +    }<br/>\n    +<br/>\n    +    public static Stat setData(CuratorFramework zk, String path, byte[] data) throws RuntimeException {<br/>\n    +<br/>\n    +try </p>\n{\n    +    String npath = Utils.normalizePath(path);\n    +    return zk.setData().forPath(npath, data);\n    +}\n<p> catch (Exception e) </p>\n{\n    +    throw Utils.wrapInRuntime(e);\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    public static boolean exists(CuratorFramework zk, String path, boolean watch) throws RuntimeException </p>\n{\n    +return existsNode(zk, path, watch);\n    +    }\n<p>    +<br/>\n    +    public static NIOServerCnxnFactory mkInprocessZookeeper(String localdir, Integer port) throws IOException, InterruptedException {<br/>\n    +LOG.info(\"Starting inprocess zookeeper at port \" + port + \" and dir \" + localdir);<br/>\n    +File localfile = new File(localdir);<br/>\n    +ZooKeeperServer zk = new ZooKeeperServer(localfile, localfile, 2000);<br/>\n    +<br/>\n    +NIOServerCnxnFactory factory = null;<br/>\n    +int report = 2000;<br/>\n    +int limitPort = 65535;<br/>\n    +if (port != null) </p>\n{\n    +    report = port;\n    +    limitPort = port;\n    +}\n<p>    +while (true) {<br/>\n    +    try </p>\n{\n    +factory = new NIOServerCnxnFactory();\n    +factory.configure(new InetSocketAddress(port), 0);\n    +break;\n    +    }\n<p> catch (BindException e) {<br/>\n    +report++;<br/>\n    +if (report > limitPort) </p>\n{\n    +    throw new RuntimeException(\"No port is available to launch an inprocess zookeeper\");\n    +}\n<p>    +    }<br/>\n    +}<br/>\n    +factory.startup(zk);<br/>\n    +return factory;<br/>\n    +    }<br/>\n    +<br/>\n    +    public static void shutdownInprocessZookeeper(Factory handle) </p>\n{\n    +handle.shutdown();\n    +    }\n<p>    +<br/>\n    +    public static NimbusInfo toNimbusInfo(Participant participant) {<br/>\n    +String id = participant.getId();<br/>\n    +if (StringUtils.isBlank(id)) </p>\n{\n    +    throw new RuntimeException(\"No nimbus leader participant host found, have you started your nimbus hosts?\");\n    +}\n<p>    +NimbusInfo nimbusInfo = NimbusInfo.parse(id);<br/>\n    +nimbusInfo.setLeader(participant.isLeader());<br/>\n    +return nimbusInfo;<br/>\n    +    }<br/>\n    +<br/>\n    +    // Leader latch listener that will be invoked when we either gain or lose leadership<br/>\n    +    public static LeaderLatchListener leaderLatchListenerImpl(Map conf, CuratorFramework zk, LeaderLatch leaderLatch) throws Exception {<br/>\n    +final String hostName = InetAddress.getLocalHost().getCanonicalHostName();<br/>\n    +return new LeaderLatchListener() {<br/>\n    +    @Override<br/>\n    +    public void isLeader() </p>\n{\n    +LOG.info(hostName + \" gained leadership\");\n    +    }\n<p>    +<br/>\n    +    @Override<br/>\n    +    public void notLeader() </p>\n{\n    +LOG.info(hostName + \" lost leadership.\");\n    +    }\n<p>    +};<br/>\n    +    }<br/>\n    +<br/>\n    +    public static ILeaderElector zkLeaderElector(Map conf) throws Exception </p>\n{\n    +List<String> servers = (List<String>) conf.get(Config.STORM_ZOOKEEPER_SERVERS);\n    +Object port = conf.get(Config.STORM_ZOOKEEPER_PORT);\n    +CuratorFramework zk = mkClient(conf, servers, port, \"\", conf);\n    +String leaderLockPath = conf.get(Config.STORM_ZOOKEEPER_ROOT) + \"/leader-lock\";\n    +String id = NimbusInfo.fromConf(conf).toHostPortString();\n    +AtomicReference<LeaderLatch> leaderLatchAtomicReference = new AtomicReference<>(new LeaderLatch(zk, leaderLockPath, id));\n    +AtomicReference<LeaderLatchListener> leaderLatchListenerAtomicReference =\n    +new AtomicReference<>(leaderLatchListenerImpl(conf, zk, leaderLatchAtomicReference.get()));\n    +return new LeaderElectorImp(conf, servers, zk, leaderLockPath, id, leaderLatchAtomicReference, leaderLatchListenerAtomicReference);\n    +    }\n<p>    +<br/>\n    +    //To do modify @return once don't need persistentArrayMap<br/>\n    +    public static PersistentArrayMap getDataWithVersion(CuratorFramework zk, String path, boolean watch) {<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    yes. I will update APersistentMap， which is the same with \" APersistentMap get_data_with_version(String path, boolean watch) \". If I port the zookeeper-state-factory.clj to java, I think it should be a Map.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612650053/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612650060","html_url":"https://github.com/apache/storm/issues/5094#issuecomment-2612650060","issue_url":"https://api.github.com/repos/apache/storm/issues/5094","id":2612650060,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NTAwNjA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-27T12:31:32Z","updated_at":"2025-01-24T14:22:34Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user hustfxj commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1047#discussion_r50977197\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1047#discussion_r50977197</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/zookeeper/Zookeeper.java &#8212;<br/>\n    @@ -0,0 +1,355 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.zookeeper;<br/>\n    +<br/>\n    +import clojure.lang.PersistentArrayMap;<br/>\n    +import clojure.lang.RT;<br/>\n    +import org.apache.commons.lang.StringUtils;<br/>\n    +import org.apache.curator.framework.CuratorFramework;<br/>\n    +import org.apache.curator.framework.api.CuratorEvent;<br/>\n    +import org.apache.curator.framework.api.CuratorEventType;<br/>\n    +import org.apache.curator.framework.api.CuratorListener;<br/>\n    +import org.apache.curator.framework.api.UnhandledErrorListener;<br/>\n    +import org.apache.curator.framework.recipes.leader.LeaderLatch;<br/>\n    +import org.apache.curator.framework.recipes.leader.LeaderLatchListener;<br/>\n    +import org.apache.curator.framework.recipes.leader.Participant;<br/>\n    +import org.apache.curator.framework.state.ConnectionStateListener;<br/>\n    +import org.apache.storm.Config;<br/>\n    +import org.apache.storm.callback.DefaultWatcherCallBack;<br/>\n    +import org.apache.storm.callback.WatcherCallBack;<br/>\n    +import org.apache.storm.nimbus.ILeaderElector;<br/>\n    +import org.apache.storm.nimbus.NimbusInfo;<br/>\n    +import org.apache.storm.utils.Utils;<br/>\n    +import org.apache.storm.utils.ZookeeperAuthInfo;<br/>\n    +import org.apache.zookeeper.KeeperException;<br/>\n    +import org.apache.zookeeper.WatchedEvent;<br/>\n    +import org.apache.zookeeper.data.ACL;<br/>\n    +import org.apache.zookeeper.data.Stat;<br/>\n    +import org.apache.zookeeper.server.NIOServerCnxnFactory;<br/>\n    +import org.apache.zookeeper.server.ZooKeeperServer;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +import java.io.File;<br/>\n    +import java.io.IOException;<br/>\n    +import java.net.BindException;<br/>\n    +import java.net.InetAddress;<br/>\n    +import java.net.InetSocketAddress;<br/>\n    +import java.util.List;<br/>\n    +import java.util.Map;<br/>\n    +import java.util.concurrent.atomic.AtomicReference;<br/>\n    +<br/>\n    +public class Zookeeper {<br/>\n    +<br/>\n    +    private static Logger LOG = LoggerFactory.getLogger(Zookeeper.class);<br/>\n    +<br/>\n    +    public static CuratorFramework mkClient(Map conf, List<String> servers, Object port, String root) </p>\n{\n    +return mkClient(conf, servers, port, root, new DefaultWatcherCallBack());\n    +    }\n<p>    +<br/>\n    +    public static CuratorFramework mkClient(Map conf, List<String> servers, Object port, Map authConf) </p>\n{\n    +return mkClient(conf, servers, port, \"\", new DefaultWatcherCallBack(), authConf);\n    +    }\n<p>    +<br/>\n    +    public static CuratorFramework mkClient(Map conf, List<String> servers, Object port, String root, Map authConf) </p>\n{\n    +return mkClient(conf, servers, port, root, new DefaultWatcherCallBack(), authConf);\n    +    }\n<p>    +<br/>\n    +    public static CuratorFramework mkClient(Map conf, List<String> servers, Object port, String root, final WatcherCallBack watcher, Map authConf) {<br/>\n    +CuratorFramework fk;<br/>\n    +if (authConf != null) </p>\n{\n    +    fk = Utils.newCurator(conf, servers, port, root, new ZookeeperAuthInfo(authConf));\n    +}\n<p> else </p>\n{\n    +    fk = Utils.newCurator(conf, servers, port, root);\n    +}\n<p>    +<br/>\n    +fk.getCuratorListenable().addListener(new CuratorListener() {<br/>\n    +    @Override<br/>\n    +    public void eventReceived(CuratorFramework _fk, CuratorEvent e) throws Exception {<br/>\n    +if (e.getType().equals(CuratorEventType.WATCHED)) </p>\n{\n    +    WatchedEvent event = e.getWatchedEvent();\n    +\n    +    watcher.execute(event.getState(), event.getType(), event.getPath());\n    +}\n<p>    +<br/>\n    +    }<br/>\n    +});<br/>\n    +fk.start();<br/>\n    +return fk;<br/>\n    +    }<br/>\n    +<br/>\n    +    /**<br/>\n    +     * connect ZK, register Watch/unhandle Watch<br/>\n    +     *<br/>\n    +     * @return<br/>\n    +     */<br/>\n    +    public static CuratorFramework mkClient(Map conf, List<String> servers, Object port, String root, final WatcherCallBack watcher) </p>\n{\n    +\n    +return mkClient(conf, servers, port, root, watcher, null);\n    +    }\n<p>    +<br/>\n    +    public static String createNode(CuratorFramework zk, String path, byte[] data, org.apache.zookeeper.CreateMode mode, List<ACL> acls)<br/>\n    +    throws RuntimeException {<br/>\n    +<br/>\n    +String ret = null;<br/>\n    +try </p>\n{\n    +    String npath = Utils.normalizePath(path);\n    +    ret = zk.create().withMode(mode).withACL(acls).forPath(npath, data);\n    +}\n<p> catch (Exception e) </p>\n{\n    +    throw Utils.wrapInRuntime(e);\n    +}<br/>\n    +return ret;<br/>\n    +    }<br/>\n    +<br/>\n    +    public static String createNode(CuratorFramework zk, String path, byte[] data, List<ACL> acls) throws RuntimeException {\n    +return createNode(zk, path, data, org.apache.zookeeper.CreateMode.PERSISTENT, acls);\n    +    }<br/>\n    +<br/>\n    +    public static boolean existsNode(CuratorFramework zk, String path, boolean watch) throws RuntimeException {<br/>\n    +Stat stat = null;<br/>\n    +try {<br/>\n    +    if (watch) {\n    +stat = zk.checkExists().watched().forPath(Utils.normalizePath(path));\n    +    } else {\n    +stat = zk.checkExists().forPath(Utils.normalizePath(path));\n    +    }<br/>\n    +} catch (Exception e) {    +    throw Utils.wrapInRuntime(e);    +}\n<p>    +<br/>\n    +return stat != null;<br/>\n    +    }<br/>\n    +<br/>\n    +    public static void deleteNode(CuratorFramework zk, String path) throws RuntimeException {<br/>\n    +try {<br/>\n    +    String npath = Utils.normalizePath(path);<br/>\n    +    if (existsNode(zk, npath, false)) </p>\n{\n    +zk.delete().deletingChildrenIfNeeded().forPath(Utils.normalizePath(path));\n    +    }\n<p>    +<br/>\n    +} catch (KeeperException.NoNodeException e) </p>\n{\n    +    LOG.info(\"exception\", e);\n    +}\n<p> catch (Exception e) </p>\n{\n    +    throw Utils.wrapInRuntime(e);\n    +}<br/>\n    +    }<br/>\n    +<br/>\n    +    public static void mkdirs(CuratorFramework zk, String path, List<ACL> acls) throws RuntimeException {<br/>\n    +<br/>\n    +String npath = Utils.normalizePath(path);<br/>\n    +if (npath.equals(\"/\")) {\n    +    return;\n    +}<br/>\n    +if (existsNode(zk, npath, false)) {    +    return;    +}<br/>\n    +byte[] byteArray = new byte<span class=\"error\">&#91;1&#93;</span>;<br/>\n    +byteArray<span class=\"error\">&#91;0&#93;</span> = (byte) 7;<br/>\n    +createNode(zk, npath, byteArray, org.apache.zookeeper.CreateMode.PERSISTENT, acls);<br/>\n    +<br/>\n    +    }<br/>\n    +<br/>\n    +    public static void syncPath(CuratorFramework zk, String path) throws RuntimeException {<br/>\n    +try {\n    +    zk.sync().forPath(Utils.normalizePath(path));\n    +} catch (Exception e) {    +    throw Utils.wrapInRuntime(e);    +}\n<p>    +    }<br/>\n    +<br/>\n    +    public static void addListener(CuratorFramework zk, ConnectionStateListener listener) </p>\n{\n    +zk.getConnectionStateListenable().addListener(listener);\n    +    }\n<p>    +<br/>\n    +    public static byte[] getData(CuratorFramework zk, String path, boolean watch) throws RuntimeException {<br/>\n    +<br/>\n    +try {<br/>\n    +    String npath = Utils.normalizePath(path);<br/>\n    +    if (existsNode(zk, npath, watch)) {<br/>\n    +if (watch) </p>\n{\n    +    return zk.getData().watched().forPath(npath);\n    +}\n<p> else </p>\n{\n    +    return zk.getData().forPath(npath);\n    +}\n<p>    +    }<br/>\n    +} catch (KeeperException e) </p>\n{\n    +    // this is fine b/c we still have a watch from the successful exists call\n    +}\n<p> catch (Exception e) </p>\n{\n    +    throw Utils.wrapInRuntime(e);\n    +}\n<p>    +<br/>\n    +return null;<br/>\n    +    }<br/>\n    +<br/>\n    +    public static Integer getVersion(CuratorFramework zk, String path, boolean watch) throws Exception {<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    but  \" forPath \"  throw Exception, what do you mean?</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612650060/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612650062","html_url":"https://github.com/apache/storm/issues/5094#issuecomment-2612650062","issue_url":"https://api.github.com/repos/apache/storm/issues/5094","id":2612650062,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NTAwNjI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-27T12:40:58Z","updated_at":"2025-01-24T14:22:34Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user hustfxj commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1047#discussion_r50978024\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1047#discussion_r50978024</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/zookeeper/LeaderElectorImp.java &#8212;<br/>\n    @@ -0,0 +1,135 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.zookeeper;<br/>\n    +<br/>\n    +import org.apache.curator.framework.CuratorFramework;<br/>\n    +import org.apache.curator.framework.recipes.leader.LeaderLatch;<br/>\n    +import org.apache.curator.framework.recipes.leader.LeaderLatchListener;<br/>\n    +import org.apache.curator.framework.recipes.leader.Participant;<br/>\n    +import org.apache.storm.nimbus.ILeaderElector;<br/>\n    +import org.apache.storm.nimbus.NimbusInfo;<br/>\n    +import org.apache.storm.utils.Utils;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +import java.io.IOException;<br/>\n    +import java.util.ArrayList;<br/>\n    +import java.util.Collection;<br/>\n    +import java.util.List;<br/>\n    +import java.util.Map;<br/>\n    +import java.util.concurrent.atomic.AtomicReference;<br/>\n    +<br/>\n    +<br/>\n    +public class LeaderElectorImp implements ILeaderElector {<br/>\n    +    private static Logger LOG = LoggerFactory.getLogger(LeaderElectorImp.class);<br/>\n    +    private Map conf;<br/>\n    +    private List<String> servers;<br/>\n    +    private CuratorFramework zk;<br/>\n    +    private String leaderlockPath;<br/>\n    +    private String id;<br/>\n    +    private AtomicReference<LeaderLatch> leaderLatch;<br/>\n    +    private AtomicReference<LeaderLatchListener> leaderLatchListener;<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    ok</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612650062/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/175653548","html_url":"https://github.com/apache/storm/pull/1047#issuecomment-175653548","issue_url":"https://api.github.com/repos/apache/storm/issues/1047","id":175653548,"node_id":"MDEyOklzc3VlQ29tbWVudDE3NTY1MzU0OA==","user":{"login":"hustfxj","id":7270212,"node_id":"MDQ6VXNlcjcyNzAyMTI=","avatar_url":"https://avatars.githubusercontent.com/u/7270212?v=4","gravatar_id":"","url":"https://api.github.com/users/hustfxj","html_url":"https://github.com/hustfxj","followers_url":"https://api.github.com/users/hustfxj/followers","following_url":"https://api.github.com/users/hustfxj/following{/other_user}","gists_url":"https://api.github.com/users/hustfxj/gists{/gist_id}","starred_url":"https://api.github.com/users/hustfxj/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hustfxj/subscriptions","organizations_url":"https://api.github.com/users/hustfxj/orgs","repos_url":"https://api.github.com/users/hustfxj/repos","events_url":"https://api.github.com/users/hustfxj/events{/privacy}","received_events_url":"https://api.github.com/users/hustfxj/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-27T14:21:02Z","updated_at":"2016-01-27T14:21:02Z","author_association":"CONTRIBUTOR","body":"Thanks @revans2 @wuchong @redsanket  for all your thorough comments,  I update the PR. \n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/175653548/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612650067","html_url":"https://github.com/apache/storm/issues/5094#issuecomment-2612650067","issue_url":"https://api.github.com/repos/apache/storm/issues/5094","id":2612650067,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NTAwNjc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-27T14:21:03Z","updated_at":"2025-01-24T14:22:34Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user hustfxj commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1047#issuecomment-175653548\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1047#issuecomment-175653548</a></p>\n\n<p>    Thanks @revans2 @wuchong @redsanket  for all your thorough comments,  I update the PR. </p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612650067/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612650074","html_url":"https://github.com/apache/storm/issues/5094#issuecomment-2612650074","issue_url":"https://api.github.com/repos/apache/storm/issues/5094","id":2612650074,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NTAwNzQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-27T14:29:22Z","updated_at":"2025-01-24T14:22:34Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1047#discussion_r50989943\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1047#discussion_r50989943</a></p>\n\n<p>    &#8212; Diff: storm-core/test/clj/org/apache/storm/nimbus_test.clj &#8212;<br/>\n    @@ -30,6 +30,7 @@<br/>\n       (:import <span class=\"error\">&#91;java.util HashMap&#93;</span>)<br/>\n       (:import <span class=\"error\">&#91;java.io File&#93;</span>)<br/>\n       (:import <span class=\"error\">&#91;org.apache.storm.utils Time Utils&#93;</span>)<br/>\n    +  (:import <span class=\"error\">&#91;org.apache.storm.zookeeper Zookeeper&#93;</span>)<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Not sure why we need this.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612650074/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612650077","html_url":"https://github.com/apache/storm/issues/5094#issuecomment-2612650077","issue_url":"https://api.github.com/repos/apache/storm/issues/5094","id":2612650077,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NTAwNzc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-27T14:29:30Z","updated_at":"2025-01-24T14:22:34Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1047#discussion_r50989965\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1047#discussion_r50989965</a></p>\n\n<p>    &#8212; Diff: storm-core/test/jvm/org/apache/storm/blobstore/BlobStoreTest.java &#8212;<br/>\n    @@ -1,3 +1,4 @@<br/>\n    +<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Not sure about this one either.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612650077/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612650080","html_url":"https://github.com/apache/storm/issues/5094#issuecomment-2612650080","issue_url":"https://api.github.com/repos/apache/storm/issues/5094","id":2612650080,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NTAwODA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-27T14:35:39Z","updated_at":"2025-01-24T14:22:35Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1047#discussion_r50990747\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1047#discussion_r50990747</a></p>\n\n<p>    &#8212; Diff: storm-core/test/clj/org/apache/storm/cluster_test.clj &#8212;<br/>\n    @@ -308,11 +309,11 @@</p>\n\n<p>     (deftest test-cluster-state-default-acls<br/>\n       (testing \"The default ACLs are empty.\"</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>(stubbing [zk/mkdirs nil<br/>\n    +    (stubbing [Zookeeper/mkdirs nil\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    You cannot stub a java static function.  It only works on clojure functions.  Please take a look at how we did this in #1030 and #1043.  It is not the cleanest thing, but it does work until we can move to an architecture that is much more java like.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612650080/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612650084","html_url":"https://github.com/apache/storm/issues/5094#issuecomment-2612650084","issue_url":"https://api.github.com/repos/apache/storm/issues/5094","id":2612650084,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NTAwODQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-27T14:37:26Z","updated_at":"2025-01-24T14:22:35Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1047#discussion_r50990989\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1047#discussion_r50990989</a></p>\n\n<p>    &#8212; Diff: storm-core/test/clj/org/apache/storm/cluster_test.clj &#8212;<br/>\n    @@ -308,11 +309,11 @@</p>\n\n<p>     (deftest test-cluster-state-default-acls<br/>\n       (testing \"The default ACLs are empty.\"</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>(stubbing [zk/mkdirs nil<br/>\n    +    (stubbing [Zookeeper/mkdirs nil\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    You have the added issue that you will probably have to use mockito to validate the calls.  If you want me to put together a pull request to your branch to fix this, because it may not be that obvious please let me know and I will.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612650084/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612650089","html_url":"https://github.com/apache/storm/issues/5094#issuecomment-2612650089","issue_url":"https://api.github.com/repos/apache/storm/issues/5094","id":2612650089,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NTAwODk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-27T14:51:31Z","updated_at":"2025-01-24T14:22:35Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1047#discussion_r50992981\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1047#discussion_r50992981</a></p>\n\n<p>    &#8212; Diff: storm-core/src/clj/org/apache/storm/testing.clj &#8212;<br/>\n    @@ -288,11 +289,11 @@<br/>\n     (defmacro with-inprocess-zookeeper<br/>\n       <span class=\"error\">&#91;port-sym & body&#93;</span><br/>\n       `(with-local-tmp <span class=\"error\">&#91;tmp#&#93;</span></p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>(let <a href=\"#] (zk/mk-inprocess-zookeeper tmp#)\" target=\"_blank\" rel=\"noopener\">[~port-sym zks#] (zk/mk-inprocess-zookeeper tmp#)</a><br/>\n    +   (let <a href=\"#] (Zookeeper/mkInprocessZookeeper tmp# nil)\" target=\"_blank\" rel=\"noopener\">[~port-sym zks#] (Zookeeper/mkInprocessZookeeper tmp# nil)</a>\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    This is not a drop in replacement because mkInprocessZookeeper is returning just zks# not ~port-sym.  You might be able to make this work by changing it to.</p>\n\n<p>    ```<br/>\n       (let [zks# (Zookeeper/mkInprocessZookeeper tmp# nil)<br/>\n      ~port-sym (.getLocalPort zks#)]<br/>\n    ```</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612650089/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612650095","html_url":"https://github.com/apache/storm/issues/5094#issuecomment-2612650095","issue_url":"https://api.github.com/repos/apache/storm/issues/5094","id":2612650095,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NTAwOTU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-27T14:53:53Z","updated_at":"2025-01-24T14:22:35Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1047#discussion_r50993291\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1047#discussion_r50993291</a></p>\n\n<p>    &#8212; Diff: storm-core/src/clj/org/apache/storm/testing.clj &#8212;<br/>\n    @@ -134,7 +135,7 @@<br/>\n     (defnk mk-local-storm-cluster <span class=\"error\">&#91;:supervisors 2 :ports-per-supervisor 3 :daemon-conf {} :inimbus nil :supervisor-slot-port-min 1024 :nimbus-daemon false&#93;</span><br/>\n       (let [zk-tmp (local-temp-path)<br/>\n     <span class=\"error\">&#91;zk-port zk-handle&#93;</span> (if-not (contains? daemon-conf STORM-ZOOKEEPER-SERVERS)</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>(zk/mk-inprocess-zookeeper zk-tmp))<br/>\n    +      (Zookeeper/mkInprocessZookeeper zk-tmp nil))\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    This also needs to be updated similarly to below.</p>\n\n<p>    ```<br/>\n    (let [zk-tmp (local-temp-path)<br/>\n   zk-handle (if-not (contains? daemon-conf STORM-ZOOKEEPER-SERVERS)<br/>\n      (Zookeeper/mkInprocessZookeeper zk-tmp nil))<br/>\n   zk-port (.getLocalPort zk-handle)<br/>\n    ```</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612650095/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/175667437","html_url":"https://github.com/apache/storm/pull/1048#issuecomment-175667437","issue_url":"https://api.github.com/repos/apache/storm/issues/1048","id":175667437,"node_id":"MDEyOklzc3VlQ29tbWVudDE3NTY2NzQzNw==","user":{"login":"kishorvpatil","id":6090397,"node_id":"MDQ6VXNlcjYwOTAzOTc=","avatar_url":"https://avatars.githubusercontent.com/u/6090397?v=4","gravatar_id":"","url":"https://api.github.com/users/kishorvpatil","html_url":"https://github.com/kishorvpatil","followers_url":"https://api.github.com/users/kishorvpatil/followers","following_url":"https://api.github.com/users/kishorvpatil/following{/other_user}","gists_url":"https://api.github.com/users/kishorvpatil/gists{/gist_id}","starred_url":"https://api.github.com/users/kishorvpatil/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kishorvpatil/subscriptions","organizations_url":"https://api.github.com/users/kishorvpatil/orgs","repos_url":"https://api.github.com/users/kishorvpatil/repos","events_url":"https://api.github.com/users/kishorvpatil/events{/privacy}","received_events_url":"https://api.github.com/users/kishorvpatil/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-27T14:55:51Z","updated_at":"2016-01-27T14:55:51Z","author_association":"CONTRIBUTOR","body":"This needs to go on 1.x-branch as well.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/175667437/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612864335","html_url":"https://github.com/apache/storm/issues/5338#issuecomment-2612864335","issue_url":"https://api.github.com/repos/apache/storm/issues/5338","id":2612864335,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4NjQzMzU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-27T14:55:52Z","updated_at":"2025-01-24T15:58:43Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user kishorvpatil commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1048#issuecomment-175667437\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1048#issuecomment-175667437</a></p>\n\n<p>    This needs to go on 1.x-branch as well.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612864335/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612650099","html_url":"https://github.com/apache/storm/issues/5094#issuecomment-2612650099","issue_url":"https://api.github.com/repos/apache/storm/issues/5094","id":2612650099,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NTAwOTk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-27T14:59:50Z","updated_at":"2025-01-24T14:22:35Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1047#discussion_r50994203\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1047#discussion_r50994203</a></p>\n\n<p>    &#8212; Diff: storm-core/test/clj/org/apache/storm/nimbus_test.clj &#8212;<br/>\n    @@ -30,6 +30,7 @@<br/>\n       (:import <span class=\"error\">&#91;java.util HashMap&#93;</span>)<br/>\n       (:import <span class=\"error\">&#91;java.io File&#93;</span>)<br/>\n       (:import <span class=\"error\">&#91;org.apache.storm.utils Time Utils&#93;</span>)<br/>\n    +  (:import <span class=\"error\">&#91;org.apache.storm.zookeeper Zookeeper&#93;</span>)<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    OK I see that you missed updating zk-leader-elector.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612650099/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612650104","html_url":"https://github.com/apache/storm/issues/5094#issuecomment-2612650104","issue_url":"https://api.github.com/repos/apache/storm/issues/5094","id":2612650104,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NTAxMDQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-27T15:00:39Z","updated_at":"2025-01-24T14:22:35Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1047#discussion_r50994369\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1047#discussion_r50994369</a></p>\n\n<p>    &#8212; Diff: storm-core/test/clj/org/apache/storm/nimbus_test.clj &#8212;<br/>\n    @@ -30,6 +30,7 @@<br/>\n       (:import <span class=\"error\">&#91;java.util HashMap&#93;</span>)<br/>\n       (:import <span class=\"error\">&#91;java.io File&#93;</span>)<br/>\n       (:import <span class=\"error\">&#91;org.apache.storm.utils Time Utils&#93;</span>)<br/>\n    +  (:import <span class=\"error\">&#91;org.apache.storm.zookeeper Zookeeper&#93;</span>)<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Again this is for stubbing, so if you want some help with this please let me know.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612650104/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612865120","html_url":"https://github.com/apache/storm/issues/5341#issuecomment-2612865120","issue_url":"https://api.github.com/repos/apache/storm/issues/5341","id":2612865120,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4NjUxMjA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-27T15:01:58Z","updated_at":"2025-01-24T15:59:03Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>GitHub user hustfxj opened a pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1051\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1051</a></p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1506\" title=\"It&#39;s better to  be Integer about port of STORM_ZOOKEEPER_PORT&TRANSACTIONAL_ZOOKEEPER_PORT \" class=\"issue-link\" data-issue-key=\"STORM-1506\"><del>STORM-1506</del></a> It's better to be Integer about port of STORM_ZOOKEEPER_PORT&TRANSACTIONAL_ZOOKEEPER_PORT</p>\n\n<p>    It's better to replace Object by Integer about port of STORM_ZOOKEEPER_PORT&TRANSACTIONAL_ZOOKEEPER_PORT</p>\n\n\n<p>You can merge this pull request into a Git repository by running:</p>\n\n<p>    $ git pull <a href=\"https://github.com/hustfxj/storm\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/hustfxj/storm</a> Integerport</p>\n\n<p>Alternatively you can review and apply these changes as the patch at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1051.patch\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1051.patch</a></p>\n\n<p>To close this pull request, make a commit to your master/trunk branch<br/>\nwith (at least) the following in the commit message:</p>\n\n<p>    This closes #1051</p>\n\n<hr />\n<p>commit b2166b2de36521f92cb9e739313bbef2531fbb56<br/>\nAuthor: xiaojian.fxj <xiaojian.fxj@alibaba-inc.com><br/>\nDate:   2016-01-27T14:41:54Z</p>\n\n<p>    replace 'Object port' by 'Integer port' about TRANSACTIONAL_ZOOKEEPER_PORT and STORM_ZOOKEEPER_PORT</p>\n\n<hr />","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612865120/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612650108","html_url":"https://github.com/apache/storm/issues/5094#issuecomment-2612650108","issue_url":"https://api.github.com/repos/apache/storm/issues/5094","id":2612650108,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NTAxMDg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-27T15:14:07Z","updated_at":"2025-01-24T14:22:35Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user hustfxj commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1047#discussion_r50996403\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1047#discussion_r50996403</a></p>\n\n<p>    &#8212; Diff: storm-core/test/clj/org/apache/storm/nimbus_test.clj &#8212;<br/>\n    @@ -30,6 +30,7 @@<br/>\n       (:import <span class=\"error\">&#91;java.util HashMap&#93;</span>)<br/>\n       (:import <span class=\"error\">&#91;java.io File&#93;</span>)<br/>\n       (:import <span class=\"error\">&#91;org.apache.storm.utils Time Utils&#93;</span>)<br/>\n    +  (:import <span class=\"error\">&#91;org.apache.storm.zookeeper Zookeeper&#93;</span>)<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    yes， I don't know how to be better to port zk-leader-elector by java at nimbus_test.clj</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612650108/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612650112","html_url":"https://github.com/apache/storm/issues/5094#issuecomment-2612650112","issue_url":"https://api.github.com/repos/apache/storm/issues/5094","id":2612650112,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NTAxMTI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-27T15:16:00Z","updated_at":"2025-01-24T14:22:35Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user hustfxj commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1047#discussion_r50996709\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1047#discussion_r50996709</a></p>\n\n<p>    &#8212; Diff: storm-core/test/clj/org/apache/storm/cluster_test.clj &#8212;<br/>\n    @@ -308,11 +309,11 @@</p>\n\n<p>     (deftest test-cluster-state-default-acls<br/>\n       (testing \"The default ACLs are empty.\"</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>(stubbing [zk/mkdirs nil<br/>\n    +    (stubbing [Zookeeper/mkdirs nil\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    ok , thanks.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612650112/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612650117","html_url":"https://github.com/apache/storm/issues/5094#issuecomment-2612650117","issue_url":"https://api.github.com/repos/apache/storm/issues/5094","id":2612650117,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NTAxMTc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-27T15:18:23Z","updated_at":"2025-01-24T14:22:35Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1047#discussion_r50997086\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1047#discussion_r50997086</a></p>\n\n<p>    &#8212; Diff: storm-core/src/clj/org/apache/storm/zookeeper.clj &#8212;<br/>\n    @@ -57,15 +46,15 @@<br/>\n:auth-conf nil]<br/>\n       (let <span class=\"error\">&#91;fk (Utils/newCurator conf servers port root (when auth-conf (ZookeeperAuthInfo. auth-conf)))&#93;</span><br/>\n (.. fk</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>(getCuratorListenable)</li>\n\t<li>(addListener</li>\n\t<li>(reify CuratorListener</li>\n\t<li>(^void eventReceived <span class=\"error\">&#91;this ^CuratorFramework _fk ^CuratorEvent e&#93;</span></li>\n\t<li>(when (= (.getType e) CuratorEventType/WATCHED)</li>\n\t<li>(let <span class=\"error\">&#91;^WatchedEvent event (.getWatchedEvent e)&#93;</span></li>\n\t<li>(watcher (zk-keeper-states (.getState event))</li>\n\t<li>(zk-event-types (.getType event))</li>\n\t<li>(.getPath event))))))))<br/>\n    +      (getCuratorListenable)<br/>\n    +      (addListener<br/>\n    +(reify CuratorListener<br/>\n    +  (^void eventReceived <span class=\"error\">&#91;this ^CuratorFramework _fk ^CuratorEvent e&#93;</span><br/>\n    +    (when (= (.getType e) CuratorEventType/WATCHED)<br/>\n    +      (let <span class=\"error\">&#91;^WatchedEvent event (.getWatchedEvent e)&#93;</span><br/>\n    +(watcher (ZkKeeperStates/getStateName (.getState event))<br/>\n    +  (ZkEventTypes/getTypeName (.getType event))\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    These are returning Strings, not symbols. We probably want to just return the enum itself.  Also anyone who is using those symbols needs to be updated.  When I run the tests I am getting NPEs because of this.</p>\n\n<p>    It looks like you will mostly need to update </p>\n\n<p>    ./storm-core/src/clj/org/apache/storm/cluster_state/zookeeper_state_factory.clj</p>\n\n<p>    and</p>\n\n<p>    ./storm-core/test/clj/org/apache/storm/cluster_test.clj</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612650117/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/175689962","html_url":"https://github.com/apache/storm/pull/1047#issuecomment-175689962","issue_url":"https://api.github.com/repos/apache/storm/issues/1047","id":175689962,"node_id":"MDEyOklzc3VlQ29tbWVudDE3NTY4OTk2Mg==","user":{"login":"revans2","id":3441321,"node_id":"MDQ6VXNlcjM0NDEzMjE=","avatar_url":"https://avatars.githubusercontent.com/u/3441321?v=4","gravatar_id":"","url":"https://api.github.com/users/revans2","html_url":"https://github.com/revans2","followers_url":"https://api.github.com/users/revans2/followers","following_url":"https://api.github.com/users/revans2/following{/other_user}","gists_url":"https://api.github.com/users/revans2/gists{/gist_id}","starred_url":"https://api.github.com/users/revans2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/revans2/subscriptions","organizations_url":"https://api.github.com/users/revans2/orgs","repos_url":"https://api.github.com/users/revans2/repos","events_url":"https://api.github.com/users/revans2/events{/privacy}","received_events_url":"https://api.github.com/users/revans2/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-27T15:30:42Z","updated_at":"2016-01-27T15:30:42Z","author_association":"CONTRIBUTOR","body":"Even with all of those changes to make the tests compile I am seeing test failures.  Please make sure that \n\n```\nmvn clean -Prat -Pall-test integration-test\n```\n\npasses before putting up a pull request.  If you run into issues and cannot translate all of zookeeper.clj to java that is fine for a first pass others can help with different parts, but we want to be sure that we never break the build or it will take forever to stabilize later on.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/175689962/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612650123","html_url":"https://github.com/apache/storm/issues/5094#issuecomment-2612650123","issue_url":"https://api.github.com/repos/apache/storm/issues/5094","id":2612650123,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NTAxMjM=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-27T15:30:43Z","updated_at":"2025-01-24T14:22:36Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1047#issuecomment-175689962\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1047#issuecomment-175689962</a></p>\n\n<p>    Even with all of those changes to make the tests compile I am seeing test failures.  Please make sure that </p>\n\n<p>    ```<br/>\n    mvn clean -Prat -Pall-test integration-test<br/>\n    ```</p>\n\n<p>    passes before putting up a pull request.  If you run into issues and cannot translate all of zookeeper.clj to java that is fine for a first pass others can help with different parts, but we want to be sure that we never break the build or it will take forever to stabilize later on.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612650123/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/175694846","html_url":"https://github.com/apache/storm/pull/1030#issuecomment-175694846","issue_url":"https://api.github.com/repos/apache/storm/issues/1030","id":175694846,"node_id":"MDEyOklzc3VlQ29tbWVudDE3NTY5NDg0Ng==","user":{"login":"zhuoliu","id":11683054,"node_id":"MDQ6VXNlcjExNjgzMDU0","avatar_url":"https://avatars.githubusercontent.com/u/11683054?v=4","gravatar_id":"","url":"https://api.github.com/users/zhuoliu","html_url":"https://github.com/zhuoliu","followers_url":"https://api.github.com/users/zhuoliu/followers","following_url":"https://api.github.com/users/zhuoliu/following{/other_user}","gists_url":"https://api.github.com/users/zhuoliu/gists{/gist_id}","starred_url":"https://api.github.com/users/zhuoliu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zhuoliu/subscriptions","organizations_url":"https://api.github.com/users/zhuoliu/orgs","repos_url":"https://api.github.com/users/zhuoliu/repos","events_url":"https://api.github.com/users/zhuoliu/events{/privacy}","received_events_url":"https://api.github.com/users/zhuoliu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-27T15:43:15Z","updated_at":"2016-01-27T15:43:15Z","author_association":"NONE","body":"Hi @knusbaum , I addressed your comments. Could you check back on this one?\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/175694846/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612643927","html_url":"https://github.com/apache/storm/issues/5064#issuecomment-2612643927","issue_url":"https://api.github.com/repos/apache/storm/issues/5064","id":2612643927,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NDM5Mjc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-27T15:43:16Z","updated_at":"2025-01-24T14:19:54Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user zhuoliu commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1030#issuecomment-175694846\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1030#issuecomment-175694846</a></p>\n\n<p>    Hi @knusbaum , I addressed your comments. Could you check back on this one?</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612643927/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612864434","html_url":"https://github.com/apache/storm/issues/5339#issuecomment-2612864434","issue_url":"https://api.github.com/repos/apache/storm/issues/5339","id":2612864434,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4NjQ0MzQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-27T16:54:07Z","updated_at":"2025-01-24T15:58:46Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>GitHub user dossett opened a pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1052\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1052</a></p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1504\" title=\"AvroGenericRecordBolt will not work in a topology with multiple workers\" class=\"issue-link\" data-issue-key=\"STORM-1504\"><del>STORM-1504</del></a>: Add Serializer and instruction for AvroGenericRecordBolt</p>\n\n<p>    This was new for me, so some questions I have:</p>\n\n<ul class=\"alternate\" type=\"square\">\n\t<li>Would be better to automatically register this serializer instead of providing developer instructions?</li>\n\t<li>What's the best practice for exception handling in a serializer? Throwing a RunTimeException seemed like the best option.</li>\n</ul>\n\n\n<p>    Provided this PR is accepted, I would also vote for backporting this to 1.0.0 since the AvroGenericRecordBolt is unusable without it in a multi-worker topology.</p>\n\n\n<p>You can merge this pull request into a Git repository by running:</p>\n\n<p>    $ git pull <a href=\"https://github.com/dossett/storm\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/dossett/storm</a> <a href=\"https://issues.apache.org/jira/browse/STORM-1504\" title=\"AvroGenericRecordBolt will not work in a topology with multiple workers\" class=\"issue-link\" data-issue-key=\"STORM-1504\"><del>STORM-1504</del></a></p>\n\n<p>Alternatively you can review and apply these changes as the patch at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1052.patch\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1052.patch</a></p>\n\n<p>To close this pull request, make a commit to your master/trunk branch<br/>\nwith (at least) the following in the commit message:</p>\n\n<p>    This closes #1052</p>\n\n<hr />\n<p>commit eda0bfa07abe07d2b77a42e3f9496ac55959c909<br/>\nAuthor: Aaron Dossett <aaron.dossett@target.com><br/>\nDate:   2016-01-27T16:49:19Z</p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1504\" title=\"AvroGenericRecordBolt will not work in a topology with multiple workers\" class=\"issue-link\" data-issue-key=\"STORM-1504\"><del>STORM-1504</del></a>: Add Serializer and instruction for AvroGenericRecordBolt</p>\n\n<hr />","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612864434/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612864438","html_url":"https://github.com/apache/storm/issues/5339#issuecomment-2612864438","issue_url":"https://api.github.com/repos/apache/storm/issues/5339","id":2612864438,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4NjQ0Mzg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-27T18:20:51Z","updated_at":"2025-01-24T15:58:46Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user abhishekagarwal87 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1052#discussion_r51025554\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1052#discussion_r51025554</a></p>\n\n<p>    &#8212; Diff: external/storm-hdfs/src/main/java/org/apache/storm/hdfs/common/AvroGenericSerializer.java &#8212;<br/>\n    @@ -0,0 +1,70 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.hdfs.common;<br/>\n    +<br/>\n    +import com.esotericsoftware.kryo.Kryo;<br/>\n    +import com.esotericsoftware.kryo.Serializer;<br/>\n    +import com.esotericsoftware.kryo.io.Input;<br/>\n    +import com.esotericsoftware.kryo.io.Output;<br/>\n    +import org.apache.avro.Schema;<br/>\n    +import org.apache.avro.generic.GenericContainer;<br/>\n    +import org.apache.avro.generic.GenericDatumReader;<br/>\n    +import org.apache.avro.generic.GenericDatumWriter;<br/>\n    +import org.apache.avro.io.BinaryEncoder;<br/>\n    +import org.apache.avro.io.Decoder;<br/>\n    +import org.apache.avro.io.DecoderFactory;<br/>\n    +import org.apache.avro.io.EncoderFactory;<br/>\n    +<br/>\n    +import java.io.IOException;<br/>\n    +<br/>\n    +//Generously adapted from:<br/>\n    +//<a href=\"https://github.com/kijiproject/kiji-express/blob/master/kiji-express/src/main/scala/org/kiji/express/flow/framework/serialization/AvroSerializer.scala\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/kijiproject/kiji-express/blob/master/kiji-express/src/main/scala/org/kiji/express/flow/framework/serialization/AvroSerializer.scala</a><br/>\n    +//Which has as an ASL2.0 license<br/>\n    +public class AvroGenericSerializer extends Serializer<GenericContainer> {<br/>\n    +    @Override<br/>\n    +    public void write(Kryo kryo, Output output, GenericContainer record) {<br/>\n    +output.writeString(record.getSchema().toString());<br/>\n    +GenericDatumWriter<GenericContainer> writer = new GenericDatumWriter<>(record.getSchema());<br/>\n    +<br/>\n    +BinaryEncoder encoder = EncoderFactory<br/>\n    +.get()<br/>\n    +.directBinaryEncoder(output, null);<br/>\n    +try </p>\n{\n    +    writer.write(record, encoder);\n    +}\n<p> catch (IOException e) </p>\n{\n    +    throw new RuntimeException(e);\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    @Override<br/>\n    +    public GenericContainer read(Kryo kryo, Input input, Class<GenericContainer> aClass) {<br/>\n    +Schema theSchema = new Schema.Parser().parse(input.readString());<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    This can lead to higher GC depending on how frequently it is called.<br/>\n    <a href=\"https://github.com/apache/avro/blob/trunk/lang/java/avro/src/main/java/org/apache/avro/generic/GenericDatumReader.java#L107\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/avro/blob/trunk/lang/java/avro/src/main/java/org/apache/avro/generic/GenericDatumReader.java#L107</a><br/>\n    GenericDataumReader internally keeps a map of <ActualSchema, ExpectedSchema, ResolvingDecoder>. The resolving decoder objects are expensive to create. Map being used is an IdentityHashMap. So even though schema may be same, a different object will lead to creation of different ResolvingDecoder. </p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612864438/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612704892","html_url":"https://github.com/apache/storm/issues/5329#issuecomment-2612704892","issue_url":"https://api.github.com/repos/apache/storm/issues/5329","id":2612704892,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI3MDQ4OTI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-27T18:51:19Z","updated_at":"2025-01-24T14:46:19Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user asfgit closed the pull request at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1049\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1049</a></p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612704892/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612704897","html_url":"https://github.com/apache/storm/issues/5329#issuecomment-2612704897","issue_url":"https://api.github.com/repos/apache/storm/issues/5329","id":2612704897,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI3MDQ4OTc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-27T18:53:58Z","updated_at":"2025-01-24T14:46:19Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ptgoetz\">ptgoetz</a>:</i>\n<p>Thanks <a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=yegor.tokmakov\" class=\"user-hover\" rel=\"yegor.tokmakov\">Yegor Tokmakov</a>, I merged this to master and 1.x-branch.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612704897/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612627002","html_url":"https://github.com/apache/storm/issues/5014#issuecomment-2612627002","issue_url":"https://api.github.com/repos/apache/storm/issues/5014","id":2612627002,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MjcwMDI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-27T19:07:20Z","updated_at":"2025-01-24T14:12:19Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ptgoetz\">ptgoetz</a>:</i>\n<p>Merged to master/1.x-branch.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612627002/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612627004","html_url":"https://github.com/apache/storm/issues/5014#issuecomment-2612627004","issue_url":"https://api.github.com/repos/apache/storm/issues/5014","id":2612627004,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MjcwMDQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-27T19:07:47Z","updated_at":"2025-01-24T14:12:19Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user asfgit closed the pull request at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/963\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/963</a></p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612627004/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612864881","html_url":"https://github.com/apache/storm/issues/5340#issuecomment-2612864881","issue_url":"https://api.github.com/repos/apache/storm/issues/5340","id":2612864881,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4NjQ4ODE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-27T19:30:47Z","updated_at":"2025-01-24T15:58:56Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user ptgoetz commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1050#discussion_r51036546\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1050#discussion_r51036546</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/trident/planner/processor/MapProcessor.java &#8212;<br/>\n    @@ -0,0 +1,87 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.trident.planner.processor;<br/>\n    +<br/>\n    +import org.apache.storm.task.TopologyContext;<br/>\n    +import org.apache.storm.trident.operation.FlatMapFunction;<br/>\n    +import org.apache.storm.trident.operation.Function;<br/>\n    +import org.apache.storm.trident.operation.MapFunction;<br/>\n    +import org.apache.storm.trident.operation.TridentOperationContext;<br/>\n    +import org.apache.storm.trident.planner.ProcessorContext;<br/>\n    +import org.apache.storm.trident.planner.TridentProcessor;<br/>\n    +import org.apache.storm.trident.tuple.TridentTuple;<br/>\n    +import org.apache.storm.trident.tuple.TridentTupleView;<br/>\n    +import org.apache.storm.tuple.Fields;<br/>\n    +<br/>\n    +import java.util.List;<br/>\n    +import java.util.Map;<br/>\n    +<br/>\n    +/**<br/>\n    + * Processor for executing </p>\n{@link org.apache.storm.trident.Stream#map(MapFunction)}\n<p> and<br/>\n    + * </p>\n{@link org.apache.storm.trident.Stream#flatMap(FlatMapFunction)}\n<p> functions.<br/>\n    + */<br/>\n    +public class MapProcessor implements TridentProcessor {<br/>\n    +    Function _function;<br/>\n    +    TridentContext _context;<br/>\n    +    FreshCollector _collector;<br/>\n    +    Fields _inputFields;<br/>\n    +    TridentTupleView.ProjectionFactory _projection;<br/>\n    +<br/>\n    +    public MapProcessor(Fields inputFields, Function function) </p>\n{\n    +_function = function;\n    +_inputFields = inputFields;\n    +    }\n<p>    +<br/>\n    +    @Override<br/>\n    +    public void prepare(Map conf, TopologyContext context, TridentContext tridentContext) {<br/>\n    +List<TridentTuple.Factory> parents = tridentContext.getParentTupleFactories();<br/>\n    +if(parents.size()!=1) {<br/>\n    +    throw new RuntimeException(\"Each operation can only have one parent\");<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Should this be \"Map operation can have only one parent\"?</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612864881/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612864444","html_url":"https://github.com/apache/storm/issues/5339#issuecomment-2612864444","issue_url":"https://api.github.com/repos/apache/storm/issues/5339","id":2612864444,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4NjQ0NDQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-27T19:46:06Z","updated_at":"2025-01-24T15:58:46Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user dossett commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1052#discussion_r51038995\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1052#discussion_r51038995</a></p>\n\n<p>    &#8212; Diff: external/storm-hdfs/src/main/java/org/apache/storm/hdfs/common/AvroGenericSerializer.java &#8212;<br/>\n    @@ -0,0 +1,70 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.hdfs.common;<br/>\n    +<br/>\n    +import com.esotericsoftware.kryo.Kryo;<br/>\n    +import com.esotericsoftware.kryo.Serializer;<br/>\n    +import com.esotericsoftware.kryo.io.Input;<br/>\n    +import com.esotericsoftware.kryo.io.Output;<br/>\n    +import org.apache.avro.Schema;<br/>\n    +import org.apache.avro.generic.GenericContainer;<br/>\n    +import org.apache.avro.generic.GenericDatumReader;<br/>\n    +import org.apache.avro.generic.GenericDatumWriter;<br/>\n    +import org.apache.avro.io.BinaryEncoder;<br/>\n    +import org.apache.avro.io.Decoder;<br/>\n    +import org.apache.avro.io.DecoderFactory;<br/>\n    +import org.apache.avro.io.EncoderFactory;<br/>\n    +<br/>\n    +import java.io.IOException;<br/>\n    +<br/>\n    +//Generously adapted from:<br/>\n    +//<a href=\"https://github.com/kijiproject/kiji-express/blob/master/kiji-express/src/main/scala/org/kiji/express/flow/framework/serialization/AvroSerializer.scala\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/kijiproject/kiji-express/blob/master/kiji-express/src/main/scala/org/kiji/express/flow/framework/serialization/AvroSerializer.scala</a><br/>\n    +//Which has as an ASL2.0 license<br/>\n    +public class AvroGenericSerializer extends Serializer<GenericContainer> {<br/>\n    +    @Override<br/>\n    +    public void write(Kryo kryo, Output output, GenericContainer record) {<br/>\n    +output.writeString(record.getSchema().toString());<br/>\n    +GenericDatumWriter<GenericContainer> writer = new GenericDatumWriter<>(record.getSchema());<br/>\n    +<br/>\n    +BinaryEncoder encoder = EncoderFactory<br/>\n    +.get()<br/>\n    +.directBinaryEncoder(output, null);<br/>\n    +try </p>\n{\n    +    writer.write(record, encoder);\n    +}\n<p> catch (IOException e) </p>\n{\n    +    throw new RuntimeException(e);\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    @Override<br/>\n    +    public GenericContainer read(Kryo kryo, Input input, Class<GenericContainer> aClass) {<br/>\n    +Schema theSchema = new Schema.Parser().parse(input.readString());<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Thanks, do you have suggestions for a different approach?</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612864444/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612864448","html_url":"https://github.com/apache/storm/issues/5339#issuecomment-2612864448","issue_url":"https://api.github.com/repos/apache/storm/issues/5339","id":2612864448,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4NjQ0NDg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-27T20:35:06Z","updated_at":"2025-01-24T15:58:46Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1052#discussion_r51045767\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1052#discussion_r51045767</a></p>\n\n<p>    &#8212; Diff: external/storm-hdfs/src/main/java/org/apache/storm/hdfs/common/AvroGenericSerializer.java &#8212;<br/>\n    @@ -0,0 +1,70 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.hdfs.common;<br/>\n    +<br/>\n    +import com.esotericsoftware.kryo.Kryo;<br/>\n    +import com.esotericsoftware.kryo.Serializer;<br/>\n    +import com.esotericsoftware.kryo.io.Input;<br/>\n    +import com.esotericsoftware.kryo.io.Output;<br/>\n    +import org.apache.avro.Schema;<br/>\n    +import org.apache.avro.generic.GenericContainer;<br/>\n    +import org.apache.avro.generic.GenericDatumReader;<br/>\n    +import org.apache.avro.generic.GenericDatumWriter;<br/>\n    +import org.apache.avro.io.BinaryEncoder;<br/>\n    +import org.apache.avro.io.Decoder;<br/>\n    +import org.apache.avro.io.DecoderFactory;<br/>\n    +import org.apache.avro.io.EncoderFactory;<br/>\n    +<br/>\n    +import java.io.IOException;<br/>\n    +<br/>\n    +//Generously adapted from:<br/>\n    +//<a href=\"https://github.com/kijiproject/kiji-express/blob/master/kiji-express/src/main/scala/org/kiji/express/flow/framework/serialization/AvroSerializer.scala\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/kijiproject/kiji-express/blob/master/kiji-express/src/main/scala/org/kiji/express/flow/framework/serialization/AvroSerializer.scala</a><br/>\n    +//Which has as an ASL2.0 license<br/>\n    +public class AvroGenericSerializer extends Serializer<GenericContainer> {<br/>\n    +    @Override<br/>\n    +    public void write(Kryo kryo, Output output, GenericContainer record) {<br/>\n    +output.writeString(record.getSchema().toString());<br/>\n    +GenericDatumWriter<GenericContainer> writer = new GenericDatumWriter<>(record.getSchema());<br/>\n    +<br/>\n    +BinaryEncoder encoder = EncoderFactory<br/>\n    +.get()<br/>\n    +.directBinaryEncoder(output, null);<br/>\n    +try </p>\n{\n    +    writer.write(record, encoder);\n    +}\n<p> catch (IOException e) </p>\n{\n    +    throw new RuntimeException(e);\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    @Override<br/>\n    +    public GenericContainer read(Kryo kryo, Input input, Class<GenericContainer> aClass) {<br/>\n    +Schema theSchema = new Schema.Parser().parse(input.readString());<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    The problem here is that the schema is large (JSON) and the data is small (no tags which is why you need the schema).  If we send the schema each time we send the data we are wasting a lot of resources.  The only real way around this is to have a cheap way to get the schema while sending minimal data, ideally also caching the parsed schema so we don't have to parse it each time.</p>\n\n<p>    The best way I know of would be to have an external schema registry and send a reference to the original schema with the data. That is what we do at Yahoo, but the registry is unlikely to ever be open sourced (sorry about that not my code).</p>\n\n<p>    My proposal would be to create a SchemaRegistry API that lets you do something like.</p>\n\n<p>    ```<br/>\n    public interface AvroSchemaRegistry </p>\n{\npublic String getKey(Schema schema);\n    \npublic Schema getSchema(String key);\n    }\n<p>    ```</p>\n\n<p>    We could then have two default implementations, or even a hybrid one.  The generic one that would work each time would do exactly what this code does.  Turns the schema into a string and the deserializes it on the other side.  You could do some caching if you wanted to.</p>\n\n<p>    A cheaper version would not serialize/deserialize it each time, but go off of a checksum like avro RPC does. It could then look to see if a special schema file exists in the topology jar that matches the checksum, or possibly full name + version and it computes the checksum.  From that it could send the checksum, or fullname + version instead of the full schema. The read code would read the checksum/version lookup the file read/parse/cache the schema and return it.</p>\n\n<p>    A hybrid would first try the cached copy, then the checksum/jar and if it could not find it fall back to the full/slow schema.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612864448/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612864883","html_url":"https://github.com/apache/storm/issues/5340#issuecomment-2612864883","issue_url":"https://api.github.com/repos/apache/storm/issues/5340","id":2612864883,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4NjQ4ODM=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-27T20:35:12Z","updated_at":"2025-01-24T15:58:56Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user ptgoetz commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1050#discussion_r51045778\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1050#discussion_r51045778</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/trident/operation/FlatMapFunction.java &#8212;<br/>\n    @@ -0,0 +1,36 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.trident.operation;<br/>\n    +<br/>\n    +import org.apache.storm.tuple.Values;<br/>\n    +<br/>\n    +import java.io.Serializable;<br/>\n    +import java.util.List;<br/>\n    +<br/>\n    +/**<br/>\n    + * A one to many transformation function<br/>\n    + */<br/>\n    +public interface FlatMapFunction extends Serializable {<br/>\n    +    /**<br/>\n    +     * Invoked by the framework for each value in a stream.<br/>\n    +     *<br/>\n    +     * @param input the input value<br/>\n    +     * @return an iterable over the resultant values<br/>\n    +     */<br/>\n    +    Iterable<Values> execute(Values input);<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Why use `Values` as the input parameter and not `ITuple`? With `Values` the user will have to know the index of the value they are after, whereas `Tuple` has convenience methods like `getStringByField()`.</p>\n\n<p>    (Same question/comment applies to `MapFunction`.)</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612864883/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612864342","html_url":"https://github.com/apache/storm/issues/5338#issuecomment-2612864342","issue_url":"https://api.github.com/repos/apache/storm/issues/5338","id":2612864342,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4NjQzNDI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-27T21:04:45Z","updated_at":"2025-01-24T15:58:43Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user asfgit closed the pull request at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1048\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1048</a></p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612864342/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612864347","html_url":"https://github.com/apache/storm/issues/5338#issuecomment-2612864347","issue_url":"https://api.github.com/repos/apache/storm/issues/5338","id":2612864347,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4NjQzNDc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-27T21:06:15Z","updated_at":"2025-01-24T15:58:43Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ptgoetz\">ptgoetz</a>:</i>\n<p>Merged to master/1.x-branch.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612864347/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/175899060","html_url":"https://github.com/apache/storm/pull/1028#issuecomment-175899060","issue_url":"https://api.github.com/repos/apache/storm/issues/1028","id":175899060,"node_id":"MDEyOklzc3VlQ29tbWVudDE3NTg5OTA2MA==","user":{"login":"kishorvpatil","id":6090397,"node_id":"MDQ6VXNlcjYwOTAzOTc=","avatar_url":"https://avatars.githubusercontent.com/u/6090397?v=4","gravatar_id":"","url":"https://api.github.com/users/kishorvpatil","html_url":"https://github.com/kishorvpatil","followers_url":"https://api.github.com/users/kishorvpatil/followers","following_url":"https://api.github.com/users/kishorvpatil/following{/other_user}","gists_url":"https://api.github.com/users/kishorvpatil/gists{/gist_id}","starred_url":"https://api.github.com/users/kishorvpatil/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kishorvpatil/subscriptions","organizations_url":"https://api.github.com/users/kishorvpatil/orgs","repos_url":"https://api.github.com/users/kishorvpatil/repos","events_url":"https://api.github.com/users/kishorvpatil/events{/privacy}","received_events_url":"https://api.github.com/users/kishorvpatil/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-27T22:44:08Z","updated_at":"2016-01-27T22:44:08Z","author_association":"CONTRIBUTOR","body":"Closing this PR as  changes are backported to 1.x-branch from master.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/175899060/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612703590","html_url":"https://github.com/apache/storm/issues/5320#issuecomment-2612703590","issue_url":"https://api.github.com/repos/apache/storm/issues/5320","id":2612703590,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI3MDM1OTA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-27T22:44:09Z","updated_at":"2025-01-24T14:45:45Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user kishorvpatil commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1028#issuecomment-175899060\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1028#issuecomment-175899060</a></p>\n\n<p>    Closing this PR as  changes are backported to 1.x-branch from master.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612703590/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612703597","html_url":"https://github.com/apache/storm/issues/5320#issuecomment-2612703597","issue_url":"https://api.github.com/repos/apache/storm/issues/5320","id":2612703597,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI3MDM1OTc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-27T22:44:10Z","updated_at":"2025-01-24T14:45:46Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user kishorvpatil closed the pull request at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1028\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1028</a></p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612703597/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612864453","html_url":"https://github.com/apache/storm/issues/5339#issuecomment-2612864453","issue_url":"https://api.github.com/repos/apache/storm/issues/5339","id":2612864453,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4NjQ0NTM=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-27T22:47:12Z","updated_at":"2025-01-24T15:58:46Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user dossett commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1052#discussion_r51063276\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1052#discussion_r51063276</a></p>\n\n<p>    &#8212; Diff: external/storm-hdfs/src/main/java/org/apache/storm/hdfs/common/AvroGenericSerializer.java &#8212;<br/>\n    @@ -0,0 +1,70 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.hdfs.common;<br/>\n    +<br/>\n    +import com.esotericsoftware.kryo.Kryo;<br/>\n    +import com.esotericsoftware.kryo.Serializer;<br/>\n    +import com.esotericsoftware.kryo.io.Input;<br/>\n    +import com.esotericsoftware.kryo.io.Output;<br/>\n    +import org.apache.avro.Schema;<br/>\n    +import org.apache.avro.generic.GenericContainer;<br/>\n    +import org.apache.avro.generic.GenericDatumReader;<br/>\n    +import org.apache.avro.generic.GenericDatumWriter;<br/>\n    +import org.apache.avro.io.BinaryEncoder;<br/>\n    +import org.apache.avro.io.Decoder;<br/>\n    +import org.apache.avro.io.DecoderFactory;<br/>\n    +import org.apache.avro.io.EncoderFactory;<br/>\n    +<br/>\n    +import java.io.IOException;<br/>\n    +<br/>\n    +//Generously adapted from:<br/>\n    +//<a href=\"https://github.com/kijiproject/kiji-express/blob/master/kiji-express/src/main/scala/org/kiji/express/flow/framework/serialization/AvroSerializer.scala\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/kijiproject/kiji-express/blob/master/kiji-express/src/main/scala/org/kiji/express/flow/framework/serialization/AvroSerializer.scala</a><br/>\n    +//Which has as an ASL2.0 license<br/>\n    +public class AvroGenericSerializer extends Serializer<GenericContainer> {<br/>\n    +    @Override<br/>\n    +    public void write(Kryo kryo, Output output, GenericContainer record) {<br/>\n    +output.writeString(record.getSchema().toString());<br/>\n    +GenericDatumWriter<GenericContainer> writer = new GenericDatumWriter<>(record.getSchema());<br/>\n    +<br/>\n    +BinaryEncoder encoder = EncoderFactory<br/>\n    +.get()<br/>\n    +.directBinaryEncoder(output, null);<br/>\n    +try </p>\n{\n    +    writer.write(record, encoder);\n    +}\n<p> catch (IOException e) </p>\n{\n    +    throw new RuntimeException(e);\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    @Override<br/>\n    +    public GenericContainer read(Kryo kryo, Input input, Class<GenericContainer> aClass) {<br/>\n    +Schema theSchema = new Schema.Parser().parse(input.readString());<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Thanks for the thoughtful comments @revans2. I think I understand what you're describing but want to make sure.</p>\n\n<ul class=\"alternate\" type=\"square\">\n\t<li>A generic registry would just treat the schema as the key and vice versa, so it's always passed around.</li>\n</ul>\n\n\n<p>    ```<br/>\n    class GenericAvroSchemaRegistry implements AvroSchemaRegistry {<br/>\n       public String getKey(Schema schema) </p>\n{\n  return schema.toString();\n       }\n\n<p>public Schema getSchema(String key) </p>\n{\n   return new Schema.Parser().parse(key);\n       }\n<p>    ```</p>\n\n<ul class=\"alternate\" type=\"square\">\n\t<li>A jar-based registry approach could be used for schemas that are known in advance and worth  persisting across the entire topology, but fall back on the generic approach above if an unknown schema is used.</li>\n\t<li>You might choose to implement your own own which relies on your proprietary registry, which is truly external to Storm</li>\n\t<li>At Target we could implement our own since we also use an external schema registry, albeit one that is already open sourced.</li>\n</ul>\n\n\n<p>    Do I have the gist of it?</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612864453/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/175923449","html_url":"https://github.com/apache/storm/pull/1054#issuecomment-175923449","issue_url":"https://api.github.com/repos/apache/storm/issues/1054","id":175923449,"node_id":"MDEyOklzc3VlQ29tbWVudDE3NTkyMzQ0OQ==","user":{"login":"HeartSaVioR","id":1317309,"node_id":"MDQ6VXNlcjEzMTczMDk=","avatar_url":"https://avatars.githubusercontent.com/u/1317309?v=4","gravatar_id":"","url":"https://api.github.com/users/HeartSaVioR","html_url":"https://github.com/HeartSaVioR","followers_url":"https://api.github.com/users/HeartSaVioR/followers","following_url":"https://api.github.com/users/HeartSaVioR/following{/other_user}","gists_url":"https://api.github.com/users/HeartSaVioR/gists{/gist_id}","starred_url":"https://api.github.com/users/HeartSaVioR/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HeartSaVioR/subscriptions","organizations_url":"https://api.github.com/users/HeartSaVioR/orgs","repos_url":"https://api.github.com/users/HeartSaVioR/repos","events_url":"https://api.github.com/users/HeartSaVioR/events{/privacy}","received_events_url":"https://api.github.com/users/HeartSaVioR/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-28T00:21:52Z","updated_at":"2016-01-28T00:21:52Z","author_association":"CONTRIBUTOR","body":"Took a quick look and looks good. I found some typos which could be easily addressed.  \n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/175923449/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612864455","html_url":"https://github.com/apache/storm/issues/5339#issuecomment-2612864455","issue_url":"https://api.github.com/repos/apache/storm/issues/5339","id":2612864455,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4NjQ0NTU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-28T05:53:44Z","updated_at":"2025-01-24T15:58:46Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user abhishekagarwal87 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1052#discussion_r51082690\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1052#discussion_r51082690</a></p>\n\n<p>    &#8212; Diff: external/storm-hdfs/src/main/java/org/apache/storm/hdfs/common/AvroGenericSerializer.java &#8212;<br/>\n    @@ -0,0 +1,70 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.hdfs.common;<br/>\n    +<br/>\n    +import com.esotericsoftware.kryo.Kryo;<br/>\n    +import com.esotericsoftware.kryo.Serializer;<br/>\n    +import com.esotericsoftware.kryo.io.Input;<br/>\n    +import com.esotericsoftware.kryo.io.Output;<br/>\n    +import org.apache.avro.Schema;<br/>\n    +import org.apache.avro.generic.GenericContainer;<br/>\n    +import org.apache.avro.generic.GenericDatumReader;<br/>\n    +import org.apache.avro.generic.GenericDatumWriter;<br/>\n    +import org.apache.avro.io.BinaryEncoder;<br/>\n    +import org.apache.avro.io.Decoder;<br/>\n    +import org.apache.avro.io.DecoderFactory;<br/>\n    +import org.apache.avro.io.EncoderFactory;<br/>\n    +<br/>\n    +import java.io.IOException;<br/>\n    +<br/>\n    +//Generously adapted from:<br/>\n    +//<a href=\"https://github.com/kijiproject/kiji-express/blob/master/kiji-express/src/main/scala/org/kiji/express/flow/framework/serialization/AvroSerializer.scala\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/kijiproject/kiji-express/blob/master/kiji-express/src/main/scala/org/kiji/express/flow/framework/serialization/AvroSerializer.scala</a><br/>\n    +//Which has as an ASL2.0 license<br/>\n    +public class AvroGenericSerializer extends Serializer<GenericContainer> {<br/>\n    +    @Override<br/>\n    +    public void write(Kryo kryo, Output output, GenericContainer record) {<br/>\n    +output.writeString(record.getSchema().toString());<br/>\n    +GenericDatumWriter<GenericContainer> writer = new GenericDatumWriter<>(record.getSchema());<br/>\n    +<br/>\n    +BinaryEncoder encoder = EncoderFactory<br/>\n    +.get()<br/>\n    +.directBinaryEncoder(output, null);<br/>\n    +try </p>\n{\n    +    writer.write(record, encoder);\n    +}\n<p> catch (IOException e) </p>\n{\n    +    throw new RuntimeException(e);\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    @Override<br/>\n    +    public GenericContainer read(Kryo kryo, Input input, Class<GenericContainer> aClass) {<br/>\n    +Schema theSchema = new Schema.Parser().parse(input.readString());<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    The approach sounds right. Though I will suggest not to use the above version of schema registry as default one as it is costly. <br/>\n    `<br/>\n    class GenericAvroSchemaRegistry2 implements AvroSchemaRegistry {<br/>\n      private BiMap<String,Schema> schemaMap; //This is populated while building the topology. It should be serializable. <br/>\n       public String getKey(Schema schema) </p>\n{\n  return schemaMap.get(schema);\n       }\n\n<p>public Schema getSchema(String key) </p>\n{\n   return schemaMap.get(key);\n       }\n<p>    `<br/>\n    Multiple implementations of the registry can be shipped. However, default one should be safest option to use.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612864455/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612864460","html_url":"https://github.com/apache/storm/issues/5339#issuecomment-2612864460","issue_url":"https://api.github.com/repos/apache/storm/issues/5339","id":2612864460,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4NjQ0NjA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-28T05:57:51Z","updated_at":"2025-01-24T15:58:46Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user abhishekagarwal87 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1052#discussion_r51082926\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1052#discussion_r51082926</a></p>\n\n<p>    &#8212; Diff: external/storm-hdfs/src/main/java/org/apache/storm/hdfs/common/AvroGenericSerializer.java &#8212;<br/>\n    @@ -0,0 +1,70 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.hdfs.common;<br/>\n    +<br/>\n    +import com.esotericsoftware.kryo.Kryo;<br/>\n    +import com.esotericsoftware.kryo.Serializer;<br/>\n    +import com.esotericsoftware.kryo.io.Input;<br/>\n    +import com.esotericsoftware.kryo.io.Output;<br/>\n    +import org.apache.avro.Schema;<br/>\n    +import org.apache.avro.generic.GenericContainer;<br/>\n    +import org.apache.avro.generic.GenericDatumReader;<br/>\n    +import org.apache.avro.generic.GenericDatumWriter;<br/>\n    +import org.apache.avro.io.BinaryEncoder;<br/>\n    +import org.apache.avro.io.Decoder;<br/>\n    +import org.apache.avro.io.DecoderFactory;<br/>\n    +import org.apache.avro.io.EncoderFactory;<br/>\n    +<br/>\n    +import java.io.IOException;<br/>\n    +<br/>\n    +//Generously adapted from:<br/>\n    +//<a href=\"https://github.com/kijiproject/kiji-express/blob/master/kiji-express/src/main/scala/org/kiji/express/flow/framework/serialization/AvroSerializer.scala\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/kijiproject/kiji-express/blob/master/kiji-express/src/main/scala/org/kiji/express/flow/framework/serialization/AvroSerializer.scala</a><br/>\n    +//Which has as an ASL2.0 license<br/>\n    +public class AvroGenericSerializer extends Serializer<GenericContainer> {<br/>\n    +    @Override<br/>\n    +    public void write(Kryo kryo, Output output, GenericContainer record) {<br/>\n    +output.writeString(record.getSchema().toString());<br/>\n    +GenericDatumWriter<GenericContainer> writer = new GenericDatumWriter<>(record.getSchema());<br/>\n    +<br/>\n    +BinaryEncoder encoder = EncoderFactory<br/>\n    +.get()<br/>\n    +.directBinaryEncoder(output, null);<br/>\n    +try </p>\n{\n    +    writer.write(record, encoder);\n    +}\n<p> catch (IOException e) </p>\n{\n    +    throw new RuntimeException(e);\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    @Override<br/>\n    +    public GenericContainer read(Kryo kryo, Input input, Class<GenericContainer> aClass) {<br/>\n    +Schema theSchema = new Schema.Parser().parse(input.readString());<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Key need not be supplied externally if schema fingerprint is used as the key. </p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612864460/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612864886","html_url":"https://github.com/apache/storm/issues/5340#issuecomment-2612864886","issue_url":"https://api.github.com/repos/apache/storm/issues/5340","id":2612864886,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4NjQ4ODY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-28T07:23:51Z","updated_at":"2025-01-24T15:58:56Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user arunmahadevan commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1050#discussion_r51087917\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1050#discussion_r51087917</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/trident/operation/FlatMapFunction.java &#8212;<br/>\n    @@ -0,0 +1,36 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.trident.operation;<br/>\n    +<br/>\n    +import org.apache.storm.tuple.Values;<br/>\n    +<br/>\n    +import java.io.Serializable;<br/>\n    +import java.util.List;<br/>\n    +<br/>\n    +/**<br/>\n    + * A one to many transformation function<br/>\n    + */<br/>\n    +public interface FlatMapFunction extends Serializable {<br/>\n    +    /**<br/>\n    +     * Invoked by the framework for each value in a stream.<br/>\n    +     *<br/>\n    +     * @param input the input value<br/>\n    +     * @return an iterable over the resultant values<br/>\n    +     */<br/>\n    +    Iterable<Values> execute(Values input);<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Had thought about it but made it `Values` to keep the argument and return types same. On rethinking agree that for exposing the convenience methods, the argument type can be changed to `TridentTuple`.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612864886/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/176111096","html_url":"https://github.com/apache/storm/pull/1050#issuecomment-176111096","issue_url":"https://api.github.com/repos/apache/storm/issues/1050","id":176111096,"node_id":"MDEyOklzc3VlQ29tbWVudDE3NjExMTA5Ng==","user":{"login":"arunmahadevan","id":6792890,"node_id":"MDQ6VXNlcjY3OTI4OTA=","avatar_url":"https://avatars.githubusercontent.com/u/6792890?v=4","gravatar_id":"","url":"https://api.github.com/users/arunmahadevan","html_url":"https://github.com/arunmahadevan","followers_url":"https://api.github.com/users/arunmahadevan/followers","following_url":"https://api.github.com/users/arunmahadevan/following{/other_user}","gists_url":"https://api.github.com/users/arunmahadevan/gists{/gist_id}","starred_url":"https://api.github.com/users/arunmahadevan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/arunmahadevan/subscriptions","organizations_url":"https://api.github.com/users/arunmahadevan/orgs","repos_url":"https://api.github.com/users/arunmahadevan/repos","events_url":"https://api.github.com/users/arunmahadevan/events{/privacy}","received_events_url":"https://api.github.com/users/arunmahadevan/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-28T10:27:22Z","updated_at":"2016-01-28T10:27:22Z","author_association":"CONTRIBUTOR","body":"@ptgoetz addressed review comments and also added a `filter` api so that tuples can be filtered by passing only the predicate in the filter api than using each.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/176111096/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612864895","html_url":"https://github.com/apache/storm/issues/5340#issuecomment-2612864895","issue_url":"https://api.github.com/repos/apache/storm/issues/5340","id":2612864895,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4NjQ4OTU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-28T10:27:25Z","updated_at":"2025-01-24T15:58:57Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user arunmahadevan commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1050#issuecomment-176111096\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1050#issuecomment-176111096</a></p>\n\n<p>    @ptgoetz addressed review comments and also added a `filter` api so that tuples can be filtered by passing only the predicate in the filter api than using each.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612864895/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/176189502","html_url":"https://github.com/apache/storm/pull/1051#issuecomment-176189502","issue_url":"https://api.github.com/repos/apache/storm/issues/1051","id":176189502,"node_id":"MDEyOklzc3VlQ29tbWVudDE3NjE4OTUwMg==","user":{"login":"unsleepy22","id":631361,"node_id":"MDQ6VXNlcjYzMTM2MQ==","avatar_url":"https://avatars.githubusercontent.com/u/631361?v=4","gravatar_id":"","url":"https://api.github.com/users/unsleepy22","html_url":"https://github.com/unsleepy22","followers_url":"https://api.github.com/users/unsleepy22/followers","following_url":"https://api.github.com/users/unsleepy22/following{/other_user}","gists_url":"https://api.github.com/users/unsleepy22/gists{/gist_id}","starred_url":"https://api.github.com/users/unsleepy22/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/unsleepy22/subscriptions","organizations_url":"https://api.github.com/users/unsleepy22/orgs","repos_url":"https://api.github.com/users/unsleepy22/repos","events_url":"https://api.github.com/users/unsleepy22/events{/privacy}","received_events_url":"https://api.github.com/users/unsleepy22/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-28T13:41:08Z","updated_at":"2016-01-28T13:41:08Z","author_association":"NONE","body":"LGTM +1\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/176189502/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612865134","html_url":"https://github.com/apache/storm/issues/5341#issuecomment-2612865134","issue_url":"https://api.github.com/repos/apache/storm/issues/5341","id":2612865134,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4NjUxMzQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-28T13:41:09Z","updated_at":"2025-01-24T15:59:03Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user unsleepy22 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1051#issuecomment-176189502\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1051#issuecomment-176189502</a></p>\n\n<p>    LGTM +1</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612865134/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/176198148","html_url":"https://github.com/apache/storm/pull/1051#issuecomment-176198148","issue_url":"https://api.github.com/repos/apache/storm/issues/1051","id":176198148,"node_id":"MDEyOklzc3VlQ29tbWVudDE3NjE5ODE0OA==","user":{"login":"HeartSaVioR","id":1317309,"node_id":"MDQ6VXNlcjEzMTczMDk=","avatar_url":"https://avatars.githubusercontent.com/u/1317309?v=4","gravatar_id":"","url":"https://api.github.com/users/HeartSaVioR","html_url":"https://github.com/HeartSaVioR","followers_url":"https://api.github.com/users/HeartSaVioR/followers","following_url":"https://api.github.com/users/HeartSaVioR/following{/other_user}","gists_url":"https://api.github.com/users/HeartSaVioR/gists{/gist_id}","starred_url":"https://api.github.com/users/HeartSaVioR/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HeartSaVioR/subscriptions","organizations_url":"https://api.github.com/users/HeartSaVioR/orgs","repos_url":"https://api.github.com/users/HeartSaVioR/repos","events_url":"https://api.github.com/users/HeartSaVioR/events{/privacy}","received_events_url":"https://api.github.com/users/HeartSaVioR/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-28T14:04:36Z","updated_at":"2016-01-28T14:08:20Z","author_association":"CONTRIBUTOR","body":"While Utils.getInt(Object) does provide safe conversion, this PR forces explicit type conversion, which breaks unit tests (Nimbus crashed).\nPlease see https://travis-ci.org/apache/storm/jobs/105184033 and https://travis-ci.org/apache/storm/jobs/105184034.\nWe can find the reason of ClassCastException from http://clojuredocs.org/clojure.core/type, type of number literal is actually Long in Clojure.\n\nWe may want to consider Clojure unless porting is complete.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/176198148/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612865139","html_url":"https://github.com/apache/storm/issues/5341#issuecomment-2612865139","issue_url":"https://api.github.com/repos/apache/storm/issues/5341","id":2612865139,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4NjUxMzk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-28T14:04:37Z","updated_at":"2025-01-24T15:59:03Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user HeartSaVioR commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1051#issuecomment-176198148\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1051#issuecomment-176198148</a></p>\n\n<p>    While Utils.getInt(Object) does provide safe conversion, this PR forces type conversion, which breaks unit tests (Nimbus crashed).<br/>\n    Please see <a href=\"https://travis-ci.org/apache/storm/jobs/105184033\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://travis-ci.org/apache/storm/jobs/105184033</a> and <a href=\"https://travis-ci.org/apache/storm/jobs/105184034\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://travis-ci.org/apache/storm/jobs/105184034</a>.<br/>\n    We can find the reason of ClassCastException from <a href=\"http://clojuredocs.org/clojure.core/type\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://clojuredocs.org/clojure.core/type</a>, type of number literal is actually Long in Clojure.</p>\n\n<p>    We may want to consider Clojure unless porting is complete.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612865139/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/176202455","html_url":"https://github.com/apache/storm/pull/1051#issuecomment-176202455","issue_url":"https://api.github.com/repos/apache/storm/issues/1051","id":176202455,"node_id":"MDEyOklzc3VlQ29tbWVudDE3NjIwMjQ1NQ==","user":{"login":"HeartSaVioR","id":1317309,"node_id":"MDQ6VXNlcjEzMTczMDk=","avatar_url":"https://avatars.githubusercontent.com/u/1317309?v=4","gravatar_id":"","url":"https://api.github.com/users/HeartSaVioR","html_url":"https://github.com/HeartSaVioR","followers_url":"https://api.github.com/users/HeartSaVioR/followers","following_url":"https://api.github.com/users/HeartSaVioR/following{/other_user}","gists_url":"https://api.github.com/users/HeartSaVioR/gists{/gist_id}","starred_url":"https://api.github.com/users/HeartSaVioR/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HeartSaVioR/subscriptions","organizations_url":"https://api.github.com/users/HeartSaVioR/orgs","repos_url":"https://api.github.com/users/HeartSaVioR/repos","events_url":"https://api.github.com/users/HeartSaVioR/events{/privacy}","received_events_url":"https://api.github.com/users/HeartSaVioR/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-28T14:14:33Z","updated_at":"2016-01-28T14:16:41Z","author_association":"CONTRIBUTOR","body":"After porting whole things (including tests) to Java, I think we may have a chance to review type usages (based on strong typing) and try not to use Object when possible. This issue seems to be a bit early.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/176202455/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612865143","html_url":"https://github.com/apache/storm/issues/5341#issuecomment-2612865143","issue_url":"https://api.github.com/repos/apache/storm/issues/5341","id":2612865143,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4NjUxNDM=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-28T14:14:34Z","updated_at":"2025-01-24T15:59:03Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user HeartSaVioR commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1051#issuecomment-176202455\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1051#issuecomment-176202455</a></p>\n\n<p>    After porting whole things to Java, I think we may have a chance to review type usages (based on strong typing) and try not to use Object when possible. This issue seems to be a bit early.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612865143/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612864469","html_url":"https://github.com/apache/storm/issues/5339#issuecomment-2612864469","issue_url":"https://api.github.com/repos/apache/storm/issues/5339","id":2612864469,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4NjQ0Njk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-28T14:19:16Z","updated_at":"2025-01-24T15:58:47Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user dossett commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1052#discussion_r51127135\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1052#discussion_r51127135</a></p>\n\n<p>    &#8212; Diff: external/storm-hdfs/src/main/java/org/apache/storm/hdfs/common/AvroGenericSerializer.java &#8212;<br/>\n    @@ -0,0 +1,70 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.hdfs.common;<br/>\n    +<br/>\n    +import com.esotericsoftware.kryo.Kryo;<br/>\n    +import com.esotericsoftware.kryo.Serializer;<br/>\n    +import com.esotericsoftware.kryo.io.Input;<br/>\n    +import com.esotericsoftware.kryo.io.Output;<br/>\n    +import org.apache.avro.Schema;<br/>\n    +import org.apache.avro.generic.GenericContainer;<br/>\n    +import org.apache.avro.generic.GenericDatumReader;<br/>\n    +import org.apache.avro.generic.GenericDatumWriter;<br/>\n    +import org.apache.avro.io.BinaryEncoder;<br/>\n    +import org.apache.avro.io.Decoder;<br/>\n    +import org.apache.avro.io.DecoderFactory;<br/>\n    +import org.apache.avro.io.EncoderFactory;<br/>\n    +<br/>\n    +import java.io.IOException;<br/>\n    +<br/>\n    +//Generously adapted from:<br/>\n    +//<a href=\"https://github.com/kijiproject/kiji-express/blob/master/kiji-express/src/main/scala/org/kiji/express/flow/framework/serialization/AvroSerializer.scala\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/kijiproject/kiji-express/blob/master/kiji-express/src/main/scala/org/kiji/express/flow/framework/serialization/AvroSerializer.scala</a><br/>\n    +//Which has as an ASL2.0 license<br/>\n    +public class AvroGenericSerializer extends Serializer<GenericContainer> {<br/>\n    +    @Override<br/>\n    +    public void write(Kryo kryo, Output output, GenericContainer record) {<br/>\n    +output.writeString(record.getSchema().toString());<br/>\n    +GenericDatumWriter<GenericContainer> writer = new GenericDatumWriter<>(record.getSchema());<br/>\n    +<br/>\n    +BinaryEncoder encoder = EncoderFactory<br/>\n    +.get()<br/>\n    +.directBinaryEncoder(output, null);<br/>\n    +try </p>\n{\n    +    writer.write(record, encoder);\n    +}\n<p> catch (IOException e) </p>\n{\n    +    throw new RuntimeException(e);\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    @Override<br/>\n    +    public GenericContainer read(Kryo kryo, Input input, Class<GenericContainer> aClass) {<br/>\n    +Schema theSchema = new Schema.Parser().parse(input.readString());<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Thanks @abhishekagarwal87. I like that implementation when all the schemas are known in advance.  The use case I've been writing this for needs to support arbitrary schema evolution over the life of the topology, so I have not thought about it from that perspective.</p>\n\n<p>    As to the default, I think the safest option is the one that doesn't require the user to do anything, but I would be interested in hearing other opinions on that as well.</p>\n\n<p>    Thanks for the feedback everyone, I hope to have some code added to this PR soon.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612864469/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/176204284","html_url":"https://github.com/apache/storm/pull/1051#issuecomment-176204284","issue_url":"https://api.github.com/repos/apache/storm/issues/1051","id":176204284,"node_id":"MDEyOklzc3VlQ29tbWVudDE3NjIwNDI4NA==","user":{"login":"revans2","id":3441321,"node_id":"MDQ6VXNlcjM0NDEzMjE=","avatar_url":"https://avatars.githubusercontent.com/u/3441321?v=4","gravatar_id":"","url":"https://api.github.com/users/revans2","html_url":"https://github.com/revans2","followers_url":"https://api.github.com/users/revans2/followers","following_url":"https://api.github.com/users/revans2/following{/other_user}","gists_url":"https://api.github.com/users/revans2/gists{/gist_id}","starred_url":"https://api.github.com/users/revans2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/revans2/subscriptions","organizations_url":"https://api.github.com/users/revans2/orgs","repos_url":"https://api.github.com/users/revans2/repos","events_url":"https://api.github.com/users/revans2/events{/privacy}","received_events_url":"https://api.github.com/users/revans2/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-28T14:19:59Z","updated_at":"2016-01-28T14:19:59Z","author_association":"CONTRIBUTOR","body":"@hustfxj, I probably was not clear enough in my review comments that spawned this JIRA.  I was thinking along the lines of @HeartSaVioR.  Once the majority of the code is in java we can review types everywhere.  I wanted this JIRA filed so it is one that we do not forget about.  If you can make all of the tests pass before the full java conversion I am OK with it, but like @HeartSaVioR said you will need to update the clojure code to go from a long which is the clojure default to a int explicitly.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/176204284/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612865146","html_url":"https://github.com/apache/storm/issues/5341#issuecomment-2612865146","issue_url":"https://api.github.com/repos/apache/storm/issues/5341","id":2612865146,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4NjUxNDY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-28T14:20:00Z","updated_at":"2025-01-24T15:59:03Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1051#issuecomment-176204284\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1051#issuecomment-176204284</a></p>\n\n<p>    @hustfxj, I probably was not clear enough in my review comments that spawned this JIRA.  I was thinking along the lines of @HeartSaVioR.  Once the majority of the code is in java we can review types everywhere.  I wanted this JIRA filed so it is one that we do not forget about.  If you can make all of the tests pass before the full java conversion I am OK with it, but like @HeartSaVioR said you will need to update the clojure code to go from a long which is the clojure default to a int explicitly.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612865146/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/176206210","html_url":"https://github.com/apache/storm/pull/1051#issuecomment-176206210","issue_url":"https://api.github.com/repos/apache/storm/issues/1051","id":176206210,"node_id":"MDEyOklzc3VlQ29tbWVudDE3NjIwNjIxMA==","user":{"login":"HeartSaVioR","id":1317309,"node_id":"MDQ6VXNlcjEzMTczMDk=","avatar_url":"https://avatars.githubusercontent.com/u/1317309?v=4","gravatar_id":"","url":"https://api.github.com/users/HeartSaVioR","html_url":"https://github.com/HeartSaVioR","followers_url":"https://api.github.com/users/HeartSaVioR/followers","following_url":"https://api.github.com/users/HeartSaVioR/following{/other_user}","gists_url":"https://api.github.com/users/HeartSaVioR/gists{/gist_id}","starred_url":"https://api.github.com/users/HeartSaVioR/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HeartSaVioR/subscriptions","organizations_url":"https://api.github.com/users/HeartSaVioR/orgs","repos_url":"https://api.github.com/users/HeartSaVioR/repos","events_url":"https://api.github.com/users/HeartSaVioR/events{/privacy}","received_events_url":"https://api.github.com/users/HeartSaVioR/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-28T14:24:52Z","updated_at":"2016-01-28T14:24:52Z","author_association":"CONTRIBUTOR","body":"Yeah, I'm definitely fine to apply this PR if we can address kinds of type issues from Clojure. \nIf we're not sure, let's port first and take a look at STORM-1506 again.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/176206210/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612865157","html_url":"https://github.com/apache/storm/issues/5341#issuecomment-2612865157","issue_url":"https://api.github.com/repos/apache/storm/issues/5341","id":2612865157,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4NjUxNTc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-28T14:24:53Z","updated_at":"2025-01-24T15:59:03Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user HeartSaVioR commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1051#issuecomment-176206210\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1051#issuecomment-176206210</a></p>\n\n<p>    Yeah, I'm definitely fine to apply this PR if we can address kinds of type issues from Clojure. <br/>\n    If we're not sure, let's port first and take a look at <a href=\"https://issues.apache.org/jira/browse/STORM-1506\" title=\"It&#39;s better to  be Integer about port of STORM_ZOOKEEPER_PORT&TRANSACTIONAL_ZOOKEEPER_PORT \" class=\"issue-link\" data-issue-key=\"STORM-1506\"><del>STORM-1506</del></a> again.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612865157/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612864473","html_url":"https://github.com/apache/storm/issues/5339#issuecomment-2612864473","issue_url":"https://api.github.com/repos/apache/storm/issues/5339","id":2612864473,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4NjQ0NzM=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-28T14:25:39Z","updated_at":"2025-01-24T15:58:47Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1052#discussion_r51127995\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1052#discussion_r51127995</a></p>\n\n<p>    &#8212; Diff: external/storm-hdfs/src/main/java/org/apache/storm/hdfs/common/AvroGenericSerializer.java &#8212;<br/>\n    @@ -0,0 +1,70 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.hdfs.common;<br/>\n    +<br/>\n    +import com.esotericsoftware.kryo.Kryo;<br/>\n    +import com.esotericsoftware.kryo.Serializer;<br/>\n    +import com.esotericsoftware.kryo.io.Input;<br/>\n    +import com.esotericsoftware.kryo.io.Output;<br/>\n    +import org.apache.avro.Schema;<br/>\n    +import org.apache.avro.generic.GenericContainer;<br/>\n    +import org.apache.avro.generic.GenericDatumReader;<br/>\n    +import org.apache.avro.generic.GenericDatumWriter;<br/>\n    +import org.apache.avro.io.BinaryEncoder;<br/>\n    +import org.apache.avro.io.Decoder;<br/>\n    +import org.apache.avro.io.DecoderFactory;<br/>\n    +import org.apache.avro.io.EncoderFactory;<br/>\n    +<br/>\n    +import java.io.IOException;<br/>\n    +<br/>\n    +//Generously adapted from:<br/>\n    +//<a href=\"https://github.com/kijiproject/kiji-express/blob/master/kiji-express/src/main/scala/org/kiji/express/flow/framework/serialization/AvroSerializer.scala\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/kijiproject/kiji-express/blob/master/kiji-express/src/main/scala/org/kiji/express/flow/framework/serialization/AvroSerializer.scala</a><br/>\n    +//Which has as an ASL2.0 license<br/>\n    +public class AvroGenericSerializer extends Serializer<GenericContainer> {<br/>\n    +    @Override<br/>\n    +    public void write(Kryo kryo, Output output, GenericContainer record) {<br/>\n    +output.writeString(record.getSchema().toString());<br/>\n    +GenericDatumWriter<GenericContainer> writer = new GenericDatumWriter<>(record.getSchema());<br/>\n    +<br/>\n    +BinaryEncoder encoder = EncoderFactory<br/>\n    +.get()<br/>\n    +.directBinaryEncoder(output, null);<br/>\n    +try </p>\n{\n    +    writer.write(record, encoder);\n    +}\n<p> catch (IOException e) </p>\n{\n    +    throw new RuntimeException(e);\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    @Override<br/>\n    +    public GenericContainer read(Kryo kryo, Input input, Class<GenericContainer> aClass) {<br/>\n    +Schema theSchema = new Schema.Parser().parse(input.readString());<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    @dossett yes you got exactly what I was thinking.  If you do have code to support an open source schema registry I would love to see that include in here too.  And changing key to fingerprint sounds like a better name to me.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612864473/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/176210410","html_url":"https://github.com/apache/storm/pull/1051#issuecomment-176210410","issue_url":"https://api.github.com/repos/apache/storm/issues/1051","id":176210410,"node_id":"MDEyOklzc3VlQ29tbWVudDE3NjIxMDQxMA==","user":{"login":"HeartSaVioR","id":1317309,"node_id":"MDQ6VXNlcjEzMTczMDk=","avatar_url":"https://avatars.githubusercontent.com/u/1317309?v=4","gravatar_id":"","url":"https://api.github.com/users/HeartSaVioR","html_url":"https://github.com/HeartSaVioR","followers_url":"https://api.github.com/users/HeartSaVioR/followers","following_url":"https://api.github.com/users/HeartSaVioR/following{/other_user}","gists_url":"https://api.github.com/users/HeartSaVioR/gists{/gist_id}","starred_url":"https://api.github.com/users/HeartSaVioR/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HeartSaVioR/subscriptions","organizations_url":"https://api.github.com/users/HeartSaVioR/orgs","repos_url":"https://api.github.com/users/HeartSaVioR/repos","events_url":"https://api.github.com/users/HeartSaVioR/events{/privacy}","received_events_url":"https://api.github.com/users/HeartSaVioR/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-28T14:35:31Z","updated_at":"2016-01-28T14:35:31Z","author_association":"CONTRIBUTOR","body":"Btw, you may want to see whole tests succeed at least once from local dev. before submitting a pull request.\nStorm has random test failures so you may have to run tests several times, but Storm normally doesn't have consistent test failures.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/176210410/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612865160","html_url":"https://github.com/apache/storm/issues/5341#issuecomment-2612865160","issue_url":"https://api.github.com/repos/apache/storm/issues/5341","id":2612865160,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4NjUxNjA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-28T14:35:33Z","updated_at":"2025-01-24T15:59:04Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user HeartSaVioR commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1051#issuecomment-176210410\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1051#issuecomment-176210410</a></p>\n\n<p>    Btw, you may want to see whole tests succeed at least once from local dev. before submitting a pull request.<br/>\n    Storm has random test failures so you may have to run tests several times, but Storm normally doesn't have consistent test failures.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612865160/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612703037","html_url":"https://github.com/apache/storm/issues/5318#issuecomment-2612703037","issue_url":"https://api.github.com/repos/apache/storm/issues/5318","id":2612703037,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI3MDMwMzc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-28T14:55:37Z","updated_at":"2025-01-24T14:45:32Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user vesense commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1038#discussion_r51131897\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1038#discussion_r51131897</a></p>\n\n<p>    &#8212; Diff: external/storm-mongodb/src/main/java/org/apache/storm/mongodb/bolt/MongoUpdateBolt.java &#8212;<br/>\n    @@ -0,0 +1,69 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.mongodb.bolt;<br/>\n    +<br/>\n    +import org.apache.commons.lang.Validate;<br/>\n    +import org.apache.storm.mongodb.common.QueryFilterCreator;<br/>\n    +import org.apache.storm.mongodb.common.mapper.MongoMapper;<br/>\n    +import org.apache.storm.topology.OutputFieldsDeclarer;<br/>\n    +import org.apache.storm.tuple.Tuple;<br/>\n    +import org.bson.Document;<br/>\n    +import org.bson.conversions.Bson;<br/>\n    +<br/>\n    +/**<br/>\n    + * Basic bolt for updating from MongoDB.<br/>\n    + *<br/>\n    + * Note: Each MongoUpdateBolt defined in a topology is tied to a specific collection.<br/>\n    + *<br/>\n    + */<br/>\n    +public class MongoUpdateBolt extends AbstractMongoBolt {<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    In MongoDB, `upsert` is an option of `UpdateRequest`:<br/>\n    >whether this update will insert a new document if no documents match the filter.  The default is false.<br/>\n    I don't think it's a better way to merge insert&update for inserting scenario.</p>\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612703037/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612703040","html_url":"https://github.com/apache/storm/issues/5318#issuecomment-2612703040","issue_url":"https://api.github.com/repos/apache/storm/issues/5318","id":2612703040,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI3MDMwNDA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-28T14:56:23Z","updated_at":"2025-01-24T14:45:32Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user vesense commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1038#discussion_r51132020\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1038#discussion_r51132020</a></p>\n\n<p>    &#8212; Diff: external/storm-mongodb/src/main/java/org/apache/storm/mongodb/trident/state/MongoState.java &#8212;<br/>\n    @@ -0,0 +1,97 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.mongodb.trident.state;<br/>\n    +<br/>\n    +import java.io.Serializable;<br/>\n    +import java.util.List;<br/>\n    +import java.util.Map;<br/>\n    +<br/>\n    +import org.apache.commons.lang.Validate;<br/>\n    +import org.apache.storm.mongodb.common.MongoDBClient;<br/>\n    +import org.apache.storm.mongodb.common.mapper.MongoMapper;<br/>\n    +import org.apache.storm.trident.operation.TridentCollector;<br/>\n    +import org.apache.storm.trident.state.State;<br/>\n    +import org.apache.storm.trident.tuple.TridentTuple;<br/>\n    +import org.bson.Document;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +import com.google.common.collect.Lists;<br/>\n    +<br/>\n    +public class MongoState implements State {<br/>\n    +<br/>\n    +    private static final Logger LOG = LoggerFactory.getLogger(MongoState.class);<br/>\n    +<br/>\n    +    private Options options;<br/>\n    +    private MongoDBClient mongoClient;<br/>\n    +    private Map map;<br/>\n    +<br/>\n    +    protected MongoState(Map map, int partitionIndex, int numPartitions, Options options) </p>\n{\n    +this.options = options;\n    +this.map = map;\n    +    }\n<p>    +<br/>\n    +    public static class Options implements Serializable {<br/>\n    +private String url;<br/>\n    +private String collectionName;<br/>\n    +private MongoMapper mapper;<br/>\n    +<br/>\n    +public Options withUrl(String url) </p>\n{\n    +    this.url = url;\n    +    return this;\n    +}\n<p>    +<br/>\n    +public Options withCollectionName(String collectionName) </p>\n{\n    +    this.collectionName = collectionName;\n    +    return this;\n    +}\n<p>    +<br/>\n    +public Options withMapper(MongoMapper mapper) </p>\n{\n    +    this.mapper = mapper;\n    +    return this;\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    protected void prepare() </p>\n{\n    +Validate.notEmpty(options.url, \"url can not be blank or null\");\n    +Validate.notEmpty(options.collectionName, \"collectionName can not be blank or null\");\n    +Validate.notNull(options.mapper, \"MongoMapper can not be null\");\n    +\n    +this.mongoClient = new MongoDBClient(options.url, options.collectionName);\n    +    }\n<p>    +<br/>\n    +    @Override<br/>\n    +    public void beginCommit(Long txid) </p>\n{\n    +LOG.debug(\"beginCommit is noop.\");\n    +    }\n<p>    +<br/>\n    +    @Override<br/>\n    +    public void commit(Long txid) </p>\n{\n    +LOG.debug(\"commit is noop.\");\n    +    }\n<p>    +<br/>\n    +    public void updateState(List<TridentTuple> tuples, TridentCollector collector) {<br/>\n    +List<Document> documents = Lists.newArrayList();<br/>\n    +for (TridentTuple tuple : tuples) </p>\n{\n    +    Document document = options.mapper.toDocument(tuple);\n    +    documents.add(document);\n    +}\n<p>    +this.mongoClient.insert(documents);<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    @revans2 Like RDBMS, if no unique index created or having a different primary key(`_id`), the existing documents can be inserted again.</p>\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612703040/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/176224452","html_url":"https://github.com/apache/storm/pull/1038#issuecomment-176224452","issue_url":"https://api.github.com/repos/apache/storm/issues/1038","id":176224452,"node_id":"MDEyOklzc3VlQ29tbWVudDE3NjIyNDQ1Mg==","user":{"login":"vesense","id":6711230,"node_id":"MDQ6VXNlcjY3MTEyMzA=","avatar_url":"https://avatars.githubusercontent.com/u/6711230?v=4","gravatar_id":"","url":"https://api.github.com/users/vesense","html_url":"https://github.com/vesense","followers_url":"https://api.github.com/users/vesense/followers","following_url":"https://api.github.com/users/vesense/following{/other_user}","gists_url":"https://api.github.com/users/vesense/gists{/gist_id}","starred_url":"https://api.github.com/users/vesense/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vesense/subscriptions","organizations_url":"https://api.github.com/users/vesense/orgs","repos_url":"https://api.github.com/users/vesense/repos","events_url":"https://api.github.com/users/vesense/events{/privacy}","received_events_url":"https://api.github.com/users/vesense/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-28T14:56:38Z","updated_at":"2016-01-28T14:56:38Z","author_association":"MEMBER","body":"@ptgoetz @HeartSaVioR Could you have a chance to take a look?\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/176224452/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612703048","html_url":"https://github.com/apache/storm/issues/5318#issuecomment-2612703048","issue_url":"https://api.github.com/repos/apache/storm/issues/5318","id":2612703048,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI3MDMwNDg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-28T14:56:39Z","updated_at":"2025-01-24T14:45:32Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user vesense commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1038#issuecomment-176224452\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1038#issuecomment-176224452</a></p>\n\n<p>    @ptgoetz @HeartSaVioR Could you have a chance to take a look?</p>\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612703048/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612703052","html_url":"https://github.com/apache/storm/issues/5318#issuecomment-2612703052","issue_url":"https://api.github.com/repos/apache/storm/issues/5318","id":2612703052,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI3MDMwNTI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-28T15:05:00Z","updated_at":"2025-01-24T14:45:32Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1038#discussion_r51133208\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1038#discussion_r51133208</a></p>\n\n<p>    &#8212; Diff: external/storm-mongodb/src/main/java/org/apache/storm/mongodb/trident/state/MongoState.java &#8212;<br/>\n    @@ -0,0 +1,97 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.mongodb.trident.state;<br/>\n    +<br/>\n    +import java.io.Serializable;<br/>\n    +import java.util.List;<br/>\n    +import java.util.Map;<br/>\n    +<br/>\n    +import org.apache.commons.lang.Validate;<br/>\n    +import org.apache.storm.mongodb.common.MongoDBClient;<br/>\n    +import org.apache.storm.mongodb.common.mapper.MongoMapper;<br/>\n    +import org.apache.storm.trident.operation.TridentCollector;<br/>\n    +import org.apache.storm.trident.state.State;<br/>\n    +import org.apache.storm.trident.tuple.TridentTuple;<br/>\n    +import org.bson.Document;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +import com.google.common.collect.Lists;<br/>\n    +<br/>\n    +public class MongoState implements State {<br/>\n    +<br/>\n    +    private static final Logger LOG = LoggerFactory.getLogger(MongoState.class);<br/>\n    +<br/>\n    +    private Options options;<br/>\n    +    private MongoDBClient mongoClient;<br/>\n    +    private Map map;<br/>\n    +<br/>\n    +    protected MongoState(Map map, int partitionIndex, int numPartitions, Options options) </p>\n{\n    +this.options = options;\n    +this.map = map;\n    +    }\n<p>    +<br/>\n    +    public static class Options implements Serializable {<br/>\n    +private String url;<br/>\n    +private String collectionName;<br/>\n    +private MongoMapper mapper;<br/>\n    +<br/>\n    +public Options withUrl(String url) </p>\n{\n    +    this.url = url;\n    +    return this;\n    +}\n<p>    +<br/>\n    +public Options withCollectionName(String collectionName) </p>\n{\n    +    this.collectionName = collectionName;\n    +    return this;\n    +}\n<p>    +<br/>\n    +public Options withMapper(MongoMapper mapper) </p>\n{\n    +    this.mapper = mapper;\n    +    return this;\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    protected void prepare() </p>\n{\n    +Validate.notEmpty(options.url, \"url can not be blank or null\");\n    +Validate.notEmpty(options.collectionName, \"collectionName can not be blank or null\");\n    +Validate.notNull(options.mapper, \"MongoMapper can not be null\");\n    +\n    +this.mongoClient = new MongoDBClient(options.url, options.collectionName);\n    +    }\n<p>    +<br/>\n    +    @Override<br/>\n    +    public void beginCommit(Long txid) </p>\n{\n    +LOG.debug(\"beginCommit is noop.\");\n    +    }\n<p>    +<br/>\n    +    @Override<br/>\n    +    public void commit(Long txid) </p>\n{\n    +LOG.debug(\"commit is noop.\");\n    +    }\n<p>    +<br/>\n    +    public void updateState(List<TridentTuple> tuples, TridentCollector collector) {<br/>\n    +List<Document> documents = Lists.newArrayList();<br/>\n    +for (TridentTuple tuple : tuples) </p>\n{\n    +    Document document = options.mapper.toDocument(tuple);\n    +    documents.add(document);\n    +}\n<p>    +this.mongoClient.insert(documents);<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Then my only comment would be to add that to the documentation.  If there is no primary key provided trident state inserts in the case of failures may result in duplicate documents.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612703052/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/176227654","html_url":"https://github.com/apache/storm/pull/1053#issuecomment-176227654","issue_url":"https://api.github.com/repos/apache/storm/issues/1053","id":176227654,"node_id":"MDEyOklzc3VlQ29tbWVudDE3NjIyNzY1NA==","user":{"login":"revans2","id":3441321,"node_id":"MDQ6VXNlcjM0NDEzMjE=","avatar_url":"https://avatars.githubusercontent.com/u/3441321?v=4","gravatar_id":"","url":"https://api.github.com/users/revans2","html_url":"https://github.com/revans2","followers_url":"https://api.github.com/users/revans2/followers","following_url":"https://api.github.com/users/revans2/following{/other_user}","gists_url":"https://api.github.com/users/revans2/gists{/gist_id}","starred_url":"https://api.github.com/users/revans2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/revans2/subscriptions","organizations_url":"https://api.github.com/users/revans2/orgs","repos_url":"https://api.github.com/users/revans2/repos","events_url":"https://api.github.com/users/revans2/events{/privacy}","received_events_url":"https://api.github.com/users/revans2/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-28T15:06:28Z","updated_at":"2016-01-28T15:06:28Z","author_association":"CONTRIBUTOR","body":"Rat is complaining about some of your files not having the correct license.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/176227654/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/176232405","html_url":"https://github.com/apache/storm/pull/1051#issuecomment-176232405","issue_url":"https://api.github.com/repos/apache/storm/issues/1051","id":176232405,"node_id":"MDEyOklzc3VlQ29tbWVudDE3NjIzMjQwNQ==","user":{"login":"hustfxj","id":7270212,"node_id":"MDQ6VXNlcjcyNzAyMTI=","avatar_url":"https://avatars.githubusercontent.com/u/7270212?v=4","gravatar_id":"","url":"https://api.github.com/users/hustfxj","html_url":"https://github.com/hustfxj","followers_url":"https://api.github.com/users/hustfxj/followers","following_url":"https://api.github.com/users/hustfxj/following{/other_user}","gists_url":"https://api.github.com/users/hustfxj/gists{/gist_id}","starred_url":"https://api.github.com/users/hustfxj/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hustfxj/subscriptions","organizations_url":"https://api.github.com/users/hustfxj/orgs","repos_url":"https://api.github.com/users/hustfxj/repos","events_url":"https://api.github.com/users/hustfxj/events{/privacy}","received_events_url":"https://api.github.com/users/hustfxj/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-28T15:20:16Z","updated_at":"2016-01-28T15:20:16Z","author_association":"CONTRIBUTOR","body":"@HeartSaVioR @revans2  Thanks for your explanation. In fact I'm not particularly familiar with clojure. So I run into issues with local tests. But I will try my best to port clojure to java for storm. Thanks again!\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/176232405/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612865168","html_url":"https://github.com/apache/storm/issues/5341#issuecomment-2612865168","issue_url":"https://api.github.com/repos/apache/storm/issues/5341","id":2612865168,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4NjUxNjg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-28T15:20:18Z","updated_at":"2025-01-24T15:59:04Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user hustfxj commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1051#issuecomment-176232405\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1051#issuecomment-176232405</a></p>\n\n<p>    @HeartSaVioR @revans2  Thanks for your explanation. In fact I'm not particularly familiar with clojure. So I run into issues with local tests. But I will try my best to port clojure to java for storm. Thanks again!</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612865168/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612650128","html_url":"https://github.com/apache/storm/issues/5094#issuecomment-2612650128","issue_url":"https://api.github.com/repos/apache/storm/issues/5094","id":2612650128,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NTAxMjg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-28T15:36:39Z","updated_at":"2025-01-24T14:22:36Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user hustfxj commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1047#discussion_r51137926\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1047#discussion_r51137926</a></p>\n\n<p>    &#8212; Diff: storm-core/test/clj/org/apache/storm/cluster_test.clj &#8212;<br/>\n    @@ -308,11 +309,11 @@</p>\n\n<p>     (deftest test-cluster-state-default-acls<br/>\n       (testing \"The default ACLs are empty.\"</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>(stubbing [zk/mkdirs nil<br/>\n    +    (stubbing [Zookeeper/mkdirs nil\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    ```<br/>\n(with-open [_ (proxy <span class=\"error\">&#91;MockedZookeeper&#93;</span> []<br/>\n(mkdirsImpl [] nil))]<br/>\n  (stubbing [zk/mk-client (reify CuratorFramework (^void close <span class=\"error\">&#91;this&#93;</span> nil))]<br/>\n  (mk-distributed-cluster-state {})<br/>\n;  (verify-call-times-for mkdirsImpl 1)  //help<br/>\n ; (verify-first-call-args-for-indices mkdirsImpl <span class=\"error\">&#91;2&#93;</span> nil)))  //help<br/>\n    ```<br/>\n    @revans2  can u help me? I update the code, but I don't how  update \"verify-call-times-for \" and verify-first-call-args-for-indices here. </p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612650128/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/176276904","html_url":"https://github.com/apache/storm/pull/1030#issuecomment-176276904","issue_url":"https://api.github.com/repos/apache/storm/issues/1030","id":176276904,"node_id":"MDEyOklzc3VlQ29tbWVudDE3NjI3NjkwNA==","user":{"login":"knusbaum","id":1819836,"node_id":"MDQ6VXNlcjE4MTk4MzY=","avatar_url":"https://avatars.githubusercontent.com/u/1819836?v=4","gravatar_id":"","url":"https://api.github.com/users/knusbaum","html_url":"https://github.com/knusbaum","followers_url":"https://api.github.com/users/knusbaum/followers","following_url":"https://api.github.com/users/knusbaum/following{/other_user}","gists_url":"https://api.github.com/users/knusbaum/gists{/gist_id}","starred_url":"https://api.github.com/users/knusbaum/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/knusbaum/subscriptions","organizations_url":"https://api.github.com/users/knusbaum/orgs","repos_url":"https://api.github.com/users/knusbaum/repos","events_url":"https://api.github.com/users/knusbaum/events{/privacy}","received_events_url":"https://api.github.com/users/knusbaum/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-28T16:44:13Z","updated_at":"2016-01-28T16:44:13Z","author_association":"CONTRIBUTOR","body":"+1\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/176276904/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612643932","html_url":"https://github.com/apache/storm/issues/5064#issuecomment-2612643932","issue_url":"https://api.github.com/repos/apache/storm/issues/5064","id":2612643932,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NDM5MzI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-28T16:44:14Z","updated_at":"2025-01-24T14:19:54Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user knusbaum commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1030#issuecomment-176276904\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1030#issuecomment-176276904</a></p>\n\n<p>    +1</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612643932/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/176292755","html_url":"https://github.com/apache/storm/pull/1054#issuecomment-176292755","issue_url":"https://api.github.com/repos/apache/storm/issues/1054","id":176292755,"node_id":"MDEyOklzc3VlQ29tbWVudDE3NjI5Mjc1NQ==","user":{"login":"jerrypeng","id":3613359,"node_id":"MDQ6VXNlcjM2MTMzNTk=","avatar_url":"https://avatars.githubusercontent.com/u/3613359?v=4","gravatar_id":"","url":"https://api.github.com/users/jerrypeng","html_url":"https://github.com/jerrypeng","followers_url":"https://api.github.com/users/jerrypeng/followers","following_url":"https://api.github.com/users/jerrypeng/following{/other_user}","gists_url":"https://api.github.com/users/jerrypeng/gists{/gist_id}","starred_url":"https://api.github.com/users/jerrypeng/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jerrypeng/subscriptions","organizations_url":"https://api.github.com/users/jerrypeng/orgs","repos_url":"https://api.github.com/users/jerrypeng/repos","events_url":"https://api.github.com/users/jerrypeng/events{/privacy}","received_events_url":"https://api.github.com/users/jerrypeng/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-28T17:28:59Z","updated_at":"2016-01-28T17:28:59Z","author_association":"CONTRIBUTOR","body":"@HeartSaVioR @unsleepy22 @revans2 thanks for the review! I think I have address all of your comments\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/176292755/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/176296318","html_url":"https://github.com/apache/storm/pull/1043#issuecomment-176296318","issue_url":"https://api.github.com/repos/apache/storm/issues/1043","id":176296318,"node_id":"MDEyOklzc3VlQ29tbWVudDE3NjI5NjMxOA==","user":{"login":"knusbaum","id":1819836,"node_id":"MDQ6VXNlcjE4MTk4MzY=","avatar_url":"https://avatars.githubusercontent.com/u/1819836?v=4","gravatar_id":"","url":"https://api.github.com/users/knusbaum","html_url":"https://github.com/knusbaum","followers_url":"https://api.github.com/users/knusbaum/followers","following_url":"https://api.github.com/users/knusbaum/following{/other_user}","gists_url":"https://api.github.com/users/knusbaum/gists{/gist_id}","starred_url":"https://api.github.com/users/knusbaum/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/knusbaum/subscriptions","organizations_url":"https://api.github.com/users/knusbaum/orgs","repos_url":"https://api.github.com/users/knusbaum/repos","events_url":"https://api.github.com/users/knusbaum/events{/privacy}","received_events_url":"https://api.github.com/users/knusbaum/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-28T17:36:09Z","updated_at":"2016-01-28T17:36:09Z","author_association":"CONTRIBUTOR","body":"Also, will you kindly edit the title of this PR so it follows protocol?\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/176296318/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612643936","html_url":"https://github.com/apache/storm/issues/5064#issuecomment-2612643936","issue_url":"https://api.github.com/repos/apache/storm/issues/5064","id":2612643936,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NDM5MzY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-28T17:49:54Z","updated_at":"2025-01-24T14:19:54Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user asfgit closed the pull request at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1030\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1030</a></p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612643936/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/176321658","html_url":"https://github.com/apache/storm/pull/1026#issuecomment-176321658","issue_url":"https://api.github.com/repos/apache/storm/issues/1026","id":176321658,"node_id":"MDEyOklzc3VlQ29tbWVudDE3NjMyMTY1OA==","user":{"login":"abhishekagarwal87","id":1477457,"node_id":"MDQ6VXNlcjE0Nzc0NTc=","avatar_url":"https://avatars.githubusercontent.com/u/1477457?v=4","gravatar_id":"","url":"https://api.github.com/users/abhishekagarwal87","html_url":"https://github.com/abhishekagarwal87","followers_url":"https://api.github.com/users/abhishekagarwal87/followers","following_url":"https://api.github.com/users/abhishekagarwal87/following{/other_user}","gists_url":"https://api.github.com/users/abhishekagarwal87/gists{/gist_id}","starred_url":"https://api.github.com/users/abhishekagarwal87/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/abhishekagarwal87/subscriptions","organizations_url":"https://api.github.com/users/abhishekagarwal87/orgs","repos_url":"https://api.github.com/users/abhishekagarwal87/repos","events_url":"https://api.github.com/users/abhishekagarwal87/events{/privacy}","received_events_url":"https://api.github.com/users/abhishekagarwal87/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-28T18:23:06Z","updated_at":"2016-01-28T18:23:06Z","author_association":"CONTRIBUTOR","body":"can this be merged?\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/176321658/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612698430","html_url":"https://github.com/apache/storm/issues/5290#issuecomment-2612698430","issue_url":"https://api.github.com/repos/apache/storm/issues/5290","id":2612698430,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTg0MzA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-28T18:23:08Z","updated_at":"2025-01-24T14:43:35Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user abhishekagarwal87 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1026#issuecomment-176321658\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1026#issuecomment-176321658</a></p>\n\n<p>    can this be merged?</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612698430/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612650133","html_url":"https://github.com/apache/storm/issues/5094#issuecomment-2612650133","issue_url":"https://api.github.com/repos/apache/storm/issues/5094","id":2612650133,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NTAxMzM=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-28T18:57:05Z","updated_at":"2025-01-24T14:22:36Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1047#discussion_r51168731\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1047#discussion_r51168731</a></p>\n\n<p>    &#8212; Diff: storm-core/test/clj/org/apache/storm/cluster_test.clj &#8212;<br/>\n    @@ -308,11 +309,11 @@</p>\n\n<p>     (deftest test-cluster-state-default-acls<br/>\n       (testing \"The default ACLs are empty.\"</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>(stubbing [zk/mkdirs nil<br/>\n    +    (stubbing [Zookeeper/mkdirs nil\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    I'll take a look and see if I can put a pull request up to your branch.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612650133/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612864482","html_url":"https://github.com/apache/storm/issues/5339#issuecomment-2612864482","issue_url":"https://api.github.com/repos/apache/storm/issues/5339","id":2612864482,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4NjQ0ODI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-28T19:11:43Z","updated_at":"2025-01-24T15:58:47Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user dossett commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1052#discussion_r51171090\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1052#discussion_r51171090</a></p>\n\n<p>    &#8212; Diff: external/storm-hdfs/src/main/java/org/apache/storm/hdfs/common/AvroGenericSerializer.java &#8212;<br/>\n    @@ -0,0 +1,70 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.hdfs.common;<br/>\n    +<br/>\n    +import com.esotericsoftware.kryo.Kryo;<br/>\n    +import com.esotericsoftware.kryo.Serializer;<br/>\n    +import com.esotericsoftware.kryo.io.Input;<br/>\n    +import com.esotericsoftware.kryo.io.Output;<br/>\n    +import org.apache.avro.Schema;<br/>\n    +import org.apache.avro.generic.GenericContainer;<br/>\n    +import org.apache.avro.generic.GenericDatumReader;<br/>\n    +import org.apache.avro.generic.GenericDatumWriter;<br/>\n    +import org.apache.avro.io.BinaryEncoder;<br/>\n    +import org.apache.avro.io.Decoder;<br/>\n    +import org.apache.avro.io.DecoderFactory;<br/>\n    +import org.apache.avro.io.EncoderFactory;<br/>\n    +<br/>\n    +import java.io.IOException;<br/>\n    +<br/>\n    +//Generously adapted from:<br/>\n    +//<a href=\"https://github.com/kijiproject/kiji-express/blob/master/kiji-express/src/main/scala/org/kiji/express/flow/framework/serialization/AvroSerializer.scala\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/kijiproject/kiji-express/blob/master/kiji-express/src/main/scala/org/kiji/express/flow/framework/serialization/AvroSerializer.scala</a><br/>\n    +//Which has as an ASL2.0 license<br/>\n    +public class AvroGenericSerializer extends Serializer<GenericContainer> {<br/>\n    +    @Override<br/>\n    +    public void write(Kryo kryo, Output output, GenericContainer record) {<br/>\n    +output.writeString(record.getSchema().toString());<br/>\n    +GenericDatumWriter<GenericContainer> writer = new GenericDatumWriter<>(record.getSchema());<br/>\n    +<br/>\n    +BinaryEncoder encoder = EncoderFactory<br/>\n    +.get()<br/>\n    +.directBinaryEncoder(output, null);<br/>\n    +try </p>\n{\n    +    writer.write(record, encoder);\n    +}\n<p> catch (IOException e) </p>\n{\n    +    throw new RuntimeException(e);\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    @Override<br/>\n    +    public GenericContainer read(Kryo kryo, Input input, Class<GenericContainer> aClass) {<br/>\n    +Schema theSchema = new Schema.Parser().parse(input.readString());<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    I pushed a commit that includes a lot of the above, but is not complete.</p>\n\n<p>    @revans2 I included support for Confluent's registry.  Some basic testing in our (Target's) dev environments seemed good.<br/>\n    @abhishekagarwal87 I haven't used BiMaps before, so I'm sure that part could be greatly improved.</p>\n\n<p>    Still to be done:</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>make the the unit tests more robust and parameterized.</li>\n\t<li>add capability to inject different AvroSchemaRegistry implementations into the generic serializer, which might be challenging</li>\n</ul>\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612864482/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612650137","html_url":"https://github.com/apache/storm/issues/5094#issuecomment-2612650137","issue_url":"https://api.github.com/repos/apache/storm/issues/5094","id":2612650137,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NTAxMzc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-28T19:32:49Z","updated_at":"2025-01-24T14:22:36Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1047#discussion_r51174346\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1047#discussion_r51174346</a></p>\n\n<p>    &#8212; Diff: storm-core/test/clj/org/apache/storm/cluster_test.clj &#8212;<br/>\n    @@ -308,11 +309,11 @@</p>\n\n<p>     (deftest test-cluster-state-default-acls<br/>\n       (testing \"The default ACLs are empty.\"</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>(stubbing [zk/mkdirs nil<br/>\n    +    (stubbing [Zookeeper/mkdirs nil\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    The pull request for this is up <a href=\"https://github.com/hustfxj/storm/pull/1\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/hustfxj/storm/pull/1</a></p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612650137/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/176444835","html_url":"https://github.com/apache/storm/pull/1053#issuecomment-176444835","issue_url":"https://api.github.com/repos/apache/storm/issues/1053","id":176444835,"node_id":"MDEyOklzc3VlQ29tbWVudDE3NjQ0NDgzNQ==","user":{"login":"jerrypeng","id":3613359,"node_id":"MDQ6VXNlcjM2MTMzNTk=","avatar_url":"https://avatars.githubusercontent.com/u/3613359?v=4","gravatar_id":"","url":"https://api.github.com/users/jerrypeng","html_url":"https://github.com/jerrypeng","followers_url":"https://api.github.com/users/jerrypeng/followers","following_url":"https://api.github.com/users/jerrypeng/following{/other_user}","gists_url":"https://api.github.com/users/jerrypeng/gists{/gist_id}","starred_url":"https://api.github.com/users/jerrypeng/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jerrypeng/subscriptions","organizations_url":"https://api.github.com/users/jerrypeng/orgs","repos_url":"https://api.github.com/users/jerrypeng/repos","events_url":"https://api.github.com/users/jerrypeng/events{/privacy}","received_events_url":"https://api.github.com/users/jerrypeng/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-28T22:12:59Z","updated_at":"2016-01-28T22:12:59Z","author_association":"CONTRIBUTOR","body":"@revans2 thank you for the review.  I added the apache headers to files that were missing them and addressed all of your comments\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/176444835/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/176445555","html_url":"https://github.com/apache/storm/pull/1050#issuecomment-176445555","issue_url":"https://api.github.com/repos/apache/storm/issues/1050","id":176445555,"node_id":"MDEyOklzc3VlQ29tbWVudDE3NjQ0NTU1NQ==","user":{"login":"ptgoetz","id":260896,"node_id":"MDQ6VXNlcjI2MDg5Ng==","avatar_url":"https://avatars.githubusercontent.com/u/260896?v=4","gravatar_id":"","url":"https://api.github.com/users/ptgoetz","html_url":"https://github.com/ptgoetz","followers_url":"https://api.github.com/users/ptgoetz/followers","following_url":"https://api.github.com/users/ptgoetz/following{/other_user}","gists_url":"https://api.github.com/users/ptgoetz/gists{/gist_id}","starred_url":"https://api.github.com/users/ptgoetz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ptgoetz/subscriptions","organizations_url":"https://api.github.com/users/ptgoetz/orgs","repos_url":"https://api.github.com/users/ptgoetz/repos","events_url":"https://api.github.com/users/ptgoetz/events{/privacy}","received_events_url":"https://api.github.com/users/ptgoetz/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-28T22:14:45Z","updated_at":"2016-01-28T22:14:45Z","author_association":"MEMBER","body":"@arunmahadevan you read my mind with the addition of the `filter()` method, but I'm curious why you didn't use the existing `each()` method for it?\n\nFor example:\n\n``` java\n    public Stream filter(Fields inputFields, Filter filter) {\n        return each(inputFields, new FilterExecutor(filter), new Fields());\n    }\n\n    public Stream filter(Filter filter) {\n        return filter(getOutputFields(), filter);\n    }\n```\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/176445555/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612864905","html_url":"https://github.com/apache/storm/issues/5340#issuecomment-2612864905","issue_url":"https://api.github.com/repos/apache/storm/issues/5340","id":2612864905,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4NjQ5MDU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-28T22:14:46Z","updated_at":"2025-01-24T15:58:57Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user ptgoetz commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1050#issuecomment-176445555\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1050#issuecomment-176445555</a></p>\n\n<p>    @arunmahadevan you read my mind with the addition of the `filter()` method, but I'm curious why you didn't use the existing `each()` method for it?</p>\n\n<p>    For example:</p>\n\n<p>    ```java<br/>\npublic Stream filter(Fields inputFields, Filter filter) </p>\n{\n    return each(inputFields, new FilterExecutor(filter), new Fields());\n}\n\n<p>public Stream filter(Filter filter) </p>\n{\n    return filter(getOutputFields(), filter);\n}\n<p>    ```</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612864905/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/176521472","html_url":"https://github.com/apache/storm/pull/1056#issuecomment-176521472","issue_url":"https://api.github.com/repos/apache/storm/issues/1056","id":176521472,"node_id":"MDEyOklzc3VlQ29tbWVudDE3NjUyMTQ3Mg==","user":{"login":"HeartSaVioR","id":1317309,"node_id":"MDQ6VXNlcjEzMTczMDk=","avatar_url":"https://avatars.githubusercontent.com/u/1317309?v=4","gravatar_id":"","url":"https://api.github.com/users/HeartSaVioR","html_url":"https://github.com/HeartSaVioR","followers_url":"https://api.github.com/users/HeartSaVioR/followers","following_url":"https://api.github.com/users/HeartSaVioR/following{/other_user}","gists_url":"https://api.github.com/users/HeartSaVioR/gists{/gist_id}","starred_url":"https://api.github.com/users/HeartSaVioR/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HeartSaVioR/subscriptions","organizations_url":"https://api.github.com/users/HeartSaVioR/orgs","repos_url":"https://api.github.com/users/HeartSaVioR/repos","events_url":"https://api.github.com/users/HeartSaVioR/events{/privacy}","received_events_url":"https://api.github.com/users/HeartSaVioR/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-29T02:00:15Z","updated_at":"2016-01-29T02:00:15Z","author_association":"CONTRIBUTOR","body":"I'm sorry, but I can't totally understand what the pull request is.\nApache Storm doesn't need to be compatible with Heron which is closed-source.\n@yhartanto Could you clarify?\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/176521472/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/176525935","html_url":"https://github.com/apache/storm/pull/1056#issuecomment-176525935","issue_url":"https://api.github.com/repos/apache/storm/issues/1056","id":176525935,"node_id":"MDEyOklzc3VlQ29tbWVudDE3NjUyNTkzNQ==","user":{"login":"erikdw","id":1111441,"node_id":"MDQ6VXNlcjExMTE0NDE=","avatar_url":"https://avatars.githubusercontent.com/u/1111441?v=4","gravatar_id":"","url":"https://api.github.com/users/erikdw","html_url":"https://github.com/erikdw","followers_url":"https://api.github.com/users/erikdw/followers","following_url":"https://api.github.com/users/erikdw/following{/other_user}","gists_url":"https://api.github.com/users/erikdw/gists{/gist_id}","starred_url":"https://api.github.com/users/erikdw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/erikdw/subscriptions","organizations_url":"https://api.github.com/users/erikdw/orgs","repos_url":"https://api.github.com/users/erikdw/repos","events_url":"https://api.github.com/users/erikdw/events{/privacy}","received_events_url":"https://api.github.com/users/erikdw/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-29T02:13:06Z","updated_at":"2016-01-29T02:13:06Z","author_association":"CONTRIBUTOR","body":"+1 for the number of changes in this PR I would hope there would be some more description of the _what_ and the _why_.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/176525935/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612650143","html_url":"https://github.com/apache/storm/issues/5094#issuecomment-2612650143","issue_url":"https://api.github.com/repos/apache/storm/issues/5094","id":2612650143,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NTAxNDM=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-29T05:03:43Z","updated_at":"2025-01-24T14:22:36Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user vesense commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1047#discussion_r51226260\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1047#discussion_r51226260</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/zookeeper/Zookeeper.java &#8212;<br/>\n    @@ -0,0 +1,430 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.zookeeper;<br/>\n    +<br/>\n    +import clojure.lang.APersistentMap;<br/>\n    +import clojure.lang.PersistentArrayMap;<br/>\n    +import clojure.lang.RT;<br/>\n    +import org.apache.commons.lang.StringUtils;<br/>\n    +import org.apache.curator.framework.CuratorFramework;<br/>\n    +import org.apache.curator.framework.api.CuratorEvent;<br/>\n    +import org.apache.curator.framework.api.CuratorEventType;<br/>\n    +import org.apache.curator.framework.api.CuratorListener;<br/>\n    +import org.apache.curator.framework.api.UnhandledErrorListener;<br/>\n    +import org.apache.curator.framework.recipes.leader.LeaderLatch;<br/>\n    +import org.apache.curator.framework.recipes.leader.LeaderLatchListener;<br/>\n    +import org.apache.curator.framework.recipes.leader.Participant;<br/>\n    +import org.apache.curator.framework.state.ConnectionStateListener;<br/>\n    +import org.apache.storm.Config;<br/>\n    +import org.apache.storm.callback.DefaultWatcherCallBack;<br/>\n    +import org.apache.storm.callback.WatcherCallBack;<br/>\n    +import org.apache.storm.nimbus.ILeaderElector;<br/>\n    +import org.apache.storm.nimbus.NimbusInfo;<br/>\n    +import org.apache.storm.utils.Utils;<br/>\n    +import org.apache.storm.utils.ZookeeperAuthInfo;<br/>\n    +import org.apache.zookeeper.KeeperException;<br/>\n    +import org.apache.zookeeper.WatchedEvent;<br/>\n    +import org.apache.zookeeper.data.ACL;<br/>\n    +import org.apache.zookeeper.data.Stat;<br/>\n    +import org.apache.zookeeper.server.NIOServerCnxnFactory;<br/>\n    +import org.apache.zookeeper.server.ZooKeeperServer;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +import java.io.File;<br/>\n    +import java.io.IOException;<br/>\n    +import java.net.BindException;<br/>\n    +import java.net.InetAddress;<br/>\n    +import java.net.InetSocketAddress;<br/>\n    +import java.net.UnknownHostException;<br/>\n    +import java.util.Arrays;<br/>\n    +import java.util.ArrayList;<br/>\n    +import java.util.List;<br/>\n    +import java.util.Map;<br/>\n    +import java.util.concurrent.atomic.AtomicReference;<br/>\n    +<br/>\n    +public class Zookeeper {<br/>\n    +    private static Logger LOG = LoggerFactory.getLogger(Zookeeper.class);<br/>\n    +<br/>\n    +    // A singleton instance allows us to mock delegated static methods in our<br/>\n    +    // tests by subclassing.<br/>\n    +    private static final Zookeeper INSTANCE = new Zookeeper();<br/>\n    +    private static Zookeeper _instance = INSTANCE;<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Provide an instance of this class for delegates to use.  To mock out<br/>\n    +     * delegated methods, provide an instance of a subclass that overrides the<br/>\n    +     * implementation of the delegated method.<br/>\n    +     *<br/>\n    +     * @param u a Zookeeper instance<br/>\n    +     */<br/>\n    +    public static void setInstance(Zookeeper u) </p>\n{\n    +_instance = u;\n    +    }\n<p>    +<br/>\n    +    /**<br/>\n    +     * Resets the singleton instance to the default. This is helpful to reset<br/>\n    +     * the class to its original functionality when mocking is no longer<br/>\n    +     * desired.<br/>\n    +     */<br/>\n    +    public static void resetInstance() </p>\n{\n    +_instance = INSTANCE;\n    +    }\n<p>    +<br/>\n    +    public static CuratorFramework mkClient(Map conf, List<String> servers, Object port, String root) </p>\n{\n    +return mkClient(conf, servers, port, root, new DefaultWatcherCallBack());\n    +    }\n<p>    +<br/>\n    +    public static CuratorFramework mkClient(Map conf, List<String> servers, Object port, Map authConf) </p>\n{\n    +return mkClient(conf, servers, port, \"\", new DefaultWatcherCallBack(), authConf);\n    +    }\n<p>    +<br/>\n    +    public static CuratorFramework mkClient(Map conf, List<String> servers, Object port, String root, Map authConf) </p>\n{\n    +return mkClient(conf, servers, port, root, new DefaultWatcherCallBack(), authConf);\n    +    }\n<p>    +<br/>\n    +    public static CuratorFramework mkClient(Map conf, List<String> servers, Object port, String root, final WatcherCallBack watcher, Map authConf) {<br/>\n    +CuratorFramework fk;<br/>\n    +if (authConf != null) </p>\n{\n    +    fk = Utils.newCurator(conf, servers, port, root, new ZookeeperAuthInfo(authConf));\n    +}\n<p> else </p>\n{\n    +    fk = Utils.newCurator(conf, servers, port, root);\n    +}\n<p>    +<br/>\n    +fk.getCuratorListenable().addListener(new CuratorListener() {<br/>\n    +    @Override<br/>\n    +    public void eventReceived(CuratorFramework _fk, CuratorEvent e) throws Exception {<br/>\n    +if (e.getType().equals(CuratorEventType.WATCHED)) </p>\n{\n    +    WatchedEvent event = e.getWatchedEvent();\n    +    watcher.execute(event.getState(), event.getType(), event.getPath());\n    +}\n<p>    +    }<br/>\n    +});<br/>\n    +fk.start();<br/>\n    +return fk;<br/>\n    +    }<br/>\n    +<br/>\n    +    /**<br/>\n    +     * connect ZK, register Watch/unhandle Watch<br/>\n    +     *<br/>\n    +     * @return<br/>\n    +     */<br/>\n    +    public static CuratorFramework mkClient(Map conf, List<String> servers, Object port, String root, final WatcherCallBack watcher) </p>\n{\n    +return mkClient(conf, servers, port, root, watcher, null);\n    +    }\n<p>    +<br/>\n    +    public static String createNode(CuratorFramework zk, String path, byte[] data, org.apache.zookeeper.CreateMode mode, List<ACL> acls) {<br/>\n    +String ret = null;<br/>\n    +try </p>\n{\n    +    String npath = normalizePath(path);\n    +    ret = zk.create().creatingParentsIfNeeded().withMode(mode).withACL(acls).forPath(npath, data);\n    +}\n<p> catch (Exception e) </p>\n{\n    +    throw Utils.wrapInRuntime(e);\n    +}<br/>\n    +return ret;<br/>\n    +    }<br/>\n    +<br/>\n    +    public static String createNode(CuratorFramework zk, String path, byte[] data, List<ACL> acls){\n    +return createNode(zk, path, data, org.apache.zookeeper.CreateMode.PERSISTENT, acls);\n    +    }<br/>\n    +<br/>\n    +    public static boolean existsNode(CuratorFramework zk, String path, boolean watch){<br/>\n    +Stat stat = null;<br/>\n    +try {<br/>\n    +    if (watch) {\n    +stat = zk.checkExists().watched().forPath(normalizePath(path));\n    +    } else {\n    +stat = zk.checkExists().forPath(normalizePath(path));\n    +    }<br/>\n    +} catch (Exception e) {    +    throw Utils.wrapInRuntime(e);    +}\n<p>    +return stat != null;<br/>\n    +    }<br/>\n    +<br/>\n    +    public static void deleteNode(CuratorFramework zk, String path){<br/>\n    +try {<br/>\n    +    String npath = normalizePath(path);<br/>\n    +    if (existsNode(zk, npath, false)) </p>\n{\n    +zk.delete().deletingChildrenIfNeeded().forPath(normalizePath(path));\n    +    }\n<p>    +} catch (Exception e) {<br/>\n    +    if (exceptionCause(KeeperException.NodeExistsException.class, e)) {<br/>\n    +// do nothing<br/>\n    +LOG.info(\"exception\", e);<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    It's better to change the log message a little bit more descriptive.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612650143/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612650144","html_url":"https://github.com/apache/storm/issues/5094#issuecomment-2612650144","issue_url":"https://api.github.com/repos/apache/storm/issues/5094","id":2612650144,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NTAxNDQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-29T05:07:19Z","updated_at":"2025-01-24T14:22:36Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user vesense commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1047#discussion_r51226398\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1047#discussion_r51226398</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/zookeeper/LeaderElectorImp.java &#8212;<br/>\n    @@ -0,0 +1,121 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.zookeeper;<br/>\n    +<br/>\n    +import org.apache.curator.framework.CuratorFramework;<br/>\n    +import org.apache.curator.framework.recipes.leader.LeaderLatch;<br/>\n    +import org.apache.curator.framework.recipes.leader.LeaderLatchListener;<br/>\n    +import org.apache.curator.framework.recipes.leader.Participant;<br/>\n    +import org.apache.storm.nimbus.ILeaderElector;<br/>\n    +import org.apache.storm.nimbus.NimbusInfo;<br/>\n    +import org.apache.storm.utils.Utils;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +import java.io.IOException;<br/>\n    +import java.util.ArrayList;<br/>\n    +import java.util.Collection;<br/>\n    +import java.util.List;<br/>\n    +import java.util.Map;<br/>\n    +import java.util.concurrent.atomic.AtomicReference;<br/>\n    +<br/>\n    +public class LeaderElectorImp implements ILeaderElector {<br/>\n    +    private static Logger LOG = LoggerFactory.getLogger(LeaderElectorImp.class);<br/>\n    +    final private Map conf;<br/>\n    +    final private List<String> servers;<br/>\n    +    final private CuratorFramework zk;<br/>\n    +    final private String leaderlockPath;<br/>\n    +    final private String id;<br/>\n    +    final private AtomicReference<LeaderLatch> leaderLatch;<br/>\n    +    final private AtomicReference<LeaderLatchListener> leaderLatchListener;<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    I'd like to see we have the same coding style in Storm. `final private` -> `private final`</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612650144/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612864487","html_url":"https://github.com/apache/storm/issues/5339#issuecomment-2612864487","issue_url":"https://api.github.com/repos/apache/storm/issues/5339","id":2612864487,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4NjQ0ODc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-29T06:26:38Z","updated_at":"2025-01-24T15:58:47Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user abhishekagarwal87 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1052#discussion_r51229667\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1052#discussion_r51229667</a></p>\n\n<p>    &#8212; Diff: external/storm-hdfs/pom.xml &#8212;<br/>\n    @@ -35,6 +35,13 @@<br/>\n     </developer><br/>\n </developers></p>\n\n<p>    +    <repositories><br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    indentation can be corrected here.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612864487/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612703058","html_url":"https://github.com/apache/storm/issues/5318#issuecomment-2612703058","issue_url":"https://api.github.com/repos/apache/storm/issues/5318","id":2612703058,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI3MDMwNTg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-29T06:34:45Z","updated_at":"2025-01-24T14:45:32Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user vesense commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1038#discussion_r51230032\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1038#discussion_r51230032</a></p>\n\n<p>    &#8212; Diff: external/storm-mongodb/src/main/java/org/apache/storm/mongodb/trident/state/MongoState.java &#8212;<br/>\n    @@ -0,0 +1,97 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.mongodb.trident.state;<br/>\n    +<br/>\n    +import java.io.Serializable;<br/>\n    +import java.util.List;<br/>\n    +import java.util.Map;<br/>\n    +<br/>\n    +import org.apache.commons.lang.Validate;<br/>\n    +import org.apache.storm.mongodb.common.MongoDBClient;<br/>\n    +import org.apache.storm.mongodb.common.mapper.MongoMapper;<br/>\n    +import org.apache.storm.trident.operation.TridentCollector;<br/>\n    +import org.apache.storm.trident.state.State;<br/>\n    +import org.apache.storm.trident.tuple.TridentTuple;<br/>\n    +import org.bson.Document;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +import com.google.common.collect.Lists;<br/>\n    +<br/>\n    +public class MongoState implements State {<br/>\n    +<br/>\n    +    private static final Logger LOG = LoggerFactory.getLogger(MongoState.class);<br/>\n    +<br/>\n    +    private Options options;<br/>\n    +    private MongoDBClient mongoClient;<br/>\n    +    private Map map;<br/>\n    +<br/>\n    +    protected MongoState(Map map, int partitionIndex, int numPartitions, Options options) </p>\n{\n    +this.options = options;\n    +this.map = map;\n    +    }\n<p>    +<br/>\n    +    public static class Options implements Serializable {<br/>\n    +private String url;<br/>\n    +private String collectionName;<br/>\n    +private MongoMapper mapper;<br/>\n    +<br/>\n    +public Options withUrl(String url) </p>\n{\n    +    this.url = url;\n    +    return this;\n    +}\n<p>    +<br/>\n    +public Options withCollectionName(String collectionName) </p>\n{\n    +    this.collectionName = collectionName;\n    +    return this;\n    +}\n<p>    +<br/>\n    +public Options withMapper(MongoMapper mapper) </p>\n{\n    +    this.mapper = mapper;\n    +    return this;\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    protected void prepare() </p>\n{\n    +Validate.notEmpty(options.url, \"url can not be blank or null\");\n    +Validate.notEmpty(options.collectionName, \"collectionName can not be blank or null\");\n    +Validate.notNull(options.mapper, \"MongoMapper can not be null\");\n    +\n    +this.mongoClient = new MongoDBClient(options.url, options.collectionName);\n    +    }\n<p>    +<br/>\n    +    @Override<br/>\n    +    public void beginCommit(Long txid) </p>\n{\n    +LOG.debug(\"beginCommit is noop.\");\n    +    }\n<p>    +<br/>\n    +    @Override<br/>\n    +    public void commit(Long txid) </p>\n{\n    +LOG.debug(\"commit is noop.\");\n    +    }\n<p>    +<br/>\n    +    public void updateState(List<TridentTuple> tuples, TridentCollector collector) {<br/>\n    +List<Document> documents = Lists.newArrayList();<br/>\n    +for (TridentTuple tuple : tuples) </p>\n{\n    +    Document document = options.mapper.toDocument(tuple);\n    +    documents.add(document);\n    +}\n<p>    +this.mongoClient.insert(documents);<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Updated. Thanks @revans2</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612703058/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612864494","html_url":"https://github.com/apache/storm/issues/5339#issuecomment-2612864494","issue_url":"https://api.github.com/repos/apache/storm/issues/5339","id":2612864494,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4NjQ0OTQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-29T06:51:00Z","updated_at":"2025-01-24T15:58:47Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user abhishekagarwal87 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1052#discussion_r51230736\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1052#discussion_r51230736</a></p>\n\n<p>    &#8212; Diff: external/storm-hdfs/src/main/java/org/apache/storm/hdfs/avro/DefinedAvroSchemaRegistry.java &#8212;<br/>\n    @@ -0,0 +1,59 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.hdfs.avro;<br/>\n    +<br/>\n    +import com.google.common.collect.BiMap;<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    storm packs the guava classes in shaded jar. should you refer to them? <br/>\n    e.g. org.apache.storm.guava.collect.BiMap. </p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612864494/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612864502","html_url":"https://github.com/apache/storm/issues/5339#issuecomment-2612864502","issue_url":"https://api.github.com/repos/apache/storm/issues/5339","id":2612864502,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4NjQ1MDI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-29T06:57:53Z","updated_at":"2025-01-24T15:58:47Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user abhishekagarwal87 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1052#discussion_r51230998\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1052#discussion_r51230998</a></p>\n\n<p>    &#8212; Diff: external/storm-hdfs/src/main/java/org/apache/storm/hdfs/avro/DefinedAvroSchemaRegistry.java &#8212;<br/>\n    @@ -0,0 +1,59 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.hdfs.avro;<br/>\n    +<br/>\n    +import com.google.common.collect.BiMap;<br/>\n    +import com.google.common.collect.HashBiMap;<br/>\n    +import org.apache.avro.Schema;<br/>\n    +import org.apache.avro.SchemaNormalization;<br/>\n    +<br/>\n    +import java.security.NoSuchAlgorithmException;<br/>\n    +import java.util.List;<br/>\n    +import java.util.Map;<br/>\n    +<br/>\n    +public class DefinedAvroSchemaRegistry implements AvroSchemaRegistry{<br/>\n    +<br/>\n    +    private final static String FP_ALGO = \"SHA-256\";<br/>\n    +    final BiMap<String, Schema> fingerprint2schemaMap;<br/>\n    +    final BiMap<Schema, String> schema2fingerprintMap;<br/>\n    +<br/>\n    +    DefinedAvroSchemaRegistry(final Map<String, Schema> definedSchemas) </p>\n{\n    +fingerprint2schemaMap = HashBiMap.create(definedSchemas);\n    +schema2fingerprintMap = fingerprint2schemaMap.inverse();\n    +    }\n<p>    +<br/>\n    +    DefinedAvroSchemaRegistry(List<Schema> schemaList) throws NoSuchAlgorithmException {<br/>\n    +fingerprint2schemaMap = HashBiMap.create();<br/>\n    +for (Schema schema : schemaList) {<br/>\n    +    String fingerPrint = new String(SchemaNormalization.parsingFingerprint(FP_ALGO, schema));<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    I am not sure about constructing a string out of non-text bytes and then reading it back. What you write may be different from what you read back due to encoding/decoding difference. can you use a byte[] array as type instead of string for fingerprint? or if you really want to use string as the key, fingerprint can be base64 encoded and returned as string. </p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612864502/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612864508","html_url":"https://github.com/apache/storm/issues/5339#issuecomment-2612864508","issue_url":"https://api.github.com/repos/apache/storm/issues/5339","id":2612864508,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4NjQ1MDg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-29T06:59:11Z","updated_at":"2025-01-24T15:58:47Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user abhishekagarwal87 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1052#discussion_r51231057\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1052#discussion_r51231057</a></p>\n\n<p>    &#8212; Diff: external/storm-hdfs/src/main/java/org/apache/storm/hdfs/avro/DefinedAvroSchemaRegistry.java &#8212;<br/>\n    @@ -0,0 +1,59 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.hdfs.avro;<br/>\n    +<br/>\n    +import com.google.common.collect.BiMap;<br/>\n    +import com.google.common.collect.HashBiMap;<br/>\n    +import org.apache.avro.Schema;<br/>\n    +import org.apache.avro.SchemaNormalization;<br/>\n    +<br/>\n    +import java.security.NoSuchAlgorithmException;<br/>\n    +import java.util.List;<br/>\n    +import java.util.Map;<br/>\n    +<br/>\n    +public class DefinedAvroSchemaRegistry implements AvroSchemaRegistry{<br/>\n    +<br/>\n    +    private final static String FP_ALGO = \"SHA-256\";<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    this will generate 32 bytes fingerprint. CRC-64-AVRO should be good enough I think. At the max, user can override the algorithm himself. </p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612864508/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612864511","html_url":"https://github.com/apache/storm/issues/5339#issuecomment-2612864511","issue_url":"https://api.github.com/repos/apache/storm/issues/5339","id":2612864511,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4NjQ1MTE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-29T07:03:14Z","updated_at":"2025-01-24T15:58:47Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user abhishekagarwal87 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1052#discussion_r51231303\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1052#discussion_r51231303</a></p>\n\n<p>    &#8212; Diff: external/storm-hdfs/src/main/java/org/apache/storm/hdfs/avro/AvroGenericSerializer.java &#8212;<br/>\n    @@ -0,0 +1,79 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.hdfs.avro;<br/>\n    +<br/>\n    +import com.esotericsoftware.kryo.Kryo;<br/>\n    +import com.esotericsoftware.kryo.Serializer;<br/>\n    +import com.esotericsoftware.kryo.io.Input;<br/>\n    +import com.esotericsoftware.kryo.io.Output;<br/>\n    +import org.apache.avro.Schema;<br/>\n    +import org.apache.avro.generic.GenericContainer;<br/>\n    +import org.apache.avro.generic.GenericDatumReader;<br/>\n    +import org.apache.avro.generic.GenericDatumWriter;<br/>\n    +import org.apache.avro.io.BinaryEncoder;<br/>\n    +import org.apache.avro.io.Decoder;<br/>\n    +import org.apache.avro.io.DecoderFactory;<br/>\n    +import org.apache.avro.io.EncoderFactory;<br/>\n    +<br/>\n    +import java.io.IOException;<br/>\n    +<br/>\n    +//Generously adapted from:<br/>\n    +//<a href=\"https://github.com/kijiproject/kiji-express/blob/master/kiji-express/src/main/scala/org/kiji/express/flow/framework/serialization/AvroSerializer.scala\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/kijiproject/kiji-express/blob/master/kiji-express/src/main/scala/org/kiji/express/flow/framework/serialization/AvroSerializer.scala</a><br/>\n    +//Which has as an ASL2.0 license<br/>\n    +public class AvroGenericSerializer extends Serializer<GenericContainer> {<br/>\n    +<br/>\n    +    AvroSchemaRegistry registry = new GenericAvroSchemaRegistry();<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    I would advise against using GenericAvroSchemaRegistry as default. It looks to be very costly. you can try a test run with sufficient input load and verify it.. </p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612864511/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612703065","html_url":"https://github.com/apache/storm/issues/5318#issuecomment-2612703065","issue_url":"https://api.github.com/repos/apache/storm/issues/5318","id":2612703065,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI3MDMwNjU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-29T07:04:37Z","updated_at":"2025-01-24T14:45:32Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user vesense commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1038#discussion_r51231367\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1038#discussion_r51231367</a></p>\n\n<p>    &#8212; Diff: external/storm-mongodb/src/main/java/org/apache/storm/mongodb/bolt/MongoUpdateBolt.java &#8212;<br/>\n    @@ -0,0 +1,69 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.mongodb.bolt;<br/>\n    +<br/>\n    +import org.apache.commons.lang.Validate;<br/>\n    +import org.apache.storm.mongodb.common.QueryFilterCreator;<br/>\n    +import org.apache.storm.mongodb.common.mapper.MongoMapper;<br/>\n    +import org.apache.storm.topology.OutputFieldsDeclarer;<br/>\n    +import org.apache.storm.tuple.Tuple;<br/>\n    +import org.bson.Document;<br/>\n    +import org.bson.conversions.Bson;<br/>\n    +<br/>\n    +/**<br/>\n    + * Basic bolt for updating from MongoDB.<br/>\n    + *<br/>\n    + * Note: Each MongoUpdateBolt defined in a topology is tied to a specific collection.<br/>\n    + *<br/>\n    + */<br/>\n    +public class MongoUpdateBolt extends AbstractMongoBolt {<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    I add `upsert` option to `MongoUpdateBolt`. Thanks @arunmahadevan</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612703065/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/176607781","html_url":"https://github.com/apache/storm/pull/1050#issuecomment-176607781","issue_url":"https://api.github.com/repos/apache/storm/issues/1050","id":176607781,"node_id":"MDEyOklzc3VlQ29tbWVudDE3NjYwNzc4MQ==","user":{"login":"satishd","id":2577761,"node_id":"MDQ6VXNlcjI1Nzc3NjE=","avatar_url":"https://avatars.githubusercontent.com/u/2577761?v=4","gravatar_id":"","url":"https://api.github.com/users/satishd","html_url":"https://github.com/satishd","followers_url":"https://api.github.com/users/satishd/followers","following_url":"https://api.github.com/users/satishd/following{/other_user}","gists_url":"https://api.github.com/users/satishd/gists{/gist_id}","starred_url":"https://api.github.com/users/satishd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/satishd/subscriptions","organizations_url":"https://api.github.com/users/satishd/orgs","repos_url":"https://api.github.com/users/satishd/repos","events_url":"https://api.github.com/users/satishd/events{/privacy}","received_events_url":"https://api.github.com/users/satishd/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-29T07:05:09Z","updated_at":"2016-01-29T07:05:09Z","author_association":"MEMBER","body":"Do we need MapProcessor/MapFunction as it looks very similar to each operation (EachProcessor)?\n\n``` java\n    public Stream each(Fields inputFields, Function function, Fields functionFields) \n    public Stream each(Function function, Fields functionFields) \n```\n\nAgree with @ptgoetz on filter.\n\nGood to have flatMap operation.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/176607781/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]