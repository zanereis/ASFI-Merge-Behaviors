[{"url":"https://api.github.com/repos/apache/druid/issues/comments/284479151","html_url":"https://github.com/apache/druid/pull/4014#issuecomment-284479151","issue_url":"https://api.github.com/repos/apache/druid/issues/4014","id":284479151,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NDQ3OTE1MQ==","user":{"login":"jon-wei","id":8729063,"node_id":"MDQ6VXNlcjg3MjkwNjM=","avatar_url":"https://avatars.githubusercontent.com/u/8729063?v=4","gravatar_id":"","url":"https://api.github.com/users/jon-wei","html_url":"https://github.com/jon-wei","followers_url":"https://api.github.com/users/jon-wei/followers","following_url":"https://api.github.com/users/jon-wei/following{/other_user}","gists_url":"https://api.github.com/users/jon-wei/gists{/gist_id}","starred_url":"https://api.github.com/users/jon-wei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jon-wei/subscriptions","organizations_url":"https://api.github.com/users/jon-wei/orgs","repos_url":"https://api.github.com/users/jon-wei/repos","events_url":"https://api.github.com/users/jon-wei/events{/privacy}","received_events_url":"https://api.github.com/users/jon-wei/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-03-06T18:03:04Z","updated_at":"2017-03-06T18:03:04Z","author_association":"CONTRIBUTOR","body":":+1: after travis","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/284479151/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/284480280","html_url":"https://github.com/apache/druid/pull/4004#issuecomment-284480280","issue_url":"https://api.github.com/repos/apache/druid/issues/4004","id":284480280,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NDQ4MDI4MA==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-03-06T18:07:17Z","updated_at":"2017-03-06T18:07:59Z","author_association":"CONTRIBUTOR","body":"@himanshug it seems to work fine for other query types, it's not accomplishing much but it seems harmless. I want to include this patch in 0.10.0 (since chunkPeriod + groupBy v2 gives wrong results now) so would prefer to keep the changes minimal.\r\n\r\nI am down to disable it for other query types in 0.10.1 though.\r\n\r\nWhat do you think?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/284480280/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/284486298","html_url":"https://github.com/apache/druid/pull/4015#issuecomment-284486298","issue_url":"https://api.github.com/repos/apache/druid/issues/4015","id":284486298,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NDQ4NjI5OA==","user":{"login":"fjy","id":428325,"node_id":"MDQ6VXNlcjQyODMyNQ==","avatar_url":"https://avatars.githubusercontent.com/u/428325?v=4","gravatar_id":"","url":"https://api.github.com/users/fjy","html_url":"https://github.com/fjy","followers_url":"https://api.github.com/users/fjy/followers","following_url":"https://api.github.com/users/fjy/following{/other_user}","gists_url":"https://api.github.com/users/fjy/gists{/gist_id}","starred_url":"https://api.github.com/users/fjy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fjy/subscriptions","organizations_url":"https://api.github.com/users/fjy/orgs","repos_url":"https://api.github.com/users/fjy/repos","events_url":"https://api.github.com/users/fjy/events{/privacy}","received_events_url":"https://api.github.com/users/fjy/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-03-06T18:28:33Z","updated_at":"2017-03-06T18:28:33Z","author_association":"CONTRIBUTOR","body":"üëç ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/284486298/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/284491580","html_url":"https://github.com/apache/druid/pull/3889#issuecomment-284491580","issue_url":"https://api.github.com/repos/apache/druid/issues/3889","id":284491580,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NDQ5MTU4MA==","user":{"login":"leventov","id":609240,"node_id":"MDQ6VXNlcjYwOTI0MA==","avatar_url":"https://avatars.githubusercontent.com/u/609240?v=4","gravatar_id":"","url":"https://api.github.com/users/leventov","html_url":"https://github.com/leventov","followers_url":"https://api.github.com/users/leventov/followers","following_url":"https://api.github.com/users/leventov/following{/other_user}","gists_url":"https://api.github.com/users/leventov/gists{/gist_id}","starred_url":"https://api.github.com/users/leventov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leventov/subscriptions","organizations_url":"https://api.github.com/users/leventov/orgs","repos_url":"https://api.github.com/users/leventov/repos","events_url":"https://api.github.com/users/leventov/events{/privacy}","received_events_url":"https://api.github.com/users/leventov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-03-06T18:45:47Z","updated_at":"2017-03-06T18:45:47Z","author_association":"MEMBER","body":"@himanshug could you please review this PR?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/284491580/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/284522890","html_url":"https://github.com/apache/druid/pull/3889#issuecomment-284522890","issue_url":"https://api.github.com/repos/apache/druid/issues/3889","id":284522890,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NDUyMjg5MA==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-03-06T20:31:49Z","updated_at":"2017-03-06T20:31:49Z","author_association":"CONTRIBUTOR","body":"@leventov sure, will review this week likely tomorrow.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/284522890/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/284534109","html_url":"https://github.com/apache/druid/issues/4016#issuecomment-284534109","issue_url":"https://api.github.com/repos/apache/druid/issues/4016","id":284534109,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NDUzNDEwOQ==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-03-06T21:13:08Z","updated_at":"2017-03-06T21:13:08Z","author_association":"CONTRIBUTOR","body":"The task does a separate segment per partition to make replicated ingestion work, see #2703 and #2844 for description of what can go wrong if multiple Kafka partitions go into the same Druid segment.\r\n\r\nIt is a big pain point though so maybe there's a creative solution to this problem‚Ä¶","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/284534109/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/284544824","html_url":"https://github.com/apache/druid/issues/4016#issuecomment-284544824","issue_url":"https://api.github.com/repos/apache/druid/issues/4016","id":284544824,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NDU0NDgyNA==","user":{"login":"pjain1","id":11787983,"node_id":"MDQ6VXNlcjExNzg3OTgz","avatar_url":"https://avatars.githubusercontent.com/u/11787983?v=4","gravatar_id":"","url":"https://api.github.com/users/pjain1","html_url":"https://github.com/pjain1","followers_url":"https://api.github.com/users/pjain1/followers","following_url":"https://api.github.com/users/pjain1/following{/other_user}","gists_url":"https://api.github.com/users/pjain1/gists{/gist_id}","starred_url":"https://api.github.com/users/pjain1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pjain1/subscriptions","organizations_url":"https://api.github.com/users/pjain1/orgs","repos_url":"https://api.github.com/users/pjain1/repos","events_url":"https://api.github.com/users/pjain1/events{/privacy}","received_events_url":"https://api.github.com/users/pjain1/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-03-06T21:50:36Z","updated_at":"2017-03-06T21:50:36Z","author_association":"MEMBER","body":"@gianm If ordering is a problem then polled records can be ordered by partition first. So, all records for a single partition are consumed and then records for next partitions and so on. Or records can be sorted on combination of (partition + offset) and then consumed. This way ordering can be maintained independently at each replica. Does this make sense ?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/284544824/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/284545655","html_url":"https://github.com/apache/druid/issues/4016#issuecomment-284545655","issue_url":"https://api.github.com/repos/apache/druid/issues/4016","id":284545655,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NDU0NTY1NQ==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-03-06T21:53:36Z","updated_at":"2017-03-06T21:53:36Z","author_association":"CONTRIBUTOR","body":"I think that wouldn't work in practice when Druid is caught up to the Kafka stream (the normal case for real time indexing), it would mean that it won't read later partitions until very late in the task.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/284545655/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/284553842","html_url":"https://github.com/apache/druid/issues/4016#issuecomment-284553842","issue_url":"https://api.github.com/repos/apache/druid/issues/4016","id":284553842,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NDU1Mzg0Mg==","user":{"login":"pjain1","id":11787983,"node_id":"MDQ6VXNlcjExNzg3OTgz","avatar_url":"https://avatars.githubusercontent.com/u/11787983?v=4","gravatar_id":"","url":"https://api.github.com/users/pjain1","html_url":"https://github.com/pjain1","followers_url":"https://api.github.com/users/pjain1/followers","following_url":"https://api.github.com/users/pjain1/following{/other_user}","gists_url":"https://api.github.com/users/pjain1/gists{/gist_id}","starred_url":"https://api.github.com/users/pjain1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pjain1/subscriptions","organizations_url":"https://api.github.com/users/pjain1/orgs","repos_url":"https://api.github.com/users/pjain1/repos","events_url":"https://api.github.com/users/pjain1/events{/privacy}","received_events_url":"https://api.github.com/users/pjain1/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-03-06T22:24:29Z","updated_at":"2017-03-06T22:24:29Z","author_association":"MEMBER","body":"I meant ordering events after they have been polled basically after each `consumer.poll()` call. I did not meant that the task should consume events from one partition and then gets assigned to next partition and consume that and so on, this will not work.\r\n\r\nHowever, I can see a problem in ordering after each poll call as well, if poll returns different number of records for partitions (or some partition records are missing) on replica tasks then also the segments can go out of sync.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/284553842/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/284560855","html_url":"https://github.com/apache/druid/issues/4016#issuecomment-284560855","issue_url":"https://api.github.com/repos/apache/druid/issues/4016","id":284560855,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NDU2MDg1NQ==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-03-06T22:52:07Z","updated_at":"2017-03-06T22:52:07Z","author_association":"CONTRIBUTOR","body":"Ah I see. In that case, I think you're right, there's a problem since there's no guarantee that different replicas will get the exact same batches from poll.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/284560855/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/284572617","html_url":"https://github.com/apache/druid/pull/4017#issuecomment-284572617","issue_url":"https://api.github.com/repos/apache/druid/issues/4017","id":284572617,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NDU3MjYxNw==","user":{"login":"fjy","id":428325,"node_id":"MDQ6VXNlcjQyODMyNQ==","avatar_url":"https://avatars.githubusercontent.com/u/428325?v=4","gravatar_id":"","url":"https://api.github.com/users/fjy","html_url":"https://github.com/fjy","followers_url":"https://api.github.com/users/fjy/followers","following_url":"https://api.github.com/users/fjy/following{/other_user}","gists_url":"https://api.github.com/users/fjy/gists{/gist_id}","starred_url":"https://api.github.com/users/fjy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fjy/subscriptions","organizations_url":"https://api.github.com/users/fjy/orgs","repos_url":"https://api.github.com/users/fjy/repos","events_url":"https://api.github.com/users/fjy/events{/privacy}","received_events_url":"https://api.github.com/users/fjy/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-03-06T23:46:40Z","updated_at":"2017-03-06T23:46:40Z","author_association":"CONTRIBUTOR","body":"üëç ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/284572617/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/284576809","html_url":"https://github.com/apache/druid/pull/4017#issuecomment-284576809","issue_url":"https://api.github.com/repos/apache/druid/issues/4017","id":284576809,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NDU3NjgwOQ==","user":{"login":"jon-wei","id":8729063,"node_id":"MDQ6VXNlcjg3MjkwNjM=","avatar_url":"https://avatars.githubusercontent.com/u/8729063?v=4","gravatar_id":"","url":"https://api.github.com/users/jon-wei","html_url":"https://github.com/jon-wei","followers_url":"https://api.github.com/users/jon-wei/followers","following_url":"https://api.github.com/users/jon-wei/following{/other_user}","gists_url":"https://api.github.com/users/jon-wei/gists{/gist_id}","starred_url":"https://api.github.com/users/jon-wei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jon-wei/subscriptions","organizations_url":"https://api.github.com/users/jon-wei/orgs","repos_url":"https://api.github.com/users/jon-wei/repos","events_url":"https://api.github.com/users/jon-wei/events{/privacy}","received_events_url":"https://api.github.com/users/jon-wei/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-03-07T00:07:34Z","updated_at":"2017-03-07T00:07:34Z","author_association":"CONTRIBUTOR","body":":+1:","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/284576809/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/284578030","html_url":"https://github.com/apache/druid/issues/4018#issuecomment-284578030","issue_url":"https://api.github.com/repos/apache/druid/issues/4018","id":284578030,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NDU3ODAzMA==","user":{"login":"tslater","id":449326,"node_id":"MDQ6VXNlcjQ0OTMyNg==","avatar_url":"https://avatars.githubusercontent.com/u/449326?v=4","gravatar_id":"","url":"https://api.github.com/users/tslater","html_url":"https://github.com/tslater","followers_url":"https://api.github.com/users/tslater/followers","following_url":"https://api.github.com/users/tslater/following{/other_user}","gists_url":"https://api.github.com/users/tslater/gists{/gist_id}","starred_url":"https://api.github.com/users/tslater/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tslater/subscriptions","organizations_url":"https://api.github.com/users/tslater/orgs","repos_url":"https://api.github.com/users/tslater/repos","events_url":"https://api.github.com/users/tslater/events{/privacy}","received_events_url":"https://api.github.com/users/tslater/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-03-07T00:14:09Z","updated_at":"2017-03-07T00:14:09Z","author_association":"NONE","body":"This may be the issue?\r\n\r\n```\r\n2017-03-07T00:13:25,941 WARN [Coordinator-Exec--0] io.druid.server.coordinator.rules.LoadRule - Not enough [_default_tier] servers or node capacity to assign segment[wikiticker_2015-09-12T00:00:00.000Z_2015-09-13T00:00:00.000Z_2017-03-07T00:01:26.867Z]! Expected Replicants[2]\r\n2017-03-07T00:13:25,941 INFO [Coordinator-Exec--0] io.druid.server.coordinator.helper.DruidCoordinatorBalancer - [_default_tier]: One or fewer servers found.  Cannot balance.\r\n```\r\n\r\nThe quick start guide only provides 1 node when I'm configured for 2?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/284578030/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/284578091","html_url":"https://github.com/apache/druid/issues/3892#issuecomment-284578091","issue_url":"https://api.github.com/repos/apache/druid/issues/3892","id":284578091,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NDU3ODA5MQ==","user":{"login":"leventov","id":609240,"node_id":"MDQ6VXNlcjYwOTI0MA==","avatar_url":"https://avatars.githubusercontent.com/u/609240?v=4","gravatar_id":"","url":"https://api.github.com/users/leventov","html_url":"https://github.com/leventov","followers_url":"https://api.github.com/users/leventov/followers","following_url":"https://api.github.com/users/leventov/following{/other_user}","gists_url":"https://api.github.com/users/leventov/gists{/gist_id}","starred_url":"https://api.github.com/users/leventov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leventov/subscriptions","organizations_url":"https://api.github.com/users/leventov/orgs","repos_url":"https://api.github.com/users/leventov/repos","events_url":"https://api.github.com/users/leventov/events{/privacy}","received_events_url":"https://api.github.com/users/leventov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-03-07T00:14:31Z","updated_at":"2017-03-07T00:15:47Z","author_association":"MEMBER","body":"> What is making things tricky is that we only have one implementation, WritableMemoryImpl, which allows problematic casts. I am beginning to feel that splitting into two impls would be a lot cleaner, safer, and just not worry about the 30+ duplicated methods. I have already organized the code in the WritableMemoryImpl class so that all the RO methods are together, so a simple copy & paste should be straightforward.\r\n\r\nPersonally I don't care that much about code duplication, but keep in mind \"NonNative\" subclasses, they should also be duplicated then.\r\n\r\n> With two impls, asReadOnly creates a new class, and going from a Memory to WritableMemory would never be possible.\r\n\r\nThis is actually what I want to avoid, see the very first message in this thread, \"Goals\" section, \"Don't make a lot of Object copies when a Memory object has to be \"sliced\", \"converted to read-only\", etc.\". See https://github.com/druid-io/druid/pull/3716#issuecomment-274658045. Currently Druid creates *millions* of unnecessary read-only ByteBuffers, \"for safety\". But I think mere separation of interfaces, Memory and WritableMemory, provides enough safety.\r\n\r\n> the Memory API prevents writes, but then this also allows a downstream client to do the reverse cast, since the underlying impl is the same. I don't see any easy solution to this other than having two impls.\r\n\r\nWe are creating library for *ourselves*, not for \"dumb users who *will* do the wrong thing if they could\". There is a solution: don't do reverse casts! I'm pretty sure nobody will ever try to do reverse casts, but then it is catched during code review, and even could be enforced using checkstyle rules, as suggested above: https://github.com/druid-io/druid/issues/3892#issuecomment-279173943\r\n\r\n> AllocateDirect and AllocateDirectMap both require Cleaner as a field. The Cleaners have different implementations. These two need to be a subclass so that a user call of close() at the root of the hierarchy does the work specified in the appropriate subclass.\r\n\r\nMy intention was that there is a `Cleaner` field in WritableMemoryImpl, and it's null when cleaning is not needed (e. g. heap allocation). And close() method contains something like\r\n```java\r\nif (cleaner != null) {\r\n  cleaner.clean();\r\n}\r\n```\r\n\r\n> Also, the WritableMemoryImpl class is already huge, so I was looking for opportunities to split out well defined subsets of code.\r\n\r\nThe problem is requirement for \"NonNative\" subclass, that will multiply the amount of code, if there is more than one \"WritableMemoryImpl\"\r\n\r\n> Using an intermediate interface we can leverage AllocateDirect, AllocateDirectMap and AccessByteBuffer across multiple implementations.\r\n\r\nDon't understand this\r\n\r\n> Since positional will need to leverage both NE and BE, it should be a true interface.\r\n\r\nThe only reason why `Memory` and `WritableMemory` are not true interfaces, is ability to have static factory methods. My idea was to create Positional from existing Memory or WritableMemory objects, using `region(start, limit)` method. So Positional itself doesn't have static factory methods and could be a true interface.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/284578091/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/284580048","html_url":"https://github.com/apache/druid/issues/4018#issuecomment-284580048","issue_url":"https://api.github.com/repos/apache/druid/issues/4018","id":284580048,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NDU4MDA0OA==","user":{"login":"tslater","id":449326,"node_id":"MDQ6VXNlcjQ0OTMyNg==","avatar_url":"https://avatars.githubusercontent.com/u/449326?v=4","gravatar_id":"","url":"https://api.github.com/users/tslater","html_url":"https://github.com/tslater","followers_url":"https://api.github.com/users/tslater/followers","following_url":"https://api.github.com/users/tslater/following{/other_user}","gists_url":"https://api.github.com/users/tslater/gists{/gist_id}","starred_url":"https://api.github.com/users/tslater/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tslater/subscriptions","organizations_url":"https://api.github.com/users/tslater/orgs","repos_url":"https://api.github.com/users/tslater/repos","events_url":"https://api.github.com/users/tslater/events{/privacy}","received_events_url":"https://api.github.com/users/tslater/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-03-07T00:24:58Z","updated_at":"2017-03-07T00:24:58Z","author_association":"NONE","body":"I figured out that my issue was that I was running Debezium on port 8083. I'm not sure which of the 5 services in the example were needing that port, so I'm not sure if it spit out an error or not. It might be nice to have the process completely fail if it can't bind the intended port.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/284580048/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/284587748","html_url":"https://github.com/apache/druid/issues/3876#issuecomment-284587748","issue_url":"https://api.github.com/repos/apache/druid/issues/3876","id":284587748,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NDU4Nzc0OA==","user":{"login":"mitch-hulu","id":17837229,"node_id":"MDQ6VXNlcjE3ODM3MjI5","avatar_url":"https://avatars.githubusercontent.com/u/17837229?v=4","gravatar_id":"","url":"https://api.github.com/users/mitch-hulu","html_url":"https://github.com/mitch-hulu","followers_url":"https://api.github.com/users/mitch-hulu/followers","following_url":"https://api.github.com/users/mitch-hulu/following{/other_user}","gists_url":"https://api.github.com/users/mitch-hulu/gists{/gist_id}","starred_url":"https://api.github.com/users/mitch-hulu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mitch-hulu/subscriptions","organizations_url":"https://api.github.com/users/mitch-hulu/orgs","repos_url":"https://api.github.com/users/mitch-hulu/repos","events_url":"https://api.github.com/users/mitch-hulu/events{/privacy}","received_events_url":"https://api.github.com/users/mitch-hulu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-03-07T01:07:26Z","updated_at":"2017-03-07T01:07:26Z","author_association":"NONE","body":"Is there a reason the port scan logic doesnt just happen in the peon itself? Does middle manager need the port to announce the peon? Or does the peon announce itself?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/284587748/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/284589393","html_url":"https://github.com/apache/druid/issues/3876#issuecomment-284589393","issue_url":"https://api.github.com/repos/apache/druid/issues/3876","id":284589393,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NDU4OTM5Mw==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-03-07T01:16:40Z","updated_at":"2017-03-07T01:16:46Z","author_association":"CONTRIBUTOR","body":"The middleManager announces the location of the task peon.\r\n\r\nI would guess the same as @nishantmonu51, that something else started using this port (28102). Maybe double check that your OS doesn't include this in its ephemeral port range.\r\n\r\nClosing the issue but feel free to reopen if it seems Druid related after more investigation.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/284589393/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/284599419","html_url":"https://github.com/apache/druid/pull/3962#issuecomment-284599419","issue_url":"https://api.github.com/repos/apache/druid/issues/3962","id":284599419,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NDU5OTQxOQ==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-03-07T02:12:33Z","updated_at":"2017-03-07T02:12:33Z","author_association":"CONTRIBUTOR","body":"The latest patch looks good to me.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/284599419/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/284600385","html_url":"https://github.com/apache/druid/issues/3608#issuecomment-284600385","issue_url":"https://api.github.com/repos/apache/druid/issues/3608","id":284600385,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NDYwMDM4NQ==","user":{"login":"zhihuij","id":883232,"node_id":"MDQ6VXNlcjg4MzIzMg==","avatar_url":"https://avatars.githubusercontent.com/u/883232?v=4","gravatar_id":"","url":"https://api.github.com/users/zhihuij","html_url":"https://github.com/zhihuij","followers_url":"https://api.github.com/users/zhihuij/followers","following_url":"https://api.github.com/users/zhihuij/following{/other_user}","gists_url":"https://api.github.com/users/zhihuij/gists{/gist_id}","starred_url":"https://api.github.com/users/zhihuij/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zhihuij/subscriptions","organizations_url":"https://api.github.com/users/zhihuij/orgs","repos_url":"https://api.github.com/users/zhihuij/repos","events_url":"https://api.github.com/users/zhihuij/events{/privacy}","received_events_url":"https://api.github.com/users/zhihuij/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-03-07T02:18:15Z","updated_at":"2017-03-07T02:18:15Z","author_association":"CONTRIBUTOR","body":"Hi, @gianm,\r\n\r\nDo you mean `\"reingest\"` hereÔºü because I only see a `NoopTask` with task id `\"reingest\"` in `IngestSegmentFirehoseFactory`. \r\n\r\nCan you give some clue on\r\n\r\n> using the existing mechanisms for cleaning up task work directories ?\r\n\r\nBecause I want to fix #3655 , but didn't find a simple way to do it (fixed with a callback currently). \r\n\r\nThank you very much.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/284600385/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/284600934","html_url":"https://github.com/apache/druid/issues/3655#issuecomment-284600934","issue_url":"https://api.github.com/repos/apache/druid/issues/3655","id":284600934,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NDYwMDkzNA==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-03-07T02:21:41Z","updated_at":"2017-03-07T02:21:41Z","author_association":"CONTRIBUTOR","body":"This is related to #3608, a fix to that should fix this one too.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/284600934/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/284601725","html_url":"https://github.com/apache/druid/issues/3608#issuecomment-284601725","issue_url":"https://api.github.com/repos/apache/druid/issues/3608","id":284601725,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NDYwMTcyNQ==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-03-07T02:26:27Z","updated_at":"2017-03-07T02:26:27Z","author_association":"CONTRIBUTOR","body":"@onlychoice, I do mean \"reingest\". What's going on is that the IngestSegmentFirehoseFactory is creating a TaskToolboxFactory with a dummy NoopTask that has id \"reingest\". That dummy task id is used by the toolbox as part of its tmp directory. This causes a couple of problems:\r\n\r\n- #3655: the tmp directory built from \"reingest\" isn't cleaned up\r\n- this issue: the tmp directory is shared between tasks and can cause conflicts\r\n\r\nIdeally, instead of using an `injector` to create its own TaskToolboxFactory, and then building a toolbox with a dummy id, the firehose should use the _real_ TaskToolbox with the _real_ task id. This is available at the task level and the task would have to give it to the firehose somehow. I haven't thought of a really nice way to do it, but one gross way would be for tasks to check `firehoseFactory instanceof IngestSegmentFirehoseFactory` and if so, call some special method to pass in the toolbox.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/284601725/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/284613641","html_url":"https://github.com/apache/druid/issues/3608#issuecomment-284613641","issue_url":"https://api.github.com/repos/apache/druid/issues/3608","id":284613641,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NDYxMzY0MQ==","user":{"login":"zhihuij","id":883232,"node_id":"MDQ6VXNlcjg4MzIzMg==","avatar_url":"https://avatars.githubusercontent.com/u/883232?v=4","gravatar_id":"","url":"https://api.github.com/users/zhihuij","html_url":"https://github.com/zhihuij","followers_url":"https://api.github.com/users/zhihuij/followers","following_url":"https://api.github.com/users/zhihuij/following{/other_user}","gists_url":"https://api.github.com/users/zhihuij/gists{/gist_id}","starred_url":"https://api.github.com/users/zhihuij/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zhihuij/subscriptions","organizations_url":"https://api.github.com/users/zhihuij/orgs","repos_url":"https://api.github.com/users/zhihuij/repos","events_url":"https://api.github.com/users/zhihuij/events{/privacy}","received_events_url":"https://api.github.com/users/zhihuij/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-03-07T03:47:15Z","updated_at":"2017-03-07T03:47:15Z","author_association":"CONTRIBUTOR","body":"Thanks @gianm , I got your idea, each task should have its own task work directory, and should be cleaned up after task is done. \r\n\r\nI have searched through Task, TaskToolbox, TaskRunner, ExecutorLifecycle, but didn't find the code which do the job\r\n\r\n> the existing mechanisms for cleaning up task work directories\r\n\r\nCan you give some clues on this?  Thanks.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/284613641/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/284630029","html_url":"https://github.com/apache/druid/pull/3998#issuecomment-284630029","issue_url":"https://api.github.com/repos/apache/druid/issues/3998","id":284630029,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NDYzMDAyOQ==","user":{"login":"niketh","id":626548,"node_id":"MDQ6VXNlcjYyNjU0OA==","avatar_url":"https://avatars.githubusercontent.com/u/626548?v=4","gravatar_id":"","url":"https://api.github.com/users/niketh","html_url":"https://github.com/niketh","followers_url":"https://api.github.com/users/niketh/followers","following_url":"https://api.github.com/users/niketh/following{/other_user}","gists_url":"https://api.github.com/users/niketh/gists{/gist_id}","starred_url":"https://api.github.com/users/niketh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/niketh/subscriptions","organizations_url":"https://api.github.com/users/niketh/orgs","repos_url":"https://api.github.com/users/niketh/repos","events_url":"https://api.github.com/users/niketh/events{/privacy}","received_events_url":"https://api.github.com/users/niketh/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-03-07T06:00:04Z","updated_at":"2017-03-07T06:00:04Z","author_association":"CONTRIBUTOR","body":"üëç  Can you please update the docs too","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/284630029/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/284740418","html_url":"https://github.com/apache/druid/issues/4016#issuecomment-284740418","issue_url":"https://api.github.com/repos/apache/druid/issues/4016","id":284740418,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NDc0MDQxOA==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-03-07T14:43:01Z","updated_at":"2017-03-07T14:43:01Z","author_association":"CONTRIBUTOR","body":"one idea that floated was to let KafkaIndexTask create segments per kafka partition, eventually when time comes to publish those segments ... merge all \"per partition\" segments into a final segment and publish that one instead.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/284740418/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/284747853","html_url":"https://github.com/apache/druid/issues/4016#issuecomment-284747853","issue_url":"https://api.github.com/repos/apache/druid/issues/4016","id":284747853,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NDc0Nzg1Mw==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-03-07T15:07:54Z","updated_at":"2017-03-07T15:07:54Z","author_association":"CONTRIBUTOR","body":"@himanshug hmm that sounds like it could work. The final segment would need to have a higher version number than the earlier ones but that should be doable. There might also be more than one final segment if the task handled a lot of data.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/284747853/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/284764581","html_url":"https://github.com/apache/druid/issues/4016#issuecomment-284764581","issue_url":"https://api.github.com/repos/apache/druid/issues/4016","id":284764581,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NDc2NDU4MQ==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-03-07T16:00:53Z","updated_at":"2017-03-07T16:00:53Z","author_association":"CONTRIBUTOR","body":"@gianm actually final segment should have a higher version as it should overshadow the \"per partition\" segments served from peons","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/284764581/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/284768099","html_url":"https://github.com/apache/druid/issues/4016#issuecomment-284768099","issue_url":"https://api.github.com/repos/apache/druid/issues/4016","id":284768099,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NDc2ODA5OQ==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-03-07T16:11:32Z","updated_at":"2017-03-07T16:11:32Z","author_association":"CONTRIBUTOR","body":"yeah, that makes sense.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/284768099/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/284804199","html_url":"https://github.com/apache/druid/issues/4016#issuecomment-284804199","issue_url":"https://api.github.com/repos/apache/druid/issues/4016","id":284804199,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NDgwNDE5OQ==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-03-07T18:00:04Z","updated_at":"2017-03-07T18:00:04Z","author_association":"CONTRIBUTOR","body":"ok, had a short chat with @pjain1 and it appears merging at the end is not enough as the original problem faced by customer is related to slower queries due to many small \"realtime\" segments which would exist even when we do merging at the end.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/284804199/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/284804612","html_url":"https://github.com/apache/druid/issues/4016#issuecomment-284804612","issue_url":"https://api.github.com/repos/apache/druid/issues/4016","id":284804612,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NDgwNDYxMg==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-03-07T18:01:34Z","updated_at":"2017-03-07T18:01:34Z","author_association":"CONTRIBUTOR","body":"Presumably it would still be useful though to your customer, since it would mean a lot fewer segments on historicals after handoff.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/284804612/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/284805123","html_url":"https://github.com/apache/druid/issues/4016#issuecomment-284805123","issue_url":"https://api.github.com/repos/apache/druid/issues/4016","id":284805123,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NDgwNTEyMw==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-03-07T18:03:11Z","updated_at":"2017-03-07T18:39:10Z","author_association":"CONTRIBUTOR","body":"another thing we briefly chatted about removing \"maxRowsPerSegment\" setting and in that world segment size would be controlled by number of of kafka partitions per task and segment granularity.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/284805123/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/284805414","html_url":"https://github.com/apache/druid/issues/4016#issuecomment-284805414","issue_url":"https://api.github.com/repos/apache/druid/issues/4016","id":284805414,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NDgwNTQxNA==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-03-07T18:04:11Z","updated_at":"2017-03-07T18:04:17Z","author_association":"CONTRIBUTOR","body":"> Presumably it would still be useful though to your customer, since it would mean a lot fewer segments on historicals after handoff.\r\n\r\nthey run batch reindexing to do the merging already.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/284805414/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/284810435","html_url":"https://github.com/apache/druid/issues/4016#issuecomment-284810435","issue_url":"https://api.github.com/repos/apache/druid/issues/4016","id":284810435,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NDgxMDQzNQ==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-03-07T18:21:54Z","updated_at":"2017-03-07T18:21:54Z","author_association":"CONTRIBUTOR","body":"> another thing we briefly chatted about removing \"maxRowsPerSegment\" setting\r\n\r\nThe setting prevents having segments that are crazy huge so I think it's still useful. But you can always set it to something crazy huge and then it's effectively disabled. I guess we could also have an \"unlimited\" option for it like -1.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/284810435/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/284818319","html_url":"https://github.com/apache/druid/issues/3892#issuecomment-284818319","issue_url":"https://api.github.com/repos/apache/druid/issues/3892","id":284818319,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NDgxODMxOQ==","user":{"login":"leerho","id":12941506,"node_id":"MDQ6VXNlcjEyOTQxNTA2","avatar_url":"https://avatars.githubusercontent.com/u/12941506?v=4","gravatar_id":"","url":"https://api.github.com/users/leerho","html_url":"https://github.com/leerho","followers_url":"https://api.github.com/users/leerho/followers","following_url":"https://api.github.com/users/leerho/following{/other_user}","gists_url":"https://api.github.com/users/leerho/gists{/gist_id}","starred_url":"https://api.github.com/users/leerho/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leerho/subscriptions","organizations_url":"https://api.github.com/users/leerho/orgs","repos_url":"https://api.github.com/users/leerho/repos","events_url":"https://api.github.com/users/leerho/events{/privacy}","received_events_url":"https://api.github.com/users/leerho/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-03-07T18:49:18Z","updated_at":"2017-03-07T18:49:18Z","author_association":"CONTRIBUTOR","body":"@leventov \r\n\r\n> >     With two impls, asReadOnly creates a new class, and going from a Memory to WritableMemory would never be possible.\r\n> \r\n> This is actually what I want to avoid, see the very first message in this thread, \"Goals\" section, \"Don't make a lot of Object copies when a Memory object has to be \"sliced\", \"converted to read-only\", etc.\".\r\n\r\nI'm trying to understand exactly what you are trying to avoid.  When I say \"creates a new class\", what I mean is a new wrapper pointing to the same resource.  Only a few pointer registers get created.  With a single impl  `asReadOnly` can be done with an up-cast.  But `slices` will always require a new wrapper object.  Also viewing a resource as positional will require creating a different wrapper object pointing to the same resource.  (It is also possible to create two views of the same resource using different endianness just using different wrappers).\r\n\r\nWhat is the use pattern that you think is creating all these \"unnecessary objects\"?\r\n \r\nAre the vast majority of ByteBuffer objects created to protect the parent's position and limit state from being changed by the child and to protect the children from affecting each other? \r\nIf this is the case then:\r\n\r\n```\r\nWritableMemory wMem = //original resource\r\nMemory mem = wMem.asReadOnly() //created only once\r\n\r\n//pass mem to many children\r\nChildProcess(mem, offset, length) {\r\n    //Each child can either read directly using offsets, or\r\n    Buffer buf = mem.asBuffer(). //I am suggesting that \"Buffer\" = \"PositionalMemory\" \r\n    buf.setPosition(offset);\r\n    buf.setLimit(offset + length);\r\n    //yes, this creates another wrapper, but may be necessary depending on what the child is doing\r\n    ....\r\n}\r\n```\r\n\r\nEven if we have both R and W impls, the asReadOnly wrapper is created only once. This should dramatically reduce the number of distinct wrapper objects.  With ByteBuffer, the children have to be protected from each other so a new wrapper is required for each child.  \r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/284818319/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/284823395","html_url":"https://github.com/apache/druid/issues/4020#issuecomment-284823395","issue_url":"https://api.github.com/repos/apache/druid/issues/4020","id":284823395,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NDgyMzM5NQ==","user":{"login":"niketh","id":626548,"node_id":"MDQ6VXNlcjYyNjU0OA==","avatar_url":"https://avatars.githubusercontent.com/u/626548?v=4","gravatar_id":"","url":"https://api.github.com/users/niketh","html_url":"https://github.com/niketh","followers_url":"https://api.github.com/users/niketh/followers","following_url":"https://api.github.com/users/niketh/following{/other_user}","gists_url":"https://api.github.com/users/niketh/gists{/gist_id}","starred_url":"https://api.github.com/users/niketh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/niketh/subscriptions","organizations_url":"https://api.github.com/users/niketh/orgs","repos_url":"https://api.github.com/users/niketh/repos","events_url":"https://api.github.com/users/niketh/events{/privacy}","received_events_url":"https://api.github.com/users/niketh/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-03-07T19:07:03Z","updated_at":"2017-03-07T19:12:27Z","author_association":"CONTRIBUTOR","body":"@cheddar  @gianm A solution is to make the Historical use V1 incase the groupByStrategy is not specified in the query. But by changing that logic in GroupByQueryConfig, even the broker gets affected. And every query to the Broker would require us to pass in \"GroupByQueryConfig\"","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/284823395/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/284828546","html_url":"https://github.com/apache/druid/issues/4020#issuecomment-284828546","issue_url":"https://api.github.com/repos/apache/druid/issues/4020","id":284828546,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NDgyODU0Ng==","user":{"login":"fjy","id":428325,"node_id":"MDQ6VXNlcjQyODMyNQ==","avatar_url":"https://avatars.githubusercontent.com/u/428325?v=4","gravatar_id":"","url":"https://api.github.com/users/fjy","html_url":"https://github.com/fjy","followers_url":"https://api.github.com/users/fjy/followers","following_url":"https://api.github.com/users/fjy/following{/other_user}","gists_url":"https://api.github.com/users/fjy/gists{/gist_id}","starred_url":"https://api.github.com/users/fjy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fjy/subscriptions","organizations_url":"https://api.github.com/users/fjy/orgs","repos_url":"https://api.github.com/users/fjy/repos","events_url":"https://api.github.com/users/fjy/events{/privacy}","received_events_url":"https://api.github.com/users/fjy/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-03-07T19:24:24Z","updated_at":"2017-03-07T19:24:24Z","author_association":"CONTRIBUTOR","body":"@niketh please update to 0.9.2 first","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/284828546/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/284830062","html_url":"https://github.com/apache/druid/issues/4020#issuecomment-284830062","issue_url":"https://api.github.com/repos/apache/druid/issues/4020","id":284830062,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NDgzMDA2Mg==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-03-07T19:27:14Z","updated_at":"2017-03-07T19:27:14Z","author_association":"CONTRIBUTOR","body":"@fjy imo, if feasible, it's best to make it easy for people to upgrade from any 0.9.x to 0.10.0.\r\n\r\n@niketh I think we need different behavior on the broker and historical: because on the _broker_ we want to default to v2 if not specified (since v2 is default generally) but on the _historical_ we may want to default to v1 if not specified (for compatibility with 0.9.0 and 0.9.1 brokers). There is some precedent for behavior differences this, like #3950 which disables caching on brokers but not historicals. Something similar might work here?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/284830062/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/284832307","html_url":"https://github.com/apache/druid/issues/4020#issuecomment-284832307","issue_url":"https://api.github.com/repos/apache/druid/issues/4020","id":284832307,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NDgzMjMwNw==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-03-07T19:31:28Z","updated_at":"2017-03-07T19:31:54Z","author_association":"CONTRIBUTOR","body":"also, another option: on the historical, we may still want to default to v2 if not specified, but in that case set a \"compatibility flag\" that causes them to return timestamps even when timestamps are not necessary. This would let them get the performance benefits of v2 but still be compatible with older brokers.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/284832307/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/284834121","html_url":"https://github.com/apache/druid/issues/4020#issuecomment-284834121","issue_url":"https://api.github.com/repos/apache/druid/issues/4020","id":284834121,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NDgzNDEyMQ==","user":{"login":"niketh","id":626548,"node_id":"MDQ6VXNlcjYyNjU0OA==","avatar_url":"https://avatars.githubusercontent.com/u/626548?v=4","gravatar_id":"","url":"https://api.github.com/users/niketh","html_url":"https://github.com/niketh","followers_url":"https://api.github.com/users/niketh/followers","following_url":"https://api.github.com/users/niketh/following{/other_user}","gists_url":"https://api.github.com/users/niketh/gists{/gist_id}","starred_url":"https://api.github.com/users/niketh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/niketh/subscriptions","organizations_url":"https://api.github.com/users/niketh/orgs","repos_url":"https://api.github.com/users/niketh/repos","events_url":"https://api.github.com/users/niketh/events{/privacy}","received_events_url":"https://api.github.com/users/niketh/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-03-07T19:35:32Z","updated_at":"2017-03-07T19:35:32Z","author_association":"CONTRIBUTOR","body":"@gianm Compatibility flag makes sense üëç . Will post a PR shortly.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/284834121/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/284856103","html_url":"https://github.com/apache/druid/issues/4020#issuecomment-284856103","issue_url":"https://api.github.com/repos/apache/druid/issues/4020","id":284856103,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NDg1NjEwMw==","user":{"login":"niketh","id":626548,"node_id":"MDQ6VXNlcjYyNjU0OA==","avatar_url":"https://avatars.githubusercontent.com/u/626548?v=4","gravatar_id":"","url":"https://api.github.com/users/niketh","html_url":"https://github.com/niketh","followers_url":"https://api.github.com/users/niketh/followers","following_url":"https://api.github.com/users/niketh/following{/other_user}","gists_url":"https://api.github.com/users/niketh/gists{/gist_id}","starred_url":"https://api.github.com/users/niketh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/niketh/subscriptions","organizations_url":"https://api.github.com/users/niketh/orgs","repos_url":"https://api.github.com/users/niketh/repos","events_url":"https://api.github.com/users/niketh/events{/privacy}","received_events_url":"https://api.github.com/users/niketh/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-03-07T20:56:09Z","updated_at":"2017-03-07T20:56:09Z","author_association":"CONTRIBUTOR","body":"@gianm Also why not always return back timestamps like in the case of GroupByV1 ? The payload size increase should be very minimal.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/284856103/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/284872313","html_url":"https://github.com/apache/druid/issues/4020#issuecomment-284872313","issue_url":"https://api.github.com/repos/apache/druid/issues/4020","id":284872313,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NDg3MjMxMw==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-03-07T21:55:32Z","updated_at":"2017-03-07T21:55:32Z","author_association":"CONTRIBUTOR","body":"@niketh serialization and deserialization of the timestamp between historicals -> broker was taking a lot of time in our profiling -- see #3740 where we measured a 30% speedup by nulling out the timestamp.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/284872313/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/284872865","html_url":"https://github.com/apache/druid/issues/3892#issuecomment-284872865","issue_url":"https://api.github.com/repos/apache/druid/issues/3892","id":284872865,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NDg3Mjg2NQ==","user":{"login":"leventov","id":609240,"node_id":"MDQ6VXNlcjYwOTI0MA==","avatar_url":"https://avatars.githubusercontent.com/u/609240?v=4","gravatar_id":"","url":"https://api.github.com/users/leventov","html_url":"https://github.com/leventov","followers_url":"https://api.github.com/users/leventov/followers","following_url":"https://api.github.com/users/leventov/following{/other_user}","gists_url":"https://api.github.com/users/leventov/gists{/gist_id}","starred_url":"https://api.github.com/users/leventov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leventov/subscriptions","organizations_url":"https://api.github.com/users/leventov/orgs","repos_url":"https://api.github.com/users/leventov/repos","events_url":"https://api.github.com/users/leventov/events{/privacy}","received_events_url":"https://api.github.com/users/leventov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-03-07T21:57:23Z","updated_at":"2017-03-07T22:01:01Z","author_association":"MEMBER","body":"@leerho \r\n\r\n> I'm trying to understand exactly what you are trying to avoid. When I say \"creates a new class\", what I mean is a new wrapper pointing to the same resource. Only a few pointer registers get created. With a single impl asReadOnly can be done with an up-cast. But slices will always require a new wrapper object. Also viewing a resource as positional will require creating a different wrapper object pointing to the same resource. (It is also possible to create two views of the same resource using different endianness just using different wrappers).\r\n\r\nCurrently in Druid, a lot of `asReadOnlyBuffer()` are called on already read-only buffers, because there is no way to distinguish between read-only and writable on type level, and \"asReadOnlyBuffer()\" is called \"for safety\". Slicing should be partially replaced with passing primitive \"position\" (and, optionally, \"size\"/\"limit\") arguments along with `Memory` objects. Currently slicing is also partially fostered by the fact that \"positional\" and \"absolute\" interfaces are mixed in ByteBuffer.\r\n\r\n---\r\n\r\nI'm afraid we are entering design paralysis phase, let's iterate specifically on points where we disagree. API first. How I currently see it:\r\n```java\r\nabstract class Memory {\r\n  static WritableMemory allocate(long size);\r\n  static WritableMemoryHandler allocateDirect(long size);\r\n  static Memory wrap(ByteBuffer);\r\n  static WritableMemory wrapForWrite(ByteBuffer);\r\n  static MemoryHandler map(File);\r\n  static MemoryHandler map(File, long pos, long len);\r\n  static WritableMemoryHandler mapForWrite(File);\r\n  static WritableMemoryHandler mapForWrite(File, long pos, long len);\r\n\r\n  // no fields\r\n\r\n  long size();\r\n  \r\n  ByteOrder order();\r\n  Memory withOrder(ByteOrder order);\r\n  \r\n  Buffer buffer(long position, long limit);\r\n\r\n  .. getXxx(long pos) methods\r\n}\r\n\r\nabstract class WritableMemory extends Memory {\r\n  // no fields\r\n  WritableMemory withOrder(ByteOrder order);\r\n  WritableBuffer buffer(long position, long limit);\r\n  Memory asReadOnly();\r\n\r\n  .. putXxx(position) methods\r\n}\r\n\r\ninterface Buffer {\r\n\r\n  .. getXxx() methods\r\n}\r\n\r\ninterface WritableBuffer {\r\n  .. putXxx() methods\r\n}\r\n\r\ninterface MemoryHandler extends AutoCloseable {\r\n  Memory get();\r\n\r\n  void close();\r\n}\r\n\r\ninterface WritableMemoryHandler extends MemoryHandler {\r\n  WritableMemory get();\r\n}\r\n```","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/284872865/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/284876141","html_url":"https://github.com/apache/druid/pull/3954#issuecomment-284876141","issue_url":"https://api.github.com/repos/apache/druid/issues/3954","id":284876141,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NDg3NjE0MQ==","user":{"login":"leventov","id":609240,"node_id":"MDQ6VXNlcjYwOTI0MA==","avatar_url":"https://avatars.githubusercontent.com/u/609240?v=4","gravatar_id":"","url":"https://api.github.com/users/leventov","html_url":"https://github.com/leventov","followers_url":"https://api.github.com/users/leventov/followers","following_url":"https://api.github.com/users/leventov/following{/other_user}","gists_url":"https://api.github.com/users/leventov/gists{/gist_id}","starred_url":"https://api.github.com/users/leventov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leventov/subscriptions","organizations_url":"https://api.github.com/users/leventov/orgs","repos_url":"https://api.github.com/users/leventov/repos","events_url":"https://api.github.com/users/leventov/events{/privacy}","received_events_url":"https://api.github.com/users/leventov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-03-07T22:09:11Z","updated_at":"2017-03-07T22:09:11Z","author_association":"MEMBER","body":"@nishantmonu51 could you please review this?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/284876141/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/284964809","html_url":"https://github.com/apache/druid/issues/3892#issuecomment-284964809","issue_url":"https://api.github.com/repos/apache/druid/issues/3892","id":284964809,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NDk2NDgwOQ==","user":{"login":"leerho","id":12941506,"node_id":"MDQ6VXNlcjEyOTQxNTA2","avatar_url":"https://avatars.githubusercontent.com/u/12941506?v=4","gravatar_id":"","url":"https://api.github.com/users/leerho","html_url":"https://github.com/leerho","followers_url":"https://api.github.com/users/leerho/followers","following_url":"https://api.github.com/users/leerho/following{/other_user}","gists_url":"https://api.github.com/users/leerho/gists{/gist_id}","starred_url":"https://api.github.com/users/leerho/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leerho/subscriptions","organizations_url":"https://api.github.com/users/leerho/orgs","repos_url":"https://api.github.com/users/leerho/repos","events_url":"https://api.github.com/users/leerho/events{/privacy}","received_events_url":"https://api.github.com/users/leerho/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-03-08T07:08:38Z","updated_at":"2017-03-08T07:08:38Z","author_association":"CONTRIBUTOR","body":"@leventov \r\n\r\nHere is what is implemented so far and compiles (see memory4):\r\nCompleting Buffer, WritableBuffer, asNonNativeEndian(), asNativeEndian() is pretty mechanical from here.\r\n\r\n```\r\npublic abstract class Memory {\r\n  public static MemoryHandler wrap(final ByteBuffer byteBuf)\r\n  public static MemoryHandler map(final File file)\r\n  public static MemoryHandler map(final File file, final long fileOffset, final long capacity)\r\n  public abstract Memory region(long offsetBytes, long capacityBytes)\r\n  public static Memory wrap(final prim-type[] arr)\r\n  public abstract void copy(long srcOffsetBytes, WritableMemory destination, long dstOffsetBytes,\r\n      long lengthBytes)\r\n  public abstract getXXX(offset) methods\r\n  ... plus other read misc\r\n  public abstract asNonNativeEndian() //not implemented\r\n  public abstract asNativeEndian() //not implemented\r\n}\r\n\r\npublic abstract class WritableMemory {\r\n  public static WritableMemoryHandler wrap(final ByteBuffer byteBuf)\r\n  public static WritableMemoryHandler map(final File file)\r\n  public static WritableMemoryHandler map(final File file, final long fileOffset, final long capacity)\r\n  public static WritableMemoryHandler allocateDirect(final long capacityBytes)\r\n  public static WritableMemoryHandler allocateDirect(final long capacityBytes, final MemoryRequest memReq)\r\n  public abstract WritableMemory region(long offsetBytes, long capacityBytes)\r\n  public abstract Memory asReadOnly();\r\n  public static WritableMemory allocate(final int capacityBytes)\r\n  public static WritableMemory wrap(final prim-type[] arr)\r\n  public abstract void copy(long srcOffsetBytes, WritableMemory destination, long dstOffsetBytes,\r\n      long lengthBytes);\r\n  public abstract getXXX(offset) methods\r\n  ... plus other read misc\r\n  public abstract void putXXX(long offsetBytes, prim-type value)\r\n  ... plus other write misc\r\n  public abstract MemoryRequest getMemoryRequest()\r\n  public abstract asNonNativeEndian() //not implemented\r\n  public abstract asNativeEndian() //not implemented\r\n}\r\n\r\npublic interface MemoryHandler extends AutoCloseable {\r\n  Memory get()\r\n  void close()\r\n  void load()        //only for memory-mapped-files\r\n  boolean isLoaded() //only for memory-mapped-files\r\n}\r\n\r\npublic interface WritableMemoryHandler extends AutoCloseable {\r\n  WritableMemory get()\r\n  void close()\r\n  void load()        //only for memory-mapped-files\r\n  boolean isLoaded() //only for memory-mapped-files\r\n  void force()       //only for memory-mapped-files\r\n}\r\n\r\npublic abstract Buffer { //Not implemented\r\n}\r\n\r\npublic abstract WritableBuffer { //Not implemented\r\n}\r\n```","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/284964809/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/284967075","html_url":"https://github.com/apache/druid/pull/3998#issuecomment-284967075","issue_url":"https://api.github.com/repos/apache/druid/issues/3998","id":284967075,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NDk2NzA3NQ==","user":{"login":"JackyWoo","id":3991709,"node_id":"MDQ6VXNlcjM5OTE3MDk=","avatar_url":"https://avatars.githubusercontent.com/u/3991709?v=4","gravatar_id":"","url":"https://api.github.com/users/JackyWoo","html_url":"https://github.com/JackyWoo","followers_url":"https://api.github.com/users/JackyWoo/followers","following_url":"https://api.github.com/users/JackyWoo/following{/other_user}","gists_url":"https://api.github.com/users/JackyWoo/gists{/gist_id}","starred_url":"https://api.github.com/users/JackyWoo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JackyWoo/subscriptions","organizations_url":"https://api.github.com/users/JackyWoo/orgs","repos_url":"https://api.github.com/users/JackyWoo/repos","events_url":"https://api.github.com/users/JackyWoo/events{/privacy}","received_events_url":"https://api.github.com/users/JackyWoo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-03-08T07:24:19Z","updated_at":"2017-03-08T07:24:19Z","author_association":"CONTRIBUTOR","body":"@niketh docs updated","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/284967075/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/284975087","html_url":"https://github.com/apache/druid/issues/3892#issuecomment-284975087","issue_url":"https://api.github.com/repos/apache/druid/issues/3892","id":284975087,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NDk3NTA4Nw==","user":{"login":"leventov","id":609240,"node_id":"MDQ6VXNlcjYwOTI0MA==","avatar_url":"https://avatars.githubusercontent.com/u/609240?v=4","gravatar_id":"","url":"https://api.github.com/users/leventov","html_url":"https://github.com/leventov","followers_url":"https://api.github.com/users/leventov/followers","following_url":"https://api.github.com/users/leventov/following{/other_user}","gists_url":"https://api.github.com/users/leventov/gists{/gist_id}","starred_url":"https://api.github.com/users/leventov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leventov/subscriptions","organizations_url":"https://api.github.com/users/leventov/orgs","repos_url":"https://api.github.com/users/leventov/repos","events_url":"https://api.github.com/users/leventov/events{/privacy}","received_events_url":"https://api.github.com/users/leventov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-03-08T08:11:33Z","updated_at":"2017-03-08T08:11:56Z","author_association":"MEMBER","body":"@leerho \r\n\r\n - `wrap(ByteBuffer)` returns Handler instead of just Memory - might complicate implementation, while not actually needed.\r\n - `wrap(ByteBuffer)` should inherit endianness from the buffer.\r\n - `asNonNativeEndian()` and `asNativeEndian()` won't be convenient, in Druid we need to convert endianness when we know the specific endianness that we need, usually BIG_ENDIAN. So using this API, it would be something like `ByteOrder.nativeOrder() == ByteOrder.BIG_ENDIAN ? mem.asNativeEndian() : mem.asNonNativeEndian()`, instead of just `mem.withOrder(ByteOrder.BIG_ENDIAN)`\r\n - What for `MemoryRequest`?\r\n - `load()`, `isLoaded()` and `force()` implementation requires JNI. And those methods are unused in Druid. I think they could be dropped.\r\n\r\nEverything else looks good to me.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/284975087/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/284997020","html_url":"https://github.com/apache/druid/pull/4022#issuecomment-284997020","issue_url":"https://api.github.com/repos/apache/druid/issues/4022","id":284997020,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NDk5NzAyMA==","user":{"login":"niketh","id":626548,"node_id":"MDQ6VXNlcjYyNjU0OA==","avatar_url":"https://avatars.githubusercontent.com/u/626548?v=4","gravatar_id":"","url":"https://api.github.com/users/niketh","html_url":"https://github.com/niketh","followers_url":"https://api.github.com/users/niketh/followers","following_url":"https://api.github.com/users/niketh/following{/other_user}","gists_url":"https://api.github.com/users/niketh/gists{/gist_id}","starred_url":"https://api.github.com/users/niketh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/niketh/subscriptions","organizations_url":"https://api.github.com/users/niketh/orgs","repos_url":"https://api.github.com/users/niketh/repos","events_url":"https://api.github.com/users/niketh/events{/privacy}","received_events_url":"https://api.github.com/users/niketh/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-03-08T09:54:02Z","updated_at":"2017-03-08T09:54:02Z","author_association":"CONTRIBUTOR","body":"@gianm Can you review","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/284997020/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/284997129","html_url":"https://github.com/apache/druid/issues/4020#issuecomment-284997129","issue_url":"https://api.github.com/repos/apache/druid/issues/4020","id":284997129,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NDk5NzEyOQ==","user":{"login":"niketh","id":626548,"node_id":"MDQ6VXNlcjYyNjU0OA==","avatar_url":"https://avatars.githubusercontent.com/u/626548?v=4","gravatar_id":"","url":"https://api.github.com/users/niketh","html_url":"https://github.com/niketh","followers_url":"https://api.github.com/users/niketh/followers","following_url":"https://api.github.com/users/niketh/following{/other_user}","gists_url":"https://api.github.com/users/niketh/gists{/gist_id}","starred_url":"https://api.github.com/users/niketh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/niketh/subscriptions","organizations_url":"https://api.github.com/users/niketh/orgs","repos_url":"https://api.github.com/users/niketh/repos","events_url":"https://api.github.com/users/niketh/events{/privacy}","received_events_url":"https://api.github.com/users/niketh/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-03-08T09:54:31Z","updated_at":"2017-03-08T09:54:31Z","author_association":"CONTRIBUTOR","body":"Created PR https://github.com/druid-io/druid/pull/4022 ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/284997129/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/285010901","html_url":"https://github.com/apache/druid/issues/4008#issuecomment-285010901","issue_url":"https://api.github.com/repos/apache/druid/issues/4008","id":285010901,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NTAxMDkwMQ==","user":{"login":"niketh","id":626548,"node_id":"MDQ6VXNlcjYyNjU0OA==","avatar_url":"https://avatars.githubusercontent.com/u/626548?v=4","gravatar_id":"","url":"https://api.github.com/users/niketh","html_url":"https://github.com/niketh","followers_url":"https://api.github.com/users/niketh/followers","following_url":"https://api.github.com/users/niketh/following{/other_user}","gists_url":"https://api.github.com/users/niketh/gists{/gist_id}","starred_url":"https://api.github.com/users/niketh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/niketh/subscriptions","organizations_url":"https://api.github.com/users/niketh/orgs","repos_url":"https://api.github.com/users/niketh/repos","events_url":"https://api.github.com/users/niketh/events{/privacy}","received_events_url":"https://api.github.com/users/niketh/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-03-08T10:56:44Z","updated_at":"2017-03-08T10:56:44Z","author_association":"CONTRIBUTOR","body":"@egor-ryashin In which version of Druid are you seeing this error?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/285010901/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/285044372","html_url":"https://github.com/apache/druid/pull/3998#issuecomment-285044372","issue_url":"https://api.github.com/repos/apache/druid/issues/3998","id":285044372,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NTA0NDM3Mg==","user":{"login":"niketh","id":626548,"node_id":"MDQ6VXNlcjYyNjU0OA==","avatar_url":"https://avatars.githubusercontent.com/u/626548?v=4","gravatar_id":"","url":"https://api.github.com/users/niketh","html_url":"https://github.com/niketh","followers_url":"https://api.github.com/users/niketh/followers","following_url":"https://api.github.com/users/niketh/following{/other_user}","gists_url":"https://api.github.com/users/niketh/gists{/gist_id}","starred_url":"https://api.github.com/users/niketh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/niketh/subscriptions","organizations_url":"https://api.github.com/users/niketh/orgs","repos_url":"https://api.github.com/users/niketh/repos","events_url":"https://api.github.com/users/niketh/events{/privacy}","received_events_url":"https://api.github.com/users/niketh/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-03-08T13:47:09Z","updated_at":"2017-03-08T13:47:09Z","author_association":"CONTRIBUTOR","body":"üëç ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/285044372/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/285078141","html_url":"https://github.com/apache/druid/issues/4021#issuecomment-285078141","issue_url":"https://api.github.com/repos/apache/druid/issues/4021","id":285078141,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NTA3ODE0MQ==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-03-08T15:48:26Z","updated_at":"2017-03-08T15:48:26Z","author_association":"CONTRIBUTOR","body":"@naman-aasaan You might be hitting #3997 which was a bug in rc1 when you have more than one segment for the same interval. If so then this will be fixed in rc2 which should be out soon.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/285078141/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/285080329","html_url":"https://github.com/apache/druid/issues/4021#issuecomment-285080329","issue_url":"https://api.github.com/repos/apache/druid/issues/4021","id":285080329,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NTA4MDMyOQ==","user":{"login":"codewithnaman","id":19516326,"node_id":"MDQ6VXNlcjE5NTE2MzI2","avatar_url":"https://avatars.githubusercontent.com/u/19516326?v=4","gravatar_id":"","url":"https://api.github.com/users/codewithnaman","html_url":"https://github.com/codewithnaman","followers_url":"https://api.github.com/users/codewithnaman/followers","following_url":"https://api.github.com/users/codewithnaman/following{/other_user}","gists_url":"https://api.github.com/users/codewithnaman/gists{/gist_id}","starred_url":"https://api.github.com/users/codewithnaman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codewithnaman/subscriptions","organizations_url":"https://api.github.com/users/codewithnaman/orgs","repos_url":"https://api.github.com/users/codewithnaman/repos","events_url":"https://api.github.com/users/codewithnaman/events{/privacy}","received_events_url":"https://api.github.com/users/codewithnaman/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-03-08T15:55:17Z","updated_at":"2017-03-08T15:57:48Z","author_association":"NONE","body":"@gianm,As I visited referenced issue, it is already closed and reference issue given in 3997 also has been closed. So if I build using latest master. Will this resolve my problem for now?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/285080329/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/285082311","html_url":"https://github.com/apache/druid/issues/4021#issuecomment-285082311","issue_url":"https://api.github.com/repos/apache/druid/issues/4021","id":285082311,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NTA4MjMxMQ==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-03-08T16:01:22Z","updated_at":"2017-03-08T16:01:22Z","author_association":"CONTRIBUTOR","body":"@naman-aasaan yes it should. Or, you could build with the latest 0.10.0 branch, which is our release branch and also includes the fix.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/285082311/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/285083883","html_url":"https://github.com/apache/druid/issues/4021#issuecomment-285083883","issue_url":"https://api.github.com/repos/apache/druid/issues/4021","id":285083883,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NTA4Mzg4Mw==","user":{"login":"codewithnaman","id":19516326,"node_id":"MDQ6VXNlcjE5NTE2MzI2","avatar_url":"https://avatars.githubusercontent.com/u/19516326?v=4","gravatar_id":"","url":"https://api.github.com/users/codewithnaman","html_url":"https://github.com/codewithnaman","followers_url":"https://api.github.com/users/codewithnaman/followers","following_url":"https://api.github.com/users/codewithnaman/following{/other_user}","gists_url":"https://api.github.com/users/codewithnaman/gists{/gist_id}","starred_url":"https://api.github.com/users/codewithnaman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codewithnaman/subscriptions","organizations_url":"https://api.github.com/users/codewithnaman/orgs","repos_url":"https://api.github.com/users/codewithnaman/repos","events_url":"https://api.github.com/users/codewithnaman/events{/privacy}","received_events_url":"https://api.github.com/users/codewithnaman/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-03-08T16:06:28Z","updated_at":"2017-03-08T16:06:28Z","author_association":"NONE","body":"OK. That will really Help, Thanks @gianm.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/285083883/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/285095667","html_url":"https://github.com/apache/druid/pull/3998#issuecomment-285095667","issue_url":"https://api.github.com/repos/apache/druid/issues/3998","id":285095667,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NTA5NTY2Nw==","user":{"login":"pjain1","id":11787983,"node_id":"MDQ6VXNlcjExNzg3OTgz","avatar_url":"https://avatars.githubusercontent.com/u/11787983?v=4","gravatar_id":"","url":"https://api.github.com/users/pjain1","html_url":"https://github.com/pjain1","followers_url":"https://api.github.com/users/pjain1/followers","following_url":"https://api.github.com/users/pjain1/following{/other_user}","gists_url":"https://api.github.com/users/pjain1/gists{/gist_id}","starred_url":"https://api.github.com/users/pjain1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pjain1/subscriptions","organizations_url":"https://api.github.com/users/pjain1/orgs","repos_url":"https://api.github.com/users/pjain1/repos","events_url":"https://api.github.com/users/pjain1/events{/privacy}","received_events_url":"https://api.github.com/users/pjain1/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-03-08T16:45:01Z","updated_at":"2017-03-08T16:48:57Z","author_association":"MEMBER","body":"@JackyWoo Thanks for the PR\r\nplease sign the CLA if you have not done so - http://druid.io/community/cla.html ?\r\nhave you tested this on your druid cluster setup ? ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/285095667/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/285097005","html_url":"https://github.com/apache/druid/pull/4022#issuecomment-285097005","issue_url":"https://api.github.com/repos/apache/druid/issues/4022","id":285097005,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NTA5NzAwNQ==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-03-08T16:49:02Z","updated_at":"2017-03-08T16:49:02Z","author_association":"CONTRIBUTOR","body":"I don't think this will help: the compatibility mode in this patch just changes how results are compared when merging, which wouldn't solve the issue on 0.9.1.1 brokers. They'll still get null timestamps and still not be able to handle them. If we want 0.9.1.1 brokers to work with 0.10.0 historicals then the historicals behavior needs to change.\r\n\r\nLooking into it a little more, we kind of already have a natural 'compatibility flag' the historicals can use to detect what behavior they should do: CTX_KEY_OUTERMOST, which is set to \"false\" by new brokers but is null from older brokers. Most of the code to make this work is already there, the only missing piece was that GROUP_BY_MERGE_KEY was being used by both engines to disable mergeResults, but it really should only be used by the v1 engine. v2 should always merge results.\r\n\r\nI raised #4023 to do this, @niketh could you take a look please?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/285097005/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/285099460","html_url":"https://github.com/apache/druid/pull/4002#issuecomment-285099460","issue_url":"https://api.github.com/repos/apache/druid/issues/4002","id":285099460,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NTA5OTQ2MA==","user":{"login":"pjain1","id":11787983,"node_id":"MDQ6VXNlcjExNzg3OTgz","avatar_url":"https://avatars.githubusercontent.com/u/11787983?v=4","gravatar_id":"","url":"https://api.github.com/users/pjain1","html_url":"https://github.com/pjain1","followers_url":"https://api.github.com/users/pjain1/followers","following_url":"https://api.github.com/users/pjain1/following{/other_user}","gists_url":"https://api.github.com/users/pjain1/gists{/gist_id}","starred_url":"https://api.github.com/users/pjain1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pjain1/subscriptions","organizations_url":"https://api.github.com/users/pjain1/orgs","repos_url":"https://api.github.com/users/pjain1/repos","events_url":"https://api.github.com/users/pjain1/events{/privacy}","received_events_url":"https://api.github.com/users/pjain1/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-03-08T16:57:03Z","updated_at":"2017-03-08T16:57:03Z","author_association":"MEMBER","body":"I have added this to 0.10.0 since we are going to do another rc. If not then I am ok in moving this to 0.10.1","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/285099460/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/285100567","html_url":"https://github.com/apache/druid/pull/4002#issuecomment-285100567","issue_url":"https://api.github.com/repos/apache/druid/issues/4002","id":285100567,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NTEwMDU2Nw==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-03-08T17:00:32Z","updated_at":"2017-03-08T17:00:32Z","author_association":"CONTRIBUTOR","body":"Sounds good.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/285100567/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/285101890","html_url":"https://github.com/apache/druid/pull/4023#issuecomment-285101890","issue_url":"https://api.github.com/repos/apache/druid/issues/4023","id":285101890,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NTEwMTg5MA==","user":{"login":"niketh","id":626548,"node_id":"MDQ6VXNlcjYyNjU0OA==","avatar_url":"https://avatars.githubusercontent.com/u/626548?v=4","gravatar_id":"","url":"https://api.github.com/users/niketh","html_url":"https://github.com/niketh","followers_url":"https://api.github.com/users/niketh/followers","following_url":"https://api.github.com/users/niketh/following{/other_user}","gists_url":"https://api.github.com/users/niketh/gists{/gist_id}","starred_url":"https://api.github.com/users/niketh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/niketh/subscriptions","organizations_url":"https://api.github.com/users/niketh/orgs","repos_url":"https://api.github.com/users/niketh/repos","events_url":"https://api.github.com/users/niketh/events{/privacy}","received_events_url":"https://api.github.com/users/niketh/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-03-08T17:04:45Z","updated_at":"2017-03-08T17:04:45Z","author_association":"CONTRIBUTOR","body":"@gianm Looks good üëç  ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/285101890/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/285112024","html_url":"https://github.com/apache/druid/issues/4025#issuecomment-285112024","issue_url":"https://api.github.com/repos/apache/druid/issues/4025","id":285112024,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NTExMjAyNA==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-03-08T17:40:11Z","updated_at":"2017-03-08T17:40:11Z","author_association":"CONTRIBUTOR","body":"@naman-aasaan, is this happening on historical nodes? Is it on rc1 or have you built your own version including the fix in #4003?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/285112024/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/285114377","html_url":"https://github.com/apache/druid/issues/4025#issuecomment-285114377","issue_url":"https://api.github.com/repos/apache/druid/issues/4025","id":285114377,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NTExNDM3Nw==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-03-08T17:48:33Z","updated_at":"2017-03-08T17:48:33Z","author_association":"CONTRIBUTOR","body":"Also does that stack trace keep going? If so could you include the whole thing?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/285114377/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/285117756","html_url":"https://github.com/apache/druid/issues/3892#issuecomment-285117756","issue_url":"https://api.github.com/repos/apache/druid/issues/3892","id":285117756,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NTExNzc1Ng==","user":{"login":"leerho","id":12941506,"node_id":"MDQ6VXNlcjEyOTQxNTA2","avatar_url":"https://avatars.githubusercontent.com/u/12941506?v=4","gravatar_id":"","url":"https://api.github.com/users/leerho","html_url":"https://github.com/leerho","followers_url":"https://api.github.com/users/leerho/followers","following_url":"https://api.github.com/users/leerho/following{/other_user}","gists_url":"https://api.github.com/users/leerho/gists{/gist_id}","starred_url":"https://api.github.com/users/leerho/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leerho/subscriptions","organizations_url":"https://api.github.com/users/leerho/orgs","repos_url":"https://api.github.com/users/leerho/repos","events_url":"https://api.github.com/users/leerho/events{/privacy}","received_events_url":"https://api.github.com/users/leerho/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-03-08T18:00:21Z","updated_at":"2017-03-08T18:00:21Z","author_association":"CONTRIBUTOR","body":"@leventov \r\n\r\n> wrap(ByteBuffer) returns Handler instead of just Memory - might complicate implementation, while not actually needed.\r\n\r\nI'm was being conservative here, this is easy to remove after we have discussed it.  I was trying to capture the scenario where the owner of a BB passes a writable region to a client and then lets his own BB go out of scope thinking that he is done with it and no changes can be made.  If the owner uses try-with-resources or close(), then the client's copy is immediately marked invalid even though the JVM won't collect it until the client's handle is released.  This is a variant on the use-after-close scenario.\r\n\r\n> wrap(ByteBuffer) should inherit endianness from the buffer.\r\n\r\nGood catch.  Thank you.\r\n\r\n> asNonNativeEndian() and asNativeEndian()\r\n\r\nGood point, I can do the detection of whether the chosen endianness is different from the native internally.\r\n\r\n> What for `MemoryRequest`?\r\n\r\nThis is for off-heap dynamic data structures that can possibly grow in size and where the process that is managing this data structure does not \"own\" the allocation of memory.  This is a simple callback mechanism to allow the algorithm that is managing the data structure to request more memory if needed.  \r\n\r\nSketches is an excellent example of this.  Some sketches, like `Theta Sketches`, have an upper bound in size. Others, like the quantiles sketches don't have an upper bound, but they grow very very slowly.  They all start very small in size, e.g., a `Theta Update Sketch `with a few entries can be a few hundred bytes, but can grow to a megabyte or so depending on how it is configured.  \r\nWhen you have millions of these sketches, the overall size adds up.   Fortunately, our typical data is highly fragmented into many different dimensions and the resulting stream lengths are highly skewed with power-law distributions.  This means that the vast majority of sketches only ever get a few entries, and the number of sketches that actually grow to full size is a tiny fraction.  But which ones?  If you allocate full space for all the sketches you would be wasting terabytes of RAM.  The `MemoryRequest` mechanism allows the systems engineer to allocate orders-of-magnitude less space for all the required sketches and then allocate more space only for those few sketches that do require it as needed.  \r\n\r\nSo far, Druid has been managing its off-heap space using direct `ByteBuffers`.  But once you start moving away from `ByteBuffers` and start allocating off-heap memory directly, you are essentially managing your own heap.  I really don't want to go down the slippery-slope of creating our own `malloc`, as that would be a significant undertaking.  The `MemoryRequest` is a simplistic mechanism that hopefully, will delay our having to design a actual `malloc/free` system.\r\n\r\n> load(), isLoaded() and force() implementation requires JNI.\r\n\r\nWe are accessing these methods and their internal implementation using reflection calls to the underlying methods, which seem to be working. Using these calls can speed up access to mapped files considerably.  \r\n\r\n\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/285117756/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/285120181","html_url":"https://github.com/apache/druid/pull/4023#issuecomment-285120181","issue_url":"https://api.github.com/repos/apache/druid/issues/4023","id":285120181,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NTEyMDE4MQ==","user":{"login":"fjy","id":428325,"node_id":"MDQ6VXNlcjQyODMyNQ==","avatar_url":"https://avatars.githubusercontent.com/u/428325?v=4","gravatar_id":"","url":"https://api.github.com/users/fjy","html_url":"https://github.com/fjy","followers_url":"https://api.github.com/users/fjy/followers","following_url":"https://api.github.com/users/fjy/following{/other_user}","gists_url":"https://api.github.com/users/fjy/gists{/gist_id}","starred_url":"https://api.github.com/users/fjy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fjy/subscriptions","organizations_url":"https://api.github.com/users/fjy/orgs","repos_url":"https://api.github.com/users/fjy/repos","events_url":"https://api.github.com/users/fjy/events{/privacy}","received_events_url":"https://api.github.com/users/fjy/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-03-08T18:09:10Z","updated_at":"2017-03-08T18:09:10Z","author_association":"CONTRIBUTOR","body":"üëç ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/285120181/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/285127128","html_url":"https://github.com/apache/druid/issues/4026#issuecomment-285127128","issue_url":"https://api.github.com/repos/apache/druid/issues/4026","id":285127128,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NTEyNzEyOA==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-03-08T18:34:12Z","updated_at":"2017-03-08T18:34:12Z","author_association":"CONTRIBUTOR","body":"@akashdw Is this on a historical or on realtime or on a broker?\r\n\r\nIf it's on realtime, maybe it's due to non-thread-safe use of aggregators by incremental index (see #3956, #3578)?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/285127128/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/285131092","html_url":"https://github.com/apache/druid/issues/4026#issuecomment-285131092","issue_url":"https://api.github.com/repos/apache/druid/issues/4026","id":285131092,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NTEzMTA5Mg==","user":{"login":"akashdw","id":5886276,"node_id":"MDQ6VXNlcjU4ODYyNzY=","avatar_url":"https://avatars.githubusercontent.com/u/5886276?v=4","gravatar_id":"","url":"https://api.github.com/users/akashdw","html_url":"https://github.com/akashdw","followers_url":"https://api.github.com/users/akashdw/followers","following_url":"https://api.github.com/users/akashdw/following{/other_user}","gists_url":"https://api.github.com/users/akashdw/gists{/gist_id}","starred_url":"https://api.github.com/users/akashdw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/akashdw/subscriptions","organizations_url":"https://api.github.com/users/akashdw/orgs","repos_url":"https://api.github.com/users/akashdw/repos","events_url":"https://api.github.com/users/akashdw/events{/privacy}","received_events_url":"https://api.github.com/users/akashdw/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-03-08T18:48:21Z","updated_at":"2017-03-08T18:48:21Z","author_association":"CONTRIBUTOR","body":"@gianm historical and realtime","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/285131092/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/285136809","html_url":"https://github.com/apache/druid/issues/4026#issuecomment-285136809","issue_url":"https://api.github.com/repos/apache/druid/issues/4026","id":285136809,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NTEzNjgwOQ==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-03-08T19:08:22Z","updated_at":"2017-03-08T19:08:22Z","author_association":"CONTRIBUTOR","body":"@gianm note that SketchBufferAggregator.aggregate() is not threadsafe while SketchAggregator.aggregator() is threadsafe to handle concurrency from IncrementalIndex.\r\n\r\nwith v2, is it possible that BufferAggregator.aggregate() would get called concurrently ?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/285136809/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/285137942","html_url":"https://github.com/apache/druid/issues/4026#issuecomment-285137942","issue_url":"https://api.github.com/repos/apache/druid/issues/4026","id":285137942,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NTEzNzk0Mg==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-03-08T19:12:12Z","updated_at":"2017-03-08T19:13:49Z","author_association":"CONTRIBUTOR","body":"@himanshug, groupBy v2 still won't call aggregator methods concurrently.\r\n\r\nI think this is because this map in SketchBufferAggregator assumes that sketches will never be relocated:\r\n\r\n```java\r\nprivate final Map<Integer, Union> unions = new HashMap<>(); //position in BB -> Union Object\r\n```\r\n\r\nBut groupBy v2 does relocate aggregation buffers when it expands its hash table. Can you try working around this by adding `\"bufferGrouperInitialBuckets\" : 2147483647` in your query context and confirm if that fixes the problem? That will start out the hash table at max size and so it won't expand. Note that this will slow down queries that only need a small hash table (it takes time to allocate a big one) so you don't want to do this blindly for every query.\r\n\r\nIf that's what's going on, then for a real fix, groupBy could close and re-open BufferAggregators when it resizes its hash table. We could do this for 0.10.0.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/285137942/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/285139734","html_url":"https://github.com/apache/druid/issues/4026#issuecomment-285139734","issue_url":"https://api.github.com/repos/apache/druid/issues/4026","id":285139734,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NTEzOTczNA==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-03-08T19:18:19Z","updated_at":"2017-03-08T19:18:19Z","author_association":"CONTRIBUTOR","body":"@gianm yeah, in case of relocation that might not work.\r\nthey are cached for performance , creating Union objects from buffers is expensive.\r\n\r\n@akashdw is gonna try max size and verify if this is indeed the issue.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/285139734/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/285140524","html_url":"https://github.com/apache/druid/issues/4026#issuecomment-285140524","issue_url":"https://api.github.com/repos/apache/druid/issues/4026","id":285140524,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NTE0MDUyNA==","user":{"login":"akashdw","id":5886276,"node_id":"MDQ6VXNlcjU4ODYyNzY=","avatar_url":"https://avatars.githubusercontent.com/u/5886276?v=4","gravatar_id":"","url":"https://api.github.com/users/akashdw","html_url":"https://github.com/akashdw","followers_url":"https://api.github.com/users/akashdw/followers","following_url":"https://api.github.com/users/akashdw/following{/other_user}","gists_url":"https://api.github.com/users/akashdw/gists{/gist_id}","starred_url":"https://api.github.com/users/akashdw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/akashdw/subscriptions","organizations_url":"https://api.github.com/users/akashdw/orgs","repos_url":"https://api.github.com/users/akashdw/repos","events_url":"https://api.github.com/users/akashdw/events{/privacy}","received_events_url":"https://api.github.com/users/akashdw/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-03-08T19:21:11Z","updated_at":"2017-03-08T19:21:11Z","author_association":"CONTRIBUTOR","body":"@gianm Yes, groupBy V2 query worked with `\"bufferGrouperInitialBuckets\" : 2147483647`","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/285140524/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/285140833","html_url":"https://github.com/apache/druid/issues/4026#issuecomment-285140833","issue_url":"https://api.github.com/repos/apache/druid/issues/4026","id":285140833,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NTE0MDgzMw==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-03-08T19:22:20Z","updated_at":"2017-03-08T19:22:20Z","author_association":"CONTRIBUTOR","body":"close/re-open aggregators on hashtable growth sounds good to me.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/285140833/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/285140910","html_url":"https://github.com/apache/druid/issues/4026#issuecomment-285140910","issue_url":"https://api.github.com/repos/apache/druid/issues/4026","id":285140910,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NTE0MDkxMA==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-03-08T19:22:37Z","updated_at":"2017-03-08T19:22:37Z","author_association":"CONTRIBUTOR","body":"great, let's do that patch then. @akashdw @himanshug will one of you work on that or shall I?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/285140910/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/285141399","html_url":"https://github.com/apache/druid/issues/4026#issuecomment-285141399","issue_url":"https://api.github.com/repos/apache/druid/issues/4026","id":285141399,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NTE0MTM5OQ==","user":{"login":"akashdw","id":5886276,"node_id":"MDQ6VXNlcjU4ODYyNzY=","avatar_url":"https://avatars.githubusercontent.com/u/5886276?v=4","gravatar_id":"","url":"https://api.github.com/users/akashdw","html_url":"https://github.com/akashdw","followers_url":"https://api.github.com/users/akashdw/followers","following_url":"https://api.github.com/users/akashdw/following{/other_user}","gists_url":"https://api.github.com/users/akashdw/gists{/gist_id}","starred_url":"https://api.github.com/users/akashdw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/akashdw/subscriptions","organizations_url":"https://api.github.com/users/akashdw/orgs","repos_url":"https://api.github.com/users/akashdw/repos","events_url":"https://api.github.com/users/akashdw/events{/privacy}","received_events_url":"https://api.github.com/users/akashdw/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-03-08T19:24:22Z","updated_at":"2017-03-08T19:24:30Z","author_association":"CONTRIBUTOR","body":"@gianm Yes, Working on it.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/285141399/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/285147586","html_url":"https://github.com/apache/druid/issues/4026#issuecomment-285147586","issue_url":"https://api.github.com/repos/apache/druid/issues/4026","id":285147586,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NTE0NzU4Ng==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-03-08T19:45:51Z","updated_at":"2017-03-08T19:45:51Z","author_association":"CONTRIBUTOR","body":"thanks üåü","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/285147586/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/285149312","html_url":"https://github.com/apache/druid/issues/3892#issuecomment-285149312","issue_url":"https://api.github.com/repos/apache/druid/issues/3892","id":285149312,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NTE0OTMxMg==","user":{"login":"leventov","id":609240,"node_id":"MDQ6VXNlcjYwOTI0MA==","avatar_url":"https://avatars.githubusercontent.com/u/609240?v=4","gravatar_id":"","url":"https://api.github.com/users/leventov","html_url":"https://github.com/leventov","followers_url":"https://api.github.com/users/leventov/followers","following_url":"https://api.github.com/users/leventov/following{/other_user}","gists_url":"https://api.github.com/users/leventov/gists{/gist_id}","starred_url":"https://api.github.com/users/leventov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leventov/subscriptions","organizations_url":"https://api.github.com/users/leventov/orgs","repos_url":"https://api.github.com/users/leventov/repos","events_url":"https://api.github.com/users/leventov/events{/privacy}","received_events_url":"https://api.github.com/users/leventov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-03-08T19:52:03Z","updated_at":"2017-03-08T19:52:03Z","author_association":"MEMBER","body":"@leerho ok. Could you complete memory4 (buffers, endianness, a bunch of get/put methods), so we can start actual refactoring of Druid?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/285149312/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/285150544","html_url":"https://github.com/apache/druid/issues/3892#issuecomment-285150544","issue_url":"https://api.github.com/repos/apache/druid/issues/3892","id":285150544,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NTE1MDU0NA==","user":{"login":"leventov","id":609240,"node_id":"MDQ6VXNlcjYwOTI0MA==","avatar_url":"https://avatars.githubusercontent.com/u/609240?v=4","gravatar_id":"","url":"https://api.github.com/users/leventov","html_url":"https://github.com/leventov","followers_url":"https://api.github.com/users/leventov/followers","following_url":"https://api.github.com/users/leventov/following{/other_user}","gists_url":"https://api.github.com/users/leventov/gists{/gist_id}","starred_url":"https://api.github.com/users/leventov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leventov/subscriptions","organizations_url":"https://api.github.com/users/leventov/orgs","repos_url":"https://api.github.com/users/leventov/repos","events_url":"https://api.github.com/users/leventov/events{/privacy}","received_events_url":"https://api.github.com/users/leventov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-03-08T19:56:09Z","updated_at":"2017-03-08T19:56:09Z","author_association":"MEMBER","body":"Also I think `copy()` should be called `get()`, similar to `ByteBuffer` and to resolve ambiguity: copy to or copy from?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/285150544/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/285156053","html_url":"https://github.com/apache/druid/issues/3892#issuecomment-285156053","issue_url":"https://api.github.com/repos/apache/druid/issues/3892","id":285156053,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NTE1NjA1Mw==","user":{"login":"leerho","id":12941506,"node_id":"MDQ6VXNlcjEyOTQxNTA2","avatar_url":"https://avatars.githubusercontent.com/u/12941506?v=4","gravatar_id":"","url":"https://api.github.com/users/leerho","html_url":"https://github.com/leerho","followers_url":"https://api.github.com/users/leerho/followers","following_url":"https://api.github.com/users/leerho/following{/other_user}","gists_url":"https://api.github.com/users/leerho/gists{/gist_id}","starred_url":"https://api.github.com/users/leerho/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leerho/subscriptions","organizations_url":"https://api.github.com/users/leerho/orgs","repos_url":"https://api.github.com/users/leerho/repos","events_url":"https://api.github.com/users/leerho/events{/privacy}","received_events_url":"https://api.github.com/users/leerho/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-03-08T20:16:54Z","updated_at":"2017-03-08T20:16:54Z","author_association":"CONTRIBUTOR","body":"How about copyTo.  In BB get() is used for primitives and getXXXArray() for getting into your local context. Neither get() or put() make sense here as you could be copying bytes out of the JVM entirely.  \r\n\r\nBuffers and endianness will be quite a bit of work. Ultimately, I'd like to create a set of pragmas and a generator so that they can all be created automatically.  If I only start with a few methods, could you give me a list of which ones to start with?\r\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/285156053/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/285157191","html_url":"https://github.com/apache/druid/issues/3892#issuecomment-285157191","issue_url":"https://api.github.com/repos/apache/druid/issues/3892","id":285157191,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NTE1NzE5MQ==","user":{"login":"leventov","id":609240,"node_id":"MDQ6VXNlcjYwOTI0MA==","avatar_url":"https://avatars.githubusercontent.com/u/609240?v=4","gravatar_id":"","url":"https://api.github.com/users/leventov","html_url":"https://github.com/leventov","followers_url":"https://api.github.com/users/leventov/followers","following_url":"https://api.github.com/users/leventov/following{/other_user}","gists_url":"https://api.github.com/users/leventov/gists{/gist_id}","starred_url":"https://api.github.com/users/leventov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leventov/subscriptions","organizations_url":"https://api.github.com/users/leventov/orgs","repos_url":"https://api.github.com/users/leventov/repos","events_url":"https://api.github.com/users/leventov/events{/privacy}","received_events_url":"https://api.github.com/users/leventov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-03-08T20:21:13Z","updated_at":"2017-03-08T20:21:13Z","author_association":"MEMBER","body":"`copyTo()` is good.\r\n\r\nActually for starting refactoring implementation is not needed, so endianness could be delayed, just get/put methods should be present (for Memory and Buffer), maybe with UnsupportedOperationException impl.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/285157191/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/285160268","html_url":"https://github.com/apache/druid/issues/4026#issuecomment-285160268","issue_url":"https://api.github.com/repos/apache/druid/issues/4026","id":285160268,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NTE2MDI2OA==","user":{"login":"cheddar","id":216778,"node_id":"MDQ6VXNlcjIxNjc3OA==","avatar_url":"https://avatars.githubusercontent.com/u/216778?v=4","gravatar_id":"","url":"https://api.github.com/users/cheddar","html_url":"https://github.com/cheddar","followers_url":"https://api.github.com/users/cheddar/followers","following_url":"https://api.github.com/users/cheddar/following{/other_user}","gists_url":"https://api.github.com/users/cheddar/gists{/gist_id}","starred_url":"https://api.github.com/users/cheddar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cheddar/subscriptions","organizations_url":"https://api.github.com/users/cheddar/orgs","repos_url":"https://api.github.com/users/cheddar/repos","events_url":"https://api.github.com/users/cheddar/events{/privacy}","received_events_url":"https://api.github.com/users/cheddar/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-03-08T20:32:53Z","updated_at":"2017-03-08T20:32:53Z","author_association":"CONTRIBUTOR","body":"I disagree with that fix.  The aggregator is breaking contract by caching the position...  The aggregator should change to not cache objects anymore.  We can try to get the union object to  not be expensive to make on a buffer.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/285160268/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/285160539","html_url":"https://github.com/apache/druid/issues/4026#issuecomment-285160539","issue_url":"https://api.github.com/repos/apache/druid/issues/4026","id":285160539,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NTE2MDUzOQ==","user":{"login":"cheddar","id":216778,"node_id":"MDQ6VXNlcjIxNjc3OA==","avatar_url":"https://avatars.githubusercontent.com/u/216778?v=4","gravatar_id":"","url":"https://api.github.com/users/cheddar","html_url":"https://github.com/cheddar","followers_url":"https://api.github.com/users/cheddar/followers","following_url":"https://api.github.com/users/cheddar/following{/other_user}","gists_url":"https://api.github.com/users/cheddar/gists{/gist_id}","starred_url":"https://api.github.com/users/cheddar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cheddar/subscriptions","organizations_url":"https://api.github.com/users/cheddar/orgs","repos_url":"https://api.github.com/users/cheddar/repos","events_url":"https://api.github.com/users/cheddar/events{/privacy}","received_events_url":"https://api.github.com/users/cheddar/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-03-08T20:33:57Z","updated_at":"2017-03-08T20:33:57Z","author_association":"CONTRIBUTOR","body":"also, open/close I don't believe will work because the current implementation assumes that hte object in its local cache is the \"good\" object.  which is broken.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/285160539/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/285163311","html_url":"https://github.com/apache/druid/issues/4026#issuecomment-285163311","issue_url":"https://api.github.com/repos/apache/druid/issues/4026","id":285163311,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NTE2MzMxMQ==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-03-08T20:44:30Z","updated_at":"2017-03-08T20:44:30Z","author_association":"CONTRIBUTOR","body":"That sounds like a better fix if feasible.\r\n\r\n@akashdw and @himanshug what do you think?\r\n\r\n@cheddar by close/open I mean close, throw away, and re-create with factorizeBuffered. That should work around this, I think, although it'd be better for the aggregator not to store state inside itself.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/285163311/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/285163632","html_url":"https://github.com/apache/druid/issues/4027#issuecomment-285163632","issue_url":"https://api.github.com/repos/apache/druid/issues/4027","id":285163632,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NTE2MzYzMg==","user":{"login":"lemire","id":391987,"node_id":"MDQ6VXNlcjM5MTk4Nw==","avatar_url":"https://avatars.githubusercontent.com/u/391987?v=4","gravatar_id":"","url":"https://api.github.com/users/lemire","html_url":"https://github.com/lemire","followers_url":"https://api.github.com/users/lemire/followers","following_url":"https://api.github.com/users/lemire/following{/other_user}","gists_url":"https://api.github.com/users/lemire/gists{/gist_id}","starred_url":"https://api.github.com/users/lemire/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lemire/subscriptions","organizations_url":"https://api.github.com/users/lemire/orgs","repos_url":"https://api.github.com/users/lemire/repos","events_url":"https://api.github.com/users/lemire/events{/privacy}","received_events_url":"https://api.github.com/users/lemire/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-03-08T20:45:42Z","updated_at":"2017-03-08T20:45:58Z","author_association":"NONE","body":"@leventov \r\n\r\n> Should either be merged into Druid codebase (see https://groups.google.com/d/msg/druid-development/Q039gtYVSQM/TgFzzezJCwAJ)\r\n\r\nI think my answer would be the same, still. I don't see anything that would prevent it.\r\n\r\n> Roaring depends on ByteBuffers.\r\n\r\nI don't think that's true. Maybe you mean the other way around?\r\n\r\n```\r\n$ mvn dependency:resolve\r\n[INFO] Scanning for projects...\r\n[INFO]\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] Building RoaringBitmap 0.6.40-SNAPSHOT\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO]\r\n[INFO] --- maven-dependency-plugin:2.8:resolve (default-cli) @ RoaringBitmap ---\r\n[INFO]\r\n[INFO] The following files have been resolved:\r\n[INFO]    org.apache.commons:commons-lang3:jar:3.4:test\r\n[INFO]    org.hamcrest:hamcrest-core:jar:1.3:test\r\n[INFO]    junit:junit:jar:4.12:test\r\n[INFO]    com.google.guava:guava:jar:18.0:test\r\n[INFO]\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] BUILD SUCCESS\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] Total time: 4.552 s\r\n[INFO] Finished at: 2017-03-08T15:37:50-05:00\r\n[INFO] Final Memory: 16M/160M\r\n[INFO] ------------------------------------------------------------------------\r\n```\r\n\r\n> Roaring upstream library should adopt ``Memory`` (unlikely)\r\n\r\nWhy is that unlikely?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/285163632/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/285165790","html_url":"https://github.com/apache/druid/issues/3944#issuecomment-285165790","issue_url":"https://api.github.com/repos/apache/druid/issues/3944","id":285165790,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NTE2NTc5MA==","user":{"login":"patelh","id":297178,"node_id":"MDQ6VXNlcjI5NzE3OA==","avatar_url":"https://avatars.githubusercontent.com/u/297178?v=4","gravatar_id":"","url":"https://api.github.com/users/patelh","html_url":"https://github.com/patelh","followers_url":"https://api.github.com/users/patelh/followers","following_url":"https://api.github.com/users/patelh/following{/other_user}","gists_url":"https://api.github.com/users/patelh/gists{/gist_id}","starred_url":"https://api.github.com/users/patelh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/patelh/subscriptions","organizations_url":"https://api.github.com/users/patelh/orgs","repos_url":"https://api.github.com/users/patelh/repos","events_url":"https://api.github.com/users/patelh/events{/privacy}","received_events_url":"https://api.github.com/users/patelh/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-03-08T20:53:52Z","updated_at":"2017-03-08T20:53:52Z","author_association":"CONTRIBUTOR","body":"Was the chunkPeriod bug in v2 group by engine fixed?  I would not recommend setting v2 as default until that is deprecated or fixed.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/285165790/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/285167493","html_url":"https://github.com/apache/druid/issues/4027#issuecomment-285167493","issue_url":"https://api.github.com/repos/apache/druid/issues/4027","id":285167493,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NTE2NzQ5Mw==","user":{"login":"leventov","id":609240,"node_id":"MDQ6VXNlcjYwOTI0MA==","avatar_url":"https://avatars.githubusercontent.com/u/609240?v=4","gravatar_id":"","url":"https://api.github.com/users/leventov","html_url":"https://github.com/leventov","followers_url":"https://api.github.com/users/leventov/followers","following_url":"https://api.github.com/users/leventov/following{/other_user}","gists_url":"https://api.github.com/users/leventov/gists{/gist_id}","starred_url":"https://api.github.com/users/leventov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leventov/subscriptions","organizations_url":"https://api.github.com/users/leventov/orgs","repos_url":"https://api.github.com/users/leventov/repos","events_url":"https://api.github.com/users/leventov/events{/privacy}","received_events_url":"https://api.github.com/users/leventov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-03-08T21:00:13Z","updated_at":"2017-03-08T21:01:51Z","author_association":"MEMBER","body":"@lemire I mean that there is a way to create Roaring Bitmap, backed by ByteBuffers. ByteBuffers is a part of JDK so it's not in maven dependencies :)\r\n\r\nUnlikely that you want to start depending third-party `Memory` library and integrate it into upstream Roaring. But I could be wrong. If you are not conceptually against it, we can submit a PR with Memory support.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/285167493/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/285169145","html_url":"https://github.com/apache/druid/issues/4026#issuecomment-285169145","issue_url":"https://api.github.com/repos/apache/druid/issues/4026","id":285169145,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NTE2OTE0NQ==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-03-08T21:06:14Z","updated_at":"2017-03-08T21:06:14Z","author_association":"CONTRIBUTOR","body":"@cheddar @gianm @akashdw I'm good with removing caching of Unions and that would be ideal, however that would require some level of performance testing at least. also, we can check with @leerho if things have changed in Union creation since that code was written.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/285169145/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/285172845","html_url":"https://github.com/apache/druid/issues/3944#issuecomment-285172845","issue_url":"https://api.github.com/repos/apache/druid/issues/3944","id":285172845,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NTE3Mjg0NQ==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-03-08T21:20:29Z","updated_at":"2017-03-08T21:20:29Z","author_association":"CONTRIBUTOR","body":"Yes, that was fixed in #4004.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/285172845/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/285174229","html_url":"https://github.com/apache/druid/issues/4026#issuecomment-285174229","issue_url":"https://api.github.com/repos/apache/druid/issues/4026","id":285174229,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NTE3NDIyOQ==","user":{"login":"cheddar","id":216778,"node_id":"MDQ6VXNlcjIxNjc3OA==","avatar_url":"https://avatars.githubusercontent.com/u/216778?v=4","gravatar_id":"","url":"https://api.github.com/users/cheddar","html_url":"https://github.com/cheddar","followers_url":"https://api.github.com/users/cheddar/followers","following_url":"https://api.github.com/users/cheddar/following{/other_user}","gists_url":"https://api.github.com/users/cheddar/gists{/gist_id}","starred_url":"https://api.github.com/users/cheddar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cheddar/subscriptions","organizations_url":"https://api.github.com/users/cheddar/orgs","repos_url":"https://api.github.com/users/cheddar/repos","events_url":"https://api.github.com/users/cheddar/events{/privacy}","received_events_url":"https://api.github.com/users/cheddar/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-03-08T21:25:23Z","updated_at":"2017-03-08T21:25:23Z","author_association":"CONTRIBUTOR","body":"Yeah, I'll chat with @leerho about whether a faster wrap method could be provided.\r\n\r\n@gianm looking at the code again, it *does* lazily reinstantiate the objects, so I think what you described would actually work (I had thought it didn't).  That said, the current contract on the interface is that init is called first and then it is used for storing.  In the close/reopen, we would end up breaking that contract as well.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/285174229/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/285177564","html_url":"https://github.com/apache/druid/issues/4026#issuecomment-285177564","issue_url":"https://api.github.com/repos/apache/druid/issues/4026","id":285177564,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NTE3NzU2NA==","user":{"login":"akashdw","id":5886276,"node_id":"MDQ6VXNlcjU4ODYyNzY=","avatar_url":"https://avatars.githubusercontent.com/u/5886276?v=4","gravatar_id":"","url":"https://api.github.com/users/akashdw","html_url":"https://github.com/akashdw","followers_url":"https://api.github.com/users/akashdw/followers","following_url":"https://api.github.com/users/akashdw/following{/other_user}","gists_url":"https://api.github.com/users/akashdw/gists{/gist_id}","starred_url":"https://api.github.com/users/akashdw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/akashdw/subscriptions","organizations_url":"https://api.github.com/users/akashdw/orgs","repos_url":"https://api.github.com/users/akashdw/repos","events_url":"https://api.github.com/users/akashdw/events{/privacy}","received_events_url":"https://api.github.com/users/akashdw/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-03-08T21:37:46Z","updated_at":"2017-03-08T21:50:44Z","author_association":"CONTRIBUTOR","body":"I think  fixing `SketchBufferAggregator` not to cache position is something long term fix b/c it requires some level of performance testing. close/reopen could be a short term fix? @gianm @cheddar @himanshug What do you think going forward with close/reopen approach for now?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/285177564/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/285185288","html_url":"https://github.com/apache/druid/issues/4027#issuecomment-285185288","issue_url":"https://api.github.com/repos/apache/druid/issues/4027","id":285185288,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NTE4NTI4OA==","user":{"login":"lemire","id":391987,"node_id":"MDQ6VXNlcjM5MTk4Nw==","avatar_url":"https://avatars.githubusercontent.com/u/391987?v=4","gravatar_id":"","url":"https://api.github.com/users/lemire","html_url":"https://github.com/lemire","followers_url":"https://api.github.com/users/lemire/followers","following_url":"https://api.github.com/users/lemire/following{/other_user}","gists_url":"https://api.github.com/users/lemire/gists{/gist_id}","starred_url":"https://api.github.com/users/lemire/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lemire/subscriptions","organizations_url":"https://api.github.com/users/lemire/orgs","repos_url":"https://api.github.com/users/lemire/repos","events_url":"https://api.github.com/users/lemire/events{/privacy}","received_events_url":"https://api.github.com/users/lemire/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-03-08T22:06:59Z","updated_at":"2017-03-08T22:06:59Z","author_association":"NONE","body":"@leventov \r\n\r\n> Unlikely that you want to start depending third-party Memory library and integrate it into upstream Roaring. But I could be wrong. If you are not conceptually against it, we can submit a PR with Memory support.\r\n\r\nRoaring is community-driven. I don't think we have a rule against third-party libraries.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/285185288/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/285188505","html_url":"https://github.com/apache/druid/issues/4026#issuecomment-285188505","issue_url":"https://api.github.com/repos/apache/druid/issues/4026","id":285188505,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NTE4ODUwNQ==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-03-08T22:20:23Z","updated_at":"2017-03-08T22:20:23Z","author_association":"CONTRIBUTOR","body":"If fixing SketchBufferAggregator isn't feasible in the 0.10.0 timeframe then I'm ok with closing and re-creating the buffer aggs as a workaround. So I guess it depends on how much work fixing the aggregator would be.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/285188505/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/285193492","html_url":"https://github.com/apache/druid/pull/3889#issuecomment-285193492","issue_url":"https://api.github.com/repos/apache/druid/issues/3889","id":285193492,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NTE5MzQ5Mg==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-03-08T22:39:51Z","updated_at":"2017-03-08T22:39:51Z","author_association":"CONTRIBUTOR","body":"@leventov ok, i started reading the PR . \r\ndoes all the speed up come from cloning a class and use that dedicated cloned class for a given shape because hopefully JIT will be able to generate optimized code for that specific shape ?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/285193492/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/285196442","html_url":"https://github.com/apache/druid/pull/3889#issuecomment-285196442","issue_url":"https://api.github.com/repos/apache/druid/issues/3889","id":285196442,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NTE5NjQ0Mg==","user":{"login":"leventov","id":609240,"node_id":"MDQ6VXNlcjYwOTI0MA==","avatar_url":"https://avatars.githubusercontent.com/u/609240?v=4","gravatar_id":"","url":"https://api.github.com/users/leventov","html_url":"https://github.com/leventov","followers_url":"https://api.github.com/users/leventov/followers","following_url":"https://api.github.com/users/leventov/following{/other_user}","gists_url":"https://api.github.com/users/leventov/gists{/gist_id}","starred_url":"https://api.github.com/users/leventov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leventov/subscriptions","organizations_url":"https://api.github.com/users/leventov/orgs","repos_url":"https://api.github.com/users/leventov/repos","events_url":"https://api.github.com/users/leventov/events{/privacy}","received_events_url":"https://api.github.com/users/leventov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-03-08T22:52:14Z","updated_at":"2017-03-08T22:52:14Z","author_association":"MEMBER","body":"@himanshug yes, JIT inlines monomorphic calls.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/285196442/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/285202370","html_url":"https://github.com/apache/druid/issues/4026#issuecomment-285202370","issue_url":"https://api.github.com/repos/apache/druid/issues/4026","id":285202370,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NTIwMjM3MA==","user":{"login":"cheddar","id":216778,"node_id":"MDQ6VXNlcjIxNjc3OA==","avatar_url":"https://avatars.githubusercontent.com/u/216778?v=4","gravatar_id":"","url":"https://api.github.com/users/cheddar","html_url":"https://github.com/cheddar","followers_url":"https://api.github.com/users/cheddar/followers","following_url":"https://api.github.com/users/cheddar/following{/other_user}","gists_url":"https://api.github.com/users/cheddar/gists{/gist_id}","starred_url":"https://api.github.com/users/cheddar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cheddar/subscriptions","organizations_url":"https://api.github.com/users/cheddar/orgs","repos_url":"https://api.github.com/users/cheddar/repos","events_url":"https://api.github.com/users/cheddar/events{/privacy}","received_events_url":"https://api.github.com/users/cheddar/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-03-08T23:19:30Z","updated_at":"2017-03-08T23:19:30Z","author_association":"CONTRIBUTOR","body":"@gianm I'm not a fan of close/reopen because it is breaking the contract of the interface.  Also, we realized that there is another thing that is going to break what we are doing which close/reopen will not do.  For quantile sketches, they don't fit entirely in a fixed memory size, so we decided that when they need to grow beyond the available memory, we would pull them on heap and use the position to find them in an on-heap Map.  close/open will break that.\r\n\r\nSo, I'm thinking that what we might need to do to support this type of activity is add an \"ordinal\" to the interface, which is an id that doesn't change even when the position changes.  We should be able to introduce that using default method implementations on the interface so that it would be backwards compatible.  Is it difficult to provide such an ordinal value with groupBy v2?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/285202370/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/285204146","html_url":"https://github.com/apache/druid/issues/3945#issuecomment-285204146","issue_url":"https://api.github.com/repos/apache/druid/issues/3945","id":285204146,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NTIwNDE0Ng==","user":{"login":"huangting1","id":4086971,"node_id":"MDQ6VXNlcjQwODY5NzE=","avatar_url":"https://avatars.githubusercontent.com/u/4086971?v=4","gravatar_id":"","url":"https://api.github.com/users/huangting1","html_url":"https://github.com/huangting1","followers_url":"https://api.github.com/users/huangting1/followers","following_url":"https://api.github.com/users/huangting1/following{/other_user}","gists_url":"https://api.github.com/users/huangting1/gists{/gist_id}","starred_url":"https://api.github.com/users/huangting1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/huangting1/subscriptions","organizations_url":"https://api.github.com/users/huangting1/orgs","repos_url":"https://api.github.com/users/huangting1/repos","events_url":"https://api.github.com/users/huangting1/events{/privacy}","received_events_url":"https://api.github.com/users/huangting1/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-03-08T23:28:15Z","updated_at":"2017-03-08T23:28:15Z","author_association":"NONE","body":"+1 vote","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/285204146/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/285211156","html_url":"https://github.com/apache/druid/issues/4026#issuecomment-285211156","issue_url":"https://api.github.com/repos/apache/druid/issues/4026","id":285211156,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NTIxMTE1Ng==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-03-09T00:05:04Z","updated_at":"2017-03-09T00:05:04Z","author_association":"CONTRIBUTOR","body":"@cheddar What's the contract that is being broken? To me it seems fine to close one aggregator and then use a different one to keep aggregating on the same buffer, since I imagined that \"close\" is supposed to release resources (but not modify the buffer), and so it should be fine for some other aggregator instance to do further processing on the same buffer state, which I imagined would store all the state for the aggregator. groupBy v2 is written under this assumption. Reading over the BufferAggregator interface again it doesn't seem like this is spelled out one way or the other, so probably both of our interpretations could be read into what's there‚Ä¶\r\n\r\nIt's not easy for groupBy to pass in an ordinal like that, but it could pass along the key instead. The aggregator state is a value in the hash table, and so it does have a consistent key, which is a byte array. But tracking that still seems to me like something that BufferAggregators shouldn't do.\r\n\r\nAre you suggesting that it's OK for buffer aggregators to store aggregation state inside themselves that is not actually part of the buffer? That seems really sketchy (sorry about the pun) for memory management -- in my mind the purpose of using the buffer is to manage memory better and avoid OOMs, which is defeated if the aggregators are keeping a lot of state outside of the buffer.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/285211156/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/285216679","html_url":"https://github.com/apache/druid/pull/4028#issuecomment-285216679","issue_url":"https://api.github.com/repos/apache/druid/issues/4028","id":285216679,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NTIxNjY3OQ==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-03-09T00:36:11Z","updated_at":"2017-03-09T00:36:11Z","author_association":"CONTRIBUTOR","body":"SQL's DECIMAL type requires precision and scale, but it seems to be simply translated into Java's double type in this patch. Would you share your plan for supporting decimal type?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/285216679/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/285217498","html_url":"https://github.com/apache/druid/pull/4028#issuecomment-285217498","issue_url":"https://api.github.com/repos/apache/druid/issues/4028","id":285217498,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NTIxNzQ5OA==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-03-09T00:40:55Z","updated_at":"2017-03-09T00:40:55Z","author_association":"CONTRIBUTOR","body":"I have no plan for that, this is coercion rather than real standard compliant support. I think it'd require changes to Druid core, not just the SQL layer, since it's not a type supported by Druid.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/285217498/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/285218535","html_url":"https://github.com/apache/druid/issues/4026#issuecomment-285218535","issue_url":"https://api.github.com/repos/apache/druid/issues/4026","id":285218535,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NTIxODUzNQ==","user":{"login":"cheddar","id":216778,"node_id":"MDQ6VXNlcjIxNjc3OA==","avatar_url":"https://avatars.githubusercontent.com/u/216778?v=4","gravatar_id":"","url":"https://api.github.com/users/cheddar","html_url":"https://github.com/cheddar","followers_url":"https://api.github.com/users/cheddar/followers","following_url":"https://api.github.com/users/cheddar/following{/other_user}","gists_url":"https://api.github.com/users/cheddar/gists{/gist_id}","starred_url":"https://api.github.com/users/cheddar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cheddar/subscriptions","organizations_url":"https://api.github.com/users/cheddar/orgs","repos_url":"https://api.github.com/users/cheddar/repos","events_url":"https://api.github.com/users/cheddar/events{/privacy}","received_events_url":"https://api.github.com/users/cheddar/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-03-09T00:46:59Z","updated_at":"2017-03-09T00:46:59Z","author_association":"CONTRIBUTOR","body":"@gianm the contract that I feel is getting broken is that a particular aggregator instance will see the space with its `init` method before it sees it with any subsequent method.  In the close/reopen case, the reopened aggregator will start seeing things in `get()` calls that it never saw in `init()` calls.\r\n\r\nSo, the problem in the quantile sketch case is that the algorithm isn't actually amenable to a fixed size.  So, we are taking a strategy of setting a fixed size that we expect to work in a vast majority of cases and having a fallback of pulling the thing on heap for the small percentage of the time that it needs it.  The alternative to this strategy would be Druid actually exposing something that allows for variable sizes for the aggregators.  So far, I've thought that variable sizes for the Aggregators is really too much and so opted for pulling it on heap instead.  Does that make sense?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/285218535/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/285218629","html_url":"https://github.com/apache/druid/pull/4028#issuecomment-285218629","issue_url":"https://api.github.com/repos/apache/druid/issues/4028","id":285218629,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NTIxODYyOQ==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-03-09T00:47:36Z","updated_at":"2017-03-09T01:24:39Z","author_association":"CONTRIBUTOR","body":"Right. The simplest solution would be adding a BigDecimal type to Druid and use it for SQL's decimal type. We can do or devise more efficient way later.\r\n\r\nThe patch looks good to me.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/285218629/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/285220591","html_url":"https://github.com/apache/druid/issues/4026#issuecomment-285220591","issue_url":"https://api.github.com/repos/apache/druid/issues/4026","id":285220591,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NTIyMDU5MQ==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-03-09T00:58:40Z","updated_at":"2017-03-09T00:58:40Z","author_association":"CONTRIBUTOR","body":"I think we can make variable sizes for buffer aggregators work. At least for groupBy, we can let aggregators grow into some of the space currently reserved for hashtable expansion. If the space fills up for either reason then we spill to disk. And after the spill we might reserve some extra space for aggregator growth if they needed it before the spill. That seems friendlier to me than letting them grow into the Java heap and hoping for the best.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/285220591/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/285230781","html_url":"https://github.com/apache/druid/issues/4026#issuecomment-285230781","issue_url":"https://api.github.com/repos/apache/druid/issues/4026","id":285230781,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NTIzMDc4MQ==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-03-09T01:56:56Z","updated_at":"2017-03-09T01:59:50Z","author_association":"CONTRIBUTOR","body":"@cheddar I guess , we could do below which will do the \"close/reopen\" and still follow all aggregator contract if we do the init() call but discard updates done to BB like described below....\r\n\r\n```\r\noldBuffAgg.close();\r\n//say above old buffer aggregator was working on oldBB at oldPos\r\n\r\nBufferAggregator newBuffAgg = factory.factorize(..);\r\nnewBuffAgg.init(newBB, newPos);\r\n//copy contents at oldPos, oldBB to newBB, newPos\r\n\r\n//afterwards regular newBuffAgg.aggregate(newBB, newPos) calls\r\n```\r\n\r\nabove assumes that BufferAggregator.close() does not destroy the BB contents. to be safer we can do following instead\r\n\r\n```\r\n//copy oldBB at oldPos contents to a temporary location\r\noldBuffAgg.close();\r\n\r\n//now do the rest and copy temporary location's bytes to newBB at newPos\r\n```","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/285230781/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/285231187","html_url":"https://github.com/apache/druid/issues/4026#issuecomment-285231187","issue_url":"https://api.github.com/repos/apache/druid/issues/4026","id":285231187,"node_id":"MDEyOklzc3VlQ29tbWVudDI4NTIzMTE4Nw==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-03-09T01:59:18Z","updated_at":"2017-03-09T01:59:18Z","author_association":"CONTRIBUTOR","body":"Or we could add a \"relocate\" method that tells the BufferAggregator that the sketch at a certain location has been relocated to a different location.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/285231187/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]