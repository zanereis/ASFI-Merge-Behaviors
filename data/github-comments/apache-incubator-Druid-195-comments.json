[{"url":"https://api.github.com/repos/apache/druid/issues/comments/409008347","html_url":"https://github.com/apache/druid/pull/5789#issuecomment-409008347","issue_url":"https://api.github.com/repos/apache/druid/issues/5789","id":409008347,"node_id":"MDEyOklzc3VlQ29tbWVudDQwOTAwODM0Nw==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-30T20:59:13Z","updated_at":"2018-07-30T20:59:13Z","author_association":"CONTRIBUTOR","body":"@andresgomezfrr thanks. Please check my comment [here](https://github.com/apache/incubator-druid/pull/5789#discussion_r206319063).\r\n\r\nAlso, this unit test failure looks legitimate.\r\n\r\n```\r\nTests run: 6, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 0.007 sec <<< FAILURE! - in io.druid.query.aggregation.first.StringFirstAggregationTest\r\ntestStringFirstAggregateCombiner(io.druid.query.aggregation.first.StringFirstAggregationTest)  Time elapsed: 0.002 sec  <<< FAILURE!\r\norg.junit.ComparisonFailure: expected:<[AAAA]> but was:<[BBBB]>\r\n\tat org.junit.Assert.assertEquals(Assert.java:115)\r\n\tat org.junit.Assert.assertEquals(Assert.java:144)\r\n\tat io.druid.query.aggregation.first.StringFirstAggregationTest.testStringFirstAggregateCombiner(StringFirstAggregationTest.java:166)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\r\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\r\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\r\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\r\n\tat org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\r\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\r\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\r\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:309)\r\n\tat org.junit.runners.Suite.runChild(Suite.java:127)\r\n\tat org.junit.runners.Suite.runChild(Suite.java:26)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:309)\r\n\tat org.apache.maven.surefire.junitcore.JUnitCore.run(JUnitCore.java:55)\r\n\tat org.apache.maven.surefire.junitcore.JUnitCoreWrapper.createRequestAndRun(JUnitCoreWrapper.java:137)\r\n\tat org.apache.maven.surefire.junitcore.JUnitCoreWrapper.executeLazy(JUnitCoreWrapper.java:119)\r\n\tat org.apache.maven.surefire.junitcore.JUnitCoreWrapper.execute(JUnitCoreWrapper.java:87)\r\n\tat org.apache.maven.surefire.junitcore.JUnitCoreWrapper.execute(JUnitCoreWrapper.java:75)\r\n\tat org.apache.maven.surefire.junitcore.JUnitCoreProvider.invoke(JUnitCoreProvider.java:161)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)\r\n```","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/409008347/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/409010765","html_url":"https://github.com/apache/druid/issues/5584#issuecomment-409010765","issue_url":"https://api.github.com/repos/apache/druid/issues/5584","id":409010765,"node_id":"MDEyOklzc3VlQ29tbWVudDQwOTAxMDc2NQ==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-30T21:07:21Z","updated_at":"2018-07-30T21:07:21Z","author_association":"CONTRIBUTOR","body":"@josephglanville, thanks for the comment. It sounds good to me. I also agree to support Reader for realtime ingestion too. Do you want to make a PR for this?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/409010765/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/409063965","html_url":"https://github.com/apache/druid/pull/6061#issuecomment-409063965","issue_url":"https://api.github.com/repos/apache/druid/issues/6061","id":409063965,"node_id":"MDEyOklzc3VlQ29tbWVudDQwOTA2Mzk2NQ==","user":{"login":"clintropolis","id":1577461,"node_id":"MDQ6VXNlcjE1Nzc0NjE=","avatar_url":"https://avatars.githubusercontent.com/u/1577461?v=4","gravatar_id":"","url":"https://api.github.com/users/clintropolis","html_url":"https://github.com/clintropolis","followers_url":"https://api.github.com/users/clintropolis/followers","following_url":"https://api.github.com/users/clintropolis/following{/other_user}","gists_url":"https://api.github.com/users/clintropolis/gists{/gist_id}","starred_url":"https://api.github.com/users/clintropolis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintropolis/subscriptions","organizations_url":"https://api.github.com/users/clintropolis/orgs","repos_url":"https://api.github.com/users/clintropolis/repos","events_url":"https://api.github.com/users/clintropolis/events{/privacy}","received_events_url":"https://api.github.com/users/clintropolis/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-31T01:28:59Z","updated_at":"2018-07-31T01:28:59Z","author_association":"MEMBER","body":"reverting because this doesn't seem to work correctly","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/409063965/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/409079965","html_url":"https://github.com/apache/druid/issues/6064#issuecomment-409079965","issue_url":"https://api.github.com/repos/apache/druid/issues/6064","id":409079965,"node_id":"MDEyOklzc3VlQ29tbWVudDQwOTA3OTk2NQ==","user":{"login":"asdf2014","id":8108788,"node_id":"MDQ6VXNlcjgxMDg3ODg=","avatar_url":"https://avatars.githubusercontent.com/u/8108788?v=4","gravatar_id":"","url":"https://api.github.com/users/asdf2014","html_url":"https://github.com/asdf2014","followers_url":"https://api.github.com/users/asdf2014/followers","following_url":"https://api.github.com/users/asdf2014/following{/other_user}","gists_url":"https://api.github.com/users/asdf2014/gists{/gist_id}","starred_url":"https://api.github.com/users/asdf2014/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/asdf2014/subscriptions","organizations_url":"https://api.github.com/users/asdf2014/orgs","repos_url":"https://api.github.com/users/asdf2014/repos","events_url":"https://api.github.com/users/asdf2014/events{/privacy}","received_events_url":"https://api.github.com/users/asdf2014/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-31T03:10:31Z","updated_at":"2018-07-31T03:10:31Z","author_association":"MEMBER","body":"BTW, in addition to this place, there are a lot of `duplicate code` problems, about 349. :sweat_smile:\r\n\r\n![image](https://user-images.githubusercontent.com/8108788/43435338-2b35b4e6-94b2-11e8-8bd2-9e3921c2b56b.png)\r\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/409079965/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/409115258","html_url":"https://github.com/apache/druid/issues/5574#issuecomment-409115258","issue_url":"https://api.github.com/repos/apache/druid/issues/5574","id":409115258,"node_id":"MDEyOklzc3VlQ29tbWVudDQwOTExNTI1OA==","user":{"login":"magor","id":676771,"node_id":"MDQ6VXNlcjY3Njc3MQ==","avatar_url":"https://avatars.githubusercontent.com/u/676771?v=4","gravatar_id":"","url":"https://api.github.com/users/magor","html_url":"https://github.com/magor","followers_url":"https://api.github.com/users/magor/followers","following_url":"https://api.github.com/users/magor/following{/other_user}","gists_url":"https://api.github.com/users/magor/gists{/gist_id}","starred_url":"https://api.github.com/users/magor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/magor/subscriptions","organizations_url":"https://api.github.com/users/magor/orgs","repos_url":"https://api.github.com/users/magor/repos","events_url":"https://api.github.com/users/magor/events{/privacy}","received_events_url":"https://api.github.com/users/magor/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-31T06:54:26Z","updated_at":"2018-07-31T06:54:26Z","author_association":"NONE","body":"hey @terry19850829 , I stumbled upon the same problem, how did you deal with it?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/409115258/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/409125068","html_url":"https://github.com/apache/druid/issues/5566#issuecomment-409125068","issue_url":"https://api.github.com/repos/apache/druid/issues/5566","id":409125068,"node_id":"MDEyOklzc3VlQ29tbWVudDQwOTEyNTA2OA==","user":{"login":"kskalski","id":775012,"node_id":"MDQ6VXNlcjc3NTAxMg==","avatar_url":"https://avatars.githubusercontent.com/u/775012?v=4","gravatar_id":"","url":"https://api.github.com/users/kskalski","html_url":"https://github.com/kskalski","followers_url":"https://api.github.com/users/kskalski/followers","following_url":"https://api.github.com/users/kskalski/following{/other_user}","gists_url":"https://api.github.com/users/kskalski/gists{/gist_id}","starred_url":"https://api.github.com/users/kskalski/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kskalski/subscriptions","organizations_url":"https://api.github.com/users/kskalski/orgs","repos_url":"https://api.github.com/users/kskalski/repos","events_url":"https://api.github.com/users/kskalski/events{/privacy}","received_events_url":"https://api.github.com/users/kskalski/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-31T07:34:52Z","updated_at":"2018-07-31T07:34:52Z","author_association":"NONE","body":"@jihoonson thanks for the tip, indeed this makes the query work fine. I'm wondering though, if this use-case shouldn't be possible to handle automatically. In fact Druid has the concept of \"finalized\" and not-finalized values from aggregators and it can apply it correctly to first/last aggregators, which implement that pattern, e.g.:\r\n\r\n```\r\n{\r\n    \"queryType\": \"groupBy\",\r\n    \"dataSource\": \"pm_data\",\r\n    \"aggregations\":[{ \"type\": \"doubleFirst\", \"name\": \"value_num\", \"fieldName\": \"value_num\" }],\r\n    \"dimensions\": [\"counter_id\"],\r\n    \"intervals\": \"2017-06-30T00:00:00/2017-07-02T16:46:40\",\r\n    \"filters\": {\"type\": \"selector\", \"dimension\": \"version\", \"value\": \"43:48501\"},\r\n    \"granularity\": \"day\"\r\n}\r\n```\r\n\r\nworks fine returning just value num without using expression postaggregator. Shouldn't it also apply the same logic in nested query? I suppose outer query will always treat its input as finalized, so in essence the nested query should finalize its results.\r\n\r\nActually, I would like to know how the mechanizm of finalizing results works, since I also had similar problem using Java client classes (_com.simplaex.clients.druid.DruidClient_, which I know is not supported approach, but still might shed some light on the issue here) when executing above (non-nested) group_by query - the client was not able to parse the results correctly, so I suppose there is some trick / special postprocessing / flag forcing finalization of results.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/409125068/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/409172115","html_url":"https://github.com/apache/druid/pull/5789#issuecomment-409172115","issue_url":"https://api.github.com/repos/apache/druid/issues/5789","id":409172115,"node_id":"MDEyOklzc3VlQ29tbWVudDQwOTE3MjExNQ==","user":{"login":"andresgomezfrr","id":4025771,"node_id":"MDQ6VXNlcjQwMjU3NzE=","avatar_url":"https://avatars.githubusercontent.com/u/4025771?v=4","gravatar_id":"","url":"https://api.github.com/users/andresgomezfrr","html_url":"https://github.com/andresgomezfrr","followers_url":"https://api.github.com/users/andresgomezfrr/followers","following_url":"https://api.github.com/users/andresgomezfrr/following{/other_user}","gists_url":"https://api.github.com/users/andresgomezfrr/gists{/gist_id}","starred_url":"https://api.github.com/users/andresgomezfrr/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andresgomezfrr/subscriptions","organizations_url":"https://api.github.com/users/andresgomezfrr/orgs","repos_url":"https://api.github.com/users/andresgomezfrr/repos","events_url":"https://api.github.com/users/andresgomezfrr/events{/privacy}","received_events_url":"https://api.github.com/users/andresgomezfrr/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-31T10:23:13Z","updated_at":"2018-07-31T10:23:13Z","author_association":"CONTRIBUTOR","body":"Fix the test, I didn't see it, sorry! \r\n\r\nRemove the `filterNullValues` property. Instead, you can use the aggregator with `FilteredAggregator` at ingestion time. Thanks @jihoonson ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/409172115/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/409224023","html_url":"https://github.com/apache/druid/pull/5958#issuecomment-409224023","issue_url":"https://api.github.com/repos/apache/druid/issues/5958","id":409224023,"node_id":"MDEyOklzc3VlQ29tbWVudDQwOTIyNDAyMw==","user":{"login":"nishantmonu51","id":5023786,"node_id":"MDQ6VXNlcjUwMjM3ODY=","avatar_url":"https://avatars.githubusercontent.com/u/5023786?v=4","gravatar_id":"","url":"https://api.github.com/users/nishantmonu51","html_url":"https://github.com/nishantmonu51","followers_url":"https://api.github.com/users/nishantmonu51/followers","following_url":"https://api.github.com/users/nishantmonu51/following{/other_user}","gists_url":"https://api.github.com/users/nishantmonu51/gists{/gist_id}","starred_url":"https://api.github.com/users/nishantmonu51/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nishantmonu51/subscriptions","organizations_url":"https://api.github.com/users/nishantmonu51/orgs","repos_url":"https://api.github.com/users/nishantmonu51/repos","events_url":"https://api.github.com/users/nishantmonu51/events{/privacy}","received_events_url":"https://api.github.com/users/nishantmonu51/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-31T13:38:51Z","updated_at":"2018-07-31T13:39:03Z","author_association":"MEMBER","body":"> Comparisons between null and non-null values will follow three-valued logic and the result of a comparison involving NULL is not a boolean value – it is a null value.\r\n\r\nthis actually works now for Expressions, See BinaryEvalOpExprBase.eval, if any of the values being compared is null it returns null. \r\nDo you see any places where this is might not work ? ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/409224023/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/409238862","html_url":"https://github.com/apache/druid/pull/6072#issuecomment-409238862","issue_url":"https://api.github.com/repos/apache/druid/issues/6072","id":409238862,"node_id":"MDEyOklzc3VlQ29tbWVudDQwOTIzODg2Mg==","user":{"login":"chengchengpei","id":5881383,"node_id":"MDQ6VXNlcjU4ODEzODM=","avatar_url":"https://avatars.githubusercontent.com/u/5881383?v=4","gravatar_id":"","url":"https://api.github.com/users/chengchengpei","html_url":"https://github.com/chengchengpei","followers_url":"https://api.github.com/users/chengchengpei/followers","following_url":"https://api.github.com/users/chengchengpei/following{/other_user}","gists_url":"https://api.github.com/users/chengchengpei/gists{/gist_id}","starred_url":"https://api.github.com/users/chengchengpei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/chengchengpei/subscriptions","organizations_url":"https://api.github.com/users/chengchengpei/orgs","repos_url":"https://api.github.com/users/chengchengpei/repos","events_url":"https://api.github.com/users/chengchengpei/events{/privacy}","received_events_url":"https://api.github.com/users/chengchengpei/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-31T14:22:24Z","updated_at":"2018-07-31T17:39:23Z","author_association":"CONTRIBUTOR","body":"@jihoonson It is ready for review now. Could you please help remove WIP tag? Thanks. Btw, why I cannot add/remove the tags?\r\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/409238862/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/409239999","html_url":"https://github.com/apache/druid/pull/5958#issuecomment-409239999","issue_url":"https://api.github.com/repos/apache/druid/issues/5958","id":409239999,"node_id":"MDEyOklzc3VlQ29tbWVudDQwOTIzOTk5OQ==","user":{"login":"nishantmonu51","id":5023786,"node_id":"MDQ6VXNlcjUwMjM3ODY=","avatar_url":"https://avatars.githubusercontent.com/u/5023786?v=4","gravatar_id":"","url":"https://api.github.com/users/nishantmonu51","html_url":"https://github.com/nishantmonu51","followers_url":"https://api.github.com/users/nishantmonu51/followers","following_url":"https://api.github.com/users/nishantmonu51/following{/other_user}","gists_url":"https://api.github.com/users/nishantmonu51/gists{/gist_id}","starred_url":"https://api.github.com/users/nishantmonu51/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nishantmonu51/subscriptions","organizations_url":"https://api.github.com/users/nishantmonu51/orgs","repos_url":"https://api.github.com/users/nishantmonu51/repos","events_url":"https://api.github.com/users/nishantmonu51/events{/privacy}","received_events_url":"https://api.github.com/users/nishantmonu51/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-31T14:25:20Z","updated_at":"2018-07-31T14:25:20Z","author_association":"MEMBER","body":"@jihoonson In terms of functionality, After this PR, all things mentioned in the proposal except following should be working - \r\n* last of @gianm comments (https://github.com/apache/incubator-druid/issues/6053). \r\n* Ability to specify default values at ingestion \r\n>  8. Users will be able to specify default values to replace NULL values at ingestion time.\r\n\r\n* Handling of follow up comments perf related \r\n* Updating/Adding docs for the new behavior","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/409239999/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/409289149","html_url":"https://github.com/apache/druid/issues/6066#issuecomment-409289149","issue_url":"https://api.github.com/repos/apache/druid/issues/6066","id":409289149,"node_id":"MDEyOklzc3VlQ29tbWVudDQwOTI4OTE0OQ==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-31T16:46:53Z","updated_at":"2018-07-31T16:46:53Z","author_association":"CONTRIBUTOR","body":"@gianm \r\ncurious why sorting rows produces smaller segments? Is that because unsorted rows result in unsorted dictionary (per dimension column) ? If yes, then it is more about sorting the dictionary in the end while persisting than keeping the rows sorted which is potentially more expensive.\r\nthat said, why would sorted dictionary be any better for segment size because dictionaries are not even compressed AFAIK. (sorting dictionaries is good for query performance though).","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/409289149/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/409291702","html_url":"https://github.com/apache/druid/issues/6066#issuecomment-409291702","issue_url":"https://api.github.com/repos/apache/druid/issues/6066","id":409291702,"node_id":"MDEyOklzc3VlQ29tbWVudDQwOTI5MTcwMg==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-31T16:53:54Z","updated_at":"2018-08-03T17:07:45Z","author_association":"CONTRIBUTOR","body":"I think, sorting would lead to encoded column values for same int all to be together , so we would end up with sorted int array as column value which would compress better. nvrmind.\r\nso, in theory, we could sort in the end while persisting instead of maintaining sorted rows all through indexing if that was doable.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/409291702/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/409300607","html_url":"https://github.com/apache/druid/issues/6066#issuecomment-409300607","issue_url":"https://api.github.com/repos/apache/druid/issues/6066","id":409300607,"node_id":"MDEyOklzc3VlQ29tbWVudDQwOTMwMDYwNw==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-31T17:22:22Z","updated_at":"2018-07-31T17:22:22Z","author_association":"CONTRIBUTOR","body":"> I think, sorting would lead to encoded column values for same int all to be together , so we would end up with sorted int array as column value which would compress better. nvrmind.\r\n\r\nYeah I expect that this is the reason.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/409300607/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/409382812","html_url":"https://github.com/apache/druid/pull/6084#issuecomment-409382812","issue_url":"https://api.github.com/repos/apache/druid/issues/6084","id":409382812,"node_id":"MDEyOklzc3VlQ29tbWVudDQwOTM4MjgxMg==","user":{"login":"jon-wei","id":8729063,"node_id":"MDQ6VXNlcjg3MjkwNjM=","avatar_url":"https://avatars.githubusercontent.com/u/8729063?v=4","gravatar_id":"","url":"https://api.github.com/users/jon-wei","html_url":"https://github.com/jon-wei","followers_url":"https://api.github.com/users/jon-wei/followers","following_url":"https://api.github.com/users/jon-wei/following{/other_user}","gists_url":"https://api.github.com/users/jon-wei/gists{/gist_id}","starred_url":"https://api.github.com/users/jon-wei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jon-wei/subscriptions","organizations_url":"https://api.github.com/users/jon-wei/orgs","repos_url":"https://api.github.com/users/jon-wei/repos","events_url":"https://api.github.com/users/jon-wei/events{/privacy}","received_events_url":"https://api.github.com/users/jon-wei/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-31T22:02:15Z","updated_at":"2018-07-31T22:02:15Z","author_association":"CONTRIBUTOR","body":"The test failed (as it should), I think you might have hit a problem with https://github.com/apache/incubator-druid/pull/6061, which was broken and skipped tests incorrectly:\r\n\r\n```\r\nTests run: 3, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 0.047 sec <<< FAILURE! - in io.druid.java.util.common.FileUtilsTest\r\nbrokenTest(io.druid.java.util.common.FileUtilsTest)  Time elapsed: 0.002 sec  <<< FAILURE!\r\njava.lang.AssertionError: expected:<1> but was:<0>\r\n\tat org.junit.Assert.fail(Assert.java:88)\r\n\tat org.junit.Assert.failNotEquals(Assert.java:743)\r\n\tat org.junit.Assert.assertEquals(Assert.java:118)\r\n\tat org.junit.Assert.assertEquals(Assert.java:555)\r\n\tat org.junit.Assert.assertEquals(Assert.java:542)\r\n\tat io.druid.java.util.common.FileUtilsTest.brokenTest(FileUtilsTest.java:40)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\r\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\r\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\r\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\r\n\tat org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:48)\r\n\tat org.junit.rules.RunRules.evaluate(RunRules.java:20)\r\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\r\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\r\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:309)\r\n\tat org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:367)\r\n\tat org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:274)\r\n\tat org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)\r\n\tat org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:161)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)\r\n```","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/409382812/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/409384210","html_url":"https://github.com/apache/druid/pull/6084#issuecomment-409384210","issue_url":"https://api.github.com/repos/apache/druid/issues/6084","id":409384210,"node_id":"MDEyOklzc3VlQ29tbWVudDQwOTM4NDIxMA==","user":{"login":"yuppie-flu","id":6185911,"node_id":"MDQ6VXNlcjYxODU5MTE=","avatar_url":"https://avatars.githubusercontent.com/u/6185911?v=4","gravatar_id":"","url":"https://api.github.com/users/yuppie-flu","html_url":"https://github.com/yuppie-flu","followers_url":"https://api.github.com/users/yuppie-flu/followers","following_url":"https://api.github.com/users/yuppie-flu/following{/other_user}","gists_url":"https://api.github.com/users/yuppie-flu/gists{/gist_id}","starred_url":"https://api.github.com/users/yuppie-flu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yuppie-flu/subscriptions","organizations_url":"https://api.github.com/users/yuppie-flu/orgs","repos_url":"https://api.github.com/users/yuppie-flu/repos","events_url":"https://api.github.com/users/yuppie-flu/events{/privacy}","received_events_url":"https://api.github.com/users/yuppie-flu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-31T22:07:56Z","updated_at":"2018-07-31T22:07:56Z","author_association":"CONTRIBUTOR","body":"@jon-wei Thank you, you're right I guess. I noticed that yesterday and wanted to reproduce with this simple example.\r\nIs this skipping logic reverted right now?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/409384210/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/409384511","html_url":"https://github.com/apache/druid/pull/6084#issuecomment-409384511","issue_url":"https://api.github.com/repos/apache/druid/issues/6084","id":409384511,"node_id":"MDEyOklzc3VlQ29tbWVudDQwOTM4NDUxMQ==","user":{"login":"jon-wei","id":8729063,"node_id":"MDQ6VXNlcjg3MjkwNjM=","avatar_url":"https://avatars.githubusercontent.com/u/8729063?v=4","gravatar_id":"","url":"https://api.github.com/users/jon-wei","html_url":"https://github.com/jon-wei","followers_url":"https://api.github.com/users/jon-wei/followers","following_url":"https://api.github.com/users/jon-wei/following{/other_user}","gists_url":"https://api.github.com/users/jon-wei/gists{/gist_id}","starred_url":"https://api.github.com/users/jon-wei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jon-wei/subscriptions","organizations_url":"https://api.github.com/users/jon-wei/orgs","repos_url":"https://api.github.com/users/jon-wei/repos","events_url":"https://api.github.com/users/jon-wei/events{/privacy}","received_events_url":"https://api.github.com/users/jon-wei/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-31T22:09:12Z","updated_at":"2018-07-31T22:09:12Z","author_association":"CONTRIBUTOR","body":"@yuppie-flu yes, #6061 has been reverted","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/409384511/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/409392115","html_url":"https://github.com/apache/druid/pull/6070#issuecomment-409392115","issue_url":"https://api.github.com/repos/apache/druid/issues/6070","id":409392115,"node_id":"MDEyOklzc3VlQ29tbWVudDQwOTM5MjExNQ==","user":{"login":"leventov","id":609240,"node_id":"MDQ6VXNlcjYwOTI0MA==","avatar_url":"https://avatars.githubusercontent.com/u/609240?v=4","gravatar_id":"","url":"https://api.github.com/users/leventov","html_url":"https://github.com/leventov","followers_url":"https://api.github.com/users/leventov/followers","following_url":"https://api.github.com/users/leventov/following{/other_user}","gists_url":"https://api.github.com/users/leventov/gists{/gist_id}","starred_url":"https://api.github.com/users/leventov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leventov/subscriptions","organizations_url":"https://api.github.com/users/leventov/orgs","repos_url":"https://api.github.com/users/leventov/repos","events_url":"https://api.github.com/users/leventov/events{/privacy}","received_events_url":"https://api.github.com/users/leventov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-31T22:45:07Z","updated_at":"2018-07-31T22:45:07Z","author_association":"MEMBER","body":"@yuppie-flu `failOnUnresolvableSignatures`. Please set it to true and include FileUtils in the forbidden-apis config, it's fine.\r\n\r\nAlso in the future, don't force push into the PR branch, only add commits on top. See https://github.com/apache/incubator-druid/blob/master/CONTRIBUTING.md","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/409392115/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/409398244","html_url":"https://github.com/apache/druid/pull/5857#issuecomment-409398244","issue_url":"https://api.github.com/repos/apache/druid/issues/5857","id":409398244,"node_id":"MDEyOklzc3VlQ29tbWVudDQwOTM5ODI0NA==","user":{"login":"jon-wei","id":8729063,"node_id":"MDQ6VXNlcjg3MjkwNjM=","avatar_url":"https://avatars.githubusercontent.com/u/8729063?v=4","gravatar_id":"","url":"https://api.github.com/users/jon-wei","html_url":"https://github.com/jon-wei","followers_url":"https://api.github.com/users/jon-wei/followers","following_url":"https://api.github.com/users/jon-wei/following{/other_user}","gists_url":"https://api.github.com/users/jon-wei/gists{/gist_id}","starred_url":"https://api.github.com/users/jon-wei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jon-wei/subscriptions","organizations_url":"https://api.github.com/users/jon-wei/orgs","repos_url":"https://api.github.com/users/jon-wei/repos","events_url":"https://api.github.com/users/jon-wei/events{/privacy}","received_events_url":"https://api.github.com/users/jon-wei/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-07-31T23:16:44Z","updated_at":"2018-07-31T23:16:44Z","author_association":"CONTRIBUTOR","body":"Added a test to check that the optimization is not performed when not filtering on __time","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/409398244/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/409430347","html_url":"https://github.com/apache/druid/issues/5584#issuecomment-409430347","issue_url":"https://api.github.com/repos/apache/druid/issues/5584","id":409430347,"node_id":"MDEyOklzc3VlQ29tbWVudDQwOTQzMDM0Nw==","user":{"login":"josephglanville","id":605591,"node_id":"MDQ6VXNlcjYwNTU5MQ==","avatar_url":"https://avatars.githubusercontent.com/u/605591?v=4","gravatar_id":"","url":"https://api.github.com/users/josephglanville","html_url":"https://github.com/josephglanville","followers_url":"https://api.github.com/users/josephglanville/followers","following_url":"https://api.github.com/users/josephglanville/following{/other_user}","gists_url":"https://api.github.com/users/josephglanville/gists{/gist_id}","starred_url":"https://api.github.com/users/josephglanville/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/josephglanville/subscriptions","organizations_url":"https://api.github.com/users/josephglanville/orgs","repos_url":"https://api.github.com/users/josephglanville/repos","events_url":"https://api.github.com/users/josephglanville/events{/privacy}","received_events_url":"https://api.github.com/users/josephglanville/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-01T02:38:30Z","updated_at":"2018-08-01T02:38:30Z","author_association":"CONTRIBUTOR","body":"Yes, I am starting work on this now. I will open a PR when I have something we can iterate on.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/409430347/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/409433128","html_url":"https://github.com/apache/druid/issues/6085#issuecomment-409433128","issue_url":"https://api.github.com/repos/apache/druid/issues/6085","id":409433128,"node_id":"MDEyOklzc3VlQ29tbWVudDQwOTQzMzEyOA==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-01T02:56:30Z","updated_at":"2018-08-01T02:56:30Z","author_association":"CONTRIBUTOR","body":"Hi @hellobabygogo, currently, Druid SQL is not rollup-aware. So for average on a rolled up datasource you should instead write: `select sum(queryTime) / sum(\"count\")`.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/409433128/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/409440817","html_url":"https://github.com/apache/druid/issues/6085#issuecomment-409440817","issue_url":"https://api.github.com/repos/apache/druid/issues/6085","id":409440817,"node_id":"MDEyOklzc3VlQ29tbWVudDQwOTQ0MDgxNw==","user":{"login":"hellobabygogo","id":8693129,"node_id":"MDQ6VXNlcjg2OTMxMjk=","avatar_url":"https://avatars.githubusercontent.com/u/8693129?v=4","gravatar_id":"","url":"https://api.github.com/users/hellobabygogo","html_url":"https://github.com/hellobabygogo","followers_url":"https://api.github.com/users/hellobabygogo/followers","following_url":"https://api.github.com/users/hellobabygogo/following{/other_user}","gists_url":"https://api.github.com/users/hellobabygogo/gists{/gist_id}","starred_url":"https://api.github.com/users/hellobabygogo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hellobabygogo/subscriptions","organizations_url":"https://api.github.com/users/hellobabygogo/orgs","repos_url":"https://api.github.com/users/hellobabygogo/repos","events_url":"https://api.github.com/users/hellobabygogo/events{/privacy}","received_events_url":"https://api.github.com/users/hellobabygogo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-01T03:52:09Z","updated_at":"2018-08-01T03:52:09Z","author_association":"NONE","body":"@gianm hi, thanks for reply.    I agree with your suggestion that used sum(queryTime) / sum(\"count\") to instead of avg(queryTime) , but  its users Unfriendly!  May be we need forbid avg function.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/409440817/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/409441738","html_url":"https://github.com/apache/druid/pull/5958#issuecomment-409441738","issue_url":"https://api.github.com/repos/apache/druid/issues/5958","id":409441738,"node_id":"MDEyOklzc3VlQ29tbWVudDQwOTQ0MTczOA==","user":{"login":"nishantmonu51","id":5023786,"node_id":"MDQ6VXNlcjUwMjM3ODY=","avatar_url":"https://avatars.githubusercontent.com/u/5023786?v=4","gravatar_id":"","url":"https://api.github.com/users/nishantmonu51","html_url":"https://github.com/nishantmonu51","followers_url":"https://api.github.com/users/nishantmonu51/followers","following_url":"https://api.github.com/users/nishantmonu51/following{/other_user}","gists_url":"https://api.github.com/users/nishantmonu51/gists{/gist_id}","starred_url":"https://api.github.com/users/nishantmonu51/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nishantmonu51/subscriptions","organizations_url":"https://api.github.com/users/nishantmonu51/orgs","repos_url":"https://api.github.com/users/nishantmonu51/repos","events_url":"https://api.github.com/users/nishantmonu51/events{/privacy}","received_events_url":"https://api.github.com/users/nishantmonu51/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-01T03:59:31Z","updated_at":"2018-08-01T03:59:31Z","author_association":"MEMBER","body":"@jihoonson any more comments here ? ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/409441738/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/409453337","html_url":"https://github.com/apache/druid/pull/5958#issuecomment-409453337","issue_url":"https://api.github.com/repos/apache/druid/issues/5958","id":409453337,"node_id":"MDEyOklzc3VlQ29tbWVudDQwOTQ1MzMzNw==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-01T05:24:35Z","updated_at":"2018-08-01T05:24:35Z","author_association":"CONTRIBUTOR","body":"@nishantmonu51 awesome! Thanks for clarifying. Everything looks good except the travis failure. Would you check it please?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/409453337/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/409489925","html_url":"https://github.com/apache/druid/pull/6027#issuecomment-409489925","issue_url":"https://api.github.com/repos/apache/druid/issues/6027","id":409489925,"node_id":"MDEyOklzc3VlQ29tbWVudDQwOTQ4OTkyNQ==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-01T08:12:55Z","updated_at":"2018-08-01T08:12:55Z","author_association":"CONTRIBUTOR","body":"I don't think this needs to block 0.12.2. It is not fixing a bug in Druid, but is making a modification to Druid to make it easier to integrate with Spark.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/409489925/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/409505753","html_url":"https://github.com/apache/druid/issues/4865#issuecomment-409505753","issue_url":"https://api.github.com/repos/apache/druid/issues/4865","id":409505753,"node_id":"MDEyOklzc3VlQ29tbWVudDQwOTUwNTc1Mw==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-01T09:05:10Z","updated_at":"2018-08-01T09:05:10Z","author_association":"CONTRIBUTOR","body":">However, just a thought I had was this could benefit if scan query didn't go through regular merging process at the broker and somehow simply streamed results from historicals to client as they showed up on broker.\r\n\r\n@himanshug But what happens if the results from historicals show up faster than they can be written to the client… where are they buffered?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/409505753/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/409507538","html_url":"https://github.com/apache/druid/issues/4933#issuecomment-409507538","issue_url":"https://api.github.com/repos/apache/druid/issues/4933","id":409507538,"node_id":"MDEyOklzc3VlQ29tbWVudDQwOTUwNzUzOA==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-01T09:10:45Z","updated_at":"2018-08-01T09:10:45Z","author_association":"CONTRIBUTOR","body":"Also related: #6014, an attempt to solve this.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/409507538/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/409508489","html_url":"https://github.com/apache/druid/pull/6070#issuecomment-409508489","issue_url":"https://api.github.com/repos/apache/druid/issues/6070","id":409508489,"node_id":"MDEyOklzc3VlQ29tbWVudDQwOTUwODQ4OQ==","user":{"login":"yuppie-flu","id":6185911,"node_id":"MDQ6VXNlcjYxODU5MTE=","avatar_url":"https://avatars.githubusercontent.com/u/6185911?v=4","gravatar_id":"","url":"https://api.github.com/users/yuppie-flu","html_url":"https://github.com/yuppie-flu","followers_url":"https://api.github.com/users/yuppie-flu/followers","following_url":"https://api.github.com/users/yuppie-flu/following{/other_user}","gists_url":"https://api.github.com/users/yuppie-flu/gists{/gist_id}","starred_url":"https://api.github.com/users/yuppie-flu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yuppie-flu/subscriptions","organizations_url":"https://api.github.com/users/yuppie-flu/orgs","repos_url":"https://api.github.com/users/yuppie-flu/repos","events_url":"https://api.github.com/users/yuppie-flu/events{/privacy}","received_events_url":"https://api.github.com/users/yuppie-flu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-01T09:13:49Z","updated_at":"2018-08-01T09:13:49Z","author_association":"CONTRIBUTOR","body":"@leventov Done, thank you","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/409508489/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/409515681","html_url":"https://github.com/apache/druid/pull/6014#issuecomment-409515681","issue_url":"https://api.github.com/repos/apache/druid/issues/6014","id":409515681,"node_id":"MDEyOklzc3VlQ29tbWVudDQwOTUxNTY4MQ==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-01T09:38:06Z","updated_at":"2018-08-01T09:38:06Z","author_association":"CONTRIBUTOR","body":"@drcrallen It's too bad it didn't work out!\r\n\r\n> If the DirectDruidClient handler blocked, then the callbacks would not progress and the HttpClient thread would be stalled and risk pool starvation.\r\n\r\nI think the issue is that this really can't happen. IIRC, the handlers runs in a Netty async worker pool, and so if it \"hogs\" the pool for more than a split second, things can come to a screeching halt.\r\n\r\nI believe that a workable approach to backpressure must involve cooperation from Netty in some way.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/409515681/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/409515918","html_url":"https://github.com/apache/druid/issues/5574#issuecomment-409515918","issue_url":"https://api.github.com/repos/apache/druid/issues/5574","id":409515918,"node_id":"MDEyOklzc3VlQ29tbWVudDQwOTUxNTkxOA==","user":{"login":"terry19850829","id":13132142,"node_id":"MDQ6VXNlcjEzMTMyMTQy","avatar_url":"https://avatars.githubusercontent.com/u/13132142?v=4","gravatar_id":"","url":"https://api.github.com/users/terry19850829","html_url":"https://github.com/terry19850829","followers_url":"https://api.github.com/users/terry19850829/followers","following_url":"https://api.github.com/users/terry19850829/following{/other_user}","gists_url":"https://api.github.com/users/terry19850829/gists{/gist_id}","starred_url":"https://api.github.com/users/terry19850829/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/terry19850829/subscriptions","organizations_url":"https://api.github.com/users/terry19850829/orgs","repos_url":"https://api.github.com/users/terry19850829/repos","events_url":"https://api.github.com/users/terry19850829/events{/privacy}","received_events_url":"https://api.github.com/users/terry19850829/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-01T09:38:56Z","updated_at":"2018-08-01T09:38:56Z","author_association":"NONE","body":"@magor the problem occured when there is zero datasource. When the indexing service add one, the problem disappear.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/409515918/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/409518107","html_url":"https://github.com/apache/druid/issues/5990#issuecomment-409518107","issue_url":"https://api.github.com/repos/apache/druid/issues/5990","id":409518107,"node_id":"MDEyOklzc3VlQ29tbWVudDQwOTUxODEwNw==","user":{"login":"terry19850829","id":13132142,"node_id":"MDQ6VXNlcjEzMTMyMTQy","avatar_url":"https://avatars.githubusercontent.com/u/13132142?v=4","gravatar_id":"","url":"https://api.github.com/users/terry19850829","html_url":"https://github.com/terry19850829","followers_url":"https://api.github.com/users/terry19850829/followers","following_url":"https://api.github.com/users/terry19850829/following{/other_user}","gists_url":"https://api.github.com/users/terry19850829/gists{/gist_id}","starred_url":"https://api.github.com/users/terry19850829/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/terry19850829/subscriptions","organizations_url":"https://api.github.com/users/terry19850829/orgs","repos_url":"https://api.github.com/users/terry19850829/repos","events_url":"https://api.github.com/users/terry19850829/events{/privacy}","received_events_url":"https://api.github.com/users/terry19850829/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-01T09:46:41Z","updated_at":"2018-08-01T09:46:41Z","author_association":"NONE","body":"Is there any way to skip this issue ?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/409518107/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/409518597","html_url":"https://github.com/apache/druid/pull/6014#issuecomment-409518597","issue_url":"https://api.github.com/repos/apache/druid/issues/6014","id":409518597,"node_id":"MDEyOklzc3VlQ29tbWVudDQwOTUxODU5Nw==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-01T09:48:26Z","updated_at":"2018-08-01T09:48:26Z","author_association":"CONTRIBUTOR","body":"Mucking with auto-read seems to be a viable approach: http://normanmaurer.me/presentations/2014-http-netty/slides.html#47.0, https://stackoverflow.com/questions/28273305/why-netty-4-proxy-example-has-to-set-channel-auto-read-as-false.\r\n\r\nIt might be time to move to a Netty 4.x based HTTP client: https://netty.io/wiki/new-and-noteworthy-in-4.0.html\r\n\r\n> 3.x had an unintuitive inbound traffic suspension mechanism provided by Channel.setReadable(boolean). It introduced complicated interactions between ChannelHandlers and the handlers were easy to interfere with each other if implemented incorrectly.\r\n>\r\n>In 4.0, a new outbound operation called read() has been added. If you turn off the default auto-read flag with Channel.config().setAutoRead(false), Netty will not read anything until you explicitly invoke the read() operation. Once the read() operation you issue is complete and the channel again stops reading, an inbound event called channelReadSuspended() will be triggered so that you can re-issue another read() operation. You can also intercept a read() operation to perform more advanced traffic control.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/409518597/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/409518919","html_url":"https://github.com/apache/druid/issues/4933#issuecomment-409518919","issue_url":"https://api.github.com/repos/apache/druid/issues/4933","id":409518919,"node_id":"MDEyOklzc3VlQ29tbWVudDQwOTUxODkxOQ==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-01T09:49:43Z","updated_at":"2018-08-01T10:32:36Z","author_association":"CONTRIBUTOR","body":"#6014 was closed but still has relevant discussion: https://github.com/apache/incubator-druid/pull/6014#issuecomment-407613072","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/409518919/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/409520315","html_url":"https://github.com/apache/druid/issues/5006#issuecomment-409520315","issue_url":"https://api.github.com/repos/apache/druid/issues/5006","id":409520315,"node_id":"MDEyOklzc3VlQ29tbWVudDQwOTUyMDMxNQ==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-01T09:54:40Z","updated_at":"2018-08-01T09:54:40Z","author_association":"CONTRIBUTOR","body":"@RestfulBlue Have you considered the Scan query (http://druid.io/docs/latest/querying/scan-query.html) is meant to be a more memory friendly replacement for the Select query. It won't run your historicals out of memory. The only issue it really has is #4933, and that's a broker thing, not historicals. And it only can happen with very large or unlimited scan limits.\r\n\r\nYou could also consider adding a property for maxResults to SelectQueryConfig, and having that be a cap on the number of results that a Select query is allowed to return. With the way Select is written, though, it might be challenging to implement. Select's real problem is that it selects threshold-number of rows per each segment in parallel and then limits them later. This causes it to use up a lot more memory than you expect, and can also make it tough to implement a maxResults limit.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/409520315/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/409525814","html_url":"https://github.com/apache/druid/pull/4949#issuecomment-409525814","issue_url":"https://api.github.com/repos/apache/druid/issues/4949","id":409525814,"node_id":"MDEyOklzc3VlQ29tbWVudDQwOTUyNTgxNA==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-01T10:15:55Z","updated_at":"2018-08-01T10:17:02Z","author_association":"CONTRIBUTOR","body":"I think this will run into the same problem that @drcrallen ran into with #6014, due to blocking HttpClient worker threads. I am going to close this since I think we need a different approach: but, @stevenchen3 I hope we can continue the discussion in #6014 or #4933.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/409525814/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/409604350","html_url":"https://github.com/apache/druid/pull/5938#issuecomment-409604350","issue_url":"https://api.github.com/repos/apache/druid/issues/5938","id":409604350,"node_id":"MDEyOklzc3VlQ29tbWVudDQwOTYwNDM1MA==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-01T14:56:11Z","updated_at":"2018-08-01T14:56:11Z","author_association":"CONTRIBUTOR","body":"@himanshug, re:\r\n\r\n> looks like most of the fixes are in the calls to makeWorkerUrl(..), is it possible to put the fix inside impl of that method instead ?\r\n\r\nI made that change and re-pushed. I also consolidated the two makeWorkerURL methods into one helper method in TaskRunnerUtils.\r\n\r\n@jihoonson, re:\r\n\r\n> I think this is a very common mistake, so we need another way to prevent such mistakes. I suggest to add a sort of UrlBuilder which enforces encoding to input elements if needed.\r\n\r\nI considered doing this, but then we have a new problem of how to get callers to use UrlBuilder rather than making their own URLs. So I ended up just adding a urlEncode method to StringUtils and calling that where appropriate. (Note: it isn't always appropriate, since sometimes the format parameter is a literal path string like `\"foo/bar\"` and in that case we should _not_ url encode.)","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/409604350/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/409629510","html_url":"https://github.com/apache/druid/issues/4865#issuecomment-409629510","issue_url":"https://api.github.com/repos/apache/druid/issues/4865","id":409629510,"node_id":"MDEyOklzc3VlQ29tbWVudDQwOTYyOTUxMA==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-01T16:09:48Z","updated_at":"2018-08-01T16:09:48Z","author_association":"CONTRIBUTOR","body":"> @himanshug But what happens if the results from historicals show up faster than they can be written to the client… where are they buffered?\r\n\r\n@gianm I think, In that case they would be buffered at broker using the same code that other PRs are doing. the short circuit path would be more to avoid everything else related to merging. but, maybe noop merging is not much overhead for scan queries and in that case we wouldn't need it.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/409629510/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/409646849","html_url":"https://github.com/apache/druid/issues/5990#issuecomment-409646849","issue_url":"https://api.github.com/repos/apache/druid/issues/5990","id":409646849,"node_id":"MDEyOklzc3VlQ29tbWVudDQwOTY0Njg0OQ==","user":{"login":"RestfulBlue","id":32250229,"node_id":"MDQ6VXNlcjMyMjUwMjI5","avatar_url":"https://avatars.githubusercontent.com/u/32250229?v=4","gravatar_id":"","url":"https://api.github.com/users/RestfulBlue","html_url":"https://github.com/RestfulBlue","followers_url":"https://api.github.com/users/RestfulBlue/followers","following_url":"https://api.github.com/users/RestfulBlue/following{/other_user}","gists_url":"https://api.github.com/users/RestfulBlue/gists{/gist_id}","starred_url":"https://api.github.com/users/RestfulBlue/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/RestfulBlue/subscriptions","organizations_url":"https://api.github.com/users/RestfulBlue/orgs","repos_url":"https://api.github.com/users/RestfulBlue/repos","events_url":"https://api.github.com/users/RestfulBlue/events{/privacy}","received_events_url":"https://api.github.com/users/RestfulBlue/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-01T17:00:27Z","updated_at":"2018-08-01T17:00:27Z","author_association":"NONE","body":"i builded 12.2 from branch 0.12.2 and its looks fixed/ not happen anymore","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/409646849/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/409668501","html_url":"https://github.com/apache/druid/issues/5566#issuecomment-409668501","issue_url":"https://api.github.com/repos/apache/druid/issues/5566","id":409668501,"node_id":"MDEyOklzc3VlQ29tbWVudDQwOTY2ODUwMQ==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-01T18:08:07Z","updated_at":"2018-08-01T18:08:07Z","author_association":"CONTRIBUTOR","body":"> I'm wondering though, if this use-case shouldn't be possible to handle automatically.\r\n\r\n@kskalski good point. We can do unless there's some use cases to get the non-finalized values from the inner query. Probably someone wants to compute a sort of custom aggregator on the pairs of <timestamp, first/last value>.\r\n\r\n> so I suppose there is some trick / special postprocessing / flag forcing finalization of results.\r\n\r\nYes, there is a query context flag, called `finalize`, to get finalized results. `FinalizeResultsQueryRunner` is the query runner which automatically checks this flag and do some necessary work. In `GroupByStrategyV2.mergeResults()`, the broker sets `finalize` to false to get non-finalized results from historicals. Once it merges all results from historicals, it finalizes the merged results. Please check `ClientQuerySegmentWalker.makeRunner()` and `FluentQueryRunnerBuilder.applyPostMergeDecoration()`.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/409668501/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/409669865","html_url":"https://github.com/apache/druid/pull/5958#issuecomment-409669865","issue_url":"https://api.github.com/repos/apache/druid/issues/5958","id":409669865,"node_id":"MDEyOklzc3VlQ29tbWVudDQwOTY2OTg2NQ==","user":{"login":"nishantmonu51","id":5023786,"node_id":"MDQ6VXNlcjUwMjM3ODY=","avatar_url":"https://avatars.githubusercontent.com/u/5023786?v=4","gravatar_id":"","url":"https://api.github.com/users/nishantmonu51","html_url":"https://github.com/nishantmonu51","followers_url":"https://api.github.com/users/nishantmonu51/followers","following_url":"https://api.github.com/users/nishantmonu51/following{/other_user}","gists_url":"https://api.github.com/users/nishantmonu51/gists{/gist_id}","starred_url":"https://api.github.com/users/nishantmonu51/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nishantmonu51/subscriptions","organizations_url":"https://api.github.com/users/nishantmonu51/orgs","repos_url":"https://api.github.com/users/nishantmonu51/repos","events_url":"https://api.github.com/users/nishantmonu51/events{/privacy}","received_events_url":"https://api.github.com/users/nishantmonu51/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-01T18:12:22Z","updated_at":"2018-08-01T18:12:22Z","author_association":"MEMBER","body":"@jihoonson: travis is passing now. ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/409669865/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/409708970","html_url":"https://github.com/apache/druid/pull/5938#issuecomment-409708970","issue_url":"https://api.github.com/repos/apache/druid/issues/5938","id":409708970,"node_id":"MDEyOklzc3VlQ29tbWVudDQwOTcwODk3MA==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-01T20:21:29Z","updated_at":"2018-08-01T20:21:29Z","author_association":"CONTRIBUTOR","body":"Ok. Please check the travis failure.\r\n\r\n```\r\nTests in error: \r\n  HttpRemoteTaskRunnerTest.testFreshStart:146->access$100:76->createWorkerHolder:1240 » Runtime\r\n  HttpRemoteTaskRunnerTest.testMarkWorkersLazy:821->lambda$testMarkWorkersLazy$5:799->createWorkerHolder:1240 » Runtime\r\n  HttpRemoteTaskRunnerTest.testOneStuckTaskAssignmentDoesntBlockOthers:238->access$100:76->createWorkerHolder:1240 » Runtime\r\n  HttpRemoteTaskRunnerTest.testTaskRunnerRestart:378->lambda$testTaskRunnerRestart$0:338->createWorkerHolder:1240 » Runtime\r\n  HttpRemoteTaskRunnerTest.testWorkerDisapperAndReappearAfterItsCleanup:666->lambda$testWorkerDisapperAndReappearAfterItsCleanup$3:632->createWorkerHolder:1240 » Runtime\r\n  HttpRemoteTaskRunnerTest.testWorkerDisapperAndReappearBeforeItsCleanup:508->lambda$testWorkerDisapperAndReappearBeforeItsCleanup$1:469->createWorkerHolder:1240 » Runtime\r\n```","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/409708970/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/409717235","html_url":"https://github.com/apache/druid/issues/6091#issuecomment-409717235","issue_url":"https://api.github.com/repos/apache/druid/issues/6091","id":409717235,"node_id":"MDEyOklzc3VlQ29tbWVudDQwOTcxNzIzNQ==","user":{"login":"a2l007","id":4603202,"node_id":"MDQ6VXNlcjQ2MDMyMDI=","avatar_url":"https://avatars.githubusercontent.com/u/4603202?v=4","gravatar_id":"","url":"https://api.github.com/users/a2l007","html_url":"https://github.com/a2l007","followers_url":"https://api.github.com/users/a2l007/followers","following_url":"https://api.github.com/users/a2l007/following{/other_user}","gists_url":"https://api.github.com/users/a2l007/gists{/gist_id}","starred_url":"https://api.github.com/users/a2l007/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/a2l007/subscriptions","organizations_url":"https://api.github.com/users/a2l007/orgs","repos_url":"https://api.github.com/users/a2l007/repos","events_url":"https://api.github.com/users/a2l007/events{/privacy}","received_events_url":"https://api.github.com/users/a2l007/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-01T20:47:33Z","updated_at":"2018-08-01T20:47:33Z","author_association":"CONTRIBUTOR","body":"There could be parse exceptions that are getting raised due to which the segment to be persisted has no rows. Could you set `reportParseExceptions` to true in your config and try running again?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/409717235/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/409728564","html_url":"https://github.com/apache/druid/pull/6076#issuecomment-409728564","issue_url":"https://api.github.com/repos/apache/druid/issues/6076","id":409728564,"node_id":"MDEyOklzc3VlQ29tbWVudDQwOTcyODU2NA==","user":{"login":"jon-wei","id":8729063,"node_id":"MDQ6VXNlcjg3MjkwNjM=","avatar_url":"https://avatars.githubusercontent.com/u/8729063?v=4","gravatar_id":"","url":"https://api.github.com/users/jon-wei","html_url":"https://github.com/jon-wei","followers_url":"https://api.github.com/users/jon-wei/followers","following_url":"https://api.github.com/users/jon-wei/following{/other_user}","gists_url":"https://api.github.com/users/jon-wei/gists{/gist_id}","starred_url":"https://api.github.com/users/jon-wei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jon-wei/subscriptions","organizations_url":"https://api.github.com/users/jon-wei/orgs","repos_url":"https://api.github.com/users/jon-wei/repos","events_url":"https://api.github.com/users/jon-wei/events{/privacy}","received_events_url":"https://api.github.com/users/jon-wei/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-01T21:24:06Z","updated_at":"2018-08-01T21:24:06Z","author_association":"CONTRIBUTOR","body":"@gianm hm, I don't think we have any tests for TLS in general, I'll add some integration tests","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/409728564/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/409729937","html_url":"https://github.com/apache/druid/pull/6047#issuecomment-409729937","issue_url":"https://api.github.com/repos/apache/druid/issues/6047","id":409729937,"node_id":"MDEyOklzc3VlQ29tbWVudDQwOTcyOTkzNw==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-01T21:28:47Z","updated_at":"2018-08-01T21:28:47Z","author_association":"CONTRIBUTOR","body":"Hi @hpandeycodeit, the exception should be fine. In Druid, each component should retry until it finds the current leader.\r\n\r\nI think it's more important to replace those long java commands with our simple scripts. For example, we have a script, i.e., `bin/broker.sh` to start/stop brokers. So, we can replace `java cat conf-quickstart/druid/broker/jvm.config | xargs -cp \"conf-quickstart/druid/_common:conf-quickstart/druid/broker:lib/*\" io.druid.cli.Main server broker` to use this script. Probably we need to improve those scripts to accept an extra parameter for configuration directory. Similar for other components. Are you interested in this?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/409729937/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/409732562","html_url":"https://github.com/apache/druid/pull/5734#issuecomment-409732562","issue_url":"https://api.github.com/repos/apache/druid/issues/5734","id":409732562,"node_id":"MDEyOklzc3VlQ29tbWVudDQwOTczMjU2Mg==","user":{"login":"jon-wei","id":8729063,"node_id":"MDQ6VXNlcjg3MjkwNjM=","avatar_url":"https://avatars.githubusercontent.com/u/8729063?v=4","gravatar_id":"","url":"https://api.github.com/users/jon-wei","html_url":"https://github.com/jon-wei","followers_url":"https://api.github.com/users/jon-wei/followers","following_url":"https://api.github.com/users/jon-wei/following{/other_user}","gists_url":"https://api.github.com/users/jon-wei/gists{/gist_id}","starred_url":"https://api.github.com/users/jon-wei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jon-wei/subscriptions","organizations_url":"https://api.github.com/users/jon-wei/orgs","repos_url":"https://api.github.com/users/jon-wei/repos","events_url":"https://api.github.com/users/jon-wei/events{/privacy}","received_events_url":"https://api.github.com/users/jon-wei/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-01T21:38:08Z","updated_at":"2018-08-01T21:38:08Z","author_association":"CONTRIBUTOR","body":"Sorry for the delayed review, can you add docs as well and fix conflicts?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/409732562/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/409750172","html_url":"https://github.com/apache/druid/pull/6027#issuecomment-409750172","issue_url":"https://api.github.com/repos/apache/druid/issues/6027","id":409750172,"node_id":"MDEyOklzc3VlQ29tbWVudDQwOTc1MDE3Mg==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-01T22:49:00Z","updated_at":"2018-08-01T22:49:00Z","author_association":"CONTRIBUTOR","body":"@leventov I've checked the [recent Kryo code](https://github.com/EsotericSoftware/kryo/blob/master/src/com/esotericsoftware/kryo/serializers/MapSerializer.java#L186-L240), but it shows the similar pattern like below.\r\n\r\n```\r\n\tpublic T read (Kryo kryo, Input input, Class<? extends T> type) {\r\n...\r\n\t\tT map = create(kryo, input, type, length);\r\n...\r\n\t\tfor (int i = 0; i < length; i++) {\r\n...\t\t\tmap.put(key, value);\r\n\t\t}\r\n...\r\n\t\treturn map;\r\n```\r\n\r\nI guess this is the part modifying the `Map` returned from `ObjectFlatteners`. If this is correct, they should have the same issue. \r\n\r\nWhat's making me confused is why the Kryo is using the map returned from `ObjectFlatteners`. `map` is created by calling `create()` method which is defined as below:\r\n\r\n```java\r\n\tprotected Map create (Kryo kryo, Input input, Class<Map> type) {\r\n\t\treturn kryo.newInstance(type);\r\n\t}\r\n```\r\n\r\nDo you have any idea about this?\r\n\r\nIf you think this is the bug of Kryo, have you reported this issue to the Kryo community? Can you add a link to here?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/409750172/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/409771369","html_url":"https://github.com/apache/druid/issues/6066#issuecomment-409771369","issue_url":"https://api.github.com/repos/apache/druid/issues/6066","id":409771369,"node_id":"MDEyOklzc3VlQ29tbWVudDQwOTc3MTM2OQ==","user":{"login":"clintropolis","id":1577461,"node_id":"MDQ6VXNlcjE1Nzc0NjE=","avatar_url":"https://avatars.githubusercontent.com/u/1577461?v=4","gravatar_id":"","url":"https://api.github.com/users/clintropolis","html_url":"https://github.com/clintropolis","followers_url":"https://api.github.com/users/clintropolis/followers","following_url":"https://api.github.com/users/clintropolis/following{/other_user}","gists_url":"https://api.github.com/users/clintropolis/gists{/gist_id}","starred_url":"https://api.github.com/users/clintropolis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintropolis/subscriptions","organizations_url":"https://api.github.com/users/clintropolis/orgs","repos_url":"https://api.github.com/users/clintropolis/repos","events_url":"https://api.github.com/users/clintropolis/events{/privacy}","received_events_url":"https://api.github.com/users/clintropolis/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-02T00:58:28Z","updated_at":"2018-08-02T00:58:28Z","author_association":"MEMBER","body":"I did some digging and the more straightforward solution to this problem is to just store the rows sorted in `PlainFactsHolder` similar to how `RollupFactsHolder` is currently doing, changing from `ConcurrentMap<Long, Deque<IncrementalIndexRow>>` to `ConcurrentMap<IncrementalIndexRow, Deque<IncrementalIndexRow>>` and using the `IncrementalIndexRowComparator`. I think the alternative is finding all calls to `FactsHolder.iterator` and `FactsHolder.keySet` used for persist and replacing those with a version that sorts `IncrementalIndexRow` with the comparator (unless I'm missing another simpler place where this could be done). \r\n\r\nI did some benchmarking and there does appear to be some cost to doing the sorting up front, I'm not sure on the range of what is an acceptable amount of overhead.\r\n\r\n```\r\nBenchmark                                          (rollupOption)  Mode  Cnt   Score   Error  Units\r\nIncrementalIndexRowTypeBenchmark.normalFloats              rollup  avgt   40  19.965 ± 1.780  us/op\r\nIncrementalIndexRowTypeBenchmark.normalFloats           no-rollup  avgt   40  10.596 ± 1.055  us/op\r\nIncrementalIndexRowTypeBenchmark.normalFloats   ordered-no-rollup  avgt   40  21.925 ± 1.323  us/op\r\nIncrementalIndexRowTypeBenchmark.normalLongs               rollup  avgt   40  19.108 ± 1.286  us/op\r\nIncrementalIndexRowTypeBenchmark.normalLongs            no-rollup  avgt   40  10.107 ± 1.042  us/op\r\nIncrementalIndexRowTypeBenchmark.normalLongs    ordered-no-rollup  avgt   40  21.967 ± 1.406  us/op\r\nIncrementalIndexRowTypeBenchmark.normalStrings             rollup  avgt   40  20.489 ± 2.442  us/op\r\nIncrementalIndexRowTypeBenchmark.normalStrings          no-rollup  avgt   40   9.352 ± 0.105  us/op\r\nIncrementalIndexRowTypeBenchmark.normalStrings  ordered-no-rollup  avgt   40  20.986 ± 0.508  us/op\r\n```\r\n\r\n```\r\nBenchmark                                  (numSegments)     (rollupSchema)  (rowsPerSegment)        (schemaAndQuery)  (threshold)  Mode  Cnt        Score       Error  Units\r\nTopNBenchmark.querySingleIncrementalIndex              1          no-rollup            750000                 basic.A           10  avgt   25   950647.742 ± 20969.530  us/op\r\nTopNBenchmark.querySingleIncrementalIndex              1          no-rollup            750000       basic.numericSort           10  avgt   25   230487.526 ± 29340.615  us/op\r\nTopNBenchmark.querySingleIncrementalIndex              1          no-rollup            750000  basic.alphanumericSort           10  avgt   25   218782.138 ±  6203.484  us/op\r\nTopNBenchmark.querySingleIncrementalIndex              1  ordered-no-rollup            750000                 basic.A           10  avgt   25   945842.924 ± 12074.015  us/op\r\nTopNBenchmark.querySingleIncrementalIndex              1  ordered-no-rollup            750000       basic.numericSort           10  avgt   25   222019.610 ±  3486.365  us/op\r\nTopNBenchmark.querySingleIncrementalIndex              1  ordered-no-rollup            750000  basic.alphanumericSort           10  avgt   25   223015.114 ±  3130.184  us/op\r\nTopNBenchmark.querySingleIncrementalIndex              1             rollup            750000                 basic.A           10  avgt   25  1347085.823 ± 12655.001  us/op\r\nTopNBenchmark.querySingleIncrementalIndex              1             rollup            750000       basic.numericSort           10  avgt   25   204926.129 ±  4846.150  us/op\r\nTopNBenchmark.querySingleIncrementalIndex              1             rollup            750000  basic.alphanumericSort           10  avgt   25   201050.213 ±  6559.034  us/op\r\n```\r\n```\r\nBenchmark                                        (numSegments)     (rollupSchema)  (rowsPerSegment)              (schemaAndQuery)  Mode  Cnt        Score       Error  Units\r\nTimeseriesBenchmark.querySingleIncrementalIndex              1          no-rollup            750000                       basic.A  avgt   25   921919.453 ± 25357.840  us/op\r\nTimeseriesBenchmark.querySingleIncrementalIndex              1          no-rollup            750000       basic.timeFilterNumeric  avgt   25    69240.969 ±  1403.393  us/op\r\nTimeseriesBenchmark.querySingleIncrementalIndex              1          no-rollup            750000  basic.timeFilterAlphanumeric  avgt   25   152974.422 ±  2181.950  us/op\r\nTimeseriesBenchmark.querySingleIncrementalIndex              1          no-rollup            750000    basic.timeFilterByInterval  avgt   25    16752.936 ±   406.768  us/op\r\nTimeseriesBenchmark.querySingleIncrementalIndex              1  ordered-no-rollup            750000                       basic.A  avgt   25   906129.041 ± 19497.575  us/op\r\nTimeseriesBenchmark.querySingleIncrementalIndex              1  ordered-no-rollup            750000       basic.timeFilterNumeric  avgt   25    66989.537 ±  1249.002  us/op\r\nTimeseriesBenchmark.querySingleIncrementalIndex              1  ordered-no-rollup            750000  basic.timeFilterAlphanumeric  avgt   25   153816.935 ±  2080.406  us/op\r\nTimeseriesBenchmark.querySingleIncrementalIndex              1  ordered-no-rollup            750000    basic.timeFilterByInterval  avgt   25    16650.825 ±   271.827  us/op\r\nTimeseriesBenchmark.querySingleIncrementalIndex              1             rollup            750000                       basic.A  avgt   25  1410127.820 ± 19685.994  us/op\r\nTimeseriesBenchmark.querySingleIncrementalIndex              1             rollup            750000       basic.timeFilterNumeric  avgt   25    48694.028 ±   865.701  us/op\r\nTimeseriesBenchmark.querySingleIncrementalIndex              1             rollup            750000  basic.timeFilterAlphanumeric  avgt   25   138381.904 ±  1284.566  us/op\r\nTimeseriesBenchmark.querySingleIncrementalIndex              1             rollup            750000    basic.timeFilterByInterval  avgt   25    14172.496 ±  1020.567  us/op\r\n```\r\n```\r\nBenchmark                                     (defaultStrategy)  (initialBuckets)  (numProcessingThreads)  (numSegments)  (queryGranularity)     (rollupSchema)  (rowsPerSegment)  (schemaAndQuery)  Mode  Cnt      Score      Error  Units\r\nGroupByBenchmark.querySingleIncrementalIndex                 v2                -1                       4              4                 all          no-rollup            100000           basic.A  avgt   25  53761.212 ± 2854.750  us/op\r\nGroupByBenchmark.querySingleIncrementalIndex                 v2                -1                       4              4                 all          no-rollup            100000      basic.nested  avgt   25  71957.267 ± 3881.153  us/op\r\nGroupByBenchmark.querySingleIncrementalIndex                 v2                -1                       4              4                 all  ordered-no-rollup            100000           basic.A  avgt   25  63418.312 ± 9735.523  us/op\r\nGroupByBenchmark.querySingleIncrementalIndex                 v2                -1                       4              4                 all  ordered-no-rollup            100000      basic.nested  avgt   25  79107.369 ± 3597.208  us/op\r\nGroupByBenchmark.querySingleIncrementalIndex                 v2                -1                       4              4                 all             rollup            100000           basic.A  avgt   25  57728.209 ± 3683.978  us/op\r\nGroupByBenchmark.querySingleIncrementalIndex                 v2                -1                       4              4                 all             rollup            100000      basic.nested  avgt   25  77225.014 ± 4820.121  us/op\r\nGroupByBenchmark.querySingleIncrementalIndex                 v2                -1                       4              4                 day          no-rollup            100000           basic.A  avgt   25  60686.368 ± 3545.676  us/op\r\nGroupByBenchmark.querySingleIncrementalIndex                 v2                -1                       4              4                 day          no-rollup            100000      basic.nested  avgt   25  73173.081 ± 3365.438  us/op\r\nGroupByBenchmark.querySingleIncrementalIndex                 v2                -1                       4              4                 day  ordered-no-rollup            100000           basic.A  avgt   25  67065.055 ± 2742.212  us/op\r\nGroupByBenchmark.querySingleIncrementalIndex                 v2                -1                       4              4                 day  ordered-no-rollup            100000      basic.nested  avgt   25  78658.129 ± 4969.871  us/op\r\nGroupByBenchmark.querySingleIncrementalIndex                 v2                -1                       4              4                 day             rollup            100000           basic.A  avgt   25  62835.895 ± 3471.298  us/op\r\nGroupByBenchmark.querySingleIncrementalIndex                 v2                -1                       4              4                 day             rollup            100000      basic.nested  avgt   25  78779.644 ± 5321.856  us/op\r\n```\r\nThe difference is most apparent on adding rows where performance is similar to performance of rollup enabled, and in group by queries, where performance is slightly slower than if rollup were enabled. I would also expect some slight increased memory usage with this approach due to increased number of shorter length `Deque` objects from a larger number of key entries in the facts holder map.\r\n\r\nI also haven't done any measurement on size differences of persisted segments yet.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/409771369/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/409796954","html_url":"https://github.com/apache/druid/issues/6091#issuecomment-409796954","issue_url":"https://api.github.com/repos/apache/druid/issues/6091","id":409796954,"node_id":"MDEyOklzc3VlQ29tbWVudDQwOTc5Njk1NA==","user":{"login":"terry19850829","id":13132142,"node_id":"MDQ6VXNlcjEzMTMyMTQy","avatar_url":"https://avatars.githubusercontent.com/u/13132142?v=4","gravatar_id":"","url":"https://api.github.com/users/terry19850829","html_url":"https://github.com/terry19850829","followers_url":"https://api.github.com/users/terry19850829/followers","following_url":"https://api.github.com/users/terry19850829/following{/other_user}","gists_url":"https://api.github.com/users/terry19850829/gists{/gist_id}","starred_url":"https://api.github.com/users/terry19850829/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/terry19850829/subscriptions","organizations_url":"https://api.github.com/users/terry19850829/orgs","repos_url":"https://api.github.com/users/terry19850829/repos","events_url":"https://api.github.com/users/terry19850829/events{/privacy}","received_events_url":"https://api.github.com/users/terry19850829/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-02T03:48:35Z","updated_at":"2018-08-02T03:48:35Z","author_association":"NONE","body":"@a2l007  I've config reportParseExceptions before, there is no other suggestion messages.I'll try again.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/409796954/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/409798621","html_url":"https://github.com/apache/druid/issues/6023#issuecomment-409798621","issue_url":"https://api.github.com/repos/apache/druid/issues/6023","id":409798621,"node_id":"MDEyOklzc3VlQ29tbWVudDQwOTc5ODYyMQ==","user":{"login":"vogievetsky","id":177816,"node_id":"MDQ6VXNlcjE3NzgxNg==","avatar_url":"https://avatars.githubusercontent.com/u/177816?v=4","gravatar_id":"","url":"https://api.github.com/users/vogievetsky","html_url":"https://github.com/vogievetsky","followers_url":"https://api.github.com/users/vogievetsky/followers","following_url":"https://api.github.com/users/vogievetsky/following{/other_user}","gists_url":"https://api.github.com/users/vogievetsky/gists{/gist_id}","starred_url":"https://api.github.com/users/vogievetsky/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vogievetsky/subscriptions","organizations_url":"https://api.github.com/users/vogievetsky/orgs","repos_url":"https://api.github.com/users/vogievetsky/repos","events_url":"https://api.github.com/users/vogievetsky/events{/privacy}","received_events_url":"https://api.github.com/users/vogievetsky/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-02T04:01:13Z","updated_at":"2018-08-02T04:01:13Z","author_association":"CONTRIBUTOR","body":"Just wanted to note here that this is possible in [DSQL](http://druid.io/docs/latest/querying/sql.html):\r\n\r\nYou can issue a query like:\r\n\r\n```\r\nSELECT \"channel\", COUNT(*) AS \"Count\"\r\nFROM \"wikipedia\"\r\nWHERE \"__time\" >= CURRENT_TIMESTAMP - INTERVAL '1' DAY\r\nGROUP BY \"channel\"\r\nORDER BY \"Count\" DESC\r\n```\r\n\r\nfor example to get the last day of data. In general doing computations with CURRENT_TIMESTAMP can be very powerful.\r\n\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/409798621/reactions","total_count":4,"+1":4,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/409799098","html_url":"https://github.com/apache/druid/issues/6017#issuecomment-409799098","issue_url":"https://api.github.com/repos/apache/druid/issues/6017","id":409799098,"node_id":"MDEyOklzc3VlQ29tbWVudDQwOTc5OTA5OA==","user":{"login":"vogievetsky","id":177816,"node_id":"MDQ6VXNlcjE3NzgxNg==","avatar_url":"https://avatars.githubusercontent.com/u/177816?v=4","gravatar_id":"","url":"https://api.github.com/users/vogievetsky","html_url":"https://github.com/vogievetsky","followers_url":"https://api.github.com/users/vogievetsky/followers","following_url":"https://api.github.com/users/vogievetsky/following{/other_user}","gists_url":"https://api.github.com/users/vogievetsky/gists{/gist_id}","starred_url":"https://api.github.com/users/vogievetsky/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vogievetsky/subscriptions","organizations_url":"https://api.github.com/users/vogievetsky/orgs","repos_url":"https://api.github.com/users/vogievetsky/repos","events_url":"https://api.github.com/users/vogievetsky/events{/privacy}","received_events_url":"https://api.github.com/users/vogievetsky/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-02T04:04:46Z","updated_at":"2018-08-02T04:04:46Z","author_association":"CONTRIBUTOR","body":"Hi Eran,\r\n\r\nRight now there is only the ability to enable query logging on mass (for all queries).\r\nI think this would be a great option to have.\r\n\r\nBest regards,\r\nVadim","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/409799098/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/409799678","html_url":"https://github.com/apache/druid/issues/619#issuecomment-409799678","issue_url":"https://api.github.com/repos/apache/druid/issues/619","id":409799678,"node_id":"MDEyOklzc3VlQ29tbWVudDQwOTc5OTY3OA==","user":{"login":"vogievetsky","id":177816,"node_id":"MDQ6VXNlcjE3NzgxNg==","avatar_url":"https://avatars.githubusercontent.com/u/177816?v=4","gravatar_id":"","url":"https://api.github.com/users/vogievetsky","html_url":"https://github.com/vogievetsky","followers_url":"https://api.github.com/users/vogievetsky/followers","following_url":"https://api.github.com/users/vogievetsky/following{/other_user}","gists_url":"https://api.github.com/users/vogievetsky/gists{/gist_id}","starred_url":"https://api.github.com/users/vogievetsky/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vogievetsky/subscriptions","organizations_url":"https://api.github.com/users/vogievetsky/orgs","repos_url":"https://api.github.com/users/vogievetsky/repos","events_url":"https://api.github.com/users/vogievetsky/events{/privacy}","received_events_url":"https://api.github.com/users/vogievetsky/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-02T04:09:20Z","updated_at":"2018-08-02T04:09:20Z","author_association":"CONTRIBUTOR","body":"I think the new scan query fixes this! 🎆 \r\n@fjy I think this can be closed.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/409799678/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/409800402","html_url":"https://github.com/apache/druid/issues/5817#issuecomment-409800402","issue_url":"https://api.github.com/repos/apache/druid/issues/5817","id":409800402,"node_id":"MDEyOklzc3VlQ29tbWVudDQwOTgwMDQwMg==","user":{"login":"vogievetsky","id":177816,"node_id":"MDQ6VXNlcjE3NzgxNg==","avatar_url":"https://avatars.githubusercontent.com/u/177816?v=4","gravatar_id":"","url":"https://api.github.com/users/vogievetsky","html_url":"https://github.com/vogievetsky","followers_url":"https://api.github.com/users/vogievetsky/followers","following_url":"https://api.github.com/users/vogievetsky/following{/other_user}","gists_url":"https://api.github.com/users/vogievetsky/gists{/gist_id}","starred_url":"https://api.github.com/users/vogievetsky/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vogievetsky/subscriptions","organizations_url":"https://api.github.com/users/vogievetsky/orgs","repos_url":"https://api.github.com/users/vogievetsky/repos","events_url":"https://api.github.com/users/vogievetsky/events{/privacy}","received_events_url":"https://api.github.com/users/vogievetsky/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-02T04:15:14Z","updated_at":"2018-08-02T04:15:14Z","author_association":"CONTRIBUTOR","body":"Wow @gianm you work fast: https://github.com/apache/incubator-druid/issues/5894 🎆 ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/409800402/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/409811301","html_url":"https://github.com/apache/druid/issues/5867#issuecomment-409811301","issue_url":"https://api.github.com/repos/apache/druid/issues/5867","id":409811301,"node_id":"MDEyOklzc3VlQ29tbWVudDQwOTgxMTMwMQ==","user":{"login":"vogievetsky","id":177816,"node_id":"MDQ6VXNlcjE3NzgxNg==","avatar_url":"https://avatars.githubusercontent.com/u/177816?v=4","gravatar_id":"","url":"https://api.github.com/users/vogievetsky","html_url":"https://github.com/vogievetsky","followers_url":"https://api.github.com/users/vogievetsky/followers","following_url":"https://api.github.com/users/vogievetsky/following{/other_user}","gists_url":"https://api.github.com/users/vogievetsky/gists{/gist_id}","starred_url":"https://api.github.com/users/vogievetsky/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vogievetsky/subscriptions","organizations_url":"https://api.github.com/users/vogievetsky/orgs","repos_url":"https://api.github.com/users/vogievetsky/repos","events_url":"https://api.github.com/users/vogievetsky/events{/privacy}","received_events_url":"https://api.github.com/users/vogievetsky/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-02T05:36:12Z","updated_at":"2018-08-02T05:36:12Z","author_association":"CONTRIBUTOR","body":"Hi you used double quotes `\"` to escape your `-`, you need to use single quotes `'` instead.\r\n\r\nTry:\r\n\r\n```\r\n{\"query\":\"SELECT column1, position('-' in column1) as posi, length(column1) as len FROM s3_bigdata_test_sample limit 2\"}\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/409811301/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/409816453","html_url":"https://github.com/apache/druid/issues/5934#issuecomment-409816453","issue_url":"https://api.github.com/repos/apache/druid/issues/5934","id":409816453,"node_id":"MDEyOklzc3VlQ29tbWVudDQwOTgxNjQ1Mw==","user":{"login":"vogievetsky","id":177816,"node_id":"MDQ6VXNlcjE3NzgxNg==","avatar_url":"https://avatars.githubusercontent.com/u/177816?v=4","gravatar_id":"","url":"https://api.github.com/users/vogievetsky","html_url":"https://github.com/vogievetsky","followers_url":"https://api.github.com/users/vogievetsky/followers","following_url":"https://api.github.com/users/vogievetsky/following{/other_user}","gists_url":"https://api.github.com/users/vogievetsky/gists{/gist_id}","starred_url":"https://api.github.com/users/vogievetsky/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vogievetsky/subscriptions","organizations_url":"https://api.github.com/users/vogievetsky/orgs","repos_url":"https://api.github.com/users/vogievetsky/repos","events_url":"https://api.github.com/users/vogievetsky/events{/privacy}","received_events_url":"https://api.github.com/users/vogievetsky/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-02T06:07:21Z","updated_at":"2018-08-02T06:07:21Z","author_association":"CONTRIBUTOR","body":"Druid's [ECCN](https://www.bis.doc.gov/index.php/licensing/commerce-control-list-classification/export-control-classification-number-eccn) is EAR99 as it is not currently on the commerce control list","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/409816453/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/409816956","html_url":"https://github.com/apache/druid/issues/5909#issuecomment-409816956","issue_url":"https://api.github.com/repos/apache/druid/issues/5909","id":409816956,"node_id":"MDEyOklzc3VlQ29tbWVudDQwOTgxNjk1Ng==","user":{"login":"vogievetsky","id":177816,"node_id":"MDQ6VXNlcjE3NzgxNg==","avatar_url":"https://avatars.githubusercontent.com/u/177816?v=4","gravatar_id":"","url":"https://api.github.com/users/vogievetsky","html_url":"https://github.com/vogievetsky","followers_url":"https://api.github.com/users/vogievetsky/followers","following_url":"https://api.github.com/users/vogievetsky/following{/other_user}","gists_url":"https://api.github.com/users/vogievetsky/gists{/gist_id}","starred_url":"https://api.github.com/users/vogievetsky/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vogievetsky/subscriptions","organizations_url":"https://api.github.com/users/vogievetsky/orgs","repos_url":"https://api.github.com/users/vogievetsky/repos","events_url":"https://api.github.com/users/vogievetsky/events{/privacy}","received_events_url":"https://api.github.com/users/vogievetsky/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-02T06:10:13Z","updated_at":"2018-08-02T06:10:13Z","author_association":"CONTRIBUTOR","body":"Can you please post the supervisor spec that you used?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/409816956/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/409819935","html_url":"https://github.com/apache/druid/issues/5779#issuecomment-409819935","issue_url":"https://api.github.com/repos/apache/druid/issues/5779","id":409819935,"node_id":"MDEyOklzc3VlQ29tbWVudDQwOTgxOTkzNQ==","user":{"login":"vogievetsky","id":177816,"node_id":"MDQ6VXNlcjE3NzgxNg==","avatar_url":"https://avatars.githubusercontent.com/u/177816?v=4","gravatar_id":"","url":"https://api.github.com/users/vogievetsky","html_url":"https://github.com/vogievetsky","followers_url":"https://api.github.com/users/vogievetsky/followers","following_url":"https://api.github.com/users/vogievetsky/following{/other_user}","gists_url":"https://api.github.com/users/vogievetsky/gists{/gist_id}","starred_url":"https://api.github.com/users/vogievetsky/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vogievetsky/subscriptions","organizations_url":"https://api.github.com/users/vogievetsky/orgs","repos_url":"https://api.github.com/users/vogievetsky/repos","events_url":"https://api.github.com/users/vogievetsky/events{/privacy}","received_events_url":"https://api.github.com/users/vogievetsky/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-02T06:25:38Z","updated_at":"2018-08-02T06:25:38Z","author_association":"CONTRIBUTOR","body":"Unfortunately that does not work in SQL, only in Druid native queries.\r\n\r\n![image](https://user-images.githubusercontent.com/177816/43566116-2f5fc1f2-95e2-11e8-8c4a-5a7c350cd7a8.png)\r\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/409819935/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/409822131","html_url":"https://github.com/apache/druid/issues/5829#issuecomment-409822131","issue_url":"https://api.github.com/repos/apache/druid/issues/5829","id":409822131,"node_id":"MDEyOklzc3VlQ29tbWVudDQwOTgyMjEzMQ==","user":{"login":"vogievetsky","id":177816,"node_id":"MDQ6VXNlcjE3NzgxNg==","avatar_url":"https://avatars.githubusercontent.com/u/177816?v=4","gravatar_id":"","url":"https://api.github.com/users/vogievetsky","html_url":"https://github.com/vogievetsky","followers_url":"https://api.github.com/users/vogievetsky/followers","following_url":"https://api.github.com/users/vogievetsky/following{/other_user}","gists_url":"https://api.github.com/users/vogievetsky/gists{/gist_id}","starred_url":"https://api.github.com/users/vogievetsky/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vogievetsky/subscriptions","organizations_url":"https://api.github.com/users/vogievetsky/orgs","repos_url":"https://api.github.com/users/vogievetsky/repos","events_url":"https://api.github.com/users/vogievetsky/events{/privacy}","received_events_url":"https://api.github.com/users/vogievetsky/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-02T06:37:28Z","updated_at":"2018-08-02T06:37:28Z","author_association":"CONTRIBUTOR","body":"Thankfully Druid is staying on GitHub. Can this be closed?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/409822131/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/409822891","html_url":"https://github.com/apache/druid/issues/1134#issuecomment-409822891","issue_url":"https://api.github.com/repos/apache/druid/issues/1134","id":409822891,"node_id":"MDEyOklzc3VlQ29tbWVudDQwOTgyMjg5MQ==","user":{"login":"vogievetsky","id":177816,"node_id":"MDQ6VXNlcjE3NzgxNg==","avatar_url":"https://avatars.githubusercontent.com/u/177816?v=4","gravatar_id":"","url":"https://api.github.com/users/vogievetsky","html_url":"https://github.com/vogievetsky","followers_url":"https://api.github.com/users/vogievetsky/followers","following_url":"https://api.github.com/users/vogievetsky/following{/other_user}","gists_url":"https://api.github.com/users/vogievetsky/gists{/gist_id}","starred_url":"https://api.github.com/users/vogievetsky/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vogievetsky/subscriptions","organizations_url":"https://api.github.com/users/vogievetsky/orgs","repos_url":"https://api.github.com/users/vogievetsky/repos","events_url":"https://api.github.com/users/vogievetsky/events{/privacy}","received_events_url":"https://api.github.com/users/vogievetsky/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-02T06:41:18Z","updated_at":"2018-08-02T06:41:18Z","author_association":"CONTRIBUTOR","body":"I think after #1135 this can now be closed.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/409822891/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/409823582","html_url":"https://github.com/apache/druid/issues/702#issuecomment-409823582","issue_url":"https://api.github.com/repos/apache/druid/issues/702","id":409823582,"node_id":"MDEyOklzc3VlQ29tbWVudDQwOTgyMzU4Mg==","user":{"login":"vogievetsky","id":177816,"node_id":"MDQ6VXNlcjE3NzgxNg==","avatar_url":"https://avatars.githubusercontent.com/u/177816?v=4","gravatar_id":"","url":"https://api.github.com/users/vogievetsky","html_url":"https://github.com/vogievetsky","followers_url":"https://api.github.com/users/vogievetsky/followers","following_url":"https://api.github.com/users/vogievetsky/following{/other_user}","gists_url":"https://api.github.com/users/vogievetsky/gists{/gist_id}","starred_url":"https://api.github.com/users/vogievetsky/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vogievetsky/subscriptions","organizations_url":"https://api.github.com/users/vogievetsky/orgs","repos_url":"https://api.github.com/users/vogievetsky/repos","events_url":"https://api.github.com/users/vogievetsky/events{/privacy}","received_events_url":"https://api.github.com/users/vogievetsky/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-02T06:44:27Z","updated_at":"2018-08-02T06:44:27Z","author_association":"CONTRIBUTOR","body":"I believe this is implemented: http://druid.io/docs/latest/querying/timeboundaryquery.html\r\n@fjy I think this can be closed.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/409823582/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/409824195","html_url":"https://github.com/apache/druid/issues/701#issuecomment-409824195","issue_url":"https://api.github.com/repos/apache/druid/issues/701","id":409824195,"node_id":"MDEyOklzc3VlQ29tbWVudDQwOTgyNDE5NQ==","user":{"login":"vogievetsky","id":177816,"node_id":"MDQ6VXNlcjE3NzgxNg==","avatar_url":"https://avatars.githubusercontent.com/u/177816?v=4","gravatar_id":"","url":"https://api.github.com/users/vogievetsky","html_url":"https://github.com/vogievetsky","followers_url":"https://api.github.com/users/vogievetsky/followers","following_url":"https://api.github.com/users/vogievetsky/following{/other_user}","gists_url":"https://api.github.com/users/vogievetsky/gists{/gist_id}","starred_url":"https://api.github.com/users/vogievetsky/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vogievetsky/subscriptions","organizations_url":"https://api.github.com/users/vogievetsky/orgs","repos_url":"https://api.github.com/users/vogievetsky/repos","events_url":"https://api.github.com/users/vogievetsky/events{/privacy}","received_events_url":"https://api.github.com/users/vogievetsky/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-02T06:47:22Z","updated_at":"2018-08-02T06:47:22Z","author_association":"CONTRIBUTOR","body":"I think that with DSQL this ticket can be closed, I doubt you would ever change skipEmptyBuckets defaults. @gianm thoughts?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/409824195/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/409824317","html_url":"https://github.com/apache/druid/issues/751#issuecomment-409824317","issue_url":"https://api.github.com/repos/apache/druid/issues/751","id":409824317,"node_id":"MDEyOklzc3VlQ29tbWVudDQwOTgyNDMxNw==","user":{"login":"vogievetsky","id":177816,"node_id":"MDQ6VXNlcjE3NzgxNg==","avatar_url":"https://avatars.githubusercontent.com/u/177816?v=4","gravatar_id":"","url":"https://api.github.com/users/vogievetsky","html_url":"https://github.com/vogievetsky","followers_url":"https://api.github.com/users/vogievetsky/followers","following_url":"https://api.github.com/users/vogievetsky/following{/other_user}","gists_url":"https://api.github.com/users/vogievetsky/gists{/gist_id}","starred_url":"https://api.github.com/users/vogievetsky/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vogievetsky/subscriptions","organizations_url":"https://api.github.com/users/vogievetsky/orgs","repos_url":"https://api.github.com/users/vogievetsky/repos","events_url":"https://api.github.com/users/vogievetsky/events{/privacy}","received_events_url":"https://api.github.com/users/vogievetsky/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-02T06:48:03Z","updated_at":"2018-08-02T06:48:03Z","author_association":"CONTRIBUTOR","body":"Is this still an issue?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/409824317/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/409844901","html_url":"https://github.com/apache/druid/issues/6091#issuecomment-409844901","issue_url":"https://api.github.com/repos/apache/druid/issues/6091","id":409844901,"node_id":"MDEyOklzc3VlQ29tbWVudDQwOTg0NDkwMQ==","user":{"login":"terry19850829","id":13132142,"node_id":"MDQ6VXNlcjEzMTMyMTQy","avatar_url":"https://avatars.githubusercontent.com/u/13132142?v=4","gravatar_id":"","url":"https://api.github.com/users/terry19850829","html_url":"https://github.com/terry19850829","followers_url":"https://api.github.com/users/terry19850829/followers","following_url":"https://api.github.com/users/terry19850829/following{/other_user}","gists_url":"https://api.github.com/users/terry19850829/gists{/gist_id}","starred_url":"https://api.github.com/users/terry19850829/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/terry19850829/subscriptions","organizations_url":"https://api.github.com/users/terry19850829/orgs","repos_url":"https://api.github.com/users/terry19850829/repos","events_url":"https://api.github.com/users/terry19850829/events{/privacy}","received_events_url":"https://api.github.com/users/terry19850829/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-02T08:14:47Z","updated_at":"2018-08-02T08:14:47Z","author_association":"NONE","body":"@a2l007 After add the `reportParseExceptions ` config, the error :\r\n\r\n```\r\n2018-08-02T08:10:49,580 INFO [task-runner-0-priority-0] io.druid.curator.discovery.CuratorDruidNodeAnnouncer - Unannounced [DiscoveryDruidNode{druidNode=DruidNode{serviceName='druid/middleManager', host='t1-data-druid', port=-1, plaintextPort=8101, enablePlaintextPort=true, tlsPort=-1, enableTlsPort=false}, nodeType='peon', services={dataNodeService=DataNodeService{tier='_default_tier', maxSize=0, type=indexer-executor, priority=0}, lookupNodeService=LookupNodeService{lookupTier='__default'}}}].\r\n2018-08-02T08:10:49,580 INFO [task-runner-0-priority-0] io.druid.server.coordination.CuratorDataSegmentServerAnnouncer - Unannouncing self[DruidServerMetadata{name='t1-data-druid:8101', hostAndPort='t1-data-druid:8101', hostAndTlsPort='null', maxSize=0, tier='_default_tier', type=indexer-executor, priority=0}] at [/druid/announcements/t1-data-druid:8101]\r\n2018-08-02T08:10:49,580 INFO [task-runner-0-priority-0] io.druid.curator.announcement.Announcer - unannouncing [/druid/announcements/t1-data-druid:8101]\r\n2018-08-02T08:10:49,591 ERROR [task-runner-0-priority-0] io.druid.indexing.overlord.ThreadPoolTaskRunner - Exception while running task[KafkaIndexTask{id=index_kafka_transaction_crm_store_org_ds_test666_8344e87bbcb308d_jeipmkba, type=index_kafka, dataSource=transaction_crm_store_org_ds_test666}]\r\njava.lang.IllegalArgumentException: fromIndex(0) > toIndex(-1)\r\n\tat java.util.ArrayList.subListRangeCheck(ArrayList.java:1014) ~[?:1.8.0_171]\r\n\tat java.util.ArrayList.subList(ArrayList.java:1004) ~[?:1.8.0_171]\r\n\tat io.druid.segment.realtime.appenderator.AppenderatorImpl.persist(AppenderatorImpl.java:381) ~[druid-server-0.11.0.jar:0.11.0]\r\n\tat io.druid.segment.realtime.appenderator.AppenderatorImpl.persistAll(AppenderatorImpl.java:462) ~[druid-server-0.11.0.jar:0.11.0]\r\n\tat io.druid.segment.realtime.appenderator.AppenderatorDriver.persist(AppenderatorDriver.java:258) ~[druid-server-0.11.0.jar:0.11.0]\r\n\tat io.druid.indexing.kafka.KafkaIndexTask.run(KafkaIndexTask.java:532) ~[?:?]\r\n\tat io.druid.indexing.overlord.ThreadPoolTaskRunner$ThreadPoolTaskRunnerCallable.call(ThreadPoolTaskRunner.java:436) [druid-indexing-service-0.11.0.jar:0.11.0]\r\n\tat io.druid.indexing.overlord.ThreadPoolTaskRunner$ThreadPoolTaskRunnerCallable.call(ThreadPoolTaskRunner.java:408) [druid-indexing-service-0.11.0.jar:0.11.0]\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266) [?:1.8.0_171]\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [?:1.8.0_171]\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [?:1.8.0_171]\r\n\tat java.lang.Thread.run(Thread.java:748) [?:1.8.0_171]\r\n2018-08-02T08:10:49,596 INFO [task-runner-0-priority-0] io.druid.indexing.overlord.TaskRunnerUtils - Task [index_kafka_transaction_crm_store_org_ds_test666_8344e87bbcb308d_jeipmkba] status changed to [FAILED].\r\n2018-08-02T08:10:49,600 INFO [task-runner-0-priority-0] io.druid.indexing.worker.executor.ExecutorLifecycle - Task completed with status: {\r\n  \"id\" : \"index_kafka_transaction_crm_store_org_ds_test666_8344e87bbcb308d_jeipmkba\",\r\n  \"status\" : \"FAILED\",\r\n  \"duration\" : 956\r\n}\r\n2018-08-02T08:10:49,606 INFO [main] io.druid.java.util.common.lifecycle.Lifecycle$AnnotationBasedHandler - Invoking stop method[public void io.druid.server.listener.announcer.ListenerResourceAnnouncer.stop()] on object[io.druid.query.lookup.LookupResourceListenerAnnouncer@5514579e].\r\n2018-08-02T08:10:49,607 INFO [main] io.druid.curator.announcement.Announcer - unannouncing [/druid/listeners/lookups/__default/http:t1-data-druid:8101]\r\n2018-08-02T08:10:49,611 INFO [main] io.druid.server.listener.announcer.ListenerResourceAnnouncer - Unannouncing start time on [/druid/listeners/lookups/__default/http:t1-data-druid:8101]\r\n2018-08-02T08:10:49,616 INFO [main] org.eclipse.jetty.server.AbstractConnector - Stopped ServerConnector@76a6f045{HTTP/1.1,[http/1.1]}{0.0.0.0:8101}\r\n2018-08-02T08:10:49,618 INFO [main] org.eclipse.jetty.server.handler.ContextHandler - Stopped o.e.j.s.ServletContextHandler@2a484710{/,null,UNAVAILABLE}\r\n2018-08-02T08:10:49,621 INFO [main] io.druid.java.util.common.lifecycle.Lifecycle$AnnotationBasedHandler - Invoking stop method[public void io.druid.indexing.worker.executor.ExecutorLifecycle.stop() throws java.lang.Exception] on object[io.druid.indexing.worker.executor.ExecutorLifecycle@1c046c92].\r\n2018-08-02T08:10:49,621 INFO [main] io.druid.java.util.common.lifecycle.Lifecycle$AnnotationBasedHandler - Invoking stop method[public void io.druid.indexing.overlord.ThreadPoolTaskRunner.stop()] on object[io.druid.indexing.overlord.ThreadPoolTaskRunner@177ede17].\r\n2018-08-02T08:10:49,622 INFO [main] io.druid.java.util.common.lifecycle.Lifecycle$AnnotationBasedHandler - Invoking stop method[public void io.druid.curator.announcement.Announcer.stop()] on object[io.druid.curator.announcement.Announcer@100aa331].\r\n2018-08-02T08:10:49,622 INFO [main] io.druid.java.util.common.lifecycle.Lifecycle$AnnotationBasedHandler - Invoking stop method[public void io.druid.discovery.DruidLeaderClient.stop()] on object[io.druid.discovery.DruidLeaderClient@2fe2965c].\r\n2018-08-02T08:10:49,622 INFO [main] io.druid.discovery.DruidLeaderClient - Stopped.\r\n2018-08-02T08:10:49,622 INFO [main] io.druid.java.util.common.lifecycle.Lifecycle$AnnotationBasedHandler - Invoking stop method[public void io.druid.curator.discovery.ServerDiscoverySelector.stop() throws java.io.IOException] on object[io.druid.curator.discovery.ServerDiscoverySelector@35787726].\r\n2018-08-02T08:10:49,625 INFO [main] io.druid.java.util.common.lifecycle.Lifecycle$AnnotationBasedHandler - Invoking stop method[public void com.metamx.metrics.MonitorScheduler.stop()] on object[com.metamx.metrics.MonitorScheduler@6a3fbcb1].\r\n2018-08-02T08:10:49,625 INFO [main] io.druid.java.util.common.lifecycle.Lifecycle$AnnotationBasedHandler - Invoking stop method[public void io.druid.query.lookup.LookupReferencesManager.stop()] on object[io.druid.query.lookup.LookupReferencesManager@a54acec].\r\n2018-08-02T08:10:49,625 INFO [main] io.druid.query.lookup.LookupReferencesManager - LookupReferencesManager is stopping.\r\n2018-08-02T08:10:49,625 INFO [LookupReferencesManager-MainThread] io.druid.query.lookup.LookupReferencesManager - Lookup Management loop exited, Lookup notices are not handled anymore.\r\n2018-08-02T08:10:49,625 INFO [main] io.druid.query.lookup.LookupReferencesManager - LookupReferencesManager is stopped.\r\n2018-08-02T08:10:49,625 INFO [main] io.druid.java.util.common.lifecycle.Lifecycle$AnnotationBasedHandler - Invoking stop method[public void io.druid.discovery.DruidLeaderClient.stop()] on object[io.druid.discovery.DruidLeaderClient@f613067].\r\n2018-08-02T08:10:49,626 INFO [main] io.druid.discovery.DruidLeaderClient - Stopped.\r\n2018-08-02T08:10:49,626 INFO [main] io.druid.java.util.common.lifecycle.Lifecycle$AnnotationBasedHandler - Invoking stop method[public void io.druid.curator.discovery.ServerDiscoverySelector.stop() throws java.io.IOException] on object[io.druid.curator.discovery.ServerDiscoverySelector@778a1250].\r\n2018-08-02T08:10:49,626 INFO [main] io.druid.java.util.common.lifecycle.Lifecycle$AnnotationBasedHandler - Invoking stop method[public void io.druid.curator.discovery.CuratorDruidNodeDiscoveryProvider.stop()] on object[io.druid.curator.discovery.CuratorDruidNodeDiscoveryProvider@656a3d6b].\r\n2018-08-02T08:10:49,626 INFO [main] io.druid.curator.discovery.CuratorDruidNodeDiscoveryProvider - stopping\r\n2018-08-02T08:10:49,626 INFO [main] io.druid.curator.discovery.CuratorDruidNodeDiscoveryProvider - stopped\r\n2018-08-02T08:10:49,626 INFO [main] com.metamx.common.lifecycle.Lifecycle$AnnotationBasedHandler - Invoking stop method[public void com.metamx.http.client.NettyHttpClient.stop()] on object[com.metamx.http.client.NettyHttpClient@322204dc].\r\n2018-08-02T08:10:49,663 INFO [main] io.druid.java.util.common.lifecycle.Lifecycle$AnnotationBasedHandler - Invoking stop method[public void com.metamx.emitter.service.ServiceEmitter.close() throws java.io.IOException] on object[ServiceEmitter{serviceDimensions={service=druid/middleManager, host=t1-data-druid:8101, version=0.11.0}, emitter=LoggingEmitter{log=com.metamx.common.logger.Logger@47a7a101, level=INFO}}].\r\n2018-08-02T08:10:49,663 INFO [main] com.metamx.emitter.core.LoggingEmitter - Close: started [false]\r\n2018-08-02T08:10:49,663 INFO [main] io.druid.java.util.common.lifecycle.Lifecycle$AnnotationBasedHandler - Invoking stop method[public void io.druid.initialization.Log4jShutterDownerModule$Log4jShutterDowner.stop()] on object[io.druid.initialization.Log4jShutterDownerModule$Log4jShutterDowner@45292ec1].\r\nHeap\r\n garbage-first heap   total 524288K, used 200191K [0x00000000e0000000, 0x00000000e0101000, 0x0000000100000000)\r\n  region size 1024K, 197 young (201728K), 29 survivors (29696K)\r\n Metaspace       used 45873K, capacity 46502K, committed 46848K, reserved 1089536K\r\n  class space    used 5872K, capacity 6065K, committed 6144K, reserved 1048576K\r\n```\r\n\r\nThere is no useful plus message.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/409844901/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/409845208","html_url":"https://github.com/apache/druid/issues/6091#issuecomment-409845208","issue_url":"https://api.github.com/repos/apache/druid/issues/6091","id":409845208,"node_id":"MDEyOklzc3VlQ29tbWVudDQwOTg0NTIwOA==","user":{"login":"terry19850829","id":13132142,"node_id":"MDQ6VXNlcjEzMTMyMTQy","avatar_url":"https://avatars.githubusercontent.com/u/13132142?v=4","gravatar_id":"","url":"https://api.github.com/users/terry19850829","html_url":"https://github.com/terry19850829","followers_url":"https://api.github.com/users/terry19850829/followers","following_url":"https://api.github.com/users/terry19850829/following{/other_user}","gists_url":"https://api.github.com/users/terry19850829/gists{/gist_id}","starred_url":"https://api.github.com/users/terry19850829/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/terry19850829/subscriptions","organizations_url":"https://api.github.com/users/terry19850829/orgs","repos_url":"https://api.github.com/users/terry19850829/repos","events_url":"https://api.github.com/users/terry19850829/events{/privacy}","received_events_url":"https://api.github.com/users/terry19850829/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-02T08:15:56Z","updated_at":"2018-08-02T08:15:56Z","author_association":"NONE","body":"When I remove the javascript aggr, the supervisor just works and the datasource generated.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/409845208/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/409850996","html_url":"https://github.com/apache/druid/pull/6016#issuecomment-409850996","issue_url":"https://api.github.com/repos/apache/druid/issues/6016","id":409850996,"node_id":"MDEyOklzc3VlQ29tbWVudDQwOTg1MDk5Ng==","user":{"login":"clintropolis","id":1577461,"node_id":"MDQ6VXNlcjE1Nzc0NjE=","avatar_url":"https://avatars.githubusercontent.com/u/1577461?v=4","gravatar_id":"","url":"https://api.github.com/users/clintropolis","html_url":"https://github.com/clintropolis","followers_url":"https://api.github.com/users/clintropolis/followers","following_url":"https://api.github.com/users/clintropolis/following{/other_user}","gists_url":"https://api.github.com/users/clintropolis/gists{/gist_id}","starred_url":"https://api.github.com/users/clintropolis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintropolis/subscriptions","organizations_url":"https://api.github.com/users/clintropolis/orgs","repos_url":"https://api.github.com/users/clintropolis/repos","events_url":"https://api.github.com/users/clintropolis/events{/privacy}","received_events_url":"https://api.github.com/users/clintropolis/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-02T08:37:20Z","updated_at":"2018-08-02T08:37:20Z","author_association":"MEMBER","body":"@leventov @himanshug I think I've got another viable, maybe even _better_, variant of this general idea that I can craft with relatively minor changes - that could eliminate the need for primitive arrays entirely and move everything back to off-heap direct buffers and even help simplify the code quite a bit. \r\n\r\nMy weekend fun hack project (which has also spilled into every night this week), was to write a JNI wrapper around [the native version of FastPfor](https://github.com/lemire/FastPFor), and then plug that and all of it's algorithms in as another encoder/decoder option to experiment with. This was an itch I've wanted to scratch since I started working with this stuff since I was curious how java compares to calling native code from java. I have a lot more testing and benchmarking to do, and the simd versions of codecs seem to be finicky about memory alignment, but it seems possible to achieve even better performance gains going native, based on my limited observations so far. This is using the same direct buffers from the compression pool as lz4 bytepacking, so memory footprint if we go this way should be very similar to what it is now (plus whatever the native code is allocating). \r\n\r\nThe major downside is that the FastPFOR algorithm implementations do not seem compatible with each other so it could be painful to switch later on (at least the simd version and java version, haven't tried the non simd version with the java version yet, so maybe there is still hope). I suppose it is also possible that this is a bug in one of the libraries.\r\n\r\nThere would be some consideration into how we would want to maintain this native mapping - I'm currently building all the native parts by hand and stuffing as resources in a standalone package which i can install with maven locally to test, but I'm a bit fuzzy on where to go from there and don't really know what the legit way to do this is (I was modeling the lz4 native library). \r\n\r\nI might be getting ahead of myself, but if we were to pursue this approach, I would assume we want to maintain this as a package in druid, maybe something like `druid-native-processing`? I think we want a package _somewhere_ which could hold the native java sources, JNI headers and sources, maybe git submodules of 3rd party native libraries, and pre-built versions of those libraries in the resources of the package. I think it would probably be a pain to setup cross compilation to build the native libs that are packaged in the resources in a CI way, but I think it useful at least to be able to build them from within the package manually. There are some maven plugins dealing with building native stuff that I need to look further into if we get serious about this.\r\n\r\nI'm going to keep playing with this to see if I can get it operating smoothly. A refactor should be relatively painless and quick, I'll make a branch to sketch out what it might look like - if further testing is promising.\r\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/409850996/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/409936613","html_url":"https://github.com/apache/druid/pull/5958#issuecomment-409936613","issue_url":"https://api.github.com/repos/apache/druid/issues/5958","id":409936613,"node_id":"MDEyOklzc3VlQ29tbWVudDQwOTkzNjYxMw==","user":{"login":"nishantmonu51","id":5023786,"node_id":"MDQ6VXNlcjUwMjM3ODY=","avatar_url":"https://avatars.githubusercontent.com/u/5023786?v=4","gravatar_id":"","url":"https://api.github.com/users/nishantmonu51","html_url":"https://github.com/nishantmonu51","followers_url":"https://api.github.com/users/nishantmonu51/followers","following_url":"https://api.github.com/users/nishantmonu51/following{/other_user}","gists_url":"https://api.github.com/users/nishantmonu51/gists{/gist_id}","starred_url":"https://api.github.com/users/nishantmonu51/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nishantmonu51/subscriptions","organizations_url":"https://api.github.com/users/nishantmonu51/orgs","repos_url":"https://api.github.com/users/nishantmonu51/repos","events_url":"https://api.github.com/users/nishantmonu51/events{/privacy}","received_events_url":"https://api.github.com/users/nishantmonu51/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-02T14:01:03Z","updated_at":"2018-08-02T14:01:03Z","author_association":"MEMBER","body":"@leventov @jihoonson @b-slim Thanks for the review. \r\nThis PR is ready for merge and has got required +1s. \r\ncan one of you please merge this ? ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/409936613/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/410013932","html_url":"https://github.com/apache/druid/pull/6047#issuecomment-410013932","issue_url":"https://api.github.com/repos/apache/druid/issues/6047","id":410013932,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMDAxMzkzMg==","user":{"login":"hpandeycodeit","id":21266105,"node_id":"MDQ6VXNlcjIxMjY2MTA1","avatar_url":"https://avatars.githubusercontent.com/u/21266105?v=4","gravatar_id":"","url":"https://api.github.com/users/hpandeycodeit","html_url":"https://github.com/hpandeycodeit","followers_url":"https://api.github.com/users/hpandeycodeit/followers","following_url":"https://api.github.com/users/hpandeycodeit/following{/other_user}","gists_url":"https://api.github.com/users/hpandeycodeit/gists{/gist_id}","starred_url":"https://api.github.com/users/hpandeycodeit/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hpandeycodeit/subscriptions","organizations_url":"https://api.github.com/users/hpandeycodeit/orgs","repos_url":"https://api.github.com/users/hpandeycodeit/repos","events_url":"https://api.github.com/users/hpandeycodeit/events{/privacy}","received_events_url":"https://api.github.com/users/hpandeycodeit/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-02T17:55:34Z","updated_at":"2018-08-02T17:55:34Z","author_association":"MEMBER","body":"@jihoonson, \r\nYes, I am interested in this. Do we have scripts ready for all these java commands or for just one? \r\nAnd can you explain why an \" extra parameter for configuration directory\" is needed? \r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/410013932/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/410022159","html_url":"https://github.com/apache/druid/pull/6047#issuecomment-410022159","issue_url":"https://api.github.com/repos/apache/druid/issues/6047","id":410022159,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMDAyMjE1OQ==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-02T18:22:24Z","updated_at":"2018-08-02T18:22:24Z","author_association":"CONTRIBUTOR","body":"@hpandeycodeit we have the scripts for all Druid components. Please check `${DRUID_HOME}/bin` directory.\r\n\r\n> And can you explain why an \" extra parameter for configuration directory\" is needed?\r\n\r\nAh, nvm. I thought those scripts doesn't allow to change configuration directory, and so they should be able to allow since the quickstart uses its own configuration files.\r\nBut it was wrong. You can change the configuration directory path by setting the `DRUID_CONF_DIR` environment variable.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/410022159/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/410030450","html_url":"https://github.com/apache/druid/issues/5584#issuecomment-410030450","issue_url":"https://api.github.com/repos/apache/druid/issues/5584","id":410030450,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMDAzMDQ1MA==","user":{"login":"josephglanville","id":605591,"node_id":"MDQ6VXNlcjYwNTU5MQ==","avatar_url":"https://avatars.githubusercontent.com/u/605591?v=4","gravatar_id":"","url":"https://api.github.com/users/josephglanville","html_url":"https://github.com/josephglanville","followers_url":"https://api.github.com/users/josephglanville/followers","following_url":"https://api.github.com/users/josephglanville/following{/other_user}","gists_url":"https://api.github.com/users/josephglanville/gists{/gist_id}","starred_url":"https://api.github.com/users/josephglanville/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/josephglanville/subscriptions","organizations_url":"https://api.github.com/users/josephglanville/orgs","repos_url":"https://api.github.com/users/josephglanville/repos","events_url":"https://api.github.com/users/josephglanville/events{/privacy}","received_events_url":"https://api.github.com/users/josephglanville/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-02T18:50:19Z","updated_at":"2018-08-02T18:50:59Z","author_association":"CONTRIBUTOR","body":"One thing that has become apparent is the `StringInputRowParser` is a bit of a bad citizen.\r\nIt extends `ByteBufferInputRowParser` aka `InputRowParser<ByteBuffer>`.\r\n\r\nThis is not a problem in and of itself and it's completely reasonable to have a input row parser designed to read UTF-8 encoded strings from `ByteBuffer`.\r\n\r\nThe issue is that isn't how it's used, it's primarily used via function with signature the `InputRow parse(String)`, the fact this is `String` rather than `ByteBuffer` not only violates the assumption of the interface but it also means that users of `StringInputRowParser` aren't using the `InputRowParser` interface at all, effectively making any code built on `StringInputRowParser` not very generic.\r\n\r\nIt seems to me that it would make sense for there to be `StringInputRowParser` that is actually `InputRowParser<String>` and `StringDecoderInputRowParser` which inherits from `ByteBufferInputRowParser` reads data from ByteBuffer decoding UTF-8.\r\n\r\nI would also move to put add a `reset()` to the `InputRowParser` interface as it's already on `Parser`. Currently there is `startFileFromBeginning()` on `StringInputRowParser` that calls the same function on the inner `Parser`. Seems as this may be useful in general for resetting the state of stateful parsers when opening the next object/input stream.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/410030450/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/410030657","html_url":"https://github.com/apache/druid/issues/6096#issuecomment-410030657","issue_url":"https://api.github.com/repos/apache/druid/issues/6096","id":410030657,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMDAzMDY1Nw==","user":{"login":"vogievetsky","id":177816,"node_id":"MDQ6VXNlcjE3NzgxNg==","avatar_url":"https://avatars.githubusercontent.com/u/177816?v=4","gravatar_id":"","url":"https://api.github.com/users/vogievetsky","html_url":"https://github.com/vogievetsky","followers_url":"https://api.github.com/users/vogievetsky/followers","following_url":"https://api.github.com/users/vogievetsky/following{/other_user}","gists_url":"https://api.github.com/users/vogievetsky/gists{/gist_id}","starred_url":"https://api.github.com/users/vogievetsky/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vogievetsky/subscriptions","organizations_url":"https://api.github.com/users/vogievetsky/orgs","repos_url":"https://api.github.com/users/vogievetsky/repos","events_url":"https://api.github.com/users/vogievetsky/events{/privacy}","received_events_url":"https://api.github.com/users/vogievetsky/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-02T18:51:04Z","updated_at":"2018-08-02T18:51:04Z","author_association":"CONTRIBUTOR","body":"I think it is a good point about directory names and should be considered for the project @gianm does it make sense to avoid contentious characters like `:`?\r\nFor now, Rathish, I can tell you that Windows is solidly out of scope for Druid (and it has never been). Please move to a proper Linux environment.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/410030657/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/410031205","html_url":"https://github.com/apache/druid/issues/1836#issuecomment-410031205","issue_url":"https://api.github.com/repos/apache/druid/issues/1836","id":410031205,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMDAzMTIwNQ==","user":{"login":"vogievetsky","id":177816,"node_id":"MDQ6VXNlcjE3NzgxNg==","avatar_url":"https://avatars.githubusercontent.com/u/177816?v=4","gravatar_id":"","url":"https://api.github.com/users/vogievetsky","html_url":"https://github.com/vogievetsky","followers_url":"https://api.github.com/users/vogievetsky/followers","following_url":"https://api.github.com/users/vogievetsky/following{/other_user}","gists_url":"https://api.github.com/users/vogievetsky/gists{/gist_id}","starred_url":"https://api.github.com/users/vogievetsky/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vogievetsky/subscriptions","organizations_url":"https://api.github.com/users/vogievetsky/orgs","repos_url":"https://api.github.com/users/vogievetsky/repos","events_url":"https://api.github.com/users/vogievetsky/events{/privacy}","received_events_url":"https://api.github.com/users/vogievetsky/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-02T18:53:06Z","updated_at":"2018-08-02T18:53:06Z","author_association":"CONTRIBUTOR","body":"Did https://github.com/apache/incubator-druid/pull/3028 address this?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/410031205/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/410032064","html_url":"https://github.com/apache/druid/issues/1835#issuecomment-410032064","issue_url":"https://api.github.com/repos/apache/druid/issues/1835","id":410032064,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMDAzMjA2NA==","user":{"login":"vogievetsky","id":177816,"node_id":"MDQ6VXNlcjE3NzgxNg==","avatar_url":"https://avatars.githubusercontent.com/u/177816?v=4","gravatar_id":"","url":"https://api.github.com/users/vogievetsky","html_url":"https://github.com/vogievetsky","followers_url":"https://api.github.com/users/vogievetsky/followers","following_url":"https://api.github.com/users/vogievetsky/following{/other_user}","gists_url":"https://api.github.com/users/vogievetsky/gists{/gist_id}","starred_url":"https://api.github.com/users/vogievetsky/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vogievetsky/subscriptions","organizations_url":"https://api.github.com/users/vogievetsky/orgs","repos_url":"https://api.github.com/users/vogievetsky/repos","events_url":"https://api.github.com/users/vogievetsky/events{/privacy}","received_events_url":"https://api.github.com/users/vogievetsky/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-02T18:56:17Z","updated_at":"2018-08-02T18:56:17Z","author_association":"CONTRIBUTOR","body":"I 👍ed this issue back in the day but since then groupBy v2 drastically improved the situation if you are using Rune (Druid's JSON based language). If you want 100% standard results you should now use DSQL 🎆 \r\n@gianm I think this issue can be closed.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/410032064/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/410032588","html_url":"https://github.com/apache/druid/issues/1827#issuecomment-410032588","issue_url":"https://api.github.com/repos/apache/druid/issues/1827","id":410032588,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMDAzMjU4OA==","user":{"login":"vogievetsky","id":177816,"node_id":"MDQ6VXNlcjE3NzgxNg==","avatar_url":"https://avatars.githubusercontent.com/u/177816?v=4","gravatar_id":"","url":"https://api.github.com/users/vogievetsky","html_url":"https://github.com/vogievetsky","followers_url":"https://api.github.com/users/vogievetsky/followers","following_url":"https://api.github.com/users/vogievetsky/following{/other_user}","gists_url":"https://api.github.com/users/vogievetsky/gists{/gist_id}","starred_url":"https://api.github.com/users/vogievetsky/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vogievetsky/subscriptions","organizations_url":"https://api.github.com/users/vogievetsky/orgs","repos_url":"https://api.github.com/users/vogievetsky/repos","events_url":"https://api.github.com/users/vogievetsky/events{/privacy}","received_events_url":"https://api.github.com/users/vogievetsky/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-02T18:58:03Z","updated_at":"2018-08-02T18:58:03Z","author_association":"CONTRIBUTOR","body":"Does https://github.com/apache/incubator-druid/pull/2033 address this?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/410032588/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/410033063","html_url":"https://github.com/apache/druid/issues/1816#issuecomment-410033063","issue_url":"https://api.github.com/repos/apache/druid/issues/1816","id":410033063,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMDAzMzA2Mw==","user":{"login":"vogievetsky","id":177816,"node_id":"MDQ6VXNlcjE3NzgxNg==","avatar_url":"https://avatars.githubusercontent.com/u/177816?v=4","gravatar_id":"","url":"https://api.github.com/users/vogievetsky","html_url":"https://github.com/vogievetsky","followers_url":"https://api.github.com/users/vogievetsky/followers","following_url":"https://api.github.com/users/vogievetsky/following{/other_user}","gists_url":"https://api.github.com/users/vogievetsky/gists{/gist_id}","starred_url":"https://api.github.com/users/vogievetsky/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vogievetsky/subscriptions","organizations_url":"https://api.github.com/users/vogievetsky/orgs","repos_url":"https://api.github.com/users/vogievetsky/repos","events_url":"https://api.github.com/users/vogievetsky/events{/privacy}","received_events_url":"https://api.github.com/users/vogievetsky/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-02T18:59:39Z","updated_at":"2018-08-02T18:59:39Z","author_association":"CONTRIBUTOR","body":"This issue is super pretty old and does not look actionable (Who even knows where to get Druid 0.8.1 these days). @fjy I suggest we close it.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/410033063/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/410034139","html_url":"https://github.com/apache/druid/issues/1746#issuecomment-410034139","issue_url":"https://api.github.com/repos/apache/druid/issues/1746","id":410034139,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMDAzNDEzOQ==","user":{"login":"vogievetsky","id":177816,"node_id":"MDQ6VXNlcjE3NzgxNg==","avatar_url":"https://avatars.githubusercontent.com/u/177816?v=4","gravatar_id":"","url":"https://api.github.com/users/vogievetsky","html_url":"https://github.com/vogievetsky","followers_url":"https://api.github.com/users/vogievetsky/followers","following_url":"https://api.github.com/users/vogievetsky/following{/other_user}","gists_url":"https://api.github.com/users/vogievetsky/gists{/gist_id}","starred_url":"https://api.github.com/users/vogievetsky/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vogievetsky/subscriptions","organizations_url":"https://api.github.com/users/vogievetsky/orgs","repos_url":"https://api.github.com/users/vogievetsky/repos","events_url":"https://api.github.com/users/vogievetsky/events{/privacy}","received_events_url":"https://api.github.com/users/vogievetsky/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-02T19:03:23Z","updated_at":"2018-08-02T19:03:23Z","author_association":"CONTRIBUTOR","body":"@gianm I believe this has been greatly improved and is no longer and issue. I see pending tasks all the time now.\r\n\r\n![image](https://user-images.githubusercontent.com/177816/43605024-087d19bc-964c-11e8-973c-bf1d401b42c5.png)\r\n\r\nCan this be closed?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/410034139/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/410034795","html_url":"https://github.com/apache/druid/issues/1711#issuecomment-410034795","issue_url":"https://api.github.com/repos/apache/druid/issues/1711","id":410034795,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMDAzNDc5NQ==","user":{"login":"vogievetsky","id":177816,"node_id":"MDQ6VXNlcjE3NzgxNg==","avatar_url":"https://avatars.githubusercontent.com/u/177816?v=4","gravatar_id":"","url":"https://api.github.com/users/vogievetsky","html_url":"https://github.com/vogievetsky","followers_url":"https://api.github.com/users/vogievetsky/followers","following_url":"https://api.github.com/users/vogievetsky/following{/other_user}","gists_url":"https://api.github.com/users/vogievetsky/gists{/gist_id}","starred_url":"https://api.github.com/users/vogievetsky/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vogievetsky/subscriptions","organizations_url":"https://api.github.com/users/vogievetsky/orgs","repos_url":"https://api.github.com/users/vogievetsky/repos","events_url":"https://api.github.com/users/vogievetsky/events{/privacy}","received_events_url":"https://api.github.com/users/vogievetsky/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-02T19:05:52Z","updated_at":"2018-08-02T19:05:52Z","author_association":"CONTRIBUTOR","body":"Jonathan! Long time no see! I remember when this was filed... good times.\r\n@fjy I believe this was resolved (as noted above) by #1578 and #1731 and can be closed.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/410034795/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/410035126","html_url":"https://github.com/apache/druid/issues/1692#issuecomment-410035126","issue_url":"https://api.github.com/repos/apache/druid/issues/1692","id":410035126,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMDAzNTEyNg==","user":{"login":"vogievetsky","id":177816,"node_id":"MDQ6VXNlcjE3NzgxNg==","avatar_url":"https://avatars.githubusercontent.com/u/177816?v=4","gravatar_id":"","url":"https://api.github.com/users/vogievetsky","html_url":"https://github.com/vogievetsky","followers_url":"https://api.github.com/users/vogievetsky/followers","following_url":"https://api.github.com/users/vogievetsky/following{/other_user}","gists_url":"https://api.github.com/users/vogievetsky/gists{/gist_id}","starred_url":"https://api.github.com/users/vogievetsky/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vogievetsky/subscriptions","organizations_url":"https://api.github.com/users/vogievetsky/orgs","repos_url":"https://api.github.com/users/vogievetsky/repos","events_url":"https://api.github.com/users/vogievetsky/events{/privacy}","received_events_url":"https://api.github.com/users/vogievetsky/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-02T19:06:58Z","updated_at":"2018-08-02T19:06:58Z","author_association":"CONTRIBUTOR","body":"@zengzhihai110 can this issue be closed?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/410035126/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/410035486","html_url":"https://github.com/apache/druid/issues/1684#issuecomment-410035486","issue_url":"https://api.github.com/repos/apache/druid/issues/1684","id":410035486,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMDAzNTQ4Ng==","user":{"login":"vogievetsky","id":177816,"node_id":"MDQ6VXNlcjE3NzgxNg==","avatar_url":"https://avatars.githubusercontent.com/u/177816?v=4","gravatar_id":"","url":"https://api.github.com/users/vogievetsky","html_url":"https://github.com/vogievetsky","followers_url":"https://api.github.com/users/vogievetsky/followers","following_url":"https://api.github.com/users/vogievetsky/following{/other_user}","gists_url":"https://api.github.com/users/vogievetsky/gists{/gist_id}","starred_url":"https://api.github.com/users/vogievetsky/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vogievetsky/subscriptions","organizations_url":"https://api.github.com/users/vogievetsky/orgs","repos_url":"https://api.github.com/users/vogievetsky/repos","events_url":"https://api.github.com/users/vogievetsky/events{/privacy}","received_events_url":"https://api.github.com/users/vogievetsky/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-02T19:08:18Z","updated_at":"2018-08-02T19:08:18Z","author_association":"CONTRIBUTOR","body":"Did @drcrallen 's PR fix this?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/410035486/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/410035821","html_url":"https://github.com/apache/druid/issues/1671#issuecomment-410035821","issue_url":"https://api.github.com/repos/apache/druid/issues/1671","id":410035821,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMDAzNTgyMQ==","user":{"login":"vogievetsky","id":177816,"node_id":"MDQ6VXNlcjE3NzgxNg==","avatar_url":"https://avatars.githubusercontent.com/u/177816?v=4","gravatar_id":"","url":"https://api.github.com/users/vogievetsky","html_url":"https://github.com/vogievetsky","followers_url":"https://api.github.com/users/vogievetsky/followers","following_url":"https://api.github.com/users/vogievetsky/following{/other_user}","gists_url":"https://api.github.com/users/vogievetsky/gists{/gist_id}","starred_url":"https://api.github.com/users/vogievetsky/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vogievetsky/subscriptions","organizations_url":"https://api.github.com/users/vogievetsky/orgs","repos_url":"https://api.github.com/users/vogievetsky/repos","events_url":"https://api.github.com/users/vogievetsky/events{/privacy}","received_events_url":"https://api.github.com/users/vogievetsky/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-02T19:09:36Z","updated_at":"2018-08-02T19:09:36Z","author_association":"CONTRIBUTOR","body":"I am glad that with the new expression system we are moving away form javascript (you did not hear me say this). Is this still something that should be fixed?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/410035821/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/410035968","html_url":"https://github.com/apache/druid/issues/1598#issuecomment-410035968","issue_url":"https://api.github.com/repos/apache/druid/issues/1598","id":410035968,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMDAzNTk2OA==","user":{"login":"vogievetsky","id":177816,"node_id":"MDQ6VXNlcjE3NzgxNg==","avatar_url":"https://avatars.githubusercontent.com/u/177816?v=4","gravatar_id":"","url":"https://api.github.com/users/vogievetsky","html_url":"https://github.com/vogievetsky","followers_url":"https://api.github.com/users/vogievetsky/followers","following_url":"https://api.github.com/users/vogievetsky/following{/other_user}","gists_url":"https://api.github.com/users/vogievetsky/gists{/gist_id}","starred_url":"https://api.github.com/users/vogievetsky/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vogievetsky/subscriptions","organizations_url":"https://api.github.com/users/vogievetsky/orgs","repos_url":"https://api.github.com/users/vogievetsky/repos","events_url":"https://api.github.com/users/vogievetsky/events{/privacy}","received_events_url":"https://api.github.com/users/vogievetsky/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-02T19:10:12Z","updated_at":"2018-08-02T19:10:12Z","author_association":"CONTRIBUTOR","body":"Can this be closed on a count of being super old?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/410035968/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/410036215","html_url":"https://github.com/apache/druid/issues/1560#issuecomment-410036215","issue_url":"https://api.github.com/repos/apache/druid/issues/1560","id":410036215,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMDAzNjIxNQ==","user":{"login":"vogievetsky","id":177816,"node_id":"MDQ6VXNlcjE3NzgxNg==","avatar_url":"https://avatars.githubusercontent.com/u/177816?v=4","gravatar_id":"","url":"https://api.github.com/users/vogievetsky","html_url":"https://github.com/vogievetsky","followers_url":"https://api.github.com/users/vogievetsky/followers","following_url":"https://api.github.com/users/vogievetsky/following{/other_user}","gists_url":"https://api.github.com/users/vogievetsky/gists{/gist_id}","starred_url":"https://api.github.com/users/vogievetsky/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vogievetsky/subscriptions","organizations_url":"https://api.github.com/users/vogievetsky/orgs","repos_url":"https://api.github.com/users/vogievetsky/repos","events_url":"https://api.github.com/users/vogievetsky/events{/privacy}","received_events_url":"https://api.github.com/users/vogievetsky/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-02T19:11:10Z","updated_at":"2018-08-02T19:11:10Z","author_association":"CONTRIBUTOR","body":"Is this still an issue?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/410036215/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/410036629","html_url":"https://github.com/apache/druid/issues/1449#issuecomment-410036629","issue_url":"https://api.github.com/repos/apache/druid/issues/1449","id":410036629,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMDAzNjYyOQ==","user":{"login":"vogievetsky","id":177816,"node_id":"MDQ6VXNlcjE3NzgxNg==","avatar_url":"https://avatars.githubusercontent.com/u/177816?v=4","gravatar_id":"","url":"https://api.github.com/users/vogievetsky","html_url":"https://github.com/vogievetsky","followers_url":"https://api.github.com/users/vogievetsky/followers","following_url":"https://api.github.com/users/vogievetsky/following{/other_user}","gists_url":"https://api.github.com/users/vogievetsky/gists{/gist_id}","starred_url":"https://api.github.com/users/vogievetsky/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vogievetsky/subscriptions","organizations_url":"https://api.github.com/users/vogievetsky/orgs","repos_url":"https://api.github.com/users/vogievetsky/repos","events_url":"https://api.github.com/users/vogievetsky/events{/privacy}","received_events_url":"https://api.github.com/users/vogievetsky/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-02T19:12:42Z","updated_at":"2018-08-02T19:12:42Z","author_association":"CONTRIBUTOR","body":"This is now possible with GroupBy v2 (and in Druid SQL)\r\n@gianm please confirm and close.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/410036629/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/410037251","html_url":"https://github.com/apache/druid/pull/6047#issuecomment-410037251","issue_url":"https://api.github.com/repos/apache/druid/issues/6047","id":410037251,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMDAzNzI1MQ==","user":{"login":"hpandeycodeit","id":21266105,"node_id":"MDQ6VXNlcjIxMjY2MTA1","avatar_url":"https://avatars.githubusercontent.com/u/21266105?v=4","gravatar_id":"","url":"https://api.github.com/users/hpandeycodeit","html_url":"https://github.com/hpandeycodeit","followers_url":"https://api.github.com/users/hpandeycodeit/followers","following_url":"https://api.github.com/users/hpandeycodeit/following{/other_user}","gists_url":"https://api.github.com/users/hpandeycodeit/gists{/gist_id}","starred_url":"https://api.github.com/users/hpandeycodeit/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hpandeycodeit/subscriptions","organizations_url":"https://api.github.com/users/hpandeycodeit/orgs","repos_url":"https://api.github.com/users/hpandeycodeit/repos","events_url":"https://api.github.com/users/hpandeycodeit/events{/privacy}","received_events_url":"https://api.github.com/users/hpandeycodeit/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-02T19:15:02Z","updated_at":"2018-08-02T19:15:48Z","author_association":"MEMBER","body":"@jihoonson ,\r\nThe scripts are there but doesn't look like it's working: \r\n\r\nFor eg: \r\n\r\n$./broker.sh start\r\nStarted broker node (5282)\r\n$./broker.sh status\r\nSTOPPED\r\n\r\nSo it's not starting. Anything I am missing here to start these? I just want to see how it works before updating the doc. ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/410037251/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/410038602","html_url":"https://github.com/apache/druid/pull/6094#issuecomment-410038602","issue_url":"https://api.github.com/repos/apache/druid/issues/6094","id":410038602,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMDAzODYwMg==","user":{"login":"vogievetsky","id":177816,"node_id":"MDQ6VXNlcjE3NzgxNg==","avatar_url":"https://avatars.githubusercontent.com/u/177816?v=4","gravatar_id":"","url":"https://api.github.com/users/vogievetsky","html_url":"https://github.com/vogievetsky","followers_url":"https://api.github.com/users/vogievetsky/followers","following_url":"https://api.github.com/users/vogievetsky/following{/other_user}","gists_url":"https://api.github.com/users/vogievetsky/gists{/gist_id}","starred_url":"https://api.github.com/users/vogievetsky/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vogievetsky/subscriptions","organizations_url":"https://api.github.com/users/vogievetsky/orgs","repos_url":"https://api.github.com/users/vogievetsky/repos","events_url":"https://api.github.com/users/vogievetsky/events{/privacy}","received_events_url":"https://api.github.com/users/vogievetsky/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-02T19:20:04Z","updated_at":"2018-08-02T19:20:04Z","author_association":"CONTRIBUTOR","body":"so excited about this one!","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/410038602/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/410039263","html_url":"https://github.com/apache/druid/issues/1204#issuecomment-410039263","issue_url":"https://api.github.com/repos/apache/druid/issues/1204","id":410039263,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMDAzOTI2Mw==","user":{"login":"vogievetsky","id":177816,"node_id":"MDQ6VXNlcjE3NzgxNg==","avatar_url":"https://avatars.githubusercontent.com/u/177816?v=4","gravatar_id":"","url":"https://api.github.com/users/vogievetsky","html_url":"https://github.com/vogievetsky","followers_url":"https://api.github.com/users/vogievetsky/followers","following_url":"https://api.github.com/users/vogievetsky/following{/other_user}","gists_url":"https://api.github.com/users/vogievetsky/gists{/gist_id}","starred_url":"https://api.github.com/users/vogievetsky/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vogievetsky/subscriptions","organizations_url":"https://api.github.com/users/vogievetsky/orgs","repos_url":"https://api.github.com/users/vogievetsky/repos","events_url":"https://api.github.com/users/vogievetsky/events{/privacy}","received_events_url":"https://api.github.com/users/vogievetsky/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-02T19:22:25Z","updated_at":"2018-08-02T19:22:25Z","author_association":"CONTRIBUTOR","body":"Is this still an issue after https://github.com/apache/incubator-druid/pull/4611 ?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/410039263/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/410039394","html_url":"https://github.com/apache/druid/issues/6066#issuecomment-410039394","issue_url":"https://api.github.com/repos/apache/druid/issues/6066","id":410039394,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMDAzOTM5NA==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-02T19:22:57Z","updated_at":"2018-08-02T19:22:57Z","author_association":"CONTRIBUTOR","body":"IMO the speed hit on ingestion is acceptable. It is small, and performance is not really worse than the rollup case. Adding sorting will incur a performance cost no matter what: either it has to happen continuously or it has to happen in one big shot before persisting.\r\n\r\nAny idea where the speed hit on groupBys comes from? Seems strange that other query types wouldn't care but groupBy does. At any rate, I am not super worried about it, since in most clusters QueryableIndex storage/perf is much more serious issue than IncrementalIndex query perf. If we end up incurring a small speed hit on IncrementalIndex queries in order to get better compression on QueryableIndexes, then that is a good tradeoff.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/410039394/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/410043357","html_url":"https://github.com/apache/druid/issues/6066#issuecomment-410043357","issue_url":"https://api.github.com/repos/apache/druid/issues/6066","id":410043357,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMDA0MzM1Nw==","user":{"login":"mistercrunch","id":487433,"node_id":"MDQ6VXNlcjQ4NzQzMw==","avatar_url":"https://avatars.githubusercontent.com/u/487433?v=4","gravatar_id":"","url":"https://api.github.com/users/mistercrunch","html_url":"https://github.com/mistercrunch","followers_url":"https://api.github.com/users/mistercrunch/followers","following_url":"https://api.github.com/users/mistercrunch/following{/other_user}","gists_url":"https://api.github.com/users/mistercrunch/gists{/gist_id}","starred_url":"https://api.github.com/users/mistercrunch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mistercrunch/subscriptions","organizations_url":"https://api.github.com/users/mistercrunch/orgs","repos_url":"https://api.github.com/users/mistercrunch/repos","events_url":"https://api.github.com/users/mistercrunch/events{/privacy}","received_events_url":"https://api.github.com/users/mistercrunch/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-02T19:37:07Z","updated_at":"2018-08-02T19:37:07Z","author_association":"MEMBER","body":"I'm guessing Druid does the rollup by sorting the dimensions in the order in the ingestion spec, which would indicate that dimension ordering would matter. Would ordering dims by based on cardinality help further? I'm guessing low->high card would be better than high->low, but idk enough about LZ(4?) compression to have a good intuition on this.\r\n\r\nI'm also unclear on whether low->high card dim ordering would make it harder/easier on the sorting algorithm. (?)","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/410043357/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/410045743","html_url":"https://github.com/apache/druid/issues/5584#issuecomment-410045743","issue_url":"https://api.github.com/repos/apache/druid/issues/5584","id":410045743,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMDA0NTc0Mw==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-02T19:45:36Z","updated_at":"2018-08-02T19:45:36Z","author_association":"CONTRIBUTOR","body":"Yeah -- StringInputRowParser is a bit of a special snowflake. Maybe doing this feature is the motivation we need to rethink how that all works. To add to the points you raised, there's also this gross code in TransformSpec (which decorates InputRowParsers with expression-based transforms):\r\n\r\n```\r\n    if (parser instanceof StringInputRowParser) {\r\n      // Hack to support the fact that some callers use special methods in StringInputRowParser, such as\r\n      // parse(String) and startFileFromBeginning.\r\n      return (InputRowParser<T>) new TransformingStringInputRowParser(\r\n          parser.getParseSpec(),\r\n          ((StringInputRowParser) parser).getEncoding(),\r\n          this\r\n      );\r\n    } else {\r\n      return new TransformingInputRowParser<>(parser, this);\r\n    }\r\n```\r\n\r\nAnd there's also the warty fact that ParseSpec's `makeParser()` method is actually only used by StringInputRowParser (and a couple of extension parsers that work by converting inputs to JSON and then parsing them as strings). Other parsers call `getTimestampSpec` and `getDimensionsSpec`, but they don't call `makeParser`. Some parsers, however, can extract useful things from certain types of ParseSpecs. The way this is done is weird, leading to code like this in the Avro extension to yank out an optional FlattenSpec:\r\n\r\n```\r\n    final JSONPathSpec flattenSpec;\r\n    if (parseSpec != null && (parseSpec instanceof AvroParseSpec)) {\r\n      flattenSpec = ((AvroParseSpec) parseSpec).getFlattenSpec();\r\n    } else {\r\n      flattenSpec = JSONPathSpec.DEFAULT;\r\n    }\r\n```\r\n\r\nThe only reason StringInputRowParser doesn't have to do something like this is that the method _it_ needs (makeParser) has been granted special status as a member of the ParseSpec interface (even though many ParseSpecs don't implement it, they just throw exceptions).\r\n\r\nIf we are wanting to be ambitious (I don't see why not!) then I think we can make nicer, clearer interfaces by rethinking how this all works. In a backwards compatible way, since we don't want all of our users to have to rewrite their ingestion specs (which will probably be the tricky part).\r\n\r\n@josephglanville what ambition level are you interested in having here? 😄","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/410045743/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/410051112","html_url":"https://github.com/apache/druid/pull/6047#issuecomment-410051112","issue_url":"https://api.github.com/repos/apache/druid/issues/6047","id":410051112,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMDA1MTExMg==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-02T20:05:16Z","updated_at":"2018-08-02T20:05:16Z","author_association":"CONTRIBUTOR","body":"It should work. Would you please check your broker logs?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/410051112/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/410052884","html_url":"https://github.com/apache/druid/issues/6066#issuecomment-410052884","issue_url":"https://api.github.com/repos/apache/druid/issues/6066","id":410052884,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMDA1Mjg4NA==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-02T20:11:37Z","updated_at":"2018-08-02T20:11:37Z","author_association":"CONTRIBUTOR","body":"> I'm guessing Druid does the rollup by sorting the dimensions in the order in the ingestion spec, which would indicate that dimension ordering would matter. Would ordering dims by based on cardinality help further? I'm guessing low->high card would be better than high->low, but idk enough about LZ(4?) compression to have a good intuition on this.\r\n\r\nYep it does sort in the order that you provide them in the ingestion spec. LZ4 works by finding and eliminating redundancies in a sliding window, so it works best if you have a lot of local redundancy. CONCISE / Roaring also work better in that case (they can encode runs). And selecting values out of columns is faster if you are selecting rows that are close together.\r\n\r\nIf you mostly care about size, I think you should do best starting with a lower cardinality column, especially one that a lot of other columns will have some kind of dependency on (like if you have a 'country' column and each region, city, user, etc will generally just be in one country). That way you're maximizing compression for as many columns as possible. If you care about retrieval speed too then it helps to think about locality: if you have a column you often filter on, you want it first/early in the sort order. Sometimes a column satisfies both of these, and in that case life is good (e.g. \"tenant_id\" for a multi-tenant-one-table design).\r\n\r\nIn the case I mentioned (where we saw dramatically better compression after sorting) it was an e-commerce dataset, and we sorted rows first on product brand, then on product id.\r\n\r\nBtw, this line of thinking is most effective if your queryGranularity is coarse, since Druid always sorts time _first_ and then your other dimensions.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/410052884/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":1,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/410053497","html_url":"https://github.com/apache/druid/issues/6066#issuecomment-410053497","issue_url":"https://api.github.com/repos/apache/druid/issues/6066","id":410053497,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMDA1MzQ5Nw==","user":{"login":"clintropolis","id":1577461,"node_id":"MDQ6VXNlcjE1Nzc0NjE=","avatar_url":"https://avatars.githubusercontent.com/u/1577461?v=4","gravatar_id":"","url":"https://api.github.com/users/clintropolis","html_url":"https://github.com/clintropolis","followers_url":"https://api.github.com/users/clintropolis/followers","following_url":"https://api.github.com/users/clintropolis/following{/other_user}","gists_url":"https://api.github.com/users/clintropolis/gists{/gist_id}","starred_url":"https://api.github.com/users/clintropolis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintropolis/subscriptions","organizations_url":"https://api.github.com/users/clintropolis/orgs","repos_url":"https://api.github.com/users/clintropolis/repos","events_url":"https://api.github.com/users/clintropolis/events{/privacy}","received_events_url":"https://api.github.com/users/clintropolis/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-02T20:13:49Z","updated_at":"2018-08-02T20:13:49Z","author_association":"MEMBER","body":"@gianm Cool, I'll go ahead and make a PR as soon as I get some tests finished up. I'm not certain the cause of slower group-by performance, group by v2 doesn't seem to have any special additional interaction with facts holder. Is this worth looking into further?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/410053497/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/410053931","html_url":"https://github.com/apache/druid/issues/6066#issuecomment-410053931","issue_url":"https://api.github.com/repos/apache/druid/issues/6066","id":410053931,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMDA1MzkzMQ==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-02T20:15:18Z","updated_at":"2018-08-02T20:15:18Z","author_association":"CONTRIBUTOR","body":"> @gianm Cool, I'll go ahead and make a PR as soon as I get some tests finished up. I'm not certain the cause of slower group-by performance, group by v2 doesn't seem to have any special additional interaction with facts holder. Is this worth looking into further?\r\n\r\nI am curious to know what's going on, but I don't think the impact is severe enough that it is critical to look into, so IMO it's up to you.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/410053931/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/410061268","html_url":"https://github.com/apache/druid/pull/5108#issuecomment-410061268","issue_url":"https://api.github.com/repos/apache/druid/issues/5108","id":410061268,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMDA2MTI2OA==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-02T20:41:34Z","updated_at":"2018-08-02T20:41:34Z","author_association":"CONTRIBUTOR","body":"@gianm please fix the licenses.\r\n\r\n```\r\n[ERROR] /home/travis/build/apache/incubator-druid/server/src/main/java/io/druid/client/cache/BackgroundCachePopulator.java:2: Line does not match expected header line of ' * Licensed to the Apache Software Foundation (ASF) under one'. [Header]\r\n[ERROR] /home/travis/build/apache/incubator-druid/server/src/main/java/io/druid/client/cache/CachePopulatorStats.java:2: Line does not match expected header line of ' * Licensed to the Apache Software Foundation (ASF) under one'. [Header]\r\n[ERROR] /home/travis/build/apache/incubator-druid/server/src/main/java/io/druid/client/cache/ForegroundCachePopulator.java:2: Line does not match expected header line of ' * Licensed to the Apache Software Foundation (ASF) under one'. [Header]\r\n[ERROR] /home/travis/build/apache/incubator-druid/server/src/test/java/io/druid/client/cache/CachePopulatorTest.java:2: Line does not match expected header line of ' * Licensed to the Apache Software Foundation (ASF) under one'. [Header]\r\n```","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/410061268/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/410062074","html_url":"https://github.com/apache/druid/pull/5108#issuecomment-410062074","issue_url":"https://api.github.com/repos/apache/druid/issues/5108","id":410062074,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMDA2MjA3NA==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-02T20:44:24Z","updated_at":"2018-08-02T20:44:24Z","author_association":"CONTRIBUTOR","body":"Oops, missed those. I pushed with new license headers.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/410062074/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/410063021","html_url":"https://github.com/apache/druid/issues/6097#issuecomment-410063021","issue_url":"https://api.github.com/repos/apache/druid/issues/6097","id":410063021,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMDA2MzAyMQ==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-02T20:47:51Z","updated_at":"2018-08-02T20:47:51Z","author_association":"CONTRIBUTOR","body":"Hi @egor-ryashin,\r\n\r\nThere have been some improvements to the refreshing mechanism in later versions (try 0.12.1?). It doesn't constantly refresh metadata for historical segments, but it does refresh periodically for realtime segments, which is important because new columns can show up at any time. However, the metadata does take up space, so if you were running kind of close to heap max with `druid.sql.enable=false` before then you'll need more heap in order to enable SQL.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/410063021/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/410063706","html_url":"https://github.com/apache/druid/pull/6076#issuecomment-410063706","issue_url":"https://api.github.com/repos/apache/druid/issues/6076","id":410063706,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMDA2MzcwNg==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-02T20:50:21Z","updated_at":"2018-08-02T20:50:21Z","author_association":"CONTRIBUTOR","body":"@jon-wei, thanks, I think it is really valuable especially as we add more features to the feature.\r\n\r\n(I heard you like features so we put features in your features?)","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/410063706/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/410076531","html_url":"https://github.com/apache/druid/pull/6090#issuecomment-410076531","issue_url":"https://api.github.com/repos/apache/druid/issues/6090","id":410076531,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMDA3NjUzMQ==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-02T21:41:10Z","updated_at":"2018-08-02T21:41:10Z","author_association":"CONTRIBUTOR","body":"Hi @asdf2014, I've looked into this more and found something.\r\n\r\nWe already have a [handler](https://github.com/apache/incubator-druid/blob/master/java-util/src/main/java/io/druid/java/util/http/client/NettyHttpClient.java#L182-L321) to handle the exception. The reason why the log in https://github.com/apache/incubator-druid/issues/6024 is printed is this handler is removed before the channel is closed. So, [these changes](https://github.com/apache/incubator-druid/compare/master...jihoonson:fix-netty-client?expand=1) would be enough.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/410076531/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/410079446","html_url":"https://github.com/apache/druid/issues/5584#issuecomment-410079446","issue_url":"https://api.github.com/repos/apache/druid/issues/5584","id":410079446,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMDA3OTQ0Ng==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-02T21:53:14Z","updated_at":"2018-08-02T21:53:14Z","author_association":"CONTRIBUTOR","body":"@gianm thanks for the clarifying the requirements. FYI, I'm very ambitious about this!","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/410079446/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/410080147","html_url":"https://github.com/apache/druid/pull/6047#issuecomment-410080147","issue_url":"https://api.github.com/repos/apache/druid/issues/6047","id":410080147,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMDA4MDE0Nw==","user":{"login":"jon-wei","id":8729063,"node_id":"MDQ6VXNlcjg3MjkwNjM=","avatar_url":"https://avatars.githubusercontent.com/u/8729063?v=4","gravatar_id":"","url":"https://api.github.com/users/jon-wei","html_url":"https://github.com/jon-wei","followers_url":"https://api.github.com/users/jon-wei/followers","following_url":"https://api.github.com/users/jon-wei/following{/other_user}","gists_url":"https://api.github.com/users/jon-wei/gists{/gist_id}","starred_url":"https://api.github.com/users/jon-wei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jon-wei/subscriptions","organizations_url":"https://api.github.com/users/jon-wei/orgs","repos_url":"https://api.github.com/users/jon-wei/repos","events_url":"https://api.github.com/users/jon-wei/events{/privacy}","received_events_url":"https://api.github.com/users/jon-wei/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-02T21:55:53Z","updated_at":"2018-08-02T21:55:53Z","author_association":"CONTRIBUTOR","body":"> I think it's more important to replace those long java commands with our simple scripts. For example, we have a script, i.e., bin/broker.sh to start/stop brokers. So, we can replace java cat conf-quickstart/druid/broker/jvm.config | xargs -cp \"conf-quickstart/druid/_common:conf-quickstart/druid/broker:lib/*\" io.druid.cli.Main server broker to use this script. Probably we need to improve those scripts to accept an extra parameter for configuration directory. Similar for other components. Are you interested in this?\r\n\r\nJust want to mention that I've been working on some improvements to the Druid quickstart with some new tutorials; as part of that upcoming patch, I'll be contributing a new \"supervise\" tool for running Druid services. The PR should be available in the next couple of days.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/410080147/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/410080616","html_url":"https://github.com/apache/druid/pull/6047#issuecomment-410080616","issue_url":"https://api.github.com/repos/apache/druid/issues/6047","id":410080616,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMDA4MDYxNg==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-02T21:57:53Z","updated_at":"2018-08-02T21:57:53Z","author_association":"CONTRIBUTOR","body":"@jon-wei that sounds nice!","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/410080616/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/410080968","html_url":"https://github.com/apache/druid/issues/6017#issuecomment-410080968","issue_url":"https://api.github.com/repos/apache/druid/issues/6017","id":410080968,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMDA4MDk2OA==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-02T21:59:26Z","updated_at":"2018-08-02T21:59:26Z","author_association":"CONTRIBUTOR","body":"Sounds like a good idea -- the main challenge is probably that right now, the request logger expects to get a valid Query object, but we could add a method that accepts invalid queries as byte arrays or something like that.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/410080968/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/410098043","html_url":"https://github.com/apache/druid/pull/6047#issuecomment-410098043","issue_url":"https://api.github.com/repos/apache/druid/issues/6047","id":410098043,"node_id":"MDEyOklzc3VlQ29tbWVudDQxMDA5ODA0Mw==","user":{"login":"hpandeycodeit","id":21266105,"node_id":"MDQ6VXNlcjIxMjY2MTA1","avatar_url":"https://avatars.githubusercontent.com/u/21266105?v=4","gravatar_id":"","url":"https://api.github.com/users/hpandeycodeit","html_url":"https://github.com/hpandeycodeit","followers_url":"https://api.github.com/users/hpandeycodeit/followers","following_url":"https://api.github.com/users/hpandeycodeit/following{/other_user}","gists_url":"https://api.github.com/users/hpandeycodeit/gists{/gist_id}","starred_url":"https://api.github.com/users/hpandeycodeit/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hpandeycodeit/subscriptions","organizations_url":"https://api.github.com/users/hpandeycodeit/orgs","repos_url":"https://api.github.com/users/hpandeycodeit/repos","events_url":"https://api.github.com/users/hpandeycodeit/events{/privacy}","received_events_url":"https://api.github.com/users/hpandeycodeit/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-08-02T23:23:47Z","updated_at":"2018-08-02T23:23:47Z","author_association":"MEMBER","body":"@jihoonson, \r\n\r\nI am getting \"Not Enough direct memory\" error: \r\n\r\n```\r\n 1) Not enough direct memory.  Please adjust -XX:MaxDirectMemorySize, druid.processing.buffer.sizeBytes, druid.processing.numThreads, or druid.processing.numMergeBuffers: maxDirectMemory[4,294,967,296], memoryNeeded[5,368,709,120] =\r\n druid.processing.buffer.sizeBytes[536,870,912] * (druid.processing.numMergeBuffers[2] + druid.processing.numThreads[7] + 1)\r\n  at io.druid.guice.DruidProcessingModule.getIntermediateResultsPool(DruidProcessingModule.java:110) (via modules: com.google.inject.util.Modules$OverrideModule -> com.google.inject.util.Modules$OverrideModule -> io.druid.guice.Dru\r\nidProcessingModule)\r\n  at io.druid.guice.DruidProcessingModule.getIntermediateResultsPool(DruidProcessingModule.java:110) (via modules: com.google.inject.util.Modules$OverrideModule -> com.google.inject.util.Modules$OverrideModule -> io.druid.guice.Dru\r\nidProcessingModule)\r\n  while locating io.druid.collections.NonBlockingPool<java.nio.ByteBuffer> annotated with @io.druid.guice.annotations.Global()\r\n    for the 2nd parameter of io.druid.query.groupby.GroupByQueryEngine.<init>(GroupByQueryEngine.java:81)\r\n  at io.druid.guice.QueryRunnerFactoryModule.configure(QueryRunnerFactoryModule.java:88) (via modules: com.google.inject.util.Modules$OverrideModule -> com.google.inject.util.Modules$OverrideModule -> io.druid.guice.QueryRunnerFact\r\noryModule)\r\n  while locating io.druid.query.groupby.GroupByQueryEngine\r\n    for the 2nd parameter of io.druid.query.groupby.strategy.GroupByStrategyV1.<init>(GroupByStrategyV1.java:77)\r\n  while locating io.druid.query.groupby.strategy.GroupByStrategyV1\r\n    for the 2nd parameter of io.druid.query.groupby.strategy.GroupByStrategySelector.<init>(GroupByStrategySelector.java:43)\r\n  while locating io.druid.query.groupby.strategy.GroupByStrategySelector\r\n    for the 1st parameter of io.druid.query.groupby.GroupByQueryQueryToolChest.<init>(GroupByQueryQueryToolChest.java:104)\r\n  at io.druid.guice.QueryToolChestModule.configure(QueryToolChestModule.java:101) (via modules: com.google.inject.util.Modules$OverrideModule -> com.google.inject.util.Modules$OverrideModule -> io.druid.guice.QueryRunnerFactoryModu\r\nle)\r\n ```","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/410098043/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]