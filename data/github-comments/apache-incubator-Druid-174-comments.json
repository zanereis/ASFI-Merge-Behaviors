[{"url":"https://api.github.com/repos/apache/druid/issues/comments/360665827","html_url":"https://github.com/apache/druid/pull/4116#issuecomment-360665827","issue_url":"https://api.github.com/repos/apache/druid/issues/4116","id":360665827,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MDY2NTgyNw==","user":{"login":"samarthjain","id":1642180,"node_id":"MDQ6VXNlcjE2NDIxODA=","avatar_url":"https://avatars.githubusercontent.com/u/1642180?v=4","gravatar_id":"","url":"https://api.github.com/users/samarthjain","html_url":"https://github.com/samarthjain","followers_url":"https://api.github.com/users/samarthjain/followers","following_url":"https://api.github.com/users/samarthjain/following{/other_user}","gists_url":"https://api.github.com/users/samarthjain/gists{/gist_id}","starred_url":"https://api.github.com/users/samarthjain/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/samarthjain/subscriptions","organizations_url":"https://api.github.com/users/samarthjain/orgs","repos_url":"https://api.github.com/users/samarthjain/repos","events_url":"https://api.github.com/users/samarthjain/events{/privacy}","received_events_url":"https://api.github.com/users/samarthjain/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-26T02:26:12Z","updated_at":"2018-01-26T02:26:12Z","author_association":"CONTRIBUTOR","body":"We are currently running into an issue where the hadoop-indexer job is making segment entries in the metadata store using the local load spec. As a result, segments are not getting loaded. The commentary here suggests we may need to pass \r\ndruid.storage.type to the indexer job. How do we do this? Or better, has this issue been fixed in later releases? ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/360665827/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/360667831","html_url":"https://github.com/apache/druid/pull/4116#issuecomment-360667831","issue_url":"https://api.github.com/repos/apache/druid/issues/4116","id":360667831,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MDY2NzgzMQ==","user":{"login":"samarthjain","id":1642180,"node_id":"MDQ6VXNlcjE2NDIxODA=","avatar_url":"https://avatars.githubusercontent.com/u/1642180?v=4","gravatar_id":"","url":"https://api.github.com/users/samarthjain","html_url":"https://github.com/samarthjain","followers_url":"https://api.github.com/users/samarthjain/followers","following_url":"https://api.github.com/users/samarthjain/following{/other_user}","gists_url":"https://api.github.com/users/samarthjain/gists{/gist_id}","starred_url":"https://api.github.com/users/samarthjain/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/samarthjain/subscriptions","organizations_url":"https://api.github.com/users/samarthjain/orgs","repos_url":"https://api.github.com/users/samarthjain/repos","events_url":"https://api.github.com/users/samarthjain/events{/privacy}","received_events_url":"https://api.github.com/users/samarthjain/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-26T02:39:19Z","updated_at":"2018-01-26T02:50:55Z","author_association":"CONTRIBUTOR","body":"Alternatively, is there a way to configure the DataSegmentPusher? Right now, by default, LocalDataSegmentPusher is injected. This issue is preventing us from using druid-10.1 for bulk ingestion. Forgot to mention, we want to push the segments to S3. Things worked fine with 0.9.1, but after the changes made in this pull request, bulk ingestion doesn't work.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/360667831/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/360716410","html_url":"https://github.com/apache/druid/pull/4425#issuecomment-360716410","issue_url":"https://api.github.com/repos/apache/druid/issues/4425","id":360716410,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MDcxNjQxMA==","user":{"login":"winval","id":15226789,"node_id":"MDQ6VXNlcjE1MjI2Nzg5","avatar_url":"https://avatars.githubusercontent.com/u/15226789?v=4","gravatar_id":"","url":"https://api.github.com/users/winval","html_url":"https://github.com/winval","followers_url":"https://api.github.com/users/winval/followers","following_url":"https://api.github.com/users/winval/following{/other_user}","gists_url":"https://api.github.com/users/winval/gists{/gist_id}","starred_url":"https://api.github.com/users/winval/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/winval/subscriptions","organizations_url":"https://api.github.com/users/winval/orgs","repos_url":"https://api.github.com/users/winval/repos","events_url":"https://api.github.com/users/winval/events{/privacy}","received_events_url":"https://api.github.com/users/winval/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-26T08:33:35Z","updated_at":"2018-01-26T08:33:35Z","author_association":"NONE","body":"@leventov Please review, thanks","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/360716410/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/360766583","html_url":"https://github.com/apache/druid/issues/3969#issuecomment-360766583","issue_url":"https://api.github.com/repos/apache/druid/issues/3969","id":360766583,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MDc2NjU4Mw==","user":{"login":"copperfield-dev","id":6407672,"node_id":"MDQ6VXNlcjY0MDc2NzI=","avatar_url":"https://avatars.githubusercontent.com/u/6407672?v=4","gravatar_id":"","url":"https://api.github.com/users/copperfield-dev","html_url":"https://github.com/copperfield-dev","followers_url":"https://api.github.com/users/copperfield-dev/followers","following_url":"https://api.github.com/users/copperfield-dev/following{/other_user}","gists_url":"https://api.github.com/users/copperfield-dev/gists{/gist_id}","starred_url":"https://api.github.com/users/copperfield-dev/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/copperfield-dev/subscriptions","organizations_url":"https://api.github.com/users/copperfield-dev/orgs","repos_url":"https://api.github.com/users/copperfield-dev/repos","events_url":"https://api.github.com/users/copperfield-dev/events{/privacy}","received_events_url":"https://api.github.com/users/copperfield-dev/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-26T11:56:00Z","updated_at":"2018-01-26T11:56:00Z","author_association":"NONE","body":"+1","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/360766583/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/360845935","html_url":"https://github.com/apache/druid/pull/5261#issuecomment-360845935","issue_url":"https://api.github.com/repos/apache/druid/issues/5261","id":360845935,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MDg0NTkzNQ==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-26T17:13:26Z","updated_at":"2018-01-26T17:13:26Z","author_association":"CONTRIBUTOR","body":"@gianm @kevinconaway \r\nI would be more comfortable with this if we left RealtimeIndexTask alone and created a new AppenderatorDriverRealtimeIndexTask and make it configurable to use either at the client side (e.g. Tranquility)\r\nthat allows both to coexist at same time and new implementation can be tested in production environments before plumber based RealtimeIndexTask is fully retired.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/360845935/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/360846301","html_url":"https://github.com/apache/druid/pull/5261#issuecomment-360846301","issue_url":"https://api.github.com/repos/apache/druid/issues/5261","id":360846301,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MDg0NjMwMQ==","user":{"login":"kevinconaway","id":6921953,"node_id":"MDQ6VXNlcjY5MjE5NTM=","avatar_url":"https://avatars.githubusercontent.com/u/6921953?v=4","gravatar_id":"","url":"https://api.github.com/users/kevinconaway","html_url":"https://github.com/kevinconaway","followers_url":"https://api.github.com/users/kevinconaway/followers","following_url":"https://api.github.com/users/kevinconaway/following{/other_user}","gists_url":"https://api.github.com/users/kevinconaway/gists{/gist_id}","starred_url":"https://api.github.com/users/kevinconaway/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kevinconaway/subscriptions","organizations_url":"https://api.github.com/users/kevinconaway/orgs","repos_url":"https://api.github.com/users/kevinconaway/repos","events_url":"https://api.github.com/users/kevinconaway/events{/privacy}","received_events_url":"https://api.github.com/users/kevinconaway/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-26T17:14:53Z","updated_at":"2018-01-26T17:15:08Z","author_association":"CONTRIBUTOR","body":"I'm fine with that if that is the direction that you all would like me to go.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/360846301/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/360849400","html_url":"https://github.com/apache/druid/pull/5261#issuecomment-360849400","issue_url":"https://api.github.com/repos/apache/druid/issues/5261","id":360849400,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MDg0OTQwMA==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-26T17:26:45Z","updated_at":"2018-01-26T17:26:45Z","author_association":"CONTRIBUTOR","body":"I agree. Actually AppenderatorDriverRealtimeIndexTask has new requirements which were not supported by RealtimeIndexTask. I'm fine by adding a new taskType rather than changing the existing one.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/360849400/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/360850198","html_url":"https://github.com/apache/druid/pull/5261#issuecomment-360850198","issue_url":"https://api.github.com/repos/apache/druid/issues/5261","id":360850198,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MDg1MDE5OA==","user":{"login":"kevinconaway","id":6921953,"node_id":"MDQ6VXNlcjY5MjE5NTM=","avatar_url":"https://avatars.githubusercontent.com/u/6921953?v=4","gravatar_id":"","url":"https://api.github.com/users/kevinconaway","html_url":"https://github.com/kevinconaway","followers_url":"https://api.github.com/users/kevinconaway/followers","following_url":"https://api.github.com/users/kevinconaway/following{/other_user}","gists_url":"https://api.github.com/users/kevinconaway/gists{/gist_id}","starred_url":"https://api.github.com/users/kevinconaway/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kevinconaway/subscriptions","organizations_url":"https://api.github.com/users/kevinconaway/orgs","repos_url":"https://api.github.com/users/kevinconaway/repos","events_url":"https://api.github.com/users/kevinconaway/events{/privacy}","received_events_url":"https://api.github.com/users/kevinconaway/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-26T17:29:54Z","updated_at":"2018-01-26T17:29:54Z","author_association":"CONTRIBUTOR","body":"Sounds good, I'll update the PR to add a new task type\r\n\r\n> Actually AppenderatorDriverRealtimeIndexTask has new requirements which were not supported by RealtimeIndexTask.\r\n\r\nWhat do you mean here?  Are you talking about the ability to ingest late arriving data and append to existing segments, or something else?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/360850198/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/360853360","html_url":"https://github.com/apache/druid/pull/4425#issuecomment-360853360","issue_url":"https://api.github.com/repos/apache/druid/issues/4425","id":360853360,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MDg1MzM2MA==","user":{"login":"leventov","id":609240,"node_id":"MDQ6VXNlcjYwOTI0MA==","avatar_url":"https://avatars.githubusercontent.com/u/609240?v=4","gravatar_id":"","url":"https://api.github.com/users/leventov","html_url":"https://github.com/leventov","followers_url":"https://api.github.com/users/leventov/followers","following_url":"https://api.github.com/users/leventov/following{/other_user}","gists_url":"https://api.github.com/users/leventov/gists{/gist_id}","starred_url":"https://api.github.com/users/leventov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leventov/subscriptions","organizations_url":"https://api.github.com/users/leventov/orgs","repos_url":"https://api.github.com/users/leventov/repos","events_url":"https://api.github.com/users/leventov/events{/privacy}","received_events_url":"https://api.github.com/users/leventov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-26T17:41:37Z","updated_at":"2018-01-26T17:41:37Z","author_association":"MEMBER","body":"Apart from the remaining formatting issue LGTM on code/textual level, although I still want another committer to take a look at this from API (design) perspective, before merging.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/360853360/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/360854688","html_url":"https://github.com/apache/druid/pull/5261#issuecomment-360854688","issue_url":"https://api.github.com/repos/apache/druid/issues/5261","id":360854688,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MDg1NDY4OA==","user":{"login":"kevinconaway","id":6921953,"node_id":"MDQ6VXNlcjY5MjE5NTM=","avatar_url":"https://avatars.githubusercontent.com/u/6921953?v=4","gravatar_id":"","url":"https://api.github.com/users/kevinconaway","html_url":"https://github.com/kevinconaway","followers_url":"https://api.github.com/users/kevinconaway/followers","following_url":"https://api.github.com/users/kevinconaway/following{/other_user}","gists_url":"https://api.github.com/users/kevinconaway/gists{/gist_id}","starred_url":"https://api.github.com/users/kevinconaway/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kevinconaway/subscriptions","organizations_url":"https://api.github.com/users/kevinconaway/orgs","repos_url":"https://api.github.com/users/kevinconaway/repos","events_url":"https://api.github.com/users/kevinconaway/events{/privacy}","received_events_url":"https://api.github.com/users/kevinconaway/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-26T17:47:08Z","updated_at":"2018-01-26T17:47:08Z","author_association":"CONTRIBUTOR","body":"Are you OK with this new class sharing the `RealtimeIOConfig` and `RealtimeTuningConfig`?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/360854688/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/360911103","html_url":"https://github.com/apache/druid/pull/5255#issuecomment-360911103","issue_url":"https://api.github.com/repos/apache/druid/issues/5255","id":360911103,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MDkxMTEwMw==","user":{"login":"pjain1","id":11787983,"node_id":"MDQ6VXNlcjExNzg3OTgz","avatar_url":"https://avatars.githubusercontent.com/u/11787983?v=4","gravatar_id":"","url":"https://api.github.com/users/pjain1","html_url":"https://github.com/pjain1","followers_url":"https://api.github.com/users/pjain1/followers","following_url":"https://api.github.com/users/pjain1/following{/other_user}","gists_url":"https://api.github.com/users/pjain1/gists{/gist_id}","starred_url":"https://api.github.com/users/pjain1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pjain1/subscriptions","organizations_url":"https://api.github.com/users/pjain1/orgs","repos_url":"https://api.github.com/users/pjain1/repos","events_url":"https://api.github.com/users/pjain1/events{/privacy}","received_events_url":"https://api.github.com/users/pjain1/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-26T21:37:29Z","updated_at":"2018-01-26T21:37:29Z","author_association":"MEMBER","body":"@jihoonson added","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/360911103/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/360921296","html_url":"https://github.com/apache/druid/pull/5261#issuecomment-360921296","issue_url":"https://api.github.com/repos/apache/druid/issues/5261","id":360921296,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MDkyMTI5Ng==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-26T22:24:45Z","updated_at":"2018-01-26T22:24:45Z","author_association":"CONTRIBUTOR","body":"> What do you mean here? Are you talking about the ability to ingest late arriving data and append to existing segments, or something else?\r\n\r\n@kevinconaway yes, that's exactly what I meant.\r\n\r\n> Are you OK with this new class sharing the RealtimeIOConfig and RealtimeTuningConfig?\r\n\r\nI'm fine if the existing RealtimeIndexTask and the new one share exactly same configurations.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/360921296/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/360949705","html_url":"https://github.com/apache/druid/pull/5264#issuecomment-360949705","issue_url":"https://api.github.com/repos/apache/druid/issues/5264","id":360949705,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MDk0OTcwNQ==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-27T01:42:07Z","updated_at":"2018-01-27T01:42:07Z","author_association":"CONTRIBUTOR","body":"@leventov @nishantmonu51 @gianm thanks for the review. Addressed your comments.\r\n\r\n@gianm there are already some docs. Here are the links.\r\n\r\n- https://github.com/druid-io/druid/blob/master/docs/content/design/coordinator.md#compacting-segments\r\n- https://github.com/druid-io/druid/blob/master/docs/content/design/coordinator.md#http-endpoints\r\n\r\nDo you think something more should be added?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/360949705/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/360954453","html_url":"https://github.com/apache/druid/pull/4116#issuecomment-360954453","issue_url":"https://api.github.com/repos/apache/druid/issues/4116","id":360954453,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MDk1NDQ1Mw==","user":{"login":"b-slim","id":7376396,"node_id":"MDQ6VXNlcjczNzYzOTY=","avatar_url":"https://avatars.githubusercontent.com/u/7376396?v=4","gravatar_id":"","url":"https://api.github.com/users/b-slim","html_url":"https://github.com/b-slim","followers_url":"https://api.github.com/users/b-slim/followers","following_url":"https://api.github.com/users/b-slim/following{/other_user}","gists_url":"https://api.github.com/users/b-slim/gists{/gist_id}","starred_url":"https://api.github.com/users/b-slim/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/b-slim/subscriptions","organizations_url":"https://api.github.com/users/b-slim/orgs","repos_url":"https://api.github.com/users/b-slim/repos","events_url":"https://api.github.com/users/b-slim/events{/privacy}","received_events_url":"https://api.github.com/users/b-slim/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-27T02:53:18Z","updated_at":"2018-01-27T02:53:32Z","author_association":"CONTRIBUTOR","body":"@samarthjain this is not the best place to ask questions, you need to set druid.storage.type=hdfs or any other deep storage type as part of the properties file.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/360954453/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/361043654","html_url":"https://github.com/apache/druid/pull/5296#issuecomment-361043654","issue_url":"https://api.github.com/repos/apache/druid/issues/5296","id":361043654,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MTA0MzY1NA==","user":{"login":"hamlet-lee","id":12079531,"node_id":"MDQ6VXNlcjEyMDc5NTMx","avatar_url":"https://avatars.githubusercontent.com/u/12079531?v=4","gravatar_id":"","url":"https://api.github.com/users/hamlet-lee","html_url":"https://github.com/hamlet-lee","followers_url":"https://api.github.com/users/hamlet-lee/followers","following_url":"https://api.github.com/users/hamlet-lee/following{/other_user}","gists_url":"https://api.github.com/users/hamlet-lee/gists{/gist_id}","starred_url":"https://api.github.com/users/hamlet-lee/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hamlet-lee/subscriptions","organizations_url":"https://api.github.com/users/hamlet-lee/orgs","repos_url":"https://api.github.com/users/hamlet-lee/repos","events_url":"https://api.github.com/users/hamlet-lee/events{/privacy}","received_events_url":"https://api.github.com/users/hamlet-lee/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-28T07:22:20Z","updated_at":"2018-01-28T07:22:20Z","author_association":"CONTRIBUTOR","body":"@himanshug rename is PUBLIC in DistributedFileSystem.  \r\n\r\n```\r\npublic void rename(Path src, Path dst, final Rename... options) throws IOException {\r\n```","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/361043654/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/361081031","html_url":"https://github.com/apache/druid/pull/5296#issuecomment-361081031","issue_url":"https://api.github.com/repos/apache/druid/issues/5296","id":361081031,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MTA4MTAzMQ==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-28T17:44:20Z","updated_at":"2018-01-29T15:23:59Z","author_association":"CONTRIBUTOR","body":"@hamlet-lee i see, it is increasing visibility in the override .. however, one of of my tests tested it for `LocalFileSystem` where it is not overridden to be made public. and in `FileSystem` it is declared to be protected.\r\nSo unfortunately, that assumption about it being public can't be made in general and recursion is still necessary.\r\n\r\nthanks for pointing that out, now I understand why it worked for you without recursion.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/361081031/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/361130620","html_url":"https://github.com/apache/druid/pull/5303#issuecomment-361130620","issue_url":"https://api.github.com/repos/apache/druid/issues/5303","id":361130620,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MTEzMDYyMA==","user":{"login":"QiuMM","id":15156517,"node_id":"MDQ6VXNlcjE1MTU2NTE3","avatar_url":"https://avatars.githubusercontent.com/u/15156517?v=4","gravatar_id":"","url":"https://api.github.com/users/QiuMM","html_url":"https://github.com/QiuMM","followers_url":"https://api.github.com/users/QiuMM/followers","following_url":"https://api.github.com/users/QiuMM/following{/other_user}","gists_url":"https://api.github.com/users/QiuMM/gists{/gist_id}","starred_url":"https://api.github.com/users/QiuMM/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/QiuMM/subscriptions","organizations_url":"https://api.github.com/users/QiuMM/orgs","repos_url":"https://api.github.com/users/QiuMM/repos","events_url":"https://api.github.com/users/QiuMM/events{/privacy}","received_events_url":"https://api.github.com/users/QiuMM/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-29T03:26:50Z","updated_at":"2018-01-29T03:26:50Z","author_association":"MEMBER","body":"The travis-ci build failed, but it's not due to my commits. Can anyone help me fix it.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/361130620/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/361132521","html_url":"https://github.com/apache/druid/pull/5303#issuecomment-361132521","issue_url":"https://api.github.com/repos/apache/druid/issues/5303","id":361132521,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MTEzMjUyMQ==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-29T03:43:04Z","updated_at":"2018-01-29T03:43:04Z","author_association":"CONTRIBUTOR","body":"Just restarted the failed job.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/361132521/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/361134913","html_url":"https://github.com/apache/druid/pull/5303#issuecomment-361134913","issue_url":"https://api.github.com/repos/apache/druid/issues/5303","id":361134913,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MTEzNDkxMw==","user":{"login":"QiuMM","id":15156517,"node_id":"MDQ6VXNlcjE1MTU2NTE3","avatar_url":"https://avatars.githubusercontent.com/u/15156517?v=4","gravatar_id":"","url":"https://api.github.com/users/QiuMM","html_url":"https://github.com/QiuMM","followers_url":"https://api.github.com/users/QiuMM/followers","following_url":"https://api.github.com/users/QiuMM/following{/other_user}","gists_url":"https://api.github.com/users/QiuMM/gists{/gist_id}","starred_url":"https://api.github.com/users/QiuMM/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/QiuMM/subscriptions","organizations_url":"https://api.github.com/users/QiuMM/orgs","repos_url":"https://api.github.com/users/QiuMM/repos","events_url":"https://api.github.com/users/QiuMM/events{/privacy}","received_events_url":"https://api.github.com/users/QiuMM/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-29T04:04:23Z","updated_at":"2018-01-29T04:04:23Z","author_association":"MEMBER","body":"@jihoonson Thanks a lot.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/361134913/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/361138361","html_url":"https://github.com/apache/druid/issues/5218#issuecomment-361138361","issue_url":"https://api.github.com/repos/apache/druid/issues/5218","id":361138361,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MTEzODM2MQ==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-29T04:36:44Z","updated_at":"2018-01-29T04:36:44Z","author_association":"CONTRIBUTOR","body":"@zhangxinyu1 thanks for the reply. DerivedDataSource for accelerating query speed makes sense to me.\r\n\r\nI think two major challenges here are:\r\n\r\n- How to update derivedDataSource on updates on original dataSource?\r\n- How to rewrite user queries to choose the proper dataSource between derivedDataSource and original one (or both)?\r\n\r\nThe proposal explains well how these challenges are addressed, but I would like to fill some missing parts. I have two ideas for short term and long term solutions.\r\n\r\n#### Idea for a short term solution\r\n\r\nA derivedDataSource should be treated as a normal dataSource except that it is created or updated automatically on updates on its original dataSource. This means, it should be shown when listing dataSources like a normal dataSource. Of course, it would be great if the dataSource type is also provided like `dataSource` and `derivedDataSource` to figure out which dataSources are derived ones. \r\n\r\n> - How to update derivedDataSource on updates on original dataSource?\r\n\r\nThe proposed DerivedDatasourceManager looks good to maintain derivedDataSources, but it should be able to solve the problem @himanshug pointed out. A good way to do this is submitting a task for updating derivedDataSource whenever some segments are published for the original one. \r\n\r\n> - How to rewrite user queries to choose the proper dataSource between derivedDataSource and original one (or both)?\r\n\r\nThe proposal explains well how to choose the proper dataSource between derivedDataSource and the original one. However, if derivedDataSource is not prepared yet for currently ingesting data, the query should be rewritten into a unionQuery which reads a part from derivedDataSource and another from the original one. I'm not sure, but this might be possible using Calcite and I think this is the easiest way to implement this feature. @julianhyde @gianm do you think using Calcite makes sense to rewrite a query to an unionQuery?\r\n\r\n#### Idea for a long term solution\r\n\r\nI believe the derivedDataSource can be extended to be more powerful than the one proposed here. This makes it sense to have multiple derivedDataSources for a single dataSource. For example, we can create multiple derivedDataSources which are sorted in different orders like the projections in Vertica. \r\n\r\nAs a long term solution, I think we need a new layer which abstracts the original dataSource and multiple derivedDataSources. This new abstraction layer maintains the dependencies between original dataSources and their derived dataSources. The abstraction layer keeps track of all changes to original dataSources and is responsible for reflecting those changes to the derived ones. The difference from DerivedDatasourceManager is that this abstraction layer keeps track of only changes to original dataSources, and thus it doesn't have to traverse all timelines of all derivedDataSources.\r\n\r\nFor query processing, the abstraction layer returns a segment list for the dataSource and the interval specified in a user query no matter what it is a SQL or Druid's native query. The returned segment list can include the segments of either the original dataSource or a derived one. `CachingClusteredClient` can use a view for this abstraction layer instead of `TimelineServerView` to get an optimized segment list for more efficient query processing.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/361138361/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/361144751","html_url":"https://github.com/apache/druid/pull/5278#issuecomment-361144751","issue_url":"https://api.github.com/repos/apache/druid/issues/5278","id":361144751,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MTE0NDc1MQ==","user":{"login":"nishantmonu51","id":5023786,"node_id":"MDQ6VXNlcjUwMjM3ODY=","avatar_url":"https://avatars.githubusercontent.com/u/5023786?v=4","gravatar_id":"","url":"https://api.github.com/users/nishantmonu51","html_url":"https://github.com/nishantmonu51","followers_url":"https://api.github.com/users/nishantmonu51/followers","following_url":"https://api.github.com/users/nishantmonu51/following{/other_user}","gists_url":"https://api.github.com/users/nishantmonu51/gists{/gist_id}","starred_url":"https://api.github.com/users/nishantmonu51/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nishantmonu51/subscriptions","organizations_url":"https://api.github.com/users/nishantmonu51/orgs","repos_url":"https://api.github.com/users/nishantmonu51/repos","events_url":"https://api.github.com/users/nishantmonu51/events{/privacy}","received_events_url":"https://api.github.com/users/nishantmonu51/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-29T05:35:42Z","updated_at":"2018-01-29T05:35:42Z","author_association":"MEMBER","body":"@leventov: have worked through your review comments, please check. ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/361144751/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/361227024","html_url":"https://github.com/apache/druid/pull/5303#issuecomment-361227024","issue_url":"https://api.github.com/repos/apache/druid/issues/5303","id":361227024,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MTIyNzAyNA==","user":{"login":"QiuMM","id":15156517,"node_id":"MDQ6VXNlcjE1MTU2NTE3","avatar_url":"https://avatars.githubusercontent.com/u/15156517?v=4","gravatar_id":"","url":"https://api.github.com/users/QiuMM","html_url":"https://github.com/QiuMM","followers_url":"https://api.github.com/users/QiuMM/followers","following_url":"https://api.github.com/users/QiuMM/following{/other_user}","gists_url":"https://api.github.com/users/QiuMM/gists{/gist_id}","starred_url":"https://api.github.com/users/QiuMM/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/QiuMM/subscriptions","organizations_url":"https://api.github.com/users/QiuMM/orgs","repos_url":"https://api.github.com/users/QiuMM/repos","events_url":"https://api.github.com/users/QiuMM/events{/privacy}","received_events_url":"https://api.github.com/users/QiuMM/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-29T12:12:17Z","updated_at":"2018-01-29T12:12:17Z","author_association":"MEMBER","body":"@jihoonson Can you help review this PR ?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/361227024/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/361268295","html_url":"https://github.com/apache/druid/pull/5261#issuecomment-361268295","issue_url":"https://api.github.com/repos/apache/druid/issues/5261","id":361268295,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MTI2ODI5NQ==","user":{"login":"kevinconaway","id":6921953,"node_id":"MDQ6VXNlcjY5MjE5NTM=","avatar_url":"https://avatars.githubusercontent.com/u/6921953?v=4","gravatar_id":"","url":"https://api.github.com/users/kevinconaway","html_url":"https://github.com/kevinconaway","followers_url":"https://api.github.com/users/kevinconaway/followers","following_url":"https://api.github.com/users/kevinconaway/following{/other_user}","gists_url":"https://api.github.com/users/kevinconaway/gists{/gist_id}","starred_url":"https://api.github.com/users/kevinconaway/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kevinconaway/subscriptions","organizations_url":"https://api.github.com/users/kevinconaway/orgs","repos_url":"https://api.github.com/users/kevinconaway/repos","events_url":"https://api.github.com/users/kevinconaway/events{/privacy}","received_events_url":"https://api.github.com/users/kevinconaway/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-29T14:49:33Z","updated_at":"2018-01-29T14:49:33Z","author_association":"CONTRIBUTOR","body":"I've updated the PR to include a new task, `AppenderatorDriverRealtimeIndexTask`\r\n\r\nI applied the changes that I had made to `RealtimeIndexTask` and `RealtimeIndexTaskTest` to this class and its corresponding test case and then reverted the other changes.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/361268295/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/361268642","html_url":"https://github.com/apache/druid/pull/5269#issuecomment-361268642","issue_url":"https://api.github.com/repos/apache/druid/issues/5269","id":361268642,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MTI2ODY0Mg==","user":{"login":"kevinconaway","id":6921953,"node_id":"MDQ6VXNlcjY5MjE5NTM=","avatar_url":"https://avatars.githubusercontent.com/u/6921953?v=4","gravatar_id":"","url":"https://api.github.com/users/kevinconaway","html_url":"https://github.com/kevinconaway","followers_url":"https://api.github.com/users/kevinconaway/followers","following_url":"https://api.github.com/users/kevinconaway/following{/other_user}","gists_url":"https://api.github.com/users/kevinconaway/gists{/gist_id}","starred_url":"https://api.github.com/users/kevinconaway/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kevinconaway/subscriptions","organizations_url":"https://api.github.com/users/kevinconaway/orgs","repos_url":"https://api.github.com/users/kevinconaway/repos","events_url":"https://api.github.com/users/kevinconaway/events{/privacy}","received_events_url":"https://api.github.com/users/kevinconaway/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-29T14:50:40Z","updated_at":"2018-01-29T14:50:40Z","author_association":"CONTRIBUTOR","body":"What else needs to be done for this to be merged?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/361268642/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/361297896","html_url":"https://github.com/apache/druid/pull/5269#issuecomment-361297896","issue_url":"https://api.github.com/repos/apache/druid/issues/5269","id":361297896,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MTI5Nzg5Ng==","user":{"login":"nishantmonu51","id":5023786,"node_id":"MDQ6VXNlcjUwMjM3ODY=","avatar_url":"https://avatars.githubusercontent.com/u/5023786?v=4","gravatar_id":"","url":"https://api.github.com/users/nishantmonu51","html_url":"https://github.com/nishantmonu51","followers_url":"https://api.github.com/users/nishantmonu51/followers","following_url":"https://api.github.com/users/nishantmonu51/following{/other_user}","gists_url":"https://api.github.com/users/nishantmonu51/gists{/gist_id}","starred_url":"https://api.github.com/users/nishantmonu51/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nishantmonu51/subscriptions","organizations_url":"https://api.github.com/users/nishantmonu51/orgs","repos_url":"https://api.github.com/users/nishantmonu51/repos","events_url":"https://api.github.com/users/nishantmonu51/events{/privacy}","received_events_url":"https://api.github.com/users/nishantmonu51/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-29T16:16:58Z","updated_at":"2018-01-29T16:16:58Z","author_association":"MEMBER","body":"Thanks for the fix @kevinconaway ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/361297896/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":1,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/361352395","html_url":"https://github.com/apache/druid/pull/5303#issuecomment-361352395","issue_url":"https://api.github.com/repos/apache/druid/issues/5303","id":361352395,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MTM1MjM5NQ==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-29T19:09:23Z","updated_at":"2018-01-29T19:09:23Z","author_association":"CONTRIBUTOR","body":"@QiuMM sure. I'll review in a few days.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/361352395/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/361417324","html_url":"https://github.com/apache/druid/pull/4509#issuecomment-361417324","issue_url":"https://api.github.com/repos/apache/druid/issues/4509","id":361417324,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MTQxNzMyNA==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-29T23:02:41Z","updated_at":"2018-01-29T23:02:41Z","author_association":"CONTRIBUTOR","body":"Moving this back to 0.12.0 as we discovered that, unlike previously believed, the bug is in fact triggerable in production.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/361417324/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/361445862","html_url":"https://github.com/apache/druid/pull/5255#issuecomment-361445862","issue_url":"https://api.github.com/repos/apache/druid/issues/5255","id":361445862,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MTQ0NTg2Mg==","user":{"login":"dclim","id":11050882,"node_id":"MDQ6VXNlcjExMDUwODgy","avatar_url":"https://avatars.githubusercontent.com/u/11050882?v=4","gravatar_id":"","url":"https://api.github.com/users/dclim","html_url":"https://github.com/dclim","followers_url":"https://api.github.com/users/dclim/followers","following_url":"https://api.github.com/users/dclim/following{/other_user}","gists_url":"https://api.github.com/users/dclim/gists{/gist_id}","starred_url":"https://api.github.com/users/dclim/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dclim/subscriptions","organizations_url":"https://api.github.com/users/dclim/orgs","repos_url":"https://api.github.com/users/dclim/repos","events_url":"https://api.github.com/users/dclim/events{/privacy}","received_events_url":"https://api.github.com/users/dclim/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-30T01:27:22Z","updated_at":"2018-01-30T01:27:22Z","author_association":"CONTRIBUTOR","body":"👍 ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/361445862/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/361488482","html_url":"https://github.com/apache/druid/pull/5260#issuecomment-361488482","issue_url":"https://api.github.com/repos/apache/druid/issues/5260","id":361488482,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MTQ4ODQ4Mg==","user":{"login":"NirajaM","id":15151939,"node_id":"MDQ6VXNlcjE1MTUxOTM5","avatar_url":"https://avatars.githubusercontent.com/u/15151939?v=4","gravatar_id":"","url":"https://api.github.com/users/NirajaM","html_url":"https://github.com/NirajaM","followers_url":"https://api.github.com/users/NirajaM/followers","following_url":"https://api.github.com/users/NirajaM/following{/other_user}","gists_url":"https://api.github.com/users/NirajaM/gists{/gist_id}","starred_url":"https://api.github.com/users/NirajaM/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/NirajaM/subscriptions","organizations_url":"https://api.github.com/users/NirajaM/orgs","repos_url":"https://api.github.com/users/NirajaM/repos","events_url":"https://api.github.com/users/NirajaM/events{/privacy}","received_events_url":"https://api.github.com/users/NirajaM/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-30T06:17:01Z","updated_at":"2018-01-30T06:17:01Z","author_association":"CONTRIBUTOR","body":"@himanshug  Updated the use case in PR description.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/361488482/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/361519931","html_url":"https://github.com/apache/druid/issues/5218#issuecomment-361519931","issue_url":"https://api.github.com/repos/apache/druid/issues/5218","id":361519931,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MTUxOTkzMQ==","user":{"login":"zhangxinyu1","id":12528894,"node_id":"MDQ6VXNlcjEyNTI4ODk0","avatar_url":"https://avatars.githubusercontent.com/u/12528894?v=4","gravatar_id":"","url":"https://api.github.com/users/zhangxinyu1","html_url":"https://github.com/zhangxinyu1","followers_url":"https://api.github.com/users/zhangxinyu1/followers","following_url":"https://api.github.com/users/zhangxinyu1/following{/other_user}","gists_url":"https://api.github.com/users/zhangxinyu1/gists{/gist_id}","starred_url":"https://api.github.com/users/zhangxinyu1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zhangxinyu1/subscriptions","organizations_url":"https://api.github.com/users/zhangxinyu1/orgs","repos_url":"https://api.github.com/users/zhangxinyu1/repos","events_url":"https://api.github.com/users/zhangxinyu1/events{/privacy}","received_events_url":"https://api.github.com/users/zhangxinyu1/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-30T08:54:25Z","updated_at":"2018-01-30T08:54:25Z","author_association":"CONTRIBUTOR","body":"@jihoonson Thanks for your suggestions!\r\nI proposed the 2nd version of implementation for materialised view in #5304 based on all your suggestions. Could you please review it?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/361519931/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/361562215","html_url":"https://github.com/apache/druid/issues/5304#issuecomment-361562215","issue_url":"https://api.github.com/repos/apache/druid/issues/5304","id":361562215,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MTU2MjIxNQ==","user":{"login":"zp-shadowolf","id":31597062,"node_id":"MDQ6VXNlcjMxNTk3MDYy","avatar_url":"https://avatars.githubusercontent.com/u/31597062?v=4","gravatar_id":"","url":"https://api.github.com/users/zp-shadowolf","html_url":"https://github.com/zp-shadowolf","followers_url":"https://api.github.com/users/zp-shadowolf/followers","following_url":"https://api.github.com/users/zp-shadowolf/following{/other_user}","gists_url":"https://api.github.com/users/zp-shadowolf/gists{/gist_id}","starred_url":"https://api.github.com/users/zp-shadowolf/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zp-shadowolf/subscriptions","organizations_url":"https://api.github.com/users/zp-shadowolf/orgs","repos_url":"https://api.github.com/users/zp-shadowolf/repos","events_url":"https://api.github.com/users/zp-shadowolf/events{/privacy}","received_events_url":"https://api.github.com/users/zp-shadowolf/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-30T11:15:35Z","updated_at":"2018-01-30T11:15:35Z","author_association":"NONE","body":"😁 Thank you very much for your email! The problem has been solved, I\nrestarted IDEA.\n\n2018-01-30 16:51 GMT+08:00 zhangxinyu1 <notifications@github.com>:\n\n> The motivation of 'materialised view' is in issue #5218\n> <https://github.com/druid-io/druid/issues/5218> .\n> The implementation of 'Materialised View' is diveded into two parts. One\n> is *the management of DerivedDatasource*, and the other is *optimizing\n> query with DerivedDatasource*.\n> Management of DerivedDatasource\n>\n> Each derived-datasource is managed by a derived-datasource supervisor(like\n> kafkaSupervisor).\n> CREATE\n>\n> DerivedDatasource is created when user submits a derived-datasource\n> supervisor. The json file of derived-datasource supervisor should include\n> base datasource name, dimensions and metrics at least. DerivedDatasource\n> name can be setted by users or generated by base datasource name,\n> dimensions and metrics. Segment granularity and query granularity should\n> keep the same with base datasource. The information is stored as metadata\n> of supervisors.\n> MAINTAIN\n>\n> A derived-datasource supervisor should make sure timeline and segment\n> versions are the same with its base datasource (It can sovle the problem\n> about segment version management @himanshug <https://github.com/himanshug>\n> pointed out):\n>\n>    1. When timeline of derived-datasource is less than base-datasource,\n>    supervisor will submit a derived-datasource-index-task. The\n>    derived-datasource-index-task is a hadoop-index-task. The only difference\n>    is that the version of segments generated by derived-datasource-index-task\n>    is not the time when task is submitted, but the related base datasource\n>    segments version.\n>    2. If the timeline of derived-datasource is more than base-datasource,\n>    supervisor will set used=false and submit kill tasks for those segments.\n>    3. Once supervisor find the segment version of derived-datasource is\n>    different from its related base-datasource in the same interval, supervisor\n>    will set used=false and submit a derived-datasource-index-task for that\n>    interval (This idea comes from @jihoonson\n>    <https://github.com/jihoonson> 's suggestions).\n>\n> DELETE\n>\n> When the supervisor is shutdown or resubmited, the previous data of the\n> derived-datasource will be deleted.\n> When the base datasource is disable, all its derived datasource supervisor\n> will be shutdown.\n> Optimize query with DerivedDatasource\n>\n> A MaterialisedViewQueryRunner is added in method applyPreMergeDecoration()\n> of FluentQueryRunnerBuilder, such as\n>\n>     public FluentQueryRunner applyPreMergeDecoration()\n>     {\n>       return from(\n>           new UnionQueryRunner<T>(\n>               new MaterialisedViewQueryRunner(\n>                   toolChest.preMergeQueryDecoration(\n>                       baseRunner\n>                   )\n>               )\n>           )\n>       );\n>     }\n>\n> In MaterialisedViewQueryRunner, query is rewritten into union queries of\n> derived-datasource and base datasource and merged results of all queries\n> before returnning. The process of optimization is as follows.\n>\n>    1. Check if the datasource is a table datasource. If not, do not\n>    optimize.\n>    2. Check if the datasource has derived-datasources, and find the\n>    derived-datasources which involve the dimensions and metrics the query\n>    need. If no derived datasource meet the condition, do not optimize.\n>    3. Split query interval by segment granularity into sub-intervals, and\n>    for each sub-interval, find out the derived-datasource which has the\n>    minimum amount of data. Then, replace the query datasource by the\n>    derived-datasource in the sub-interval.\n>\n> In this way, query can be partially covered by the derived datasource and\n> partially by the original one, and the problem @nishantmonu51\n> <https://github.com/nishantmonu51> pointed out is solved.\n>\n> —\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/druid-io/druid/issues/5304>, or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AeIiBsNt_k-FEtNf8ZYlzttyUPK0HK4Rks5tPtgogaJpZM4Rx9dy>\n> .\n>\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/361562215/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/361642416","html_url":"https://github.com/apache/druid/pull/5002#issuecomment-361642416","issue_url":"https://api.github.com/repos/apache/druid/issues/5002","id":361642416,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MTY0MjQxNg==","user":{"login":"kyleboyle","id":6877108,"node_id":"MDQ6VXNlcjY4NzcxMDg=","avatar_url":"https://avatars.githubusercontent.com/u/6877108?v=4","gravatar_id":"","url":"https://api.github.com/users/kyleboyle","html_url":"https://github.com/kyleboyle","followers_url":"https://api.github.com/users/kyleboyle/followers","following_url":"https://api.github.com/users/kyleboyle/following{/other_user}","gists_url":"https://api.github.com/users/kyleboyle/gists{/gist_id}","starred_url":"https://api.github.com/users/kyleboyle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kyleboyle/subscriptions","organizations_url":"https://api.github.com/users/kyleboyle/orgs","repos_url":"https://api.github.com/users/kyleboyle/repos","events_url":"https://api.github.com/users/kyleboyle/events{/privacy}","received_events_url":"https://api.github.com/users/kyleboyle/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-30T16:07:07Z","updated_at":"2018-01-30T16:07:07Z","author_association":"NONE","body":"Would someone be able to compare/contrast using this doubles sketch aggregator versus the existing approxHistogramFold aggregator? thanks","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/361642416/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/361662569","html_url":"https://github.com/apache/druid/issues/3821#issuecomment-361662569","issue_url":"https://api.github.com/repos/apache/druid/issues/3821","id":361662569,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MTY2MjU2OQ==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-30T17:05:52Z","updated_at":"2018-01-30T17:05:52Z","author_association":"CONTRIBUTOR","body":"Fixed by #3855","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/361662569/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/361663306","html_url":"https://github.com/apache/druid/issues/1537#issuecomment-361663306","issue_url":"https://api.github.com/repos/apache/druid/issues/1537","id":361663306,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MTY2MzMwNg==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-30T17:08:12Z","updated_at":"2018-01-30T17:08:12Z","author_association":"CONTRIBUTOR","body":"not relevant with focus on GroupBy V2 implementation availability.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/361663306/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/361664693","html_url":"https://github.com/apache/druid/issues/5238#issuecomment-361664693","issue_url":"https://api.github.com/repos/apache/druid/issues/5238","id":361664693,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MTY2NDY5Mw==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-30T17:12:43Z","updated_at":"2018-01-30T17:30:24Z","author_association":"CONTRIBUTOR","body":"@jihoonson we're hoping to reuse `PrefetchableTextFilesFirehoseFactory` for this. Is there some inherent limitation that requires `PrefetchableTextFilesFirehoseFactory` to work on `TEXT` files only or is it written hardcoded to text data because that was the original use case?\r\nFor example, could it work with sql row set (with possibly byte[] columns) without unnecessarily converting data to text (and base-64 encoding for byte[] columns). In this world, I would imaging that parser to be used in `PrefetchableTextFilesFirehoseFactory` would be made configurable as well.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/361664693/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/361665442","html_url":"https://github.com/apache/druid/issues/5238#issuecomment-361665442","issue_url":"https://api.github.com/repos/apache/druid/issues/5238","id":361665442,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MTY2NTQ0Mg==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-30T17:15:20Z","updated_at":"2018-01-30T17:15:20Z","author_association":"CONTRIBUTOR","body":"I guess it's just because it's the original use case. It would be nice to expand it to support Parquet and ORC files too.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/361665442/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/361672051","html_url":"https://github.com/apache/druid/pull/4509#issuecomment-361672051","issue_url":"https://api.github.com/repos/apache/druid/issues/4509","id":361672051,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MTY3MjA1MQ==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-30T17:36:11Z","updated_at":"2018-01-30T17:36:11Z","author_association":"CONTRIBUTOR","body":"LGTM overall","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/361672051/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/361673581","html_url":"https://github.com/apache/druid/pull/5102#issuecomment-361673581","issue_url":"https://api.github.com/repos/apache/druid/issues/5102","id":361673581,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MTY3MzU4MQ==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-30T17:41:05Z","updated_at":"2018-01-30T17:41:05Z","author_association":"CONTRIBUTOR","body":"@jihoonson is this PR rolling upgrade compatible? In many cases, users will upgrade Overlord first and then later Middle Manager . With Overlord running this patch, is it possible that `runningTasks` endpoint doesn't work when Overlord is restarted and taskType is null because MiddleManager announcements stored in zk wouldn't have it.\r\nIf that is true, we should probably ignore taskType being null in `runningTasks` endpoint instead of a NPE.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/361673581/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/361675876","html_url":"https://github.com/apache/druid/pull/5297#issuecomment-361675876","issue_url":"https://api.github.com/repos/apache/druid/issues/5297","id":361675876,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MTY3NTg3Ng==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-30T17:48:23Z","updated_at":"2018-01-30T17:48:23Z","author_association":"CONTRIBUTOR","body":"@jihoonson will new segments have `NumberedShardSpec` ? if that is true, then even if some of them  are published , they wouldn't overshadow older segments because Broker would notice that not all partitions in the set are available yet ?\r\nWhat am I missing?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/361675876/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/361688250","html_url":"https://github.com/apache/druid/issues/5238#issuecomment-361688250","issue_url":"https://api.github.com/repos/apache/druid/issues/5238","id":361688250,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MTY4ODI1MA==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-30T18:27:28Z","updated_at":"2018-01-30T18:27:28Z","author_association":"CONTRIBUTOR","body":"@himanshug yeah, @gianm is correct. It was due to its original use case. It should be expandable for other file formats.\r\n\r\nBTW, is this proposal for one time ingestion from RDBMS? Last year, I thought about the continuous ingestion from an RDBMS when data is continuously appended to that. For this use case, I think it can be easily implemented with the indexing service using the supervisor. Like kafka indexing service, the RDBMS supervisor keeps track of the offsets where the next task starts to read from. I think this proposal and the RDBMS indexing service what I thought can share some implementations. For example, the indexTask might be able to be used for both one time ingestion and continuous ingestion. @himanshug what do you think?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/361688250/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/361689617","html_url":"https://github.com/apache/druid/pull/5306#issuecomment-361689617","issue_url":"https://api.github.com/repos/apache/druid/issues/5306","id":361689617,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MTY4OTYxNw==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-30T18:31:59Z","updated_at":"2018-01-30T18:31:59Z","author_association":"CONTRIBUTOR","body":":+1:\r\n\r\nhowever, just wanted to note for the record:\r\nanother alternative would be to clean all the other directories as well which is possible given that we generate the intermediate path here and know all the components in the path.\r\n\r\nI usually like paths to give information, current path gives some information about what indexing task would've caused to create those files etc. For example if the directories are not cleaned up, then you would have some idea about which tasks might have created them and what went wrong. In this particular case, it isn't really important though because temp dir creation/deletion happens so closely. hence, I'm not as strongly opinionated on above alternative.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/361689617/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/361707026","html_url":"https://github.com/apache/druid/pull/5102#issuecomment-361707026","issue_url":"https://api.github.com/repos/apache/druid/issues/5102","id":361707026,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MTcwNzAyNg==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-30T19:29:52Z","updated_at":"2018-01-30T19:29:52Z","author_association":"CONTRIBUTOR","body":"@himanshug thanks for finding it! Raised https://github.com/druid-io/druid/pull/5309.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/361707026/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/361715333","html_url":"https://github.com/apache/druid/issues/5238#issuecomment-361715333","issue_url":"https://api.github.com/repos/apache/druid/issues/5238","id":361715333,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MTcxNTMzMw==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-30T19:57:18Z","updated_at":"2018-01-30T19:57:18Z","author_association":"CONTRIBUTOR","body":"@jihoonson yes, this proposal is about supporting ad-hoc batch ingestion where user would be explicitly submitting the local indexing task. users can automate and submit these jobs periodically based on data production inside their ETL pipelines that push data to RDBMS.\r\nhowever, I would be in general be supportive about \"continuous/automatic\" ingestion from RDBMS if there is a use case and that helps users.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/361715333/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/361729156","html_url":"https://github.com/apache/druid/pull/5297#issuecomment-361729156","issue_url":"https://api.github.com/repos/apache/druid/issues/5297","id":361729156,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MTcyOTE1Ng==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-30T20:48:09Z","updated_at":"2018-01-30T20:48:09Z","author_association":"CONTRIBUTOR","body":"@himanshug, let me suppose an use case of kafka indexing service + compaction. The segments created by kafkaIndexTask will have the `NumberedShardSpec` which has 0 core partition (`partitions` in `NumberedShardSpec`). This means, the broker can't notice that all segments are compacted or not. \r\n\r\nThis can happen even for batch ingestion. For example, if some more data is appended to an existing dataSource, the partition id (`partitionNum` in `NumberedShardSpec`) can be increased beyond the number of core partitions (`partitions` in `NumberedShardSpec`).","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/361729156/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/361743097","html_url":"https://github.com/apache/druid/pull/5297#issuecomment-361743097","issue_url":"https://api.github.com/repos/apache/druid/issues/5297","id":361743097,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MTc0MzA5Nw==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-30T21:38:57Z","updated_at":"2018-01-30T21:38:57Z","author_association":"CONTRIBUTOR","body":"my understanding is that, if compaction produces a brand new partition set with a new version AND `NumberedShardSpec`  (with `partitions > 0` and `partitionNum < partitions` for all partitions) then Broker shouldn't consider old data overshadowed unless all segments in partition set produced by compaction are loaded.\r\nI thought that `compaction` would fulfill above conditions.\r\n\r\notherwise, yes ... partition set would be assumed complete with any number of segments available.\r\n\r\nHowever, IndexTask is more general than `compation` so I think the PR still makes sense.\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/361743097/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/361746811","html_url":"https://github.com/apache/druid/pull/5297#issuecomment-361746811","issue_url":"https://api.github.com/repos/apache/druid/issues/5297","id":361746811,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MTc0NjgxMQ==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-30T21:52:52Z","updated_at":"2018-01-30T21:52:52Z","author_association":"CONTRIBUTOR","body":"Ah, I got your point. The new segments created by a compactionTask will have the `NumberedShardSpec` with `partitions` > 0 only when the task runs with the perfect rollup mode (`forceGuaranteedRollup` should be set in TuningConfig). This is possible since compactionTask allows for users to specify any options in the tuningConfig. In this case, the new segments won't overshadow old segments until the all segments in each partition are published. \r\n\r\nHowever, if `forceGuaranteedRollup` is not set, the compactionTask also generates segments having the `NumberedShardSpec` with 0 `partitions`.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/361746811/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/361771982","html_url":"https://github.com/apache/druid/pull/5002#issuecomment-361771982","issue_url":"https://api.github.com/repos/apache/druid/issues/5002","id":361771982,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MTc3MTk4Mg==","user":{"login":"AlexanderSaydakov","id":13126686,"node_id":"MDQ6VXNlcjEzMTI2Njg2","avatar_url":"https://avatars.githubusercontent.com/u/13126686?v=4","gravatar_id":"","url":"https://api.github.com/users/AlexanderSaydakov","html_url":"https://github.com/AlexanderSaydakov","followers_url":"https://api.github.com/users/AlexanderSaydakov/followers","following_url":"https://api.github.com/users/AlexanderSaydakov/following{/other_user}","gists_url":"https://api.github.com/users/AlexanderSaydakov/gists{/gist_id}","starred_url":"https://api.github.com/users/AlexanderSaydakov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/AlexanderSaydakov/subscriptions","organizations_url":"https://api.github.com/users/AlexanderSaydakov/orgs","repos_url":"https://api.github.com/users/AlexanderSaydakov/repos","events_url":"https://api.github.com/users/AlexanderSaydakov/events{/privacy}","received_events_url":"https://api.github.com/users/AlexanderSaydakov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-30T23:36:56Z","updated_at":"2018-01-30T23:36:56Z","author_association":"CONTRIBUTOR","body":"I didn't study the approximateHistogram in detail. I see the following\nclaims in the documentation: \"there are no formal error bounds on the\napproximation\" and \"the algorithm only works well if the data is randomly\ndistributed\" (horrible approximation for sorted input). Both these things\ntrigger a loud alarm in my head. I would go so far as to say that any\napproximate method is useless if you don't know how accurate the result is.\n\nOn Tue, Jan 30, 2018 at 8:07 AM, Kyle Boyle <notifications@github.com>\nwrote:\n\n> Would someone be able to compare/contrast using this doubles sketch\n> aggregator versus the existing approxHistogramFold aggregator? thanks\n>\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/druid-io/druid/pull/5002#issuecomment-361642416>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/AMhMHolFwTSAbOmb_uzr4LyCbAikjlwbks5tPz48gaJpZM4QE9qL>\n> .\n>\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/361771982/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/361772545","html_url":"https://github.com/apache/druid/pull/5002#issuecomment-361772545","issue_url":"https://api.github.com/repos/apache/druid/issues/5002","id":361772545,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MTc3MjU0NQ==","user":{"login":"jon-wei","id":8729063,"node_id":"MDQ6VXNlcjg3MjkwNjM=","avatar_url":"https://avatars.githubusercontent.com/u/8729063?v=4","gravatar_id":"","url":"https://api.github.com/users/jon-wei","html_url":"https://github.com/jon-wei","followers_url":"https://api.github.com/users/jon-wei/followers","following_url":"https://api.github.com/users/jon-wei/following{/other_user}","gists_url":"https://api.github.com/users/jon-wei/gists{/gist_id}","starred_url":"https://api.github.com/users/jon-wei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jon-wei/subscriptions","organizations_url":"https://api.github.com/users/jon-wei/orgs","repos_url":"https://api.github.com/users/jon-wei/repos","events_url":"https://api.github.com/users/jon-wei/events{/privacy}","received_events_url":"https://api.github.com/users/jon-wei/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-30T23:40:05Z","updated_at":"2018-01-30T23:40:05Z","author_association":"CONTRIBUTOR","body":"@AlexanderSaydakov can you provide docs for this feature? I'd like to provide a link to them in the 0.12.0 release notes","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/361772545/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/361775801","html_url":"https://github.com/apache/druid/pull/5002#issuecomment-361775801","issue_url":"https://api.github.com/repos/apache/druid/issues/5002","id":361775801,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MTc3NTgwMQ==","user":{"login":"AlexanderSaydakov","id":13126686,"node_id":"MDQ6VXNlcjEzMTI2Njg2","avatar_url":"https://avatars.githubusercontent.com/u/13126686?v=4","gravatar_id":"","url":"https://api.github.com/users/AlexanderSaydakov","html_url":"https://github.com/AlexanderSaydakov","followers_url":"https://api.github.com/users/AlexanderSaydakov/followers","following_url":"https://api.github.com/users/AlexanderSaydakov/following{/other_user}","gists_url":"https://api.github.com/users/AlexanderSaydakov/gists{/gist_id}","starred_url":"https://api.github.com/users/AlexanderSaydakov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/AlexanderSaydakov/subscriptions","organizations_url":"https://api.github.com/users/AlexanderSaydakov/orgs","repos_url":"https://api.github.com/users/AlexanderSaydakov/repos","events_url":"https://api.github.com/users/AlexanderSaydakov/events{/privacy}","received_events_url":"https://api.github.com/users/AlexanderSaydakov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-30T23:56:34Z","updated_at":"2018-01-30T23:56:34Z","author_association":"CONTRIBUTOR","body":"I need to work on the docs. So far the datasketches module had the\ncount-distinct Theta sketch aggregator. Now we have the quantiles sketch,\ntuple sketch pull request and HLL sketch (also count-distinct, but super\ncompact) ready to be submitted.\nThe page for Theta sketch aggregator is already quite big, perhaps we need\nto have an index page and separate pages for each sketch type.\n\nOn Tue, Jan 30, 2018 at 3:40 PM, Jonathan Wei <notifications@github.com>\nwrote:\n\n> @AlexanderSaydakov <https://github.com/alexandersaydakov> can you provide\n> docs for this feature? I'd like to provide a link to them in the 0.12.0\n> release notes\n>\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/druid-io/druid/pull/5002#issuecomment-361772545>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/AMhMHrP5Ph1XW3q9-XyGWmhoB2LdGvOAks5tP6hkgaJpZM4QE9qL>\n> .\n>\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/361775801/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/361776245","html_url":"https://github.com/apache/druid/pull/5148#issuecomment-361776245","issue_url":"https://api.github.com/repos/apache/druid/issues/5148","id":361776245,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MTc3NjI0NQ==","user":{"login":"AlexanderSaydakov","id":13126686,"node_id":"MDQ6VXNlcjEzMTI2Njg2","avatar_url":"https://avatars.githubusercontent.com/u/13126686?v=4","gravatar_id":"","url":"https://api.github.com/users/AlexanderSaydakov","html_url":"https://github.com/AlexanderSaydakov","followers_url":"https://api.github.com/users/AlexanderSaydakov/followers","following_url":"https://api.github.com/users/AlexanderSaydakov/following{/other_user}","gists_url":"https://api.github.com/users/AlexanderSaydakov/gists{/gist_id}","starred_url":"https://api.github.com/users/AlexanderSaydakov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/AlexanderSaydakov/subscriptions","organizations_url":"https://api.github.com/users/AlexanderSaydakov/orgs","repos_url":"https://api.github.com/users/AlexanderSaydakov/repos","events_url":"https://api.github.com/users/AlexanderSaydakov/events{/privacy}","received_events_url":"https://api.github.com/users/AlexanderSaydakov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-30T23:59:02Z","updated_at":"2018-01-30T23:59:02Z","author_association":"CONTRIBUTOR","body":"I think I have addressed the review points. Perhaps, someone could have another look?\r\nThanks.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/361776245/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/361779861","html_url":"https://github.com/apache/druid/pull/5297#issuecomment-361779861","issue_url":"https://api.github.com/repos/apache/druid/issues/5297","id":361779861,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MTc3OTg2MQ==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-31T00:16:50Z","updated_at":"2018-01-31T00:16:50Z","author_association":"CONTRIBUTOR","body":"https://github.com/druid-io/druid/pull/5261 will cause conflicts with this PR, and I don't want to block https://github.com/druid-io/druid/pull/5261. I'll update this PR once https://github.com/druid-io/druid/pull/5261 is merged.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/361779861/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/361781380","html_url":"https://github.com/apache/druid/pull/5311#issuecomment-361781380","issue_url":"https://api.github.com/repos/apache/druid/issues/5311","id":361781380,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MTc4MTM4MA==","user":{"login":"chetweger","id":4636240,"node_id":"MDQ6VXNlcjQ2MzYyNDA=","avatar_url":"https://avatars.githubusercontent.com/u/4636240?v=4","gravatar_id":"","url":"https://api.github.com/users/chetweger","html_url":"https://github.com/chetweger","followers_url":"https://api.github.com/users/chetweger/followers","following_url":"https://api.github.com/users/chetweger/following{/other_user}","gists_url":"https://api.github.com/users/chetweger/gists{/gist_id}","starred_url":"https://api.github.com/users/chetweger/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/chetweger/subscriptions","organizations_url":"https://api.github.com/users/chetweger/orgs","repos_url":"https://api.github.com/users/chetweger/repos","events_url":"https://api.github.com/users/chetweger/events{/privacy}","received_events_url":"https://api.github.com/users/chetweger/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-31T00:25:27Z","updated_at":"2018-01-31T00:27:09Z","author_association":"NONE","body":"Doing a POC to fix some classpath issues caused by guice.  Meant to put this PR on my own fork.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/361781380/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/361823111","html_url":"https://github.com/apache/druid/issues/5313#issuecomment-361823111","issue_url":"https://api.github.com/repos/apache/druid/issues/5313","id":361823111,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MTgyMzExMQ==","user":{"login":"QiuMM","id":15156517,"node_id":"MDQ6VXNlcjE1MTU2NTE3","avatar_url":"https://avatars.githubusercontent.com/u/15156517?v=4","gravatar_id":"","url":"https://api.github.com/users/QiuMM","html_url":"https://github.com/QiuMM","followers_url":"https://api.github.com/users/QiuMM/followers","following_url":"https://api.github.com/users/QiuMM/following{/other_user}","gists_url":"https://api.github.com/users/QiuMM/gists{/gist_id}","starred_url":"https://api.github.com/users/QiuMM/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/QiuMM/subscriptions","organizations_url":"https://api.github.com/users/QiuMM/orgs","repos_url":"https://api.github.com/users/QiuMM/repos","events_url":"https://api.github.com/users/QiuMM/events{/privacy}","received_events_url":"https://api.github.com/users/QiuMM/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-31T04:50:11Z","updated_at":"2018-01-31T04:50:11Z","author_association":"MEMBER","body":"In the log, we can see the timestamp is 1503551029000, not null.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/361823111/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/361838678","html_url":"https://github.com/apache/druid/issues/5305#issuecomment-361838678","issue_url":"https://api.github.com/repos/apache/druid/issues/5305","id":361838678,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MTgzODY3OA==","user":{"login":"zhangxinyu1","id":12528894,"node_id":"MDQ6VXNlcjEyNTI4ODk0","avatar_url":"https://avatars.githubusercontent.com/u/12528894?v=4","gravatar_id":"","url":"https://api.github.com/users/zhangxinyu1","html_url":"https://github.com/zhangxinyu1","followers_url":"https://api.github.com/users/zhangxinyu1/followers","following_url":"https://api.github.com/users/zhangxinyu1/following{/other_user}","gists_url":"https://api.github.com/users/zhangxinyu1/gists{/gist_id}","starred_url":"https://api.github.com/users/zhangxinyu1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zhangxinyu1/subscriptions","organizations_url":"https://api.github.com/users/zhangxinyu1/orgs","repos_url":"https://api.github.com/users/zhangxinyu1/repos","events_url":"https://api.github.com/users/zhangxinyu1/events{/privacy}","received_events_url":"https://api.github.com/users/zhangxinyu1/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-31T06:39:04Z","updated_at":"2018-01-31T06:39:04Z","author_association":"CONTRIBUTOR","body":"Auto kill feature is very useful for us!\r\nMaybe we can set the time or the frequency to decide when deleting the unused data, like 'crontab' in linux. ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/361838678/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/361951819","html_url":"https://github.com/apache/druid/pull/5261#issuecomment-361951819","issue_url":"https://api.github.com/repos/apache/druid/issues/5261","id":361951819,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MTk1MTgxOQ==","user":{"login":"kevinconaway","id":6921953,"node_id":"MDQ6VXNlcjY5MjE5NTM=","avatar_url":"https://avatars.githubusercontent.com/u/6921953?v=4","gravatar_id":"","url":"https://api.github.com/users/kevinconaway","html_url":"https://github.com/kevinconaway","followers_url":"https://api.github.com/users/kevinconaway/followers","following_url":"https://api.github.com/users/kevinconaway/following{/other_user}","gists_url":"https://api.github.com/users/kevinconaway/gists{/gist_id}","starred_url":"https://api.github.com/users/kevinconaway/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kevinconaway/subscriptions","organizations_url":"https://api.github.com/users/kevinconaway/orgs","repos_url":"https://api.github.com/users/kevinconaway/repos","events_url":"https://api.github.com/users/kevinconaway/events{/privacy}","received_events_url":"https://api.github.com/users/kevinconaway/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-31T14:40:18Z","updated_at":"2018-01-31T14:40:18Z","author_association":"CONTRIBUTOR","body":"> windowPeriod, versioningPolicy, rejectionPolicyFactory, persistThreadPriority, and mergeThreadPriority are not used in AppenderatorDriverRealtimeIndexTask. Please log a warning if they are set with AppenderatorDriverRealtimeIndexTask.\r\n\r\n👍 \r\n\r\n> RealtimeIndexTask is mainly used by Tranquility. Do you also have a plan to update Tranquility to support this new task type?\r\n\r\nNo, we don't really use Tranquility so I'm not as familiar with the code base (or Scala for that matter).\r\n\r\n> Have you had a chance to test in some production environments?\r\n\r\nWe have been running a previous incarnation of this change (#4774) for months now without any issues.  I've been testing this locally and in our staging environment and its performing identically thus far.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/361951819/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/361965095","html_url":"https://github.com/apache/druid/pull/5148#issuecomment-361965095","issue_url":"https://api.github.com/repos/apache/druid/issues/5148","id":361965095,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MTk2NTA5NQ==","user":{"login":"b-slim","id":7376396,"node_id":"MDQ6VXNlcjczNzYzOTY=","avatar_url":"https://avatars.githubusercontent.com/u/7376396?v=4","gravatar_id":"","url":"https://api.github.com/users/b-slim","html_url":"https://github.com/b-slim","followers_url":"https://api.github.com/users/b-slim/followers","following_url":"https://api.github.com/users/b-slim/following{/other_user}","gists_url":"https://api.github.com/users/b-slim/gists{/gist_id}","starred_url":"https://api.github.com/users/b-slim/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/b-slim/subscriptions","organizations_url":"https://api.github.com/users/b-slim/orgs","repos_url":"https://api.github.com/users/b-slim/repos","events_url":"https://api.github.com/users/b-slim/events{/privacy}","received_events_url":"https://api.github.com/users/b-slim/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-31T15:22:16Z","updated_at":"2018-01-31T15:22:16Z","author_association":"CONTRIBUTOR","body":"@AlexanderSaydakov can you add basic documentation on how to use this and how is different from other sketches? ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/361965095/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/362016260","html_url":"https://github.com/apache/druid/pull/5308#issuecomment-362016260","issue_url":"https://api.github.com/repos/apache/druid/issues/5308","id":362016260,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MjAxNjI2MA==","user":{"login":"leventov","id":609240,"node_id":"MDQ6VXNlcjYwOTI0MA==","avatar_url":"https://avatars.githubusercontent.com/u/609240?v=4","gravatar_id":"","url":"https://api.github.com/users/leventov","html_url":"https://github.com/leventov","followers_url":"https://api.github.com/users/leventov/followers","following_url":"https://api.github.com/users/leventov/following{/other_user}","gists_url":"https://api.github.com/users/leventov/gists{/gist_id}","starred_url":"https://api.github.com/users/leventov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leventov/subscriptions","organizations_url":"https://api.github.com/users/leventov/orgs","repos_url":"https://api.github.com/users/leventov/repos","events_url":"https://api.github.com/users/leventov/events{/privacy}","received_events_url":"https://api.github.com/users/leventov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-31T17:56:33Z","updated_at":"2018-01-31T17:56:33Z","author_association":"MEMBER","body":"Please follow 3-day rule for non-trivial PRs","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/362016260/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/362056284","html_url":"https://github.com/apache/druid/pull/5278#issuecomment-362056284","issue_url":"https://api.github.com/repos/apache/druid/issues/5278","id":362056284,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MjA1NjI4NA==","user":{"login":"nishantmonu51","id":5023786,"node_id":"MDQ6VXNlcjUwMjM3ODY=","avatar_url":"https://avatars.githubusercontent.com/u/5023786?v=4","gravatar_id":"","url":"https://api.github.com/users/nishantmonu51","html_url":"https://github.com/nishantmonu51","followers_url":"https://api.github.com/users/nishantmonu51/followers","following_url":"https://api.github.com/users/nishantmonu51/following{/other_user}","gists_url":"https://api.github.com/users/nishantmonu51/gists{/gist_id}","starred_url":"https://api.github.com/users/nishantmonu51/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nishantmonu51/subscriptions","organizations_url":"https://api.github.com/users/nishantmonu51/orgs","repos_url":"https://api.github.com/users/nishantmonu51/repos","events_url":"https://api.github.com/users/nishantmonu51/events{/privacy}","received_events_url":"https://api.github.com/users/nishantmonu51/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-31T20:12:24Z","updated_at":"2018-01-31T20:12:24Z","author_association":"MEMBER","body":"@leventov: handled comments","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/362056284/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/362064899","html_url":"https://github.com/apache/druid/issues/5305#issuecomment-362064899","issue_url":"https://api.github.com/repos/apache/druid/issues/5305","id":362064899,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MjA2NDg5OQ==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-31T20:45:43Z","updated_at":"2018-01-31T20:45:43Z","author_association":"CONTRIBUTOR","body":"I wonder if a similar goal can be achieved by checking segment intervals rather than adding a new column in the metastore. It means, the coordinator can check the segment interval is old enough and make sure that the segment interval is not overlapped with the configured \"safe\" period (like dropRules). I guess usually old segments are marked as unused, and will be killed at some point. In this use case, checking segment intervals looks enough. So, I think it might be better because we can avoid adding a new column which is not compatible with old versions. What do you think?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/362064899/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/362085483","html_url":"https://github.com/apache/druid/pull/5315#issuecomment-362085483","issue_url":"https://api.github.com/repos/apache/druid/issues/5315","id":362085483,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MjA4NTQ4Mw==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-31T22:00:50Z","updated_at":"2018-01-31T22:01:05Z","author_association":"CONTRIBUTOR","body":"@nishantmonu51 thanks for the review ... I'll reply/resolve comments shortly.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/362085483/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/362087229","html_url":"https://github.com/apache/druid/issues/5305#issuecomment-362087229","issue_url":"https://api.github.com/repos/apache/druid/issues/5305","id":362087229,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MjA4NzIyOQ==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-31T22:07:10Z","updated_at":"2018-01-31T22:07:10Z","author_association":"CONTRIBUTOR","body":"@jihoonson I don't really want to couple rules with auto-kill and have the feeling that implementation would become unnecessarily complex that way... also there are many different ways a segment can get disabled, having a column that clearly tells when the segment was disabled allows very simple semantics without worrying about all the different ways user could've disabled the segment.\r\nIn #5315 only thing is that users need to run the ALTER TABLE statement **anytime** before upgrade and everything else is taken care of. it could be run without taking the cluster down or upgrading any of the nodes etc.\r\nI'll see if it makes sense to auto-execute `ALTER TABLE` on coordinator/overlord startup so that there are no manual steps in the upgrade. However, considering the simplicity , I was thinking of not automating it, but we'll see.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/362087229/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/362087321","html_url":"https://github.com/apache/druid/pull/4509#issuecomment-362087321","issue_url":"https://api.github.com/repos/apache/druid/issues/4509","id":362087321,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MjA4NzMyMQ==","user":{"login":"jon-wei","id":8729063,"node_id":"MDQ6VXNlcjg3MjkwNjM=","avatar_url":"https://avatars.githubusercontent.com/u/8729063?v=4","gravatar_id":"","url":"https://api.github.com/users/jon-wei","html_url":"https://github.com/jon-wei","followers_url":"https://api.github.com/users/jon-wei/followers","following_url":"https://api.github.com/users/jon-wei/following{/other_user}","gists_url":"https://api.github.com/users/jon-wei/gists{/gist_id}","starred_url":"https://api.github.com/users/jon-wei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jon-wei/subscriptions","organizations_url":"https://api.github.com/users/jon-wei/orgs","repos_url":"https://api.github.com/users/jon-wei/repos","events_url":"https://api.github.com/users/jon-wei/events{/privacy}","received_events_url":"https://api.github.com/users/jon-wei/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-31T22:07:34Z","updated_at":"2018-01-31T22:07:34Z","author_association":"CONTRIBUTOR","body":"@leventov @himanshug @gianm \r\n\r\nThanks for the review so far, after revisting this, I agree with @leventov's comment here: https://github.com/druid-io/druid/pull/4509#pullrequestreview-48229913\r\n\r\nI'm closing this PR in favor of #5312 which rejects rows with unparseable numeric dimensions","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/362087321/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/362109197","html_url":"https://github.com/apache/druid/issues/5305#issuecomment-362109197","issue_url":"https://api.github.com/repos/apache/druid/issues/5305","id":362109197,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MjEwOTE5Nw==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-01-31T23:44:58Z","updated_at":"2018-01-31T23:44:58Z","author_association":"CONTRIBUTOR","body":"I didn’t mean to couple rules and auto-kill feature. I meant, auto-kill feature can be implemented with segment intervals like dropRule. \r\n\r\n> there are many different ways a segment can get disabled, having a column that clearly tells when the segment was disabled allows very simple semantics without worrying about all the different ways user could've disabled the segment.\r\n\r\nI understand what you mean and it sounds making sense. I’ll look into the PR as well. ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/362109197/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/362146088","html_url":"https://github.com/apache/druid/pull/5312#issuecomment-362146088","issue_url":"https://api.github.com/repos/apache/druid/issues/5312","id":362146088,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MjE0NjA4OA==","user":{"login":"jon-wei","id":8729063,"node_id":"MDQ6VXNlcjg3MjkwNjM=","avatar_url":"https://avatars.githubusercontent.com/u/8729063?v=4","gravatar_id":"","url":"https://api.github.com/users/jon-wei","html_url":"https://github.com/jon-wei","followers_url":"https://api.github.com/users/jon-wei/followers","following_url":"https://api.github.com/users/jon-wei/following{/other_user}","gists_url":"https://api.github.com/users/jon-wei/gists{/gist_id}","starred_url":"https://api.github.com/users/jon-wei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jon-wei/subscriptions","organizations_url":"https://api.github.com/users/jon-wei/orgs","repos_url":"https://api.github.com/users/jon-wei/repos","events_url":"https://api.github.com/users/jon-wei/events{/privacy}","received_events_url":"https://api.github.com/users/jon-wei/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-02-01T03:18:22Z","updated_at":"2018-02-01T03:20:44Z","author_association":"CONTRIBUTOR","body":"@gianm I addressed your comments aside from the ones regarding rejecting entire rows on parse errors vs. replacing unparseable values with a default value.\r\n\r\nI went with the row rejection approach since I think ingesting a partially correct row is introducing more \"corruption\" into the data than just throwing the row away, on some datasets zero could be a significant value for a numeric dimension and adding the unparseable rows would lead to confusing results. \r\n\r\nI saw that the metrics handle parse exceptions by skipping the aggregator, but I also lean towards throwing entire rows away in that case (maybe you have a set of metrics that are somewhat related/correlated, like maybe you have a metric for a total count + a metric for a related flow rate, if there's a parse error in one of the values I think it's arguably weird to ingest the row), that would require a significant refactor though I believe.\r\n\r\nI don't feel super strongly about this though, and it's not absolutely clear to me that \"partially correct\" rows are better/worse than missing rows, so I'll defer to your judgment or the community's if others wish to comment on this.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/362146088/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/362149119","html_url":"https://github.com/apache/druid/pull/5312#issuecomment-362149119","issue_url":"https://api.github.com/repos/apache/druid/issues/5312","id":362149119,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MjE0OTExOQ==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-02-01T03:40:43Z","updated_at":"2018-02-01T03:40:43Z","author_association":"CONTRIBUTOR","body":"@jon-wei my feeling is that if you want total integrity then that is what `reportParseExceptions` is for. You will know for sure if you get a bad value because ingestion will just stop and wait for you to fix it. If you don't set reportParseExceptions then I think it makes sense to ingest whatever columns we can ingest. It means that for queries that don't touch this column then they will be more correct (since all other columns are fine). Queries that do touch this column will be worse off, but there are more other-columns than this-columns, so I think the balance is in favor of zeroing out the column and keeping the rest of the row.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/362149119/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/362353575","html_url":"https://github.com/apache/druid/issues/5305#issuecomment-362353575","issue_url":"https://api.github.com/repos/apache/druid/issues/5305","id":362353575,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MjM1MzU3NQ==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-02-01T18:12:26Z","updated_at":"2018-02-01T18:12:26Z","author_association":"CONTRIBUTOR","body":"> Auto kill feature is very useful for us!\r\nMaybe we can set the time or the frequency to decide when deleting the unused data, like 'crontab' in linux.\r\n\r\n@zhangxinyu1 that wouldn't solve the problem for most of our users whose \"frequency\" would be in hours and not in weeks. Also, it is always possible that auto-kill executes immediately after you accidentally disabled segments.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/362353575/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/362367042","html_url":"https://github.com/apache/druid/issues/5319#issuecomment-362367042","issue_url":"https://api.github.com/repos/apache/druid/issues/5319","id":362367042,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MjM2NzA0Mg==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-02-01T18:59:41Z","updated_at":"2018-02-01T18:59:41Z","author_association":"CONTRIBUTOR","body":"It should be ok in groupBy v2 since v2 uses merge buffers, not processing buffers, and those come from a limited-size pool.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/362367042/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/362370378","html_url":"https://github.com/apache/druid/issues/5319#issuecomment-362370378","issue_url":"https://api.github.com/repos/apache/druid/issues/5319","id":362370378,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MjM3MDM3OA==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-02-01T19:11:23Z","updated_at":"2018-02-01T19:11:23Z","author_association":"CONTRIBUTOR","body":"@gianm thanks, good to know that, so one workaround available is to migrate to groupBy-v2 which might not be possible immediately in current user scenario for various reasons.\r\n\r\nthat said, even if things are fixed in query implementation ... it is good to have a hard limit inside intermediate-processing-pool itself just in case there were bugs in the code using intermediate-processing-pool. \r\nI hope that is alright with you ?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/362370378/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/362371657","html_url":"https://github.com/apache/druid/issues/5319#issuecomment-362371657","issue_url":"https://api.github.com/repos/apache/druid/issues/5319","id":362371657,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MjM3MTY1Nw==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-02-01T19:15:49Z","updated_at":"2018-02-01T19:15:49Z","author_association":"CONTRIBUTOR","body":"> it is good to have a hard limit inside intermediate-processing-pool itself just in case there were bugs in the code using intermediate-processing-pool.\r\n\r\nBlockingPool is the limited-size pool and it might be better for this use case.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/362371657/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/362376199","html_url":"https://github.com/apache/druid/issues/5319#issuecomment-362376199","issue_url":"https://api.github.com/repos/apache/druid/issues/5319","id":362376199,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MjM3NjE5OQ==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-02-01T19:31:35Z","updated_at":"2018-02-01T19:31:35Z","author_association":"CONTRIBUTOR","body":"I think it would be fine to switch the intermediate pool to a BlockingPool (same as merge buffers)","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/362376199/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/362403071","html_url":"https://github.com/apache/druid/issues/5319#issuecomment-362403071","issue_url":"https://api.github.com/repos/apache/druid/issues/5319","id":362403071,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MjQwMzA3MQ==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-02-01T21:11:47Z","updated_at":"2018-02-01T21:11:47Z","author_association":"CONTRIBUTOR","body":"yeah, I'm ok with using `BlockingPool` to enable that too.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/362403071/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/362406406","html_url":"https://github.com/apache/druid/pull/5261#issuecomment-362406406","issue_url":"https://api.github.com/repos/apache/druid/issues/5261","id":362406406,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MjQwNjQwNg==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-02-01T21:24:23Z","updated_at":"2018-02-01T21:24:23Z","author_association":"CONTRIBUTOR","body":"Hi @kevinconaway, would you let me know when you're available for finishing this PR? I'm asking because https://github.com/druid-io/druid/pull/5297 is a blocker issue for 0.12.0 which will cause conflicts with this PR. I think it would be easier for me to resolve the conflicts because I reviewed this PR, so I'm waiting for this issue to be merged.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/362406406/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/362407117","html_url":"https://github.com/apache/druid/pull/5261#issuecomment-362407117","issue_url":"https://api.github.com/repos/apache/druid/issues/5261","id":362407117,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MjQwNzExNw==","user":{"login":"kevinconaway","id":6921953,"node_id":"MDQ6VXNlcjY5MjE5NTM=","avatar_url":"https://avatars.githubusercontent.com/u/6921953?v=4","gravatar_id":"","url":"https://api.github.com/users/kevinconaway","html_url":"https://github.com/kevinconaway","followers_url":"https://api.github.com/users/kevinconaway/followers","following_url":"https://api.github.com/users/kevinconaway/following{/other_user}","gists_url":"https://api.github.com/users/kevinconaway/gists{/gist_id}","starred_url":"https://api.github.com/users/kevinconaway/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kevinconaway/subscriptions","organizations_url":"https://api.github.com/users/kevinconaway/orgs","repos_url":"https://api.github.com/users/kevinconaway/repos","events_url":"https://api.github.com/users/kevinconaway/events{/privacy}","received_events_url":"https://api.github.com/users/kevinconaway/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-02-01T21:26:48Z","updated_at":"2018-02-01T21:26:48Z","author_association":"CONTRIBUTOR","body":"I will submit the changes tomorrow, is that OK?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/362407117/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/362407916","html_url":"https://github.com/apache/druid/pull/5261#issuecomment-362407916","issue_url":"https://api.github.com/repos/apache/druid/issues/5261","id":362407916,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MjQwNzkxNg==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-02-01T21:29:36Z","updated_at":"2018-02-01T21:29:36Z","author_association":"CONTRIBUTOR","body":"Yes, it is. Thanks!","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/362407916/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/362418459","html_url":"https://github.com/apache/druid/pull/5312#issuecomment-362418459","issue_url":"https://api.github.com/repos/apache/druid/issues/5312","id":362418459,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MjQxODQ1OQ==","user":{"login":"jon-wei","id":8729063,"node_id":"MDQ6VXNlcjg3MjkwNjM=","avatar_url":"https://avatars.githubusercontent.com/u/8729063?v=4","gravatar_id":"","url":"https://api.github.com/users/jon-wei","html_url":"https://github.com/jon-wei","followers_url":"https://api.github.com/users/jon-wei/followers","following_url":"https://api.github.com/users/jon-wei/following{/other_user}","gists_url":"https://api.github.com/users/jon-wei/gists{/gist_id}","starred_url":"https://api.github.com/users/jon-wei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jon-wei/subscriptions","organizations_url":"https://api.github.com/users/jon-wei/orgs","repos_url":"https://api.github.com/users/jon-wei/repos","events_url":"https://api.github.com/users/jon-wei/events{/privacy}","received_events_url":"https://api.github.com/users/jon-wei/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-02-01T22:08:08Z","updated_at":"2018-02-01T22:08:08Z","author_association":"CONTRIBUTOR","body":"@gianm That reasoning sounds good to me, I've updated the patch to replace unparseable numeric dimension values with zeros when reportParseExceptions is false","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/362418459/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/362431908","html_url":"https://github.com/apache/druid/issues/5317#issuecomment-362431908","issue_url":"https://api.github.com/repos/apache/druid/issues/5317","id":362431908,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MjQzMTkwOA==","user":{"login":"pjain1","id":11787983,"node_id":"MDQ6VXNlcjExNzg3OTgz","avatar_url":"https://avatars.githubusercontent.com/u/11787983?v=4","gravatar_id":"","url":"https://api.github.com/users/pjain1","html_url":"https://github.com/pjain1","followers_url":"https://api.github.com/users/pjain1/followers","following_url":"https://api.github.com/users/pjain1/following{/other_user}","gists_url":"https://api.github.com/users/pjain1/gists{/gist_id}","starred_url":"https://api.github.com/users/pjain1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/pjain1/subscriptions","organizations_url":"https://api.github.com/users/pjain1/orgs","repos_url":"https://api.github.com/users/pjain1/repos","events_url":"https://api.github.com/users/pjain1/events{/privacy}","received_events_url":"https://api.github.com/users/pjain1/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-02-01T23:05:24Z","updated_at":"2018-02-01T23:07:25Z","author_association":"MEMBER","body":"This means that Kafka index tasks are not able to consume at rate by which messages are being produced by Kafka producers. You have set `resetOffsetAutomatically` which tells Index tasks to skip to the latest offset whenever the next offset that the task was going to consume got deleted from Kafka partition most probably because of Kafka retention. The way to solve is to increase `taskCount` so that more tasks consume the events in parallel.\r\n\r\nAlso if you set `resetOffsetAutomatically` to false then the Index task will just stop consuming events and not skip to latest offset but then someone will have to manually reset it.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/362431908/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/362457381","html_url":"https://github.com/apache/druid/pull/5261#issuecomment-362457381","issue_url":"https://api.github.com/repos/apache/druid/issues/5261","id":362457381,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MjQ1NzM4MQ==","user":{"login":"kevinconaway","id":6921953,"node_id":"MDQ6VXNlcjY5MjE5NTM=","avatar_url":"https://avatars.githubusercontent.com/u/6921953?v=4","gravatar_id":"","url":"https://api.github.com/users/kevinconaway","html_url":"https://github.com/kevinconaway","followers_url":"https://api.github.com/users/kevinconaway/followers","following_url":"https://api.github.com/users/kevinconaway/following{/other_user}","gists_url":"https://api.github.com/users/kevinconaway/gists{/gist_id}","starred_url":"https://api.github.com/users/kevinconaway/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kevinconaway/subscriptions","organizations_url":"https://api.github.com/users/kevinconaway/orgs","repos_url":"https://api.github.com/users/kevinconaway/repos","events_url":"https://api.github.com/users/kevinconaway/events{/privacy}","received_events_url":"https://api.github.com/users/kevinconaway/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-02-02T01:28:43Z","updated_at":"2018-02-02T01:28:43Z","author_association":"CONTRIBUTOR","body":"I've made some readability improvements.  I also combined the publish + handoff in to a single future per your request.\r\n\r\nPlease let me know what else I can change.\r\n\r\nThanks!","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/362457381/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/362459919","html_url":"https://github.com/apache/druid/pull/5278#issuecomment-362459919","issue_url":"https://api.github.com/repos/apache/druid/issues/5278","id":362459919,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MjQ1OTkxOQ==","user":{"login":"jon-wei","id":8729063,"node_id":"MDQ6VXNlcjg3MjkwNjM=","avatar_url":"https://avatars.githubusercontent.com/u/8729063?v=4","gravatar_id":"","url":"https://api.github.com/users/jon-wei","html_url":"https://github.com/jon-wei","followers_url":"https://api.github.com/users/jon-wei/followers","following_url":"https://api.github.com/users/jon-wei/following{/other_user}","gists_url":"https://api.github.com/users/jon-wei/gists{/gist_id}","starred_url":"https://api.github.com/users/jon-wei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jon-wei/subscriptions","organizations_url":"https://api.github.com/users/jon-wei/orgs","repos_url":"https://api.github.com/users/jon-wei/repos","events_url":"https://api.github.com/users/jon-wei/events{/privacy}","received_events_url":"https://api.github.com/users/jon-wei/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-02-02T01:44:10Z","updated_at":"2018-02-02T01:44:10Z","author_association":"CONTRIBUTOR","body":"Done reviewing for now, didn't have additional comments past GenericIndexed","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/362459919/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/362476462","html_url":"https://github.com/apache/druid/issues/5320#issuecomment-362476462","issue_url":"https://api.github.com/repos/apache/druid/issues/5320","id":362476462,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MjQ3NjQ2Mg==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-02-02T03:36:21Z","updated_at":"2018-02-02T03:36:21Z","author_association":"CONTRIBUTOR","body":"Are you talking about request logs (the ones that can go to files and such) or some other kind of logs? The `identity` field might be a good way to separate the logs, if you are using a cluster that has authentication enabled. The auto-generated queries use the escalator so they should be using the system identity.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/362476462/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/362481431","html_url":"https://github.com/apache/druid/pull/5280#issuecomment-362481431","issue_url":"https://api.github.com/repos/apache/druid/issues/5280","id":362481431,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MjQ4MTQzMQ==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-02-02T04:14:16Z","updated_at":"2018-02-02T04:14:16Z","author_association":"CONTRIBUTOR","body":"@himanshug,\r\n\r\nI think this satisfies the desire to be useful for SQL GROUPING SETS; the planner would need to compute the overarching union of all GROUPING SETS, then include that in the dimensions, and then create a subtotalsSpec with any other sub GROUPING SETS. So that is good.\r\n\r\nIn Druid SQL a query like yours would look like,\r\n\r\n```\r\nSELECT\r\n  d1col AS D1,\r\n  extraction_func(d2col) AS D2,\r\n  LOOKUP(d3col, 'my_lookup) AS D3,\r\n  COUNT(*)\r\nFROM tbl\r\nGROUP BY GROUPING SETS ( (1, 2, 3), (1, 3), (3) )\r\n```\r\n\r\nSome questions and thoughts,\r\n\r\n1. If you don't specify the super-set in the subtotalsSpec, do you still get it returned to you? I think it's best if the answer is \"no\", since the user might not actually want the super-set. It would work better for the SQL planner if the answer is \"no\", consider a query like `GROUP BY GROUPING SETS ( (1, 2), (2, 3) )`.\r\n2. In groupBy v2 the grouping results can be streamed back to the caller from the broker without materializing them completely, however with subtotalsSpec, would that mean the broker needs to materialize the results? If so where are they stored? (Forgive me- I did not read the patch yet!)\r\n3. If results do need to be materialized, I think it'd be important to optimize the case where grouping sets are like `GROUP BY GROUPING SETS ( (1, 2, 3), () )` (i.e. we want a table plus a grand total). The grand total can be computed while still avoiding materialization of the full result set.\r\n4. In the result format is it easy to distinguish null grouping values from nulls that represent subtotals? Consider that in SQL GROUPING SETS, it is not easy without help, but luckily the GROUPING function can help. This doc describes the problem and also the GROUPING function: https://docs.microsoft.com/en-us/sql/t-sql/functions/grouping-transact-sql.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/362481431/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/362483181","html_url":"https://github.com/apache/druid/issues/5313#issuecomment-362483181","issue_url":"https://api.github.com/repos/apache/druid/issues/5313","id":362483181,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MjQ4MzE4MQ==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-02-02T04:28:43Z","updated_at":"2018-02-02T04:28:43Z","author_association":"CONTRIBUTOR","body":"I see from your logs that you are running Druid 0.10.1. This looks like #4791, which was fixed in 0.11.0.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/362483181/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/362513311","html_url":"https://github.com/apache/druid/issues/5317#issuecomment-362513311","issue_url":"https://api.github.com/repos/apache/druid/issues/5317","id":362513311,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MjUxMzMxMQ==","user":{"login":"kaytrance","id":6768891,"node_id":"MDQ6VXNlcjY3Njg4OTE=","avatar_url":"https://avatars.githubusercontent.com/u/6768891?v=4","gravatar_id":"","url":"https://api.github.com/users/kaytrance","html_url":"https://github.com/kaytrance","followers_url":"https://api.github.com/users/kaytrance/followers","following_url":"https://api.github.com/users/kaytrance/following{/other_user}","gists_url":"https://api.github.com/users/kaytrance/gists{/gist_id}","starred_url":"https://api.github.com/users/kaytrance/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kaytrance/subscriptions","organizations_url":"https://api.github.com/users/kaytrance/orgs","repos_url":"https://api.github.com/users/kaytrance/repos","events_url":"https://api.github.com/users/kaytrance/events{/privacy}","received_events_url":"https://api.github.com/users/kaytrance/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-02-02T08:00:02Z","updated_at":"2018-02-02T08:00:02Z","author_association":"NONE","body":"ok, I will try to increase `taskCount` and see how it goes, thanks","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/362513311/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/362633204","html_url":"https://github.com/apache/druid/pull/5329#issuecomment-362633204","issue_url":"https://api.github.com/repos/apache/druid/issues/5329","id":362633204,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MjYzMzIwNA==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-02-02T16:24:46Z","updated_at":"2018-02-02T16:24:46Z","author_association":"CONTRIBUTOR","body":"thanks for testing and fixing.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/362633204/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/362637858","html_url":"https://github.com/apache/druid/pull/5280#issuecomment-362637858","issue_url":"https://api.github.com/repos/apache/druid/issues/5280","id":362637858,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MjYzNzg1OA==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-02-02T16:41:09Z","updated_at":"2018-02-02T16:43:16Z","author_association":"CONTRIBUTOR","body":"@gianm thanks, hopefully following answers provide further explanation.\r\n\r\n> 1. If you don't specify the super-set in the subtotalsSpec, do you still get it returned to you? I think it's best if the answer is \"no\", since the user might not actually want the super-set. It would work better for the SQL planner if the answer is \"no\", consider a query like GROUP BY GROUPING SETS ( (1, 2), (2, 3) ).\r\n\r\nYou are right, super-set result is not returned unless it was part of subtotalsSpec for exactly the reasons you mentioned.\r\n\r\n> 2.In groupBy v2 the grouping results can be streamed back to the caller from the broker without materializing them completely, however with subtotalsSpec, would that mean the broker needs to materialize the results? If so where are they stored? (Forgive me- I did not read the patch yet!)\r\n\r\nThis patch does not add support for subtotals in groupBy-v1 which would just fail.\r\nFor groupBy-v2 , implementation looks very similar to that of nested groupBy. Results from super-set query are materialized inside one BufferGrouper instance (with one \"merge buffer\"). Then we run one query per sub-total on this BufferGrouper by iterating over the rows in it and stream-merge them. to ensure \"stream-merge\" would work, we enforce a constraint on the subtotals that they must have same order of dims as that in super-set (updated this constraint in PR description)\r\n\r\n> 3. if results do need to be materialized, I think it'd be important to optimize the case where grouping sets are like GROUP BY GROUPING SETS ( (1, 2, 3), () ) (i.e. we want a table plus a grand total). The grand total can be computed while still avoiding materialization of the full result set.\r\n\r\nPossibly yes, however current patch does not optimize for this. maybe something that can be done as a improvement followup.\r\n\r\n> In the result format is it easy to distinguish null grouping values from nulls that represent subtotals? Consider that in SQL GROUPING SETS, it is not easy without help, but luckily the GROUPING function can help. This doc describes the problem and also the GROUPING function: https://docs.microsoft.com/en-us/sql/t-sql/functions/grouping-transact-sql.\r\n\r\nDruid groupBy result set always include name of all dimensions (even if they were null/empty) in each row. So, from the rows it would be identifiable when next subtotal begins. For example result for query in PR description would look something like below...\r\n```\r\n[ \r\n  {\r\n    \"version\" : \"v1\",\r\n    \"timestamp\" : \"t1\",\r\n    \"event\" : { \"D1\": \"..\", \"D2\": \"..\", \"D3\": \"..\" }\r\n    }\r\n  }, \r\n    {\r\n    \"version\" : \"v1\",\r\n    \"timestamp\" : \"t2\",\r\n    \"event\" : { \"D1\": \"..\", \"D2\": \"..\", \"D3\": \"..\" }\r\n    }\r\n  },\r\n  ...\r\n  ...\r\n\r\n   {\r\n    \"version\" : \"v1\",\r\n    \"timestamp\" : \"t1\",\r\n    \"event\" : { \"D1\": \"..\", \"D3\": \"..\" }\r\n    }\r\n  }, \r\n    {\r\n    \"version\" : \"v1\",\r\n    \"timestamp\" : \"t2\",\r\n    \"event\" : { \"D1\": \"..\", \"D3\": \"..\" }\r\n    }\r\n  },\r\n  ...\r\n  ...\r\n\r\n  {\r\n    \"version\" : \"v1\",\r\n    \"timestamp\" : \"t1\",\r\n    \"event\" : { \"D3\": \"..\" }\r\n    }\r\n  }, \r\n    {\r\n    \"version\" : \"v1\",\r\n    \"timestamp\" : \"t2\",\r\n    \"event\" : { \"D3\": \"..\" }\r\n    }\r\n  },\r\n...\r\n]\r\n```\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/362637858/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/362656422","html_url":"https://github.com/apache/druid/issues/5331#issuecomment-362656422","issue_url":"https://api.github.com/repos/apache/druid/issues/5331","id":362656422,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MjY1NjQyMg==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-02-02T17:51:58Z","updated_at":"2018-02-02T17:52:30Z","author_association":"CONTRIBUTOR","body":"@gianm Thanks for testing and documenting the findings.\r\n\r\n> There were some problems contacting this server at first (connection refused), but you can see from the logs that these errors stopped getting logged many minutes before the initialization timeout. There wasn't any log message saying when this server first synced, but I guess it did sync since it shows up ok in the debug info. I wonder if something is wrong with the latch that is used to check for initialization?\r\n\r\nBehavior looks expected but log and \"debug info\" are a bit cryptic I guess. Let me try to explain and in the long run we would change them to become more self explanatory hopefully.\r\n\r\n`2018-02-02T10:16:56,250 WARN [HttpServerInventoryView-1] io.druid.client.HttpServerInventoryView - Await initialization timed out for server [ip-172-31-0-22.ec2.internal:8303].`\r\nAbove log line is printed at https://github.com/druid-io/druid/blob/10b8540f80e0154ed64f268c6d8ad6adb4df6308/server/src/main/java/io/druid/client/HttpServerInventoryView.java#L503 and means that we waited said server to be fully initialized for serverTimeout time but it did not. ( However, we will continue to try to sync with that server in the background.. just not blocking the startup because of this slow/faulty server). No log is printed on first/any successful sync at INFO level, so you don't see when exactly successful sync happened if ever (that can be inferred from \"debug info\" though).\r\n\r\n```\r\n  \"ip-172-31-0-22.ec2.internal:8303\": {\r\n    \"notSyncedForSecs\": 5,\r\n    \"notSuccessfullySyncedFor\": 5,\r\n    \"consecutiveFailedAttemptCount\": 0,\r\n    \"started\": true\r\n  }\r\n```\r\n\"started\":true only means that corresponding server is recognized properly by HttpServerInventoryView and called syncer.start() for that which completes with just scheduling the syncup on executor. so \"true\" only means sync was scheduled.\r\nhowever, other parameters mean that a successful sync has happened or else \"consecutiveFailedAttemptCount\" would have been greater than zero (we clearly see in the logs that some sync attempts failed). also considering you got above response way after 5 seconds have passed since this server showed up, so \"notSuccessfullySyncedFor\" being 5 seconds means it must have synced successfully 5 seconds ago.\r\n\r\n> 2.There is a loop in serverInventoryInitialized where server.awaitInitialization() is called for each server in a row. That means it will wait the full timeout (default 3 minutes) for each timing-out server. In my case, two different servers timed out so the broker startup took over 6 minutes. I think it'd be better for there to be an overall initialization, since with the current mechanism, in a big cluster the effective timeout could be huge.\r\n\r\nThat is a valid concern and you are right if there were few servers which are totally faulty (where they register their presence in zookeeper but don't respond to segment sync requests successfully ever or for a very very long time) then overall startup time for HttpServerInventoryView could become arbitrarily huge based on the number of such downstream servers.\r\n\r\nI think we can change it to have a fixed overall timeout (may be serverTimeout + 30 seconds) and just log which servers were not successfully synced by that time and let HttpServerInventoryView startup finish.  does that sound reasonable?\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/362656422/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/362661391","html_url":"https://github.com/apache/druid/pull/5333#issuecomment-362661391","issue_url":"https://api.github.com/repos/apache/druid/issues/5333","id":362661391,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MjY2MTM5MQ==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-02-02T18:11:12Z","updated_at":"2018-02-02T18:11:22Z","author_association":"CONTRIBUTOR","body":"@treidco thanks. but, I think you saw doc for the wrong release.\r\n\r\nThe endpoint was changed to `/druid/coordinator/v1/lookups/config` 0.11.0 onwards.\r\n\r\nYou can see docs for older releases by using correct \"release\" in\r\n`http://druid.io/docs/<release>/querying/lookups.html`\r\n\r\nFor example, `http://druid.io/docs/0.10.1/querying/lookups.html` does not have `/druid/coordinator/v1/lookups/config`  in it.\r\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/362661391/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/362668635","html_url":"https://github.com/apache/druid/pull/5327#issuecomment-362668635","issue_url":"https://api.github.com/repos/apache/druid/issues/5327","id":362668635,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MjY2ODYzNQ==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-02-02T18:38:13Z","updated_at":"2018-02-02T18:38:13Z","author_association":"CONTRIBUTOR","body":"Not for this PR, but, Maybe we should add a `makeAlertAndEmit(..)` method and remove/deprecate `makeAlert()` .\r\nthis problem of not calling emit() is so common.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/362668635/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/362691911","html_url":"https://github.com/apache/druid/pull/5327#issuecomment-362691911","issue_url":"https://api.github.com/repos/apache/druid/issues/5327","id":362691911,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MjY5MTkxMQ==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-02-02T20:04:15Z","updated_at":"2018-02-02T20:04:15Z","author_association":"CONTRIBUTOR","body":"Yea, it is common. I guess the issue with `makeAlertAndEmit` though is the `addData` stuff. We could rework the API to be `log.emitAlert(Throwable, Map, String, Object...)` i.e. [t, data, msg, msgParams]","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/362691911/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/362694530","html_url":"https://github.com/apache/druid/pull/5330#issuecomment-362694530","issue_url":"https://api.github.com/repos/apache/druid/issues/5330","id":362694530,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MjY5NDUzMA==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-02-02T20:15:05Z","updated_at":"2018-02-02T20:15:05Z","author_association":"CONTRIBUTOR","body":"Note that with this change, the broker will report the identity of the actual user, but the historicals will report the system identity. This is because once the broker verifies that the query is allowed, it uses its own credentials to talk to historicals, not the credentials of the original user. So the historicals don't know who the original user is.\r\n\r\nI think it would be nice if they did (maybe an 'impersonation' feature would allow the broker to pass along the original identity) but I also think that is out of scope for this particular PR.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/362694530/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/362697358","html_url":"https://github.com/apache/druid/pull/5264#issuecomment-362697358","issue_url":"https://api.github.com/repos/apache/druid/issues/5264","id":362697358,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MjY5NzM1OA==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-02-02T20:26:10Z","updated_at":"2018-02-02T20:26:10Z","author_association":"CONTRIBUTOR","body":"@jihoonson, doesn't this patch add a new endpoint: `/druid/coordinator/v1/config/compaction` and remove the compaction config from the dynamic config (where it used to be)? I meant reflecting those changes in the docs.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/362697358/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/362698337","html_url":"https://github.com/apache/druid/issues/5331#issuecomment-362698337","issue_url":"https://api.github.com/repos/apache/druid/issues/5331","id":362698337,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MjY5ODMzNw==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-02-02T20:30:18Z","updated_at":"2018-02-02T20:30:18Z","author_association":"CONTRIBUTOR","body":"@himanshug, thanks for explaining.\r\n\r\nIn light of your explanation I could suggest two changes that would have helped me.\r\n\r\n1. If a sync fails, then on the next successful sync after a failure, log at INFO level that it is working again. (This way we know how long it took a node to become synced.) After that, as long as it keeps succeeding, no need to log anything at INFO level.\r\n2. The adjustment to have an overall timeout of (serverTimeout + 30 seconds) sounds good. Or even just serverTimeout -- not sure that we need the extra 30s.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/362698337/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/362702481","html_url":"https://github.com/apache/druid/pull/5278#issuecomment-362702481","issue_url":"https://api.github.com/repos/apache/druid/issues/5278","id":362702481,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MjcwMjQ4MQ==","user":{"login":"nishantmonu51","id":5023786,"node_id":"MDQ6VXNlcjUwMjM3ODY=","avatar_url":"https://avatars.githubusercontent.com/u/5023786?v=4","gravatar_id":"","url":"https://api.github.com/users/nishantmonu51","html_url":"https://github.com/nishantmonu51","followers_url":"https://api.github.com/users/nishantmonu51/followers","following_url":"https://api.github.com/users/nishantmonu51/following{/other_user}","gists_url":"https://api.github.com/users/nishantmonu51/gists{/gist_id}","starred_url":"https://api.github.com/users/nishantmonu51/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nishantmonu51/subscriptions","organizations_url":"https://api.github.com/users/nishantmonu51/orgs","repos_url":"https://api.github.com/users/nishantmonu51/repos","events_url":"https://api.github.com/users/nishantmonu51/events{/privacy}","received_events_url":"https://api.github.com/users/nishantmonu51/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-02-02T20:46:22Z","updated_at":"2018-02-02T20:56:33Z","author_association":"MEMBER","body":"@jon-wei: Thanks for the review. handled comments. \r\n@leventov: do you have any more comments ? ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/362702481/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/362708720","html_url":"https://github.com/apache/druid/pull/5321#issuecomment-362708720","issue_url":"https://api.github.com/repos/apache/druid/issues/5321","id":362708720,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MjcwODcyMA==","user":{"login":"nishantmonu51","id":5023786,"node_id":"MDQ6VXNlcjUwMjM3ODY=","avatar_url":"https://avatars.githubusercontent.com/u/5023786?v=4","gravatar_id":"","url":"https://api.github.com/users/nishantmonu51","html_url":"https://github.com/nishantmonu51","followers_url":"https://api.github.com/users/nishantmonu51/followers","following_url":"https://api.github.com/users/nishantmonu51/following{/other_user}","gists_url":"https://api.github.com/users/nishantmonu51/gists{/gist_id}","starred_url":"https://api.github.com/users/nishantmonu51/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nishantmonu51/subscriptions","organizations_url":"https://api.github.com/users/nishantmonu51/orgs","repos_url":"https://api.github.com/users/nishantmonu51/repos","events_url":"https://api.github.com/users/nishantmonu51/events{/privacy}","received_events_url":"https://api.github.com/users/nishantmonu51/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-02-02T21:11:24Z","updated_at":"2018-02-02T21:11:24Z","author_association":"MEMBER","body":"wondering if this can be achieved by shading the needed new dependency classes in the extension  ? ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/362708720/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/362715338","html_url":"https://github.com/apache/druid/pull/5330#issuecomment-362715338","issue_url":"https://api.github.com/repos/apache/druid/issues/5330","id":362715338,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MjcxNTMzOA==","user":{"login":"jon-wei","id":8729063,"node_id":"MDQ6VXNlcjg3MjkwNjM=","avatar_url":"https://avatars.githubusercontent.com/u/8729063?v=4","gravatar_id":"","url":"https://api.github.com/users/jon-wei","html_url":"https://github.com/jon-wei","followers_url":"https://api.github.com/users/jon-wei/followers","following_url":"https://api.github.com/users/jon-wei/following{/other_user}","gists_url":"https://api.github.com/users/jon-wei/gists{/gist_id}","starred_url":"https://api.github.com/users/jon-wei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jon-wei/subscriptions","organizations_url":"https://api.github.com/users/jon-wei/orgs","repos_url":"https://api.github.com/users/jon-wei/repos","events_url":"https://api.github.com/users/jon-wei/events{/privacy}","received_events_url":"https://api.github.com/users/jon-wei/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-02-02T21:38:44Z","updated_at":"2018-02-02T21:38:44Z","author_association":"CONTRIBUTOR","body":"Looks like there's a real inspection error:\r\n\r\n```\r\nprocessing/src/main/java/io/druid/query\r\n QueryPlus.java (1)\r\n69: getIdentity() Method is never used.\r\n```","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/362715338/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/362721465","html_url":"https://github.com/apache/druid/pull/5312#issuecomment-362721465","issue_url":"https://api.github.com/repos/apache/druid/issues/5312","id":362721465,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MjcyMTQ2NQ==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-02-02T22:06:08Z","updated_at":"2018-02-02T22:06:08Z","author_association":"CONTRIBUTOR","body":"I'm reviewing this PR.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/362721465/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/362726483","html_url":"https://github.com/apache/druid/pull/5264#issuecomment-362726483","issue_url":"https://api.github.com/repos/apache/druid/issues/5264","id":362726483,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MjcyNjQ4Mw==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-02-02T22:28:02Z","updated_at":"2018-02-02T22:28:02Z","author_association":"CONTRIBUTOR","body":"@gianm actually the API endpoint is not changed. I only added a new config object for compaction config. Do you think the API endpoint should be changed as well?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/362726483/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/362731831","html_url":"https://github.com/apache/druid/pull/5312#issuecomment-362731831","issue_url":"https://api.github.com/repos/apache/druid/issues/5312","id":362731831,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MjczMTgzMQ==","user":{"login":"jon-wei","id":8729063,"node_id":"MDQ6VXNlcjg3MjkwNjM=","avatar_url":"https://avatars.githubusercontent.com/u/8729063?v=4","gravatar_id":"","url":"https://api.github.com/users/jon-wei","html_url":"https://github.com/jon-wei","followers_url":"https://api.github.com/users/jon-wei/followers","following_url":"https://api.github.com/users/jon-wei/following{/other_user}","gists_url":"https://api.github.com/users/jon-wei/gists{/gist_id}","starred_url":"https://api.github.com/users/jon-wei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jon-wei/subscriptions","organizations_url":"https://api.github.com/users/jon-wei/orgs","repos_url":"https://api.github.com/users/jon-wei/repos","events_url":"https://api.github.com/users/jon-wei/events{/privacy}","received_events_url":"https://api.github.com/users/jon-wei/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-02-02T22:51:04Z","updated_at":"2018-02-02T22:52:43Z","author_association":"CONTRIBUTOR","body":"@jihoonson \r\n\r\n> What do you think about supporting configurable default values for unparseable values?\r\n\r\nI think that'd be a useful feature.\r\n\r\nI think it would be better to implement default values for unparseable values in a separate PR (this one is mainly to fix an NPE bug), and get #5278 in before that patch to avoid introducing more potential conflicts there since that's a big \"Development Blocker\" patch that's been open for a while.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/362731831/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/362732042","html_url":"https://github.com/apache/druid/issues/5337#issuecomment-362732042","issue_url":"https://api.github.com/repos/apache/druid/issues/5337","id":362732042,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MjczMjA0Mg==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-02-02T22:52:01Z","updated_at":"2018-02-02T22:52:01Z","author_association":"CONTRIBUTOR","body":"@millbraeming thank you for reporting, but it looks not a bug to me. The reason that the last query returns an empty result is that there is no row having `2016-06-27T00:00:36.000Z` value for `__time` column. I guess it should be `2016-06-27T00:00:36.027Z` if you want to get the second row. Would you try again?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/362732042/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/362732281","html_url":"https://github.com/apache/druid/pull/5312#issuecomment-362732281","issue_url":"https://api.github.com/repos/apache/druid/issues/5312","id":362732281,"node_id":"MDEyOklzc3VlQ29tbWVudDM2MjczMjI4MQ==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-02-02T22:53:04Z","updated_at":"2018-02-02T22:53:04Z","author_association":"CONTRIBUTOR","body":"@jon-wei ok. That sounds good to me.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/362732281/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/362744954","html_url":"https://github.com/apache/druid/issues/5338#issuecomment-362744954","issue_url":"https://api.github.com/repos/apache/druid/issues/5338","id":362744954,"node_id":"MDEyOklzc3VlQ29tbWVudDM2Mjc0NDk1NA==","user":{"login":"leventov","id":609240,"node_id":"MDQ6VXNlcjYwOTI0MA==","avatar_url":"https://avatars.githubusercontent.com/u/609240?v=4","gravatar_id":"","url":"https://api.github.com/users/leventov","html_url":"https://github.com/leventov","followers_url":"https://api.github.com/users/leventov/followers","following_url":"https://api.github.com/users/leventov/following{/other_user}","gists_url":"https://api.github.com/users/leventov/gists{/gist_id}","starred_url":"https://api.github.com/users/leventov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leventov/subscriptions","organizations_url":"https://api.github.com/users/leventov/orgs","repos_url":"https://api.github.com/users/leventov/repos","events_url":"https://api.github.com/users/leventov/events{/privacy}","received_events_url":"https://api.github.com/users/leventov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2018-02-02T23:55:37Z","updated_at":"2018-02-07T15:32:47Z","author_association":"MEMBER","body":"I reviewed quickly but I couldn't find a bug. Could you add some logging code:\r\nin \r\n\r\nhttps://github.com/metamx/java-util/blob/f33e0b0f275fa96bfe79a1d68b4ea70d09cd496e/src/main/java/com/metamx/emitter/core/HttpPostEmitter.java#L244-L246\r\n\r\nadd\r\n```java\r\nelse { log.info(\"failed to emit in batch [%s]\", batch); }\r\n```\r\n\r\nAlso, add batchNumber field in Batch.toString() impl;\r\n\r\nAlso, add logging after successful `compareAndSetState()` calls in `Batch.tryReleaseShared()`.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/362744954/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]