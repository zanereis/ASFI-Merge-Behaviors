[{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502012559","html_url":"https://github.com/apache/tvm/pull/3350#issuecomment-502012559","issue_url":"https://api.github.com/repos/apache/tvm/issues/3350","id":502012559,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMjAxMjU1OQ==","user":{"login":"apivovarov","id":218087,"node_id":"MDQ6VXNlcjIxODA4Nw==","avatar_url":"https://avatars.githubusercontent.com/u/218087?v=4","gravatar_id":"","url":"https://api.github.com/users/apivovarov","html_url":"https://github.com/apivovarov","followers_url":"https://api.github.com/users/apivovarov/followers","following_url":"https://api.github.com/users/apivovarov/following{/other_user}","gists_url":"https://api.github.com/users/apivovarov/gists{/gist_id}","starred_url":"https://api.github.com/users/apivovarov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/apivovarov/subscriptions","organizations_url":"https://api.github.com/users/apivovarov/orgs","repos_url":"https://api.github.com/users/apivovarov/repos","events_url":"https://api.github.com/users/apivovarov/events{/privacy}","received_events_url":"https://api.github.com/users/apivovarov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-14T08:07:19Z","updated_at":"2019-06-14T08:07:19Z","author_association":"CONTRIBUTOR","body":"@FrozenGene CI build/test passed. Can you merge it?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502012559/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502040925","html_url":"https://github.com/apache/tvm/pull/3372#issuecomment-502040925","issue_url":"https://api.github.com/repos/apache/tvm/issues/3372","id":502040925,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMjA0MDkyNQ==","user":{"login":"FrozenGene","id":7287321,"node_id":"MDQ6VXNlcjcyODczMjE=","avatar_url":"https://avatars.githubusercontent.com/u/7287321?v=4","gravatar_id":"","url":"https://api.github.com/users/FrozenGene","html_url":"https://github.com/FrozenGene","followers_url":"https://api.github.com/users/FrozenGene/followers","following_url":"https://api.github.com/users/FrozenGene/following{/other_user}","gists_url":"https://api.github.com/users/FrozenGene/gists{/gist_id}","starred_url":"https://api.github.com/users/FrozenGene/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/FrozenGene/subscriptions","organizations_url":"https://api.github.com/users/FrozenGene/orgs","repos_url":"https://api.github.com/users/FrozenGene/repos","events_url":"https://api.github.com/users/FrozenGene/events{/privacy}","received_events_url":"https://api.github.com/users/FrozenGene/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-14T09:32:02Z","updated_at":"2019-06-14T09:32:02Z","author_association":"MEMBER","body":"Better to add test case. For example, after `add`, we have `relu`.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502040925/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502041771","html_url":"https://github.com/apache/tvm/pull/3350#issuecomment-502041771","issue_url":"https://api.github.com/repos/apache/tvm/issues/3350","id":502041771,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMjA0MTc3MQ==","user":{"login":"FrozenGene","id":7287321,"node_id":"MDQ6VXNlcjcyODczMjE=","avatar_url":"https://avatars.githubusercontent.com/u/7287321?v=4","gravatar_id":"","url":"https://api.github.com/users/FrozenGene","html_url":"https://github.com/FrozenGene","followers_url":"https://api.github.com/users/FrozenGene/followers","following_url":"https://api.github.com/users/FrozenGene/following{/other_user}","gists_url":"https://api.github.com/users/FrozenGene/gists{/gist_id}","starred_url":"https://api.github.com/users/FrozenGene/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/FrozenGene/subscriptions","organizations_url":"https://api.github.com/users/FrozenGene/orgs","repos_url":"https://api.github.com/users/FrozenGene/repos","events_url":"https://api.github.com/users/FrozenGene/events{/privacy}","received_events_url":"https://api.github.com/users/FrozenGene/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-14T09:34:42Z","updated_at":"2019-06-14T09:34:42Z","author_association":"MEMBER","body":"> @FrozenGene CI build/test passed. Can you merge it?\r\n\r\nI don't have merge privilege. ping @tqchen @srkreddy1238 help to handle.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502041771/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502127234","html_url":"https://github.com/apache/tvm/issues/3332#issuecomment-502127234","issue_url":"https://api.github.com/repos/apache/tvm/issues/3332","id":502127234,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMjEyNzIzNA==","user":{"login":"mshawcroft","id":6357566,"node_id":"MDQ6VXNlcjYzNTc1NjY=","avatar_url":"https://avatars.githubusercontent.com/u/6357566?v=4","gravatar_id":"","url":"https://api.github.com/users/mshawcroft","html_url":"https://github.com/mshawcroft","followers_url":"https://api.github.com/users/mshawcroft/followers","following_url":"https://api.github.com/users/mshawcroft/following{/other_user}","gists_url":"https://api.github.com/users/mshawcroft/gists{/gist_id}","starred_url":"https://api.github.com/users/mshawcroft/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mshawcroft/subscriptions","organizations_url":"https://api.github.com/users/mshawcroft/orgs","repos_url":"https://api.github.com/users/mshawcroft/repos","events_url":"https://api.github.com/users/mshawcroft/events{/privacy}","received_events_url":"https://api.github.com/users/mshawcroft/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-14T14:19:05Z","updated_at":"2019-06-14T14:19:05Z","author_association":"CONTRIBUTOR","body":"Just re-checked this on master (f731e0e666ff07ceba228e2ea0b1bcda837fa6e1) and the issue is still present.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502127234/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502172567","html_url":"https://github.com/apache/tvm/issues/3332#issuecomment-502172567","issue_url":"https://api.github.com/repos/apache/tvm/issues/3332","id":502172567,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMjE3MjU2Nw==","user":{"login":"FrozenGene","id":7287321,"node_id":"MDQ6VXNlcjcyODczMjE=","avatar_url":"https://avatars.githubusercontent.com/u/7287321?v=4","gravatar_id":"","url":"https://api.github.com/users/FrozenGene","html_url":"https://github.com/FrozenGene","followers_url":"https://api.github.com/users/FrozenGene/followers","following_url":"https://api.github.com/users/FrozenGene/following{/other_user}","gists_url":"https://api.github.com/users/FrozenGene/gists{/gist_id}","starred_url":"https://api.github.com/users/FrozenGene/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/FrozenGene/subscriptions","organizations_url":"https://api.github.com/users/FrozenGene/orgs","repos_url":"https://api.github.com/users/FrozenGene/repos","events_url":"https://api.github.com/users/FrozenGene/events{/privacy}","received_events_url":"https://api.github.com/users/FrozenGene/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-14T16:21:52Z","updated_at":"2019-06-14T16:21:52Z","author_association":"MEMBER","body":"I think you don't update the tutorial file. Your input is `1 3 224 224`, which is NCHW input previously. However, current tutorial use `1 224 224 3` NHWC layout. Please checkout the latest TVM codebase of all files.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502172567/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502191788","html_url":"https://github.com/apache/tvm/pull/3350#issuecomment-502191788","issue_url":"https://api.github.com/repos/apache/tvm/issues/3350","id":502191788,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMjE5MTc4OA==","user":{"login":"apivovarov","id":218087,"node_id":"MDQ6VXNlcjIxODA4Nw==","avatar_url":"https://avatars.githubusercontent.com/u/218087?v=4","gravatar_id":"","url":"https://api.github.com/users/apivovarov","html_url":"https://github.com/apivovarov","followers_url":"https://api.github.com/users/apivovarov/followers","following_url":"https://api.github.com/users/apivovarov/following{/other_user}","gists_url":"https://api.github.com/users/apivovarov/gists{/gist_id}","starred_url":"https://api.github.com/users/apivovarov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/apivovarov/subscriptions","organizations_url":"https://api.github.com/users/apivovarov/orgs","repos_url":"https://api.github.com/users/apivovarov/repos","events_url":"https://api.github.com/users/apivovarov/events{/privacy}","received_events_url":"https://api.github.com/users/apivovarov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-14T17:13:13Z","updated_at":"2019-06-14T17:13:13Z","author_association":"CONTRIBUTOR","body":"@FrozenGene @yongwww Can you approve the PR?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502191788/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502222962","html_url":"https://github.com/apache/tvm/pull/3370#issuecomment-502222962","issue_url":"https://api.github.com/repos/apache/tvm/issues/3370","id":502222962,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMjIyMjk2Mg==","user":{"login":"apivovarov","id":218087,"node_id":"MDQ6VXNlcjIxODA4Nw==","avatar_url":"https://avatars.githubusercontent.com/u/218087?v=4","gravatar_id":"","url":"https://api.github.com/users/apivovarov","html_url":"https://github.com/apivovarov","followers_url":"https://api.github.com/users/apivovarov/followers","following_url":"https://api.github.com/users/apivovarov/following{/other_user}","gists_url":"https://api.github.com/users/apivovarov/gists{/gist_id}","starred_url":"https://api.github.com/users/apivovarov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/apivovarov/subscriptions","organizations_url":"https://api.github.com/users/apivovarov/orgs","repos_url":"https://api.github.com/users/apivovarov/repos","events_url":"https://api.github.com/users/apivovarov/events{/privacy}","received_events_url":"https://api.github.com/users/apivovarov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-14T18:49:11Z","updated_at":"2019-06-14T18:49:11Z","author_association":"CONTRIBUTOR","body":"I opened an issue for the build error https://github.com/dmlc/tvm/issues/3373","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502222962/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502223650","html_url":"https://github.com/apache/tvm/issues/3373#issuecomment-502223650","issue_url":"https://api.github.com/repos/apache/tvm/issues/3373","id":502223650,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMjIyMzY1MA==","user":{"login":"apivovarov","id":218087,"node_id":"MDQ6VXNlcjIxODA4Nw==","avatar_url":"https://avatars.githubusercontent.com/u/218087?v=4","gravatar_id":"","url":"https://api.github.com/users/apivovarov","html_url":"https://github.com/apivovarov","followers_url":"https://api.github.com/users/apivovarov/followers","following_url":"https://api.github.com/users/apivovarov/following{/other_user}","gists_url":"https://api.github.com/users/apivovarov/gists{/gist_id}","starred_url":"https://api.github.com/users/apivovarov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/apivovarov/subscriptions","organizations_url":"https://api.github.com/users/apivovarov/orgs","repos_url":"https://api.github.com/users/apivovarov/repos","events_url":"https://api.github.com/users/apivovarov/events{/privacy}","received_events_url":"https://api.github.com/users/apivovarov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-14T18:51:23Z","updated_at":"2019-06-14T18:51:23Z","author_association":"CONTRIBUTOR","body":"@tqchen Can you help me to solve the issue with old tflite package on Jenkins workers?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502223650/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502224094","html_url":"https://github.com/apache/tvm/pull/3356#issuecomment-502224094","issue_url":"https://api.github.com/repos/apache/tvm/issues/3356","id":502224094,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMjIyNDA5NA==","user":{"login":"apivovarov","id":218087,"node_id":"MDQ6VXNlcjIxODA4Nw==","avatar_url":"https://avatars.githubusercontent.com/u/218087?v=4","gravatar_id":"","url":"https://api.github.com/users/apivovarov","html_url":"https://github.com/apivovarov","followers_url":"https://api.github.com/users/apivovarov/followers","following_url":"https://api.github.com/users/apivovarov/following{/other_user}","gists_url":"https://api.github.com/users/apivovarov/gists{/gist_id}","starred_url":"https://api.github.com/users/apivovarov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/apivovarov/subscriptions","organizations_url":"https://api.github.com/users/apivovarov/orgs","repos_url":"https://api.github.com/users/apivovarov/repos","events_url":"https://api.github.com/users/apivovarov/events{/privacy}","received_events_url":"https://api.github.com/users/apivovarov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-14T18:52:48Z","updated_at":"2019-06-14T18:53:02Z","author_association":"CONTRIBUTOR","body":"@tqchen looks like Jenkins workers still uses tflite package v1.12\r\nCan you look at the issue - https://github.com/dmlc/tvm/issues/3373","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502224094/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502224754","html_url":"https://github.com/apache/tvm/pull/3367#issuecomment-502224754","issue_url":"https://api.github.com/repos/apache/tvm/issues/3367","id":502224754,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMjIyNDc1NA==","user":{"login":"ZihengJiang","id":17693755,"node_id":"MDQ6VXNlcjE3NjkzNzU1","avatar_url":"https://avatars.githubusercontent.com/u/17693755?v=4","gravatar_id":"","url":"https://api.github.com/users/ZihengJiang","html_url":"https://github.com/ZihengJiang","followers_url":"https://api.github.com/users/ZihengJiang/followers","following_url":"https://api.github.com/users/ZihengJiang/following{/other_user}","gists_url":"https://api.github.com/users/ZihengJiang/gists{/gist_id}","starred_url":"https://api.github.com/users/ZihengJiang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ZihengJiang/subscriptions","organizations_url":"https://api.github.com/users/ZihengJiang/orgs","repos_url":"https://api.github.com/users/ZihengJiang/repos","events_url":"https://api.github.com/users/ZihengJiang/events{/privacy}","received_events_url":"https://api.github.com/users/ZihengJiang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-14T18:54:57Z","updated_at":"2019-06-14T18:54:57Z","author_association":"CONTRIBUTOR","body":"Hey @anijain2305 , currently we use existing `conv2d` op with `out_dtype` for the quantization so that we can utilize the autotvm etc. Any benefit to propose a new op?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502224754/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502226305","html_url":"https://github.com/apache/tvm/issues/3373#issuecomment-502226305","issue_url":"https://api.github.com/repos/apache/tvm/issues/3373","id":502226305,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMjIyNjMwNQ==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-14T19:00:02Z","updated_at":"2019-06-14T19:02:33Z","author_association":"MEMBER","body":"The CI image uses a cached image, and need to be staged manually. This is to ensure we have a stable build env. See note here: https://docs.tvm.ai/contribute/pull_request.html#ci-environment\r\n\r\nHowever, do expect a bit delays as we want to update the images infrequently, and there might be consistency issues when updating the docker image\r\n\r\nA quick way to get around would make sure that the solution can be compatible with both versions (also helpful for users as well). This will also be helpful as the change of the state might be compatible: we need to change the image and the test at the same time and sometimes it breaks things\r\n\r\nI will send an update note when the docker image gets updated.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502226305/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502241087","html_url":"https://github.com/apache/tvm/pull/3369#issuecomment-502241087","issue_url":"https://api.github.com/repos/apache/tvm/issues/3369","id":502241087,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMjI0MTA4Nw==","user":{"login":"slyubomirsky","id":5624871,"node_id":"MDQ6VXNlcjU2MjQ4NzE=","avatar_url":"https://avatars.githubusercontent.com/u/5624871?v=4","gravatar_id":"","url":"https://api.github.com/users/slyubomirsky","html_url":"https://github.com/slyubomirsky","followers_url":"https://api.github.com/users/slyubomirsky/followers","following_url":"https://api.github.com/users/slyubomirsky/following{/other_user}","gists_url":"https://api.github.com/users/slyubomirsky/gists{/gist_id}","starred_url":"https://api.github.com/users/slyubomirsky/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/slyubomirsky/subscriptions","organizations_url":"https://api.github.com/users/slyubomirsky/orgs","repos_url":"https://api.github.com/users/slyubomirsky/repos","events_url":"https://api.github.com/users/slyubomirsky/events{/privacy}","received_events_url":"https://api.github.com/users/slyubomirsky/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-14T19:49:50Z","updated_at":"2019-06-14T19:49:50Z","author_association":"CONTRIBUTOR","body":"I realized that just the index _can_ be a sufficient tag if you have type-checked the code and therefore know what global var to check. Perhaps it is not strictly necessary to keep the reverse mapping but having it makes something like `arg_to_ast` easier to implement, namely by not needing to run a type check to do it.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502241087/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502242968","html_url":"https://github.com/apache/tvm/pull/3375#issuecomment-502242968","issue_url":"https://api.github.com/repos/apache/tvm/issues/3375","id":502242968,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMjI0Mjk2OA==","user":{"login":"huajsj","id":2281489,"node_id":"MDQ6VXNlcjIyODE0ODk=","avatar_url":"https://avatars.githubusercontent.com/u/2281489?v=4","gravatar_id":"","url":"https://api.github.com/users/huajsj","html_url":"https://github.com/huajsj","followers_url":"https://api.github.com/users/huajsj/followers","following_url":"https://api.github.com/users/huajsj/following{/other_user}","gists_url":"https://api.github.com/users/huajsj/gists{/gist_id}","starred_url":"https://api.github.com/users/huajsj/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/huajsj/subscriptions","organizations_url":"https://api.github.com/users/huajsj/orgs","repos_url":"https://api.github.com/users/huajsj/repos","events_url":"https://api.github.com/users/huajsj/events{/privacy}","received_events_url":"https://api.github.com/users/huajsj/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-14T19:56:01Z","updated_at":"2019-06-14T19:56:01Z","author_association":"CONTRIBUTOR","body":"@tmoreau89 could help to review this patch?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502242968/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502249930","html_url":"https://github.com/apache/tvm/pull/3372#issuecomment-502249930","issue_url":"https://api.github.com/repos/apache/tvm/issues/3372","id":502249930,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMjI0OTkzMA==","user":{"login":"apivovarov","id":218087,"node_id":"MDQ6VXNlcjIxODA4Nw==","avatar_url":"https://avatars.githubusercontent.com/u/218087?v=4","gravatar_id":"","url":"https://api.github.com/users/apivovarov","html_url":"https://github.com/apivovarov","followers_url":"https://api.github.com/users/apivovarov/followers","following_url":"https://api.github.com/users/apivovarov/following{/other_user}","gists_url":"https://api.github.com/users/apivovarov/gists{/gist_id}","starred_url":"https://api.github.com/users/apivovarov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/apivovarov/subscriptions","organizations_url":"https://api.github.com/users/apivovarov/orgs","repos_url":"https://api.github.com/users/apivovarov/repos","events_url":"https://api.github.com/users/apivovarov/events{/privacy}","received_events_url":"https://api.github.com/users/apivovarov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-14T20:19:56Z","updated_at":"2019-06-14T20:19:56Z","author_association":"CONTRIBUTOR","body":"Added tests with `RELU` and `RELU6` for ADD,SUB,MUL,DIV","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502249930/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502254305","html_url":"https://github.com/apache/tvm/pull/3350#issuecomment-502254305","issue_url":"https://api.github.com/repos/apache/tvm/issues/3350","id":502254305,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMjI1NDMwNQ==","user":{"login":"kevinthesun","id":15520525,"node_id":"MDQ6VXNlcjE1NTIwNTI1","avatar_url":"https://avatars.githubusercontent.com/u/15520525?v=4","gravatar_id":"","url":"https://api.github.com/users/kevinthesun","html_url":"https://github.com/kevinthesun","followers_url":"https://api.github.com/users/kevinthesun/followers","following_url":"https://api.github.com/users/kevinthesun/following{/other_user}","gists_url":"https://api.github.com/users/kevinthesun/gists{/gist_id}","starred_url":"https://api.github.com/users/kevinthesun/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kevinthesun/subscriptions","organizations_url":"https://api.github.com/users/kevinthesun/orgs","repos_url":"https://api.github.com/users/kevinthesun/repos","events_url":"https://api.github.com/users/kevinthesun/events{/privacy}","received_events_url":"https://api.github.com/users/kevinthesun/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-14T20:34:27Z","updated_at":"2019-06-14T20:34:27Z","author_association":"CONTRIBUTOR","body":"Thanks!","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502254305/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502256773","html_url":"https://github.com/apache/tvm/issues/3373#issuecomment-502256773","issue_url":"https://api.github.com/repos/apache/tvm/issues/3373","id":502256773,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMjI1Njc3Mw==","user":{"login":"apivovarov","id":218087,"node_id":"MDQ6VXNlcjIxODA4Nw==","avatar_url":"https://avatars.githubusercontent.com/u/218087?v=4","gravatar_id":"","url":"https://api.github.com/users/apivovarov","html_url":"https://github.com/apivovarov","followers_url":"https://api.github.com/users/apivovarov/followers","following_url":"https://api.github.com/users/apivovarov/following{/other_user}","gists_url":"https://api.github.com/users/apivovarov/gists{/gist_id}","starred_url":"https://api.github.com/users/apivovarov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/apivovarov/subscriptions","organizations_url":"https://api.github.com/users/apivovarov/orgs","repos_url":"https://api.github.com/users/apivovarov/repos","events_url":"https://api.github.com/users/apivovarov/events{/privacy}","received_events_url":"https://api.github.com/users/apivovarov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-14T20:43:18Z","updated_at":"2019-06-14T20:43:42Z","author_association":"CONTRIBUTOR","body":"ok, I fixed my PR to support both tflite versions 1.12 and 1.13","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502256773/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502257062","html_url":"https://github.com/apache/tvm/pull/3370#issuecomment-502257062","issue_url":"https://api.github.com/repos/apache/tvm/issues/3370","id":502257062,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMjI1NzA2Mg==","user":{"login":"apivovarov","id":218087,"node_id":"MDQ6VXNlcjIxODA4Nw==","avatar_url":"https://avatars.githubusercontent.com/u/218087?v=4","gravatar_id":"","url":"https://api.github.com/users/apivovarov","html_url":"https://github.com/apivovarov","followers_url":"https://api.github.com/users/apivovarov/followers","following_url":"https://api.github.com/users/apivovarov/following{/other_user}","gists_url":"https://api.github.com/users/apivovarov/gists{/gist_id}","starred_url":"https://api.github.com/users/apivovarov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/apivovarov/subscriptions","organizations_url":"https://api.github.com/users/apivovarov/orgs","repos_url":"https://api.github.com/users/apivovarov/repos","events_url":"https://api.github.com/users/apivovarov/events{/privacy}","received_events_url":"https://api.github.com/users/apivovarov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-14T20:44:18Z","updated_at":"2019-06-15T04:29:55Z","author_association":"CONTRIBUTOR","body":"Fixed the PR to support both tflite versions - 1.12 and 1.13\r\n`RESIZE_NEAREST_NEIGHBOR` operator is visible in `BuiltinOperator` directory starting from v1.13\r\n```\r\n>>> \"RESIZE_NEAREST_NEIGHBOR\" in dir(BuiltinOperator())\r\n1.12 - False\r\n1.13 - True\r\n```","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502257062/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502294439","html_url":"https://github.com/apache/tvm/pull/3230#issuecomment-502294439","issue_url":"https://api.github.com/repos/apache/tvm/issues/3230","id":502294439,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMjI5NDQzOQ==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-14T22:04:42Z","updated_at":"2019-06-14T22:04:42Z","author_association":"MEMBER","body":"https://github.com/dmlc/tvm/pull/3374 updates the docker image to the latest state","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502294439/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502296998","html_url":"https://github.com/apache/tvm/pull/3280#issuecomment-502296998","issue_url":"https://api.github.com/repos/apache/tvm/issues/3280","id":502296998,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMjI5Njk5OA==","user":{"login":"jroesch","id":696509,"node_id":"MDQ6VXNlcjY5NjUwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/696509?v=4","gravatar_id":"","url":"https://api.github.com/users/jroesch","html_url":"https://github.com/jroesch","followers_url":"https://api.github.com/users/jroesch/followers","following_url":"https://api.github.com/users/jroesch/following{/other_user}","gists_url":"https://api.github.com/users/jroesch/gists{/gist_id}","starred_url":"https://api.github.com/users/jroesch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jroesch/subscriptions","organizations_url":"https://api.github.com/users/jroesch/orgs","repos_url":"https://api.github.com/users/jroesch/repos","events_url":"https://api.github.com/users/jroesch/events{/privacy}","received_events_url":"https://api.github.com/users/jroesch/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-14T22:15:57Z","updated_at":"2019-06-14T22:15:57Z","author_association":"MEMBER","body":"I think we should use `CannoicalizeCast` or `DuplicateCast` or something since this is a cast focused optimization, its not clear to me whether this is always a performance win or not? is that the case?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502296998/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502297443","html_url":"https://github.com/apache/tvm/pull/3306#issuecomment-502297443","issue_url":"https://api.github.com/repos/apache/tvm/issues/3306","id":502297443,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMjI5NzQ0Mw==","user":{"login":"jroesch","id":696509,"node_id":"MDQ6VXNlcjY5NjUwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/696509?v=4","gravatar_id":"","url":"https://api.github.com/users/jroesch","html_url":"https://github.com/jroesch","followers_url":"https://api.github.com/users/jroesch/followers","following_url":"https://api.github.com/users/jroesch/following{/other_user}","gists_url":"https://api.github.com/users/jroesch/gists{/gist_id}","starred_url":"https://api.github.com/users/jroesch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jroesch/subscriptions","organizations_url":"https://api.github.com/users/jroesch/orgs","repos_url":"https://api.github.com/users/jroesch/repos","events_url":"https://api.github.com/users/jroesch/events{/privacy}","received_events_url":"https://api.github.com/users/jroesch/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-14T22:17:57Z","updated_at":"2019-06-14T22:17:57Z","author_association":"MEMBER","body":"Okay looks good, I plan on moving back to VM after tutorial ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502297443/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502298018","html_url":"https://github.com/apache/tvm/pull/3094#issuecomment-502298018","issue_url":"https://api.github.com/repos/apache/tvm/issues/3094","id":502298018,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMjI5ODAxOA==","user":{"login":"jroesch","id":696509,"node_id":"MDQ6VXNlcjY5NjUwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/696509?v=4","gravatar_id":"","url":"https://api.github.com/users/jroesch","html_url":"https://github.com/jroesch","followers_url":"https://api.github.com/users/jroesch/followers","following_url":"https://api.github.com/users/jroesch/following{/other_user}","gists_url":"https://api.github.com/users/jroesch/gists{/gist_id}","starred_url":"https://api.github.com/users/jroesch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jroesch/subscriptions","organizations_url":"https://api.github.com/users/jroesch/orgs","repos_url":"https://api.github.com/users/jroesch/repos","events_url":"https://api.github.com/users/jroesch/events{/privacy}","received_events_url":"https://api.github.com/users/jroesch/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-14T22:20:28Z","updated_at":"2019-06-14T22:20:28Z","author_association":"MEMBER","body":"Can you rebase? ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502298018/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502299568","html_url":"https://github.com/apache/tvm/pull/3280#issuecomment-502299568","issue_url":"https://api.github.com/repos/apache/tvm/issues/3280","id":502299568,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMjI5OTU2OA==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-14T22:28:26Z","updated_at":"2019-06-14T22:28:26Z","author_association":"MEMBER","body":"I think it will always be a perf win.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502299568/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502306768","html_url":"https://github.com/apache/tvm/pull/3367#issuecomment-502306768","issue_url":"https://api.github.com/repos/apache/tvm/issues/3367","id":502306768,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMjMwNjc2OA==","user":{"login":"anijain2305","id":13822661,"node_id":"MDQ6VXNlcjEzODIyNjYx","avatar_url":"https://avatars.githubusercontent.com/u/13822661?v=4","gravatar_id":"","url":"https://api.github.com/users/anijain2305","html_url":"https://github.com/anijain2305","followers_url":"https://api.github.com/users/anijain2305/followers","following_url":"https://api.github.com/users/anijain2305/following{/other_user}","gists_url":"https://api.github.com/users/anijain2305/gists{/gist_id}","starred_url":"https://api.github.com/users/anijain2305/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/anijain2305/subscriptions","organizations_url":"https://api.github.com/users/anijain2305/orgs","repos_url":"https://api.github.com/users/anijain2305/repos","events_url":"https://api.github.com/users/anijain2305/events{/privacy}","received_events_url":"https://api.github.com/users/anijain2305/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-14T23:08:46Z","updated_at":"2019-06-14T23:08:46Z","author_association":"CONTRIBUTOR","body":"> Hey @anijain2305 , currently we use existing `conv2d` op with `out_dtype` for the quantization so that we can utilize the autotvm etc. Any benefit to propose a new op?\r\n\r\nHi @ZihengJiang Thanks for replying. Having this new op does not prevent the ability to perform AutoTVM. Infact, this new op act as a wrapper and gets lowered to existing Relay ops like conv, cast etc. \r\n\r\nThe reason we need new ops is\r\n1) The compute of quantized conv2d is different than normal conv2d. The difference becomes quite large in asymmetric. Plan is to have a _quantize namespace with these new quantized ops, that will be lowered to existing Relay ops.\r\n2) One can write a convertor from framework quantized graphs to Relay using these new wrappers.\r\n\r\nOnce these ops are lowered to existing Relay ops, all the relay and TVM optimizations are still applicable.\r\n\r\nPlease find more discussion at \r\n1) https://github.com/dmlc/tvm/issues/2351#issuecomment-498749597\r\n2) https://discuss.tvm.ai/t/tf-lite-quantized-conv2d-operator-conversion/2651/8?u=janimesh\r\n3) https://discuss.tvm.ai/t/tf-lite-quantized-conv2d-operator-conversion/2651/34?u=janimesh","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502306768/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502309015","html_url":"https://github.com/apache/tvm/issues/2351#issuecomment-502309015","issue_url":"https://api.github.com/repos/apache/tvm/issues/2351","id":502309015,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMjMwOTAxNQ==","user":{"login":"anijain2305","id":13822661,"node_id":"MDQ6VXNlcjEzODIyNjYx","avatar_url":"https://avatars.githubusercontent.com/u/13822661?v=4","gravatar_id":"","url":"https://api.github.com/users/anijain2305","html_url":"https://github.com/anijain2305","followers_url":"https://api.github.com/users/anijain2305/followers","following_url":"https://api.github.com/users/anijain2305/following{/other_user}","gists_url":"https://api.github.com/users/anijain2305/gists{/gist_id}","starred_url":"https://api.github.com/users/anijain2305/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/anijain2305/subscriptions","organizations_url":"https://api.github.com/users/anijain2305/orgs","repos_url":"https://api.github.com/users/anijain2305/repos","events_url":"https://api.github.com/users/anijain2305/events{/privacy}","received_events_url":"https://api.github.com/users/anijain2305/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-14T23:21:49Z","updated_at":"2019-06-14T23:21:49Z","author_association":"CONTRIBUTOR","body":"@FrozenGene Thanks for replying. I might be wrong, but I don't think it is a good design to take one codegen backend like QNNPACK and make changes all the way into Relay APIs to make the connection. In my opinion, APIs must be minimal.\r\n\r\nBut, your point of using QNNPACK is completely valid. I have been thinking about that myself, dreading the painful experience of write tensorized kernel for Intel x86, and hoping to somehow use OpenVINO/MKLDNN. But, similarly, I don't think adding MKLDNN/OpenVINO arguments in the Relay API will be right choice either there.\r\n\r\nOne way to handle this is to separate out the Relay operators API that we are discussing and the infrastructure to use external codegen like QNNPACK. I think it is entirely possible to write Relay passes for each codegen backend and then rewrite/fuse the Relay ops in a manner that the codegen backend can understand. In this case, we do not creep in the backend specific idiosyncracies into the Relay op API, while also having a well-defined infrastructure that shows how to add external codegens.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502309015/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502312273","html_url":"https://github.com/apache/tvm/pull/3094#issuecomment-502312273","issue_url":"https://api.github.com/repos/apache/tvm/issues/3094","id":502312273,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMjMxMjI3Mw==","user":{"login":"yongwww","id":10205827,"node_id":"MDQ6VXNlcjEwMjA1ODI3","avatar_url":"https://avatars.githubusercontent.com/u/10205827?v=4","gravatar_id":"","url":"https://api.github.com/users/yongwww","html_url":"https://github.com/yongwww","followers_url":"https://api.github.com/users/yongwww/followers","following_url":"https://api.github.com/users/yongwww/following{/other_user}","gists_url":"https://api.github.com/users/yongwww/gists{/gist_id}","starred_url":"https://api.github.com/users/yongwww/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yongwww/subscriptions","organizations_url":"https://api.github.com/users/yongwww/orgs","repos_url":"https://api.github.com/users/yongwww/repos","events_url":"https://api.github.com/users/yongwww/events{/privacy}","received_events_url":"https://api.github.com/users/yongwww/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-14T23:43:28Z","updated_at":"2019-06-14T23:43:28Z","author_association":"MEMBER","body":"@jroesch @zhiics rebased and fixed zhi's comments.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502312273/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502331093","html_url":"https://github.com/apache/tvm/pull/3372#issuecomment-502331093","issue_url":"https://api.github.com/repos/apache/tvm/issues/3372","id":502331093,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMjMzMTA5Mw==","user":{"login":"apivovarov","id":218087,"node_id":"MDQ6VXNlcjIxODA4Nw==","avatar_url":"https://avatars.githubusercontent.com/u/218087?v=4","gravatar_id":"","url":"https://api.github.com/users/apivovarov","html_url":"https://github.com/apivovarov","followers_url":"https://api.github.com/users/apivovarov/followers","following_url":"https://api.github.com/users/apivovarov/following{/other_user}","gists_url":"https://api.github.com/users/apivovarov/gists{/gist_id}","starred_url":"https://api.github.com/users/apivovarov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/apivovarov/subscriptions","organizations_url":"https://api.github.com/users/apivovarov/orgs","repos_url":"https://api.github.com/users/apivovarov/repos","events_url":"https://api.github.com/users/apivovarov/events{/privacy}","received_events_url":"https://api.github.com/users/apivovarov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-15T03:37:57Z","updated_at":"2019-06-15T03:47:37Z","author_association":"CONTRIBUTOR","body":"I replaced `data[1]` test input data `0,1,2,3,4,5` with `1,2,3,4,5,6` to remove 0 from `data[1]` input data.\r\nZero caused different output results (nan vs 0) for DIV operator with RELU:\r\nprobably it is different handling of divide by zero\r\n```\r\nNot equal to tolerance rtol=1e-05, atol=1e-05\r\nx and y nan location mismatch:\r\ntflite (x): [[[[nan  1.  1.]]], [[[ 1.  1.  1.]]]]\r\ntvm (y): [[[[0. 1. 1.]]], [[[1. 1. 1.]]]]\r\n```","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502331093/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502333631","html_url":"https://github.com/apache/tvm/pull/3376#issuecomment-502333631","issue_url":"https://api.github.com/repos/apache/tvm/issues/3376","id":502333631,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMjMzMzYzMQ==","user":{"login":"apivovarov","id":218087,"node_id":"MDQ6VXNlcjIxODA4Nw==","avatar_url":"https://avatars.githubusercontent.com/u/218087?v=4","gravatar_id":"","url":"https://api.github.com/users/apivovarov","html_url":"https://github.com/apivovarov","followers_url":"https://api.github.com/users/apivovarov/followers","following_url":"https://api.github.com/users/apivovarov/following{/other_user}","gists_url":"https://api.github.com/users/apivovarov/gists{/gist_id}","starred_url":"https://api.github.com/users/apivovarov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/apivovarov/subscriptions","organizations_url":"https://api.github.com/users/apivovarov/orgs","repos_url":"https://api.github.com/users/apivovarov/repos","events_url":"https://api.github.com/users/apivovarov/events{/privacy}","received_events_url":"https://api.github.com/users/apivovarov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-15T04:30:46Z","updated_at":"2019-06-15T04:30:46Z","author_association":"CONTRIBUTOR","body":"@kevinthesun Can you review/merge it?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502333631/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502333804","html_url":"https://github.com/apache/tvm/pull/3376#issuecomment-502333804","issue_url":"https://api.github.com/repos/apache/tvm/issues/3376","id":502333804,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMjMzMzgwNA==","user":{"login":"icemelon","id":2696494,"node_id":"MDQ6VXNlcjI2OTY0OTQ=","avatar_url":"https://avatars.githubusercontent.com/u/2696494?v=4","gravatar_id":"","url":"https://api.github.com/users/icemelon","html_url":"https://github.com/icemelon","followers_url":"https://api.github.com/users/icemelon/followers","following_url":"https://api.github.com/users/icemelon/following{/other_user}","gists_url":"https://api.github.com/users/icemelon/gists{/gist_id}","starred_url":"https://api.github.com/users/icemelon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/icemelon/subscriptions","organizations_url":"https://api.github.com/users/icemelon/orgs","repos_url":"https://api.github.com/users/icemelon/repos","events_url":"https://api.github.com/users/icemelon/events{/privacy}","received_events_url":"https://api.github.com/users/icemelon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-15T04:34:43Z","updated_at":"2019-06-15T04:34:43Z","author_association":"MEMBER","body":"Thanks @apivovarov ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502333804/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502341064","html_url":"https://github.com/apache/tvm/pull/3370#issuecomment-502341064","issue_url":"https://api.github.com/repos/apache/tvm/issues/3370","id":502341064,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMjM0MTA2NA==","user":{"login":"apivovarov","id":218087,"node_id":"MDQ6VXNlcjIxODA4Nw==","avatar_url":"https://avatars.githubusercontent.com/u/218087?v=4","gravatar_id":"","url":"https://api.github.com/users/apivovarov","html_url":"https://github.com/apivovarov","followers_url":"https://api.github.com/users/apivovarov/followers","following_url":"https://api.github.com/users/apivovarov/following{/other_user}","gists_url":"https://api.github.com/users/apivovarov/gists{/gist_id}","starred_url":"https://api.github.com/users/apivovarov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/apivovarov/subscriptions","organizations_url":"https://api.github.com/users/apivovarov/orgs","repos_url":"https://api.github.com/users/apivovarov/repos","events_url":"https://api.github.com/users/apivovarov/events{/privacy}","received_events_url":"https://api.github.com/users/apivovarov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-15T06:53:56Z","updated_at":"2019-06-15T06:53:56Z","author_association":"CONTRIBUTOR","body":"@kevinthesun Can you merge it?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502341064/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502348247","html_url":"https://github.com/apache/tvm/issues/2588#issuecomment-502348247","issue_url":"https://api.github.com/repos/apache/tvm/issues/2588","id":502348247,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMjM0ODI0Nw==","user":{"login":"sgrechanik-h","id":41160472,"node_id":"MDQ6VXNlcjQxMTYwNDcy","avatar_url":"https://avatars.githubusercontent.com/u/41160472?v=4","gravatar_id":"","url":"https://api.github.com/users/sgrechanik-h","html_url":"https://github.com/sgrechanik-h","followers_url":"https://api.github.com/users/sgrechanik-h/followers","following_url":"https://api.github.com/users/sgrechanik-h/following{/other_user}","gists_url":"https://api.github.com/users/sgrechanik-h/gists{/gist_id}","starred_url":"https://api.github.com/users/sgrechanik-h/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sgrechanik-h/subscriptions","organizations_url":"https://api.github.com/users/sgrechanik-h/orgs","repos_url":"https://api.github.com/users/sgrechanik-h/repos","events_url":"https://api.github.com/users/sgrechanik-h/events{/privacy}","received_events_url":"https://api.github.com/users/sgrechanik-h/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-15T08:56:16Z","updated_at":"2019-06-15T08:56:16Z","author_association":"CONTRIBUTOR","body":"@tqchen One thing I wanted to clarify: why isn't the Analyzer class integrated into the Node hierarchy? Instead some separate closure-based mechanism is used for python integration, which feels strange and seemingly makes it harder to create functions which accept Analyzer objects and work across both languages.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502348247/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502366780","html_url":"https://github.com/apache/tvm/issues/2351#issuecomment-502366780","issue_url":"https://api.github.com/repos/apache/tvm/issues/2351","id":502366780,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMjM2Njc4MA==","user":{"login":"FrozenGene","id":7287321,"node_id":"MDQ6VXNlcjcyODczMjE=","avatar_url":"https://avatars.githubusercontent.com/u/7287321?v=4","gravatar_id":"","url":"https://api.github.com/users/FrozenGene","html_url":"https://github.com/FrozenGene","followers_url":"https://api.github.com/users/FrozenGene/followers","following_url":"https://api.github.com/users/FrozenGene/following{/other_user}","gists_url":"https://api.github.com/users/FrozenGene/gists{/gist_id}","starred_url":"https://api.github.com/users/FrozenGene/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/FrozenGene/subscriptions","organizations_url":"https://api.github.com/users/FrozenGene/orgs","repos_url":"https://api.github.com/users/FrozenGene/repos","events_url":"https://api.github.com/users/FrozenGene/events{/privacy}","received_events_url":"https://api.github.com/users/FrozenGene/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-15T13:25:31Z","updated_at":"2019-06-15T13:27:59Z","author_association":"MEMBER","body":"@anijain2305 I understand your thought. I agree we should make the api minimal. However, no matter what way, q_conv2d’s int32 output should be clamped into uint8 range. If you don’t pass min / max, you also need do `output = std::max(output, 0)` and `output = std::min(output, 255)` then return output. So why not we set the default the value output_min = 0 / output_max = 255, and make the computation be `output = std::max(output, output_min)` and `output= std::min(output, output_max)` which will be suitable for tflite / mxnet / qnnpack and so on... API design is very important, we should consider as far as we could(tflite / mxnet , even other library we should also consider, qnnpack is a very high performance library on arm cpu, we can not avoid discussing it in my opinion), otherwise we have to do tricky workaround in the future when we do something. This is my point I wish to express before.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502366780/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502370588","html_url":"https://github.com/apache/tvm/pull/3377#issuecomment-502370588","issue_url":"https://api.github.com/repos/apache/tvm/issues/3377","id":502370588,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMjM3MDU4OA==","user":{"login":"crcrpar","id":16191443,"node_id":"MDQ6VXNlcjE2MTkxNDQz","avatar_url":"https://avatars.githubusercontent.com/u/16191443?v=4","gravatar_id":"","url":"https://api.github.com/users/crcrpar","html_url":"https://github.com/crcrpar","followers_url":"https://api.github.com/users/crcrpar/followers","following_url":"https://api.github.com/users/crcrpar/following{/other_user}","gists_url":"https://api.github.com/users/crcrpar/gists{/gist_id}","starred_url":"https://api.github.com/users/crcrpar/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/crcrpar/subscriptions","organizations_url":"https://api.github.com/users/crcrpar/orgs","repos_url":"https://api.github.com/users/crcrpar/repos","events_url":"https://api.github.com/users/crcrpar/events{/privacy}","received_events_url":"https://api.github.com/users/crcrpar/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-15T14:16:54Z","updated_at":"2019-06-15T14:16:54Z","author_association":"NONE","body":"I found that tvm in the docker image was v0.4.0 which did not have `tvm.testing`.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502370588/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502376311","html_url":"https://github.com/apache/tvm/issues/2351#issuecomment-502376311","issue_url":"https://api.github.com/repos/apache/tvm/issues/2351","id":502376311,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMjM3NjMxMQ==","user":{"login":"shoubhik","id":2293791,"node_id":"MDQ6VXNlcjIyOTM3OTE=","avatar_url":"https://avatars.githubusercontent.com/u/2293791?v=4","gravatar_id":"","url":"https://api.github.com/users/shoubhik","html_url":"https://github.com/shoubhik","followers_url":"https://api.github.com/users/shoubhik/followers","following_url":"https://api.github.com/users/shoubhik/following{/other_user}","gists_url":"https://api.github.com/users/shoubhik/gists{/gist_id}","starred_url":"https://api.github.com/users/shoubhik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/shoubhik/subscriptions","organizations_url":"https://api.github.com/users/shoubhik/orgs","repos_url":"https://api.github.com/users/shoubhik/repos","events_url":"https://api.github.com/users/shoubhik/events{/privacy}","received_events_url":"https://api.github.com/users/shoubhik/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-15T15:35:17Z","updated_at":"2019-06-15T15:35:17Z","author_association":"CONTRIBUTOR","body":"@FrozenGene a clarifying question to your above comment. If we pass in the output scale and shift can we not compute int32-> int8 by simply adding more nodes in the graph.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502376311/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502383341","html_url":"https://github.com/apache/tvm/issues/2351#issuecomment-502383341","issue_url":"https://api.github.com/repos/apache/tvm/issues/2351","id":502383341,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMjM4MzM0MQ==","user":{"login":"anijain2305","id":13822661,"node_id":"MDQ6VXNlcjEzODIyNjYx","avatar_url":"https://avatars.githubusercontent.com/u/13822661?v=4","gravatar_id":"","url":"https://api.github.com/users/anijain2305","html_url":"https://github.com/anijain2305","followers_url":"https://api.github.com/users/anijain2305/followers","following_url":"https://api.github.com/users/anijain2305/following{/other_user}","gists_url":"https://api.github.com/users/anijain2305/gists{/gist_id}","starred_url":"https://api.github.com/users/anijain2305/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/anijain2305/subscriptions","organizations_url":"https://api.github.com/users/anijain2305/orgs","repos_url":"https://api.github.com/users/anijain2305/repos","events_url":"https://api.github.com/users/anijain2305/events{/privacy}","received_events_url":"https://api.github.com/users/anijain2305/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-15T17:08:26Z","updated_at":"2019-06-15T17:08:26Z","author_association":"CONTRIBUTOR","body":"@FrozenGene For the output_min and max, isn't the out_dtype enough? If its uint8, we can clamp at 0 and 255. If its int8, we can clamp at -128 and 127. I don't see any reason the values will be any different, unless you want to fuse the quantized relu in the quantized convolution from the starting itself. Please let me know if I am understanding something wrong. I think we should not fuse operators in the frontend and let Relay graph fusion take care of that.\r\n\r\nLet's see what others think about this.  @tqchen @yzhliu @ZihengJiang What are your thoughts on this?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502383341/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502401254","html_url":"https://github.com/apache/tvm/issues/2351#issuecomment-502401254","issue_url":"https://api.github.com/repos/apache/tvm/issues/2351","id":502401254,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMjQwMTI1NA==","user":{"login":"jnorwood","id":1499591,"node_id":"MDQ6VXNlcjE0OTk1OTE=","avatar_url":"https://avatars.githubusercontent.com/u/1499591?v=4","gravatar_id":"","url":"https://api.github.com/users/jnorwood","html_url":"https://github.com/jnorwood","followers_url":"https://api.github.com/users/jnorwood/followers","following_url":"https://api.github.com/users/jnorwood/following{/other_user}","gists_url":"https://api.github.com/users/jnorwood/gists{/gist_id}","starred_url":"https://api.github.com/users/jnorwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jnorwood/subscriptions","organizations_url":"https://api.github.com/users/jnorwood/orgs","repos_url":"https://api.github.com/users/jnorwood/repos","events_url":"https://api.github.com/users/jnorwood/events{/privacy}","received_events_url":"https://api.github.com/users/jnorwood/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-15T21:38:03Z","updated_at":"2019-06-15T21:41:02Z","author_association":"NONE","body":"The tflite quantized convolution reference implementation passes in both limits as int32 values.  It appears to me this would let them simulate smaller than 8 bit quantizations, if that is something you want to support.\r\n\r\nthis is from  ` tensorflow/lite/kernels/internal/reference/conv.h `\r\n\r\n\r\n`\r\n acc = MultiplyByQuantizedMultiplier(acc, output_multiplier,\r\n                                              output_shift);\r\n\r\n          acc += output_offset;\r\n\r\n          acc = std::max(acc, output_activation_min);\r\n\r\n          acc = std::min(acc, output_activation_max);\r\n\r\n`\r\n\r\n ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502401254/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502411338","html_url":"https://github.com/apache/tvm/issues/2351#issuecomment-502411338","issue_url":"https://api.github.com/repos/apache/tvm/issues/2351","id":502411338,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMjQxMTMzOA==","user":{"login":"zhenhuaw-me","id":4936589,"node_id":"MDQ6VXNlcjQ5MzY1ODk=","avatar_url":"https://avatars.githubusercontent.com/u/4936589?v=4","gravatar_id":"","url":"https://api.github.com/users/zhenhuaw-me","html_url":"https://github.com/zhenhuaw-me","followers_url":"https://api.github.com/users/zhenhuaw-me/followers","following_url":"https://api.github.com/users/zhenhuaw-me/following{/other_user}","gists_url":"https://api.github.com/users/zhenhuaw-me/gists{/gist_id}","starred_url":"https://api.github.com/users/zhenhuaw-me/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zhenhuaw-me/subscriptions","organizations_url":"https://api.github.com/users/zhenhuaw-me/orgs","repos_url":"https://api.github.com/users/zhenhuaw-me/repos","events_url":"https://api.github.com/users/zhenhuaw-me/events{/privacy}","received_events_url":"https://api.github.com/users/zhenhuaw-me/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-16T01:21:14Z","updated_at":"2019-06-16T01:21:25Z","author_association":"CONTRIBUTOR","body":"> It appears to me this would let them simulate smaller than 8 bit quantizations.\r\n\r\nIf *simulating 8 smaller bit* is the case, 8 bit should be able to hold activation min/max value.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502411338/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502417024","html_url":"https://github.com/apache/tvm/issues/2351#issuecomment-502417024","issue_url":"https://api.github.com/repos/apache/tvm/issues/2351","id":502417024,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMjQxNzAyNA==","user":{"login":"FrozenGene","id":7287321,"node_id":"MDQ6VXNlcjcyODczMjE=","avatar_url":"https://avatars.githubusercontent.com/u/7287321?v=4","gravatar_id":"","url":"https://api.github.com/users/FrozenGene","html_url":"https://github.com/FrozenGene","followers_url":"https://api.github.com/users/FrozenGene/followers","following_url":"https://api.github.com/users/FrozenGene/following{/other_user}","gists_url":"https://api.github.com/users/FrozenGene/gists{/gist_id}","starred_url":"https://api.github.com/users/FrozenGene/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/FrozenGene/subscriptions","organizations_url":"https://api.github.com/users/FrozenGene/orgs","repos_url":"https://api.github.com/users/FrozenGene/repos","events_url":"https://api.github.com/users/FrozenGene/events{/privacy}","received_events_url":"https://api.github.com/users/FrozenGene/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-16T03:40:43Z","updated_at":"2019-06-16T03:40:43Z","author_association":"MEMBER","body":"> @FrozenGene a clarifying question to your above comment. If we pass in the output scale and shift can we not compute int32-> int8 by simply adding more nodes in the graph.\r\n\r\ndoesn't understand your comment fully. do you mean could we avoid int32 -> int8 computation? If so, I think we can not. We need `requant` operation (int32 -> int8) (https://github.com/tensorflow/tensorflow/blob/v2.0.0-beta1/tensorflow/lite/kernels/internal/reference/conv.h#L171)","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502417024/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502417146","html_url":"https://github.com/apache/tvm/issues/2351#issuecomment-502417146","issue_url":"https://api.github.com/repos/apache/tvm/issues/2351","id":502417146,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMjQxNzE0Ng==","user":{"login":"FrozenGene","id":7287321,"node_id":"MDQ6VXNlcjcyODczMjE=","avatar_url":"https://avatars.githubusercontent.com/u/7287321?v=4","gravatar_id":"","url":"https://api.github.com/users/FrozenGene","html_url":"https://github.com/FrozenGene","followers_url":"https://api.github.com/users/FrozenGene/followers","following_url":"https://api.github.com/users/FrozenGene/following{/other_user}","gists_url":"https://api.github.com/users/FrozenGene/gists{/gist_id}","starred_url":"https://api.github.com/users/FrozenGene/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/FrozenGene/subscriptions","organizations_url":"https://api.github.com/users/FrozenGene/orgs","repos_url":"https://api.github.com/users/FrozenGene/repos","events_url":"https://api.github.com/users/FrozenGene/events{/privacy}","received_events_url":"https://api.github.com/users/FrozenGene/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-16T03:43:31Z","updated_at":"2019-06-16T04:54:10Z","author_association":"MEMBER","body":"> > It appears to me this would let them simulate smaller than 8 bit quantizations.\r\n> \r\n> If _simulating 8 smaller bit_ is the case, 8 bit should be able to hold activation min/max value.\r\n\r\n8 bits could hold. But what the value output_min / output_max is ? I think @jnorwood want to express this point. Because we can not just simply use `out_dtype` to decide what the value range is. But if we insert `clip` op in frontend, I think it also could handle. Need some logic to calculate the min / max. see my next comment.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502417146/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502418630","html_url":"https://github.com/apache/tvm/issues/2351#issuecomment-502418630","issue_url":"https://api.github.com/repos/apache/tvm/issues/2351","id":502418630,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMjQxODYzMA==","user":{"login":"FrozenGene","id":7287321,"node_id":"MDQ6VXNlcjcyODczMjE=","avatar_url":"https://avatars.githubusercontent.com/u/7287321?v=4","gravatar_id":"","url":"https://api.github.com/users/FrozenGene","html_url":"https://github.com/FrozenGene","followers_url":"https://api.github.com/users/FrozenGene/followers","following_url":"https://api.github.com/users/FrozenGene/following{/other_user}","gists_url":"https://api.github.com/users/FrozenGene/gists{/gist_id}","starred_url":"https://api.github.com/users/FrozenGene/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/FrozenGene/subscriptions","organizations_url":"https://api.github.com/users/FrozenGene/orgs","repos_url":"https://api.github.com/users/FrozenGene/repos","events_url":"https://api.github.com/users/FrozenGene/events{/privacy}","received_events_url":"https://api.github.com/users/FrozenGene/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-16T04:18:24Z","updated_at":"2019-06-16T04:19:43Z","author_association":"MEMBER","body":"> @FrozenGene For the output_min and max, isn't the out_dtype enough? If its uint8, we can clamp at 0 and 255. If its int8, we can clamp at -128 and 127. I don't see any reason the values will be any different, unless you want to fuse the quantized relu in the quantized convolution from the starting itself. Please let me know if I am understanding something wrong. I think we should not fuse operators in the frontend and let Relay graph fusion take care of that.\r\n> \r\n> Let's see what others think about this. @tqchen @yzhliu @ZihengJiang What are your thoughts on this?\r\n\r\nI think it is ok. If we do this way,  we should insert one clamp if we have activation.\r\nLike our tflite frontend\r\n```python\r\n# If we have fused activations\r\nif fused_activation_fn != ActivationFunctionType.NONE:\r\n  if weight_tensor_type == TensorType.UINT8:\r\n     # implement this function  \r\n     output_min, output_max = self.calculate_activation_range_uint8(output_scale, output_zero_point, fused_activation_fn)\r\n     # insert clip\r\n     out = _op.clip(out, output_min, output_max)\r\n  out = self.convert_fused_activation_function(out, fused_activation_fn)\r\n```","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502418630/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502469189","html_url":"https://github.com/apache/tvm/issues/2651#issuecomment-502469189","issue_url":"https://api.github.com/repos/apache/tvm/issues/2651","id":502469189,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMjQ2OTE4OQ==","user":{"login":"vinx13","id":7195739,"node_id":"MDQ6VXNlcjcxOTU3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/7195739?v=4","gravatar_id":"","url":"https://api.github.com/users/vinx13","html_url":"https://github.com/vinx13","followers_url":"https://api.github.com/users/vinx13/followers","following_url":"https://api.github.com/users/vinx13/following{/other_user}","gists_url":"https://api.github.com/users/vinx13/gists{/gist_id}","starred_url":"https://api.github.com/users/vinx13/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vinx13/subscriptions","organizations_url":"https://api.github.com/users/vinx13/orgs","repos_url":"https://api.github.com/users/vinx13/repos","events_url":"https://api.github.com/users/vinx13/events{/privacy}","received_events_url":"https://api.github.com/users/vinx13/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-16T17:07:02Z","updated_at":"2019-06-16T17:08:08Z","author_association":"MEMBER","body":"I have implemented KL divergence based calibration (ported from MXNet) in my branch https://github.com/vinx13/tvm/tree/feature/calibration.\r\nSimilar to #3294, it first runs on a few samples and collects profiles. Scales of activation are chosen to minimize KLD between original and quantized distributions.\r\nScales of weight can be either power-of-2 or taking maximum directly without rounding.\r\nIt also allows special handling of bias by introducing a new kind `QAnnotateKind.BIAS`. Some experiments showed that increasing nbits of bias from 8 to 16 can be helpful. But the optimal number of bits for bias is still unclear.\r\nCurrently it stored profile results in memory. This may cause memory issue when #layers or #samples in calibration set grow.\r\n@eqy I plan to adopt to the `calibrate` interface in #3294 and prepare a PR.\r\nAny comments are welcomed.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502469189/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502478516","html_url":"https://github.com/apache/tvm/issues/2351#issuecomment-502478516","issue_url":"https://api.github.com/repos/apache/tvm/issues/2351","id":502478516,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMjQ3ODUxNg==","user":{"login":"anijain2305","id":13822661,"node_id":"MDQ6VXNlcjEzODIyNjYx","avatar_url":"https://avatars.githubusercontent.com/u/13822661?v=4","gravatar_id":"","url":"https://api.github.com/users/anijain2305","html_url":"https://github.com/anijain2305","followers_url":"https://api.github.com/users/anijain2305/followers","following_url":"https://api.github.com/users/anijain2305/following{/other_user}","gists_url":"https://api.github.com/users/anijain2305/gists{/gist_id}","starred_url":"https://api.github.com/users/anijain2305/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/anijain2305/subscriptions","organizations_url":"https://api.github.com/users/anijain2305/orgs","repos_url":"https://api.github.com/users/anijain2305/repos","events_url":"https://api.github.com/users/anijain2305/events{/privacy}","received_events_url":"https://api.github.com/users/anijain2305/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-16T19:19:33Z","updated_at":"2019-06-16T19:19:33Z","author_association":"CONTRIBUTOR","body":"> I think it is ok. If we do this way, we should insert one clamp if we have activation.\r\n> Like our tflite frontend\r\n\r\nYes, I agree with that. That's exactly what I was thinking.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502478516/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502481388","html_url":"https://github.com/apache/tvm/issues/2351#issuecomment-502481388","issue_url":"https://api.github.com/repos/apache/tvm/issues/2351","id":502481388,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMjQ4MTM4OA==","user":{"login":"jnorwood","id":1499591,"node_id":"MDQ6VXNlcjE0OTk1OTE=","avatar_url":"https://avatars.githubusercontent.com/u/1499591?v=4","gravatar_id":"","url":"https://api.github.com/users/jnorwood","html_url":"https://github.com/jnorwood","followers_url":"https://api.github.com/users/jnorwood/followers","following_url":"https://api.github.com/users/jnorwood/following{/other_user}","gists_url":"https://api.github.com/users/jnorwood/gists{/gist_id}","starred_url":"https://api.github.com/users/jnorwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jnorwood/subscriptions","organizations_url":"https://api.github.com/users/jnorwood/orgs","repos_url":"https://api.github.com/users/jnorwood/repos","events_url":"https://api.github.com/users/jnorwood/events{/privacy}","received_events_url":"https://api.github.com/users/jnorwood/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-16T20:02:19Z","updated_at":"2019-06-16T20:02:19Z","author_association":"NONE","body":"The min and max are not conditional on existence of activation operation in the original model.  They are there to saturate the downscaled and offset adjusted 32 bit signed int accumulator to the min and max value of the uint8 quantized bit range. \r\n\r\nAlthough the quantized conv result is held in uint8, it could be static casted to signed int8, or even fewer than 8 bit quantization.  That would require both min and max saturations, as in the reference tflite quantized conv implementation.    ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502481388/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502492887","html_url":"https://github.com/apache/tvm/issues/2351#issuecomment-502492887","issue_url":"https://api.github.com/repos/apache/tvm/issues/2351","id":502492887,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMjQ5Mjg4Nw==","user":{"login":"anijain2305","id":13822661,"node_id":"MDQ6VXNlcjEzODIyNjYx","avatar_url":"https://avatars.githubusercontent.com/u/13822661?v=4","gravatar_id":"","url":"https://api.github.com/users/anijain2305","html_url":"https://github.com/anijain2305","followers_url":"https://api.github.com/users/anijain2305/followers","following_url":"https://api.github.com/users/anijain2305/following{/other_user}","gists_url":"https://api.github.com/users/anijain2305/gists{/gist_id}","starred_url":"https://api.github.com/users/anijain2305/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/anijain2305/subscriptions","organizations_url":"https://api.github.com/users/anijain2305/orgs","repos_url":"https://api.github.com/users/anijain2305/repos","events_url":"https://api.github.com/users/anijain2305/events{/privacy}","received_events_url":"https://api.github.com/users/anijain2305/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-16T22:58:43Z","updated_at":"2019-06-16T22:58:43Z","author_association":"CONTRIBUTOR","body":"> Although the quantized conv result is held in uint8, it could be static casted to signed int8, or even fewer than 8 bit quantization. That would require both min and max saturations, as in the reference tflite quantized conv implementation\r\n\r\nAh, I see. That finally makes sense.\r\nSo, this is not about activation. This is about what representation one is using for storing the floating point values. For example, if it is 7-bits, we will need the output min/max saturations. Cool, I will add them into the API and add corresponding documentation.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502492887/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502508081","html_url":"https://github.com/apache/tvm/issues/2351#issuecomment-502508081","issue_url":"https://api.github.com/repos/apache/tvm/issues/2351","id":502508081,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMjUwODA4MQ==","user":{"login":"zhenhuaw-me","id":4936589,"node_id":"MDQ6VXNlcjQ5MzY1ODk=","avatar_url":"https://avatars.githubusercontent.com/u/4936589?v=4","gravatar_id":"","url":"https://api.github.com/users/zhenhuaw-me","html_url":"https://github.com/zhenhuaw-me","followers_url":"https://api.github.com/users/zhenhuaw-me/followers","following_url":"https://api.github.com/users/zhenhuaw-me/following{/other_user}","gists_url":"https://api.github.com/users/zhenhuaw-me/gists{/gist_id}","starred_url":"https://api.github.com/users/zhenhuaw-me/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zhenhuaw-me/subscriptions","organizations_url":"https://api.github.com/users/zhenhuaw-me/orgs","repos_url":"https://api.github.com/users/zhenhuaw-me/repos","events_url":"https://api.github.com/users/zhenhuaw-me/events{/privacy}","received_events_url":"https://api.github.com/users/zhenhuaw-me/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-17T01:52:45Z","updated_at":"2019-06-17T01:56:36Z","author_association":"CONTRIBUTOR","body":"> So, this is not about activation.\r\n\r\nOf course it comes from activation, and is related to zero point and scale. For this min/max activation:\r\n1. They are even [named with activation when used in computing kernel](https://github.com/tensorflow/tensorflow/blob/v2.0.0-beta1/tensorflow/lite/kernels/internal/reference/conv.h#L174-L175)\r\n2. The min/max is [generated at the *prepare* stage of convolution](https://github.com/tensorflow/tensorflow/blob/v2.0.0-beta1/tensorflow/lite/kernels/conv.cc#L312-L318)\r\n3. The function in 2 eventually calls [`CalculateActivationRangeQuantizedImpl`](https://github.com/tensorflow/tensorflow/blob/v2.0.0-beta1/tensorflow/lite/kernels/kernel_util.cc#L138-L163)\r\n4. Min/max are set to the representable value range of a data type ONLY when there is no activation is found in the fused operator.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502508081/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502508330","html_url":"https://github.com/apache/tvm/issues/2351#issuecomment-502508330","issue_url":"https://api.github.com/repos/apache/tvm/issues/2351","id":502508330,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMjUwODMzMA==","user":{"login":"jnorwood","id":1499591,"node_id":"MDQ6VXNlcjE0OTk1OTE=","avatar_url":"https://avatars.githubusercontent.com/u/1499591?v=4","gravatar_id":"","url":"https://api.github.com/users/jnorwood","html_url":"https://github.com/jnorwood","followers_url":"https://api.github.com/users/jnorwood/followers","following_url":"https://api.github.com/users/jnorwood/following{/other_user}","gists_url":"https://api.github.com/users/jnorwood/gists{/gist_id}","starred_url":"https://api.github.com/users/jnorwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jnorwood/subscriptions","organizations_url":"https://api.github.com/users/jnorwood/orgs","repos_url":"https://api.github.com/users/jnorwood/repos","events_url":"https://api.github.com/users/jnorwood/events{/privacy}","received_events_url":"https://api.github.com/users/jnorwood/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-17T01:54:40Z","updated_at":"2019-06-17T01:54:40Z","author_association":"NONE","body":"yes, right.  The scaling constant computed during training is based on the range of values seen after fused in activations (at least that is true for the tflite quantized models I've looked at).  That includes being after the relu6 positive clipping also.   During inference, the  min and max saturation values are just handling saturation of values seen outside the range expected from the training... whether or not there was a fused in activation operation during training.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502508330/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502508779","html_url":"https://github.com/apache/tvm/issues/2351#issuecomment-502508779","issue_url":"https://api.github.com/repos/apache/tvm/issues/2351","id":502508779,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMjUwODc3OQ==","user":{"login":"zhenhuaw-me","id":4936589,"node_id":"MDQ6VXNlcjQ5MzY1ODk=","avatar_url":"https://avatars.githubusercontent.com/u/4936589?v=4","gravatar_id":"","url":"https://api.github.com/users/zhenhuaw-me","html_url":"https://github.com/zhenhuaw-me","followers_url":"https://api.github.com/users/zhenhuaw-me/followers","following_url":"https://api.github.com/users/zhenhuaw-me/following{/other_user}","gists_url":"https://api.github.com/users/zhenhuaw-me/gists{/gist_id}","starred_url":"https://api.github.com/users/zhenhuaw-me/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zhenhuaw-me/subscriptions","organizations_url":"https://api.github.com/users/zhenhuaw-me/orgs","repos_url":"https://api.github.com/users/zhenhuaw-me/repos","events_url":"https://api.github.com/users/zhenhuaw-me/events{/privacy}","received_events_url":"https://api.github.com/users/zhenhuaw-me/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-17T01:57:44Z","updated_at":"2019-06-17T01:57:44Z","author_association":"CONTRIBUTOR","body":"> > > It appears to me this would let them simulate smaller than 8 bit quantizations.\r\n> > \r\n> > \r\n> > If _simulating 8 smaller bit_ is the case, 8 bit should be able to hold activation min/max value.\r\n> \r\n> 8 bits could hold. But what the value output_min / output_max is ? I think @jnorwood want to express this point. Because we can not just simply use `out_dtype` to decide what the value range is. But if we insert `clip` op in frontend, I think it also could handle. Need some logic to calculate the min / max. see my next comment.\r\n\r\nI was saying the *It appears to me this would let them simulate smaller than 8 bit quantizations* reasoning could be somehow not the only possibility.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502508779/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502512255","html_url":"https://github.com/apache/tvm/issues/2351#issuecomment-502512255","issue_url":"https://api.github.com/repos/apache/tvm/issues/2351","id":502512255,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMjUxMjI1NQ==","user":{"login":"zhenhuaw-me","id":4936589,"node_id":"MDQ6VXNlcjQ5MzY1ODk=","avatar_url":"https://avatars.githubusercontent.com/u/4936589?v=4","gravatar_id":"","url":"https://api.github.com/users/zhenhuaw-me","html_url":"https://github.com/zhenhuaw-me","followers_url":"https://api.github.com/users/zhenhuaw-me/followers","following_url":"https://api.github.com/users/zhenhuaw-me/following{/other_user}","gists_url":"https://api.github.com/users/zhenhuaw-me/gists{/gist_id}","starred_url":"https://api.github.com/users/zhenhuaw-me/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zhenhuaw-me/subscriptions","organizations_url":"https://api.github.com/users/zhenhuaw-me/orgs","repos_url":"https://api.github.com/users/zhenhuaw-me/repos","events_url":"https://api.github.com/users/zhenhuaw-me/events{/privacy}","received_events_url":"https://api.github.com/users/zhenhuaw-me/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-17T02:21:06Z","updated_at":"2019-06-17T02:21:06Z","author_association":"CONTRIBUTOR","body":"> During inference, the min and max saturation values are just handling saturation of values seen outside the range expected from the training...\r\n\r\nI guess the saturation is exactly what activations (ReLU family) mean, semantically. :)\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502512255/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502515514","html_url":"https://github.com/apache/tvm/issues/2351#issuecomment-502515514","issue_url":"https://api.github.com/repos/apache/tvm/issues/2351","id":502515514,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMjUxNTUxNA==","user":{"login":"FrozenGene","id":7287321,"node_id":"MDQ6VXNlcjcyODczMjE=","avatar_url":"https://avatars.githubusercontent.com/u/7287321?v=4","gravatar_id":"","url":"https://api.github.com/users/FrozenGene","html_url":"https://github.com/FrozenGene","followers_url":"https://api.github.com/users/FrozenGene/followers","following_url":"https://api.github.com/users/FrozenGene/following{/other_user}","gists_url":"https://api.github.com/users/FrozenGene/gists{/gist_id}","starred_url":"https://api.github.com/users/FrozenGene/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/FrozenGene/subscriptions","organizations_url":"https://api.github.com/users/FrozenGene/orgs","repos_url":"https://api.github.com/users/FrozenGene/repos","events_url":"https://api.github.com/users/FrozenGene/events{/privacy}","received_events_url":"https://api.github.com/users/FrozenGene/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-17T02:42:31Z","updated_at":"2019-06-17T02:44:41Z","author_association":"MEMBER","body":"> > Although the quantized conv result is held in uint8, it could be static casted to signed int8, or even fewer than 8 bit quantization. That would require both min and max saturations, as in the reference tflite quantized conv implementation\r\n> \r\n> Ah, I see. That finally makes sense.\r\n> So, this is not about activation. This is about what representation one is using for storing the floating point values. For example, if it is 7-bits, we will need the output min/max saturations. Cool, I will add them into the API and add corresponding documentation.\r\n\r\nSee @jackwish 's comment. As my code `calculate_activation_range_uint8` means, only when no activation, we will have the range of data type. i.e. if we don't have activation, we will have 0 - 255 if it is uint8. If we have RELU6, we will have https://github.com/tensorflow/tensorflow/blob/v2.0.0-beta1/tensorflow/lite/kernels/kernel_util.cc#L152\r\n\r\nSo, how about if we are 7-bits, alright, we could also use 8 bits to represent output_min / output_max in conv's compute kernel. i.e. the output_min / output_max is 0 / 255. But in our frontend, we will be like this:\r\n``` python\r\n# If we are 7-bits\r\n  if weight_tensor_type == TensorType.UINT7:\r\n     # implement this function  \r\n     output_min, output_max = self.calculate_activation_range_uint7(output_scale, output_zero_point, fused_activation_fn)\r\n     # insert clip\r\n     out = _op.clip(out, output_min, output_max)\r\n```\r\n\r\nThat is to say no matter whether we have activation, we will have one `clip`. If no activation, we will clamp it to 0 / 127. Because we represent it in 0 / 255, this is 8 bits range. If we have activation, for example, RELU6, the code will change too https://github.com/tensorflow/tensorflow/blob/v2.0.0-beta1/tensorflow/lite/kernels/kernel_util.cc#L152:\r\n```cpp\r\n   *act_min = std::max(qmin, quantize(0.0));\r\n   *act_max = std::min(qmax, quantize(6.0));\r\n```\r\nq_min is 0, q_max is 127. \r\n\r\nSo, if we decide to insert `clip` operator in frontend, we could handle fewer 8 bits too. \r\n\r\nOne potential optimization :\r\nIf TVM support data type like UINT7, we could do the logic like UINT8, which means we could avoid inserting `clip` operator in frontend if we have no activation (just set out_dtype be UINT7). But however, i think it shouldn't be the bottleneck.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502515514/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502521939","html_url":"https://github.com/apache/tvm/issues/2351#issuecomment-502521939","issue_url":"https://api.github.com/repos/apache/tvm/issues/2351","id":502521939,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMjUyMTkzOQ==","user":{"login":"jnorwood","id":1499591,"node_id":"MDQ6VXNlcjE0OTk1OTE=","avatar_url":"https://avatars.githubusercontent.com/u/1499591?v=4","gravatar_id":"","url":"https://api.github.com/users/jnorwood","html_url":"https://github.com/jnorwood","followers_url":"https://api.github.com/users/jnorwood/followers","following_url":"https://api.github.com/users/jnorwood/following{/other_user}","gists_url":"https://api.github.com/users/jnorwood/gists{/gist_id}","starred_url":"https://api.github.com/users/jnorwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jnorwood/subscriptions","organizations_url":"https://api.github.com/users/jnorwood/orgs","repos_url":"https://api.github.com/users/jnorwood/repos","events_url":"https://api.github.com/users/jnorwood/events{/privacy}","received_events_url":"https://api.github.com/users/jnorwood/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-17T03:28:06Z","updated_at":"2019-06-17T03:28:06Z","author_association":"NONE","body":"> I guess the saturation is exactly what activations (ReLU family) mean, semantically. :)\r\n \r\nIn the case of the tflite quantized models I've looked at, the batch normalization and relu6 operations in training are fused into the conv operations used during inference.   You probably need to fuse the relu6 to match their results.\r\n\r\nThis paper removes the relu6 and batch norm associated with the depthwise convs in a mobilenet modification.  You would still need the min and max values for those depthwise conv operations even though there is no fused activation.  So, that is all I was trying to say ... those min and max values are really to saturate the quantization range, rather than representing an activation operation.\r\n\r\n` https://arxiv.org/pdf/1803.08607.pdf `\r\n","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502521939/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502526450","html_url":"https://github.com/apache/tvm/issues/2351#issuecomment-502526450","issue_url":"https://api.github.com/repos/apache/tvm/issues/2351","id":502526450,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMjUyNjQ1MA==","user":{"login":"FrozenGene","id":7287321,"node_id":"MDQ6VXNlcjcyODczMjE=","avatar_url":"https://avatars.githubusercontent.com/u/7287321?v=4","gravatar_id":"","url":"https://api.github.com/users/FrozenGene","html_url":"https://github.com/FrozenGene","followers_url":"https://api.github.com/users/FrozenGene/followers","following_url":"https://api.github.com/users/FrozenGene/following{/other_user}","gists_url":"https://api.github.com/users/FrozenGene/gists{/gist_id}","starred_url":"https://api.github.com/users/FrozenGene/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/FrozenGene/subscriptions","organizations_url":"https://api.github.com/users/FrozenGene/orgs","repos_url":"https://api.github.com/users/FrozenGene/repos","events_url":"https://api.github.com/users/FrozenGene/events{/privacy}","received_events_url":"https://api.github.com/users/FrozenGene/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-17T03:59:32Z","updated_at":"2019-06-17T03:59:32Z","author_association":"MEMBER","body":"> `https://arxiv.org/pdf/1803.08607.pdf`\r\n\r\nQualcomm's Way? Let us see the Google's TFLite model:\r\n![image](https://user-images.githubusercontent.com/7287321/59577624-0f541000-90f7-11e9-9044-2153d6f9ccda.png)\r\n\r\nWe have the quantized model doesn't remove RELU6 in dw conv / conv. I think we should focus on the TFLite's code / TFLite's way.\r\n\r\nCome back to Qualcomm's paper, if we decide to support that way, we could also write logic in frontend and insert correct `clip` operator. However, I think we have no obvious reason to support this way.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502526450/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502530374","html_url":"https://github.com/apache/tvm/issues/2351#issuecomment-502530374","issue_url":"https://api.github.com/repos/apache/tvm/issues/2351","id":502530374,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMjUzMDM3NA==","user":{"login":"jnorwood","id":1499591,"node_id":"MDQ6VXNlcjE0OTk1OTE=","avatar_url":"https://avatars.githubusercontent.com/u/1499591?v=4","gravatar_id":"","url":"https://api.github.com/users/jnorwood","html_url":"https://github.com/jnorwood","followers_url":"https://api.github.com/users/jnorwood/followers","following_url":"https://api.github.com/users/jnorwood/following{/other_user}","gists_url":"https://api.github.com/users/jnorwood/gists{/gist_id}","starred_url":"https://api.github.com/users/jnorwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jnorwood/subscriptions","organizations_url":"https://api.github.com/users/jnorwood/orgs","repos_url":"https://api.github.com/users/jnorwood/repos","events_url":"https://api.github.com/users/jnorwood/events{/privacy}","received_events_url":"https://api.github.com/users/jnorwood/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-17T04:28:23Z","updated_at":"2019-06-17T04:28:23Z","author_association":"NONE","body":">  If no activation, we will clamp it to 0 / 127. \r\n\r\nIn the tflite quantized conv implementation ( I posted an excerpt from their code previously) the offset is added in prior to the clamping.  The tflite quantized models in their repository used uint8 asymmetric quantization with non-zero offsets for activations and weights and int32 for biases .  In that case min and max values passed into the quantized conv are always 0 and 255.\r\n\r\nIt appears to me, though, that someone who wrote that conv code might have also considered supporting return of signed int8 quantized values ... since they provided  a signed int32 min saturation value.  If signed int8 quantization is a tflite quantization conversion option, then maybe a good idea make sure to cover this case.\r\n\r\nThe intel quantization uses fixed 0 offset uint8 for activations and fixed 0 offset int8 for weights and fixed 0 int32 for biases.  That simplifies the terms of the convolution inner loops ( a lot, as has been discussed here before).  It also reflects Intel's avx512 DLBoost hardware int8 capabilities/limitations.  So, probably a good idea to support that mode.  ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502530374/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502532416","html_url":"https://github.com/apache/tvm/issues/2351#issuecomment-502532416","issue_url":"https://api.github.com/repos/apache/tvm/issues/2351","id":502532416,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMjUzMjQxNg==","user":{"login":"FrozenGene","id":7287321,"node_id":"MDQ6VXNlcjcyODczMjE=","avatar_url":"https://avatars.githubusercontent.com/u/7287321?v=4","gravatar_id":"","url":"https://api.github.com/users/FrozenGene","html_url":"https://github.com/FrozenGene","followers_url":"https://api.github.com/users/FrozenGene/followers","following_url":"https://api.github.com/users/FrozenGene/following{/other_user}","gists_url":"https://api.github.com/users/FrozenGene/gists{/gist_id}","starred_url":"https://api.github.com/users/FrozenGene/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/FrozenGene/subscriptions","organizations_url":"https://api.github.com/users/FrozenGene/orgs","repos_url":"https://api.github.com/users/FrozenGene/repos","events_url":"https://api.github.com/users/FrozenGene/events{/privacy}","received_events_url":"https://api.github.com/users/FrozenGene/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-17T04:43:16Z","updated_at":"2019-06-17T04:43:16Z","author_association":"MEMBER","body":"> In that case min and max values passed into the quantized conv are always 0 and 255.\r\n\r\nNot true. When there is activation, the range is not always 0 ~ 255. For example RELU, \r\n```cpp\r\n     auto quantize = [scale, zero_point](float f) {\r\n    return zero_point + static_cast<int32_t>(TfLiteRound(f / scale));\r\n     };\r\n    *act_min = std::max(qmin, quantize(0.0));\r\n    *act_max = qmax;\r\n```\r\nWe have proved that compute as this way and could make the result the same as TFLite.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502532416/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502534147","html_url":"https://github.com/apache/tvm/issues/2351#issuecomment-502534147","issue_url":"https://api.github.com/repos/apache/tvm/issues/2351","id":502534147,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMjUzNDE0Nw==","user":{"login":"jnorwood","id":1499591,"node_id":"MDQ6VXNlcjE0OTk1OTE=","avatar_url":"https://avatars.githubusercontent.com/u/1499591?v=4","gravatar_id":"","url":"https://api.github.com/users/jnorwood","html_url":"https://github.com/jnorwood","followers_url":"https://api.github.com/users/jnorwood/followers","following_url":"https://api.github.com/users/jnorwood/following{/other_user}","gists_url":"https://api.github.com/users/jnorwood/gists{/gist_id}","starred_url":"https://api.github.com/users/jnorwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jnorwood/subscriptions","organizations_url":"https://api.github.com/users/jnorwood/orgs","repos_url":"https://api.github.com/users/jnorwood/repos","events_url":"https://api.github.com/users/jnorwood/events{/privacy}","received_events_url":"https://api.github.com/users/jnorwood/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-17T04:54:46Z","updated_at":"2019-06-17T04:59:44Z","author_association":"NONE","body":"In the tflite quantized Mobilenet v1, from the repository, the first conv operation has input data with a non-zero offset.  The offset is 128.  So either provide a conv which uses signed int8 and 0 offset, or  do what tflite does and handle it as quantized uint8 convolution with 128 offset value.   \r\n\r\nYou can see the quantization offsets in Netron in the node properties input data\r\n\r\n![mobilenetv2](https://user-images.githubusercontent.com/1499591/59578918-02e89c80-9090-11e9-8ab4-df26c3a1d09b.png)\r\n","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502534147/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502537330","html_url":"https://github.com/apache/tvm/issues/2351#issuecomment-502537330","issue_url":"https://api.github.com/repos/apache/tvm/issues/2351","id":502537330,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMjUzNzMzMA==","user":{"login":"jnorwood","id":1499591,"node_id":"MDQ6VXNlcjE0OTk1OTE=","avatar_url":"https://avatars.githubusercontent.com/u/1499591?v=4","gravatar_id":"","url":"https://api.github.com/users/jnorwood","html_url":"https://github.com/jnorwood","followers_url":"https://api.github.com/users/jnorwood/followers","following_url":"https://api.github.com/users/jnorwood/following{/other_user}","gists_url":"https://api.github.com/users/jnorwood/gists{/gist_id}","starred_url":"https://api.github.com/users/jnorwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jnorwood/subscriptions","organizations_url":"https://api.github.com/users/jnorwood/orgs","repos_url":"https://api.github.com/users/jnorwood/repos","events_url":"https://api.github.com/users/jnorwood/events{/privacy}","received_events_url":"https://api.github.com/users/jnorwood/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-17T05:15:55Z","updated_at":"2019-06-17T05:16:26Z","author_association":"NONE","body":"> Not true. When there is activation, the range is not always 0 ~ 255. For example RELU,\r\n\r\nI believe tflite extends the quantization range so it always includes 0, as done in the gemmlowp quantization example below.  I have dumped my min and max saturation input values from the six quantized tflite models (two mobilenets and four inceptions).  They are all 0 and 255.\r\n\r\n\r\n` https://github.com/google/gemmlowp/blob/master/doc/quantization_example.cc `\r\n\r\n\r\n```\r\n// Given the min and max values of a float array, return\r\n// reasonable quantization parameters to use for this array.\r\nQuantizationParams ChooseQuantizationParams(float min, float max) {\r\n  // We extend the [min, max] interval to ensure that it contains 0.\r\n  // Otherwise, we would not meet the requirement that 0 be an exactly\r\n  // representable value.\r\n  min = std::min(min, 0.f);\r\n  max = std::max(max, 0.f);\r\n\r\n```\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502537330/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502543075","html_url":"https://github.com/apache/tvm/issues/2351#issuecomment-502543075","issue_url":"https://api.github.com/repos/apache/tvm/issues/2351","id":502543075,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMjU0MzA3NQ==","user":{"login":"FrozenGene","id":7287321,"node_id":"MDQ6VXNlcjcyODczMjE=","avatar_url":"https://avatars.githubusercontent.com/u/7287321?v=4","gravatar_id":"","url":"https://api.github.com/users/FrozenGene","html_url":"https://github.com/FrozenGene","followers_url":"https://api.github.com/users/FrozenGene/followers","following_url":"https://api.github.com/users/FrozenGene/following{/other_user}","gists_url":"https://api.github.com/users/FrozenGene/gists{/gist_id}","starred_url":"https://api.github.com/users/FrozenGene/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/FrozenGene/subscriptions","organizations_url":"https://api.github.com/users/FrozenGene/orgs","repos_url":"https://api.github.com/users/FrozenGene/repos","events_url":"https://api.github.com/users/FrozenGene/events{/privacy}","received_events_url":"https://api.github.com/users/FrozenGene/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-17T05:48:31Z","updated_at":"2019-06-17T05:48:31Z","author_association":"MEMBER","body":"> > Not true. When there is activation, the range is not always 0 ~ 255. For example RELU,\r\n> \r\n> I believe tflite extends the quantization range so it always includes 0, as done in the gemmlowp quantization example below. I have dumped my min and max saturation input values from the six quantized tflite models (two mobilenets and four inceptions). They are all 0 and 255.\r\n> \r\n> `https://github.com/google/gemmlowp/blob/master/doc/quantization_example.cc`\r\n> \r\n> ```\r\n> // Given the min and max values of a float array, return\r\n> // reasonable quantization parameters to use for this array.\r\n> QuantizationParams ChooseQuantizationParams(float min, float max) {\r\n>   // We extend the [min, max] interval to ensure that it contains 0.\r\n>   // Otherwise, we would not meet the requirement that 0 be an exactly\r\n>   // representable value.\r\n>   min = std::min(min, 0.f);\r\n>   max = std::max(max, 0.f);\r\n> ```\r\n\r\nI think you maybe don't understand fully of my previous comment. One question I want to ask: Do your quantized models have conv + relu / relu6 like our model? If no, obviously is 0 ~ 255, no matter how many models are. Please see: https://github.com/tensorflow/tensorflow/blob/v2.0.0-beta1/tensorflow/lite/kernels/kernel_util.cc#L138  I and @jackwish have emphasized many times of this function code.\r\n\r\nPlease construct one quantized model like us:\r\n![image](https://user-images.githubusercontent.com/7287321/59581062-36660e00-9106-11e9-93c1-2953571766f8.png)\r\n\r\nI can make sure you will observe another result.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502543075/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502562428","html_url":"https://github.com/apache/tvm/pull/3294#issuecomment-502562428","issue_url":"https://api.github.com/repos/apache/tvm/issues/3294","id":502562428,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMjU2MjQyOA==","user":{"login":"antinucleon","id":1258974,"node_id":"MDQ6VXNlcjEyNTg5NzQ=","avatar_url":"https://avatars.githubusercontent.com/u/1258974?v=4","gravatar_id":"","url":"https://api.github.com/users/antinucleon","html_url":"https://github.com/antinucleon","followers_url":"https://api.github.com/users/antinucleon/followers","following_url":"https://api.github.com/users/antinucleon/following{/other_user}","gists_url":"https://api.github.com/users/antinucleon/gists{/gist_id}","starred_url":"https://api.github.com/users/antinucleon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/antinucleon/subscriptions","organizations_url":"https://api.github.com/users/antinucleon/orgs","repos_url":"https://api.github.com/users/antinucleon/repos","events_url":"https://api.github.com/users/antinucleon/events{/privacy}","received_events_url":"https://api.github.com/users/antinucleon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-17T07:12:00Z","updated_at":"2019-06-17T07:12:00Z","author_association":"CONTRIBUTOR","body":"In order to make quantized model running with AVX512, we have to set data_type to uint8. Currently the type_solver is not able to handle this: int32 = conv(uint8, int8)\r\n\r\nA dirty way to make the pipeline running is:\r\n\r\n```\r\ndiff --git a/src/relay/pass/type_solver.cc b/src/relay/pass/type_solver.cc\r\nindex 84f72e0d..c083f1e1 100644\r\n--- a/src/relay/pass/type_solver.cc\r\n+++ b/src/relay/pass/type_solver.cc\r\n@@ -6,9 +6,9 @@\r\n  * to you under the Apache License, Version 2.0 (the\r\n  * \"License\"); you may not use this file except in compliance\r\n  * with the License.  You may obtain a copy of the License at\r\n- * \r\n+ *\r\n  *   http://www.apache.org/licenses/LICENSE-2.0\r\n- * \r\n+ *\r\n  * Unless required by applicable law or agreed to in writing,\r\n  * software distributed under the License is distributed on an\r\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n@@ -116,6 +116,9 @@ class TypeSolver::Unifier : public TypeFunctor<Type(const Type&, const Type&)> {\r\n       return lhs->resolved_type;\r\n     } else {\r\n       Type resolved = this->VisitType(lhs->resolved_type, rhs->resolved_type);\r\n+      if (!resolved.defined()) {\r\n+        return rhs->resolved_type;\r\n+      }\r\n       CHECK(resolved.defined())\r\n         << \"Unable to unify parent types: \"\r\n         << lhs->resolved_type << \" and \" << rhs->resolved_type;\r\n```\r\n\r\nWe have to make type_solver working in clean way to handle quantized type solver.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502562428/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502646044","html_url":"https://github.com/apache/tvm/issues/3332#issuecomment-502646044","issue_url":"https://api.github.com/repos/apache/tvm/issues/3332","id":502646044,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMjY0NjA0NA==","user":{"login":"mshawcroft","id":6357566,"node_id":"MDQ6VXNlcjYzNTc1NjY=","avatar_url":"https://avatars.githubusercontent.com/u/6357566?v=4","gravatar_id":"","url":"https://api.github.com/users/mshawcroft","html_url":"https://github.com/mshawcroft","followers_url":"https://api.github.com/users/mshawcroft/followers","following_url":"https://api.github.com/users/mshawcroft/following{/other_user}","gists_url":"https://api.github.com/users/mshawcroft/gists{/gist_id}","starred_url":"https://api.github.com/users/mshawcroft/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mshawcroft/subscriptions","organizations_url":"https://api.github.com/users/mshawcroft/orgs","repos_url":"https://api.github.com/users/mshawcroft/repos","events_url":"https://api.github.com/users/mshawcroft/events{/privacy}","received_events_url":"https://api.github.com/users/mshawcroft/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-17T11:34:21Z","updated_at":"2019-06-17T11:34:21Z","author_association":"CONTRIBUTOR","body":"Yep, my bad, the tutorial code I used was out of step.  Thank you for looking into this, much appreciated.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502646044/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502693930","html_url":"https://github.com/apache/tvm/issues/2351#issuecomment-502693930","issue_url":"https://api.github.com/repos/apache/tvm/issues/2351","id":502693930,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMjY5MzkzMA==","user":{"login":"jnorwood","id":1499591,"node_id":"MDQ6VXNlcjE0OTk1OTE=","avatar_url":"https://avatars.githubusercontent.com/u/1499591?v=4","gravatar_id":"","url":"https://api.github.com/users/jnorwood","html_url":"https://github.com/jnorwood","followers_url":"https://api.github.com/users/jnorwood/followers","following_url":"https://api.github.com/users/jnorwood/following{/other_user}","gists_url":"https://api.github.com/users/jnorwood/gists{/gist_id}","starred_url":"https://api.github.com/users/jnorwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jnorwood/subscriptions","organizations_url":"https://api.github.com/users/jnorwood/orgs","repos_url":"https://api.github.com/users/jnorwood/repos","events_url":"https://api.github.com/users/jnorwood/events{/privacy}","received_events_url":"https://api.github.com/users/jnorwood/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-17T13:59:04Z","updated_at":"2019-06-17T14:07:42Z","author_association":"NONE","body":"> I think you maybe don't understand fully of my previous comment. One question I want to ask: Do your quantized models have conv + relu / relu6 like our model? If no, obviously is 0 ~ 255, no matter how many models are. Please see: https://github.com/tensorflow/tensorflow/blob/v2.0.0-beta1/tensorflow/lite/kernels/kernel_util.cc#L138 I and @jackwish have emphasized many times of this function code.\r\n> \r\nThe quantized mobilenet v1 inference model is from the tflite model repository.  The training model  includes relu6 and batch normalization operations, but these are fused into convolution operations in the inference model, as the Netron diagram shows.  \r\n\r\nThe link you reference shows floating point activation values that would be applied during training.  They do represent the range bound that would be expected of the upscaled values in the accumulator in the inference model.  However the min and max saturation values passed into the inference quantized convolution are applied _after downscale_  ... I previously provided the code and the link.  They are int32 values, not float values.  They are applied after both downscale and offset are applied.  They are 0..255 even though the scaled up range expected is 0..6 from the fused-in relu6 operation.\r\n\r\nIf the convolution and relu operations were separate, you would still see 0 and 255 for those min and max values because they are applied after downscale and after offset are applied to the convolution accumulator.  The min and max values only function to saturate the downscaled result to the quantized uint8 bit range, avoiding wrap-around overflow/underflow of the 8 bit value if the downscaled accumulator were simply masked to 8 bits.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502693930/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502732205","html_url":"https://github.com/apache/tvm/pull/3344#issuecomment-502732205","issue_url":"https://api.github.com/repos/apache/tvm/issues/3344","id":502732205,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMjczMjIwNQ==","user":{"login":"abergeron","id":1002504,"node_id":"MDQ6VXNlcjEwMDI1MDQ=","avatar_url":"https://avatars.githubusercontent.com/u/1002504?v=4","gravatar_id":"","url":"https://api.github.com/users/abergeron","html_url":"https://github.com/abergeron","followers_url":"https://api.github.com/users/abergeron/followers","following_url":"https://api.github.com/users/abergeron/following{/other_user}","gists_url":"https://api.github.com/users/abergeron/gists{/gist_id}","starred_url":"https://api.github.com/users/abergeron/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/abergeron/subscriptions","organizations_url":"https://api.github.com/users/abergeron/orgs","repos_url":"https://api.github.com/users/abergeron/repos","events_url":"https://api.github.com/users/abergeron/events{/privacy}","received_events_url":"https://api.github.com/users/abergeron/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-17T15:29:30Z","updated_at":"2019-06-17T15:29:30Z","author_association":"CONTRIBUTOR","body":"Ok now it seems to be good.  There are some major changes that I'll explain after.  The main point is that this introduces new Dockerfiles for the build and those have to be cached.  I think I can't do that part myself.\r\n\r\nOnce that is done, I will update the Jenkinsfile so that the packages are actually built as part of the tests so we know they are good and don't keep breaking :)\r\n\r\nAs for the changes, the tvm, topi and nnvm python packages are now a single package.  This is because the there are some parts of tvm that depend on topi.  It doesn't change the way the source is organized, only that there is a single conda package for all of them.\r\n\r\nI've bumped the conda version to 0.6.0dev1 since I want to make sure that there will not be old topi/nnvm packages left behind to conflict with the new ones.  This will fix itself when 0.7.0 comes around.\r\n\r\nThis also enables support for Metal in the OS X builds.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502732205/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502764675","html_url":"https://github.com/apache/tvm/pull/3379#issuecomment-502764675","issue_url":"https://api.github.com/repos/apache/tvm/issues/3379","id":502764675,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMjc2NDY3NQ==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-17T16:52:49Z","updated_at":"2019-06-17T16:52:49Z","author_association":"MEMBER","body":"Thanks ,@szha ! this PR is now merged","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502764675/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502765643","html_url":"https://github.com/apache/tvm/pull/3353#issuecomment-502765643","issue_url":"https://api.github.com/repos/apache/tvm/issues/3353","id":502765643,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMjc2NTY0Mw==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-17T16:55:33Z","updated_at":"2019-06-17T16:55:33Z","author_association":"MEMBER","body":"Thanks, @jroesch @zhiics @icemelon9 , this PR is now merged","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502765643/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502765754","html_url":"https://github.com/apache/tvm/issues/3346#issuecomment-502765754","issue_url":"https://api.github.com/repos/apache/tvm/issues/3346","id":502765754,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMjc2NTc1NA==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-17T16:55:50Z","updated_at":"2019-06-17T16:55:50Z","author_association":"MEMBER","body":"#3353","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502765754/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502765943","html_url":"https://github.com/apache/tvm/pull/3280#issuecomment-502765943","issue_url":"https://api.github.com/repos/apache/tvm/issues/3280","id":502765943,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMjc2NTk0Mw==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-17T16:56:20Z","updated_at":"2019-06-17T16:56:20Z","author_association":"MEMBER","body":"Thanks @vinx13 @jroesch this PR is now merged","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502765943/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502766324","html_url":"https://github.com/apache/tvm/pull/3378#issuecomment-502766324","issue_url":"https://api.github.com/repos/apache/tvm/issues/3378","id":502766324,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMjc2NjMyNA==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-17T16:57:29Z","updated_at":"2019-06-17T16:57:29Z","author_association":"MEMBER","body":"Thanks @Howave for the contribution. This PR is now merged. Please tag more reviewers next time:)","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502766324/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502767027","html_url":"https://github.com/apache/tvm/pull/3230#issuecomment-502767027","issue_url":"https://api.github.com/repos/apache/tvm/issues/3230","id":502767027,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMjc2NzAyNw==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-17T16:59:23Z","updated_at":"2019-06-17T16:59:23Z","author_association":"MEMBER","body":"Thanks @jroesch @zhreshold this PR has been merged. I need to fix issues in #3374 and will report back when that is ready","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502767027/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502768325","html_url":"https://github.com/apache/tvm/issues/2588#issuecomment-502768325","issue_url":"https://api.github.com/repos/apache/tvm/issues/2588","id":502768325,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMjc2ODMyNQ==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-17T17:03:09Z","updated_at":"2019-06-17T17:03:09Z","author_association":"MEMBER","body":"@sgrechanik-h This is a very good point. I have thought about it, but the conclusion then was it may not be as useful. But you are right that we might get to a stage where we need to pass Analyzer objects around and it makes sense to make Analyzer as a Node.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502768325/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502793732","html_url":"https://github.com/apache/tvm/pull/3375#issuecomment-502793732","issue_url":"https://api.github.com/repos/apache/tvm/issues/3375","id":502793732,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMjc5MzczMg==","user":{"login":"tmoreau89","id":5974488,"node_id":"MDQ6VXNlcjU5NzQ0ODg=","avatar_url":"https://avatars.githubusercontent.com/u/5974488?v=4","gravatar_id":"","url":"https://api.github.com/users/tmoreau89","html_url":"https://github.com/tmoreau89","followers_url":"https://api.github.com/users/tmoreau89/followers","following_url":"https://api.github.com/users/tmoreau89/following{/other_user}","gists_url":"https://api.github.com/users/tmoreau89/gists{/gist_id}","starred_url":"https://api.github.com/users/tmoreau89/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tmoreau89/subscriptions","organizations_url":"https://api.github.com/users/tmoreau89/orgs","repos_url":"https://api.github.com/users/tmoreau89/repos","events_url":"https://api.github.com/users/tmoreau89/events{/privacy}","received_events_url":"https://api.github.com/users/tmoreau89/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-17T18:14:44Z","updated_at":"2019-06-17T18:14:44Z","author_association":"CONTRIBUTOR","body":"Which version of Vivado were you using @huajsj ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502793732/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502794600","html_url":"https://github.com/apache/tvm/pull/3375#issuecomment-502794600","issue_url":"https://api.github.com/repos/apache/tvm/issues/3375","id":502794600,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMjc5NDYwMA==","user":{"login":"tmoreau89","id":5974488,"node_id":"MDQ6VXNlcjU5NzQ0ODg=","avatar_url":"https://avatars.githubusercontent.com/u/5974488?v=4","gravatar_id":"","url":"https://api.github.com/users/tmoreau89","html_url":"https://github.com/tmoreau89","followers_url":"https://api.github.com/users/tmoreau89/followers","following_url":"https://api.github.com/users/tmoreau89/following{/other_user}","gists_url":"https://api.github.com/users/tmoreau89/gists{/gist_id}","starred_url":"https://api.github.com/users/tmoreau89/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tmoreau89/subscriptions","organizations_url":"https://api.github.com/users/tmoreau89/orgs","repos_url":"https://api.github.com/users/tmoreau89/repos","events_url":"https://api.github.com/users/tmoreau89/events{/privacy}","received_events_url":"https://api.github.com/users/tmoreau89/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-17T18:17:24Z","updated_at":"2019-06-17T18:17:24Z","author_association":"CONTRIBUTOR","body":"And could you provide more details on reproducing the bug?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502794600/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502821145","html_url":"https://github.com/apache/tvm/pull/3375#issuecomment-502821145","issue_url":"https://api.github.com/repos/apache/tvm/issues/3375","id":502821145,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMjgyMTE0NQ==","user":{"login":"huajsj","id":2281489,"node_id":"MDQ6VXNlcjIyODE0ODk=","avatar_url":"https://avatars.githubusercontent.com/u/2281489?v=4","gravatar_id":"","url":"https://api.github.com/users/huajsj","html_url":"https://github.com/huajsj","followers_url":"https://api.github.com/users/huajsj/followers","following_url":"https://api.github.com/users/huajsj/following{/other_user}","gists_url":"https://api.github.com/users/huajsj/gists{/gist_id}","starred_url":"https://api.github.com/users/huajsj/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/huajsj/subscriptions","organizations_url":"https://api.github.com/users/huajsj/orgs","repos_url":"https://api.github.com/users/huajsj/repos","events_url":"https://api.github.com/users/huajsj/events{/privacy}","received_events_url":"https://api.github.com/users/huajsj/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-17T19:36:08Z","updated_at":"2019-06-17T23:58:22Z","author_association":"CONTRIBUTOR","body":"@tmoreau89 following are the detailed information about the reproduce and vivado_hls information.\r\n\r\n1. vivado_hls version is 2018.2\r\n2. Reproduce as following\r\n    2.1 run vivado_hls 2018.2\r\n    2.2 add vta.cc and vta.h  into source\r\n    2.3 copy vta_config.json macro define into hw_spec.h to fix macro not existing issue when do\r\n          synthesis.\r\n    2.4. run sysnthesis\r\n    2.5. saw the vivado_hls compile error.\r\n\r\n          ERROR: [XFORM 203-733] An internal stream 'tmp_load_queue.V.V' (vm/vta/hardware/xilinx/src/vta.cc:588) with default size is used in a non-dataflow region, which may result in deadlock. Please consider to resize the stream using the directive 'set_directive_stream' or the 'HLS stream' pragma.\r\nERROR: [HLS 200-70] Pre-synthesis failed.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502821145/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502821331","html_url":"https://github.com/apache/tvm/pull/3372#issuecomment-502821331","issue_url":"https://api.github.com/repos/apache/tvm/issues/3372","id":502821331,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMjgyMTMzMQ==","user":{"login":"kevinthesun","id":15520525,"node_id":"MDQ6VXNlcjE1NTIwNTI1","avatar_url":"https://avatars.githubusercontent.com/u/15520525?v=4","gravatar_id":"","url":"https://api.github.com/users/kevinthesun","html_url":"https://github.com/kevinthesun","followers_url":"https://api.github.com/users/kevinthesun/followers","following_url":"https://api.github.com/users/kevinthesun/following{/other_user}","gists_url":"https://api.github.com/users/kevinthesun/gists{/gist_id}","starred_url":"https://api.github.com/users/kevinthesun/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kevinthesun/subscriptions","organizations_url":"https://api.github.com/users/kevinthesun/orgs","repos_url":"https://api.github.com/users/kevinthesun/repos","events_url":"https://api.github.com/users/kevinthesun/events{/privacy}","received_events_url":"https://api.github.com/users/kevinthesun/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-17T19:36:40Z","updated_at":"2019-06-17T19:36:40Z","author_association":"CONTRIBUTOR","body":"Thanks!","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502821331/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502836797","html_url":"https://github.com/apache/tvm/issues/3383#issuecomment-502836797","issue_url":"https://api.github.com/repos/apache/tvm/issues/3383","id":502836797,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMjgzNjc5Nw==","user":{"login":"eqy","id":2239616,"node_id":"MDQ6VXNlcjIyMzk2MTY=","avatar_url":"https://avatars.githubusercontent.com/u/2239616?v=4","gravatar_id":"","url":"https://api.github.com/users/eqy","html_url":"https://github.com/eqy","followers_url":"https://api.github.com/users/eqy/followers","following_url":"https://api.github.com/users/eqy/following{/other_user}","gists_url":"https://api.github.com/users/eqy/gists{/gist_id}","starred_url":"https://api.github.com/users/eqy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eqy/subscriptions","organizations_url":"https://api.github.com/users/eqy/orgs","repos_url":"https://api.github.com/users/eqy/repos","events_url":"https://api.github.com/users/eqy/events{/privacy}","received_events_url":"https://api.github.com/users/eqy/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-17T20:23:27Z","updated_at":"2019-06-17T20:23:27Z","author_association":"CONTRIBUTOR","body":"Since this is a support question, please open a thread at discuss.tvm.ai.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502836797/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502887432","html_url":"https://github.com/apache/tvm/pull/3230#issuecomment-502887432","issue_url":"https://api.github.com/repos/apache/tvm/issues/3230","id":502887432,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMjg4NzQzMg==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-17T23:28:35Z","updated_at":"2019-06-17T23:28:35Z","author_association":"MEMBER","body":"Note: I reverted this PR for now due to CI errors, please open a new PR to bring things back, sorry about the trouble.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502887432/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502891101","html_url":"https://github.com/apache/tvm/pull/3230#issuecomment-502891101","issue_url":"https://api.github.com/repos/apache/tvm/issues/3230","id":502891101,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMjg5MTEwMQ==","user":{"login":"zhiics","id":5145158,"node_id":"MDQ6VXNlcjUxNDUxNTg=","avatar_url":"https://avatars.githubusercontent.com/u/5145158?v=4","gravatar_id":"","url":"https://api.github.com/users/zhiics","html_url":"https://github.com/zhiics","followers_url":"https://api.github.com/users/zhiics/followers","following_url":"https://api.github.com/users/zhiics/following{/other_user}","gists_url":"https://api.github.com/users/zhiics/gists{/gist_id}","starred_url":"https://api.github.com/users/zhiics/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zhiics/subscriptions","organizations_url":"https://api.github.com/users/zhiics/orgs","repos_url":"https://api.github.com/users/zhiics/repos","events_url":"https://api.github.com/users/zhiics/events{/privacy}","received_events_url":"https://api.github.com/users/zhiics/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-17T23:47:15Z","updated_at":"2019-06-17T23:47:15Z","author_association":"MEMBER","body":"The problem is because fusion was not performed here:\r\nhttps://github.com/dmlc/tvm/pull/3230/files#diff-03149f7671cff8be6734838f7707a24dR417","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502891101/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502912357","html_url":"https://github.com/apache/tvm/issues/3383#issuecomment-502912357","issue_url":"https://api.github.com/repos/apache/tvm/issues/3383","id":502912357,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMjkxMjM1Nw==","user":{"login":"andi4191","id":14961916,"node_id":"MDQ6VXNlcjE0OTYxOTE2","avatar_url":"https://avatars.githubusercontent.com/u/14961916?v=4","gravatar_id":"","url":"https://api.github.com/users/andi4191","html_url":"https://github.com/andi4191","followers_url":"https://api.github.com/users/andi4191/followers","following_url":"https://api.github.com/users/andi4191/following{/other_user}","gists_url":"https://api.github.com/users/andi4191/gists{/gist_id}","starred_url":"https://api.github.com/users/andi4191/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/andi4191/subscriptions","organizations_url":"https://api.github.com/users/andi4191/orgs","repos_url":"https://api.github.com/users/andi4191/repos","events_url":"https://api.github.com/users/andi4191/events{/privacy}","received_events_url":"https://api.github.com/users/andi4191/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-18T01:44:29Z","updated_at":"2019-06-18T01:44:29Z","author_association":"NONE","body":"@eqy: I already did that last week. No response so far.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502912357/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502914098","html_url":"https://github.com/apache/tvm/issues/2351#issuecomment-502914098","issue_url":"https://api.github.com/repos/apache/tvm/issues/2351","id":502914098,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMjkxNDA5OA==","user":{"login":"zhenhuaw-me","id":4936589,"node_id":"MDQ6VXNlcjQ5MzY1ODk=","avatar_url":"https://avatars.githubusercontent.com/u/4936589?v=4","gravatar_id":"","url":"https://api.github.com/users/zhenhuaw-me","html_url":"https://github.com/zhenhuaw-me","followers_url":"https://api.github.com/users/zhenhuaw-me/followers","following_url":"https://api.github.com/users/zhenhuaw-me/following{/other_user}","gists_url":"https://api.github.com/users/zhenhuaw-me/gists{/gist_id}","starred_url":"https://api.github.com/users/zhenhuaw-me/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zhenhuaw-me/subscriptions","organizations_url":"https://api.github.com/users/zhenhuaw-me/orgs","repos_url":"https://api.github.com/users/zhenhuaw-me/repos","events_url":"https://api.github.com/users/zhenhuaw-me/events{/privacy}","received_events_url":"https://api.github.com/users/zhenhuaw-me/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-18T01:53:53Z","updated_at":"2019-06-18T01:53:53Z","author_association":"CONTRIBUTOR","body":"@jnorwood Have read again the long discussions, I finally understand what you are trying to say. Let me ask this question: considering ReLU6 in float, do you think it is saturating input float values into [0, 6]?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502914098/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502943470","html_url":"https://github.com/apache/tvm/issues/2351#issuecomment-502943470","issue_url":"https://api.github.com/repos/apache/tvm/issues/2351","id":502943470,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMjk0MzQ3MA==","user":{"login":"jnorwood","id":1499591,"node_id":"MDQ6VXNlcjE0OTk1OTE=","avatar_url":"https://avatars.githubusercontent.com/u/1499591?v=4","gravatar_id":"","url":"https://api.github.com/users/jnorwood","html_url":"https://github.com/jnorwood","followers_url":"https://api.github.com/users/jnorwood/followers","following_url":"https://api.github.com/users/jnorwood/following{/other_user}","gists_url":"https://api.github.com/users/jnorwood/gists{/gist_id}","starred_url":"https://api.github.com/users/jnorwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jnorwood/subscriptions","organizations_url":"https://api.github.com/users/jnorwood/orgs","repos_url":"https://api.github.com/users/jnorwood/repos","events_url":"https://api.github.com/users/jnorwood/events{/privacy}","received_events_url":"https://api.github.com/users/jnorwood/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-18T04:37:19Z","updated_at":"2019-06-18T04:37:19Z","author_association":"NONE","body":"I\r\n\r\n> @jnorwood Have read again the long discussions, I finally understand what you are trying to say. Let me ask this question: considering ReLU6 in float, do you think it is saturating input float values into [0, 6]?\r\n\r\n\r\nThe 0..6.0 float clamping is applied during training if relu6 is used as activation.  It may also be used to force  the range for creating the downscale constants and offsets that are used in inference.  That seems so, from your activation code excerpt.  \r\n\r\nThe gemmlowp example indicates that they always extend a range if it doesn't include 0.  I believe their reason was that an exact zero representation is needed in the range... perhaps for padding.  I didn't see that in the activation code excerpt, but perhaps that is handled elsewhere.\r\n\r\nOn the quantized inference side, those min and max values are applied after the downscale and offset are applied, and  it seems to me more appropriate to recognize that they are needed for the quantization bits saturation whether or not an activation operation was used in the training model.  \r\n\r\nI've only seen 0 and 255 for those input min and max values in the six quantized tflite models I've converted.  I dumped them all to check.\r\n\r\nNo, there is no saturation  being applied to input values during inference.  The input values are uint8 in the tflite models.  There is extra info stored in the model file indicating the input range and offset.  In some model operations that input info is needed for rescale ... For example in the multiple input concat operations in the inception_v3 model, the input ranges are different, so a rescale is required. \r\n\r\nThe tf training models associated with the quantized tflite models have activation and bn operations that are  effectively fused together with the conv, along with the fake quantization ops.  No separate activation nodes appear in the associated inference models.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502943470/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502986425","html_url":"https://github.com/apache/tvm/issues/2351#issuecomment-502986425","issue_url":"https://api.github.com/repos/apache/tvm/issues/2351","id":502986425,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMjk4NjQyNQ==","user":{"login":"FrozenGene","id":7287321,"node_id":"MDQ6VXNlcjcyODczMjE=","avatar_url":"https://avatars.githubusercontent.com/u/7287321?v=4","gravatar_id":"","url":"https://api.github.com/users/FrozenGene","html_url":"https://github.com/FrozenGene","followers_url":"https://api.github.com/users/FrozenGene/followers","following_url":"https://api.github.com/users/FrozenGene/following{/other_user}","gists_url":"https://api.github.com/users/FrozenGene/gists{/gist_id}","starred_url":"https://api.github.com/users/FrozenGene/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/FrozenGene/subscriptions","organizations_url":"https://api.github.com/users/FrozenGene/orgs","repos_url":"https://api.github.com/users/FrozenGene/repos","events_url":"https://api.github.com/users/FrozenGene/events{/privacy}","received_events_url":"https://api.github.com/users/FrozenGene/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-18T07:39:22Z","updated_at":"2019-06-18T07:43:02Z","author_association":"MEMBER","body":"> > I think you maybe don't understand fully of my previous comment. One question I want to ask: Do your quantized models have conv + relu / relu6 like our model? If no, obviously is 0 ~ 255, no matter how many models are. Please see: https://github.com/tensorflow/tensorflow/blob/v2.0.0-beta1/tensorflow/lite/kernels/kernel_util.cc#L138 I and @jackwish have emphasized many times of this function code.\r\n> \r\n> The quantized mobilenet v1 inference model is from the tflite model repository. The training model includes relu6 and batch normalization operations, but these are fused into convolution operations in the inference model, as the Netron diagram shows.\r\n> \r\n> The link you reference shows floating point activation values that would be applied during training. They do represent the range bound that would be expected of the upscaled values in the accumulator in the inference model. However the min and max saturation values passed into the inference quantized convolution are applied _after downscale_ ... I previously provided the code and the link. They are int32 values, not float values. They are applied after both downscale and offset are applied. They are 0..255 even though the scaled up range expected is 0..6 from the fused-in relu6 operation.\r\n> \r\n> If the convolution and relu operations were separate, you would still see 0 and 255 for those min and max values because they are applied after downscale and after offset are applied to the convolution accumulator. The min and max values only function to saturate the downscaled result to the quantized uint8 bit range, avoiding wrap-around overflow/underflow of the 8 bit value if the downscaled accumulator were simply masked to 8 bits.\r\n\r\nI have emphasized the model diagram is one **quantized** model. Let me show more detail of the property: \r\n![image](https://user-images.githubusercontent.com/7287321/59662050-b95a9780-91de-11e9-89c2-b252b8b3a8ae.png)\r\nThis is to say, not all relu / relu6 can be fused into convolution in TFLite's **quantized** model in real production environment. MobilenetV1 just one simple reference, we should consider more. Then what is the min / max now? that is previous code  https://github.com/tensorflow/tensorflow/blob/v2.0.0-beta1/tensorflow/lite/kernels/kernel_util.cc#L138 does. **NOT** just simple 0 ~ 255. ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/502986425/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/503197395","html_url":"https://github.com/apache/tvm/issues/2351#issuecomment-503197395","issue_url":"https://api.github.com/repos/apache/tvm/issues/2351","id":503197395,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMzE5NzM5NQ==","user":{"login":"jnorwood","id":1499591,"node_id":"MDQ6VXNlcjE0OTk1OTE=","avatar_url":"https://avatars.githubusercontent.com/u/1499591?v=4","gravatar_id":"","url":"https://api.github.com/users/jnorwood","html_url":"https://github.com/jnorwood","followers_url":"https://api.github.com/users/jnorwood/followers","following_url":"https://api.github.com/users/jnorwood/following{/other_user}","gists_url":"https://api.github.com/users/jnorwood/gists{/gist_id}","starred_url":"https://api.github.com/users/jnorwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jnorwood/subscriptions","organizations_url":"https://api.github.com/users/jnorwood/orgs","repos_url":"https://api.github.com/users/jnorwood/repos","events_url":"https://api.github.com/users/jnorwood/events{/privacy}","received_events_url":"https://api.github.com/users/jnorwood/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-18T15:51:47Z","updated_at":"2019-06-18T15:51:47Z","author_association":"NONE","body":" I'm using the tensorflow tflite quantized model, mobilenet_v1_1.0_224_quant.tflite.  from \r\n` https://github.com/tensorflow/models/blob/master/research/slim/nets/mobilenet_v1.md `\r\n\r\nI view it with Netron, which shows no relu6 nodes.  It also shows no fused relu6 nodes in the node properties.  So... if you are discussing some different model, I can't comment on it without further info how to repeat it. \r\n\r\nI dump the min and max parameters passed to the reference implementation of quantized conv, and they are all 0 and 255.\r\n\r\nI created a tf branch which automates this dump, ` https://github.com/jnorwood/tensorflow/tree/tflite_cmake `\r\nIt was last updated 14 days ago.\r\nthere is a readme.md in ` https://github.com/jnorwood/tensorflow/blob/tflite_cmake/tensorflow/lite/README_CMAKE.md `\r\nthat shows how I built it using cmake and how to execute the command where I dumped the data, including the min and max parameters.  I just ran it again and am attaching the screen capture, showing that all the min and max inputs are 0,255 for that inference model.\r\n\r\n![Screenshot from 2019-06-18 10-41-59](https://user-images.githubusercontent.com/1499591/59698946-505f2980-91b6-11e9-87d7-89d7425b1c00.png)\r\n","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/503197395/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/503209182","html_url":"https://github.com/apache/tvm/pull/3389#issuecomment-503209182","issue_url":"https://api.github.com/repos/apache/tvm/issues/3389","id":503209182,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMzIwOTE4Mg==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-18T16:22:01Z","updated_at":"2019-06-18T16:22:01Z","author_association":"MEMBER","body":"Thanks for the RFC, I like the idea. Sorry that I didn't get enough time to comment specifically about the behavior, can you please open an RFC issue? So we can discuss it a bit more.\r\n\r\nThe things to be improved are\r\n- Document the behavior independent of arg_binder.\r\n    - Maps buffer[i][j][k] -> buffer[i][0][k] if dimension i's shape equals 0\r\n- Debate on the name (auto broadcast?), enum vs string as type key\r\n- Discuss how would the behavior affect topi implementation of broadcast and reduce ops\r\n- Think about alternative implementations\r\n  - Do we have to introduce stride?\r\n  -  e.g. j -> min(j, shape[ndim])\r\n  - j -> j * scale(scale = 0 or 1)\r\n","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/503209182/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/503227677","html_url":"https://github.com/apache/tvm/pull/3389#issuecomment-503227677","issue_url":"https://api.github.com/repos/apache/tvm/issues/3389","id":503227677,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMzIyNzY3Nw==","user":{"login":"junrushao","id":22515877,"node_id":"MDQ6VXNlcjIyNTE1ODc3","avatar_url":"https://avatars.githubusercontent.com/u/22515877?v=4","gravatar_id":"","url":"https://api.github.com/users/junrushao","html_url":"https://github.com/junrushao","followers_url":"https://api.github.com/users/junrushao/followers","following_url":"https://api.github.com/users/junrushao/following{/other_user}","gists_url":"https://api.github.com/users/junrushao/gists{/gist_id}","starred_url":"https://api.github.com/users/junrushao/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/junrushao/subscriptions","organizations_url":"https://api.github.com/users/junrushao/orgs","repos_url":"https://api.github.com/users/junrushao/repos","events_url":"https://api.github.com/users/junrushao/events{/privacy}","received_events_url":"https://api.github.com/users/junrushao/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-18T17:12:41Z","updated_at":"2019-06-18T17:12:41Z","author_association":"MEMBER","body":">   * Do we have to introduce stride?\r\n>   * e.g. j -> min(j, shape[ndim])\r\n>   * j -> j * scale(scale = 0 or 1)\r\n\r\nI do think it is proper to introduce `stride`. First, as far as we could see, using strides does not seem to have too much overhead, compared with other workarounds. Second, it seems to pave ways for other possible hacks to the buffer.\r\n","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/503227677/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/503229391","html_url":"https://github.com/apache/tvm/pull/3380#issuecomment-503229391","issue_url":"https://api.github.com/repos/apache/tvm/issues/3380","id":503229391,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMzIyOTM5MQ==","user":{"login":"vegaluisjose","id":2478335,"node_id":"MDQ6VXNlcjI0NzgzMzU=","avatar_url":"https://avatars.githubusercontent.com/u/2478335?v=4","gravatar_id":"","url":"https://api.github.com/users/vegaluisjose","html_url":"https://github.com/vegaluisjose","followers_url":"https://api.github.com/users/vegaluisjose/followers","following_url":"https://api.github.com/users/vegaluisjose/following{/other_user}","gists_url":"https://api.github.com/users/vegaluisjose/gists{/gist_id}","starred_url":"https://api.github.com/users/vegaluisjose/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vegaluisjose/subscriptions","organizations_url":"https://api.github.com/users/vegaluisjose/orgs","repos_url":"https://api.github.com/users/vegaluisjose/repos","events_url":"https://api.github.com/users/vegaluisjose/events{/privacy}","received_events_url":"https://api.github.com/users/vegaluisjose/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-18T17:17:23Z","updated_at":"2019-06-18T17:17:23Z","author_association":"MEMBER","body":"Hey @liangfu \r\n\r\nOne reason why I did not added this test is because the Pynq uses 32-bit addresses (pointers), requiring the virtual-translation used in sim-driver [see](https://github.com/dmlc/tvm/blob/master/vta/src/sim/sim_driver.cc#L119-L122)\r\n\r\nI have not tested the \"TSIM\" infrastructure with virtual-translation yet for these kinda devices, reason why I left it out atm.\r\n\r\nOn the other end, F1 FPGAs uses 64-bit address as most of the computers nowadays. Since memory instructions in VTA only allow 32-bit, I used this field for the most significant 32 bits of the address whereas the other 32-bits (the lsb of the address) is passed via VTA registers. See [this](https://github.com/dmlc/tvm/blob/master/vta/src/tsim/tsim_driver.cc#L108-L118).\r\n\r\nI don't know if this make sense, but let me know if you have questions.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/503229391/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/503233488","html_url":"https://github.com/apache/tvm/pull/3380#issuecomment-503233488","issue_url":"https://api.github.com/repos/apache/tvm/issues/3380","id":503233488,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMzIzMzQ4OA==","user":{"login":"vegaluisjose","id":2478335,"node_id":"MDQ6VXNlcjI0NzgzMzU=","avatar_url":"https://avatars.githubusercontent.com/u/2478335?v=4","gravatar_id":"","url":"https://api.github.com/users/vegaluisjose","html_url":"https://github.com/vegaluisjose","followers_url":"https://api.github.com/users/vegaluisjose/followers","following_url":"https://api.github.com/users/vegaluisjose/following{/other_user}","gists_url":"https://api.github.com/users/vegaluisjose/gists{/gist_id}","starred_url":"https://api.github.com/users/vegaluisjose/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vegaluisjose/subscriptions","organizations_url":"https://api.github.com/users/vegaluisjose/orgs","repos_url":"https://api.github.com/users/vegaluisjose/repos","events_url":"https://api.github.com/users/vegaluisjose/events{/privacy}","received_events_url":"https://api.github.com/users/vegaluisjose/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-18T17:28:21Z","updated_at":"2019-06-18T17:28:21Z","author_association":"MEMBER","body":"@liangfu also let me know if you want to try the chisel backend, and I'll let you know the steps needed.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/503233488/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/503250309","html_url":"https://github.com/apache/tvm/pull/3388#issuecomment-503250309","issue_url":"https://api.github.com/repos/apache/tvm/issues/3388","id":503250309,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMzI1MDMwOQ==","user":{"login":"jianyuh","id":2187690,"node_id":"MDQ6VXNlcjIxODc2OTA=","avatar_url":"https://avatars.githubusercontent.com/u/2187690?v=4","gravatar_id":"","url":"https://api.github.com/users/jianyuh","html_url":"https://github.com/jianyuh","followers_url":"https://api.github.com/users/jianyuh/followers","following_url":"https://api.github.com/users/jianyuh/following{/other_user}","gists_url":"https://api.github.com/users/jianyuh/gists{/gist_id}","starred_url":"https://api.github.com/users/jianyuh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jianyuh/subscriptions","organizations_url":"https://api.github.com/users/jianyuh/orgs","repos_url":"https://api.github.com/users/jianyuh/repos","events_url":"https://api.github.com/users/jianyuh/events{/privacy}","received_events_url":"https://api.github.com/users/jianyuh/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-18T18:12:23Z","updated_at":"2019-06-18T18:16:46Z","author_association":"CONTRIBUTOR","body":"It appears that the CI test is not using LLVM 8.0 or higher version, thus not supporting AVX512 VNNI instructions.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/503250309/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/503262686","html_url":"https://github.com/apache/tvm/pull/3384#issuecomment-503262686","issue_url":"https://api.github.com/repos/apache/tvm/issues/3384","id":503262686,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMzI2MjY4Ng==","user":{"login":"kevinthesun","id":15520525,"node_id":"MDQ6VXNlcjE1NTIwNTI1","avatar_url":"https://avatars.githubusercontent.com/u/15520525?v=4","gravatar_id":"","url":"https://api.github.com/users/kevinthesun","html_url":"https://github.com/kevinthesun","followers_url":"https://api.github.com/users/kevinthesun/followers","following_url":"https://api.github.com/users/kevinthesun/following{/other_user}","gists_url":"https://api.github.com/users/kevinthesun/gists{/gist_id}","starred_url":"https://api.github.com/users/kevinthesun/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kevinthesun/subscriptions","organizations_url":"https://api.github.com/users/kevinthesun/orgs","repos_url":"https://api.github.com/users/kevinthesun/repos","events_url":"https://api.github.com/users/kevinthesun/events{/privacy}","received_events_url":"https://api.github.com/users/kevinthesun/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-18T18:44:57Z","updated_at":"2019-06-18T18:44:57Z","author_association":"CONTRIBUTOR","body":"LGTM @ajtulloch Can you take a look at ci failure?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/503262686/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/503276711","html_url":"https://github.com/apache/tvm/pull/3380#issuecomment-503276711","issue_url":"https://api.github.com/repos/apache/tvm/issues/3380","id":503276711,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMzI3NjcxMQ==","user":{"login":"Ravenwater","id":466641,"node_id":"MDQ6VXNlcjQ2NjY0MQ==","avatar_url":"https://avatars.githubusercontent.com/u/466641?v=4","gravatar_id":"","url":"https://api.github.com/users/Ravenwater","html_url":"https://github.com/Ravenwater","followers_url":"https://api.github.com/users/Ravenwater/followers","following_url":"https://api.github.com/users/Ravenwater/following{/other_user}","gists_url":"https://api.github.com/users/Ravenwater/gists{/gist_id}","starred_url":"https://api.github.com/users/Ravenwater/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Ravenwater/subscriptions","organizations_url":"https://api.github.com/users/Ravenwater/orgs","repos_url":"https://api.github.com/users/Ravenwater/repos","events_url":"https://api.github.com/users/Ravenwater/events{/privacy}","received_events_url":"https://api.github.com/users/Ravenwater/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-18T19:25:04Z","updated_at":"2019-06-18T19:25:04Z","author_association":"NONE","body":"@vegaluisjose I would like to use the Chisel backend as well. Still trying to setup a regular Chisel environment, having some trouble getting IntelliJ with the Scala and SBT plugins to connect to the proper libraries. So, any help would be appreciated.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/503276711/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/503286893","html_url":"https://github.com/apache/tvm/issues/3390#issuecomment-503286893","issue_url":"https://api.github.com/repos/apache/tvm/issues/3390","id":503286893,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMzI4Njg5Mw==","user":{"login":"yzhliu","id":631860,"node_id":"MDQ6VXNlcjYzMTg2MA==","avatar_url":"https://avatars.githubusercontent.com/u/631860?v=4","gravatar_id":"","url":"https://api.github.com/users/yzhliu","html_url":"https://github.com/yzhliu","followers_url":"https://api.github.com/users/yzhliu/followers","following_url":"https://api.github.com/users/yzhliu/following{/other_user}","gists_url":"https://api.github.com/users/yzhliu/gists{/gist_id}","starred_url":"https://api.github.com/users/yzhliu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yzhliu/subscriptions","organizations_url":"https://api.github.com/users/yzhliu/orgs","repos_url":"https://api.github.com/users/yzhliu/repos","events_url":"https://api.github.com/users/yzhliu/events{/privacy}","received_events_url":"https://api.github.com/users/yzhliu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-18T19:55:04Z","updated_at":"2019-06-18T19:56:26Z","author_association":"MEMBER","body":"Move the discussion here\r\n\r\n> The things to be improved are\r\n> * Document the behavior independent of arg_binder.\r\n>   - Maps buffer[i][j][k] -> buffer[i][0][k] if dimension i's shape equals 0\r\n> * Debate on the name (auto broadcast?), enum vs string as type key\r\n> * Discuss how would the behavior affect topi implementation of broadcast and reduce ops\r\n> * Think about alternative implementations\r\n>   - Do we have to introduce stride?\r\n>   - e.g. j -> min(j, shape[ndim])\r\n>   - j -> j * scale(scale = 0 or 1)\r\n\r\nJunru's comment,\r\n> I do think it is proper to introduce stride. First, as far as we could see, using strides does not seem to have too much overhead, compared with other workarounds. Second, it seems to pave ways for other possible hacks to the buffer.\r\n\r\n`j -> min(j, shape[ndim])` seems to introduce overhead, IMO `j -> j * scale(scale = 0 or 1)` is equally good, while we need to think where to allow user specify the behavior, I feel implicitly inserting such scale will cause surprise.\r\nI don't have preference between enum and string.\r\n","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/503286893/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/503287678","html_url":"https://github.com/apache/tvm/pull/3230#issuecomment-503287678","issue_url":"https://api.github.com/repos/apache/tvm/issues/3230","id":503287678,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMzI4NzY3OA==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-18T19:57:22Z","updated_at":"2019-06-18T19:57:22Z","author_association":"MEMBER","body":"NOTE, now that https://github.com/dmlc/tvm/pull/3374 has been merged, you should be able to use the latest env","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/503287678/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/503288077","html_url":"https://github.com/apache/tvm/issues/3373#issuecomment-503288077","issue_url":"https://api.github.com/repos/apache/tvm/issues/3373","id":503288077,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMzI4ODA3Nw==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-18T19:58:25Z","updated_at":"2019-06-18T19:58:25Z","author_association":"MEMBER","body":"Now that https://github.com/dmlc/tvm/pull/3374 has been merged, the CI should have been updated to the latest state including the tflite change","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/503288077/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/503289437","html_url":"https://github.com/apache/tvm/pull/3388#issuecomment-503289437","issue_url":"https://api.github.com/repos/apache/tvm/issues/3388","id":503289437,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMzI4OTQzNw==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-18T20:02:21Z","updated_at":"2019-06-18T20:02:21Z","author_association":"MEMBER","body":"Perhaps a good time to update the CI infra to keep up with LLVM mainline, see steps in https://docs.tvm.ai/contribute/pull_request.html#ci-environment","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/503289437/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/503290728","html_url":"https://github.com/apache/tvm/pull/3380#issuecomment-503290728","issue_url":"https://api.github.com/repos/apache/tvm/issues/3380","id":503290728,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMzI5MDcyOA==","user":{"login":"vegaluisjose","id":2478335,"node_id":"MDQ6VXNlcjI0NzgzMzU=","avatar_url":"https://avatars.githubusercontent.com/u/2478335?v=4","gravatar_id":"","url":"https://api.github.com/users/vegaluisjose","html_url":"https://github.com/vegaluisjose","followers_url":"https://api.github.com/users/vegaluisjose/followers","following_url":"https://api.github.com/users/vegaluisjose/following{/other_user}","gists_url":"https://api.github.com/users/vegaluisjose/gists{/gist_id}","starred_url":"https://api.github.com/users/vegaluisjose/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vegaluisjose/subscriptions","organizations_url":"https://api.github.com/users/vegaluisjose/orgs","repos_url":"https://api.github.com/users/vegaluisjose/repos","events_url":"https://api.github.com/users/vegaluisjose/events{/privacy}","received_events_url":"https://api.github.com/users/vegaluisjose/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-18T20:06:02Z","updated_at":"2019-06-18T20:06:02Z","author_association":"MEMBER","body":"@Ravenwater I think we can move this to discuss forum, so others can benefit from it. You could start a thread there.\r\n\r\nThanks!","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/503290728/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/503306881","html_url":"https://github.com/apache/tvm/pull/3380#issuecomment-503306881","issue_url":"https://api.github.com/repos/apache/tvm/issues/3380","id":503306881,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMzMwNjg4MQ==","user":{"login":"Ravenwater","id":466641,"node_id":"MDQ6VXNlcjQ2NjY0MQ==","avatar_url":"https://avatars.githubusercontent.com/u/466641?v=4","gravatar_id":"","url":"https://api.github.com/users/Ravenwater","html_url":"https://github.com/Ravenwater","followers_url":"https://api.github.com/users/Ravenwater/followers","following_url":"https://api.github.com/users/Ravenwater/following{/other_user}","gists_url":"https://api.github.com/users/Ravenwater/gists{/gist_id}","starred_url":"https://api.github.com/users/Ravenwater/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Ravenwater/subscriptions","organizations_url":"https://api.github.com/users/Ravenwater/orgs","repos_url":"https://api.github.com/users/Ravenwater/repos","events_url":"https://api.github.com/users/Ravenwater/events{/privacy}","received_events_url":"https://api.github.com/users/Ravenwater/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-18T20:51:35Z","updated_at":"2019-06-18T20:51:35Z","author_association":"NONE","body":"done:\r\n\r\nhttps://discuss.tvm.ai/t/getting-started-with-the-vta-chisel-backend/2987?u=ravenwater","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/503306881/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/503344297","html_url":"https://github.com/apache/tvm/pull/3393#issuecomment-503344297","issue_url":"https://api.github.com/repos/apache/tvm/issues/3393","id":503344297,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMzM0NDI5Nw==","user":{"login":"yongwww","id":10205827,"node_id":"MDQ6VXNlcjEwMjA1ODI3","avatar_url":"https://avatars.githubusercontent.com/u/10205827?v=4","gravatar_id":"","url":"https://api.github.com/users/yongwww","html_url":"https://github.com/yongwww","followers_url":"https://api.github.com/users/yongwww/followers","following_url":"https://api.github.com/users/yongwww/following{/other_user}","gists_url":"https://api.github.com/users/yongwww/gists{/gist_id}","starred_url":"https://api.github.com/users/yongwww/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yongwww/subscriptions","organizations_url":"https://api.github.com/users/yongwww/orgs","repos_url":"https://api.github.com/users/yongwww/repos","events_url":"https://api.github.com/users/yongwww/events{/privacy}","received_events_url":"https://api.github.com/users/yongwww/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-18T23:07:15Z","updated_at":"2019-06-18T23:59:56Z","author_association":"MEMBER","body":"@srkreddy1238 @zhiics @tqchen ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/503344297/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/503351184","html_url":"https://github.com/apache/tvm/issues/3209#issuecomment-503351184","issue_url":"https://api.github.com/repos/apache/tvm/issues/3209","id":503351184,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMzM1MTE4NA==","user":{"login":"icemelon","id":2696494,"node_id":"MDQ6VXNlcjI2OTY0OTQ=","avatar_url":"https://avatars.githubusercontent.com/u/2696494?v=4","gravatar_id":"","url":"https://api.github.com/users/icemelon","html_url":"https://github.com/icemelon","followers_url":"https://api.github.com/users/icemelon/followers","following_url":"https://api.github.com/users/icemelon/following{/other_user}","gists_url":"https://api.github.com/users/icemelon/gists{/gist_id}","starred_url":"https://api.github.com/users/icemelon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/icemelon/subscriptions","organizations_url":"https://api.github.com/users/icemelon/orgs","repos_url":"https://api.github.com/users/icemelon/repos","events_url":"https://api.github.com/users/icemelon/events{/privacy}","received_events_url":"https://api.github.com/users/icemelon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-18T23:41:26Z","updated_at":"2019-06-18T23:41:26Z","author_association":"MEMBER","body":"I'm working on a PR that separates VM Object from Interpreter value #3391. After the PR, VM will directly return Object to python instead of converting to Interpreter Value. Currently I haven't dealt with `ClosureObject` since it won't appear in the return value.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/503351184/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/503373445","html_url":"https://github.com/apache/tvm/issues/2351#issuecomment-503373445","issue_url":"https://api.github.com/repos/apache/tvm/issues/2351","id":503373445,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMzM3MzQ0NQ==","user":{"login":"shoubhik","id":2293791,"node_id":"MDQ6VXNlcjIyOTM3OTE=","avatar_url":"https://avatars.githubusercontent.com/u/2293791?v=4","gravatar_id":"","url":"https://api.github.com/users/shoubhik","html_url":"https://github.com/shoubhik","followers_url":"https://api.github.com/users/shoubhik/followers","following_url":"https://api.github.com/users/shoubhik/following{/other_user}","gists_url":"https://api.github.com/users/shoubhik/gists{/gist_id}","starred_url":"https://api.github.com/users/shoubhik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/shoubhik/subscriptions","organizations_url":"https://api.github.com/users/shoubhik/orgs","repos_url":"https://api.github.com/users/shoubhik/repos","events_url":"https://api.github.com/users/shoubhik/events{/privacy}","received_events_url":"https://api.github.com/users/shoubhik/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-19T01:46:46Z","updated_at":"2019-06-19T01:46:46Z","author_association":"CONTRIBUTOR","body":"> Thanks. Let's lay down the high-level API design for some of the quantized operators. A large portion of this is coming from the following relevant discussions. Thanks to @jackwish, @FrozenGene and @jnorwood for sharing their experiences with quantization, and also @shoubhik for helping design this RFC.\r\n> \r\n> * [Discussion](https://discuss.tvm.ai/t/tf-lite-quantized-conv2d-operator-conversion/2651)\r\n> \r\n> Other non-TVM related links that were used to understand quantization\r\n> \r\n> * GemmLowP - [Doc](https://github.com/google/gemmlowp/blob/master/doc/quantization.md)\r\n> * TFlite reference [code](https://github.com/tensorflow/tensorflow/blob/master/tensorflow/lite/kernels/internal/reference/conv.h#L101-L182)\r\n> \r\n> **Covered frameworks for now** - TFLite and MxNet\r\n> **Target network for now** - Inception V3 from TFLite. (I will create one for Mxnet)\r\n> **Target platforms for now** - ARM and Intel (will create separate Issue as the project progresses)\r\n> \r\n> **List of required operators** - quantize, quantized_conv2d, qunatized_relu, quantized_pool2d, quantized_fully_connected, quantized_concat, dequantize\r\n> \r\n> It will be good if we can agree on Relay ops - its inputs/outputs and the attributes. The initial proposal for the quantize, quantized_conv2d and dequantize ops is as follows (other quantized_* operators will be on the same lines as that of quantized_conv2d)\r\n> \r\n> ## Op quantize\r\n> ```python\r\n> def quantize(data, scale, zero_point, out_dtype):\r\n>     \"\"\"\r\n>     Quantize takes the scale and zero_point attributes and quantizes the \r\n>     FP32 input data to int8/uint8 tensor.\r\n> \r\n>     Parameters\r\n>     -----------\r\n>     data: FP32 tensor\r\n>            The input tensor in FP32.\r\n>     \r\n>     scale: FP32 scalar (An attribute of the op)\r\n>            The float scalar to scale the int8 values back to FP32.\r\n> \r\n>     zero_point: Int32 zero point (An attribute of the op)\r\n>            The zero point of the distribution.\r\n> \r\n>     out_dtype: String\r\n>            The dtype of the output. Can only be int8/uint8\r\n> \r\n>     Returns\r\n>     -------\r\n>     quantized_data: int8/uint8 tensor\r\n>            The quantized tensor.\r\n> \r\n>     \"\"\"\r\n> ```\r\n> \r\n> Key points to discuss\r\n> \r\n> * The scale and zero_point calculations happen outside the relay graph, i.e., the framework parsers will have to compute the scale and offset if only min and max are provided. [Reference implementation](https://github.com/tensorflow/tensorflow/blob/22e458382d3001a0cda4e594decf175f2387475e/tensorflow/lite/kernels/internal/quantization_util.h#L28-L99) in TFLite. This can also be thought as a framework parser utils where we can handle min/max, symmetric/asymmetric etc and generate the scale and zero_point as frameworks handles them.\r\n> \r\n> ## Op quantized_conv2d\r\n> ```python\r\n> def quantized_conv2d(quantized_data, quantized_kernel, \r\n>         input_scale, input_zero_point,\r\n>         kernel_scale, kernel_zero_point,\r\n>         output_scale, output_zero_point,\r\n>         out_dtype,\r\n> \r\n>         # All the old remaining ones from conv2d\r\n>         strides=(1, 1),\r\n>         padding=(0, 0),\r\n>         dilation=(1, 1),\r\n>         groups=1,\r\n>         channels=None,\r\n>         kernel_size=None,\r\n>         data_layout=\"NCHW\",\r\n>         kernel_layout=\"OIHW\",\r\n>         out_layout=\"\"):\r\n>     \"\"\"\r\n>     \r\n>     Quantize takes the scale and zero_point attributes and quantizes the \r\n>     FP32 input data to int8/uint8 tensor. The scale and zero_point calculations\r\n>     happen outside the relay graph, i.e., the framework parsers will have to compute\r\n>     the scale and offset if only min and max are provided. \r\n> \r\n>     Parameters\r\n>     -----------\r\n>     quantized_data: int8/uint8 tensor\r\n>            The quantized input tensor in int8/uint8.\r\n> \r\n>     quantized_kernel: FP32 tensor\r\n>            The quantized kernel tensor in int8/uint8.\r\n>     \r\n>     input_scale: FP32 scalar (An attribute of the op)\r\n>            The float scalar to scale the quantized_data int8 values back to FP32.\r\n> \r\n>     input_zero_point: Int32 zero point (An attribute of the op)\r\n>            The zero point of the quantized_data distribution.\r\n> \r\n>     kernel_scale: FP32 scalar (An attribute of the op)\r\n>            The float scalar to scale the quantized_kernel int8 values back to FP32.\r\n> \r\n>     kernel_zero_point: Int32 zero point (An attribute of the op)\r\n>            The zero point of the quantized_kernel distribution.\r\n> \r\n>     output_scale: FP32 scalar (An attribute of the op)\r\n>            The output scale is set during the quantization process using training/calibration.\r\n>            The float scalar to scale the quantized_output int8 values back to FP32.\r\n> \r\n>     output_zero_point: Int32 zero point (An attribute of the op)\r\n>            The output zero point is set during the quantization process using training/calibration.\r\n>            The zero point of the quantized_output distribution.\r\n> \r\n>     out_dtype: String\r\n>            The dtype of the quantized_output. Can only be int8/uint8.\r\n>            The requantization from int32 to int8/uint8 is a part of the op compute.\r\n> \r\n>     out_dtype: String\r\n>            The dtype of the output. Can only be int8/uint8\r\n> \r\n>     ..... Other attributes are same as before.\r\n> \r\n> \r\n>     Returns\r\n>     -------\r\n>     quantized_output: int8/uint8 tensor\r\n>            The quantized tensor.\r\n> \r\n>     \"\"\"\r\n> ```\r\n> \r\n> Key points to discuss further\r\n> \r\n> * This op has a set of computations that can be pre-computed ideally but difficult to do because fold-constant only works on Relay ops and not within a Relay op. This has been discussed in more detail in [discuss forum](https://discuss.tvm.ai/t/tf-lite-quantized-conv2d-operator-conversion/2651).\r\n>   \r\n>   * First pre-computable - The core computation has some compute with kernel (Term 2 and Term 4 in the above link) that will be the part of tvm compute. This is very hard to avoid. We need a fused compute to get the best performance.\r\n>   * Second pre-computable - The output scale and zero_point are used to calculate int multiplier and shifts to keep all the computations in Int domain. This computation changes for each op (e.g. concat will handle this in a different manner compared to conv). So, this computation is also kept inside quantized_conv2d op. This can be avoided by changing the API and replacing output_scale with output_multiplier and output_shift. But, this seems very specific to TFLite and one might want to handle the output_scale and output_offset in a different manner. **I am not sure about this part, so please comment.**\r\n> * The op already has the requantization portion accounted for. As far as I understand, the requantization portion is just a clamp for out_dtype. (The handling of output_multiplier and output_shift, as mentioned above, is for the calculation of output quantized tensor and not for requantization).\r\n> \r\n> ## Op dequantize\r\n> Dequantization is required while connecting a quantized operator and an FP32 operator. This might be a temporary stage where we do not have a quantized implementation of the second op. Dequantization might also be required at the end of the network to keep the output of the graph in FP32.\r\n> \r\n> ```python\r\n> def dequantize(quantized_data, scale, zero_point, out_dtype):\r\n>     \"\"\"\r\n>     Dequantize takes the scale and zero_point attributes and dequantizes the \r\n>     int8/uint8 tensor to FP32 tensor.\r\n> \r\n>     Parameters\r\n>     -----------\r\n>     quantized_data: int8/uint8 quantized input tensor\r\n>            The input tensor in int8/uint8.\r\n>     \r\n>     scale: FP32 scalar (An attribute of the op)\r\n>            The float scalar to scale the int8 values back to FP32.\r\n> \r\n>     zero_point: Int32 zero point (An attribute of the op)\r\n>            The zero point of the distribution.\r\n> \r\n>     out_dtype: String\r\n>            The dtype of the output. Can only be float32.\r\n> \r\n>     Returns\r\n>     -------\r\n>     data: FP32 tensor\r\n>            The dequantized tensor.\r\n> \r\n>     \"\"\"\r\n> ```\r\n\r\nWe need to add `in_dtype` in the dequantize op as the calculations will be different, especially the range to use.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/503373445/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/503385241","html_url":"https://github.com/apache/tvm/issues/2351#issuecomment-503385241","issue_url":"https://api.github.com/repos/apache/tvm/issues/2351","id":503385241,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMzM4NTI0MQ==","user":{"login":"zhenhuaw-me","id":4936589,"node_id":"MDQ6VXNlcjQ5MzY1ODk=","avatar_url":"https://avatars.githubusercontent.com/u/4936589?v=4","gravatar_id":"","url":"https://api.github.com/users/zhenhuaw-me","html_url":"https://github.com/zhenhuaw-me","followers_url":"https://api.github.com/users/zhenhuaw-me/followers","following_url":"https://api.github.com/users/zhenhuaw-me/following{/other_user}","gists_url":"https://api.github.com/users/zhenhuaw-me/gists{/gist_id}","starred_url":"https://api.github.com/users/zhenhuaw-me/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zhenhuaw-me/subscriptions","organizations_url":"https://api.github.com/users/zhenhuaw-me/orgs","repos_url":"https://api.github.com/users/zhenhuaw-me/repos","events_url":"https://api.github.com/users/zhenhuaw-me/events{/privacy}","received_events_url":"https://api.github.com/users/zhenhuaw-me/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-19T02:51:44Z","updated_at":"2019-06-19T02:51:44Z","author_association":"CONTRIBUTOR","body":"> We need to add `in_dtype` in the dequantize op as the calculations will be different, especially the range to use.\r\n\r\nGuess the input tensor has such information already?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/503385241/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/503419988","html_url":"https://github.com/apache/tvm/pull/3380#issuecomment-503419988","issue_url":"https://api.github.com/repos/apache/tvm/issues/3380","id":503419988,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMzQxOTk4OA==","user":{"login":"liangfu","id":857821,"node_id":"MDQ6VXNlcjg1NzgyMQ==","avatar_url":"https://avatars.githubusercontent.com/u/857821?v=4","gravatar_id":"","url":"https://api.github.com/users/liangfu","html_url":"https://github.com/liangfu","followers_url":"https://api.github.com/users/liangfu/followers","following_url":"https://api.github.com/users/liangfu/following{/other_user}","gists_url":"https://api.github.com/users/liangfu/gists{/gist_id}","starred_url":"https://api.github.com/users/liangfu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/liangfu/subscriptions","organizations_url":"https://api.github.com/users/liangfu/orgs","repos_url":"https://api.github.com/users/liangfu/repos","events_url":"https://api.github.com/users/liangfu/events{/privacy}","received_events_url":"https://api.github.com/users/liangfu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-19T06:06:27Z","updated_at":"2019-06-19T06:06:27Z","author_association":"MEMBER","body":"Thanks @vegaluisjose for your explanation, that makes total sense. \r\n\r\nOn the other hand, I had some experience in programming with Chisel3 and make the generated verilog code compiled on Intel FPGAs. I would send another PR in making chiselVTA integrated into Qsys.\r\n","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/503419988/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/503420031","html_url":"https://github.com/apache/tvm/pull/3380#issuecomment-503420031","issue_url":"https://api.github.com/repos/apache/tvm/issues/3380","id":503420031,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMzQyMDAzMQ==","user":{"login":"liangfu","id":857821,"node_id":"MDQ6VXNlcjg1NzgyMQ==","avatar_url":"https://avatars.githubusercontent.com/u/857821?v=4","gravatar_id":"","url":"https://api.github.com/users/liangfu","html_url":"https://github.com/liangfu","followers_url":"https://api.github.com/users/liangfu/followers","following_url":"https://api.github.com/users/liangfu/following{/other_user}","gists_url":"https://api.github.com/users/liangfu/gists{/gist_id}","starred_url":"https://api.github.com/users/liangfu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/liangfu/subscriptions","organizations_url":"https://api.github.com/users/liangfu/orgs","repos_url":"https://api.github.com/users/liangfu/repos","events_url":"https://api.github.com/users/liangfu/events{/privacy}","received_events_url":"https://api.github.com/users/liangfu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-19T06:06:39Z","updated_at":"2019-06-19T06:06:39Z","author_association":"MEMBER","body":"As `TestDefaultPynqConfig` is left to be unimplemented intentionally, I would close this PR for now.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/503420031/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/503464613","html_url":"https://github.com/apache/tvm/pull/3135#issuecomment-503464613","issue_url":"https://api.github.com/repos/apache/tvm/issues/3135","id":503464613,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMzQ2NDYxMw==","user":{"login":"tmoreau89","id":5974488,"node_id":"MDQ6VXNlcjU5NzQ0ODg=","avatar_url":"https://avatars.githubusercontent.com/u/5974488?v=4","gravatar_id":"","url":"https://api.github.com/users/tmoreau89","html_url":"https://github.com/tmoreau89","followers_url":"https://api.github.com/users/tmoreau89/followers","following_url":"https://api.github.com/users/tmoreau89/following{/other_user}","gists_url":"https://api.github.com/users/tmoreau89/gists{/gist_id}","starred_url":"https://api.github.com/users/tmoreau89/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tmoreau89/subscriptions","organizations_url":"https://api.github.com/users/tmoreau89/orgs","repos_url":"https://api.github.com/users/tmoreau89/repos","events_url":"https://api.github.com/users/tmoreau89/events{/privacy}","received_events_url":"https://api.github.com/users/tmoreau89/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-19T08:36:51Z","updated_at":"2019-06-19T08:36:51Z","author_association":"CONTRIBUTOR","body":"@merrymercy @eqy some changes have been made to autotvm to support VTA\r\n\r\n@jroesch @ZihengJiang changes have also been applied to the quantization pass to support VTA\r\n\r\nPlease review","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/503464613/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/503464806","html_url":"https://github.com/apache/tvm/pull/3135#issuecomment-503464806","issue_url":"https://api.github.com/repos/apache/tvm/issues/3135","id":503464806,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMzQ2NDgwNg==","user":{"login":"tmoreau89","id":5974488,"node_id":"MDQ6VXNlcjU5NzQ0ODg=","avatar_url":"https://avatars.githubusercontent.com/u/5974488?v=4","gravatar_id":"","url":"https://api.github.com/users/tmoreau89","html_url":"https://github.com/tmoreau89","followers_url":"https://api.github.com/users/tmoreau89/followers","following_url":"https://api.github.com/users/tmoreau89/following{/other_user}","gists_url":"https://api.github.com/users/tmoreau89/gists{/gist_id}","starred_url":"https://api.github.com/users/tmoreau89/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tmoreau89/subscriptions","organizations_url":"https://api.github.com/users/tmoreau89/orgs","repos_url":"https://api.github.com/users/tmoreau89/repos","events_url":"https://api.github.com/users/tmoreau89/events{/privacy}","received_events_url":"https://api.github.com/users/tmoreau89/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-19T08:37:24Z","updated_at":"2019-06-19T08:37:24Z","author_association":"CONTRIBUTOR","body":"Currently some CI tests fail due to missing packages on the CI machine. Following up with @tqchen to get that resolved.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/503464806/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/503520936","html_url":"https://github.com/apache/tvm/issues/1996#issuecomment-503520936","issue_url":"https://api.github.com/repos/apache/tvm/issues/1996","id":503520936,"node_id":"MDEyOklzc3VlQ29tbWVudDUwMzUyMDkzNg==","user":{"login":"sgrechanik-h","id":41160472,"node_id":"MDQ6VXNlcjQxMTYwNDcy","avatar_url":"https://avatars.githubusercontent.com/u/41160472?v=4","gravatar_id":"","url":"https://api.github.com/users/sgrechanik-h","html_url":"https://github.com/sgrechanik-h","followers_url":"https://api.github.com/users/sgrechanik-h/followers","following_url":"https://api.github.com/users/sgrechanik-h/following{/other_user}","gists_url":"https://api.github.com/users/sgrechanik-h/gists{/gist_id}","starred_url":"https://api.github.com/users/sgrechanik-h/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sgrechanik-h/subscriptions","organizations_url":"https://api.github.com/users/sgrechanik-h/orgs","repos_url":"https://api.github.com/users/sgrechanik-h/repos","events_url":"https://api.github.com/users/sgrechanik-h/events{/privacy}","received_events_url":"https://api.github.com/users/sgrechanik-h/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-19T11:28:04Z","updated_at":"2019-06-19T11:31:27Z","author_association":"CONTRIBUTOR","body":"Hello everyone. I want to tell you about the current status of tensor expression automatic differentiation. The latest version can be found [here](https://github.com/sgrechanik-h/tvm/commits/autodiff). The main improvements are as follows:\r\n- I've implemented a solver for systems of linear integer equations. This considerably improves performance of certain operations like dilated and strided convolutions.\r\n- I've redesigned the zero elimination module. Now there is a class `Domain` which represents an iteration domain (a set of integer tuples, usually convex), and most of the functions transform domains into other domains (returning objects of the class `DomainTransformation` representing two domains and variable mappings).\r\n- I've moved to the new simplifiers. This was important because the Halide simplifier assumes that division is Euclidean which leads to generation of incorrect code.\r\n\r\nHowever there are several problems which are TVM-related and should be addressed before creating pull-requests:\r\n1. TVM bound inference sometimes leads to such tensor bound expansion that the tensors can't fit into memory. This is a known problem (#2104), however nobody knows how to solve it, as it seems. In the linked branch I use a simple fix which however breaks some tests by triggering a strange-looking assertion.\r\n2. Certain parts of TVM still use Euclidean division which sometimes results in incorrect code being generated. Hopefully, this problem will be mostly fixed by @tqchen in #3368. (Although the PR is still unfinished, I use its slightly modified version in the autodiff branch).","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/503520936/reactions","total_count":3,"+1":3,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]