[{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612481334","html_url":"https://github.com/apache/storm/issues/4275#issuecomment-2612481334","issue_url":"https://api.github.com/repos/apache/storm/issues/4275","id":2612481334,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0ODEzMzQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-05-04T22:45:58Z","updated_at":"2025-01-24T13:01:59Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user erikdw commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/236#issuecomment-217026345\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/236#issuecomment-217026345</a></p>\n\n<p>    @knusbaum : I see you closed this.  Are you planning to open a new PR for publishing these stats?  It would be a big help to us, we often wonder at various behaviors we witness from our users' topologies, and the only mechanism we have right now for getting visibility into the queue depths seems to be getting every topology owner to use a custom metrics consumer to publish the metrics which we would then need to provide fancy aggregation on top of.  Having it in the Storm UI and also in the API stats would be very very helpful.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612481334/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/217050548","html_url":"https://github.com/apache/storm/pull/1397#issuecomment-217050548","issue_url":"https://api.github.com/repos/apache/storm/issues/1397","id":217050548,"node_id":"MDEyOklzc3VlQ29tbWVudDIxNzA1MDU0OA==","user":{"login":"hustfxj","id":7270212,"node_id":"MDQ6VXNlcjcyNzAyMTI=","avatar_url":"https://avatars.githubusercontent.com/u/7270212?v=4","gravatar_id":"","url":"https://api.github.com/users/hustfxj","html_url":"https://github.com/hustfxj","followers_url":"https://api.github.com/users/hustfxj/followers","following_url":"https://api.github.com/users/hustfxj/following{/other_user}","gists_url":"https://api.github.com/users/hustfxj/gists{/gist_id}","starred_url":"https://api.github.com/users/hustfxj/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hustfxj/subscriptions","organizations_url":"https://api.github.com/users/hustfxj/orgs","repos_url":"https://api.github.com/users/hustfxj/repos","events_url":"https://api.github.com/users/hustfxj/events{/privacy}","received_events_url":"https://api.github.com/users/hustfxj/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-05-05T01:02:00Z","updated_at":"2016-05-05T01:02:00Z","author_association":"CONTRIBUTOR","body":"good, +1. Thank you @knusbaum \n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/217050548/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612904970","html_url":"https://github.com/apache/storm/issues/5599#issuecomment-2612904970","issue_url":"https://api.github.com/repos/apache/storm/issues/5599","id":2612904970,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI5MDQ5NzA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-05-05T01:02:02Z","updated_at":"2025-01-24T16:17:21Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user hustfxj commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1397#issuecomment-217050548\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1397#issuecomment-217050548</a></p>\n\n<p>    good, +1. Thank you @knusbaum </p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612904970/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612903008","html_url":"https://github.com/apache/storm/issues/5585#issuecomment-2612903008","issue_url":"https://api.github.com/repos/apache/storm/issues/5585","id":2612903008,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI5MDMwMDg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-05-05T07:10:39Z","updated_at":"2025-01-24T16:16:25Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user Jackyele commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1384#discussion_r62154514\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1384#discussion_r62154514</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/cluster/ZKStateStorage.java &#8212;<br/>\n    @@ -189,7 +190,15 @@ public void set_data(String path, byte[] data, List<ACL> acls) </p>\n{\n Zookeeper.setData(zkWriter, path, data);\n     }\n<p> else {<br/>\n Zookeeper.mkdirs(zkWriter, Zookeeper.parentPath(path), acls);</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>Zookeeper.createNode(zkWriter, path, data, CreateMode.PERSISTENT, acls);<br/>\n    +    try \n{\n    +Zookeeper.createNode(zkWriter, path, data, CreateMode.PERSISTENT, acls);\n    +    }\n<p> catch (RuntimeException e) {</p>\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    Why not catch NodeExistsException directly</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612903008/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612903012","html_url":"https://github.com/apache/storm/issues/5585#issuecomment-2612903012","issue_url":"https://api.github.com/repos/apache/storm/issues/5585","id":2612903012,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI5MDMwMTI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-05-05T07:24:18Z","updated_at":"2025-01-24T16:16:25Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user srdo commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1384#discussion_r62155412\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1384#discussion_r62155412</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/cluster/ZKStateStorage.java &#8212;<br/>\n    @@ -189,7 +190,15 @@ public void set_data(String path, byte[] data, List<ACL> acls) </p>\n{\n Zookeeper.setData(zkWriter, path, data);\n     }\n<p> else {<br/>\n Zookeeper.mkdirs(zkWriter, Zookeeper.parentPath(path), acls);</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>Zookeeper.createNode(zkWriter, path, data, CreateMode.PERSISTENT, acls);<br/>\n    +    try \n{\n    +Zookeeper.createNode(zkWriter, path, data, CreateMode.PERSISTENT, acls);\n    +    }\n<p> catch (RuntimeException e) {</p>\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    Not sure how? createNode() wraps it in RuntimeException, so it has to be unwrapped first, right? <a href=\"https://github.com/apache/storm/blob/master/storm-core/src/jvm/org/apache/storm/zookeeper/Zookeeper.java#L129\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/blob/master/storm-core/src/jvm/org/apache/storm/zookeeper/Zookeeper.java#L129</a></p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612903012/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612903014","html_url":"https://github.com/apache/storm/issues/5585#issuecomment-2612903014","issue_url":"https://api.github.com/repos/apache/storm/issues/5585","id":2612903014,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI5MDMwMTQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-05-05T07:46:01Z","updated_at":"2025-01-24T16:16:25Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user Jackyele commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1384#discussion_r62157087\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1384#discussion_r62157087</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/cluster/ZKStateStorage.java &#8212;<br/>\n    @@ -189,7 +190,15 @@ public void set_data(String path, byte[] data, List<ACL> acls) </p>\n{\n Zookeeper.setData(zkWriter, path, data);\n     }\n<p> else {<br/>\n Zookeeper.mkdirs(zkWriter, Zookeeper.parentPath(path), acls);</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>Zookeeper.createNode(zkWriter, path, data, CreateMode.PERSISTENT, acls);<br/>\n    +    try \n{\n    +Zookeeper.createNode(zkWriter, path, data, CreateMode.PERSISTENT, acls);\n    +    }\n<p> catch (RuntimeException e) {</p>\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    yeah, we have to catch RuntimeError first; and how about using *<b>Utils. exceptionCauseIsInstanceOf</b>* instead for consistency, just like <a href=\"https://github.com/apache/storm/blob/master/storm-core/src/jvm/org/apache/storm/zookeeper/Zookeeper.java#L165\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/blob/master/storm-core/src/jvm/org/apache/storm/zookeeper/Zookeeper.java#L165</a> does</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612903014/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612903018","html_url":"https://github.com/apache/storm/issues/5585#issuecomment-2612903018","issue_url":"https://api.github.com/repos/apache/storm/issues/5585","id":2612903018,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI5MDMwMTg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-05-05T08:50:24Z","updated_at":"2025-01-24T16:16:25Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user srdo commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1384#discussion_r62162389\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1384#discussion_r62162389</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/cluster/ZKStateStorage.java &#8212;<br/>\n    @@ -189,7 +190,15 @@ public void set_data(String path, byte[] data, List<ACL> acls) </p>\n{\n Zookeeper.setData(zkWriter, path, data);\n     }\n<p> else {<br/>\n Zookeeper.mkdirs(zkWriter, Zookeeper.parentPath(path), acls);</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>Zookeeper.createNode(zkWriter, path, data, CreateMode.PERSISTENT, acls);<br/>\n    +    try \n{\n    +Zookeeper.createNode(zkWriter, path, data, CreateMode.PERSISTENT, acls);\n    +    }\n<p> catch (RuntimeException e) {</p>\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    Good idea, I hadn't noticed that function <img class=\"emoticon\" src=\"https://issues.apache.org/jira/images/icons/emoticons/smile.png\" height=\"16\" width=\"16\" align=\"absmiddle\" alt=\"\" border=\"0\"/></p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612903018/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/217110521","html_url":"https://github.com/apache/storm/pull/236#issuecomment-217110521","issue_url":"https://api.github.com/repos/apache/storm/issues/236","id":217110521,"node_id":"MDEyOklzc3VlQ29tbWVudDIxNzExMDUyMQ==","user":{"login":"abhishekagarwal87","id":1477457,"node_id":"MDQ6VXNlcjE0Nzc0NTc=","avatar_url":"https://avatars.githubusercontent.com/u/1477457?v=4","gravatar_id":"","url":"https://api.github.com/users/abhishekagarwal87","html_url":"https://github.com/abhishekagarwal87","followers_url":"https://api.github.com/users/abhishekagarwal87/followers","following_url":"https://api.github.com/users/abhishekagarwal87/following{/other_user}","gists_url":"https://api.github.com/users/abhishekagarwal87/gists{/gist_id}","starred_url":"https://api.github.com/users/abhishekagarwal87/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/abhishekagarwal87/subscriptions","organizations_url":"https://api.github.com/users/abhishekagarwal87/orgs","repos_url":"https://api.github.com/users/abhishekagarwal87/repos","events_url":"https://api.github.com/users/abhishekagarwal87/events{/privacy}","received_events_url":"https://api.github.com/users/abhishekagarwal87/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-05-05T09:20:27Z","updated_at":"2016-05-05T09:21:14Z","author_association":"CONTRIBUTOR","body":"I am preparing a patch for publishing in-backlog (receive-queue) and out-backlog (send-queue). I am able to see the average value of these metrics on UI over each time window period but only in executors section (No aggregation over component level etc) Also users may be interested in instant value of these metrics and I don't know how will I fit that into UI. any suggestions are welcome. \n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/217110521/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612481337","html_url":"https://github.com/apache/storm/issues/4275#issuecomment-2612481337","issue_url":"https://api.github.com/repos/apache/storm/issues/4275","id":2612481337,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0ODEzMzc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-05-05T09:20:29Z","updated_at":"2025-01-24T13:01:59Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user abhishekagarwal87 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/236#issuecomment-217110521\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/236#issuecomment-217110521</a></p>\n\n<p>    I am preparing a patch for publishing in-backlog (receive-queue) and out-backlog (send-queue). I can see the average value of these metrics on UI over each time window period but only in executors section.  (No aggregation over component level etc) Also users may be interested in instant value of these metrics and I don't know how will I fit that into UI. any suggestions are welcome. </p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612481337/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612896447","html_url":"https://github.com/apache/storm/issues/5540#issuecomment-2612896447","issue_url":"https://api.github.com/repos/apache/storm/issues/5540","id":2612896447,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4OTY0NDc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-05-05T09:51:12Z","updated_at":"2025-01-24T16:13:20Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user abhishekagarwal87 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1331#discussion_r62167427\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1331#discussion_r62167427</a></p>\n\n<p>    &#8212; Diff: external/storm-kafka/src/jvm/org/apache/storm/kafka/PartitionManager.java &#8212;<br/>\n    @@ -46,6 +46,9 @@<br/>\n private final CountMetric _fetchAPIMessageCount;<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    @harshach - is it fine with you to do the refactoring separately? Apologies for a long pause. </p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612896447/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612905481","html_url":"https://github.com/apache/storm/issues/5602#issuecomment-2612905481","issue_url":"https://api.github.com/repos/apache/storm/issues/5602","id":2612905481,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI5MDU0ODE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-05-05T15:59:05Z","updated_at":"2025-01-24T16:17:36Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user diginoise commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/commit/96da31ed0068dde3b4309ee417382be5084ce941#commitcomment-17368296\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/commit/96da31ed0068dde3b4309ee417382be5084ce941#commitcomment-17368296</a></p>\n\n<p>    Jira ticket created: <a href=\"https://issues.apache.org/jira/browse/STORM-1767\" class=\"external-link\" rel=\"nofollow\">https://issues.apache.org/jira/browse/STORM-1767</a></p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612905481/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612899867","html_url":"https://github.com/apache/storm/issues/5565#issuecomment-2612899867","issue_url":"https://api.github.com/repos/apache/storm/issues/5565","id":2612899867,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4OTk4Njc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-05-05T18:03:42Z","updated_at":"2025-01-24T16:14:56Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>GitHub user fbyrne opened a pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1400\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1400</a></p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1730\" title=\"LocalCluster#shutdown() does not terminate all storm threads/thread pools.\" class=\"issue-link\" data-issue-key=\"STORM-1730\"><del>STORM-1730</del></a> LocalCluster#shutdown() does not terminate all storm threads/thread pools.</p>\n\n<p>    The thread pool executor used by the `DisruptorQueue.FlusherPool` is in a static context of the<br/>\n    DisruptorQueue.  To avoid major changes to how this queues lifecycle is<br/>\n    managed I added a simple fix is to create a thread pool factory which creates daemon<br/>\n    threads.  The threads are now also named with the 'disruptor-flush'<br/>\n    prefix to be consistent with the TimerTask.</p>\n\n<p>You can merge this pull request into a Git repository by running:</p>\n\n<p>    $ git pull <a href=\"https://github.com/fbyrne/storm\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/fbyrne/storm</a> master</p>\n\n<p>Alternatively you can review and apply these changes as the patch at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1400.patch\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1400.patch</a></p>\n\n<p>To close this pull request, make a commit to your master/trunk branch<br/>\nwith (at least) the following in the commit message:</p>\n\n<p>    This closes #1400</p>\n\n<hr />\n<p>commit 3c78314e18e21cd188cd7b8e5ae3f2143ed75cbd<br/>\nAuthor: Fergus Byrne <fergus.byrne@gmail.com><br/>\nDate:   2016-05-05T16:32:33Z</p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1730\" title=\"LocalCluster#shutdown() does not terminate all storm threads/thread pools.\" class=\"issue-link\" data-issue-key=\"STORM-1730\"><del>STORM-1730</del></a> LocalCluster#shutdown() does not terminate all storm<br/>\n    threads/thread pools.</p>\n\n<p>    The thread pool that is remaining is in a static context of the<br/>\n    DisruptorQueue.  To avoid major changes to how this queues lifecycle is<br/>\n    managed the fix is to create a thread pool factory which creates daemon<br/>\n    threads.  The threads are now also named with the 'disruptor-flush'<br/>\n    prefix to be consistent with the TimerTask.</p>\n\n<hr />","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612899867/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/217228874","html_url":"https://github.com/apache/storm/pull/236#issuecomment-217228874","issue_url":"https://api.github.com/repos/apache/storm/issues/236","id":217228874,"node_id":"MDEyOklzc3VlQ29tbWVudDIxNzIyODg3NA==","user":{"login":"erikdw","id":1111441,"node_id":"MDQ6VXNlcjExMTE0NDE=","avatar_url":"https://avatars.githubusercontent.com/u/1111441?v=4","gravatar_id":"","url":"https://api.github.com/users/erikdw","html_url":"https://github.com/erikdw","followers_url":"https://api.github.com/users/erikdw/followers","following_url":"https://api.github.com/users/erikdw/following{/other_user}","gists_url":"https://api.github.com/users/erikdw/gists{/gist_id}","starred_url":"https://api.github.com/users/erikdw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/erikdw/subscriptions","organizations_url":"https://api.github.com/users/erikdw/orgs","repos_url":"https://api.github.com/users/erikdw/repos","events_url":"https://api.github.com/users/erikdw/events{/privacy}","received_events_url":"https://api.github.com/users/erikdw/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-05-05T18:06:34Z","updated_at":"2016-05-05T18:06:34Z","author_association":"CONTRIBUTOR","body":"@abhishekagarwal87 : awesome news!\n\nAny way you can post a screenshot of the UI you are currently proposing?  At least please do so with the PR when you send it.  That could help others to brainstorm how to put such values into the UI.  Maybe you're instead asking for suggestions on how to handle _obtaining_ the instantaneous values?\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/217228874/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612481341","html_url":"https://github.com/apache/storm/issues/4275#issuecomment-2612481341","issue_url":"https://api.github.com/repos/apache/storm/issues/4275","id":2612481341,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0ODEzNDE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-05-05T18:06:35Z","updated_at":"2025-01-24T13:01:59Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user erikdw commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/236#issuecomment-217228874\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/236#issuecomment-217228874</a></p>\n\n<p>    @abhishekagarwal87 : awesome news!</p>\n\n<p>    Any way you can post a screenshot of the UI you are currently proposing?  At least please do so with the PR when you send it.  That could help others to brainstorm how to put such values into the UI.  Maybe you're instead asking for suggestions on how to handle <b>obtaining</b> the instantaneous values?</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612481341/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612902872","html_url":"https://github.com/apache/storm/issues/5584#issuecomment-2612902872","issue_url":"https://api.github.com/repos/apache/storm/issues/5584","id":2612902872,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI5MDI4NzI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-05-05T18:15:18Z","updated_at":"2025-01-24T16:16:21Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>GitHub user abhishekagarwal87 opened a pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1401\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1401</a></p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1749\" title=\"Fix storm-starter links in the github code\" class=\"issue-link\" data-issue-key=\"STORM-1749\"><del>STORM-1749</del></a>: Fix storm-starter github links</p>\n\n\n\n<p>You can merge this pull request into a Git repository by running:</p>\n\n<p>    $ git pull <a href=\"https://github.com/abhishekagarwal87/storm\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/abhishekagarwal87/storm</a> documentation</p>\n\n<p>Alternatively you can review and apply these changes as the patch at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1401.patch\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1401.patch</a></p>\n\n<p>To close this pull request, make a commit to your master/trunk branch<br/>\nwith (at least) the following in the commit message:</p>\n\n<p>    This closes #1401</p>\n\n<hr />\n<p>commit 0458b0078dcaaeb1d7290e8c77c31cd46ac0f1e2<br/>\nAuthor: Abhishek Agarwal <abhishek.agarwal@inmobi.com><br/>\nDate:   2016-05-05T18:11:40Z</p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1749\" title=\"Fix storm-starter links in the github code\" class=\"issue-link\" data-issue-key=\"STORM-1749\"><del>STORM-1749</del></a>: Fix storm-starter github links</p>\n\n<hr />","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612902872/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/217232912","html_url":"https://github.com/apache/storm/pull/236#issuecomment-217232912","issue_url":"https://api.github.com/repos/apache/storm/issues/236","id":217232912,"node_id":"MDEyOklzc3VlQ29tbWVudDIxNzIzMjkxMg==","user":{"login":"abhishekagarwal87","id":1477457,"node_id":"MDQ6VXNlcjE0Nzc0NTc=","avatar_url":"https://avatars.githubusercontent.com/u/1477457?v=4","gravatar_id":"","url":"https://api.github.com/users/abhishekagarwal87","html_url":"https://github.com/abhishekagarwal87","followers_url":"https://api.github.com/users/abhishekagarwal87/followers","following_url":"https://api.github.com/users/abhishekagarwal87/following{/other_user}","gists_url":"https://api.github.com/users/abhishekagarwal87/gists{/gist_id}","starred_url":"https://api.github.com/users/abhishekagarwal87/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/abhishekagarwal87/subscriptions","organizations_url":"https://api.github.com/users/abhishekagarwal87/orgs","repos_url":"https://api.github.com/users/abhishekagarwal87/repos","events_url":"https://api.github.com/users/abhishekagarwal87/events{/privacy}","received_events_url":"https://api.github.com/users/abhishekagarwal87/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-05-05T18:22:01Z","updated_at":"2016-05-05T18:22:01Z","author_association":"CONTRIBUTOR","body":"I will do that Eric. I am using https://github.com/apache/storm/blob/master/storm-core/src/jvm/org/apache/storm/metric/internal/LatencyStatAndMetric.java to store the windowed values. It is easy to add the instantaneous values in the result map so that is not a problem. I will put a screenshot and the PR soon. May be that will clear the confusion. \n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/217232912/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612481344","html_url":"https://github.com/apache/storm/issues/4275#issuecomment-2612481344","issue_url":"https://api.github.com/repos/apache/storm/issues/4275","id":2612481344,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0ODEzNDQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-05-05T18:22:02Z","updated_at":"2025-01-24T13:01:59Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user abhishekagarwal87 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/236#issuecomment-217232912\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/236#issuecomment-217232912</a></p>\n\n<p>    I will do that Eric. I am using <a href=\"https://github.com/apache/storm/blob/master/storm-core/src/jvm/org/apache/storm/metric/internal/LatencyStatAndMetric.java\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/blob/master/storm-core/src/jvm/org/apache/storm/metric/internal/LatencyStatAndMetric.java</a> to store the windowed values. It is easy to add the instantaneous values in the result map so that is not a problem. I will put a screenshot and the PR soon. May be that will clear the confusion. </p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612481344/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/217241771","html_url":"https://github.com/apache/storm/pull/236#issuecomment-217241771","issue_url":"https://api.github.com/repos/apache/storm/issues/236","id":217241771,"node_id":"MDEyOklzc3VlQ29tbWVudDIxNzI0MTc3MQ==","user":{"login":"dsKarthick","id":1086011,"node_id":"MDQ6VXNlcjEwODYwMTE=","avatar_url":"https://avatars.githubusercontent.com/u/1086011?v=4","gravatar_id":"","url":"https://api.github.com/users/dsKarthick","html_url":"https://github.com/dsKarthick","followers_url":"https://api.github.com/users/dsKarthick/followers","following_url":"https://api.github.com/users/dsKarthick/following{/other_user}","gists_url":"https://api.github.com/users/dsKarthick/gists{/gist_id}","starred_url":"https://api.github.com/users/dsKarthick/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dsKarthick/subscriptions","organizations_url":"https://api.github.com/users/dsKarthick/orgs","repos_url":"https://api.github.com/users/dsKarthick/repos","events_url":"https://api.github.com/users/dsKarthick/events{/privacy}","received_events_url":"https://api.github.com/users/dsKarthick/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-05-05T18:52:37Z","updated_at":"2016-05-05T18:53:09Z","author_association":"NONE","body":"@abhishekagarwal87 I am excited to see your screenshot as well. Also, I am curious as why you chose to use [LatencyStatAndMetric.java](https://github.com/apache/storm/blob/master/storm-core/src/jvm/org/apache/storm/metric/internal/LatencyStatAndMetric.java) over [CountStatAndMetric.java](https://github.com/apache/storm/blob/master/storm-core/src/jvm/org/apache/storm/metric/internal/CountStatAndMetric.java)? \n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/217241771/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612481350","html_url":"https://github.com/apache/storm/issues/4275#issuecomment-2612481350","issue_url":"https://api.github.com/repos/apache/storm/issues/4275","id":2612481350,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0ODEzNTA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-05-05T18:52:38Z","updated_at":"2025-01-24T13:01:59Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user dsKarthick commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/236#issuecomment-217241771\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/236#issuecomment-217241771</a></p>\n\n<p>    @abhishekagarwal87 I am excited to see your screenshot as well. Also, I am curious as why you chose to use <a href=\"https://github.com/apache/storm/blob/master/storm-core/src/jvm/org/apache/storm/metric/internal/LatencyStatAndMetric.java\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/blob/master/storm-core/src/jvm/org/apache/storm/metric/internal/LatencyStatAndMetric.java</a> over <a href=\"https://github.com/apache/storm/blob/master/storm-core/src/jvm/org/apache/storm/metric/internal/CountStatAndMetric.java?\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/blob/master/storm-core/src/jvm/org/apache/storm/metric/internal/CountStatAndMetric.java?</a> </p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612481350/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612897864","html_url":"https://github.com/apache/storm/issues/5550#issuecomment-2612897864","issue_url":"https://api.github.com/repos/apache/storm/issues/5550","id":2612897864,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4OTc4NjQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-05-06T06:22:57Z","updated_at":"2025-01-24T16:13:59Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user darionyaphet commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1350#issuecomment-217356843\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1350#issuecomment-217356843</a></p>\n\n<p>    @HeartSaVioR  <img class=\"emoticon\" src=\"https://issues.apache.org/jira/images/icons/emoticons/tongue.png\" height=\"16\" width=\"16\" align=\"absmiddle\" alt=\"\" border=\"0\"/> </p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612897864/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/217363373","html_url":"https://github.com/apache/storm/pull/236#issuecomment-217363373","issue_url":"https://api.github.com/repos/apache/storm/issues/236","id":217363373,"node_id":"MDEyOklzc3VlQ29tbWVudDIxNzM2MzM3Mw==","user":{"login":"abhishekagarwal87","id":1477457,"node_id":"MDQ6VXNlcjE0Nzc0NTc=","avatar_url":"https://avatars.githubusercontent.com/u/1477457?v=4","gravatar_id":"","url":"https://api.github.com/users/abhishekagarwal87","html_url":"https://github.com/abhishekagarwal87","followers_url":"https://api.github.com/users/abhishekagarwal87/followers","following_url":"https://api.github.com/users/abhishekagarwal87/following{/other_user}","gists_url":"https://api.github.com/users/abhishekagarwal87/gists{/gist_id}","starred_url":"https://api.github.com/users/abhishekagarwal87/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/abhishekagarwal87/subscriptions","organizations_url":"https://api.github.com/users/abhishekagarwal87/orgs","repos_url":"https://api.github.com/users/abhishekagarwal87/repos","events_url":"https://api.github.com/users/abhishekagarwal87/events{/privacy}","received_events_url":"https://api.github.com/users/abhishekagarwal87/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-05-06T06:58:06Z","updated_at":"2016-05-06T06:58:06Z","author_association":"CONTRIBUTOR","body":"Because we need average length of queue average over each time window. If you look at the LatencyStatAndMetric, it does exactly that. I record the queue lengths in each operation and return the average values with executor heartbeat. \n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/217363373/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612481356","html_url":"https://github.com/apache/storm/issues/4275#issuecomment-2612481356","issue_url":"https://api.github.com/repos/apache/storm/issues/4275","id":2612481356,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0ODEzNTY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-05-06T06:58:08Z","updated_at":"2025-01-24T13:02:00Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user abhishekagarwal87 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/236#issuecomment-217363373\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/236#issuecomment-217363373</a></p>\n\n<p>    Because we need average length of queue average over each time window. If you look at the LatencyStatAndMetric, it does exactly that. I record the queue lengths in each operation and return the average values with executor heartbeat. </p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612481356/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612905701","html_url":"https://github.com/apache/storm/issues/5604#issuecomment-2612905701","issue_url":"https://api.github.com/repos/apache/storm/issues/5604","id":2612905701,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI5MDU3MDE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-05-06T10:12:05Z","updated_at":"2025-01-24T16:17:43Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>GitHub user satishd opened a pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1402\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1402</a></p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1769\" title=\"Add a test for submitting topologies to local nimbus with STORM_TOPOLOGY_SUBMISSION_NOTIFIER_PLUGIN.\" class=\"issue-link\" data-issue-key=\"STORM-1769\"><del>STORM-1769</del></a> Added a test to check local nimbus with notifier plugin</p>\n\n\n\n<p>You can merge this pull request into a Git repository by running:</p>\n\n<p>    $ git pull <a href=\"https://github.com/satishd/storm\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/satishd/storm</a> <a href=\"https://issues.apache.org/jira/browse/STORM-1769\" title=\"Add a test for submitting topologies to local nimbus with STORM_TOPOLOGY_SUBMISSION_NOTIFIER_PLUGIN.\" class=\"issue-link\" data-issue-key=\"STORM-1769\"><del>STORM-1769</del></a></p>\n\n<p>Alternatively you can review and apply these changes as the patch at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1402.patch\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1402.patch</a></p>\n\n<p>To close this pull request, make a commit to your master/trunk branch<br/>\nwith (at least) the following in the commit message:</p>\n\n<p>    This closes #1402</p>\n\n<hr />\n<p>commit 84a632913e972aa50d683f86e407419f7fc445ca<br/>\nAuthor: Satish Duggana <sduggana@hortonworks.com><br/>\nDate:   2016-05-06T09:35:47Z</p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1769\" title=\"Add a test for submitting topologies to local nimbus with STORM_TOPOLOGY_SUBMISSION_NOTIFIER_PLUGIN.\" class=\"issue-link\" data-issue-key=\"STORM-1769\"><del>STORM-1769</del></a> Added a test to check local nimbus with notifier plugin</p>\n\n<hr />","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612905701/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612905704","html_url":"https://github.com/apache/storm/issues/5604#issuecomment-2612905704","issue_url":"https://api.github.com/repos/apache/storm/issues/5604","id":2612905704,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI5MDU3MDQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-05-06T10:25:51Z","updated_at":"2025-01-24T16:17:43Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user satishd closed the pull request at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1402\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1402</a></p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612905704/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612905709","html_url":"https://github.com/apache/storm/issues/5604#issuecomment-2612905709","issue_url":"https://api.github.com/repos/apache/storm/issues/5604","id":2612905709,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI5MDU3MDk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-05-06T10:33:15Z","updated_at":"2025-01-24T16:17:43Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>GitHub user satishd opened a pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1403\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1403</a></p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1769\" title=\"Add a test for submitting topologies to local nimbus with STORM_TOPOLOGY_SUBMISSION_NOTIFIER_PLUGIN.\" class=\"issue-link\" data-issue-key=\"STORM-1769\"><del>STORM-1769</del></a> Added a test to check local nimbus with notifier plugin</p>\n\n\n\n<p>You can merge this pull request into a Git repository by running:</p>\n\n<p>    $ git pull <a href=\"https://github.com/satishd/storm\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/satishd/storm</a> <a href=\"https://issues.apache.org/jira/browse/STORM-1769\" title=\"Add a test for submitting topologies to local nimbus with STORM_TOPOLOGY_SUBMISSION_NOTIFIER_PLUGIN.\" class=\"issue-link\" data-issue-key=\"STORM-1769\"><del>STORM-1769</del></a>-m</p>\n\n<p>Alternatively you can review and apply these changes as the patch at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1403.patch\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1403.patch</a></p>\n\n<p>To close this pull request, make a commit to your master/trunk branch<br/>\nwith (at least) the following in the commit message:</p>\n\n<p>    This closes #1403</p>\n\n<hr />\n<p>commit 48d6fa0eda7ad238a8a0f91a76136be72501dc86<br/>\nAuthor: Satish Duggana <sduggana@hortonworks.com><br/>\nDate:   2016-05-06T10:32:28Z</p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1769\" title=\"Add a test for submitting topologies to local nimbus with STORM_TOPOLOGY_SUBMISSION_NOTIFIER_PLUGIN.\" class=\"issue-link\" data-issue-key=\"STORM-1769\"><del>STORM-1769</del></a> Added a test to check local nimbus with notifier plugin</p>\n\n<hr />","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612905709/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/217418115","html_url":"https://github.com/apache/storm/pull/1386#issuecomment-217418115","issue_url":"https://api.github.com/repos/apache/storm/issues/1386","id":217418115,"node_id":"MDEyOklzc3VlQ29tbWVudDIxNzQxODExNQ==","user":{"login":"srdo","id":4324588,"node_id":"MDQ6VXNlcjQzMjQ1ODg=","avatar_url":"https://avatars.githubusercontent.com/u/4324588?v=4","gravatar_id":"","url":"https://api.github.com/users/srdo","html_url":"https://github.com/srdo","followers_url":"https://api.github.com/users/srdo/followers","following_url":"https://api.github.com/users/srdo/following{/other_user}","gists_url":"https://api.github.com/users/srdo/gists{/gist_id}","starred_url":"https://api.github.com/users/srdo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/srdo/subscriptions","organizations_url":"https://api.github.com/users/srdo/orgs","repos_url":"https://api.github.com/users/srdo/repos","events_url":"https://api.github.com/users/srdo/events{/privacy}","received_events_url":"https://api.github.com/users/srdo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-05-06T11:39:03Z","updated_at":"2016-05-06T11:39:03Z","author_association":"CONTRIBUTOR","body":"Going by the Kafka coding guidelines (http://kafka.apache.org/coding-guide.html), it looks like client libraries can only be assumed to support two major (0.x) releases (current and previous). I'm wondering if it would be possible to spin off the components executing requests against Kafka into separate projects, so users can declare dependency on the newest storm-kafka-client while also retaining support for older brokers?\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/217418115/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612903641","html_url":"https://github.com/apache/storm/issues/5590#issuecomment-2612903641","issue_url":"https://api.github.com/repos/apache/storm/issues/5590","id":2612903641,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI5MDM2NDE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-05-06T11:39:05Z","updated_at":"2025-01-24T16:16:43Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user srdo commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1386#issuecomment-217418115\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1386#issuecomment-217418115</a></p>\n\n<p>    Going by the Kafka coding guidelines (<a href=\"http://kafka.apache.org/coding-guide.html\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://kafka.apache.org/coding-guide.html</a>), it looks like client libraries can only be assumed to support two major (0.x) releases (current and previous). I'm wondering if it would be possible to spin off the components executing requests against Kafka into separate projects, so users can declare dependency on the newest storm-kafka-client while also retaining support for older brokers?</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612903641/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612898495","html_url":"https://github.com/apache/storm/issues/5555#issuecomment-2612898495","issue_url":"https://api.github.com/repos/apache/storm/issues/5555","id":2612898495,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4OTg0OTU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-05-06T12:05:31Z","updated_at":"2025-01-24T16:14:16Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>GitHub user darionyaphet opened a pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1405\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1405</a></p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1720\" title=\"Support GEO in storm-redis\" class=\"issue-link\" data-issue-key=\"STORM-1720\"><del>STORM-1720</del></a>Support GEO in storm-redis</p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1720\" title=\"Support GEO in storm-redis\" class=\"issue-link\" data-issue-key=\"STORM-1720\"><del>STORM-1720</del></a>(<a href=\"https://issues.apache.org/jira/browse/STORM-1720\" class=\"external-link\" rel=\"nofollow\">https://issues.apache.org/jira/browse/STORM-1720</a>) GEO is a new feature in redis 3.2 . It's useful in Geography calculate.</p>\n\n\n<p>You can merge this pull request into a Git repository by running:</p>\n\n<p>    $ git pull <a href=\"https://github.com/darionyaphet/storm\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/darionyaphet/storm</a> <a href=\"https://issues.apache.org/jira/browse/STORM-1720\" title=\"Support GEO in storm-redis\" class=\"issue-link\" data-issue-key=\"STORM-1720\"><del>STORM-1720</del></a></p>\n\n<p>Alternatively you can review and apply these changes as the patch at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1405.patch\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1405.patch</a></p>\n\n<p>To close this pull request, make a commit to your master/trunk branch<br/>\nwith (at least) the following in the commit message:</p>\n\n<p>    This closes #1405</p>\n\n<hr />\n<p>commit 063670e52b21dbe537ac5b019821de4dc217c028<br/>\nAuthor: darionyaphet <darion.yaphet@gmail.com><br/>\nDate:   2016-05-06T12:00:00Z</p>\n\n<p>    support GEO in storm-redis</p>\n\n<hr />","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612898495/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/217434349","html_url":"https://github.com/apache/storm/pull/1403#issuecomment-217434349","issue_url":"https://api.github.com/repos/apache/storm/issues/1403","id":217434349,"node_id":"MDEyOklzc3VlQ29tbWVudDIxNzQzNDM0OQ==","user":{"login":"hustfxj","id":7270212,"node_id":"MDQ6VXNlcjcyNzAyMTI=","avatar_url":"https://avatars.githubusercontent.com/u/7270212?v=4","gravatar_id":"","url":"https://api.github.com/users/hustfxj","html_url":"https://github.com/hustfxj","followers_url":"https://api.github.com/users/hustfxj/followers","following_url":"https://api.github.com/users/hustfxj/following{/other_user}","gists_url":"https://api.github.com/users/hustfxj/gists{/gist_id}","starred_url":"https://api.github.com/users/hustfxj/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hustfxj/subscriptions","organizations_url":"https://api.github.com/users/hustfxj/orgs","repos_url":"https://api.github.com/users/hustfxj/repos","events_url":"https://api.github.com/users/hustfxj/events{/privacy}","received_events_url":"https://api.github.com/users/hustfxj/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-05-06T13:04:39Z","updated_at":"2016-05-06T13:04:39Z","author_association":"CONTRIBUTOR","body":"+1\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/217434349/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612905716","html_url":"https://github.com/apache/storm/issues/5604#issuecomment-2612905716","issue_url":"https://api.github.com/repos/apache/storm/issues/5604","id":2612905716,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI5MDU3MTY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-05-06T13:04:40Z","updated_at":"2025-01-24T16:17:43Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user hustfxj commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1403#issuecomment-217434349\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1403#issuecomment-217434349</a></p>\n\n<p>    +1</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612905716/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612905811","html_url":"https://github.com/apache/storm/issues/5605#issuecomment-2612905811","issue_url":"https://api.github.com/repos/apache/storm/issues/5605","id":2612905811,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI5MDU4MTE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-05-06T17:47:12Z","updated_at":"2025-01-24T16:17:46Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=abhishek.agarwal\">abhishek.agarwal</a>:</i>\n<p>+1. Making the state storage pluggable will be useful. </p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612905811/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/217512903","html_url":"https://github.com/apache/storm/pull/1160#issuecomment-217512903","issue_url":"https://api.github.com/repos/apache/storm/issues/1160","id":217512903,"node_id":"MDEyOklzc3VlQ29tbWVudDIxNzUxMjkwMw==","user":{"login":"abellina","id":1901059,"node_id":"MDQ6VXNlcjE5MDEwNTk=","avatar_url":"https://avatars.githubusercontent.com/u/1901059?v=4","gravatar_id":"","url":"https://api.github.com/users/abellina","html_url":"https://github.com/abellina","followers_url":"https://api.github.com/users/abellina/followers","following_url":"https://api.github.com/users/abellina/following{/other_user}","gists_url":"https://api.github.com/users/abellina/gists{/gist_id}","starred_url":"https://api.github.com/users/abellina/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/abellina/subscriptions","organizations_url":"https://api.github.com/users/abellina/orgs","repos_url":"https://api.github.com/users/abellina/repos","events_url":"https://api.github.com/users/abellina/events{/privacy}","received_events_url":"https://api.github.com/users/abellina/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-05-06T17:51:05Z","updated_at":"2016-05-06T17:51:05Z","author_association":"CONTRIBUTOR","body":"@revans2 just checking on this one. Anything else that needs done?\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/217512903/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612644108","html_url":"https://github.com/apache/storm/issues/5065#issuecomment-2612644108","issue_url":"https://api.github.com/repos/apache/storm/issues/5065","id":2612644108,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NDQxMDg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-05-06T17:51:08Z","updated_at":"2025-01-24T14:19:59Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user abellina commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1160#issuecomment-217512903\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1160#issuecomment-217512903</a></p>\n\n<p>    @revans2 just checking on this one. Anything else that needs done?</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612644108/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/217513183","html_url":"https://github.com/apache/storm/pull/1191#issuecomment-217513183","issue_url":"https://api.github.com/repos/apache/storm/issues/1191","id":217513183,"node_id":"MDEyOklzc3VlQ29tbWVudDIxNzUxMzE4Mw==","user":{"login":"abellina","id":1901059,"node_id":"MDQ6VXNlcjE5MDEwNTk=","avatar_url":"https://avatars.githubusercontent.com/u/1901059?v=4","gravatar_id":"","url":"https://api.github.com/users/abellina","html_url":"https://github.com/abellina","followers_url":"https://api.github.com/users/abellina/followers","following_url":"https://api.github.com/users/abellina/following{/other_user}","gists_url":"https://api.github.com/users/abellina/gists{/gist_id}","starred_url":"https://api.github.com/users/abellina/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/abellina/subscriptions","organizations_url":"https://api.github.com/users/abellina/orgs","repos_url":"https://api.github.com/users/abellina/repos","events_url":"https://api.github.com/users/abellina/events{/privacy}","received_events_url":"https://api.github.com/users/abellina/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-05-06T17:52:11Z","updated_at":"2016-05-06T17:52:11Z","author_association":"CONTRIBUTOR","body":"@abhishekagarwal87 @redsanket any other changes that need made?\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/217513183/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612645084","html_url":"https://github.com/apache/storm/issues/5070#issuecomment-2612645084","issue_url":"https://api.github.com/repos/apache/storm/issues/5070","id":2612645084,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NDUwODQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-05-06T17:52:12Z","updated_at":"2025-01-24T14:20:25Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user abellina commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1191#issuecomment-217513183\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1191#issuecomment-217513183</a></p>\n\n<p>    @abhishekagarwal87 @redsanket any other changes that need made?</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612645084/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/217683094","html_url":"https://github.com/apache/storm/pull/1386#issuecomment-217683094","issue_url":"https://api.github.com/repos/apache/storm/issues/1386","id":217683094,"node_id":"MDEyOklzc3VlQ29tbWVudDIxNzY4MzA5NA==","user":{"login":"harshach","id":38649,"node_id":"MDQ6VXNlcjM4NjQ5","avatar_url":"https://avatars.githubusercontent.com/u/38649?v=4","gravatar_id":"","url":"https://api.github.com/users/harshach","html_url":"https://github.com/harshach","followers_url":"https://api.github.com/users/harshach/followers","following_url":"https://api.github.com/users/harshach/following{/other_user}","gists_url":"https://api.github.com/users/harshach/gists{/gist_id}","starred_url":"https://api.github.com/users/harshach/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/harshach/subscriptions","organizations_url":"https://api.github.com/users/harshach/orgs","repos_url":"https://api.github.com/users/harshach/repos","events_url":"https://api.github.com/users/harshach/events{/privacy}","received_events_url":"https://api.github.com/users/harshach/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-05-08T02:08:53Z","updated_at":"2016-05-08T02:08:53Z","author_association":"CONTRIBUTOR","body":"@abhishekagarwal87 got it. But its problematic for someone who wants to build against the current version of kafka. Agree in this case that building with old version and using that would work for newer version of kafka as well and given that old api is marked as deprecated from Kafka 0.10 onwards . This approach is ok . But Ideally we should use maven profiles to build against different versions of kafka api.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/217683094/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612903646","html_url":"https://github.com/apache/storm/issues/5590#issuecomment-2612903646","issue_url":"https://api.github.com/repos/apache/storm/issues/5590","id":2612903646,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI5MDM2NDY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-05-08T02:08:55Z","updated_at":"2025-01-24T16:16:43Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user harshach commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1386#issuecomment-217683094\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1386#issuecomment-217683094</a></p>\n\n<p>    @abhishekagarwal87 got it. But its problematic for someone who wants to build against the current version of kafka. Agree in this case that building with old version and using that would work for newer version of kafka as well and given that old api is marked as deprecated from Kafka 0.10 onwards . This approach is ok . But Ideally we should use maven profiles to build against different versions of kafka api.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612903646/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/217691630","html_url":"https://github.com/apache/storm/pull/1324#issuecomment-217691630","issue_url":"https://api.github.com/repos/apache/storm/issues/1324","id":217691630,"node_id":"MDEyOklzc3VlQ29tbWVudDIxNzY5MTYzMA==","user":{"login":"unsleepy22","id":631361,"node_id":"MDQ6VXNlcjYzMTM2MQ==","avatar_url":"https://avatars.githubusercontent.com/u/631361?v=4","gravatar_id":"","url":"https://api.github.com/users/unsleepy22","html_url":"https://github.com/unsleepy22","followers_url":"https://api.github.com/users/unsleepy22/followers","following_url":"https://api.github.com/users/unsleepy22/following{/other_user}","gists_url":"https://api.github.com/users/unsleepy22/gists{/gist_id}","starred_url":"https://api.github.com/users/unsleepy22/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/unsleepy22/subscriptions","organizations_url":"https://api.github.com/users/unsleepy22/orgs","repos_url":"https://api.github.com/users/unsleepy22/repos","events_url":"https://api.github.com/users/unsleepy22/events{/privacy}","received_events_url":"https://api.github.com/users/unsleepy22/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-05-08T05:09:50Z","updated_at":"2016-05-08T05:09:50Z","author_association":"NONE","body":"+1\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/217691630/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612895675","html_url":"https://github.com/apache/storm/issues/5535#issuecomment-2612895675","issue_url":"https://api.github.com/repos/apache/storm/issues/5535","id":2612895675,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4OTU2NzU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-05-08T05:09:51Z","updated_at":"2025-01-24T16:12:59Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user unsleepy22 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1324#issuecomment-217691630\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1324#issuecomment-217691630</a></p>\n\n<p>    +1</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612895675/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/217697370","html_url":"https://github.com/apache/storm/pull/1386#issuecomment-217697370","issue_url":"https://api.github.com/repos/apache/storm/issues/1386","id":217697370,"node_id":"MDEyOklzc3VlQ29tbWVudDIxNzY5NzM3MA==","user":{"login":"abhishekagarwal87","id":1477457,"node_id":"MDQ6VXNlcjE0Nzc0NTc=","avatar_url":"https://avatars.githubusercontent.com/u/1477457?v=4","gravatar_id":"","url":"https://api.github.com/users/abhishekagarwal87","html_url":"https://github.com/abhishekagarwal87","followers_url":"https://api.github.com/users/abhishekagarwal87/followers","following_url":"https://api.github.com/users/abhishekagarwal87/following{/other_user}","gists_url":"https://api.github.com/users/abhishekagarwal87/gists{/gist_id}","starred_url":"https://api.github.com/users/abhishekagarwal87/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/abhishekagarwal87/subscriptions","organizations_url":"https://api.github.com/users/abhishekagarwal87/orgs","repos_url":"https://api.github.com/users/abhishekagarwal87/repos","events_url":"https://api.github.com/users/abhishekagarwal87/events{/privacy}","received_events_url":"https://api.github.com/users/abhishekagarwal87/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-05-08T06:08:46Z","updated_at":"2016-05-08T06:08:46Z","author_association":"CONTRIBUTOR","body":"@harshach - If in future, we want to make use any incompatible kafka api in storm-kafka, that's exactly what we should do. But the chances are less likely, since we already have storm-kafka-client based off new kafka apis. \n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/217697370/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612903650","html_url":"https://github.com/apache/storm/issues/5590#issuecomment-2612903650","issue_url":"https://api.github.com/repos/apache/storm/issues/5590","id":2612903650,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI5MDM2NTA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-05-08T06:08:49Z","updated_at":"2025-01-24T16:16:44Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user abhishekagarwal87 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1386#issuecomment-217697370\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1386#issuecomment-217697370</a></p>\n\n<p>    @harshach - If in future, we want to make use any incompatible kafka api in storm-kafka, that's exactly what we should do. But the chances are less likely, since we already have storm-kafka-client based off new kafka apis. </p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612903650/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/217697493","html_url":"https://github.com/apache/storm/pull/1324#issuecomment-217697493","issue_url":"https://api.github.com/repos/apache/storm/issues/1324","id":217697493,"node_id":"MDEyOklzc3VlQ29tbWVudDIxNzY5NzQ5Mw==","user":{"login":"abhishekagarwal87","id":1477457,"node_id":"MDQ6VXNlcjE0Nzc0NTc=","avatar_url":"https://avatars.githubusercontent.com/u/1477457?v=4","gravatar_id":"","url":"https://api.github.com/users/abhishekagarwal87","html_url":"https://github.com/abhishekagarwal87","followers_url":"https://api.github.com/users/abhishekagarwal87/followers","following_url":"https://api.github.com/users/abhishekagarwal87/following{/other_user}","gists_url":"https://api.github.com/users/abhishekagarwal87/gists{/gist_id}","starred_url":"https://api.github.com/users/abhishekagarwal87/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/abhishekagarwal87/subscriptions","organizations_url":"https://api.github.com/users/abhishekagarwal87/orgs","repos_url":"https://api.github.com/users/abhishekagarwal87/repos","events_url":"https://api.github.com/users/abhishekagarwal87/events{/privacy}","received_events_url":"https://api.github.com/users/abhishekagarwal87/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-05-08T06:12:10Z","updated_at":"2016-05-08T06:12:10Z","author_association":"CONTRIBUTOR","body":"Looks good. \n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/217697493/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612895679","html_url":"https://github.com/apache/storm/issues/5535#issuecomment-2612895679","issue_url":"https://api.github.com/repos/apache/storm/issues/5535","id":2612895679,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4OTU2Nzk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-05-08T06:12:11Z","updated_at":"2025-01-24T16:12:59Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user abhishekagarwal87 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1324#issuecomment-217697493\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1324#issuecomment-217697493</a></p>\n\n<p>    Looks good. </p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612895679/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612654467","html_url":"https://github.com/apache/storm/issues/5113#issuecomment-2612654467","issue_url":"https://api.github.com/repos/apache/storm/issues/5113","id":2612654467,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NTQ0Njc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-05-08T14:35:00Z","updated_at":"2025-01-24T14:24:32Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=basti.lj\">basti.lj</a>:</i>\n<p><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=abhishek.agarwal\" class=\"user-hover\" rel=\"abhishek.agarwal\">Abhishek Agarwal</a> I worked on migration of Nimbus this week. It is difficult to decouple the modules in Nimbus. If I broke the nimbus down into several pieces, there will be much unnecessary effort on the conversion between clojure and java for the common modules of Nimbus, e.g. nimbus-data, state-transition. So for saving efforts, I'd like still to keep the nimbus as one issue. Sorry the bad suggestion before.<br/>\nBTW, I'd like to sync the current status of Nimbus. The common part of Nimbus, like nimbus-server, nimbus-data, state-transition, nimbus utils were done. The service handler is still in-progress. We will try to finish all migration work of Nimbus next week, and start the testing. If everything is OK, we could send out the PR by the end of next week. </p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612654467/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612654473","html_url":"https://github.com/apache/storm/issues/5113#issuecomment-2612654473","issue_url":"https://api.github.com/repos/apache/storm/issues/5113","id":2612654473,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NTQ0NzM=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-05-08T14:41:30Z","updated_at":"2025-01-24T14:24:32Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=abhishek.agarwal\">abhishek.agarwal</a>:</i>\n<p>No problem <a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=basti.lj\" class=\"user-hover\" rel=\"basti.lj\">Basti Liu</a>. There hasn't been much activity on java porting so was hoping to help in expediting things. But looks like you have already ported significant portion of it. It definitely makes sense that you drive it to completion. Though I would ask you to publish the class hierarchy, you have planned for nimbus. You may get some early feedback on that. </p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612654473/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612654597","html_url":"https://github.com/apache/storm/issues/5114#issuecomment-2612654597","issue_url":"https://api.github.com/repos/apache/storm/issues/5114","id":2612654597,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NTQ1OTc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-05-08T14:43:22Z","updated_at":"2025-01-24T14:24:36Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=abhishek.agarwal\">abhishek.agarwal</a>:</i>\n<p><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=Cody\" class=\"user-hover\" rel=\"Cody\">Cody</a> can you publish the class hierarchy of executor that you have in mind? Executor class seems to be good place for using object oriented design. </p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612654597/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612645968","html_url":"https://github.com/apache/storm/issues/5076#issuecomment-2612645968","issue_url":"https://api.github.com/repos/apache/storm/issues/5076","id":2612645968,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NDU5Njg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-05-08T14:44:51Z","updated_at":"2025-01-24T14:20:50Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user abhishekagarwal87 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1359#discussion_r62432935\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1359#discussion_r62432935</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/scheduler/IsolationScheduler.java &#8212;<br/>\n    @@ -0,0 +1,434 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.scheduler;<br/>\n    +<br/>\n    +import java.util.ArrayList;<br/>\n    +import java.util.Collection;<br/>\n    +import java.util.Collections;<br/>\n    +import java.util.Comparator;<br/>\n    +import java.util.HashMap;<br/>\n    +import java.util.HashSet;<br/>\n    +import java.util.LinkedList;<br/>\n    +import java.util.List;<br/>\n    +import java.util.Map;<br/>\n    +import java.util.Set;<br/>\n    +import java.util.TreeMap;<br/>\n    +<br/>\n    +import org.apache.storm.utils.Utils;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +import org.apache.storm.Config;<br/>\n    +import org.apache.storm.scheduler.Cluster;<br/>\n    +import org.apache.storm.scheduler.ExecutorDetails;<br/>\n    +import org.apache.storm.scheduler.IScheduler;<br/>\n    +import org.apache.storm.scheduler.SchedulerAssignment;<br/>\n    +import org.apache.storm.scheduler.Topologies;<br/>\n    +import org.apache.storm.scheduler.TopologyDetails;<br/>\n    +import org.apache.storm.scheduler.WorkerSlot;<br/>\n    +<br/>\n    +public class IsolationScheduler implements IScheduler {<br/>\n    +    private final static Logger LOG = LoggerFactory.getLogger(IsolationScheduler.class);<br/>\n    +<br/>\n    +    private Map conf;<br/>\n    +<br/>\n    +    @Override<br/>\n    +    public void prepare(Map conf) </p>\n{\n    +this.conf = conf;\n    +    }\n<p>    +<br/>\n    +    // for each isolated topology:<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    This comment should be moved to top of the class. </p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612645968/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612645973","html_url":"https://github.com/apache/storm/issues/5076#issuecomment-2612645973","issue_url":"https://api.github.com/repos/apache/storm/issues/5076","id":2612645973,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NDU5NzM=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-05-08T14:50:55Z","updated_at":"2025-01-24T14:20:50Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user abhishekagarwal87 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1359#discussion_r62433019\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1359#discussion_r62433019</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/scheduler/IsolationScheduler.java &#8212;<br/>\n    @@ -0,0 +1,434 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.scheduler;<br/>\n    +<br/>\n    +import java.util.ArrayList;<br/>\n    +import java.util.Collection;<br/>\n    +import java.util.Collections;<br/>\n    +import java.util.Comparator;<br/>\n    +import java.util.HashMap;<br/>\n    +import java.util.HashSet;<br/>\n    +import java.util.LinkedList;<br/>\n    +import java.util.List;<br/>\n    +import java.util.Map;<br/>\n    +import java.util.Set;<br/>\n    +import java.util.TreeMap;<br/>\n    +<br/>\n    +import org.apache.storm.utils.Utils;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +import org.apache.storm.Config;<br/>\n    +import org.apache.storm.scheduler.Cluster;<br/>\n    +import org.apache.storm.scheduler.ExecutorDetails;<br/>\n    +import org.apache.storm.scheduler.IScheduler;<br/>\n    +import org.apache.storm.scheduler.SchedulerAssignment;<br/>\n    +import org.apache.storm.scheduler.Topologies;<br/>\n    +import org.apache.storm.scheduler.TopologyDetails;<br/>\n    +import org.apache.storm.scheduler.WorkerSlot;<br/>\n    +<br/>\n    +public class IsolationScheduler implements IScheduler {<br/>\n    +    private final static Logger LOG = LoggerFactory.getLogger(IsolationScheduler.class);<br/>\n    +<br/>\n    +    private Map conf;<br/>\n    +<br/>\n    +    @Override<br/>\n    +    public void prepare(Map conf) </p>\n{\n    +this.conf = conf;\n    +    }\n<p>    +<br/>\n    +    // for each isolated topology:<br/>\n    +    //   compute even distribution of executors -> workers on the number of workers specified for the topology<br/>\n    +    //   compute distribution of workers to machines<br/>\n    +    // determine host -> list of <span class=\"error\">&#91;slot, topology id, executors&#93;</span><br/>\n    +    // iterate through hosts and: a machine is good if:<br/>\n    +    //   1. only running workers from one isolated topology<br/>\n    +    //   2. all workers running on it match one of the distributions of executors for that topology<br/>\n    +    //   3. matches one of the # of workers<br/>\n    +    // blacklist the good hosts and remove those workers from the list of need to be assigned workers<br/>\n    +    // otherwise unassign all other workers for isolated topologies if assigned<br/>\n    +<br/>\n    +    public Set<ExecutorDetails> removeElemFromSet(Set<Set<ExecutorDetails>> executorsSets) {<br/>\n    +if (executorsSets.iterator().hasNext()) </p>\n{\n    +    Set<ExecutorDetails> elem = executorsSets.iterator().next();\n    +    executorsSets.remove(elem);\n    +    return elem;\n    +}\n<p> else </p>\n{\n    +    return null;\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    // get host -> all assignable worker slots for non-blacklisted machines (assigned or not assigned)<br/>\n    +    // will then have a list of machines that need to be assigned (machine -> <span class=\"error\">&#91;topology, list of list of executors&#93;</span>)<br/>\n    +    // match each spec to a machine (who has the right number of workers), free everything else on that machine and assign those slots (do one topology at a time)<br/>\n    +    // blacklist all machines who had production slots defined<br/>\n    +    // log isolated topologies who weren't able to get enough slots / machines<br/>\n    +    // run default scheduler on isolated topologies that didn't have enough slots + non-isolated topologies on remaining machines<br/>\n    +    // set blacklist to what it was initially<br/>\n    +    @Override<br/>\n    +    public void schedule(Topologies topologies, Cluster cluster) {<br/>\n    +Set<String> origBlacklist = cluster.getBlacklistedHosts();<br/>\n    +List<TopologyDetails> isoTopologies = isolatedTopologies(topologies.getTopologies());<br/>\n    +Set<String> isoIds = isolatedTopoplogyIds(isoTopologies);<br/>\n    +Map<String, Set<Set<ExecutorDetails>>> topologyWorkerSpecs = topologyWorkerSpecs(isoTopologies);<br/>\n    +Map<String, Map<Integer, Integer>> topologyMachineDistributions = topologyMachineDistributions(isoTopologies);<br/>\n    +Map<String, List<AssignmentInfo>> hostAssignments = hostAssignments(cluster);<br/>\n    +<br/>\n    +Set<Map.Entry<String, List<AssignmentInfo>>> hostAssignEntries = hostAssignments.entrySet();<br/>\n    +for (Map.Entry<String, List<AssignmentInfo>> entry : hostAssignEntries) {<br/>\n    +    List<AssignmentInfo> assInfos = entry.getValue();<br/>\n    +    String topologyId = assInfos.get(0).getTopologyId();<br/>\n    +    Map<Integer, Integer> distribution = topologyMachineDistributions.get(topologyId);<br/>\n    +    Set<Set<ExecutorDetails>> workerSpecs = topologyWorkerSpecs.get(topologyId);<br/>\n    +    int numWorkers = assInfos.size();<br/>\n    +<br/>\n    +    if (isoIds.contains(topologyId)<br/>\n    +    && checkAssignmentTopology(assInfos, topologyId)<br/>\n    +    && (distribution != null && distribution.containsKey(numWorkers))<br/>\n    +    && checkAssignmentWorkerSpecs(assInfos, workerSpecs)) {<br/>\n    +decrementDistribution(distribution, numWorkers);<br/>\n    +for (AssignmentInfo ass : assInfos) </p>\n{\n    +    workerSpecs.remove(ass.getExecutors());\n    +}\n<p>    +cluster.blacklistHost(entry.getKey());<br/>\n    +    } else {<br/>\n    +for (AssignmentInfo ass : assInfos) {<br/>\n    +    if (isoIds.contains(ass.getTopologyId())) </p>\n{\n    +cluster.freeSlot(ass.getWorkerSlot());\n    +    }\n<p>    +}<br/>\n    +    }<br/>\n    +}<br/>\n    +<br/>\n    +Map<String, Set<WorkerSlot>> hostUsedSlots = hostUsedSlots(cluster);<br/>\n    +LinkedList<HostAssignableSlots> hss = hostAssignableSlots(cluster);<br/>\n    +List<String> failedTopologyIds = new ArrayList<String>();<br/>\n    +for (Map.Entry<String, Set<Set<ExecutorDetails>>> entry : topologyWorkerSpecs.entrySet()) {<br/>\n    +    String topologyId = entry.getKey();<br/>\n    +    Set<Set<ExecutorDetails>> executorSet = entry.getValue();<br/>\n    +    if (executorSet != null && executorSet.size() > 0) </p>\n{\n    +failedTopologyIds.add(topologyId);\n    +    }\n<p>    +    List<Integer> workerNum = distributionSortedAmts(topologyMachineDistributions.get(topologyId));<br/>\n    +    for (Integer num : workerNum) {<br/>\n    +HostAssignableSlots hostSlots = hss.peek();<br/>\n    +List<WorkerSlot> slot = hostSlots != null ? hostSlots.getWorkerSlots() : null;<br/>\n    +<br/>\n    +if (slot != null && slot.size() >= num.intValue()) {<br/>\n    +    hss.poll();<br/>\n    +    cluster.freeSlots(hostUsedSlots.get(hostSlots.getHostName()));<br/>\n    +    for (WorkerSlot tmpSlot : slot.subList(0, num)) </p>\n{\n    +Set<ExecutorDetails> executor = removeElemFromSet(executorSet);\n    +cluster.assign(tmpSlot, topologyId, executor);\n    +    }\n<p>    +    cluster.blacklistHost(hostSlots.getHostName());<br/>\n    +}<br/>\n    +    }<br/>\n    +}<br/>\n    +<br/>\n    +if (failedTopologyIds.size() > 0) {<br/>\n    +    LOG.warn(\"Unable to isolate topologies \" + failedTopologyIds<br/>\n    +    + \". No machine had enough worker slots to run the remaining workers for these topologies. \"<br/>\n    +    + \"Clearing all other resources and will wait for enough resources for \"<br/>\n    +    + \"isolated topologies before allocating any other resources.\");<br/>\n    +    // clear workers off all hosts that are not blacklisted<br/>\n    +    Map<String, Set<WorkerSlot>> usedSlots = hostUsedSlots(cluster);<br/>\n    +    Set<Map.Entry<String, Set<WorkerSlot>>> entries = usedSlots.entrySet();<br/>\n    +    for (Map.Entry<String, Set<WorkerSlot>> entry : entries) {<br/>\n    +if (!cluster.isBlacklistedHost(entry.getKey())) </p>\n{\n    +    cluster.freeSlots(entry.getValue());\n    +}\n<p>    +    }<br/>\n    +} else </p>\n{\n    +    // run default scheduler on non-isolated topologies\n    +    Set<String> allocatedTopologies = allocatedTopologies(topologyWorkerSpecs);\n    +    Topologies leftOverTopologies = leftoverTopologies(topologies, allocatedTopologies);\n    +    DefaultScheduler.defaultSchedule(leftOverTopologies, cluster);\n    +}\n<p>    +cluster.setBlacklistedHosts(origBlacklist);<br/>\n    +    }<br/>\n    +<br/>\n    +    private List<TopologyDetails> isolatedTopologies(Collection<TopologyDetails> topologies) {<br/>\n    +Object isoMachines = conf.get(Config.ISOLATION_SCHEDULER_MACHINES);<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    can we make this Map<String, Number> isoMachines</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612645973/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612645976","html_url":"https://github.com/apache/storm/issues/5076#issuecomment-2612645976","issue_url":"https://api.github.com/repos/apache/storm/issues/5076","id":2612645976,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NDU5NzY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-05-08T15:00:02Z","updated_at":"2025-01-24T14:20:50Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user abhishekagarwal87 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1359#discussion_r62433215\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1359#discussion_r62433215</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/scheduler/IsolationScheduler.java &#8212;<br/>\n    @@ -0,0 +1,434 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.scheduler;<br/>\n    +<br/>\n    +import java.util.ArrayList;<br/>\n    +import java.util.Collection;<br/>\n    +import java.util.Collections;<br/>\n    +import java.util.Comparator;<br/>\n    +import java.util.HashMap;<br/>\n    +import java.util.HashSet;<br/>\n    +import java.util.LinkedList;<br/>\n    +import java.util.List;<br/>\n    +import java.util.Map;<br/>\n    +import java.util.Set;<br/>\n    +import java.util.TreeMap;<br/>\n    +<br/>\n    +import org.apache.storm.utils.Utils;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +import org.apache.storm.Config;<br/>\n    +import org.apache.storm.scheduler.Cluster;<br/>\n    +import org.apache.storm.scheduler.ExecutorDetails;<br/>\n    +import org.apache.storm.scheduler.IScheduler;<br/>\n    +import org.apache.storm.scheduler.SchedulerAssignment;<br/>\n    +import org.apache.storm.scheduler.Topologies;<br/>\n    +import org.apache.storm.scheduler.TopologyDetails;<br/>\n    +import org.apache.storm.scheduler.WorkerSlot;<br/>\n    +<br/>\n    +public class IsolationScheduler implements IScheduler {<br/>\n    +    private final static Logger LOG = LoggerFactory.getLogger(IsolationScheduler.class);<br/>\n    +<br/>\n    +    private Map conf;<br/>\n    +<br/>\n    +    @Override<br/>\n    +    public void prepare(Map conf) </p>\n{\n    +this.conf = conf;\n    +    }\n<p>    +<br/>\n    +    // for each isolated topology:<br/>\n    +    //   compute even distribution of executors -> workers on the number of workers specified for the topology<br/>\n    +    //   compute distribution of workers to machines<br/>\n    +    // determine host -> list of <span class=\"error\">&#91;slot, topology id, executors&#93;</span><br/>\n    +    // iterate through hosts and: a machine is good if:<br/>\n    +    //   1. only running workers from one isolated topology<br/>\n    +    //   2. all workers running on it match one of the distributions of executors for that topology<br/>\n    +    //   3. matches one of the # of workers<br/>\n    +    // blacklist the good hosts and remove those workers from the list of need to be assigned workers<br/>\n    +    // otherwise unassign all other workers for isolated topologies if assigned<br/>\n    +<br/>\n    +    public Set<ExecutorDetails> removeElemFromSet(Set<Set<ExecutorDetails>> executorsSets) {<br/>\n    +if (executorsSets.iterator().hasNext()) </p>\n{\n    +    Set<ExecutorDetails> elem = executorsSets.iterator().next();\n    +    executorsSets.remove(elem);\n    +    return elem;\n    +}\n<p> else </p>\n{\n    +    return null;\n    +}<br/>\n    +    }<br/>\n    +<br/>\n    +    // get host -> all assignable worker slots for non-blacklisted machines (assigned or not assigned)<br/>\n    +    // will then have a list of machines that need to be assigned (machine -> <span class=\"error\">&#91;topology, list of list of executors&#93;</span>)<br/>\n    +    // match each spec to a machine (who has the right number of workers), free everything else on that machine and assign those slots (do one topology at a time)<br/>\n    +    // blacklist all machines who had production slots defined<br/>\n    +    // log isolated topologies who weren't able to get enough slots / machines<br/>\n    +    // run default scheduler on isolated topologies that didn't have enough slots + non-isolated topologies on remaining machines<br/>\n    +    // set blacklist to what it was initially<br/>\n    +    @Override<br/>\n    +    public void schedule(Topologies topologies, Cluster cluster) {<br/>\n    +Set<String> origBlacklist = cluster.getBlacklistedHosts();<br/>\n    +List<TopologyDetails> isoTopologies = isolatedTopologies(topologies.getTopologies());<br/>\n    +Set<String> isoIds = isolatedTopoplogyIds(isoTopologies);<br/>\n    +Map<String, Set<Set<ExecutorDetails>>> topologyWorkerSpecs = topologyWorkerSpecs(isoTopologies);<br/>\n    +Map<String, Map<Integer, Integer>> topologyMachineDistributions = topologyMachineDistributions(isoTopologies);<br/>\n    +Map<String, List<AssignmentInfo>> hostAssignments = hostAssignments(cluster);<br/>\n    +<br/>\n    +Set<Map.Entry<String, List<AssignmentInfo>>> hostAssignEntries = hostAssignments.entrySet();<br/>\n    +for (Map.Entry<String, List<AssignmentInfo>> entry : hostAssignEntries) {<br/>\n    +    List<AssignmentInfo> assInfos = entry.getValue();<br/>\n    +    String topologyId = assInfos.get(0).getTopologyId();<br/>\n    +    Map<Integer, Integer> distribution = topologyMachineDistributions.get(topologyId);<br/>\n    +    Set<Set<ExecutorDetails>> workerSpecs = topologyWorkerSpecs.get(topologyId);<br/>\n    +    int numWorkers = assInfos.size();<br/>\n    +<br/>\n    +    if (isoIds.contains(topologyId)<br/>\n    +    && checkAssignmentTopology(assInfos, topologyId)<br/>\n    +    && (distribution != null && distribution.containsKey(numWorkers))<br/>\n    +    && checkAssignmentWorkerSpecs(assInfos, workerSpecs)) {<br/>\n    +decrementDistribution(distribution, numWorkers);<br/>\n    +for (AssignmentInfo ass : assInfos) {\n    +    workerSpecs.remove(ass.getExecutors());\n    +}<br/>\n    +cluster.blacklistHost(entry.getKey());<br/>\n    +    } else {<br/>\n    +for (AssignmentInfo ass : assInfos) {<br/>\n    +    if (isoIds.contains(ass.getTopologyId())) {\n    +cluster.freeSlot(ass.getWorkerSlot());\n    +    }<br/>\n    +}<br/>\n    +    }<br/>\n    +}<br/>\n    +<br/>\n    +Map<String, Set<WorkerSlot>> hostUsedSlots = hostUsedSlots(cluster);<br/>\n    +LinkedList<HostAssignableSlots> hss = hostAssignableSlots(cluster);<br/>\n    +List<String> failedTopologyIds = new ArrayList<String>();<br/>\n    +for (Map.Entry<String, Set<Set<ExecutorDetails>>> entry : topologyWorkerSpecs.entrySet()) {<br/>\n    +    String topologyId = entry.getKey();<br/>\n    +    Set<Set<ExecutorDetails>> executorSet = entry.getValue();<br/>\n    +    if (executorSet != null && executorSet.size() > 0) {\n    +failedTopologyIds.add(topologyId);\n    +    }<br/>\n    +    List<Integer> workerNum = distributionSortedAmts(topologyMachineDistributions.get(topologyId));<br/>\n    +    for (Integer num : workerNum) {<br/>\n    +HostAssignableSlots hostSlots = hss.peek();<br/>\n    +List<WorkerSlot> slot = hostSlots != null ? hostSlots.getWorkerSlots() : null;<br/>\n    +<br/>\n    +if (slot != null && slot.size() >= num.intValue()) {<br/>\n    +    hss.poll();<br/>\n    +    cluster.freeSlots(hostUsedSlots.get(hostSlots.getHostName()));<br/>\n    +    for (WorkerSlot tmpSlot : slot.subList(0, num)) {\n    +Set<ExecutorDetails> executor = removeElemFromSet(executorSet);\n    +cluster.assign(tmpSlot, topologyId, executor);\n    +    }<br/>\n    +    cluster.blacklistHost(hostSlots.getHostName());<br/>\n    +}<br/>\n    +    }<br/>\n    +}<br/>\n    +<br/>\n    +if (failedTopologyIds.size() > 0) {<br/>\n    +    LOG.warn(\"Unable to isolate topologies \" + failedTopologyIds<br/>\n    +    + \". No machine had enough worker slots to run the remaining workers for these topologies. \"<br/>\n    +    + \"Clearing all other resources and will wait for enough resources for \"<br/>\n    +    + \"isolated topologies before allocating any other resources.\");<br/>\n    +    // clear workers off all hosts that are not blacklisted<br/>\n    +    Map<String, Set<WorkerSlot>> usedSlots = hostUsedSlots(cluster);<br/>\n    +    Set<Map.Entry<String, Set<WorkerSlot>>> entries = usedSlots.entrySet();<br/>\n    +    for (Map.Entry<String, Set<WorkerSlot>> entry : entries) {<br/>\n    +if (!cluster.isBlacklistedHost(entry.getKey())) {\n    +    cluster.freeSlots(entry.getValue());\n    +}<br/>\n    +    }<br/>\n    +} else {\n    +    // run default scheduler on non-isolated topologies\n    +    Set<String> allocatedTopologies = allocatedTopologies(topologyWorkerSpecs);\n    +    Topologies leftOverTopologies = leftoverTopologies(topologies, allocatedTopologies);\n    +    DefaultScheduler.defaultSchedule(leftOverTopologies, cluster);\n    +}<br/>\n    +cluster.setBlacklistedHosts(origBlacklist);<br/>\n    +    }<br/>\n    +<br/>\n    +    private List<TopologyDetails> isolatedTopologies(Collection<TopologyDetails> topologies) {<br/>\n    +Object isoMachines = conf.get(Config.ISOLATION_SCHEDULER_MACHINES);<br/>\n    +if (isoMachines == null) {    +    return null;    +}\n<p>    +<br/>\n    +Set<String> topologyNames = ((Map<String, Number>) isoMachines).keySet();<br/>\n    +List<TopologyDetails> isoTopologies = new ArrayList<TopologyDetails>();<br/>\n    +for (TopologyDetails topo : topologies) {<br/>\n    +    if (topologyNames.contains(topo.getName())) </p>\n{\n    +isoTopologies.add(topo);\n    +    }\n<p>    +}<br/>\n    +return isoTopologies;<br/>\n    +    }<br/>\n    +<br/>\n    +    private Set<String> isolatedTopoplogyIds(List<TopologyDetails> topologies) {<br/>\n    +Set<String> ids = new HashSet<String>();<br/>\n    +if (topologies != null && topologies.size() > 0) {<br/>\n    +    for (TopologyDetails topology : topologies) </p>\n{\n    +ids.add(topology.getId());\n    +    }\n<p>    +}<br/>\n    +return ids;<br/>\n    +    }<br/>\n    +<br/>\n    +    // map from topology id -> set of sets of executors<br/>\n    +    private Map<String, Set<Set<ExecutorDetails>>> topologyWorkerSpecs(List<TopologyDetails> topologies) {<br/>\n    +Map<String, Set<Set<ExecutorDetails>>> workerSpecs = new HashMap<String, Set<Set<ExecutorDetails>>>();<br/>\n    +for (TopologyDetails topology : topologies) </p>\n{\n    +    workerSpecs.put(topology.getId(), computeWorkerSpecs(topology));\n    +}\n<p>    +return workerSpecs;<br/>\n    +    }<br/>\n    +<br/>\n    +    private Map<String, List<AssignmentInfo>> hostAssignments(Cluster cluster) {<br/>\n    +Collection<SchedulerAssignment> assignmentValues =  cluster.getAssignments().values();<br/>\n    +Map<String, List<AssignmentInfo>> hostAssignments = new HashMap<String, List<AssignmentInfo>>();<br/>\n    +<br/>\n    +for (SchedulerAssignment sa : assignmentValues) {<br/>\n    +    Map<WorkerSlot, List<ExecutorDetails>> slotExecutors = Utils.reverseMap(sa.getExecutorToSlot());<br/>\n    +    Set<Map.Entry<WorkerSlot, List<ExecutorDetails>>> entries = slotExecutors.entrySet();<br/>\n    +    for (Map.Entry<WorkerSlot, List<ExecutorDetails>> entry : entries) {<br/>\n    +WorkerSlot slot = entry.getKey();<br/>\n    +List<ExecutorDetails> executors = entry.getValue();<br/>\n    +<br/>\n    +String host = cluster.getHost(slot.getNodeId());<br/>\n    +AssignmentInfo ass = new AssignmentInfo(slot, sa.getTopologyId(), new HashSet<ExecutorDetails>(executors));<br/>\n    +List<AssignmentInfo> executorList = hostAssignments.get(host);<br/>\n    +if (executorList == null) </p>\n{\n    +    executorList = new ArrayList<AssignmentInfo>();\n    +    hostAssignments.put(host, executorList);\n    +}\n<p>    +executorList.add(ass);<br/>\n    +    }<br/>\n    +}<br/>\n    +return hostAssignments;<br/>\n    +    }<br/>\n    +<br/>\n    +    private Set<Set<ExecutorDetails>> computeWorkerSpecs(TopologyDetails topology) {<br/>\n    +Map<String, List<ExecutorDetails>> compExecutors = Utils.reverseMap(topology.getExecutorToComponent());<br/>\n    +<br/>\n    +List<ExecutorDetails> allExecutors = new ArrayList<ExecutorDetails>();<br/>\n    +Collection<List<ExecutorDetails>> values = compExecutors.values();<br/>\n    +for (List<ExecutorDetails> eList : values) </p>\n{\n    +    allExecutors.addAll(eList);\n    +}\n<p>    +<br/>\n    +int numWorkers = topology.getNumWorkers();<br/>\n    +int bucketIndex = 0;<br/>\n    +Map<Integer, Set<ExecutorDetails>> bucketExecutors = new HashMap<Integer, Set<ExecutorDetails>>(numWorkers);<br/>\n    +for (ExecutorDetails executor : allExecutors) {<br/>\n    +    Set<ExecutorDetails> executors = bucketExecutors.get(bucketIndex);<br/>\n    +    if (executors == null) </p>\n{\n    +executors = new HashSet<ExecutorDetails>();\n    +bucketExecutors.put(bucketIndex, executors);\n    +    }\n<p>    +    executors.add(executor);<br/>\n    +    bucketIndex = (++bucketIndex) % numWorkers;<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    minor. since bucketIndex is being assigned anyway, ++bucketIndex can be replaced with (bucketIndex + 1)</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612645976/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612481361","html_url":"https://github.com/apache/storm/issues/4275#issuecomment-2612481361","issue_url":"https://api.github.com/repos/apache/storm/issues/4275","id":2612481361,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0ODEzNjE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-05-08T16:48:50Z","updated_at":"2025-01-24T13:02:00Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>GitHub user abhishekagarwal87 opened a pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1406\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1406</a></p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-433\" title=\"Give users visibility to the depth of queues at each bolt\" class=\"issue-link\" data-issue-key=\"STORM-433\"><del>STORM-433</del></a> <span class=\"error\">&#91;WIP&#93;</span> Executor queue backlog metric</p>\n\n<p>    This is first set of changes to show the average queue population in UI. It is work in progress. Right now, only the population is shown only for the executors and not aggregated at component level. </p>\n\n<p>You can merge this pull request into a Git repository by running:</p>\n\n<p>    $ git pull <a href=\"https://github.com/abhishekagarwal87/storm\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/abhishekagarwal87/storm</a> backlog-metrics</p>\n\n<p>Alternatively you can review and apply these changes as the patch at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1406.patch\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1406.patch</a></p>\n\n<p>To close this pull request, make a commit to your master/trunk branch<br/>\nwith (at least) the following in the commit message:</p>\n\n<p>    This closes #1406</p>\n\n<hr />\n<p>commit 81f35aa0c93720da9a034378dac23b8efef2c25f<br/>\nAuthor: Abhishek Agarwal <abhishek.agarwal@inmobi.com><br/>\nDate:   2016-04-25T07:30:19Z</p>\n\n<p>    First cut implementation for backlog metrics</p>\n\n<p>commit 73f608beab475a47af5665d1952ed3f488026bff<br/>\nAuthor: Abhishek Agarwal <abhishek.agarwal@inmobi.com><br/>\nDate:   2016-05-07T07:58:29Z</p>\n\n<p>    Merge branch '1.x-branch' of <a href=\"https://github.com/apache/storm\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm</a> into backlog-metrics</p>\n\n<p>commit d00376ff75a0a535a7760ff1be8487f076e176a7<br/>\nAuthor: Abhishek Agarwal <abhishek.agarwal@inmobi.com><br/>\nDate:   2016-05-08T06:23:45Z</p>\n\n<p>    Changes in thrift java class</p>\n\n<p>commit ab138bc49ed5e8fb4e7ae450d891670388b3a507<br/>\nAuthor: Abhishek Agarwal <abhishek.agarwal@inmobi.com><br/>\nDate:   2016-05-08T16:28:32Z</p>\n\n<p>    Add backlog metrics to spout component</p>\n\n<hr />","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612481361/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/217732510","html_url":"https://github.com/apache/storm/pull/1406#issuecomment-217732510","issue_url":"https://api.github.com/repos/apache/storm/issues/1406","id":217732510,"node_id":"MDEyOklzc3VlQ29tbWVudDIxNzczMjUxMA==","user":{"login":"abhishekagarwal87","id":1477457,"node_id":"MDQ6VXNlcjE0Nzc0NTc=","avatar_url":"https://avatars.githubusercontent.com/u/1477457?v=4","gravatar_id":"","url":"https://api.github.com/users/abhishekagarwal87","html_url":"https://github.com/abhishekagarwal87","followers_url":"https://api.github.com/users/abhishekagarwal87/followers","following_url":"https://api.github.com/users/abhishekagarwal87/following{/other_user}","gists_url":"https://api.github.com/users/abhishekagarwal87/gists{/gist_id}","starred_url":"https://api.github.com/users/abhishekagarwal87/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/abhishekagarwal87/subscriptions","organizations_url":"https://api.github.com/users/abhishekagarwal87/orgs","repos_url":"https://api.github.com/users/abhishekagarwal87/repos","events_url":"https://api.github.com/users/abhishekagarwal87/events{/privacy}","received_events_url":"https://api.github.com/users/abhishekagarwal87/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-05-08T16:50:30Z","updated_at":"2016-05-08T16:50:30Z","author_association":"CONTRIBUTOR","body":"![screen shot 2016-05-08 at 9 48 27 pm](https://cloud.githubusercontent.com/assets/1477457/15099125/06b9583e-156b-11e6-918d-639822665079.png)\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/217732510/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612481367","html_url":"https://github.com/apache/storm/issues/4275#issuecomment-2612481367","issue_url":"https://api.github.com/repos/apache/storm/issues/4275","id":2612481367,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0ODEzNjc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-05-08T16:50:30Z","updated_at":"2025-01-24T13:02:00Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user abhishekagarwal87 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1406#issuecomment-217732510\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1406#issuecomment-217732510</a></p>\n\n<p>    !<span class=\"error\">&#91;screen shot 2016-05-08 at 9 48 27 pm&#93;</span>(<a href=\"https://cloud.githubusercontent.com/assets/1477457/15099125/06b9583e-156b-11e6-918d-639822665079.png\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://cloud.githubusercontent.com/assets/1477457/15099125/06b9583e-156b-11e6-918d-639822665079.png</a>)</p>\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612481367/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/217765582","html_url":"https://github.com/apache/storm/pull/1406#issuecomment-217765582","issue_url":"https://api.github.com/repos/apache/storm/issues/1406","id":217765582,"node_id":"MDEyOklzc3VlQ29tbWVudDIxNzc2NTU4Mg==","user":{"login":"HeartSaVioR","id":1317309,"node_id":"MDQ6VXNlcjEzMTczMDk=","avatar_url":"https://avatars.githubusercontent.com/u/1317309?v=4","gravatar_id":"","url":"https://api.github.com/users/HeartSaVioR","html_url":"https://github.com/HeartSaVioR","followers_url":"https://api.github.com/users/HeartSaVioR/followers","following_url":"https://api.github.com/users/HeartSaVioR/following{/other_user}","gists_url":"https://api.github.com/users/HeartSaVioR/gists{/gist_id}","starred_url":"https://api.github.com/users/HeartSaVioR/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HeartSaVioR/subscriptions","organizations_url":"https://api.github.com/users/HeartSaVioR/orgs","repos_url":"https://api.github.com/users/HeartSaVioR/repos","events_url":"https://api.github.com/users/HeartSaVioR/events{/privacy}","received_events_url":"https://api.github.com/users/HeartSaVioR/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-05-09T02:46:43Z","updated_at":"2016-05-09T02:47:30Z","author_association":"CONTRIBUTOR","body":"@abhishekagarwal87 \nThanks for the improvement. :)\n\nBtw, I've some opinions on this change.\n\nA. some concerns about adding payloads for task heartbeat\n\nAs you may know, why Storm needs Pacemaker daemon with large cluster is that Storm includes task metrics into heartbeat message and store to ZK in a short interval (task.heartbeat.frequency.secs, its default value is 3) which is a big pressure for ZK.\n\nSo we would like to have some discussions for expanding heartbeat message with current way, or change the way to send metrics to Nimbus (like JStorm). If we can make some more spaces for metrics, we can have ideations around metrics and add them to enrich. For example, spout tasks can have optional metrics, for example, partition information and lag for KafkaSpout.\n\nB. metrics for queue\n\nI guess sojourn time for the queue is one of most wanted feature of queue metrics, since many users said that they see very short latencies for execute/process latency for each task but also see very high complete latency.\n(@wangli1426 addresses sojourn time for disruptor queue but [as he stated to code comment](https://github.com/apache/storm/blob/1.x-branch/storm-core/src/jvm/org/apache/storm/utils/DisruptorQueue.java#L324), it's based on precondition which is sometimes not true for problematic task. If we can make it stable it would be really helpful.)\n\n[STORM-1742](https://issues.apache.org/jira/browse/STORM-1724) covers the accuracy of 'complete latency', but many parts of lifecycle of tuple are still hidden, for example, avg. of queue sojourn time, serde latency, transfer latency, etc. I think we don't want to address the things which can affect overall performance in order to measure, but they're meaningful information indeed so I would like to address if they don't hurt at all.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/217765582/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612481374","html_url":"https://github.com/apache/storm/issues/4275#issuecomment-2612481374","issue_url":"https://api.github.com/repos/apache/storm/issues/4275","id":2612481374,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0ODEzNzQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-05-09T02:46:45Z","updated_at":"2025-01-24T13:02:00Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user HeartSaVioR commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1406#issuecomment-217765582\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1406#issuecomment-217765582</a></p>\n\n<p>    @abhishekagarwal87 <br/>\n    Thanks for the improvement. <img class=\"emoticon\" src=\"https://issues.apache.org/jira/images/icons/emoticons/smile.png\" height=\"16\" width=\"16\" align=\"absmiddle\" alt=\"\" border=\"0\"/></p>\n\n<p>    Btw, I've some opinions on this change.</p>\n\n<p>    1. some concerns about adding payloads for task heartbeat</p>\n\n<p>    As you may know, why Storm needs Pacemaker daemon with large cluster is that Storm includes task metrics into heartbeat message and store to ZK in a short interval (task.heartbeat.frequency.secs, its default value is 3) which is a big pressure for ZK.</p>\n\n<p>    So we would like to have some discussions for expanding heartbeat message with current way, or change the way to send metrics to Nimbus (like JStorm). If we can make some more spaces for metrics, we can have ideations around metrics and add them to enrich. For example, spout tasks can have optional metrics, for example, partition information and lag for KafkaSpout.</p>\n\n<p>    2. metrics for queue</p>\n\n<p>    I guess sojourn time for the queue is one of most wanted feature of queue metrics, since many users said that they see very short latencies for execute/process latency for each task but also see very high complete latency.<br/>\n    (@wangli1426 addresses sojourn time for disruptor queue but <span class=\"error\">&#91;as he stated to code comment&#93;</span>(<a href=\"https://github.com/apache/storm/blob/1.x-branch/storm-core/src/jvm/org/apache/storm/utils/DisruptorQueue.java#L324\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/blob/1.x-branch/storm-core/src/jvm/org/apache/storm/utils/DisruptorQueue.java#L324</a>), it's based on precondition which is sometimes not true for problematic task. If we can make it stable it would be really helpful.)</p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1742\" title=\"More accurate &#39;complete latency&#39;\" class=\"issue-link\" data-issue-key=\"STORM-1742\"><del>STORM-1742</del></a> covers the accuracy of 'complete latency', but many parts of lifecycle of tuple are still hidden, for example, avg. of queue sojourn time, serde latency, transfer latency, etc. I think we don't want to address the things which can affect overall performance in order to measure, but they're meaningful information indeed so I would like to address if they don't hurt at all.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612481374/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/217775942","html_url":"https://github.com/apache/storm/pull/1406#issuecomment-217775942","issue_url":"https://api.github.com/repos/apache/storm/issues/1406","id":217775942,"node_id":"MDEyOklzc3VlQ29tbWVudDIxNzc3NTk0Mg==","user":{"login":"abhishekagarwal87","id":1477457,"node_id":"MDQ6VXNlcjE0Nzc0NTc=","avatar_url":"https://avatars.githubusercontent.com/u/1477457?v=4","gravatar_id":"","url":"https://api.github.com/users/abhishekagarwal87","html_url":"https://github.com/abhishekagarwal87","followers_url":"https://api.github.com/users/abhishekagarwal87/followers","following_url":"https://api.github.com/users/abhishekagarwal87/following{/other_user}","gists_url":"https://api.github.com/users/abhishekagarwal87/gists{/gist_id}","starred_url":"https://api.github.com/users/abhishekagarwal87/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/abhishekagarwal87/subscriptions","organizations_url":"https://api.github.com/users/abhishekagarwal87/orgs","repos_url":"https://api.github.com/users/abhishekagarwal87/repos","events_url":"https://api.github.com/users/abhishekagarwal87/events{/privacy}","received_events_url":"https://api.github.com/users/abhishekagarwal87/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-05-09T04:56:19Z","updated_at":"2016-05-09T04:56:19Z","author_association":"CONTRIBUTOR","body":"Regarding A - That's a good point and glad to know that this issue is being solved for. The current executor stats takes up good amount of space (0.5 MB in my topologies) I earlier ran into an issue where I had packed too many executors into single worker and zookeeper writing failed. In fact, I was quite surprised to know that such a heavy write is being done into zookeeper :) This PR can wait if we want to solve that problem first. \n\nRegarding B - Having queue depth can give user's very good visibility. Though I think it would have been more useful when backpressure was not available. Now if you look at the code, the (queue + overflow buffer) is actually unbounded. Previously, a slow bolt would stall the whole topology and queue depth would have helped in zeroing down on that bolt. \n\ncomplete latency -  I haven't gone through the discussion closely so I can't comment right now. \nsojournTime - Looks like a good metric. I missed it completely. Though it still remains to be shown on UI. \n\nSo to summarize, there are four major points - \n1. A more efficient way to periodically update executor stats (Metric Producer)\n2. Zeroing on which queue metrics are useful\n3. Packing queue metrics in the executor stats (simple enough)\n4. Move nimbus to read the metrics for new metric store or some other place\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/217775942/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612481377","html_url":"https://github.com/apache/storm/issues/4275#issuecomment-2612481377","issue_url":"https://api.github.com/repos/apache/storm/issues/4275","id":2612481377,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0ODEzNzc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-05-09T04:56:21Z","updated_at":"2025-01-24T13:02:00Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user abhishekagarwal87 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1406#issuecomment-217775942\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1406#issuecomment-217775942</a></p>\n\n<p>    Regarding A - That's a good point and glad to know that this issue is being solved for. The current executor stats takes up good amount of space (0.5 MB in my topologies) I earlier ran into an issue where I had packed too many executors into single worker and zookeeper writing failed. In fact, I was quite surprised to know that such a heavy write is being done into zookeeper <img class=\"emoticon\" src=\"https://issues.apache.org/jira/images/icons/emoticons/smile.png\" height=\"16\" width=\"16\" align=\"absmiddle\" alt=\"\" border=\"0\"/> This PR can wait if we want to solve that problem first. </p>\n\n<p>    Regarding B - Having queue depth can give user's very good visibility. Though I think it would have been more useful when backpressure was not available. Now if you look at the code, the (queue + overflow buffer) is actually unbounded. Previously, a slow bolt would stall the whole topology and queue depth would have helped in zeroing down on that bolt. </p>\n\n<p>    complete latency -  I haven't gone through the discussion closely so I can't comment right now. <br/>\n    sojournTime - Looks like a good metric. I missed it completely. Though it still remains to be shown on UI. </p>\n\n<p>    So to summarize, there are four major points - <br/>\n    1. A more efficient way to periodically update executor stats (Metric Producer)<br/>\n    2. Zeroing on which queue metrics are useful<br/>\n    3. Packing queue metrics in the executor stats (simple enough)<br/>\n    4. Move nimbus to read the metrics for new metric store or some other place</p>\n\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612481377/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/217776015","html_url":"https://github.com/apache/storm/pull/1131#issuecomment-217776015","issue_url":"https://api.github.com/repos/apache/storm/issues/1131","id":217776015,"node_id":"MDEyOklzc3VlQ29tbWVudDIxNzc3NjAxNQ==","user":{"login":"jianbzhou","id":16497854,"node_id":"MDQ6VXNlcjE2NDk3ODU0","avatar_url":"https://avatars.githubusercontent.com/u/16497854?v=4","gravatar_id":"","url":"https://api.github.com/users/jianbzhou","html_url":"https://github.com/jianbzhou","followers_url":"https://api.github.com/users/jianbzhou/followers","following_url":"https://api.github.com/users/jianbzhou/following{/other_user}","gists_url":"https://api.github.com/users/jianbzhou/gists{/gist_id}","starred_url":"https://api.github.com/users/jianbzhou/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jianbzhou/subscriptions","organizations_url":"https://api.github.com/users/jianbzhou/orgs","repos_url":"https://api.github.com/users/jianbzhou/repos","events_url":"https://api.github.com/users/jianbzhou/events{/privacy}","received_events_url":"https://api.github.com/users/jianbzhou/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-05-09T04:57:14Z","updated_at":"2016-05-09T04:57:14Z","author_association":"NONE","body":"Hi Hmcl,\n\nDuring our testing we found sometime the poll method was not called for long time, I suspect it is caused by below condition:\n\nprivate boolean poll() {\n    return !waitingToEmit() && **numUncommittedOffsets < kafkaSpoutConfig.getMaxUncommittedOffsets()**;\n}\n\nI found numUncommittedOffsets will be incremented in either of the below situation:\n1.  (!retryService.isScheduled(msgId) – this is the most common situation – one message was polled and it is not in the toRetryMsg – it is a normal emit instead of a retry;\n2.  retryService.isReady(msgId) – this means the message was emitted previously – now will be re-emitted as per the retry logic.\n\nAs per below logic – for one message 50, in the first time it was polled and emiited, numUncommittedOffsets will be incremented by 1, then this message failed and retried for 10 times, so totally numUncommittedOffsets will be increamented by 11.\n\nprivate void emitTupleIfNotEmitted(ConsumerRecord<K, V> record) {\n    ………………………………\n    else if (!retryService.isScheduled(msgId) || retryService.isReady(msgId)) {   // not scheduled <=> never failed (i.e. never emitted) or ready to be retried\n        final List<Object> tuple = tuplesBuilder.buildTuple(record);\n        kafkaSpoutStreams.emit(collector, tuple, msgId);\n        emitted.add(msgId);\n        **numUncommittedOffsets++;**\n    ………………………………\n}\n\nBut as per below logic – after successful commit, numUncommittedOffsets will subtract the actual number of message that got commited. If it commit one message 50, then will only substract 1 instead of 11.\n\npublic void commit(OffsetAndMetadata committedOffset) {\n    ………………………………\n        **numUncommittedOffsets-= numCommittedOffsets;**\n    ………………………………\n}\n\nUnder some circumstances – say a rebalance happened and we seek back to a very small/early offset, seems this would cause emitTupleIfNotEmitted have a quite big number – finally this will be greater than kafkaSpoutConfig.getMaxUncommittedOffsets, and got poll() method not be called.\n\nI am not sure if I corrrectly understand your code or miss anything – could you please kindly help confirm if above situtaion is possible or not?\n\nPlease feel free to let me know if you need any further info and thanks for your help.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/217776015/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/217781379","html_url":"https://github.com/apache/storm/pull/1131#issuecomment-217781379","issue_url":"https://api.github.com/repos/apache/storm/issues/1131","id":217781379,"node_id":"MDEyOklzc3VlQ29tbWVudDIxNzc4MTM3OQ==","user":{"login":"jianbzhou","id":16497854,"node_id":"MDQ6VXNlcjE2NDk3ODU0","avatar_url":"https://avatars.githubusercontent.com/u/16497854?v=4","gravatar_id":"","url":"https://api.github.com/users/jianbzhou","html_url":"https://github.com/jianbzhou","followers_url":"https://api.github.com/users/jianbzhou/followers","following_url":"https://api.github.com/users/jianbzhou/following{/other_user}","gists_url":"https://api.github.com/users/jianbzhou/gists{/gist_id}","starred_url":"https://api.github.com/users/jianbzhou/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jianbzhou/subscriptions","organizations_url":"https://api.github.com/users/jianbzhou/orgs","repos_url":"https://api.github.com/users/jianbzhou/repos","events_url":"https://api.github.com/users/jianbzhou/events{/privacy}","received_events_url":"https://api.github.com/users/jianbzhou/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-05-09T05:53:37Z","updated_at":"2016-05-09T08:36:59Z","author_association":"NONE","body":"Just think another scenario – for example we polled 10k message and emitted – say from 10001 to 20000, so the numUncommittedOffsets is 10000, if the 10500 msg failed, which caused all the following message 10501~20000 will not got commited until the 10500 message was reemitted and acked.\nIf a rebalance happened during this time, the offset will seek back to the last commited offiset +1, possibly will seek back to offset 10001, then all the message from 10001 to 20000 will be polled and emitted again – which will cause numUncommittedOffsets be incremented by another 10000 again.\nAfter successfully commit to kafka, numUncommittedOffsets will substract 10000 and leave 10000 value there.\nSeems this will also gradually cause numUncommittedOffsets be a bigger value than we expect, Is this a possible scenario?\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/217781379/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/217794597","html_url":"https://github.com/apache/storm/pull/1406#issuecomment-217794597","issue_url":"https://api.github.com/repos/apache/storm/issues/1406","id":217794597,"node_id":"MDEyOklzc3VlQ29tbWVudDIxNzc5NDU5Nw==","user":{"login":"HeartSaVioR","id":1317309,"node_id":"MDQ6VXNlcjEzMTczMDk=","avatar_url":"https://avatars.githubusercontent.com/u/1317309?v=4","gravatar_id":"","url":"https://api.github.com/users/HeartSaVioR","html_url":"https://github.com/HeartSaVioR","followers_url":"https://api.github.com/users/HeartSaVioR/followers","following_url":"https://api.github.com/users/HeartSaVioR/following{/other_user}","gists_url":"https://api.github.com/users/HeartSaVioR/gists{/gist_id}","starred_url":"https://api.github.com/users/HeartSaVioR/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HeartSaVioR/subscriptions","organizations_url":"https://api.github.com/users/HeartSaVioR/orgs","repos_url":"https://api.github.com/users/HeartSaVioR/repos","events_url":"https://api.github.com/users/HeartSaVioR/events{/privacy}","received_events_url":"https://api.github.com/users/HeartSaVioR/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-05-09T07:31:28Z","updated_at":"2016-05-09T07:31:28Z","author_association":"CONTRIBUTOR","body":"For addressing big picture of metrics improvement, yes we want to address four major points.\n\nBut given that we already released major version of Storm 1.0.0, we would want to keep backward compatibility for 1.x. That's why I'm addressing small improvements first instead of working long-term huge improvements. It's also planned to phase 2 on JStorm merger in 2.0.0.\n\nBut if we have many ideas which relies on that improvements, I think we can discuss how to address and work on that right now. (evaluation of many ways including porting metrics feature of JStorm)\n\nBtw, since we're having alternative (Pacemaker) now, we may feel OK to add small amount of payload to heartbeat message. \n\nIf it doesn't make sense, even we can separate heartbeat message and metrics message, and set frequency of latter thing to 10s or even longer, I guess we can reduce ZK write load greatly. (since it aggregates built-in topology metrics and writes to ZK every 3 seconds by default.)\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/217794597/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612481381","html_url":"https://github.com/apache/storm/issues/4275#issuecomment-2612481381","issue_url":"https://api.github.com/repos/apache/storm/issues/4275","id":2612481381,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0ODEzODE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-05-09T07:31:30Z","updated_at":"2025-01-24T13:02:00Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user HeartSaVioR commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1406#issuecomment-217794597\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1406#issuecomment-217794597</a></p>\n\n<p>    For addressing big picture of metrics improvement, yes we want to address four major points.</p>\n\n<p>    But given that we already released major version of Storm 1.0.0, we would want to keep backward compatibility for 1.x. That's why I'm addressing small improvements first instead of working long-term huge improvements. It's also planned to phase 2 on JStorm merger in 2.0.0.</p>\n\n<p>    But if we have many ideas which relies on that improvements, I think we can discuss how to address and work on that right now. (evaluation of many ways including porting metrics feature of JStorm)</p>\n\n<p>    Btw, since we're having alternative (Pacemaker) now, we may feel OK to add small amount of payload to heartbeat message. </p>\n\n<p>    If it doesn't make sense, even we can separate heartbeat message and metrics message, and set frequency of latter thing to 10s or even longer, I guess we can reduce ZK write load greatly. (since it aggregates built-in topology metrics and writes to ZK every 3 seconds by default.)</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612481381/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/217830423","html_url":"https://github.com/apache/storm/pull/1400#issuecomment-217830423","issue_url":"https://api.github.com/repos/apache/storm/issues/1400","id":217830423,"node_id":"MDEyOklzc3VlQ29tbWVudDIxNzgzMDQyMw==","user":{"login":"fbyrne","id":18734916,"node_id":"MDQ6VXNlcjE4NzM0OTE2","avatar_url":"https://avatars.githubusercontent.com/u/18734916?v=4","gravatar_id":"","url":"https://api.github.com/users/fbyrne","html_url":"https://github.com/fbyrne","followers_url":"https://api.github.com/users/fbyrne/followers","following_url":"https://api.github.com/users/fbyrne/following{/other_user}","gists_url":"https://api.github.com/users/fbyrne/gists{/gist_id}","starred_url":"https://api.github.com/users/fbyrne/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fbyrne/subscriptions","organizations_url":"https://api.github.com/users/fbyrne/orgs","repos_url":"https://api.github.com/users/fbyrne/repos","events_url":"https://api.github.com/users/fbyrne/events{/privacy}","received_events_url":"https://api.github.com/users/fbyrne/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-05-09T10:32:09Z","updated_at":"2016-05-09T10:32:09Z","author_association":"CONTRIBUTOR","body":"Does a comment retrigger a build? we'll see.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/217830423/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612899871","html_url":"https://github.com/apache/storm/issues/5565#issuecomment-2612899871","issue_url":"https://api.github.com/repos/apache/storm/issues/5565","id":2612899871,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4OTk4NzE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-05-09T10:32:13Z","updated_at":"2025-01-24T16:14:56Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user fbyrne commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1400#issuecomment-217830423\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1400#issuecomment-217830423</a></p>\n\n<p>    Does a comment retrigger a build? we'll see.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612899871/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612645978","html_url":"https://github.com/apache/storm/issues/5076#issuecomment-2612645978","issue_url":"https://api.github.com/repos/apache/storm/issues/5076","id":2612645978,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NDU5Nzg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-05-09T14:51:02Z","updated_at":"2025-01-24T14:20:50Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user vesense commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1359#discussion_r62511320\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1359#discussion_r62511320</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/scheduler/IsolationScheduler.java &#8212;<br/>\n    @@ -0,0 +1,434 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.scheduler;<br/>\n    +<br/>\n    +import java.util.ArrayList;<br/>\n    +import java.util.Collection;<br/>\n    +import java.util.Collections;<br/>\n    +import java.util.Comparator;<br/>\n    +import java.util.HashMap;<br/>\n    +import java.util.HashSet;<br/>\n    +import java.util.LinkedList;<br/>\n    +import java.util.List;<br/>\n    +import java.util.Map;<br/>\n    +import java.util.Set;<br/>\n    +import java.util.TreeMap;<br/>\n    +<br/>\n    +import org.apache.storm.utils.Utils;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +import org.apache.storm.Config;<br/>\n    +import org.apache.storm.scheduler.Cluster;<br/>\n    +import org.apache.storm.scheduler.ExecutorDetails;<br/>\n    +import org.apache.storm.scheduler.IScheduler;<br/>\n    +import org.apache.storm.scheduler.SchedulerAssignment;<br/>\n    +import org.apache.storm.scheduler.Topologies;<br/>\n    +import org.apache.storm.scheduler.TopologyDetails;<br/>\n    +import org.apache.storm.scheduler.WorkerSlot;<br/>\n    +<br/>\n    +public class IsolationScheduler implements IScheduler {<br/>\n    +    private final static Logger LOG = LoggerFactory.getLogger(IsolationScheduler.class);<br/>\n    +<br/>\n    +    private Map conf;<br/>\n    +<br/>\n    +    @Override<br/>\n    +    public void prepare(Map conf) </p>\n{\n    +this.conf = conf;\n    +    }\n<p>    +<br/>\n    +    // for each isolated topology:<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Done.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612645978/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612645984","html_url":"https://github.com/apache/storm/issues/5076#issuecomment-2612645984","issue_url":"https://api.github.com/repos/apache/storm/issues/5076","id":2612645984,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NDU5ODQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-05-09T14:51:11Z","updated_at":"2025-01-24T14:20:50Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user vesense commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1359#discussion_r62511356\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1359#discussion_r62511356</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/scheduler/IsolationScheduler.java &#8212;<br/>\n    @@ -0,0 +1,434 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.scheduler;<br/>\n    +<br/>\n    +import java.util.ArrayList;<br/>\n    +import java.util.Collection;<br/>\n    +import java.util.Collections;<br/>\n    +import java.util.Comparator;<br/>\n    +import java.util.HashMap;<br/>\n    +import java.util.HashSet;<br/>\n    +import java.util.LinkedList;<br/>\n    +import java.util.List;<br/>\n    +import java.util.Map;<br/>\n    +import java.util.Set;<br/>\n    +import java.util.TreeMap;<br/>\n    +<br/>\n    +import org.apache.storm.utils.Utils;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +import org.apache.storm.Config;<br/>\n    +import org.apache.storm.scheduler.Cluster;<br/>\n    +import org.apache.storm.scheduler.ExecutorDetails;<br/>\n    +import org.apache.storm.scheduler.IScheduler;<br/>\n    +import org.apache.storm.scheduler.SchedulerAssignment;<br/>\n    +import org.apache.storm.scheduler.Topologies;<br/>\n    +import org.apache.storm.scheduler.TopologyDetails;<br/>\n    +import org.apache.storm.scheduler.WorkerSlot;<br/>\n    +<br/>\n    +public class IsolationScheduler implements IScheduler {<br/>\n    +    private final static Logger LOG = LoggerFactory.getLogger(IsolationScheduler.class);<br/>\n    +<br/>\n    +    private Map conf;<br/>\n    +<br/>\n    +    @Override<br/>\n    +    public void prepare(Map conf) </p>\n{\n    +this.conf = conf;\n    +    }\n<p>    +<br/>\n    +    // for each isolated topology:<br/>\n    +    //   compute even distribution of executors -> workers on the number of workers specified for the topology<br/>\n    +    //   compute distribution of workers to machines<br/>\n    +    // determine host -> list of <span class=\"error\">&#91;slot, topology id, executors&#93;</span><br/>\n    +    // iterate through hosts and: a machine is good if:<br/>\n    +    //   1. only running workers from one isolated topology<br/>\n    +    //   2. all workers running on it match one of the distributions of executors for that topology<br/>\n    +    //   3. matches one of the # of workers<br/>\n    +    // blacklist the good hosts and remove those workers from the list of need to be assigned workers<br/>\n    +    // otherwise unassign all other workers for isolated topologies if assigned<br/>\n    +<br/>\n    +    public Set<ExecutorDetails> removeElemFromSet(Set<Set<ExecutorDetails>> executorsSets) {<br/>\n    +if (executorsSets.iterator().hasNext()) </p>\n{\n    +    Set<ExecutorDetails> elem = executorsSets.iterator().next();\n    +    executorsSets.remove(elem);\n    +    return elem;\n    +}\n<p> else </p>\n{\n    +    return null;\n    +}<br/>\n    +    }<br/>\n    +<br/>\n    +    // get host -> all assignable worker slots for non-blacklisted machines (assigned or not assigned)<br/>\n    +    // will then have a list of machines that need to be assigned (machine -> <span class=\"error\">&#91;topology, list of list of executors&#93;</span>)<br/>\n    +    // match each spec to a machine (who has the right number of workers), free everything else on that machine and assign those slots (do one topology at a time)<br/>\n    +    // blacklist all machines who had production slots defined<br/>\n    +    // log isolated topologies who weren't able to get enough slots / machines<br/>\n    +    // run default scheduler on isolated topologies that didn't have enough slots + non-isolated topologies on remaining machines<br/>\n    +    // set blacklist to what it was initially<br/>\n    +    @Override<br/>\n    +    public void schedule(Topologies topologies, Cluster cluster) {<br/>\n    +Set<String> origBlacklist = cluster.getBlacklistedHosts();<br/>\n    +List<TopologyDetails> isoTopologies = isolatedTopologies(topologies.getTopologies());<br/>\n    +Set<String> isoIds = isolatedTopoplogyIds(isoTopologies);<br/>\n    +Map<String, Set<Set<ExecutorDetails>>> topologyWorkerSpecs = topologyWorkerSpecs(isoTopologies);<br/>\n    +Map<String, Map<Integer, Integer>> topologyMachineDistributions = topologyMachineDistributions(isoTopologies);<br/>\n    +Map<String, List<AssignmentInfo>> hostAssignments = hostAssignments(cluster);<br/>\n    +<br/>\n    +Set<Map.Entry<String, List<AssignmentInfo>>> hostAssignEntries = hostAssignments.entrySet();<br/>\n    +for (Map.Entry<String, List<AssignmentInfo>> entry : hostAssignEntries) {<br/>\n    +    List<AssignmentInfo> assInfos = entry.getValue();<br/>\n    +    String topologyId = assInfos.get(0).getTopologyId();<br/>\n    +    Map<Integer, Integer> distribution = topologyMachineDistributions.get(topologyId);<br/>\n    +    Set<Set<ExecutorDetails>> workerSpecs = topologyWorkerSpecs.get(topologyId);<br/>\n    +    int numWorkers = assInfos.size();<br/>\n    +<br/>\n    +    if (isoIds.contains(topologyId)<br/>\n    +    && checkAssignmentTopology(assInfos, topologyId)<br/>\n    +    && (distribution != null && distribution.containsKey(numWorkers))<br/>\n    +    && checkAssignmentWorkerSpecs(assInfos, workerSpecs)) {<br/>\n    +decrementDistribution(distribution, numWorkers);<br/>\n    +for (AssignmentInfo ass : assInfos) {\n    +    workerSpecs.remove(ass.getExecutors());\n    +}<br/>\n    +cluster.blacklistHost(entry.getKey());<br/>\n    +    } else {<br/>\n    +for (AssignmentInfo ass : assInfos) {<br/>\n    +    if (isoIds.contains(ass.getTopologyId())) {\n    +cluster.freeSlot(ass.getWorkerSlot());\n    +    }<br/>\n    +}<br/>\n    +    }<br/>\n    +}<br/>\n    +<br/>\n    +Map<String, Set<WorkerSlot>> hostUsedSlots = hostUsedSlots(cluster);<br/>\n    +LinkedList<HostAssignableSlots> hss = hostAssignableSlots(cluster);<br/>\n    +List<String> failedTopologyIds = new ArrayList<String>();<br/>\n    +for (Map.Entry<String, Set<Set<ExecutorDetails>>> entry : topologyWorkerSpecs.entrySet()) {<br/>\n    +    String topologyId = entry.getKey();<br/>\n    +    Set<Set<ExecutorDetails>> executorSet = entry.getValue();<br/>\n    +    if (executorSet != null && executorSet.size() > 0) {\n    +failedTopologyIds.add(topologyId);\n    +    }<br/>\n    +    List<Integer> workerNum = distributionSortedAmts(topologyMachineDistributions.get(topologyId));<br/>\n    +    for (Integer num : workerNum) {<br/>\n    +HostAssignableSlots hostSlots = hss.peek();<br/>\n    +List<WorkerSlot> slot = hostSlots != null ? hostSlots.getWorkerSlots() : null;<br/>\n    +<br/>\n    +if (slot != null && slot.size() >= num.intValue()) {<br/>\n    +    hss.poll();<br/>\n    +    cluster.freeSlots(hostUsedSlots.get(hostSlots.getHostName()));<br/>\n    +    for (WorkerSlot tmpSlot : slot.subList(0, num)) {\n    +Set<ExecutorDetails> executor = removeElemFromSet(executorSet);\n    +cluster.assign(tmpSlot, topologyId, executor);\n    +    }<br/>\n    +    cluster.blacklistHost(hostSlots.getHostName());<br/>\n    +}<br/>\n    +    }<br/>\n    +}<br/>\n    +<br/>\n    +if (failedTopologyIds.size() > 0) {<br/>\n    +    LOG.warn(\"Unable to isolate topologies \" + failedTopologyIds<br/>\n    +    + \". No machine had enough worker slots to run the remaining workers for these topologies. \"<br/>\n    +    + \"Clearing all other resources and will wait for enough resources for \"<br/>\n    +    + \"isolated topologies before allocating any other resources.\");<br/>\n    +    // clear workers off all hosts that are not blacklisted<br/>\n    +    Map<String, Set<WorkerSlot>> usedSlots = hostUsedSlots(cluster);<br/>\n    +    Set<Map.Entry<String, Set<WorkerSlot>>> entries = usedSlots.entrySet();<br/>\n    +    for (Map.Entry<String, Set<WorkerSlot>> entry : entries) {<br/>\n    +if (!cluster.isBlacklistedHost(entry.getKey())) {\n    +    cluster.freeSlots(entry.getValue());\n    +}<br/>\n    +    }<br/>\n    +} else {\n    +    // run default scheduler on non-isolated topologies\n    +    Set<String> allocatedTopologies = allocatedTopologies(topologyWorkerSpecs);\n    +    Topologies leftOverTopologies = leftoverTopologies(topologies, allocatedTopologies);\n    +    DefaultScheduler.defaultSchedule(leftOverTopologies, cluster);\n    +}<br/>\n    +cluster.setBlacklistedHosts(origBlacklist);<br/>\n    +    }<br/>\n    +<br/>\n    +    private List<TopologyDetails> isolatedTopologies(Collection<TopologyDetails> topologies) {<br/>\n    +Object isoMachines = conf.get(Config.ISOLATION_SCHEDULER_MACHINES);<br/>\n    +if (isoMachines == null) {    +    return null;    +}\n<p>    +<br/>\n    +Set<String> topologyNames = ((Map<String, Number>) isoMachines).keySet();<br/>\n    +List<TopologyDetails> isoTopologies = new ArrayList<TopologyDetails>();<br/>\n    +for (TopologyDetails topo : topologies) {<br/>\n    +    if (topologyNames.contains(topo.getName())) </p>\n{\n    +isoTopologies.add(topo);\n    +    }\n<p>    +}<br/>\n    +return isoTopologies;<br/>\n    +    }<br/>\n    +<br/>\n    +    private Set<String> isolatedTopoplogyIds(List<TopologyDetails> topologies) {<br/>\n    +Set<String> ids = new HashSet<String>();<br/>\n    +if (topologies != null && topologies.size() > 0) {<br/>\n    +    for (TopologyDetails topology : topologies) </p>\n{\n    +ids.add(topology.getId());\n    +    }\n<p>    +}<br/>\n    +return ids;<br/>\n    +    }<br/>\n    +<br/>\n    +    // map from topology id -> set of sets of executors<br/>\n    +    private Map<String, Set<Set<ExecutorDetails>>> topologyWorkerSpecs(List<TopologyDetails> topologies) {<br/>\n    +Map<String, Set<Set<ExecutorDetails>>> workerSpecs = new HashMap<String, Set<Set<ExecutorDetails>>>();<br/>\n    +for (TopologyDetails topology : topologies) </p>\n{\n    +    workerSpecs.put(topology.getId(), computeWorkerSpecs(topology));\n    +}\n<p>    +return workerSpecs;<br/>\n    +    }<br/>\n    +<br/>\n    +    private Map<String, List<AssignmentInfo>> hostAssignments(Cluster cluster) {<br/>\n    +Collection<SchedulerAssignment> assignmentValues =  cluster.getAssignments().values();<br/>\n    +Map<String, List<AssignmentInfo>> hostAssignments = new HashMap<String, List<AssignmentInfo>>();<br/>\n    +<br/>\n    +for (SchedulerAssignment sa : assignmentValues) {<br/>\n    +    Map<WorkerSlot, List<ExecutorDetails>> slotExecutors = Utils.reverseMap(sa.getExecutorToSlot());<br/>\n    +    Set<Map.Entry<WorkerSlot, List<ExecutorDetails>>> entries = slotExecutors.entrySet();<br/>\n    +    for (Map.Entry<WorkerSlot, List<ExecutorDetails>> entry : entries) {<br/>\n    +WorkerSlot slot = entry.getKey();<br/>\n    +List<ExecutorDetails> executors = entry.getValue();<br/>\n    +<br/>\n    +String host = cluster.getHost(slot.getNodeId());<br/>\n    +AssignmentInfo ass = new AssignmentInfo(slot, sa.getTopologyId(), new HashSet<ExecutorDetails>(executors));<br/>\n    +List<AssignmentInfo> executorList = hostAssignments.get(host);<br/>\n    +if (executorList == null) </p>\n{\n    +    executorList = new ArrayList<AssignmentInfo>();\n    +    hostAssignments.put(host, executorList);\n    +}\n<p>    +executorList.add(ass);<br/>\n    +    }<br/>\n    +}<br/>\n    +return hostAssignments;<br/>\n    +    }<br/>\n    +<br/>\n    +    private Set<Set<ExecutorDetails>> computeWorkerSpecs(TopologyDetails topology) {<br/>\n    +Map<String, List<ExecutorDetails>> compExecutors = Utils.reverseMap(topology.getExecutorToComponent());<br/>\n    +<br/>\n    +List<ExecutorDetails> allExecutors = new ArrayList<ExecutorDetails>();<br/>\n    +Collection<List<ExecutorDetails>> values = compExecutors.values();<br/>\n    +for (List<ExecutorDetails> eList : values) </p>\n{\n    +    allExecutors.addAll(eList);\n    +}\n<p>    +<br/>\n    +int numWorkers = topology.getNumWorkers();<br/>\n    +int bucketIndex = 0;<br/>\n    +Map<Integer, Set<ExecutorDetails>> bucketExecutors = new HashMap<Integer, Set<ExecutorDetails>>(numWorkers);<br/>\n    +for (ExecutorDetails executor : allExecutors) {<br/>\n    +    Set<ExecutorDetails> executors = bucketExecutors.get(bucketIndex);<br/>\n    +    if (executors == null) </p>\n{\n    +executors = new HashSet<ExecutorDetails>();\n    +bucketExecutors.put(bucketIndex, executors);\n    +    }\n<p>    +    executors.add(executor);<br/>\n    +    bucketIndex = (++bucketIndex) % numWorkers;<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Done.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612645984/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612645988","html_url":"https://github.com/apache/storm/issues/5076#issuecomment-2612645988","issue_url":"https://api.github.com/repos/apache/storm/issues/5076","id":2612645988,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NDU5ODg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-05-09T14:51:26Z","updated_at":"2025-01-24T14:20:50Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user vesense commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1359#discussion_r62511422\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1359#discussion_r62511422</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/scheduler/IsolationScheduler.java &#8212;<br/>\n    @@ -0,0 +1,434 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.scheduler;<br/>\n    +<br/>\n    +import java.util.ArrayList;<br/>\n    +import java.util.Collection;<br/>\n    +import java.util.Collections;<br/>\n    +import java.util.Comparator;<br/>\n    +import java.util.HashMap;<br/>\n    +import java.util.HashSet;<br/>\n    +import java.util.LinkedList;<br/>\n    +import java.util.List;<br/>\n    +import java.util.Map;<br/>\n    +import java.util.Set;<br/>\n    +import java.util.TreeMap;<br/>\n    +<br/>\n    +import org.apache.storm.utils.Utils;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +import org.apache.storm.Config;<br/>\n    +import org.apache.storm.scheduler.Cluster;<br/>\n    +import org.apache.storm.scheduler.ExecutorDetails;<br/>\n    +import org.apache.storm.scheduler.IScheduler;<br/>\n    +import org.apache.storm.scheduler.SchedulerAssignment;<br/>\n    +import org.apache.storm.scheduler.Topologies;<br/>\n    +import org.apache.storm.scheduler.TopologyDetails;<br/>\n    +import org.apache.storm.scheduler.WorkerSlot;<br/>\n    +<br/>\n    +public class IsolationScheduler implements IScheduler {<br/>\n    +    private final static Logger LOG = LoggerFactory.getLogger(IsolationScheduler.class);<br/>\n    +<br/>\n    +    private Map conf;<br/>\n    +<br/>\n    +    @Override<br/>\n    +    public void prepare(Map conf) </p>\n{\n    +this.conf = conf;\n    +    }\n<p>    +<br/>\n    +    // for each isolated topology:<br/>\n    +    //   compute even distribution of executors -> workers on the number of workers specified for the topology<br/>\n    +    //   compute distribution of workers to machines<br/>\n    +    // determine host -> list of <span class=\"error\">&#91;slot, topology id, executors&#93;</span><br/>\n    +    // iterate through hosts and: a machine is good if:<br/>\n    +    //   1. only running workers from one isolated topology<br/>\n    +    //   2. all workers running on it match one of the distributions of executors for that topology<br/>\n    +    //   3. matches one of the # of workers<br/>\n    +    // blacklist the good hosts and remove those workers from the list of need to be assigned workers<br/>\n    +    // otherwise unassign all other workers for isolated topologies if assigned<br/>\n    +<br/>\n    +    public Set<ExecutorDetails> removeElemFromSet(Set<Set<ExecutorDetails>> executorsSets) {<br/>\n    +if (executorsSets.iterator().hasNext()) </p>\n{\n    +    Set<ExecutorDetails> elem = executorsSets.iterator().next();\n    +    executorsSets.remove(elem);\n    +    return elem;\n    +}\n<p> else </p>\n{\n    +    return null;\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    // get host -> all assignable worker slots for non-blacklisted machines (assigned or not assigned)<br/>\n    +    // will then have a list of machines that need to be assigned (machine -> <span class=\"error\">&#91;topology, list of list of executors&#93;</span>)<br/>\n    +    // match each spec to a machine (who has the right number of workers), free everything else on that machine and assign those slots (do one topology at a time)<br/>\n    +    // blacklist all machines who had production slots defined<br/>\n    +    // log isolated topologies who weren't able to get enough slots / machines<br/>\n    +    // run default scheduler on isolated topologies that didn't have enough slots + non-isolated topologies on remaining machines<br/>\n    +    // set blacklist to what it was initially<br/>\n    +    @Override<br/>\n    +    public void schedule(Topologies topologies, Cluster cluster) {<br/>\n    +Set<String> origBlacklist = cluster.getBlacklistedHosts();<br/>\n    +List<TopologyDetails> isoTopologies = isolatedTopologies(topologies.getTopologies());<br/>\n    +Set<String> isoIds = isolatedTopoplogyIds(isoTopologies);<br/>\n    +Map<String, Set<Set<ExecutorDetails>>> topologyWorkerSpecs = topologyWorkerSpecs(isoTopologies);<br/>\n    +Map<String, Map<Integer, Integer>> topologyMachineDistributions = topologyMachineDistributions(isoTopologies);<br/>\n    +Map<String, List<AssignmentInfo>> hostAssignments = hostAssignments(cluster);<br/>\n    +<br/>\n    +Set<Map.Entry<String, List<AssignmentInfo>>> hostAssignEntries = hostAssignments.entrySet();<br/>\n    +for (Map.Entry<String, List<AssignmentInfo>> entry : hostAssignEntries) {<br/>\n    +    List<AssignmentInfo> assInfos = entry.getValue();<br/>\n    +    String topologyId = assInfos.get(0).getTopologyId();<br/>\n    +    Map<Integer, Integer> distribution = topologyMachineDistributions.get(topologyId);<br/>\n    +    Set<Set<ExecutorDetails>> workerSpecs = topologyWorkerSpecs.get(topologyId);<br/>\n    +    int numWorkers = assInfos.size();<br/>\n    +<br/>\n    +    if (isoIds.contains(topologyId)<br/>\n    +    && checkAssignmentTopology(assInfos, topologyId)<br/>\n    +    && (distribution != null && distribution.containsKey(numWorkers))<br/>\n    +    && checkAssignmentWorkerSpecs(assInfos, workerSpecs)) {<br/>\n    +decrementDistribution(distribution, numWorkers);<br/>\n    +for (AssignmentInfo ass : assInfos) </p>\n{\n    +    workerSpecs.remove(ass.getExecutors());\n    +}\n<p>    +cluster.blacklistHost(entry.getKey());<br/>\n    +    } else {<br/>\n    +for (AssignmentInfo ass : assInfos) {<br/>\n    +    if (isoIds.contains(ass.getTopologyId())) </p>\n{\n    +cluster.freeSlot(ass.getWorkerSlot());\n    +    }\n<p>    +}<br/>\n    +    }<br/>\n    +}<br/>\n    +<br/>\n    +Map<String, Set<WorkerSlot>> hostUsedSlots = hostUsedSlots(cluster);<br/>\n    +LinkedList<HostAssignableSlots> hss = hostAssignableSlots(cluster);<br/>\n    +List<String> failedTopologyIds = new ArrayList<String>();<br/>\n    +for (Map.Entry<String, Set<Set<ExecutorDetails>>> entry : topologyWorkerSpecs.entrySet()) {<br/>\n    +    String topologyId = entry.getKey();<br/>\n    +    Set<Set<ExecutorDetails>> executorSet = entry.getValue();<br/>\n    +    if (executorSet != null && executorSet.size() > 0) </p>\n{\n    +failedTopologyIds.add(topologyId);\n    +    }\n<p>    +    List<Integer> workerNum = distributionSortedAmts(topologyMachineDistributions.get(topologyId));<br/>\n    +    for (Integer num : workerNum) {<br/>\n    +HostAssignableSlots hostSlots = hss.peek();<br/>\n    +List<WorkerSlot> slot = hostSlots != null ? hostSlots.getWorkerSlots() : null;<br/>\n    +<br/>\n    +if (slot != null && slot.size() >= num.intValue()) {<br/>\n    +    hss.poll();<br/>\n    +    cluster.freeSlots(hostUsedSlots.get(hostSlots.getHostName()));<br/>\n    +    for (WorkerSlot tmpSlot : slot.subList(0, num)) </p>\n{\n    +Set<ExecutorDetails> executor = removeElemFromSet(executorSet);\n    +cluster.assign(tmpSlot, topologyId, executor);\n    +    }\n<p>    +    cluster.blacklistHost(hostSlots.getHostName());<br/>\n    +}<br/>\n    +    }<br/>\n    +}<br/>\n    +<br/>\n    +if (failedTopologyIds.size() > 0) {<br/>\n    +    LOG.warn(\"Unable to isolate topologies \" + failedTopologyIds<br/>\n    +    + \". No machine had enough worker slots to run the remaining workers for these topologies. \"<br/>\n    +    + \"Clearing all other resources and will wait for enough resources for \"<br/>\n    +    + \"isolated topologies before allocating any other resources.\");<br/>\n    +    // clear workers off all hosts that are not blacklisted<br/>\n    +    Map<String, Set<WorkerSlot>> usedSlots = hostUsedSlots(cluster);<br/>\n    +    Set<Map.Entry<String, Set<WorkerSlot>>> entries = usedSlots.entrySet();<br/>\n    +    for (Map.Entry<String, Set<WorkerSlot>> entry : entries) {<br/>\n    +if (!cluster.isBlacklistedHost(entry.getKey())) </p>\n{\n    +    cluster.freeSlots(entry.getValue());\n    +}\n<p>    +    }<br/>\n    +} else </p>\n{\n    +    // run default scheduler on non-isolated topologies\n    +    Set<String> allocatedTopologies = allocatedTopologies(topologyWorkerSpecs);\n    +    Topologies leftOverTopologies = leftoverTopologies(topologies, allocatedTopologies);\n    +    DefaultScheduler.defaultSchedule(leftOverTopologies, cluster);\n    +}\n<p>    +cluster.setBlacklistedHosts(origBlacklist);<br/>\n    +    }<br/>\n    +<br/>\n    +    private List<TopologyDetails> isolatedTopologies(Collection<TopologyDetails> topologies) {<br/>\n    +Object isoMachines = conf.get(Config.ISOLATION_SCHEDULER_MACHINES);<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Done.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612645988/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/217887114","html_url":"https://github.com/apache/storm/pull/1359#issuecomment-217887114","issue_url":"https://api.github.com/repos/apache/storm/issues/1359","id":217887114,"node_id":"MDEyOklzc3VlQ29tbWVudDIxNzg4NzExNA==","user":{"login":"vesense","id":6711230,"node_id":"MDQ6VXNlcjY3MTEyMzA=","avatar_url":"https://avatars.githubusercontent.com/u/6711230?v=4","gravatar_id":"","url":"https://api.github.com/users/vesense","html_url":"https://github.com/vesense","followers_url":"https://api.github.com/users/vesense/followers","following_url":"https://api.github.com/users/vesense/following{/other_user}","gists_url":"https://api.github.com/users/vesense/gists{/gist_id}","starred_url":"https://api.github.com/users/vesense/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vesense/subscriptions","organizations_url":"https://api.github.com/users/vesense/orgs","repos_url":"https://api.github.com/users/vesense/repos","events_url":"https://api.github.com/users/vesense/events{/privacy}","received_events_url":"https://api.github.com/users/vesense/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-05-09T14:51:50Z","updated_at":"2016-05-09T14:51:50Z","author_association":"MEMBER","body":"Thanks @abhishekagarwal87 Addressed your comments.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/217887114/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612645993","html_url":"https://github.com/apache/storm/issues/5076#issuecomment-2612645993","issue_url":"https://api.github.com/repos/apache/storm/issues/5076","id":2612645993,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NDU5OTM=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-05-09T14:51:52Z","updated_at":"2025-01-24T14:20:50Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user vesense commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1359#issuecomment-217887114\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1359#issuecomment-217887114</a></p>\n\n<p>    Thanks @abhishekagarwal87 Addressed your comments.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612645993/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/217894464","html_url":"https://github.com/apache/storm/pull/1131#issuecomment-217894464","issue_url":"https://api.github.com/repos/apache/storm/issues/1131","id":217894464,"node_id":"MDEyOklzc3VlQ29tbWVudDIxNzg5NDQ2NA==","user":{"login":"hmcl","id":10284328,"node_id":"MDQ6VXNlcjEwMjg0MzI4","avatar_url":"https://avatars.githubusercontent.com/u/10284328?v=4","gravatar_id":"","url":"https://api.github.com/users/hmcl","html_url":"https://github.com/hmcl","followers_url":"https://api.github.com/users/hmcl/followers","following_url":"https://api.github.com/users/hmcl/following{/other_user}","gists_url":"https://api.github.com/users/hmcl/gists{/gist_id}","starred_url":"https://api.github.com/users/hmcl/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hmcl/subscriptions","organizations_url":"https://api.github.com/users/hmcl/orgs","repos_url":"https://api.github.com/users/hmcl/repos","events_url":"https://api.github.com/users/hmcl/events{/privacy}","received_events_url":"https://api.github.com/users/hmcl/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-05-09T15:16:22Z","updated_at":"2016-05-09T15:16:22Z","author_association":"CONTRIBUTOR","body":"@jianbzhou thanks for your feedback. Let me take a look at this and I will get back to you shortly.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/217894464/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612654604","html_url":"https://github.com/apache/storm/issues/5114#issuecomment-2612654604","issue_url":"https://api.github.com/repos/apache/storm/issues/5114","id":2612654604,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NTQ2MDQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-05-09T15:22:11Z","updated_at":"2025-01-24T14:24:36Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=cody\">cody</a>:</i>\n<p>I've finished most of the code and currently on the integration test, and may submit the PR this week, would you care to review the PR directly by then?</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612654604/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/217898782","html_url":"https://github.com/apache/storm/pull/1400#issuecomment-217898782","issue_url":"https://api.github.com/repos/apache/storm/issues/1400","id":217898782,"node_id":"MDEyOklzc3VlQ29tbWVudDIxNzg5ODc4Mg==","user":{"login":"kishorvpatil","id":6090397,"node_id":"MDQ6VXNlcjYwOTAzOTc=","avatar_url":"https://avatars.githubusercontent.com/u/6090397?v=4","gravatar_id":"","url":"https://api.github.com/users/kishorvpatil","html_url":"https://github.com/kishorvpatil","followers_url":"https://api.github.com/users/kishorvpatil/followers","following_url":"https://api.github.com/users/kishorvpatil/following{/other_user}","gists_url":"https://api.github.com/users/kishorvpatil/gists{/gist_id}","starred_url":"https://api.github.com/users/kishorvpatil/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kishorvpatil/subscriptions","organizations_url":"https://api.github.com/users/kishorvpatil/orgs","repos_url":"https://api.github.com/users/kishorvpatil/repos","events_url":"https://api.github.com/users/kishorvpatil/events{/privacy}","received_events_url":"https://api.github.com/users/kishorvpatil/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-05-09T15:30:35Z","updated_at":"2016-05-09T15:30:35Z","author_association":"CONTRIBUTOR","body":"@fbyrne, closing and reopening the PR or adding commit triggers the build.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/217898782/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612899875","html_url":"https://github.com/apache/storm/issues/5565#issuecomment-2612899875","issue_url":"https://api.github.com/repos/apache/storm/issues/5565","id":2612899875,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4OTk4NzU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-05-09T15:30:36Z","updated_at":"2025-01-24T16:14:56Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user kishorvpatil commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1400#issuecomment-217898782\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1400#issuecomment-217898782</a></p>\n\n<p>    @fbyrne, closing and reopening the PR or adding commit triggers the build.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612899875/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/217905885","html_url":"https://github.com/apache/storm/pull/1131#issuecomment-217905885","issue_url":"https://api.github.com/repos/apache/storm/issues/1131","id":217905885,"node_id":"MDEyOklzc3VlQ29tbWVudDIxNzkwNTg4NQ==","user":{"login":"jianbzhou","id":16497854,"node_id":"MDQ6VXNlcjE2NDk3ODU0","avatar_url":"https://avatars.githubusercontent.com/u/16497854?v=4","gravatar_id":"","url":"https://api.github.com/users/jianbzhou","html_url":"https://github.com/jianbzhou","followers_url":"https://api.github.com/users/jianbzhou/followers","following_url":"https://api.github.com/users/jianbzhou/following{/other_user}","gists_url":"https://api.github.com/users/jianbzhou/gists{/gist_id}","starred_url":"https://api.github.com/users/jianbzhou/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jianbzhou/subscriptions","organizations_url":"https://api.github.com/users/jianbzhou/orgs","repos_url":"https://api.github.com/users/jianbzhou/repos","events_url":"https://api.github.com/users/jianbzhou/events{/privacy}","received_events_url":"https://api.github.com/users/jianbzhou/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-05-09T15:54:48Z","updated_at":"2016-05-09T15:54:48Z","author_association":"NONE","body":"thanks Hmcl.\n\nJust found below log constantly show up, seems it constantly try to commit one offset which is actually committed to kafka already – it might be caused by group rebalance – so a smaller offset (smaller than the committed offset) is acked back lately.\n\nFor example(it is our assumption, kindly correct me if wrong): one consumer commit offset 1000, polled 1001~1050 messages and emitted, also message was acked for 1001 ~ 1009, then a rebalance happened, another consumer poll message from 1000 to 1025, and commit the offset to 1010, then the message 1010(was emitted before the rebalance) was acked back. This will cause 1010 will never be committed as per the logic in findNextCommitOffset method – because this offset was already commited to kafka successfully.\n\nLog is:\n2016-05-09 03:02:14 io.ebay.rheos.KafkaSpout [INFO] Unexpected offset found [37137]. OffsetEntry{topic-partition=oradb.core4-lcr.caty.ebay-bids-3, fetchOffset=37138, committedOffset=37137, ackedMsgs={topic-partition=oradb.core4-lcr.caty.ebay-bids-3, offset=37137, numFails=0}|{topic-partition=oradb.core4-lcr.caty.ebay-bids-3, offset=37137, numFails=0}} \n\nWe applied below fix - For OffsetEntry.add(KafkaSpoutMessageId msgId) method, we changed the code as per below – only add acked message when its offset is bigger than the committed offset.\n\npublic void add(KafkaSpoutMessageId msgId) {          // O(Log N)\n    **_if(msgId.offset() > committedOffset)//this line is newly added_**\n        ackedMsgs.add(msgId);\n}\n\nCould you please help take a look at the above and let me know your thoughts? Thanks.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/217905885/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612904012","html_url":"https://github.com/apache/storm/issues/5592#issuecomment-2612904012","issue_url":"https://api.github.com/repos/apache/storm/issues/5592","id":2612904012,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI5MDQwMTI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-05-09T17:21:47Z","updated_at":"2025-01-24T16:16:54Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=revans2\">revans2</a>:</i>\n<p><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ptgoetz\" class=\"user-hover\" rel=\"ptgoetz\">P. Taylor Goetz</a> and others,</p>\n\n<p>I am fine no matter where we put it for initial development.</p>\n\n<p>Putting on my Yahoo hat for a bit.  We are interested in helping out on this too, but we have a lot of other work/priorities that we are trying to plan out, at least at a high level.  Has any work gone into designing how we would plan to support this?  Is it a layer on top of trident with the windowing support added in?  I have not had the time to dig into the beam API that fully so I am not really sure what other gotchas might crop up.  I really would like to get a handle on this so I can plan accordingly. </p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612904012/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/218035627","html_url":"https://github.com/apache/storm/pull/1406#issuecomment-218035627","issue_url":"https://api.github.com/repos/apache/storm/issues/1406","id":218035627,"node_id":"MDEyOklzc3VlQ29tbWVudDIxODAzNTYyNw==","user":{"login":"hustfxj","id":7270212,"node_id":"MDQ6VXNlcjcyNzAyMTI=","avatar_url":"https://avatars.githubusercontent.com/u/7270212?v=4","gravatar_id":"","url":"https://api.github.com/users/hustfxj","html_url":"https://github.com/hustfxj","followers_url":"https://api.github.com/users/hustfxj/followers","following_url":"https://api.github.com/users/hustfxj/following{/other_user}","gists_url":"https://api.github.com/users/hustfxj/gists{/gist_id}","starred_url":"https://api.github.com/users/hustfxj/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hustfxj/subscriptions","organizations_url":"https://api.github.com/users/hustfxj/orgs","repos_url":"https://api.github.com/users/hustfxj/repos","events_url":"https://api.github.com/users/hustfxj/events{/privacy}","received_events_url":"https://api.github.com/users/hustfxj/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-05-10T01:24:22Z","updated_at":"2016-05-10T01:24:22Z","author_association":"CONTRIBUTOR","body":"In fact, JStorm can show alll queues population in UI. And we seperarate heartbeat message and metrics message. I agree with @HeartSaVioR . The work is long-term huge, So I hope we can plan to phase 2 in 2.0.0. \n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/218035627/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612481385","html_url":"https://github.com/apache/storm/issues/4275#issuecomment-2612481385","issue_url":"https://api.github.com/repos/apache/storm/issues/4275","id":2612481385,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0ODEzODU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-05-10T01:24:23Z","updated_at":"2025-01-24T13:02:00Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user hustfxj commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1406#issuecomment-218035627\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1406#issuecomment-218035627</a></p>\n\n<p>    In fact, JStorm can show alll queues population in UI. And we seperarate heartbeat message and metrics message. I agree with @HeartSaVioR . The work is long-term huge, So I hope we can plan to phase 2 in 2.0.0. </p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612481385/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612906023","html_url":"https://github.com/apache/storm/issues/5607#issuecomment-2612906023","issue_url":"https://api.github.com/repos/apache/storm/issues/5607","id":2612906023,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI5MDYwMjM=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-05-10T03:20:09Z","updated_at":"2025-01-24T16:17:54Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=mauzhang\">mauzhang</a>:</i>\n<p>Hi <a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=roshan_naik\" class=\"user-hover\" rel=\"roshan_naik\">Roshan Naik</a>,</p>\n\n<p>Do you mean <a href=\"https://github.com/intel-hadoop/storm-benchmark\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/intel-hadoop/storm-benchmark</a> ?  I'm the main committer to this project and we've previously express our desire to contribute in <a href=\"https://issues.apache.org/jira/browse/STORM-642\" title=\"Add Storm Benchmarking Framework\" class=\"issue-link\" data-issue-key=\"STORM-642\"><del>STORM-642</del></a>. The project now a bit out-dated and needs to add support for latest storm releases. </p>\n\n<p>How did the perf number change ? Basically, storm-benchmark is a suite of native Storm topologies and the metrics data are collected from nimbus. </p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612906023/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/218075001","html_url":"https://github.com/apache/storm/pull/236#issuecomment-218075001","issue_url":"https://api.github.com/repos/apache/storm/issues/236","id":218075001,"node_id":"MDEyOklzc3VlQ29tbWVudDIxODA3NTAwMQ==","user":{"login":"abhishekagarwal87","id":1477457,"node_id":"MDQ6VXNlcjE0Nzc0NTc=","avatar_url":"https://avatars.githubusercontent.com/u/1477457?v=4","gravatar_id":"","url":"https://api.github.com/users/abhishekagarwal87","html_url":"https://github.com/abhishekagarwal87","followers_url":"https://api.github.com/users/abhishekagarwal87/followers","following_url":"https://api.github.com/users/abhishekagarwal87/following{/other_user}","gists_url":"https://api.github.com/users/abhishekagarwal87/gists{/gist_id}","starred_url":"https://api.github.com/users/abhishekagarwal87/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/abhishekagarwal87/subscriptions","organizations_url":"https://api.github.com/users/abhishekagarwal87/orgs","repos_url":"https://api.github.com/users/abhishekagarwal87/repos","events_url":"https://api.github.com/users/abhishekagarwal87/events{/privacy}","received_events_url":"https://api.github.com/users/abhishekagarwal87/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-05-10T07:01:40Z","updated_at":"2016-05-10T07:01:40Z","author_association":"CONTRIBUTOR","body":"Guys, follow up discussion is happening on #1406. Can you let me know your feedback there?\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/218075001/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612481387","html_url":"https://github.com/apache/storm/issues/4275#issuecomment-2612481387","issue_url":"https://api.github.com/repos/apache/storm/issues/4275","id":2612481387,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0ODEzODc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-05-10T07:01:41Z","updated_at":"2025-01-24T13:02:00Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user abhishekagarwal87 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/236#issuecomment-218075001\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/236#issuecomment-218075001</a></p>\n\n<p>    Guys, follow up discussion is happening on #1406. Can you let me know your feedback there?</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612481387/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/218076239","html_url":"https://github.com/apache/storm/pull/1406#issuecomment-218076239","issue_url":"https://api.github.com/repos/apache/storm/issues/1406","id":218076239,"node_id":"MDEyOklzc3VlQ29tbWVudDIxODA3NjIzOQ==","user":{"login":"abhishekagarwal87","id":1477457,"node_id":"MDQ6VXNlcjE0Nzc0NTc=","avatar_url":"https://avatars.githubusercontent.com/u/1477457?v=4","gravatar_id":"","url":"https://api.github.com/users/abhishekagarwal87","html_url":"https://github.com/abhishekagarwal87","followers_url":"https://api.github.com/users/abhishekagarwal87/followers","following_url":"https://api.github.com/users/abhishekagarwal87/following{/other_user}","gists_url":"https://api.github.com/users/abhishekagarwal87/gists{/gist_id}","starred_url":"https://api.github.com/users/abhishekagarwal87/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/abhishekagarwal87/subscriptions","organizations_url":"https://api.github.com/users/abhishekagarwal87/orgs","repos_url":"https://api.github.com/users/abhishekagarwal87/repos","events_url":"https://api.github.com/users/abhishekagarwal87/events{/privacy}","received_events_url":"https://api.github.com/users/abhishekagarwal87/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-05-10T07:09:12Z","updated_at":"2016-05-10T07:09:12Z","author_association":"CONTRIBUTOR","body":"Two parts of this PR -\n_Metric collection_ - From what I have seen, storm users are very much interested in queue length statistics. Current queue metrics do not have histogram or average of queue length etc. There must be a way to add them without touching the critical path.\n\n_Metric reporting_ - Reporting additional metrics to UI adds zookeeper overhead but additional payload is not significant. Other alternative is to let users rely on external components such as graphite by using appropriate MetricConsumer. \n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/218076239/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612481391","html_url":"https://github.com/apache/storm/issues/4275#issuecomment-2612481391","issue_url":"https://api.github.com/repos/apache/storm/issues/4275","id":2612481391,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0ODEzOTE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-05-10T07:09:14Z","updated_at":"2025-01-24T13:02:01Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user abhishekagarwal87 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1406#issuecomment-218076239\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1406#issuecomment-218076239</a></p>\n\n<p>    Two parts of this PR -<br/>\n    <b>Metric collection</b> - From what I have seen, storm users are very much interested in queue length statistics. Current queue metrics do not have histogram or average of queue length etc. There must be a way to add them without touching the critical path.</p>\n\n<p>    <b>Metric reporting</b> - Reporting additional metrics to UI adds zookeeper overhead but additional payload is not significant. Other alternative is to let users rely on external components such as graphite by using appropriate MetricConsumer. </p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612481391/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/218289768","html_url":"https://github.com/apache/storm/pull/1406#issuecomment-218289768","issue_url":"https://api.github.com/repos/apache/storm/issues/1406","id":218289768,"node_id":"MDEyOklzc3VlQ29tbWVudDIxODI4OTc2OA==","user":{"login":"knusbaum","id":1819836,"node_id":"MDQ6VXNlcjE4MTk4MzY=","avatar_url":"https://avatars.githubusercontent.com/u/1819836?v=4","gravatar_id":"","url":"https://api.github.com/users/knusbaum","html_url":"https://github.com/knusbaum","followers_url":"https://api.github.com/users/knusbaum/followers","following_url":"https://api.github.com/users/knusbaum/following{/other_user}","gists_url":"https://api.github.com/users/knusbaum/gists{/gist_id}","starred_url":"https://api.github.com/users/knusbaum/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/knusbaum/subscriptions","organizations_url":"https://api.github.com/users/knusbaum/orgs","repos_url":"https://api.github.com/users/knusbaum/repos","events_url":"https://api.github.com/users/knusbaum/events{/privacy}","received_events_url":"https://api.github.com/users/knusbaum/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-05-10T20:59:58Z","updated_at":"2016-05-10T20:59:58Z","author_association":"CONTRIBUTOR","body":"I think it's fine if this goes in. It doesn't add much to the metrics load, and we already have a working solution for clusters whose zk instances get overloaded. Ultimately, we do want to move all the metrics somewhere else, but until then, we can continue doing them as we have been. \n\nWhen we make the larger change, it won't me more difficult because of this than it would have been.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/218289768/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612481396","html_url":"https://github.com/apache/storm/issues/4275#issuecomment-2612481396","issue_url":"https://api.github.com/repos/apache/storm/issues/4275","id":2612481396,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0ODEzOTY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-05-10T20:59:59Z","updated_at":"2025-01-24T13:02:01Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user knusbaum commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1406#issuecomment-218289768\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1406#issuecomment-218289768</a></p>\n\n<p>    I think it's fine if this goes in. It doesn't add much to the metrics load, and we already have a working solution for clusters whose zk instances get overloaded. Ultimately, we do want to move all the metrics somewhere else, but until then, we can continue doing them as we have been. </p>\n\n<p>    When we make the larger change, it won't me more difficult because of this than it would have been.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612481396/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612906029","html_url":"https://github.com/apache/storm/issues/5607#issuecomment-2612906029","issue_url":"https://api.github.com/repos/apache/storm/issues/5607","id":2612906029,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI5MDYwMjk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-05-10T23:14:37Z","updated_at":"2025-01-24T16:17:54Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=roshan_naik\">roshan_naik</a>:</i>\n<p>Hi <a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=mauzhang\" class=\"user-hover\" rel=\"mauzhang\">Manu Zhang</a>,<br/>\n    Yes thats it. I first observed that perf difference issue when working on <a href=\"https://issues.apache.org/jira/browse/STORM-1632\" title=\"Disable event logging by default\" class=\"issue-link\" data-issue-key=\"STORM-1632\"><del>STORM-1632</del></a>, but was not able to get to the bottom of it. The storm native topology mentioned here : <a href=\"https://github.com/apache/storm/pull/1217#issuecomment-201074919\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1217#issuecomment-201074919</a></p>\n\n<p>I can try to locate the benchmark-specific version of the topology but its a straightforward rewrite.</p>\n\n<p>The storm native showed a  difference of ~12% when doing a A/B test (with and without the fix)<br/>\nThe benchmark specific version of the topology .. it was 25%  as noted in the description of <a href=\"https://issues.apache.org/jira/browse/STORM-1632\" title=\"Disable event logging by default\" class=\"issue-link\" data-issue-key=\"STORM-1632\"><del>STORM-1632</del></a>.</p>\n\n\n\n<p>IMO..  briefly ignoring the perf diff issue, it would be good to go ahead and see what we can incorporate from that benchmark . In this jira my goal is to add a few topologies for perf testing... not to create a benchmarking tool/framework itself. In that sense its not conflicting with <a href=\"https://issues.apache.org/jira/browse/STORM-642\" title=\"Add Storm Benchmarking Framework\" class=\"issue-link\" data-issue-key=\"STORM-642\"><del>STORM-642</del></a>. </p>\n\n<p><b>side note:</b> If we are adding a benchmarking framework, it would be good if it can run standard Storm topologies directly and not require topologies to be written specifically for it.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612906029/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/218339228","html_url":"https://github.com/apache/storm/pull/1406#issuecomment-218339228","issue_url":"https://api.github.com/repos/apache/storm/issues/1406","id":218339228,"node_id":"MDEyOklzc3VlQ29tbWVudDIxODMzOTIyOA==","user":{"login":"HeartSaVioR","id":1317309,"node_id":"MDQ6VXNlcjEzMTczMDk=","avatar_url":"https://avatars.githubusercontent.com/u/1317309?v=4","gravatar_id":"","url":"https://api.github.com/users/HeartSaVioR","html_url":"https://github.com/HeartSaVioR","followers_url":"https://api.github.com/users/HeartSaVioR/followers","following_url":"https://api.github.com/users/HeartSaVioR/following{/other_user}","gists_url":"https://api.github.com/users/HeartSaVioR/gists{/gist_id}","starred_url":"https://api.github.com/users/HeartSaVioR/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HeartSaVioR/subscriptions","organizations_url":"https://api.github.com/users/HeartSaVioR/orgs","repos_url":"https://api.github.com/users/HeartSaVioR/repos","events_url":"https://api.github.com/users/HeartSaVioR/events{/privacy}","received_events_url":"https://api.github.com/users/HeartSaVioR/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-05-11T01:31:29Z","updated_at":"2016-05-11T01:31:29Z","author_association":"CONTRIBUTOR","body":"@knusbaum Yeah, agreed. I was seeing larger view, but when we narrow the view, this PR would be add a tiny amount of load. Seeing is believing so I would like to see performance test result.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/218339228/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612481401","html_url":"https://github.com/apache/storm/issues/4275#issuecomment-2612481401","issue_url":"https://api.github.com/repos/apache/storm/issues/4275","id":2612481401,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0ODE0MDE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-05-11T01:31:30Z","updated_at":"2025-01-24T13:02:01Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user HeartSaVioR commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1406#issuecomment-218339228\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1406#issuecomment-218339228</a></p>\n\n<p>    @knusbaum Yeah, agreed. I was seeing larger view, but when we narrow the view, this PR would be add a tiny amount of load. Seeing is believing so I would like to see performance test result.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612481401/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612906139","html_url":"https://github.com/apache/storm/issues/5608#issuecomment-2612906139","issue_url":"https://api.github.com/repos/apache/storm/issues/5608","id":2612906139,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI5MDYxMzk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-05-11T02:39:30Z","updated_at":"2025-01-24T16:17:57Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=kabhwan\">kabhwan</a>:</i>\n<p>Worked on this and built custom storm-core jar and sent to user reporting this issue.<br/>\nI'll submit a pull request if patch helps resolving this issue.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612906139/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612906513","html_url":"https://github.com/apache/storm/issues/5612#issuecomment-2612906513","issue_url":"https://api.github.com/repos/apache/storm/issues/5612","id":2612906513,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI5MDY1MTM=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-05-11T03:28:42Z","updated_at":"2025-01-24T16:18:11Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=kabhwan\">kabhwan</a>:</i>\n<p>Hi Ambud, </p>\n\n<p>For your information, we're discussing on dev@ regarding support of 0.10.x.<br/>\n<a href=\"http://mail-archives.apache.org/mod_mbox/storm-dev/201605.mbox/%3CCAF5108hwgpg2OQAdkin3j2c13Ugww+iVTLcnWznJWtS0Bwxoxg@mail.gmail.com%3E\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://mail-archives.apache.org/mod_mbox/storm-dev/201605.mbox/%3CCAF5108hwgpg2OQAdkin3j2c13Ugww+iVTLcnWznJWtS0Bwxoxg@mail.gmail.com%3E</a></p>\n\n<p>It's still in discussion but I think many contributors are in consensus that we want to concentrate 1.x and 2.x version lines, and less effort to 0.10.x.<br/>\nBackporting may happen but it's strongly recommended to just upgrade to Storm 1.x if you want to use the new feature of Storm 1.x.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612906513/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612906631","html_url":"https://github.com/apache/storm/issues/5613#issuecomment-2612906631","issue_url":"https://api.github.com/repos/apache/storm/issues/5613","id":2612906631,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI5MDY2MzE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-05-11T08:06:48Z","updated_at":"2025-01-24T16:18:15Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=chuanlei ni\">chuanlei ni</a>:</i>\n<p>Now KafkaDatasourcesProvider only support messages in json format while the message format is diverse in reality such as raw log text, and sometimes csv format.</p>\n\n<p>We can modify the KafkaDataSourceProvider to support multiple message formats by identifying the scheme class name when defining external table. such as </p>\n\n<p>CREATE EXTERNAL TABLE Orders (xx,xxx) LOCATION xx TBLPROPERTIES '</p>\n{\"scheme\": \"org.apache.storm.sql.kafka.JsonScheme\"}\n<p>' </p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612906631/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612906633","html_url":"https://github.com/apache/storm/issues/5613#issuecomment-2612906633","issue_url":"https://api.github.com/repos/apache/storm/issues/5613","id":2612906633,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI5MDY2MzM=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-05-11T10:48:18Z","updated_at":"2025-01-24T16:18:15Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user chuanlei closed the pull request at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1409\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1409</a></p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612906633/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612906643","html_url":"https://github.com/apache/storm/issues/5613#issuecomment-2612906643","issue_url":"https://api.github.com/repos/apache/storm/issues/5613","id":2612906643,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI5MDY2NDM=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-05-11T10:50:08Z","updated_at":"2025-01-24T16:18:15Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>GitHub user chuanlei opened a pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1410\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1410</a></p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1778\" title=\"Scheme Extension Framework for KafkaDataSource and support for CSV format\" class=\"issue-link\" data-issue-key=\"STORM-1778\"><del>STORM-1778</del></a>: scheme extension framework for KafkaSourceProvider and csv s…</p>\n\n<p>    feature: scheme extension framework for KafkaSourceProvider and csv scheme support</p>\n\n<p>You can merge this pull request into a Git repository by running:</p>\n\n<p>    $ git pull <a href=\"https://github.com/chuanlei/storm\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/chuanlei/storm</a> feature-scheme-extension-framework-and-csv-support</p>\n\n<p>Alternatively you can review and apply these changes as the patch at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1410.patch\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1410.patch</a></p>\n\n<p>To close this pull request, make a commit to your master/trunk branch<br/>\nwith (at least) the following in the commit message:</p>\n\n<p>    This closes #1410</p>\n\n<hr />\n<p>commit e04060d5db1f057818abab9937bdf29d19e66205<br/>\nAuthor: nichuanlei <nichuanlei@360.cn><br/>\nDate:   2016-05-11T10:13:27Z</p>\n\n<p>    feature: scheme extension framework for KafkaSourceProvider and csv scheme support</p>\n\n<hr />","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612906643/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/218453241","html_url":"https://github.com/apache/storm/pull/1131#issuecomment-218453241","issue_url":"https://api.github.com/repos/apache/storm/issues/1131","id":218453241,"node_id":"MDEyOklzc3VlQ29tbWVudDIxODQ1MzI0MQ==","user":{"login":"jianbzhou","id":16497854,"node_id":"MDQ6VXNlcjE2NDk3ODU0","avatar_url":"https://avatars.githubusercontent.com/u/16497854?v=4","gravatar_id":"","url":"https://api.github.com/users/jianbzhou","html_url":"https://github.com/jianbzhou","followers_url":"https://api.github.com/users/jianbzhou/followers","following_url":"https://api.github.com/users/jianbzhou/following{/other_user}","gists_url":"https://api.github.com/users/jianbzhou/gists{/gist_id}","starred_url":"https://api.github.com/users/jianbzhou/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jianbzhou/subscriptions","organizations_url":"https://api.github.com/users/jianbzhou/orgs","repos_url":"https://api.github.com/users/jianbzhou/repos","events_url":"https://api.github.com/users/jianbzhou/events{/privacy}","received_events_url":"https://api.github.com/users/jianbzhou/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-05-11T13:06:36Z","updated_at":"2016-05-11T13:06:36Z","author_association":"NONE","body":"HI Hcml, \nJust fyi - \nIn method doSeekRetriableTopicPartitions, we find below code:\n**kafkaConsumer.seekToEnd(rtp);    // Seek to last committed offset**\nAbove code is contradictory with the comments, we replaced above line to below:\n**OffsetAndMetadata commitOffset = kafkaConsumer.committed(rtp);\nkafkaConsumer.seek(rtp, commitOffset.offset());    // Seek to last committed offset**\nAny comments please let me know. Thanks!\n\nFor all above identified issues, we applied some quick and dirty fix and the testing is in progress, we will let you know the final testing result later.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/218453241/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612906033","html_url":"https://github.com/apache/storm/issues/5607#issuecomment-2612906033","issue_url":"https://api.github.com/repos/apache/storm/issues/5607","id":2612906033,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI5MDYwMzM=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-05-11T14:03:00Z","updated_at":"2025-01-24T16:17:54Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=revans2\">revans2</a>:</i>\n<p>I would love to see more performance tests/topologies in storm.  I wrote one <a href=\"https://github.com/apache/storm/blob/master/examples/storm-starter/src/jvm/org/apache/storm/starter/ThroughputVsLatency.java\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/blob/master/examples/storm-starter/src/jvm/org/apache/storm/starter/ThroughputVsLatency.java</a> but it is just a word count topology, and it requires acking to be enabled for it to work properly.  We also did a storm benchmark as part of <a href=\"https://github.com/yahoo/streaming-benchmarks\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/yahoo/streaming-benchmarks</a>.  And then there is the <a href=\"https://github.com/yahoo/storm-perf-test\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/yahoo/storm-perf-test</a> which is outdated, and too many people use it to test the general performance of storm instead of using it as stress test on the messaging layer, which is the only thing it is really good at.</p>\n\n<p>I think ThroughputVsLatency is the correct model that we want to follow for these types of tests.  Trying to capture the processing latency at a given throughput.  It can easily be adapted to other topologies, and with a small amount of work should be able to support an OK measure of latency without the need for acking, assuming that the clocks among the different nodes are close to being in sync with one another. The intel benchmarks are great in their diversity of workloads, but I would also like to see something that is more real world too.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612906033/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612906147","html_url":"https://github.com/apache/storm/issues/5608#issuecomment-2612906147","issue_url":"https://api.github.com/repos/apache/storm/issues/5608","id":2612906147,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI5MDYxNDc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-05-11T14:41:34Z","updated_at":"2025-01-24T16:17:57Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>GitHub user HeartSaVioR opened a pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1411\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1411</a></p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1773\" title=\"Utils.javaDeserialize() doesn&#39;t work with primitive types\" class=\"issue-link\" data-issue-key=\"STORM-1773\"><del>STORM-1773</del></a> Utils.javaDeserialize() doesn't work with primitive types</p>\n\n<ul>\n\t<li>upgrade commons-io from 2.4 to 2.5 to resolve <a href=\"https://issues.apache.org/jira/browse/IO-378\" title=\"ClassLoaderInputStream - should this delegate to the parent class loader?\" class=\"issue-link\" data-issue-key=\"IO-378\">IO-378</a></li>\n</ul>\n\n\n<p>    Please refer <a href=\"http://issues.apache.org/jira/browse/STORM-1773\" class=\"external-link\" rel=\"nofollow\">http://issues.apache.org/jira/browse/STORM-1773</a> for more details.</p>\n\n<p>You can merge this pull request into a Git repository by running:</p>\n\n<p>    $ git pull <a href=\"https://github.com/HeartSaVioR/storm\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/HeartSaVioR/storm</a> <a href=\"https://issues.apache.org/jira/browse/STORM-1773\" title=\"Utils.javaDeserialize() doesn&#39;t work with primitive types\" class=\"issue-link\" data-issue-key=\"STORM-1773\"><del>STORM-1773</del></a></p>\n\n<p>Alternatively you can review and apply these changes as the patch at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1411.patch\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1411.patch</a></p>\n\n<p>To close this pull request, make a commit to your master/trunk branch<br/>\nwith (at least) the following in the commit message:</p>\n\n<p>    This closes #1411</p>\n\n<hr />\n<p>commit ca4fcecf005e04d61d65160b84ef6299cea92bf0<br/>\nAuthor: Jungtaek Lim <kabhwan@gmail.com><br/>\nDate:   2016-05-11T03:03:23Z</p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1773\" title=\"Utils.javaDeserialize() doesn&#39;t work with primitive types\" class=\"issue-link\" data-issue-key=\"STORM-1773\"><del>STORM-1773</del></a> Utils.javaDeserialize() doesn't work with primitive types</p>\n\n<ul>\n\t<li>upgrade commons-io from 2.4 to 2.5 to resolve <a href=\"https://issues.apache.org/jira/browse/IO-378\" title=\"ClassLoaderInputStream - should this delegate to the parent class loader?\" class=\"issue-link\" data-issue-key=\"IO-378\">IO-378</a></li>\n</ul>\n\n\n<hr />","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612906147/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612906153","html_url":"https://github.com/apache/storm/issues/5608#issuecomment-2612906153","issue_url":"https://api.github.com/repos/apache/storm/issues/5608","id":2612906153,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI5MDYxNTM=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-05-11T14:42:15Z","updated_at":"2025-01-24T16:17:57Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=kabhwan\">kabhwan</a>:</i>\n<p>Confirmed that patch resolves the issue. Submitting pull requests.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612906153/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612906158","html_url":"https://github.com/apache/storm/issues/5608#issuecomment-2612906158","issue_url":"https://api.github.com/repos/apache/storm/issues/5608","id":2612906158,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI5MDYxNTg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-05-11T14:43:17Z","updated_at":"2025-01-24T16:17:57Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>GitHub user HeartSaVioR opened a pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1412\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1412</a></p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1773\" title=\"Utils.javaDeserialize() doesn&#39;t work with primitive types\" class=\"issue-link\" data-issue-key=\"STORM-1773\"><del>STORM-1773</del></a> Utils.javaDeserialize() doesn't work with primitive types</p>\n\n<ul>\n\t<li>upgrade commons-io from 2.4 to 2.5 to resolve <a href=\"https://issues.apache.org/jira/browse/IO-378\" title=\"ClassLoaderInputStream - should this delegate to the parent class loader?\" class=\"issue-link\" data-issue-key=\"IO-378\">IO-378</a></li>\n</ul>\n\n\n<p>    Fix for master: #1411 </p>\n\n<p>You can merge this pull request into a Git repository by running:</p>\n\n<p>    $ git pull <a href=\"https://github.com/HeartSaVioR/storm\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/HeartSaVioR/storm</a> <a href=\"https://issues.apache.org/jira/browse/STORM-1773\" title=\"Utils.javaDeserialize() doesn&#39;t work with primitive types\" class=\"issue-link\" data-issue-key=\"STORM-1773\"><del>STORM-1773</del></a>-1.x</p>\n\n<p>Alternatively you can review and apply these changes as the patch at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1412.patch\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1412.patch</a></p>\n\n<p>To close this pull request, make a commit to your master/trunk branch<br/>\nwith (at least) the following in the commit message:</p>\n\n<p>    This closes #1412</p>\n\n<hr />\n\n<hr />","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612906158/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/218481602","html_url":"https://github.com/apache/storm/pull/1412#issuecomment-218481602","issue_url":"https://api.github.com/repos/apache/storm/issues/1412","id":218481602,"node_id":"MDEyOklzc3VlQ29tbWVudDIxODQ4MTYwMg==","user":{"login":"HeartSaVioR","id":1317309,"node_id":"MDQ6VXNlcjEzMTczMDk=","avatar_url":"https://avatars.githubusercontent.com/u/1317309?v=4","gravatar_id":"","url":"https://api.github.com/users/HeartSaVioR","html_url":"https://github.com/HeartSaVioR","followers_url":"https://api.github.com/users/HeartSaVioR/followers","following_url":"https://api.github.com/users/HeartSaVioR/following{/other_user}","gists_url":"https://api.github.com/users/HeartSaVioR/gists{/gist_id}","starred_url":"https://api.github.com/users/HeartSaVioR/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HeartSaVioR/subscriptions","organizations_url":"https://api.github.com/users/HeartSaVioR/orgs","repos_url":"https://api.github.com/users/HeartSaVioR/repos","events_url":"https://api.github.com/users/HeartSaVioR/events{/privacy}","received_events_url":"https://api.github.com/users/HeartSaVioR/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-05-11T14:44:51Z","updated_at":"2016-05-11T14:44:51Z","author_association":"CONTRIBUTOR","body":"It should be backported to 1.0.x-branch. \nBtw, Github mirror doesn't catch up new branch on ASF repo. Should I push dummy commit to 1.0.x-branch?\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/218481602/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612906161","html_url":"https://github.com/apache/storm/issues/5608#issuecomment-2612906161","issue_url":"https://api.github.com/repos/apache/storm/issues/5608","id":2612906161,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI5MDYxNjE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-05-11T14:44:52Z","updated_at":"2025-01-24T16:17:57Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user HeartSaVioR commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1412#issuecomment-218481602\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1412#issuecomment-218481602</a></p>\n\n<p>    It should be backported to 1.0.x-branch. <br/>\n    Btw, Github mirror doesn't catch up new branch on ASF repo. Should I push dummy commit to 1.0.x-branch?</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612906161/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612906744","html_url":"https://github.com/apache/storm/issues/5614#issuecomment-2612906744","issue_url":"https://api.github.com/repos/apache/storm/issues/5614","id":2612906744,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI5MDY3NDQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-05-11T17:38:27Z","updated_at":"2025-01-24T16:18:19Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jerrypeng\">jerrypeng</a>:</i>\n<p>dup of <a href=\"https://issues.apache.org/jira/browse/STORM-1681\" class=\"external-link\" rel=\"nofollow\">https://issues.apache.org/jira/browse/STORM-1681</a>.  Already fixed in master-security as well as 1.x branch</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612906744/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/218602496","html_url":"https://github.com/apache/storm/pull/1271#issuecomment-218602496","issue_url":"https://api.github.com/repos/apache/storm/issues/1271","id":218602496,"node_id":"MDEyOklzc3VlQ29tbWVudDIxODYwMjQ5Ng==","user":{"login":"redsanket","id":8295799,"node_id":"MDQ6VXNlcjgyOTU3OTk=","avatar_url":"https://avatars.githubusercontent.com/u/8295799?v=4","gravatar_id":"","url":"https://api.github.com/users/redsanket","html_url":"https://github.com/redsanket","followers_url":"https://api.github.com/users/redsanket/followers","following_url":"https://api.github.com/users/redsanket/following{/other_user}","gists_url":"https://api.github.com/users/redsanket/gists{/gist_id}","starred_url":"https://api.github.com/users/redsanket/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/redsanket/subscriptions","organizations_url":"https://api.github.com/users/redsanket/orgs","repos_url":"https://api.github.com/users/redsanket/repos","events_url":"https://api.github.com/users/redsanket/events{/privacy}","received_events_url":"https://api.github.com/users/redsanket/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-05-11T21:56:46Z","updated_at":"2016-05-11T21:56:46Z","author_association":"NONE","body":"@HeartSaVioR, sorry about the last commit, reverted it, hope it is ready to go, thanks\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/218602496/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/218603288","html_url":"https://github.com/apache/storm/pull/1290#issuecomment-218603288","issue_url":"https://api.github.com/repos/apache/storm/issues/1290","id":218603288,"node_id":"MDEyOklzc3VlQ29tbWVudDIxODYwMzI4OA==","user":{"login":"redsanket","id":8295799,"node_id":"MDQ6VXNlcjgyOTU3OTk=","avatar_url":"https://avatars.githubusercontent.com/u/8295799?v=4","gravatar_id":"","url":"https://api.github.com/users/redsanket","html_url":"https://github.com/redsanket","followers_url":"https://api.github.com/users/redsanket/followers","following_url":"https://api.github.com/users/redsanket/following{/other_user}","gists_url":"https://api.github.com/users/redsanket/gists{/gist_id}","starred_url":"https://api.github.com/users/redsanket/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/redsanket/subscriptions","organizations_url":"https://api.github.com/users/redsanket/orgs","repos_url":"https://api.github.com/users/redsanket/repos","events_url":"https://api.github.com/users/redsanket/events{/privacy}","received_events_url":"https://api.github.com/users/redsanket/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-05-11T22:00:16Z","updated_at":"2016-05-11T22:00:16Z","author_association":"NONE","body":"@HeartSaVioR reverted the last commit, hopefully it is good to go\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/218603288/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]