[{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508475724","html_url":"https://github.com/apache/tvm/issues/2563#issuecomment-508475724","issue_url":"https://api.github.com/repos/apache/tvm/issues/2563","id":508475724,"node_id":"MDEyOklzc3VlQ29tbWVudDUwODQ3NTcyNA==","user":{"login":"sergei-mironov","id":4477729,"node_id":"MDQ6VXNlcjQ0Nzc3Mjk=","avatar_url":"https://avatars.githubusercontent.com/u/4477729?v=4","gravatar_id":"","url":"https://api.github.com/users/sergei-mironov","html_url":"https://github.com/sergei-mironov","followers_url":"https://api.github.com/users/sergei-mironov/followers","following_url":"https://api.github.com/users/sergei-mironov/following{/other_user}","gists_url":"https://api.github.com/users/sergei-mironov/gists{/gist_id}","starred_url":"https://api.github.com/users/sergei-mironov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sergei-mironov/subscriptions","organizations_url":"https://api.github.com/users/sergei-mironov/orgs","repos_url":"https://api.github.com/users/sergei-mironov/repos","events_url":"https://api.github.com/users/sergei-mironov/events{/privacy}","received_events_url":"https://api.github.com/users/sergei-mironov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-07-04T13:05:12Z","updated_at":"2019-07-04T13:11:17Z","author_association":"CONTRIBUTOR","body":"Hi! Could you please share links to possible target devices which could be supported by this approach? I am interested in on-device training concept which may become important in the context of 'fine-tuning' use-cases of ML models like BERT.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508475724/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508541690","html_url":"https://github.com/apache/tvm/pull/3394#issuecomment-508541690","issue_url":"https://api.github.com/repos/apache/tvm/issues/3394","id":508541690,"node_id":"MDEyOklzc3VlQ29tbWVudDUwODU0MTY5MA==","user":{"login":"vegaluisjose","id":2478335,"node_id":"MDQ6VXNlcjI0NzgzMzU=","avatar_url":"https://avatars.githubusercontent.com/u/2478335?v=4","gravatar_id":"","url":"https://api.github.com/users/vegaluisjose","html_url":"https://github.com/vegaluisjose","followers_url":"https://api.github.com/users/vegaluisjose/followers","following_url":"https://api.github.com/users/vegaluisjose/following{/other_user}","gists_url":"https://api.github.com/users/vegaluisjose/gists{/gist_id}","starred_url":"https://api.github.com/users/vegaluisjose/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vegaluisjose/subscriptions","organizations_url":"https://api.github.com/users/vegaluisjose/orgs","repos_url":"https://api.github.com/users/vegaluisjose/repos","events_url":"https://api.github.com/users/vegaluisjose/events{/privacy}","received_events_url":"https://api.github.com/users/vegaluisjose/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-07-04T17:11:53Z","updated_at":"2019-07-04T17:11:53Z","author_association":"MEMBER","body":"Hey @liangfu, did you find something about the instruction layout that is not the same? It should be otherwise we would not be able to compile VTA programs. ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508541690/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508550461","html_url":"https://github.com/apache/tvm/pull/3494#issuecomment-508550461","issue_url":"https://api.github.com/repos/apache/tvm/issues/3494","id":508550461,"node_id":"MDEyOklzc3VlQ29tbWVudDUwODU1MDQ2MQ==","user":{"login":"tmoreau89","id":5974488,"node_id":"MDQ6VXNlcjU5NzQ0ODg=","avatar_url":"https://avatars.githubusercontent.com/u/5974488?v=4","gravatar_id":"","url":"https://api.github.com/users/tmoreau89","html_url":"https://github.com/tmoreau89","followers_url":"https://api.github.com/users/tmoreau89/followers","following_url":"https://api.github.com/users/tmoreau89/following{/other_user}","gists_url":"https://api.github.com/users/tmoreau89/gists{/gist_id}","starred_url":"https://api.github.com/users/tmoreau89/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tmoreau89/subscriptions","organizations_url":"https://api.github.com/users/tmoreau89/orgs","repos_url":"https://api.github.com/users/tmoreau89/repos","events_url":"https://api.github.com/users/tmoreau89/events{/privacy}","received_events_url":"https://api.github.com/users/tmoreau89/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-07-04T18:07:48Z","updated_at":"2019-07-04T18:07:48Z","author_association":"CONTRIBUTOR","body":"Thank you @liangfu; can you complement this PR with a compilation guide for Intel FPGA toolchain? The idea will be to extend this guide: https://docs.tvm.ai/vta/install.html and add a section for Intel FPGAs. Information would include what version of quartus is required etc.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508550461/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508550579","html_url":"https://github.com/apache/tvm/pull/3494#issuecomment-508550579","issue_url":"https://api.github.com/repos/apache/tvm/issues/3494","id":508550579,"node_id":"MDEyOklzc3VlQ29tbWVudDUwODU1MDU3OQ==","user":{"login":"tmoreau89","id":5974488,"node_id":"MDQ6VXNlcjU5NzQ0ODg=","avatar_url":"https://avatars.githubusercontent.com/u/5974488?v=4","gravatar_id":"","url":"https://api.github.com/users/tmoreau89","html_url":"https://github.com/tmoreau89","followers_url":"https://api.github.com/users/tmoreau89/followers","following_url":"https://api.github.com/users/tmoreau89/following{/other_user}","gists_url":"https://api.github.com/users/tmoreau89/gists{/gist_id}","starred_url":"https://api.github.com/users/tmoreau89/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tmoreau89/subscriptions","organizations_url":"https://api.github.com/users/tmoreau89/orgs","repos_url":"https://api.github.com/users/tmoreau89/repos","events_url":"https://api.github.com/users/tmoreau89/events{/privacy}","received_events_url":"https://api.github.com/users/tmoreau89/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-07-04T18:08:31Z","updated_at":"2019-07-04T18:08:31Z","author_association":"CONTRIBUTOR","body":"the source for the guide is under `docs/vta/install.md`","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508550579/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508558256","html_url":"https://github.com/apache/tvm/pull/3493#issuecomment-508558256","issue_url":"https://api.github.com/repos/apache/tvm/issues/3493","id":508558256,"node_id":"MDEyOklzc3VlQ29tbWVudDUwODU1ODI1Ng==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-07-04T19:00:58Z","updated_at":"2019-07-04T19:00:58Z","author_association":"MEMBER","body":"I am not sure if it is the best approach user would like. For example, if I were to construct the pipeline pragmatically, I might prefer\r\n\r\n```python\r\n   seq = _transform.Sequential([\r\n        relay.transform.InferType(),\r\n        relay.transform.FoldConstant(),\r\n        relay.transform.DebugPrint(), \r\n        relay.transform.DeadCodeElimination()\r\n    ])\r\n\r\n```","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508558256/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508561158","html_url":"https://github.com/apache/tvm/issues/3478#issuecomment-508561158","issue_url":"https://api.github.com/repos/apache/tvm/issues/3478","id":508561158,"node_id":"MDEyOklzc3VlQ29tbWVudDUwODU2MTE1OA==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-07-04T19:21:44Z","updated_at":"2019-07-04T19:45:41Z","author_association":"MEMBER","body":"I agree that Euclidean and Floor could be an interesting tradeoff. BTW, the proposal is not to change the semantics of default div, but to introduce additional div/mod besides the trunc-div support.\r\n\r\nI think the main reason to choose FloorDiv (along with trunc-div support) was to have fewer surprises. We choose to default Div to serve the same behavior as C's division, so the developer won't get confused when writing C code(we had a few that incidence before). Given that floordiv and euclidean div will give us a similar effect for the things we care about(positive divisor), being able to match python's semantics and easy to understand would be a plus here, and that is why I think FloorDiv/Mod should be preferred.\r\n\r\nAbout consistency with existing libs using euclidean div. This is a fair point. But given the importance of div/mod simplification, I hope we can do most of the simplification internally in the system. Also because floordiv is consistent with euclidean when divisor is positive(cases we care about), I think it would be just fine to reuse the proof as long as we know the sign of the divisor(which we normally will need anyway).","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508561158/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508565909","html_url":"https://github.com/apache/tvm/pull/3479#issuecomment-508565909","issue_url":"https://api.github.com/repos/apache/tvm/issues/3479","id":508565909,"node_id":"MDEyOklzc3VlQ29tbWVudDUwODU2NTkwOQ==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-07-04T19:53:25Z","updated_at":"2019-07-04T19:53:38Z","author_association":"MEMBER","body":"cc @derisavi @sgrechanik-h @yzhliu @merrymercy @Hzfengsy @kazum @ZihengJiang ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508565909/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508566098","html_url":"https://github.com/apache/tvm/pull/3477#issuecomment-508566098","issue_url":"https://api.github.com/repos/apache/tvm/issues/3477","id":508566098,"node_id":"MDEyOklzc3VlQ29tbWVudDUwODU2NjA5OA==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-07-04T19:54:53Z","updated_at":"2019-07-04T19:55:06Z","author_association":"MEMBER","body":"@zhiics @tmoreau89 @eqy can you help review this PR?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508566098/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508567241","html_url":"https://github.com/apache/tvm/pull/3483#issuecomment-508567241","issue_url":"https://api.github.com/repos/apache/tvm/issues/3483","id":508567241,"node_id":"MDEyOklzc3VlQ29tbWVudDUwODU2NzI0MQ==","user":{"login":"jroesch","id":696509,"node_id":"MDQ6VXNlcjY5NjUwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/696509?v=4","gravatar_id":"","url":"https://api.github.com/users/jroesch","html_url":"https://github.com/jroesch","followers_url":"https://api.github.com/users/jroesch/followers","following_url":"https://api.github.com/users/jroesch/following{/other_user}","gists_url":"https://api.github.com/users/jroesch/gists{/gist_id}","starred_url":"https://api.github.com/users/jroesch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jroesch/subscriptions","organizations_url":"https://api.github.com/users/jroesch/orgs","repos_url":"https://api.github.com/users/jroesch/repos","events_url":"https://api.github.com/users/jroesch/events{/privacy}","received_events_url":"https://api.github.com/users/jroesch/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-07-04T20:02:51Z","updated_at":"2019-07-04T20:03:29Z","author_association":"MEMBER","body":"Tianqi and I discussed some more, he argues we should just remove and make it so there is no special main function, and we just use main as convention but allow the specification of multiple entry points in the future to passes that do liveness, etc. \r\n\r\nSorry for the back and forth, enjoy the holiday!","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508567241/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508573910","html_url":"https://github.com/apache/tvm/pull/3477#issuecomment-508573910","issue_url":"https://api.github.com/repos/apache/tvm/issues/3477","id":508573910,"node_id":"MDEyOklzc3VlQ29tbWVudDUwODU3MzkxMA==","user":{"login":"tmoreau89","id":5974488,"node_id":"MDQ6VXNlcjU5NzQ0ODg=","avatar_url":"https://avatars.githubusercontent.com/u/5974488?v=4","gravatar_id":"","url":"https://api.github.com/users/tmoreau89","html_url":"https://github.com/tmoreau89","followers_url":"https://api.github.com/users/tmoreau89/followers","following_url":"https://api.github.com/users/tmoreau89/following{/other_user}","gists_url":"https://api.github.com/users/tmoreau89/gists{/gist_id}","starred_url":"https://api.github.com/users/tmoreau89/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tmoreau89/subscriptions","organizations_url":"https://api.github.com/users/tmoreau89/orgs","repos_url":"https://api.github.com/users/tmoreau89/repos","events_url":"https://api.github.com/users/tmoreau89/events{/privacy}","received_events_url":"https://api.github.com/users/tmoreau89/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-07-04T20:47:02Z","updated_at":"2019-07-04T20:47:02Z","author_association":"CONTRIBUTOR","body":"@jwfromm thank you for issuing a fix; since #3135 appears to have broken task extraction for heterogeneous graphs, can we add a simple unit test to catch these errors in the future?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508573910/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508578436","html_url":"https://github.com/apache/tvm/issues/2563#issuecomment-508578436","issue_url":"https://api.github.com/repos/apache/tvm/issues/2563","id":508578436,"node_id":"MDEyOklzc3VlQ29tbWVudDUwODU3ODQzNg==","user":{"login":"weberlo","id":36520469,"node_id":"MDQ6VXNlcjM2NTIwNDY5","avatar_url":"https://avatars.githubusercontent.com/u/36520469?v=4","gravatar_id":"","url":"https://api.github.com/users/weberlo","html_url":"https://github.com/weberlo","followers_url":"https://api.github.com/users/weberlo/followers","following_url":"https://api.github.com/users/weberlo/following{/other_user}","gists_url":"https://api.github.com/users/weberlo/gists{/gist_id}","starred_url":"https://api.github.com/users/weberlo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/weberlo/subscriptions","organizations_url":"https://api.github.com/users/weberlo/orgs","repos_url":"https://api.github.com/users/weberlo/repos","events_url":"https://api.github.com/users/weberlo/events{/privacy}","received_events_url":"https://api.github.com/users/weberlo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-07-04T21:20:03Z","updated_at":"2019-07-04T21:20:03Z","author_association":"CONTRIBUTOR","body":"@grwlf Hi there!  As mentioned above, there are only two requirements for a device to be supported by µTVM: a C cross-compiler toolchain and an implementation of a read/write/execute interface for the device.\r\n\r\nAs far as actual devices that we've tested on, we've primarily been using an emulated host device (implemented in #3227) and [Spike](https://github.com/riscv/riscv-isa-sim), a functional RISC-V simulator.  Since we're using [OpenOCD](http://openocd.org/) to target Spike, any device that supports the [JTAG](https://en.wikipedia.org/wiki/JTAG) protocol is also supported, and we'll be upstreaming the OpenOCD low-level device implementation in a few weeks.\r\n\r\nIn the coming months, we'll be testing our implementation against a [HiFive1](https://www.sifive.com/boards/hifive1-rev-b) board and an [ARM Cortex-M](https://en.wikipedia.org/wiki/ARM_Cortex-M) board (I'll need to check exactly which model).  Let us know if there are any specific boards you're interested in, and otherwise, keep an eye out for the upcoming OpenOCD PR.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508578436/reactions","total_count":4,"+1":4,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508585813","html_url":"https://github.com/apache/tvm/pull/3493#issuecomment-508585813","issue_url":"https://api.github.com/repos/apache/tvm/issues/3493","id":508585813,"node_id":"MDEyOklzc3VlQ29tbWVudDUwODU4NTgxMw==","user":{"login":"zhiics","id":5145158,"node_id":"MDQ6VXNlcjUxNDUxNTg=","avatar_url":"https://avatars.githubusercontent.com/u/5145158?v=4","gravatar_id":"","url":"https://api.github.com/users/zhiics","html_url":"https://github.com/zhiics","followers_url":"https://api.github.com/users/zhiics/followers","following_url":"https://api.github.com/users/zhiics/following{/other_user}","gists_url":"https://api.github.com/users/zhiics/gists{/gist_id}","starred_url":"https://api.github.com/users/zhiics/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zhiics/subscriptions","organizations_url":"https://api.github.com/users/zhiics/orgs","repos_url":"https://api.github.com/users/zhiics/repos","events_url":"https://api.github.com/users/zhiics/events{/privacy}","received_events_url":"https://api.github.com/users/zhiics/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-07-04T22:33:46Z","updated_at":"2019-07-04T23:13:08Z","author_association":"MEMBER","body":"@tqchen yeah, I also thought about the way you were mentioning. Pytorch does provide `PrintLayer` to dump a layer, but popular compilers offer the flag style dumping, e,g. Clang (clang -debug-pass=xx) and GHC (-ddump-xx, as @jroesch mentioned).\r\n\r\nI thought the compiler dumping style is more favorableI and decided to implement it this way because, IMHO, the major compilation pipeline is usually invisible users. For example, they will more frequently access the compilation using opt level in `build_config` without configuring `Sequential` by themselves. Therefore, they only need to debug a pass directly by passing the name of the pass. \r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508585813/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508586739","html_url":"https://github.com/apache/tvm/pull/3483#issuecomment-508586739","issue_url":"https://api.github.com/repos/apache/tvm/issues/3483","id":508586739,"node_id":"MDEyOklzc3VlQ29tbWVudDUwODU4NjczOQ==","user":{"login":"zhiics","id":5145158,"node_id":"MDQ6VXNlcjUxNDUxNTg=","avatar_url":"https://avatars.githubusercontent.com/u/5145158?v=4","gravatar_id":"","url":"https://api.github.com/users/zhiics","html_url":"https://github.com/zhiics","followers_url":"https://api.github.com/users/zhiics/followers","following_url":"https://api.github.com/users/zhiics/following{/other_user}","gists_url":"https://api.github.com/users/zhiics/gists{/gist_id}","starred_url":"https://api.github.com/users/zhiics/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zhiics/subscriptions","organizations_url":"https://api.github.com/users/zhiics/orgs","repos_url":"https://api.github.com/users/zhiics/repos","events_url":"https://api.github.com/users/zhiics/events{/privacy}","received_events_url":"https://api.github.com/users/zhiics/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-07-04T22:45:30Z","updated_at":"2019-07-04T22:48:35Z","author_association":"MEMBER","body":"@jroesch No worries.\r\n\r\nI have one question about the updating the function for a globalvar in a module. I might miss something about the multiple entry points. \r\n\r\nFor example, we may create a module (`mod`) using `from_expr` where a `main` is created or directly create a module using `module({\"main\": func})`.  Now if I have `mod[\"main\"] = func1`, should I update the function for `main`, or should I keep both? I think we should just check if `main` is in the global list, if so, we then just update the function, right? Originally, we just update the function for `entry_func`","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508586739/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508588282","html_url":"https://github.com/apache/tvm/pull/3494#issuecomment-508588282","issue_url":"https://api.github.com/repos/apache/tvm/issues/3494","id":508588282,"node_id":"MDEyOklzc3VlQ29tbWVudDUwODU4ODI4Mg==","user":{"login":"liangfu","id":857821,"node_id":"MDQ6VXNlcjg1NzgyMQ==","avatar_url":"https://avatars.githubusercontent.com/u/857821?v=4","gravatar_id":"","url":"https://api.github.com/users/liangfu","html_url":"https://github.com/liangfu","followers_url":"https://api.github.com/users/liangfu/followers","following_url":"https://api.github.com/users/liangfu/following{/other_user}","gists_url":"https://api.github.com/users/liangfu/gists{/gist_id}","starred_url":"https://api.github.com/users/liangfu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/liangfu/subscriptions","organizations_url":"https://api.github.com/users/liangfu/orgs","repos_url":"https://api.github.com/users/liangfu/repos","events_url":"https://api.github.com/users/liangfu/events{/privacy}","received_events_url":"https://api.github.com/users/liangfu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-07-04T23:05:26Z","updated_at":"2019-07-04T23:05:26Z","author_association":"MEMBER","body":"Sure, i could write a guide. To be comparable with PYNQ linux environment, I think it will be a long story with linux kernel compilation, bitbake configurations for custom Angstrom filesystem compilation (many components are missing in the distribution provided by Terasic), environment setup for cross compilation of CMA kernel module and the TVM libraries.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508588282/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508589560","html_url":"https://github.com/apache/tvm/pull/3477#issuecomment-508589560","issue_url":"https://api.github.com/repos/apache/tvm/issues/3477","id":508589560,"node_id":"MDEyOklzc3VlQ29tbWVudDUwODU4OTU2MA==","user":{"login":"zhiics","id":5145158,"node_id":"MDQ6VXNlcjUxNDUxNTg=","avatar_url":"https://avatars.githubusercontent.com/u/5145158?v=4","gravatar_id":"","url":"https://api.github.com/users/zhiics","html_url":"https://github.com/zhiics","followers_url":"https://api.github.com/users/zhiics/followers","following_url":"https://api.github.com/users/zhiics/following{/other_user}","gists_url":"https://api.github.com/users/zhiics/gists{/gist_id}","starred_url":"https://api.github.com/users/zhiics/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zhiics/subscriptions","organizations_url":"https://api.github.com/users/zhiics/orgs","repos_url":"https://api.github.com/users/zhiics/repos","events_url":"https://api.github.com/users/zhiics/events{/privacy}","received_events_url":"https://api.github.com/users/zhiics/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-07-04T23:23:11Z","updated_at":"2019-07-04T23:23:11Z","author_association":"MEMBER","body":"@jwfromm This doesn't really enable tuning on heterogeneous graph but only retrieve whatever the first target in the target list, right?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508589560/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508590048","html_url":"https://github.com/apache/tvm/pull/3494#issuecomment-508590048","issue_url":"https://api.github.com/repos/apache/tvm/issues/3494","id":508590048,"node_id":"MDEyOklzc3VlQ29tbWVudDUwODU5MDA0OA==","user":{"login":"tmoreau89","id":5974488,"node_id":"MDQ6VXNlcjU5NzQ0ODg=","avatar_url":"https://avatars.githubusercontent.com/u/5974488?v=4","gravatar_id":"","url":"https://api.github.com/users/tmoreau89","html_url":"https://github.com/tmoreau89","followers_url":"https://api.github.com/users/tmoreau89/followers","following_url":"https://api.github.com/users/tmoreau89/following{/other_user}","gists_url":"https://api.github.com/users/tmoreau89/gists{/gist_id}","starred_url":"https://api.github.com/users/tmoreau89/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tmoreau89/subscriptions","organizations_url":"https://api.github.com/users/tmoreau89/orgs","repos_url":"https://api.github.com/users/tmoreau89/repos","events_url":"https://api.github.com/users/tmoreau89/events{/privacy}","received_events_url":"https://api.github.com/users/tmoreau89/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-07-04T23:30:14Z","updated_at":"2019-07-04T23:30:14Z","author_association":"CONTRIBUTOR","body":"are you building your own linux kernel to get the RPC server to execute on the DE10 nano? If that is too long to describe in the install.md, can you prepare a google doc that describes the steps? It should be reproducible so other people can try the DE10Nano example themselves.\r\n","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508590048/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508590525","html_url":"https://github.com/apache/tvm/pull/3493#issuecomment-508590525","issue_url":"https://api.github.com/repos/apache/tvm/issues/3493","id":508590525,"node_id":"MDEyOklzc3VlQ29tbWVudDUwODU5MDUyNQ==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-07-04T23:36:26Z","updated_at":"2019-07-04T23:38:40Z","author_association":"MEMBER","body":"The reason that major compiler pipeline are invisible to the users is because compiler pipeline themselves are not composed pragmatically, but pre configured. The only option to tweak major compiler pipelines were CLI, where it makes sense to use string names.\r\n\r\nWhen we are using python API it is good to use the pragmatic approach as Pytorch did, rather than Limiting our programming model to CLI style \r\n\r\nWe could also provide snippet of the default pipeline so a user can modify pragmatically in python ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508590525/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508591603","html_url":"https://github.com/apache/tvm/pull/3493#issuecomment-508591603","issue_url":"https://api.github.com/repos/apache/tvm/issues/3493","id":508591603,"node_id":"MDEyOklzc3VlQ29tbWVudDUwODU5MTYwMw==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-07-04T23:50:03Z","updated_at":"2019-07-05T00:00:18Z","author_association":"MEMBER","body":"I think the fundamental question here is whether or not do we want users to pragmatically customize optimization pipelines. One could argue that, like traditional compilers, most pipelines are pre-configured officially and do not need to be tweaked. \r\n\r\nOn the other hand, we could also say that given the different kinds of optimizations that we want to perform, there is a bigger amount of demand to pragmatically construct pipelines. It will become more and more important to make users' life easier to do so(just like making users' life easier to build new models in deep learning).  In that case, we might want to go beyond the API offered by traditional compilers. \r\n\r\nThis was just like the argument of deep learning framework configuration evolution, the first stage(Caffe1) config file is just like the options in traditional compilers, then we have TF/MX/Pytorch that offers more pragmatic constructions. \r\n\r\nWould the same thing happen in our case? Should our pipeline construction be treated as static stages as in traditional compilers, or should they be like model constructions that can benefit from greater diversity and ease of exploration? I do not know, but at least I personally think we should strive to enable that possibility. And learn more from deep learning frameworks like Pytorch.\r\n\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508591603/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508592950","html_url":"https://github.com/apache/tvm/pull/3493#issuecomment-508592950","issue_url":"https://api.github.com/repos/apache/tvm/issues/3493","id":508592950,"node_id":"MDEyOklzc3VlQ29tbWVudDUwODU5Mjk1MA==","user":{"login":"eqy","id":2239616,"node_id":"MDQ6VXNlcjIyMzk2MTY=","avatar_url":"https://avatars.githubusercontent.com/u/2239616?v=4","gravatar_id":"","url":"https://api.github.com/users/eqy","html_url":"https://github.com/eqy","followers_url":"https://api.github.com/users/eqy/followers","following_url":"https://api.github.com/users/eqy/following{/other_user}","gists_url":"https://api.github.com/users/eqy/gists{/gist_id}","starred_url":"https://api.github.com/users/eqy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eqy/subscriptions","organizations_url":"https://api.github.com/users/eqy/orgs","repos_url":"https://api.github.com/users/eqy/repos","events_url":"https://api.github.com/users/eqy/events{/privacy}","received_events_url":"https://api.github.com/users/eqy/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-07-05T00:05:52Z","updated_at":"2019-07-05T00:05:52Z","author_association":"CONTRIBUTOR","body":"Hooking something in to print every time a pass is run might be too cumbersome to use in some situations, such as when `FoldConstant` is called many times in another pass. I think \"show me what happens after this pass\" is a more common pattern than \"dump every time this pass is run.\"","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508592950/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508595716","html_url":"https://github.com/apache/tvm/pull/3497#issuecomment-508595716","issue_url":"https://api.github.com/repos/apache/tvm/issues/3497","id":508595716,"node_id":"MDEyOklzc3VlQ29tbWVudDUwODU5NTcxNg==","user":{"login":"eqy","id":2239616,"node_id":"MDQ6VXNlcjIyMzk2MTY=","avatar_url":"https://avatars.githubusercontent.com/u/2239616?v=4","gravatar_id":"","url":"https://api.github.com/users/eqy","html_url":"https://github.com/eqy","followers_url":"https://api.github.com/users/eqy/followers","following_url":"https://api.github.com/users/eqy/following{/other_user}","gists_url":"https://api.github.com/users/eqy/gists{/gist_id}","starred_url":"https://api.github.com/users/eqy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eqy/subscriptions","organizations_url":"https://api.github.com/users/eqy/orgs","repos_url":"https://api.github.com/users/eqy/repos","events_url":"https://api.github.com/users/eqy/events{/privacy}","received_events_url":"https://api.github.com/users/eqy/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-07-05T00:37:21Z","updated_at":"2019-07-05T00:37:21Z","author_association":"CONTRIBUTOR","body":"@tmoreau89 can you retrigger CI so we can merge?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508595716/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508600688","html_url":"https://github.com/apache/tvm/pull/3494#issuecomment-508600688","issue_url":"https://api.github.com/repos/apache/tvm/issues/3494","id":508600688,"node_id":"MDEyOklzc3VlQ29tbWVudDUwODYwMDY4OA==","user":{"login":"liangfu","id":857821,"node_id":"MDQ6VXNlcjg1NzgyMQ==","avatar_url":"https://avatars.githubusercontent.com/u/857821?v=4","gravatar_id":"","url":"https://api.github.com/users/liangfu","html_url":"https://github.com/liangfu","followers_url":"https://api.github.com/users/liangfu/followers","following_url":"https://api.github.com/users/liangfu/following{/other_user}","gists_url":"https://api.github.com/users/liangfu/gists{/gist_id}","starred_url":"https://api.github.com/users/liangfu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/liangfu/subscriptions","organizations_url":"https://api.github.com/users/liangfu/orgs","repos_url":"https://api.github.com/users/liangfu/repos","events_url":"https://api.github.com/users/liangfu/events{/privacy}","received_events_url":"https://api.github.com/users/liangfu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-07-05T01:24:30Z","updated_at":"2019-07-05T01:24:30Z","author_association":"MEMBER","body":"That's because the linux kernel version in the disk image provided by Terasic is not compatible with the latest toolchain provided in Intel Quartus Prime. On the other hand, as requested, I would provide a document that describes sufficient details in setting up the running environment for VTA.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508600688/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508617623","html_url":"https://github.com/apache/tvm/issues/3428#issuecomment-508617623","issue_url":"https://api.github.com/repos/apache/tvm/issues/3428","id":508617623,"node_id":"MDEyOklzc3VlQ29tbWVudDUwODYxNzYyMw==","user":{"login":"FrozenGene","id":7287321,"node_id":"MDQ6VXNlcjcyODczMjE=","avatar_url":"https://avatars.githubusercontent.com/u/7287321?v=4","gravatar_id":"","url":"https://api.github.com/users/FrozenGene","html_url":"https://github.com/FrozenGene","followers_url":"https://api.github.com/users/FrozenGene/followers","following_url":"https://api.github.com/users/FrozenGene/following{/other_user}","gists_url":"https://api.github.com/users/FrozenGene/gists{/gist_id}","starred_url":"https://api.github.com/users/FrozenGene/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/FrozenGene/subscriptions","organizations_url":"https://api.github.com/users/FrozenGene/orgs","repos_url":"https://api.github.com/users/FrozenGene/repos","events_url":"https://api.github.com/users/FrozenGene/events{/privacy}","received_events_url":"https://api.github.com/users/FrozenGene/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-07-05T03:28:17Z","updated_at":"2019-07-05T03:29:10Z","author_association":"MEMBER","body":"@gasgallo Could you share the model (or reduced model, for example, just one convolution having your problem)? I guess we don't support `explicit_padding `, According to the [TF API doc](https://www.tensorflow.org/api_docs/python/tf/nn/conv2d):\r\n\r\n> When explicit padding is used and data_format is \"NHWC\", this should be in the form [[0, 0], [pad_top, pad_bottom], [pad_left, pad_right], [0, 0]]. When explicit padding used and data_format is \"NCHW\", this should be in the form [[0, 0], [0, 0], [pad_top, pad_bottom], [pad_left, pad_right]].\r\n\r\nWe shouldn't ignore / delete this attribute. We should insert `pad` operator according to the value.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508617623/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508629615","html_url":"https://github.com/apache/tvm/pull/3477#issuecomment-508629615","issue_url":"https://api.github.com/repos/apache/tvm/issues/3477","id":508629615,"node_id":"MDEyOklzc3VlQ29tbWVudDUwODYyOTYxNQ==","user":{"login":"jwfromm","id":9874242,"node_id":"MDQ6VXNlcjk4NzQyNDI=","avatar_url":"https://avatars.githubusercontent.com/u/9874242?v=4","gravatar_id":"","url":"https://api.github.com/users/jwfromm","html_url":"https://github.com/jwfromm","followers_url":"https://api.github.com/users/jwfromm/followers","following_url":"https://api.github.com/users/jwfromm/following{/other_user}","gists_url":"https://api.github.com/users/jwfromm/gists{/gist_id}","starred_url":"https://api.github.com/users/jwfromm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jwfromm/subscriptions","organizations_url":"https://api.github.com/users/jwfromm/orgs","repos_url":"https://api.github.com/users/jwfromm/repos","events_url":"https://api.github.com/users/jwfromm/events{/privacy}","received_events_url":"https://api.github.com/users/jwfromm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-07-05T05:00:28Z","updated_at":"2019-07-05T05:00:28Z","author_association":"CONTRIBUTOR","body":"This only allows heterogeneous graphs to built properly during task extraction. When actually generating the tasks we have to default to one target as TaskExtractEnv doesn't currently keep track of relay device placement. I'm not sure this is a significant issue though as the main use case here is when certain functions (typically custom functions) are only supported on a target other than the one being tuned on. For example, a graph of convolutions that ends in a cblas contrib layer needs to be tuned on GPU but will cause errors from the cblas layer not being supported on cuda without this change.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508629615/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508647748","html_url":"https://github.com/apache/tvm/issues/2062#issuecomment-508647748","issue_url":"https://api.github.com/repos/apache/tvm/issues/2062","id":508647748,"node_id":"MDEyOklzc3VlQ29tbWVudDUwODY0Nzc0OA==","user":{"login":"sunstarchan","id":6760921,"node_id":"MDQ6VXNlcjY3NjA5MjE=","avatar_url":"https://avatars.githubusercontent.com/u/6760921?v=4","gravatar_id":"","url":"https://api.github.com/users/sunstarchan","html_url":"https://github.com/sunstarchan","followers_url":"https://api.github.com/users/sunstarchan/followers","following_url":"https://api.github.com/users/sunstarchan/following{/other_user}","gists_url":"https://api.github.com/users/sunstarchan/gists{/gist_id}","starred_url":"https://api.github.com/users/sunstarchan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sunstarchan/subscriptions","organizations_url":"https://api.github.com/users/sunstarchan/orgs","repos_url":"https://api.github.com/users/sunstarchan/repos","events_url":"https://api.github.com/users/sunstarchan/events{/privacy}","received_events_url":"https://api.github.com/users/sunstarchan/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-07-05T06:36:28Z","updated_at":"2019-07-05T06:36:28Z","author_association":"NONE","body":"As I remember, this kind of issue is caused by linking libtvm_runtime twice in the project. So please check the configuration for the project to make sure libtvm_runtime is only linked once in a place. \r\n@dragonview @xizi ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508647748/reactions","total_count":3,"+1":3,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508650961","html_url":"https://github.com/apache/tvm/issues/2351#issuecomment-508650961","issue_url":"https://api.github.com/repos/apache/tvm/issues/2351","id":508650961,"node_id":"MDEyOklzc3VlQ29tbWVudDUwODY1MDk2MQ==","user":{"login":"anijain2305","id":13822661,"node_id":"MDQ6VXNlcjEzODIyNjYx","avatar_url":"https://avatars.githubusercontent.com/u/13822661?v=4","gravatar_id":"","url":"https://api.github.com/users/anijain2305","html_url":"https://github.com/anijain2305","followers_url":"https://api.github.com/users/anijain2305/followers","following_url":"https://api.github.com/users/anijain2305/following{/other_user}","gists_url":"https://api.github.com/users/anijain2305/gists{/gist_id}","starred_url":"https://api.github.com/users/anijain2305/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/anijain2305/subscriptions","organizations_url":"https://api.github.com/users/anijain2305/orgs","repos_url":"https://api.github.com/users/anijain2305/repos","events_url":"https://api.github.com/users/anijain2305/events{/privacy}","received_events_url":"https://api.github.com/users/anijain2305/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-07-05T06:50:37Z","updated_at":"2019-07-05T06:50:37Z","author_association":"CONTRIBUTOR","body":"![0001](https://user-images.githubusercontent.com/13822661/60703346-6d824080-9eb6-11e9-9ad3-bc01f5e17451.jpg)\r\n![0002](https://user-images.githubusercontent.com/13822661/60703347-6d824080-9eb6-11e9-89ed-e34f270d3f00.jpg)\r\n![0003](https://user-images.githubusercontent.com/13822661/60703349-6e1ad700-9eb6-11e9-9cef-a3fc212b648c.jpg)","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508650961/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508657057","html_url":"https://github.com/apache/tvm/pull/3493#issuecomment-508657057","issue_url":"https://api.github.com/repos/apache/tvm/issues/3493","id":508657057,"node_id":"MDEyOklzc3VlQ29tbWVudDUwODY1NzA1Nw==","user":{"login":"kevinthesun","id":15520525,"node_id":"MDQ6VXNlcjE1NTIwNTI1","avatar_url":"https://avatars.githubusercontent.com/u/15520525?v=4","gravatar_id":"","url":"https://api.github.com/users/kevinthesun","html_url":"https://github.com/kevinthesun","followers_url":"https://api.github.com/users/kevinthesun/followers","following_url":"https://api.github.com/users/kevinthesun/following{/other_user}","gists_url":"https://api.github.com/users/kevinthesun/gists{/gist_id}","starred_url":"https://api.github.com/users/kevinthesun/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kevinthesun/subscriptions","organizations_url":"https://api.github.com/users/kevinthesun/orgs","repos_url":"https://api.github.com/users/kevinthesun/repos","events_url":"https://api.github.com/users/kevinthesun/events{/privacy}","received_events_url":"https://api.github.com/users/kevinthesun/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-07-05T07:16:10Z","updated_at":"2019-07-05T07:16:10Z","author_association":"CONTRIBUTOR","body":"@tqchen I think it's helpful to encourage user to at least be able to customize(for now just turn on/off?) certain optimization related passes, such as CombineParallelConv2d. The usefulness of these passes can be highly related to input models, and some experiments might be beneficial.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508657057/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508657963","html_url":"https://github.com/apache/tvm/issues/2351#issuecomment-508657963","issue_url":"https://api.github.com/repos/apache/tvm/issues/2351","id":508657963,"node_id":"MDEyOklzc3VlQ29tbWVudDUwODY1Nzk2Mw==","user":{"login":"FrozenGene","id":7287321,"node_id":"MDQ6VXNlcjcyODczMjE=","avatar_url":"https://avatars.githubusercontent.com/u/7287321?v=4","gravatar_id":"","url":"https://api.github.com/users/FrozenGene","html_url":"https://github.com/FrozenGene","followers_url":"https://api.github.com/users/FrozenGene/followers","following_url":"https://api.github.com/users/FrozenGene/following{/other_user}","gists_url":"https://api.github.com/users/FrozenGene/gists{/gist_id}","starred_url":"https://api.github.com/users/FrozenGene/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/FrozenGene/subscriptions","organizations_url":"https://api.github.com/users/FrozenGene/orgs","repos_url":"https://api.github.com/users/FrozenGene/repos","events_url":"https://api.github.com/users/FrozenGene/events{/privacy}","received_events_url":"https://api.github.com/users/FrozenGene/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-07-05T07:19:35Z","updated_at":"2019-07-05T07:22:13Z","author_association":"MEMBER","body":"@anijain2305 Generally Good. About the performance of HW, let us say ARM CPU, For the depthwise convolution, we even could optimize without tensorize. After some work of optimization for int8 using pure TVM schedule without tensorize, we could also beat QNNPACK (some workload we test we even could beyond 50% on ARM64 platform).\r\n\r\n However, for normal convolution, without tensorize, it is hard to achieve best performance. When we use tensorize, one thing is that we combine `bias_add`  / `requantize` into `qnn.conv2d` to avoid memory access. As @jackwish 's previous investigation, we find it is very important on ARM CPU's performance. So, if we implement it as the diagram, I only concern this thing.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508657963/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508666574","html_url":"https://github.com/apache/tvm/pull/3493#issuecomment-508666574","issue_url":"https://api.github.com/repos/apache/tvm/issues/3493","id":508666574,"node_id":"MDEyOklzc3VlQ29tbWVudDUwODY2NjU3NA==","user":{"login":"zhiics","id":5145158,"node_id":"MDQ6VXNlcjUxNDUxNTg=","avatar_url":"https://avatars.githubusercontent.com/u/5145158?v=4","gravatar_id":"","url":"https://api.github.com/users/zhiics","html_url":"https://github.com/zhiics","followers_url":"https://api.github.com/users/zhiics/followers","following_url":"https://api.github.com/users/zhiics/following{/other_user}","gists_url":"https://api.github.com/users/zhiics/gists{/gist_id}","starred_url":"https://api.github.com/users/zhiics/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zhiics/subscriptions","organizations_url":"https://api.github.com/users/zhiics/orgs","repos_url":"https://api.github.com/users/zhiics/repos","events_url":"https://api.github.com/users/zhiics/events{/privacy}","received_events_url":"https://api.github.com/users/zhiics/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-07-05T07:50:50Z","updated_at":"2019-07-05T22:08:19Z","author_association":"MEMBER","body":"Thanks for all the discussion and feedback:)  I totally agree that it is fundamentally more about if the programmatic or the default compilation is more common used. This is something I am not sure as well. I am very glad to hear the voice from the community.\r\n\r\nIf we go the programmatic way, I think we probably need to bring the python pipeline back because otherwise users may need to intrusively insert `DebugPrint` pass in the C++ backend and recompile. \r\n\r\nAnother thing we probably need to be aware of is that if we only use `opt_level` to control the compilation without baking in the `transform.xx` in the `build_module` in the future. It might not be quite convenient to insert `DebugPrint` after a certain pass.\r\n\r\nOr should we enable both? That may seem overkilling.\r\n\r\nAny suggestions/ideas about this?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508666574/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508761459","html_url":"https://github.com/apache/tvm/issues/3478#issuecomment-508761459","issue_url":"https://api.github.com/repos/apache/tvm/issues/3478","id":508761459,"node_id":"MDEyOklzc3VlQ29tbWVudDUwODc2MTQ1OQ==","user":{"login":"derisavi","id":13456984,"node_id":"MDQ6VXNlcjEzNDU2OTg0","avatar_url":"https://avatars.githubusercontent.com/u/13456984?v=4","gravatar_id":"","url":"https://api.github.com/users/derisavi","html_url":"https://github.com/derisavi","followers_url":"https://api.github.com/users/derisavi/followers","following_url":"https://api.github.com/users/derisavi/following{/other_user}","gists_url":"https://api.github.com/users/derisavi/gists{/gist_id}","starred_url":"https://api.github.com/users/derisavi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/derisavi/subscriptions","organizations_url":"https://api.github.com/users/derisavi/orgs","repos_url":"https://api.github.com/users/derisavi/repos","events_url":"https://api.github.com/users/derisavi/events{/privacy}","received_events_url":"https://api.github.com/users/derisavi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-07-05T13:37:08Z","updated_at":"2019-07-05T13:37:08Z","author_association":"CONTRIBUTOR","body":"Not sure whether the decision has already been done but I'll put my two cents here.\r\n\r\nYou have covered all the tradeoffs. Since in most cases, the divisor is positive, I believe the important move was to add one of floordiv or euclideandiv (which you are doing now). The difference between floordiv and euclideandiv will not have drastic effect on how much we can simplify the code.\r\n\r\nNevertheless, IMHO, we should choose Euclidean for the followin reasons:\r\n1) it's more important to care about ease/strength of simplification and analysis and less about familiarity. \r\n2) familiarity is a subjective matter and it depends on the audience. The audience of this operator (and in general Halide IR) are mostly people who are developing the core compiler. In the long run, this audience cares mostly about what's more powerful in terms of analysis, simplification, and interoperability with other libs and I expect people to become familiar (if they are not already) with euclideandiv very quickly. \r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508761459/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508790037","html_url":"https://github.com/apache/tvm/issues/2351#issuecomment-508790037","issue_url":"https://api.github.com/repos/apache/tvm/issues/2351","id":508790037,"node_id":"MDEyOklzc3VlQ29tbWVudDUwODc5MDAzNw==","user":{"login":"anijain2305","id":13822661,"node_id":"MDQ6VXNlcjEzODIyNjYx","avatar_url":"https://avatars.githubusercontent.com/u/13822661?v=4","gravatar_id":"","url":"https://api.github.com/users/anijain2305","html_url":"https://github.com/anijain2305","followers_url":"https://api.github.com/users/anijain2305/followers","following_url":"https://api.github.com/users/anijain2305/following{/other_user}","gists_url":"https://api.github.com/users/anijain2305/gists{/gist_id}","starred_url":"https://api.github.com/users/anijain2305/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/anijain2305/subscriptions","organizations_url":"https://api.github.com/users/anijain2305/orgs","repos_url":"https://api.github.com/users/anijain2305/repos","events_url":"https://api.github.com/users/anijain2305/events{/privacy}","received_events_url":"https://api.github.com/users/anijain2305/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-07-05T15:13:36Z","updated_at":"2019-07-05T15:13:36Z","author_association":"CONTRIBUTOR","body":"@FrozenGene Thanks for the quick feedback on the design.\r\n\r\nI understand the performance concern. Let's try to tackle them in fusion. Fusion already performs compute_inline to bring the computation at right location. Hopefully, with some tagging and with some arm-twisting, we can achieve same tensorize schedule that you are suggesting.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508790037/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508822339","html_url":"https://github.com/apache/tvm/issues/3478#issuecomment-508822339","issue_url":"https://api.github.com/repos/apache/tvm/issues/3478","id":508822339,"node_id":"MDEyOklzc3VlQ29tbWVudDUwODgyMjMzOQ==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-07-05T17:30:15Z","updated_at":"2019-07-05T17:32:47Z","author_association":"MEMBER","body":"Thanks, @derisavi @sgrechanik-h for putting in your thoughts. Let me try to summarize the trade-offs dimensions so far.\r\n\r\n## Power of simplification\r\n- They are going to be similar because in most cases divisors are positive.\r\n- Floordiv and euclidean div are the same when divisors are positive.\r\n\r\n## Consistency with Existing Choices\r\n- Floordiv is used by python, which means we could in the future change operator overload in python to make use of it for better consistency.\r\n- Euclidean div is used by Halide and smt-libs.\r\n- Floordiv is used by isl and MLIR.\r\n\r\n## Developer familarity\r\nFloordiv is relatively easier to explain, and can be written as ```floor(a/b)```. Low-level compiler developers might be able to understand both after some time.\r\n\r\n## Cost of Lowering\r\nNeed to think about the cost of lowering: \r\n- When both signs of dividend and divisor are known, can lower to trunc div\r\n- When sign of divisor is known, floordiv and eucildean div are can have the same rule.\r\n- A bit unclear when the sign of divisor is unknown, which I hope would never happen, but need to discuss the rules.\r\n\r\n\r\n\r\n\r\n\r\n ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508822339/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508824248","html_url":"https://github.com/apache/tvm/issues/2351#issuecomment-508824248","issue_url":"https://api.github.com/repos/apache/tvm/issues/2351","id":508824248,"node_id":"MDEyOklzc3VlQ29tbWVudDUwODgyNDI0OA==","user":{"login":"jnorwood","id":1499591,"node_id":"MDQ6VXNlcjE0OTk1OTE=","avatar_url":"https://avatars.githubusercontent.com/u/1499591?v=4","gravatar_id":"","url":"https://api.github.com/users/jnorwood","html_url":"https://github.com/jnorwood","followers_url":"https://api.github.com/users/jnorwood/followers","following_url":"https://api.github.com/users/jnorwood/following{/other_user}","gists_url":"https://api.github.com/users/jnorwood/gists{/gist_id}","starred_url":"https://api.github.com/users/jnorwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jnorwood/subscriptions","organizations_url":"https://api.github.com/users/jnorwood/orgs","repos_url":"https://api.github.com/users/jnorwood/repos","events_url":"https://api.github.com/users/jnorwood/events{/privacy}","received_events_url":"https://api.github.com/users/jnorwood/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-07-05T17:39:13Z","updated_at":"2019-07-05T17:39:13Z","author_association":"NONE","body":"I just want to point out, again, that the output_activation_min and  output_activation_max are required even if there is no specified activation operation, since they provide saturation to the quantization range ... avoiding overflow error. \r\n\r\nAlso, if you fuse  activation operations during training, prior to the re-quantization, then you gain the extra bit of resolution for quantization.  I believe tflite has done this in all their quantized inference models in their repository.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508824248/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508826452","html_url":"https://github.com/apache/tvm/pull/3494#issuecomment-508826452","issue_url":"https://api.github.com/repos/apache/tvm/issues/3494","id":508826452,"node_id":"MDEyOklzc3VlQ29tbWVudDUwODgyNjQ1Mg==","user":{"login":"tmoreau89","id":5974488,"node_id":"MDQ6VXNlcjU5NzQ0ODg=","avatar_url":"https://avatars.githubusercontent.com/u/5974488?v=4","gravatar_id":"","url":"https://api.github.com/users/tmoreau89","html_url":"https://github.com/tmoreau89","followers_url":"https://api.github.com/users/tmoreau89/followers","following_url":"https://api.github.com/users/tmoreau89/following{/other_user}","gists_url":"https://api.github.com/users/tmoreau89/gists{/gist_id}","starred_url":"https://api.github.com/users/tmoreau89/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tmoreau89/subscriptions","organizations_url":"https://api.github.com/users/tmoreau89/orgs","repos_url":"https://api.github.com/users/tmoreau89/repos","events_url":"https://api.github.com/users/tmoreau89/events{/privacy}","received_events_url":"https://api.github.com/users/tmoreau89/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-07-05T17:49:43Z","updated_at":"2019-07-05T17:49:43Z","author_association":"CONTRIBUTOR","body":"In that case I suggest to specify in the guide to install a previous version of Quartus prime to be compatible with that test platform.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508826452/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508826492","html_url":"https://github.com/apache/tvm/pull/3494#issuecomment-508826492","issue_url":"https://api.github.com/repos/apache/tvm/issues/3494","id":508826492,"node_id":"MDEyOklzc3VlQ29tbWVudDUwODgyNjQ5Mg==","user":{"login":"tmoreau89","id":5974488,"node_id":"MDQ6VXNlcjU5NzQ0ODg=","avatar_url":"https://avatars.githubusercontent.com/u/5974488?v=4","gravatar_id":"","url":"https://api.github.com/users/tmoreau89","html_url":"https://github.com/tmoreau89","followers_url":"https://api.github.com/users/tmoreau89/followers","following_url":"https://api.github.com/users/tmoreau89/following{/other_user}","gists_url":"https://api.github.com/users/tmoreau89/gists{/gist_id}","starred_url":"https://api.github.com/users/tmoreau89/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tmoreau89/subscriptions","organizations_url":"https://api.github.com/users/tmoreau89/orgs","repos_url":"https://api.github.com/users/tmoreau89/repos","events_url":"https://api.github.com/users/tmoreau89/events{/privacy}","received_events_url":"https://api.github.com/users/tmoreau89/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-07-05T17:49:56Z","updated_at":"2019-07-05T17:49:56Z","author_association":"CONTRIBUTOR","body":"Which one did you use to compile the test design?\r\n","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508826492/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508827392","html_url":"https://github.com/apache/tvm/pull/3477#issuecomment-508827392","issue_url":"https://api.github.com/repos/apache/tvm/issues/3477","id":508827392,"node_id":"MDEyOklzc3VlQ29tbWVudDUwODgyNzM5Mg==","user":{"login":"tmoreau89","id":5974488,"node_id":"MDQ6VXNlcjU5NzQ0ODg=","avatar_url":"https://avatars.githubusercontent.com/u/5974488?v=4","gravatar_id":"","url":"https://api.github.com/users/tmoreau89","html_url":"https://github.com/tmoreau89","followers_url":"https://api.github.com/users/tmoreau89/followers","following_url":"https://api.github.com/users/tmoreau89/following{/other_user}","gists_url":"https://api.github.com/users/tmoreau89/gists{/gist_id}","starred_url":"https://api.github.com/users/tmoreau89/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tmoreau89/subscriptions","organizations_url":"https://api.github.com/users/tmoreau89/orgs","repos_url":"https://api.github.com/users/tmoreau89/repos","events_url":"https://api.github.com/users/tmoreau89/events{/privacy}","received_events_url":"https://api.github.com/users/tmoreau89/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-07-05T17:54:22Z","updated_at":"2019-07-05T17:54:37Z","author_association":"CONTRIBUTOR","body":"@jwfromm can we add a simple unit test to make sure that autotvm task extraction will not break on heterogeneous graphs?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508827392/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508827591","html_url":"https://github.com/apache/tvm/pull/3227#issuecomment-508827591","issue_url":"https://api.github.com/repos/apache/tvm/issues/3227","id":508827591,"node_id":"MDEyOklzc3VlQ29tbWVudDUwODgyNzU5MQ==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-07-05T17:55:16Z","updated_at":"2019-07-05T17:55:16Z","author_association":"MEMBER","body":"@weberlo please look into the ci error, will do a round of review today","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508827591/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508832024","html_url":"https://github.com/apache/tvm/issues/3478#issuecomment-508832024","issue_url":"https://api.github.com/repos/apache/tvm/issues/3478","id":508832024,"node_id":"MDEyOklzc3VlQ29tbWVudDUwODgzMjAyNA==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-07-05T18:16:44Z","updated_at":"2019-07-05T18:16:44Z","author_association":"MEMBER","body":"To summarize the discussion so far. I think everyone agrees that we should introduce one of FloorDiv or EuclideanDiv, and this is a pretty close call (see the technical summary above).\r\n\r\n@derisavi @sgrechanik-h suggested eucildean div for the reason of being consistent with Halide smt-libs. My understanding atm is that while we have different thoughts, we mostly agree that adding either floordiv or eucildean div would be a good improvement. We just need to decide which one. I am still slightly lean toward floordiv given that it is conceptually easier and consistent with python3, MLIR, but would still love to hear further thoughts if we have a strong opinion against the choice.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508832024/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508839500","html_url":"https://github.com/apache/tvm/pull/3483#issuecomment-508839500","issue_url":"https://api.github.com/repos/apache/tvm/issues/3483","id":508839500,"node_id":"MDEyOklzc3VlQ29tbWVudDUwODgzOTUwMA==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-07-05T18:55:56Z","updated_at":"2019-07-05T18:55:56Z","author_association":"MEMBER","body":"@zhiics I think we should update the \"main\" just as if it is a normal function","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508839500/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508859637","html_url":"https://github.com/apache/tvm/pull/3488#issuecomment-508859637","issue_url":"https://api.github.com/repos/apache/tvm/issues/3488","id":508859637,"node_id":"MDEyOklzc3VlQ29tbWVudDUwODg1OTYzNw==","user":{"login":"slyubomirsky","id":5624871,"node_id":"MDQ6VXNlcjU2MjQ4NzE=","avatar_url":"https://avatars.githubusercontent.com/u/5624871?v=4","gravatar_id":"","url":"https://api.github.com/users/slyubomirsky","html_url":"https://github.com/slyubomirsky","followers_url":"https://api.github.com/users/slyubomirsky/followers","following_url":"https://api.github.com/users/slyubomirsky/following{/other_user}","gists_url":"https://api.github.com/users/slyubomirsky/gists{/gist_id}","starred_url":"https://api.github.com/users/slyubomirsky/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/slyubomirsky/subscriptions","organizations_url":"https://api.github.com/users/slyubomirsky/orgs","repos_url":"https://api.github.com/users/slyubomirsky/repos","events_url":"https://api.github.com/users/slyubomirsky/events{/privacy}","received_events_url":"https://api.github.com/users/slyubomirsky/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-07-05T20:49:54Z","updated_at":"2019-07-05T20:52:08Z","author_association":"CONTRIBUTOR","body":"I think I agree with Tianqi and Wei; I am not sure a `fatal` expression is as deep a change to the semantics as, say, `ref`. I suppose it might be hard to make such a comparison since exiting the program is left to syscalls in many languages, but a special `fatal` function with the type `() -> ()` wouldn't require adding AST nodes and probably wouldn't require much messing with language internals.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508859637/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508860915","html_url":"https://github.com/apache/tvm/pull/3369#issuecomment-508860915","issue_url":"https://api.github.com/repos/apache/tvm/issues/3369","id":508860915,"node_id":"MDEyOklzc3VlQ29tbWVudDUwODg2MDkxNQ==","user":{"login":"jroesch","id":696509,"node_id":"MDQ6VXNlcjY5NjUwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/696509?v=4","gravatar_id":"","url":"https://api.github.com/users/jroesch","html_url":"https://github.com/jroesch","followers_url":"https://api.github.com/users/jroesch/followers","following_url":"https://api.github.com/users/jroesch/following{/other_user}","gists_url":"https://api.github.com/users/jroesch/gists{/gist_id}","starred_url":"https://api.github.com/users/jroesch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jroesch/subscriptions","organizations_url":"https://api.github.com/users/jroesch/orgs","repos_url":"https://api.github.com/users/jroesch/repos","events_url":"https://api.github.com/users/jroesch/events{/privacy}","received_events_url":"https://api.github.com/users/jroesch/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-07-05T20:58:00Z","updated_at":"2019-07-05T20:58:00Z","author_association":"MEMBER","body":"I think as far as RTTI for the interpreter this is a good tradeoff.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508860915/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508861292","html_url":"https://github.com/apache/tvm/pull/3483#issuecomment-508861292","issue_url":"https://api.github.com/repos/apache/tvm/issues/3483","id":508861292,"node_id":"MDEyOklzc3VlQ29tbWVudDUwODg2MTI5Mg==","user":{"login":"jroesch","id":696509,"node_id":"MDQ6VXNlcjY5NjUwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/696509?v=4","gravatar_id":"","url":"https://api.github.com/users/jroesch","html_url":"https://github.com/jroesch","followers_url":"https://api.github.com/users/jroesch/followers","following_url":"https://api.github.com/users/jroesch/following{/other_user}","gists_url":"https://api.github.com/users/jroesch/gists{/gist_id}","starred_url":"https://api.github.com/users/jroesch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jroesch/subscriptions","organizations_url":"https://api.github.com/users/jroesch/orgs","repos_url":"https://api.github.com/users/jroesch/repos","events_url":"https://api.github.com/users/jroesch/events{/privacy}","received_events_url":"https://api.github.com/users/jroesch/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-07-05T21:00:18Z","updated_at":"2019-07-05T21:00:18Z","author_association":"MEMBER","body":"I think we should just treat all functions uniformly, there are a couple places where we might need to specify an entry point, and we can just default to main.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508861292/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508861727","html_url":"https://github.com/apache/tvm/pull/3476#issuecomment-508861727","issue_url":"https://api.github.com/repos/apache/tvm/issues/3476","id":508861727,"node_id":"MDEyOklzc3VlQ29tbWVudDUwODg2MTcyNw==","user":{"login":"jroesch","id":696509,"node_id":"MDQ6VXNlcjY5NjUwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/696509?v=4","gravatar_id":"","url":"https://api.github.com/users/jroesch","html_url":"https://github.com/jroesch","followers_url":"https://api.github.com/users/jroesch/followers","following_url":"https://api.github.com/users/jroesch/following{/other_user}","gists_url":"https://api.github.com/users/jroesch/gists{/gist_id}","starred_url":"https://api.github.com/users/jroesch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jroesch/subscriptions","organizations_url":"https://api.github.com/users/jroesch/orgs","repos_url":"https://api.github.com/users/jroesch/repos","events_url":"https://api.github.com/users/jroesch/events{/privacy}","received_events_url":"https://api.github.com/users/jroesch/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-07-05T21:02:59Z","updated_at":"2019-07-05T21:02:59Z","author_association":"MEMBER","body":"I think we should have a special API for partial type inference, so people know when they are opting in. We just make all the free vars dummy parameters, run inference then remove them.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508861727/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508863980","html_url":"https://github.com/apache/tvm/pull/3476#issuecomment-508863980","issue_url":"https://api.github.com/repos/apache/tvm/issues/3476","id":508863980,"node_id":"MDEyOklzc3VlQ29tbWVudDUwODg2Mzk4MA==","user":{"login":"eqy","id":2239616,"node_id":"MDQ6VXNlcjIyMzk2MTY=","avatar_url":"https://avatars.githubusercontent.com/u/2239616?v=4","gravatar_id":"","url":"https://api.github.com/users/eqy","html_url":"https://github.com/eqy","followers_url":"https://api.github.com/users/eqy/followers","following_url":"https://api.github.com/users/eqy/following{/other_user}","gists_url":"https://api.github.com/users/eqy/gists{/gist_id}","starred_url":"https://api.github.com/users/eqy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eqy/subscriptions","organizations_url":"https://api.github.com/users/eqy/orgs","repos_url":"https://api.github.com/users/eqy/repos","events_url":"https://api.github.com/users/eqy/events{/privacy}","received_events_url":"https://api.github.com/users/eqy/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-07-05T21:17:23Z","updated_at":"2019-07-05T21:17:23Z","author_association":"CONTRIBUTOR","body":"I am also not sure if this breaks things because the quantization PR is not merged yet. There are still a few calls to InferType in the pass but I am not sure they do PI","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508863980/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508866278","html_url":"https://github.com/apache/tvm/pull/3477#issuecomment-508866278","issue_url":"https://api.github.com/repos/apache/tvm/issues/3477","id":508866278,"node_id":"MDEyOklzc3VlQ29tbWVudDUwODg2NjI3OA==","user":{"login":"jwfromm","id":9874242,"node_id":"MDQ6VXNlcjk4NzQyNDI=","avatar_url":"https://avatars.githubusercontent.com/u/9874242?v=4","gravatar_id":"","url":"https://api.github.com/users/jwfromm","html_url":"https://github.com/jwfromm","followers_url":"https://api.github.com/users/jwfromm/followers","following_url":"https://api.github.com/users/jwfromm/following{/other_user}","gists_url":"https://api.github.com/users/jwfromm/gists{/gist_id}","starred_url":"https://api.github.com/users/jwfromm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jwfromm/subscriptions","organizations_url":"https://api.github.com/users/jwfromm/orgs","repos_url":"https://api.github.com/users/jwfromm/repos","events_url":"https://api.github.com/users/jwfromm/events{/privacy}","received_events_url":"https://api.github.com/users/jwfromm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-07-05T21:33:08Z","updated_at":"2019-07-05T21:33:08Z","author_association":"CONTRIBUTOR","body":"I'm actually having a hard time finding an example of when this would occur without some of the custom ops I've added in my fork since it looks like all normal relay ops are supported on every target. Because this is a more personal issue than I thought, I'll close this PR for now.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508866278/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508867948","html_url":"https://github.com/apache/tvm/pull/3156#issuecomment-508867948","issue_url":"https://api.github.com/repos/apache/tvm/issues/3156","id":508867948,"node_id":"MDEyOklzc3VlQ29tbWVudDUwODg2Nzk0OA==","user":{"login":"jroesch","id":696509,"node_id":"MDQ6VXNlcjY5NjUwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/696509?v=4","gravatar_id":"","url":"https://api.github.com/users/jroesch","html_url":"https://github.com/jroesch","followers_url":"https://api.github.com/users/jroesch/followers","following_url":"https://api.github.com/users/jroesch/following{/other_user}","gists_url":"https://api.github.com/users/jroesch/gists{/gist_id}","starred_url":"https://api.github.com/users/jroesch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jroesch/subscriptions","organizations_url":"https://api.github.com/users/jroesch/orgs","repos_url":"https://api.github.com/users/jroesch/repos","events_url":"https://api.github.com/users/jroesch/events{/privacy}","received_events_url":"https://api.github.com/users/jroesch/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-07-05T21:44:44Z","updated_at":"2019-07-05T21:44:44Z","author_association":"MEMBER","body":"Can you address some minor nits?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508867948/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508869771","html_url":"https://github.com/apache/tvm/issues/3455#issuecomment-508869771","issue_url":"https://api.github.com/repos/apache/tvm/issues/3455","id":508869771,"node_id":"MDEyOklzc3VlQ29tbWVudDUwODg2OTc3MQ==","user":{"login":"jroesch","id":696509,"node_id":"MDQ6VXNlcjY5NjUwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/696509?v=4","gravatar_id":"","url":"https://api.github.com/users/jroesch","html_url":"https://github.com/jroesch","followers_url":"https://api.github.com/users/jroesch/followers","following_url":"https://api.github.com/users/jroesch/following{/other_user}","gists_url":"https://api.github.com/users/jroesch/gists{/gist_id}","starred_url":"https://api.github.com/users/jroesch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jroesch/subscriptions","organizations_url":"https://api.github.com/users/jroesch/orgs","repos_url":"https://api.github.com/users/jroesch/repos","events_url":"https://api.github.com/users/jroesch/events{/privacy}","received_events_url":"https://api.github.com/users/jroesch/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-07-05T21:58:35Z","updated_at":"2019-07-05T21:58:35Z","author_association":"MEMBER","body":"My old design which you removed is the best design imo, all global names should be interned, they should all be globally unique. ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508869771/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508870058","html_url":"https://github.com/apache/tvm/pull/3470#issuecomment-508870058","issue_url":"https://api.github.com/repos/apache/tvm/issues/3470","id":508870058,"node_id":"MDEyOklzc3VlQ29tbWVudDUwODg3MDA1OA==","user":{"login":"jroesch","id":696509,"node_id":"MDQ6VXNlcjY5NjUwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/696509?v=4","gravatar_id":"","url":"https://api.github.com/users/jroesch","html_url":"https://github.com/jroesch","followers_url":"https://api.github.com/users/jroesch/followers","following_url":"https://api.github.com/users/jroesch/following{/other_user}","gists_url":"https://api.github.com/users/jroesch/gists{/gist_id}","starred_url":"https://api.github.com/users/jroesch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jroesch/subscriptions","organizations_url":"https://api.github.com/users/jroesch/orgs","repos_url":"https://api.github.com/users/jroesch/repos","events_url":"https://api.github.com/users/jroesch/events{/privacy}","received_events_url":"https://api.github.com/users/jroesch/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-07-05T22:00:40Z","updated_at":"2019-07-05T22:00:40Z","author_association":"MEMBER","body":"> @jroesch Thanks for the comment. I'm not sure as well. I think I can get rid of `Ifi` and `Selecti`. As for `Cmpi`, are you ok with assuming the tensor is 0 rank? Or implement a general tensor comparison?\r\n\r\nMaybe we can generalize the boolean comparison instruction? maybe we do need to type it though","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508870058/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508873873","html_url":"https://github.com/apache/tvm/pull/3156#issuecomment-508873873","issue_url":"https://api.github.com/repos/apache/tvm/issues/3156","id":508873873,"node_id":"MDEyOklzc3VlQ29tbWVudDUwODg3Mzg3Mw==","user":{"login":"slyubomirsky","id":5624871,"node_id":"MDQ6VXNlcjU2MjQ4NzE=","avatar_url":"https://avatars.githubusercontent.com/u/5624871?v=4","gravatar_id":"","url":"https://api.github.com/users/slyubomirsky","html_url":"https://github.com/slyubomirsky","followers_url":"https://api.github.com/users/slyubomirsky/followers","following_url":"https://api.github.com/users/slyubomirsky/following{/other_user}","gists_url":"https://api.github.com/users/slyubomirsky/gists{/gist_id}","starred_url":"https://api.github.com/users/slyubomirsky/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/slyubomirsky/subscriptions","organizations_url":"https://api.github.com/users/slyubomirsky/orgs","repos_url":"https://api.github.com/users/slyubomirsky/repos","events_url":"https://api.github.com/users/slyubomirsky/events{/privacy}","received_events_url":"https://api.github.com/users/slyubomirsky/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-07-05T22:33:01Z","updated_at":"2019-07-05T22:33:01Z","author_association":"CONTRIBUTOR","body":"Will do, thanks","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508873873/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508874899","html_url":"https://github.com/apache/tvm/pull/3477#issuecomment-508874899","issue_url":"https://api.github.com/repos/apache/tvm/issues/3477","id":508874899,"node_id":"MDEyOklzc3VlQ29tbWVudDUwODg3NDg5OQ==","user":{"login":"tmoreau89","id":5974488,"node_id":"MDQ6VXNlcjU5NzQ0ODg=","avatar_url":"https://avatars.githubusercontent.com/u/5974488?v=4","gravatar_id":"","url":"https://api.github.com/users/tmoreau89","html_url":"https://github.com/tmoreau89","followers_url":"https://api.github.com/users/tmoreau89/followers","following_url":"https://api.github.com/users/tmoreau89/following{/other_user}","gists_url":"https://api.github.com/users/tmoreau89/gists{/gist_id}","starred_url":"https://api.github.com/users/tmoreau89/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tmoreau89/subscriptions","organizations_url":"https://api.github.com/users/tmoreau89/orgs","repos_url":"https://api.github.com/users/tmoreau89/repos","events_url":"https://api.github.com/users/tmoreau89/events{/privacy}","received_events_url":"https://api.github.com/users/tmoreau89/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-07-05T22:42:33Z","updated_at":"2019-07-05T22:42:33Z","author_association":"CONTRIBUTOR","body":"@jwfromm I'm fine to merge it in for now if you want to re-open it... the test would have been nice to have but is not a must for this specific fix","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508874899/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508875328","html_url":"https://github.com/apache/tvm/pull/3488#issuecomment-508875328","issue_url":"https://api.github.com/repos/apache/tvm/issues/3488","id":508875328,"node_id":"MDEyOklzc3VlQ29tbWVudDUwODg3NTMyOA==","user":{"login":"slyubomirsky","id":5624871,"node_id":"MDQ6VXNlcjU2MjQ4NzE=","avatar_url":"https://avatars.githubusercontent.com/u/5624871?v=4","gravatar_id":"","url":"https://api.github.com/users/slyubomirsky","html_url":"https://github.com/slyubomirsky","followers_url":"https://api.github.com/users/slyubomirsky/followers","following_url":"https://api.github.com/users/slyubomirsky/following{/other_user}","gists_url":"https://api.github.com/users/slyubomirsky/gists{/gist_id}","starred_url":"https://api.github.com/users/slyubomirsky/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/slyubomirsky/subscriptions","organizations_url":"https://api.github.com/users/slyubomirsky/orgs","repos_url":"https://api.github.com/users/slyubomirsky/repos","events_url":"https://api.github.com/users/slyubomirsky/events{/privacy}","received_events_url":"https://api.github.com/users/slyubomirsky/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-07-05T22:46:40Z","updated_at":"2019-07-05T22:46:40Z","author_association":"CONTRIBUTOR","body":"I guess having `fatal` as a separate AST node will ensure that passes _must_ deal with it (or ignore it) and won't need to special-case their function call visit case, for example. I suppose that qualifies as a reason to have it as a separate expr (with type `()`, I'd guess), perhaps?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508875328/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508877559","html_url":"https://github.com/apache/tvm/pull/3476#issuecomment-508877559","issue_url":"https://api.github.com/repos/apache/tvm/issues/3476","id":508877559,"node_id":"MDEyOklzc3VlQ29tbWVudDUwODg3NzU1OQ==","user":{"login":"MarisaKirisame","id":3397377,"node_id":"MDQ6VXNlcjMzOTczNzc=","avatar_url":"https://avatars.githubusercontent.com/u/3397377?v=4","gravatar_id":"","url":"https://api.github.com/users/MarisaKirisame","html_url":"https://github.com/MarisaKirisame","followers_url":"https://api.github.com/users/MarisaKirisame/followers","following_url":"https://api.github.com/users/MarisaKirisame/following{/other_user}","gists_url":"https://api.github.com/users/MarisaKirisame/gists{/gist_id}","starred_url":"https://api.github.com/users/MarisaKirisame/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/MarisaKirisame/subscriptions","organizations_url":"https://api.github.com/users/MarisaKirisame/orgs","repos_url":"https://api.github.com/users/MarisaKirisame/repos","events_url":"https://api.github.com/users/MarisaKirisame/events{/privacy}","received_events_url":"https://api.github.com/users/MarisaKirisame/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-07-05T23:08:20Z","updated_at":"2019-07-05T23:08:20Z","author_association":"CONTRIBUTOR","body":"sounds good to me, so I think we can add this, and add a special type infer function as @jroesch say.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508877559/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508878526","html_url":"https://github.com/apache/tvm/issues/3478#issuecomment-508878526","issue_url":"https://api.github.com/repos/apache/tvm/issues/3478","id":508878526,"node_id":"MDEyOklzc3VlQ29tbWVudDUwODg3ODUyNg==","user":{"login":"yzhliu","id":631860,"node_id":"MDQ6VXNlcjYzMTg2MA==","avatar_url":"https://avatars.githubusercontent.com/u/631860?v=4","gravatar_id":"","url":"https://api.github.com/users/yzhliu","html_url":"https://github.com/yzhliu","followers_url":"https://api.github.com/users/yzhliu/followers","following_url":"https://api.github.com/users/yzhliu/following{/other_user}","gists_url":"https://api.github.com/users/yzhliu/gists{/gist_id}","starred_url":"https://api.github.com/users/yzhliu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yzhliu/subscriptions","organizations_url":"https://api.github.com/users/yzhliu/orgs","repos_url":"https://api.github.com/users/yzhliu/repos","events_url":"https://api.github.com/users/yzhliu/events{/privacy}","received_events_url":"https://api.github.com/users/yzhliu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-07-05T23:18:49Z","updated_at":"2019-07-05T23:18:49Z","author_association":"MEMBER","body":"+0.5 to floordiv given the familarity and the usage in isl and MLIR.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508878526/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508881812","html_url":"https://github.com/apache/tvm/pull/3491#issuecomment-508881812","issue_url":"https://api.github.com/repos/apache/tvm/issues/3491","id":508881812,"node_id":"MDEyOklzc3VlQ29tbWVudDUwODg4MTgxMg==","user":{"login":"ajtulloch","id":1121581,"node_id":"MDQ6VXNlcjExMjE1ODE=","avatar_url":"https://avatars.githubusercontent.com/u/1121581?v=4","gravatar_id":"","url":"https://api.github.com/users/ajtulloch","html_url":"https://github.com/ajtulloch","followers_url":"https://api.github.com/users/ajtulloch/followers","following_url":"https://api.github.com/users/ajtulloch/following{/other_user}","gists_url":"https://api.github.com/users/ajtulloch/gists{/gist_id}","starred_url":"https://api.github.com/users/ajtulloch/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ajtulloch/subscriptions","organizations_url":"https://api.github.com/users/ajtulloch/orgs","repos_url":"https://api.github.com/users/ajtulloch/repos","events_url":"https://api.github.com/users/ajtulloch/events{/privacy}","received_events_url":"https://api.github.com/users/ajtulloch/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-07-05T23:59:28Z","updated_at":"2019-07-05T23:59:28Z","author_association":"CONTRIBUTOR","body":"@yidawang  do you folks happen to have an E2E example of Mask R-CNN with TVM?  We'd be interested in this at FB for our object detector work.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508881812/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508883864","html_url":"https://github.com/apache/tvm/issues/2351#issuecomment-508883864","issue_url":"https://api.github.com/repos/apache/tvm/issues/2351","id":508883864,"node_id":"MDEyOklzc3VlQ29tbWVudDUwODg4Mzg2NA==","user":{"login":"anijain2305","id":13822661,"node_id":"MDQ6VXNlcjEzODIyNjYx","avatar_url":"https://avatars.githubusercontent.com/u/13822661?v=4","gravatar_id":"","url":"https://api.github.com/users/anijain2305","html_url":"https://github.com/anijain2305","followers_url":"https://api.github.com/users/anijain2305/followers","following_url":"https://api.github.com/users/anijain2305/following{/other_user}","gists_url":"https://api.github.com/users/anijain2305/gists{/gist_id}","starred_url":"https://api.github.com/users/anijain2305/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/anijain2305/subscriptions","organizations_url":"https://api.github.com/users/anijain2305/orgs","repos_url":"https://api.github.com/users/anijain2305/repos","events_url":"https://api.github.com/users/anijain2305/events{/privacy}","received_events_url":"https://api.github.com/users/anijain2305/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-07-06T00:27:56Z","updated_at":"2019-07-06T00:27:56Z","author_association":"CONTRIBUTOR","body":"@jnorwood Yes, I understand your point. We can use the clip to saturate the values even if Relu was not fused. It fits in the design and the proposed abstractions.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508883864/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508884063","html_url":"https://github.com/apache/tvm/issues/2351#issuecomment-508884063","issue_url":"https://api.github.com/repos/apache/tvm/issues/2351","id":508884063,"node_id":"MDEyOklzc3VlQ29tbWVudDUwODg4NDA2Mw==","user":{"login":"anijain2305","id":13822661,"node_id":"MDQ6VXNlcjEzODIyNjYx","avatar_url":"https://avatars.githubusercontent.com/u/13822661?v=4","gravatar_id":"","url":"https://api.github.com/users/anijain2305","html_url":"https://github.com/anijain2305","followers_url":"https://api.github.com/users/anijain2305/followers","following_url":"https://api.github.com/users/anijain2305/following{/other_user}","gists_url":"https://api.github.com/users/anijain2305/gists{/gist_id}","starred_url":"https://api.github.com/users/anijain2305/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/anijain2305/subscriptions","organizations_url":"https://api.github.com/users/anijain2305/orgs","repos_url":"https://api.github.com/users/anijain2305/repos","events_url":"https://api.github.com/users/anijain2305/events{/privacy}","received_events_url":"https://api.github.com/users/anijain2305/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-07-06T00:30:53Z","updated_at":"2019-07-06T00:30:53Z","author_association":"CONTRIBUTOR","body":"@tqchen What are your thoughts?\r\n\r\nSeems like we are agreeing on the proposed design abstraction. There is a concern of not being able to achieve the best schedule performance. We can try to tackle it with fusion and schedule_tagging.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508884063/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508884274","html_url":"https://github.com/apache/tvm/pull/3227#issuecomment-508884274","issue_url":"https://api.github.com/repos/apache/tvm/issues/3227","id":508884274,"node_id":"MDEyOklzc3VlQ29tbWVudDUwODg4NDI3NA==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-07-06T00:34:06Z","updated_at":"2019-07-06T00:34:52Z","author_association":"MEMBER","body":"Please be careful not to include generated files into the repo( I saw resnet.c etc). Ideally they should not sit in the same folder of the file, but should be put into a temporary directory just like other compilation jobs  ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508884274/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508884368","html_url":"https://github.com/apache/tvm/pull/3227#issuecomment-508884368","issue_url":"https://api.github.com/repos/apache/tvm/issues/3227","id":508884368,"node_id":"MDEyOklzc3VlQ29tbWVudDUwODg4NDM2OA==","user":{"login":"weberlo","id":36520469,"node_id":"MDQ6VXNlcjM2NTIwNDY5","avatar_url":"https://avatars.githubusercontent.com/u/36520469?v=4","gravatar_id":"","url":"https://api.github.com/users/weberlo","html_url":"https://github.com/weberlo","followers_url":"https://api.github.com/users/weberlo/followers","following_url":"https://api.github.com/users/weberlo/following{/other_user}","gists_url":"https://api.github.com/users/weberlo/gists{/gist_id}","starred_url":"https://api.github.com/users/weberlo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/weberlo/subscriptions","organizations_url":"https://api.github.com/users/weberlo/orgs","repos_url":"https://api.github.com/users/weberlo/repos","events_url":"https://api.github.com/users/weberlo/events{/privacy}","received_events_url":"https://api.github.com/users/weberlo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-07-06T00:35:50Z","updated_at":"2019-07-06T00:35:50Z","author_association":"CONTRIBUTOR","body":"@tqchen Yeah.  I'll remove it in a later commit.  Right now, I'm just using it to debug, because CI doesn't give me enough information to see what's going wrong.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508884368/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508894086","html_url":"https://github.com/apache/tvm/issues/2351#issuecomment-508894086","issue_url":"https://api.github.com/repos/apache/tvm/issues/2351","id":508894086,"node_id":"MDEyOklzc3VlQ29tbWVudDUwODg5NDA4Ng==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-07-06T03:40:47Z","updated_at":"2019-07-06T03:40:47Z","author_association":"MEMBER","body":"Can we elaborate a bit if avg_pool2d, relu is necessary or if they are more of a direct mapping to the standard ops? Do we allow mix of standard ops and qnn ones？","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508894086/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508894115","html_url":"https://github.com/apache/tvm/pull/3499#issuecomment-508894115","issue_url":"https://api.github.com/repos/apache/tvm/issues/3499","id":508894115,"node_id":"MDEyOklzc3VlQ29tbWVudDUwODg5NDExNQ==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-07-06T03:41:36Z","updated_at":"2019-07-06T03:41:36Z","author_association":"MEMBER","body":"Thanks @ruslo , this PR is now merged","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508894115/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508894505","html_url":"https://github.com/apache/tvm/pull/3488#issuecomment-508894505","issue_url":"https://api.github.com/repos/apache/tvm/issues/3488","id":508894505,"node_id":"MDEyOklzc3VlQ29tbWVudDUwODg5NDUwNQ==","user":{"login":"wweic","id":594848,"node_id":"MDQ6VXNlcjU5NDg0OA==","avatar_url":"https://avatars.githubusercontent.com/u/594848?v=4","gravatar_id":"","url":"https://api.github.com/users/wweic","html_url":"https://github.com/wweic","followers_url":"https://api.github.com/users/wweic/followers","following_url":"https://api.github.com/users/wweic/following{/other_user}","gists_url":"https://api.github.com/users/wweic/gists{/gist_id}","starred_url":"https://api.github.com/users/wweic/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wweic/subscriptions","organizations_url":"https://api.github.com/users/wweic/orgs","repos_url":"https://api.github.com/users/wweic/repos","events_url":"https://api.github.com/users/wweic/events{/privacy}","received_events_url":"https://api.github.com/users/wweic/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-07-06T03:50:02Z","updated_at":"2019-07-06T03:50:02Z","author_association":"CONTRIBUTOR","body":"agree with @slyubomirsky. `fatal` should be similar to `exit` function in c, it's a normal function. Unless we want to implement general exception mechanism, then AST change seems more appropriate. ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508894505/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508894783","html_url":"https://github.com/apache/tvm/issues/2351#issuecomment-508894783","issue_url":"https://api.github.com/repos/apache/tvm/issues/2351","id":508894783,"node_id":"MDEyOklzc3VlQ29tbWVudDUwODg5NDc4Mw==","user":{"login":"FrozenGene","id":7287321,"node_id":"MDQ6VXNlcjcyODczMjE=","avatar_url":"https://avatars.githubusercontent.com/u/7287321?v=4","gravatar_id":"","url":"https://api.github.com/users/FrozenGene","html_url":"https://github.com/FrozenGene","followers_url":"https://api.github.com/users/FrozenGene/followers","following_url":"https://api.github.com/users/FrozenGene/following{/other_user}","gists_url":"https://api.github.com/users/FrozenGene/gists{/gist_id}","starred_url":"https://api.github.com/users/FrozenGene/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/FrozenGene/subscriptions","organizations_url":"https://api.github.com/users/FrozenGene/orgs","repos_url":"https://api.github.com/users/FrozenGene/repos","events_url":"https://api.github.com/users/FrozenGene/events{/privacy}","received_events_url":"https://api.github.com/users/FrozenGene/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-07-06T03:56:30Z","updated_at":"2019-07-06T03:56:30Z","author_association":"MEMBER","body":"@tqchen, if we use avg_pool2d , we also need to modify it. But the modified code is not much. For example, we should make the sum UInt8 result be Int16 to avoid overflow. In our internal implementation, we use q_avg_pool2d to distinguish avg_pool2d. Relu shouldn’t be modified. However, if we have activation fns, we should have output_min / output_max calculated by calculate_activation_range_uint8 said before, then we insert clip operator. ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508894783/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508913607","html_url":"https://github.com/apache/tvm/pull/3494#issuecomment-508913607","issue_url":"https://api.github.com/repos/apache/tvm/issues/3494","id":508913607,"node_id":"MDEyOklzc3VlQ29tbWVudDUwODkxMzYwNw==","user":{"login":"liangfu","id":857821,"node_id":"MDQ6VXNlcjg1NzgyMQ==","avatar_url":"https://avatars.githubusercontent.com/u/857821?v=4","gravatar_id":"","url":"https://api.github.com/users/liangfu","html_url":"https://github.com/liangfu","followers_url":"https://api.github.com/users/liangfu/followers","following_url":"https://api.github.com/users/liangfu/following{/other_user}","gists_url":"https://api.github.com/users/liangfu/gists{/gist_id}","starred_url":"https://api.github.com/users/liangfu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/liangfu/subscriptions","organizations_url":"https://api.github.com/users/liangfu/orgs","repos_url":"https://api.github.com/users/liangfu/repos","events_url":"https://api.github.com/users/liangfu/events{/privacy}","received_events_url":"https://api.github.com/users/liangfu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-07-06T10:01:15Z","updated_at":"2019-07-06T10:01:15Z","author_association":"MEMBER","body":"Currently, I'm using Intel Quartus Prime 18.0 Lite Edition. Let me first reform the scripts to use `tcl` script, complement this PR with a related document, and then I would inform you when this is ready to review.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508913607/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508923961","html_url":"https://github.com/apache/tvm/pull/3491#issuecomment-508923961","issue_url":"https://api.github.com/repos/apache/tvm/issues/3491","id":508923961,"node_id":"MDEyOklzc3VlQ29tbWVudDUwODkyMzk2MQ==","user":{"login":"yidawang","id":4458509,"node_id":"MDQ6VXNlcjQ0NTg1MDk=","avatar_url":"https://avatars.githubusercontent.com/u/4458509?v=4","gravatar_id":"","url":"https://api.github.com/users/yidawang","html_url":"https://github.com/yidawang","followers_url":"https://api.github.com/users/yidawang/followers","following_url":"https://api.github.com/users/yidawang/following{/other_user}","gists_url":"https://api.github.com/users/yidawang/gists{/gist_id}","starred_url":"https://api.github.com/users/yidawang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yidawang/subscriptions","organizations_url":"https://api.github.com/users/yidawang/orgs","repos_url":"https://api.github.com/users/yidawang/repos","events_url":"https://api.github.com/users/yidawang/events{/privacy}","received_events_url":"https://api.github.com/users/yidawang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-07-06T12:46:00Z","updated_at":"2019-07-06T12:57:36Z","author_association":"CONTRIBUTOR","body":"> @yidawang do you folks happen to have an E2E example of Mask R-CNN with TVM? We'd be interested in this at FB for our object detector work.\r\n\r\nI used the models [here](https://gluon-cv.mxnet.io/model_zoo/segmentation.html) to benchmark, and quickly modified [this file](https://github.com/dmlc/tvm/blob/master/tutorials/frontend/deploy_ssd_gluoncv.py) to run it E2E.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508923961/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508940347","html_url":"https://github.com/apache/tvm/issues/3501#issuecomment-508940347","issue_url":"https://api.github.com/repos/apache/tvm/issues/3501","id":508940347,"node_id":"MDEyOklzc3VlQ29tbWVudDUwODk0MDM0Nw==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-07-06T17:02:22Z","updated_at":"2019-07-06T17:06:10Z","author_association":"MEMBER","body":"cc @jermainewang @kazimuth @junrushao1994 @icemelon9 @ajtulloch @yzhliu  @merrymercy who might be interested in this. Some initial thoughts:\r\n\r\n- Convention of the name convention the class and file hierarchy schema\r\n      - e.g.``` tvm.schema.expr.py -> include/IR/expr.h```\r\n      - Alternatively, allow declaration within each file.\r\n- Decouple schema reading(frontend) and emission, have an IR of class hierarchy schemas, so that we can have different emitters\r\n    - Think about python emitter, c++ emitter\r\n- We might want to use it to also deal with general objects, including runtime::Object in VM.\r\n- We still want to allow some user-written boilerplate, given that C++ datatypes can still be used in many of those and we would love to have them for certain internal data types. \r\n- How to handle docstrings\r\n  - ATM the python docstrings are separately written, by manual wrapping. The benefit of manual wrapping is the clear docstrings(as they might be different from those in c++). \r\n   - Should we do the same for now and only generate c++ code?\r\n","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508940347/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508940579","html_url":"https://github.com/apache/tvm/pull/3493#issuecomment-508940579","issue_url":"https://api.github.com/repos/apache/tvm/issues/3493","id":508940579,"node_id":"MDEyOklzc3VlQ29tbWVudDUwODk0MDU3OQ==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-07-06T17:05:32Z","updated_at":"2019-07-06T17:05:32Z","author_association":"MEMBER","body":"Re the question of whether pipeline constructions should be made in python(will there be duplications if we do things both in python and c++).\r\n\r\nI think it boils down to the fact that whether we treat compilation pipelines just like models in deep learning frameworks. Models are implemented in many languages, you see resnet pipelines being implemented in official python part, c++, or other parts of the language. While it is important to have a default one, and if that default one is concise enough, I think it might make sense to bring a python version of pipeline construction.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508940579/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508946549","html_url":"https://github.com/apache/tvm/pull/3479#issuecomment-508946549","issue_url":"https://api.github.com/repos/apache/tvm/issues/3479","id":508946549,"node_id":"MDEyOklzc3VlQ29tbWVudDUwODk0NjU0OQ==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-07-06T18:48:09Z","updated_at":"2019-07-06T18:48:09Z","author_association":"MEMBER","body":"Thanks, @sgrechanik-h @Hzfengsy , I have addressed your comments.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508946549/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508953907","html_url":"https://github.com/apache/tvm/issues/2983#issuecomment-508953907","issue_url":"https://api.github.com/repos/apache/tvm/issues/2983","id":508953907,"node_id":"MDEyOklzc3VlQ29tbWVudDUwODk1MzkwNw==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-07-06T21:11:53Z","updated_at":"2019-07-06T21:11:53Z","author_association":"MEMBER","body":"https://github.com/dmlc/tvm/issues/3501","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508953907/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508953958","html_url":"https://github.com/apache/tvm/issues/3109#issuecomment-508953958","issue_url":"https://api.github.com/repos/apache/tvm/issues/3109","id":508953958,"node_id":"MDEyOklzc3VlQ29tbWVudDUwODk1Mzk1OA==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-07-06T21:12:43Z","updated_at":"2019-07-06T21:12:43Z","author_association":"MEMBER","body":"@masahi would you be interested in this?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508953958/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508954051","html_url":"https://github.com/apache/tvm/pull/1756#issuecomment-508954051","issue_url":"https://api.github.com/repos/apache/tvm/issues/1756","id":508954051,"node_id":"MDEyOklzc3VlQ29tbWVudDUwODk1NDA1MQ==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-07-06T21:14:13Z","updated_at":"2019-07-06T21:14:13Z","author_association":"MEMBER","body":"Close due to inactive status.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508954051/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508954136","html_url":"https://github.com/apache/tvm/issues/3501#issuecomment-508954136","issue_url":"https://api.github.com/repos/apache/tvm/issues/3501","id":508954136,"node_id":"MDEyOklzc3VlQ29tbWVudDUwODk1NDEzNg==","user":{"login":"junrushao","id":22515877,"node_id":"MDQ6VXNlcjIyNTE1ODc3","avatar_url":"https://avatars.githubusercontent.com/u/22515877?v=4","gravatar_id":"","url":"https://api.github.com/users/junrushao","html_url":"https://github.com/junrushao","followers_url":"https://api.github.com/users/junrushao/followers","following_url":"https://api.github.com/users/junrushao/following{/other_user}","gists_url":"https://api.github.com/users/junrushao/gists{/gist_id}","starred_url":"https://api.github.com/users/junrushao/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/junrushao/subscriptions","organizations_url":"https://api.github.com/users/junrushao/orgs","repos_url":"https://api.github.com/users/junrushao/repos","events_url":"https://api.github.com/users/junrushao/events{/privacy}","received_events_url":"https://api.github.com/users/junrushao/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-07-06T21:15:39Z","updated_at":"2019-07-06T21:32:32Z","author_association":"MEMBER","body":"Hey Jared,\r\n\r\nNice proposal!\r\n\r\nI am mostly interested in using the node system across C ABI.\r\n\r\nFirst, I would love to understand:\r\n1) how member methods could be generated, and\r\n2) their usability across C ABIs.\r\n\r\nIf we wrap up data fields of generated nodes in pure C, and if packed functions' global registry can be used across C ABI (not now), we could have a systematic way to wrap the methods up\r\n1) For virtual methods, we may leave a field in the pure C struct, like what [DLManagedTensor's virtual destructor](https://github.com/dmlc/dlpack/blob/master/include/dlpack/dlpack.h#L168) did.\r\n2) For non-virtual methods, we should somehow register them as packed functions. We can design our own name mangling mechanism.\r\n3) For each instance with vtable, we probably need a type key to indicate its type. And then we could implement them in a thin C++ wrapper.\r\n\r\nSecond, basic data structures are still in C++, for example, tvm::Array, tvm::Map, and std::string. Maybe this would be an opportunity to rewrite them in C.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508954136/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508954147","html_url":"https://github.com/apache/tvm/issues/3301#issuecomment-508954147","issue_url":"https://api.github.com/repos/apache/tvm/issues/3301","id":508954147,"node_id":"MDEyOklzc3VlQ29tbWVudDUwODk1NDE0Nw==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-07-06T21:15:51Z","updated_at":"2019-07-06T21:15:51Z","author_association":"MEMBER","body":"@yzhliu can you followup on this thread?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508954147/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508954220","html_url":"https://github.com/apache/tvm/issues/3339#issuecomment-508954220","issue_url":"https://api.github.com/repos/apache/tvm/issues/3339","id":508954220,"node_id":"MDEyOklzc3VlQ29tbWVudDUwODk1NDIyMA==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-07-06T21:17:03Z","updated_at":"2019-07-06T21:17:03Z","author_association":"MEMBER","body":"@were what is the status on this?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508954220/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508954283","html_url":"https://github.com/apache/tvm/pull/3008#issuecomment-508954283","issue_url":"https://api.github.com/repos/apache/tvm/issues/3008","id":508954283,"node_id":"MDEyOklzc3VlQ29tbWVudDUwODk1NDI4Mw==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-07-06T21:18:16Z","updated_at":"2019-07-06T21:18:32Z","author_association":"MEMBER","body":"@vv1133 the commit history seems was messed up, please consider reapplying your patch on a clean fork","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508954283/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508954327","html_url":"https://github.com/apache/tvm/issues/3396#issuecomment-508954327","issue_url":"https://api.github.com/repos/apache/tvm/issues/3396","id":508954327,"node_id":"MDEyOklzc3VlQ29tbWVudDUwODk1NDMyNw==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-07-06T21:19:07Z","updated_at":"2019-07-06T21:19:07Z","author_association":"MEMBER","body":"Duplicate https://github.com/dmlc/tvm/issues/3142","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508954327/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508954369","html_url":"https://github.com/apache/tvm/issues/3160#issuecomment-508954369","issue_url":"https://api.github.com/repos/apache/tvm/issues/3160","id":508954369,"node_id":"MDEyOklzc3VlQ29tbWVudDUwODk1NDM2OQ==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-07-06T21:19:55Z","updated_at":"2019-07-06T21:19:55Z","author_association":"MEMBER","body":"Close due to inactive status, please feel free to open a new thread on https://discuss.tvm.ai/ if there is still a problem","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508954369/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508954422","html_url":"https://github.com/apache/tvm/issues/3423#issuecomment-508954422","issue_url":"https://api.github.com/repos/apache/tvm/issues/3423","id":508954422,"node_id":"MDEyOklzc3VlQ29tbWVudDUwODk1NDQyMg==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-07-06T21:20:58Z","updated_at":"2019-07-06T21:20:58Z","author_association":"MEMBER","body":"Seems we agreed that weak reference was better than gc. close this RFC thread for now. Thanks everyone who participated in the discussion","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508954422/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508955056","html_url":"https://github.com/apache/tvm/issues/3240#issuecomment-508955056","issue_url":"https://api.github.com/repos/apache/tvm/issues/3240","id":508955056,"node_id":"MDEyOklzc3VlQ29tbWVudDUwODk1NTA1Ng==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-07-06T21:33:22Z","updated_at":"2019-07-06T21:33:22Z","author_association":"MEMBER","body":"ping @kevinthesun ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508955056/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508956237","html_url":"https://github.com/apache/tvm/issues/2351#issuecomment-508956237","issue_url":"https://api.github.com/repos/apache/tvm/issues/2351","id":508956237,"node_id":"MDEyOklzc3VlQ29tbWVudDUwODk1NjIzNw==","user":{"login":"anijain2305","id":13822661,"node_id":"MDQ6VXNlcjEzODIyNjYx","avatar_url":"https://avatars.githubusercontent.com/u/13822661?v=4","gravatar_id":"","url":"https://api.github.com/users/anijain2305","html_url":"https://github.com/anijain2305","followers_url":"https://api.github.com/users/anijain2305/followers","following_url":"https://api.github.com/users/anijain2305/following{/other_user}","gists_url":"https://api.github.com/users/anijain2305/gists{/gist_id}","starred_url":"https://api.github.com/users/anijain2305/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/anijain2305/subscriptions","organizations_url":"https://api.github.com/users/anijain2305/orgs","repos_url":"https://api.github.com/users/anijain2305/repos","events_url":"https://api.github.com/users/anijain2305/events{/privacy}","received_events_url":"https://api.github.com/users/anijain2305/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-07-06T21:57:57Z","updated_at":"2019-07-06T21:57:57Z","author_association":"CONTRIBUTOR","body":"\r\n![q_conv2d](https://user-images.githubusercontent.com/13822661/60761466-2ef79d80-9ffe-11e9-9895-8707d4d8c100.jpg)\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508956237/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508956433","html_url":"https://github.com/apache/tvm/issues/2351#issuecomment-508956433","issue_url":"https://api.github.com/repos/apache/tvm/issues/2351","id":508956433,"node_id":"MDEyOklzc3VlQ29tbWVudDUwODk1NjQzMw==","user":{"login":"anijain2305","id":13822661,"node_id":"MDQ6VXNlcjEzODIyNjYx","avatar_url":"https://avatars.githubusercontent.com/u/13822661?v=4","gravatar_id":"","url":"https://api.github.com/users/anijain2305","html_url":"https://github.com/anijain2305","followers_url":"https://api.github.com/users/anijain2305/followers","following_url":"https://api.github.com/users/anijain2305/following{/other_user}","gists_url":"https://api.github.com/users/anijain2305/gists{/gist_id}","starred_url":"https://api.github.com/users/anijain2305/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/anijain2305/subscriptions","organizations_url":"https://api.github.com/users/anijain2305/orgs","repos_url":"https://api.github.com/users/anijain2305/repos","events_url":"https://api.github.com/users/anijain2305/events{/privacy}","received_events_url":"https://api.github.com/users/anijain2305/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-07-06T22:01:53Z","updated_at":"2019-07-06T22:01:53Z","author_association":"CONTRIBUTOR","body":"@tqchen Added the case for qrelu. (I think the asymmetric lowering can be improved further, but thats not the point).\r\n\r\nSimilarly for quantized avg pool2d, as @FrozenGene mentioned, we will still need to upcast the tensor to int32 to avoid saturation. Additionally, we would need to handle the zero points.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508956433/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508956549","html_url":"https://github.com/apache/tvm/issues/2351#issuecomment-508956549","issue_url":"https://api.github.com/repos/apache/tvm/issues/2351","id":508956549,"node_id":"MDEyOklzc3VlQ29tbWVudDUwODk1NjU0OQ==","user":{"login":"anijain2305","id":13822661,"node_id":"MDQ6VXNlcjEzODIyNjYx","avatar_url":"https://avatars.githubusercontent.com/u/13822661?v=4","gravatar_id":"","url":"https://api.github.com/users/anijain2305","html_url":"https://github.com/anijain2305","followers_url":"https://api.github.com/users/anijain2305/followers","following_url":"https://api.github.com/users/anijain2305/following{/other_user}","gists_url":"https://api.github.com/users/anijain2305/gists{/gist_id}","starred_url":"https://api.github.com/users/anijain2305/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/anijain2305/subscriptions","organizations_url":"https://api.github.com/users/anijain2305/orgs","repos_url":"https://api.github.com/users/anijain2305/repos","events_url":"https://api.github.com/users/anijain2305/events{/privacy}","received_events_url":"https://api.github.com/users/anijain2305/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-07-06T22:04:16Z","updated_at":"2019-07-06T22:04:16Z","author_association":"CONTRIBUTOR","body":"> Do we allow mix of standard ops and qnn ones？\r\n\r\nThe framework parsed graph might have a mix (as shown in the lowering of qconv2d). But in the `relay.build` function, my first pass would be quantize_rewrite pass, that will convert all the `qnn` ops to existing relay ops, resulting in whole graph consisting of only primitive ops.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508956549/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508956900","html_url":"https://github.com/apache/tvm/pull/3494#issuecomment-508956900","issue_url":"https://api.github.com/repos/apache/tvm/issues/3494","id":508956900,"node_id":"MDEyOklzc3VlQ29tbWVudDUwODk1NjkwMA==","user":{"login":"tmoreau89","id":5974488,"node_id":"MDQ6VXNlcjU5NzQ0ODg=","avatar_url":"https://avatars.githubusercontent.com/u/5974488?v=4","gravatar_id":"","url":"https://api.github.com/users/tmoreau89","html_url":"https://github.com/tmoreau89","followers_url":"https://api.github.com/users/tmoreau89/followers","following_url":"https://api.github.com/users/tmoreau89/following{/other_user}","gists_url":"https://api.github.com/users/tmoreau89/gists{/gist_id}","starred_url":"https://api.github.com/users/tmoreau89/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tmoreau89/subscriptions","organizations_url":"https://api.github.com/users/tmoreau89/orgs","repos_url":"https://api.github.com/users/tmoreau89/repos","events_url":"https://api.github.com/users/tmoreau89/events{/privacy}","received_events_url":"https://api.github.com/users/tmoreau89/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-07-06T22:11:00Z","updated_at":"2019-07-06T22:11:00Z","author_association":"CONTRIBUTOR","body":"Thank you I'll install it on my machine so I can reproduce the experiments.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508956900/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508957092","html_url":"https://github.com/apache/tvm/issues/2351#issuecomment-508957092","issue_url":"https://api.github.com/repos/apache/tvm/issues/2351","id":508957092,"node_id":"MDEyOklzc3VlQ29tbWVudDUwODk1NzA5Mg==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-07-06T22:14:47Z","updated_at":"2019-07-06T22:17:37Z","author_association":"MEMBER","body":"I agree that mixed-precision might make avg_pool2d's case a bit tricky.  However, assuming that the zero-point won't change, we might just do ```avg_pool2d(x.astype(\"i32\")).astype(\"i8\")```.\r\n\r\nmax_pool2d though should be the same given that the maximum rule is the same regardless of zero point.\r\n\r\nMost of the current operator's lowering rule cast back the domain to float then back into i32. As in the case of qnn.relu. This could be quite inefficient. In most cases of the current symmetric quantization, we try to keep everything in i32 as much as possible.\r\n\r\nIn particular, refer to the current quantization pass, every value could sit in a domain, which could be fixed point with an implied scale, or floating point. Conversion between domains might be necessary and should be conducted in a minimum way. The default way always convert integer domain back to f32 and use f32 to exchange value between layers, which may not not the most efficient way.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508957092/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508960028","html_url":"https://github.com/apache/tvm/issues/2351#issuecomment-508960028","issue_url":"https://api.github.com/repos/apache/tvm/issues/2351","id":508960028,"node_id":"MDEyOklzc3VlQ29tbWVudDUwODk2MDAyOA==","user":{"login":"anijain2305","id":13822661,"node_id":"MDQ6VXNlcjEzODIyNjYx","avatar_url":"https://avatars.githubusercontent.com/u/13822661?v=4","gravatar_id":"","url":"https://api.github.com/users/anijain2305","html_url":"https://github.com/anijain2305","followers_url":"https://api.github.com/users/anijain2305/followers","following_url":"https://api.github.com/users/anijain2305/following{/other_user}","gists_url":"https://api.github.com/users/anijain2305/gists{/gist_id}","starred_url":"https://api.github.com/users/anijain2305/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/anijain2305/subscriptions","organizations_url":"https://api.github.com/users/anijain2305/orgs","repos_url":"https://api.github.com/users/anijain2305/repos","events_url":"https://api.github.com/users/anijain2305/events{/privacy}","received_events_url":"https://api.github.com/users/anijain2305/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-07-06T23:26:28Z","updated_at":"2019-07-06T23:26:28Z","author_association":"CONTRIBUTOR","body":"> In particular, refer to the current quantization pass, every value could sit in a domain, which could be fixed point with an implied scale, or floating point. Conversion between domains might be necessary and should be conducted in a minimum way. The default way always convert integer domain back to f32 and use f32 to exchange value between layers, which may not not the most efficient way.\r\n\r\nSo, I think we are trying to make 2 things work together here, which are very difficult to merge.\r\nThe first is to perform the quantization in framework and then convert it to Relay graph. This is what this issue is trying to focus on. The other is to perform the quantization in TVM itself. Your comment that the conversion between two domains should be minimal applies to the entity that quantizes the network. For example, relu, bias_Add etc are all fused in TFLite Conv2d for the same reason.\r\n\r\nIf we are converting the framework quantized model to Relay graph, then I think we should perform the same computation as defined by the framework quantized graph. If the original graph has domain conversions, then we will have to respect that as well. We can perform some graph optimizations - like remove dequantize followed by quantize if same quantization parameters. I think even with all this inefficiencies, our fusion algorithms and fast kernels should be able to provide better performance than the framework execution of the quantized graph.\r\n\r\nPlease let me know your thoughts on this.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508960028/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508961909","html_url":"https://github.com/apache/tvm/issues/3109#issuecomment-508961909","issue_url":"https://api.github.com/repos/apache/tvm/issues/3109","id":508961909,"node_id":"MDEyOklzc3VlQ29tbWVudDUwODk2MTkwOQ==","user":{"login":"masahi","id":1776403,"node_id":"MDQ6VXNlcjE3NzY0MDM=","avatar_url":"https://avatars.githubusercontent.com/u/1776403?v=4","gravatar_id":"","url":"https://api.github.com/users/masahi","html_url":"https://github.com/masahi","followers_url":"https://api.github.com/users/masahi/followers","following_url":"https://api.github.com/users/masahi/following{/other_user}","gists_url":"https://api.github.com/users/masahi/gists{/gist_id}","starred_url":"https://api.github.com/users/masahi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/masahi/subscriptions","organizations_url":"https://api.github.com/users/masahi/orgs","repos_url":"https://api.github.com/users/masahi/repos","events_url":"https://api.github.com/users/masahi/events{/privacy}","received_events_url":"https://api.github.com/users/masahi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-07-07T00:14:59Z","updated_at":"2019-07-07T00:14:59Z","author_association":"MEMBER","body":"alright, I'll give it a try","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508961909/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508962111","html_url":"https://github.com/apache/tvm/issues/2351#issuecomment-508962111","issue_url":"https://api.github.com/repos/apache/tvm/issues/2351","id":508962111,"node_id":"MDEyOklzc3VlQ29tbWVudDUwODk2MjExMQ==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-07-07T00:20:20Z","updated_at":"2019-07-07T00:20:43Z","author_association":"MEMBER","body":"You can also view the domain conversion minimization as an optimization pass here. The resulting graph is to some extent equivalent semantically equivalent to the original one that does the conversion to f32 and back and forth.  The idea is we can be smarter when lowering qnn ops into the relay sequence.\r\n\r\nFor example, when lowering the ```qconv2d -> qrelu ``` sequence, we don't have to convert the result of qconv2d to f32 and then back to i8, they can be represented directly in the i8 domain without having to get back to f32.  The mechanism in the current realize might help in this case.\r\n\r\nThere are also two separation  steps in current tvm's quantizer. We always first make the choice(this step was done by other frameworks), and then decide how to best translate to low-level operator(realize stage in quantization). The realize stage in current quantization part would serve as a good reference.\r\n","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508962111/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508962680","html_url":"https://github.com/apache/tvm/issues/2351#issuecomment-508962680","issue_url":"https://api.github.com/repos/apache/tvm/issues/2351","id":508962680,"node_id":"MDEyOklzc3VlQ29tbWVudDUwODk2MjY4MA==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-07-07T00:37:20Z","updated_at":"2019-07-07T00:39:23Z","author_association":"MEMBER","body":"To elaborate further about the choice of the domain and how it is relatively independent of which operator you would like to perform. Many operators can actually perform the computation using different number representations (domains)\r\n\r\nIt means how you should represent the number of a certain layer in either of the two ways. We can represent 2.5 by \r\n- f32: stored as val_f32 , where val_f32=2.5\r\n- i8: stored as val_i8 * scale + zero_pt (val_i8=25, scale=0.1, zero_pt = 0)\r\n\r\nEach operator in the qnn could take value from either f32 or i8. In the default setting of the current proposal if the value is from f32, it first converts its representation from f32-> i8, then perform the computation internally in i8, then convert back to f32. \r\n\r\nSo in the default lowering rules you proposed, every quantized operator has three stages(say qnn.relu)\r\n```convert_to_i8_dom -> relu_in_i8 ->  convert_to_fp32_dom```. However, when we have two consecutive ops that can perform operations in a different domain, in this case, fixed pt domain, we do not have to convert the domain into f32, then back to i8, instead we can directly do the domain conversion and possibly gain more efficiencies.\r\n\r\n\r\n\r\n\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508962680/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508963566","html_url":"https://github.com/apache/tvm/issues/2351#issuecomment-508963566","issue_url":"https://api.github.com/repos/apache/tvm/issues/2351","id":508963566,"node_id":"MDEyOklzc3VlQ29tbWVudDUwODk2MzU2Ng==","user":{"login":"anijain2305","id":13822661,"node_id":"MDQ6VXNlcjEzODIyNjYx","avatar_url":"https://avatars.githubusercontent.com/u/13822661?v=4","gravatar_id":"","url":"https://api.github.com/users/anijain2305","html_url":"https://github.com/anijain2305","followers_url":"https://api.github.com/users/anijain2305/followers","following_url":"https://api.github.com/users/anijain2305/following{/other_user}","gists_url":"https://api.github.com/users/anijain2305/gists{/gist_id}","starred_url":"https://api.github.com/users/anijain2305/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/anijain2305/subscriptions","organizations_url":"https://api.github.com/users/anijain2305/orgs","repos_url":"https://api.github.com/users/anijain2305/repos","events_url":"https://api.github.com/users/anijain2305/events{/privacy}","received_events_url":"https://api.github.com/users/anijain2305/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-07-07T01:01:03Z","updated_at":"2019-07-07T01:01:03Z","author_association":"CONTRIBUTOR","body":"Thanks @tqchen for the detailed explanation.\r\n\r\nActually, my proposal is simpler. My `qnn.relu` does not convert to the three stages that you mentioned. It only performs the `relu_int_i8`.\r\n\r\nThe frameworks (atleast TFLite and MxNet) do not go back to FP32 unless the operator is not supported in `i8` format or accuracy is very bad in `i8`.\r\n\r\nFor example, TFLite `qconv2d` will translate to `qnn.conv2d + qnn.requantize` or as you explained `conv_in_i8/i32 -> convert_to_int8` domain, but there wont be any FP32.\r\n\r\nTo complete the picture, suppose the quantized framework graph is (fw stands for framework)\r\n\r\n`fw.quantize -> fw.qconv2d -> fw.qrelu -> fw.dequantize`\r\n\r\nThe Relay graph would be\r\n\r\n`qnn.quantize -> qnn.conv2d -> qnn.requantize -> qnn.relu -> qnn.dequantize`\r\n`convert_to_i8 -> conv_in_i8/i32 -> convert_to_i8 -> relu_in_i8 -> convert_to_FP32`\r\n\r\nEssentially, if the framework does not convert back to FP32 in between, we would not go to FP32.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508963566/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508965621","html_url":"https://github.com/apache/tvm/issues/2351#issuecomment-508965621","issue_url":"https://api.github.com/repos/apache/tvm/issues/2351","id":508965621,"node_id":"MDEyOklzc3VlQ29tbWVudDUwODk2NTYyMQ==","user":{"login":"jnorwood","id":1499591,"node_id":"MDQ6VXNlcjE0OTk1OTE=","avatar_url":"https://avatars.githubusercontent.com/u/1499591?v=4","gravatar_id":"","url":"https://api.github.com/users/jnorwood","html_url":"https://github.com/jnorwood","followers_url":"https://api.github.com/users/jnorwood/followers","following_url":"https://api.github.com/users/jnorwood/following{/other_user}","gists_url":"https://api.github.com/users/jnorwood/gists{/gist_id}","starred_url":"https://api.github.com/users/jnorwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jnorwood/subscriptions","organizations_url":"https://api.github.com/users/jnorwood/orgs","repos_url":"https://api.github.com/users/jnorwood/repos","events_url":"https://api.github.com/users/jnorwood/events{/privacy}","received_events_url":"https://api.github.com/users/jnorwood/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-07-07T01:58:54Z","updated_at":"2019-07-07T01:58:54Z","author_association":"NONE","body":"> To complete the picture, suppose the quantized framework graph is (fw stands for framework)\r\n> \r\n> `fw.quantize -> fw.qconv2d -> fw.qrelu -> fw.dequantize`\r\n\r\nIf you do the qconv2d and qrelu operations sequentially, using their analogous fp operations, the output from qrelu will have the (potentially worse) resolution of the initial qconv2d.  So, you need to be careful if you are trying to use the fully sequential, separate operation results as a reference.   \r\n\r\nI can see that you might want the graph to represent all the operations prior to optimizing the implementation.   I just want to point out that the qrelu implementation can avoid the lowered resolution and can be completely cost free by revising the downscale multiplier and zero point of a preceding quantized output operation (qconv2d  in this case).   It is cost free because the clipping values are required in any case to do the quantized range saturation.\r\n\r\nThe operation of revising the downscale multiplier of a previous graph operation is also useful to achieve zero cost replacement of the scale normalization operations in the quantized concat operations in the inception models. \r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508965621/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508966317","html_url":"https://github.com/apache/tvm/issues/2351#issuecomment-508966317","issue_url":"https://api.github.com/repos/apache/tvm/issues/2351","id":508966317,"node_id":"MDEyOklzc3VlQ29tbWVudDUwODk2NjMxNw==","user":{"login":"anijain2305","id":13822661,"node_id":"MDQ6VXNlcjEzODIyNjYx","avatar_url":"https://avatars.githubusercontent.com/u/13822661?v=4","gravatar_id":"","url":"https://api.github.com/users/anijain2305","html_url":"https://github.com/anijain2305","followers_url":"https://api.github.com/users/anijain2305/followers","following_url":"https://api.github.com/users/anijain2305/following{/other_user}","gists_url":"https://api.github.com/users/anijain2305/gists{/gist_id}","starred_url":"https://api.github.com/users/anijain2305/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/anijain2305/subscriptions","organizations_url":"https://api.github.com/users/anijain2305/orgs","repos_url":"https://api.github.com/users/anijain2305/repos","events_url":"https://api.github.com/users/anijain2305/events{/privacy}","received_events_url":"https://api.github.com/users/anijain2305/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-07-07T02:19:17Z","updated_at":"2019-07-07T02:19:17Z","author_association":"CONTRIBUTOR","body":"> I can see that you might want the graph to represent all the operations prior to optimizing the implementation. I just want to point out that the qrelu implementation can avoid the lowered resolution and can be completely cost free by revising the downscale multiplier and zero point of a preceding quantized output operation (qconv2d in this case). It is cost free because the clipping values are required in any case to do the quantized range saturation.\r\n\r\nYes, you are correct. And that's what exactly TFLite does. In the case of fused TFLite conv2d, the conversion will be different\r\n\r\n`TFLite.conv2d (fused relu)`\r\n\r\nwill be converted to following Relay graph\r\n\r\n`qnn.conv2d -> nn.bias_add -> qnn.requantize -> clip`\r\n\r\nIn this case, the cost-free conversion is manifested in the `clip` operation.\r\n\r\nWe will have to add framework parsers for each framework, and most probably the resulting sequence of operators will be different for each framework.\r\n\r\nMy example in my last comment was to explain the fp32 and i8 boundaries and domain conversions of my proposal that @tqchen  was pointing out.\r\n","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508966317/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508966587","html_url":"https://github.com/apache/tvm/issues/2351#issuecomment-508966587","issue_url":"https://api.github.com/repos/apache/tvm/issues/2351","id":508966587,"node_id":"MDEyOklzc3VlQ29tbWVudDUwODk2NjU4Nw==","user":{"login":"zhenhuaw-me","id":4936589,"node_id":"MDQ6VXNlcjQ5MzY1ODk=","avatar_url":"https://avatars.githubusercontent.com/u/4936589?v=4","gravatar_id":"","url":"https://api.github.com/users/zhenhuaw-me","html_url":"https://github.com/zhenhuaw-me","followers_url":"https://api.github.com/users/zhenhuaw-me/followers","following_url":"https://api.github.com/users/zhenhuaw-me/following{/other_user}","gists_url":"https://api.github.com/users/zhenhuaw-me/gists{/gist_id}","starred_url":"https://api.github.com/users/zhenhuaw-me/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zhenhuaw-me/subscriptions","organizations_url":"https://api.github.com/users/zhenhuaw-me/orgs","repos_url":"https://api.github.com/users/zhenhuaw-me/repos","events_url":"https://api.github.com/users/zhenhuaw-me/events{/privacy}","received_events_url":"https://api.github.com/users/zhenhuaw-me/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-07-07T02:26:33Z","updated_at":"2019-07-07T02:26:33Z","author_association":"CONTRIBUTOR","body":"Several comments :)\r\n\r\n> Regarding @anijain2305 's [ReLU proposal](https://github.com/dmlc/tvm/issues/2351#issuecomment-508956237).\r\n\r\nThe symmetric and asymmetric path may merge into one - the asymmetric - where the zero point for symmetric approach is 0. Actually, this is a bit more complicate regarding the input tensor type, and what is the expected output tensor type, when handling the **ReLU family**:\r\n\r\n| input type | output type| how to handle|\r\n|-----------|------------|-----------------|\r\n| int8/uint8| int8/uint8| Clipping out the *unwanted value range*, taking zero point into consideration|\r\n| int32 | int32 | Assuming the int32 is symmetric, such that clipping out the *unwanted value range* should be fine for ReLU. But, what about ReLU6? |\r\n|int32| int8/uint8| the scale and zero point of the input and output may take into consideration. This will break into ReLU with input/output type int32 and a Requantization in the proposal. Considering ReLU6, the integer representation of the FP32 6.0 should be calculated, otherwise, we can hardly know the expected output integer value range. |\r\n\r\nThe listed is not necessarily the all. As I stated before, we need to keep in mind **how the floating point is represented in integer, and how can we arrange the arithmetic to maintain the floating point computing which is been represented**.\r\n\r\n> Similarly for quantized avg pool2d, as @FrozenGene mentioned, we will still need to upcast the tensor to int32 to avoid saturation. Additionally, we would need to handle the zero points.\r\nZero point it not needed in handling pooling. The UINT8 representation of FP32 doesn't need to update in the semantic of pooling.\r\n\r\nIt seems that we have put many Quantize/Dequantize to make the quantization ops reusing existing nn ops, either explicitly or implicitly. This could be bad for performance. Maybe some passes need to be introduced to handle I guess.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508966587/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508967934","html_url":"https://github.com/apache/tvm/issues/2351#issuecomment-508967934","issue_url":"https://api.github.com/repos/apache/tvm/issues/2351","id":508967934,"node_id":"MDEyOklzc3VlQ29tbWVudDUwODk2NzkzNA==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-07-07T03:07:26Z","updated_at":"2019-07-07T03:07:26Z","author_association":"MEMBER","body":"OK, given that most of the qnn ops are already in integer domain, we might be just fine. Minimization of requantize is still useful. And in the case when the scale is a power of two, use shift and normalize might be better than float scale and round\r\n","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508967934/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508968067","html_url":"https://github.com/apache/tvm/pull/3491#issuecomment-508968067","issue_url":"https://api.github.com/repos/apache/tvm/issues/3491","id":508968067,"node_id":"MDEyOklzc3VlQ29tbWVudDUwODk2ODA2Nw==","user":{"login":"yzhliu","id":631860,"node_id":"MDQ6VXNlcjYzMTg2MA==","avatar_url":"https://avatars.githubusercontent.com/u/631860?v=4","gravatar_id":"","url":"https://api.github.com/users/yzhliu","html_url":"https://github.com/yzhliu","followers_url":"https://api.github.com/users/yzhliu/followers","following_url":"https://api.github.com/users/yzhliu/following{/other_user}","gists_url":"https://api.github.com/users/yzhliu/gists{/gist_id}","starred_url":"https://api.github.com/users/yzhliu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yzhliu/subscriptions","organizations_url":"https://api.github.com/users/yzhliu/orgs","repos_url":"https://api.github.com/users/yzhliu/repos","events_url":"https://api.github.com/users/yzhliu/events{/privacy}","received_events_url":"https://api.github.com/users/yzhliu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-07-07T03:11:37Z","updated_at":"2019-07-07T03:11:37Z","author_association":"MEMBER","body":"Thanks @yidawang ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508968067/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508968330","html_url":"https://github.com/apache/tvm/pull/3493#issuecomment-508968330","issue_url":"https://api.github.com/repos/apache/tvm/issues/3493","id":508968330,"node_id":"MDEyOklzc3VlQ29tbWVudDUwODk2ODMzMA==","user":{"login":"zhiics","id":5145158,"node_id":"MDQ6VXNlcjUxNDUxNTg=","avatar_url":"https://avatars.githubusercontent.com/u/5145158?v=4","gravatar_id":"","url":"https://api.github.com/users/zhiics","html_url":"https://github.com/zhiics","followers_url":"https://api.github.com/users/zhiics/followers","following_url":"https://api.github.com/users/zhiics/following{/other_user}","gists_url":"https://api.github.com/users/zhiics/gists{/gist_id}","starred_url":"https://api.github.com/users/zhiics/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zhiics/subscriptions","organizations_url":"https://api.github.com/users/zhiics/orgs","repos_url":"https://api.github.com/users/zhiics/repos","events_url":"https://api.github.com/users/zhiics/events{/privacy}","received_events_url":"https://api.github.com/users/zhiics/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-07-07T03:20:20Z","updated_at":"2019-07-07T03:23:06Z","author_association":"MEMBER","body":"Okay. I will use the `DebugPrint`. Whether or not bringing the Python pipeline back would be a separate issue. \r\n\r\nShould we allow users to dump all passes instead of inserting `DebugPrint` after each individual passes? If so, should we provide a compilation option for it? I think we should allow this but not put in the compilation config. Any thoughts?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508968330/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508968352","html_url":"https://github.com/apache/tvm/issues/2351#issuecomment-508968352","issue_url":"https://api.github.com/repos/apache/tvm/issues/2351","id":508968352,"node_id":"MDEyOklzc3VlQ29tbWVudDUwODk2ODM1Mg==","user":{"login":"zhenhuaw-me","id":4936589,"node_id":"MDQ6VXNlcjQ5MzY1ODk=","avatar_url":"https://avatars.githubusercontent.com/u/4936589?v=4","gravatar_id":"","url":"https://api.github.com/users/zhenhuaw-me","html_url":"https://github.com/zhenhuaw-me","followers_url":"https://api.github.com/users/zhenhuaw-me/followers","following_url":"https://api.github.com/users/zhenhuaw-me/following{/other_user}","gists_url":"https://api.github.com/users/zhenhuaw-me/gists{/gist_id}","starred_url":"https://api.github.com/users/zhenhuaw-me/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zhenhuaw-me/subscriptions","organizations_url":"https://api.github.com/users/zhenhuaw-me/orgs","repos_url":"https://api.github.com/users/zhenhuaw-me/repos","events_url":"https://api.github.com/users/zhenhuaw-me/events{/privacy}","received_events_url":"https://api.github.com/users/zhenhuaw-me/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-07-07T03:21:03Z","updated_at":"2019-07-07T03:21:03Z","author_association":"CONTRIBUTOR","body":"Maybe scales are rarely a power of two (I assume you mean values such as\n0100b, 0.0010b). They are basically with long fractionals.\n\nTianqi Chen <notifications@github.com>于2019年7月7日 周日上午11:08写道：\n\n> OK, given that most of the qnn ops are already in integer domain, we might\n> be just fine. Minimization of requantize is still useful. And in the case\n> when the scale is a power of two, use shift and normalize might be better\n> than float scale and round\n>\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/dmlc/tvm/issues/2351?email_source=notifications&email_token=ABFVHDKDLR7B7VSQ7PAIRCLP6FMYHA5CNFSM4GMOMOS2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGODZLDX7Q#issuecomment-508967934>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/ABFVHDKEMYZ7HLOFF6FB7G3P6FMYHANCNFSM4GMOMOSQ>\n> .\n>\n-- \nBest Regards\nZhenhua\n","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508968352/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508971132","html_url":"https://github.com/apache/tvm/issues/2351#issuecomment-508971132","issue_url":"https://api.github.com/repos/apache/tvm/issues/2351","id":508971132,"node_id":"MDEyOklzc3VlQ29tbWVudDUwODk3MTEzMg==","user":{"login":"anijain2305","id":13822661,"node_id":"MDQ6VXNlcjEzODIyNjYx","avatar_url":"https://avatars.githubusercontent.com/u/13822661?v=4","gravatar_id":"","url":"https://api.github.com/users/anijain2305","html_url":"https://github.com/anijain2305","followers_url":"https://api.github.com/users/anijain2305/followers","following_url":"https://api.github.com/users/anijain2305/following{/other_user}","gists_url":"https://api.github.com/users/anijain2305/gists{/gist_id}","starred_url":"https://api.github.com/users/anijain2305/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/anijain2305/subscriptions","organizations_url":"https://api.github.com/users/anijain2305/orgs","repos_url":"https://api.github.com/users/anijain2305/repos","events_url":"https://api.github.com/users/anijain2305/events{/privacy}","received_events_url":"https://api.github.com/users/anijain2305/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-07-07T04:47:01Z","updated_at":"2019-07-07T04:52:21Z","author_association":"CONTRIBUTOR","body":"> And in the case when the scale is a power of two, use shift and normalize might be better than float scale and round\r\n\r\nYes, the shift and normalize can completely by done in integer/fixed-point domain instead of going to Floating point (even if they are not a multiple of 2). I have been prototyping that. Will update.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508971132/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508971309","html_url":"https://github.com/apache/tvm/issues/2351#issuecomment-508971309","issue_url":"https://api.github.com/repos/apache/tvm/issues/2351","id":508971309,"node_id":"MDEyOklzc3VlQ29tbWVudDUwODk3MTMwOQ==","user":{"login":"anijain2305","id":13822661,"node_id":"MDQ6VXNlcjEzODIyNjYx","avatar_url":"https://avatars.githubusercontent.com/u/13822661?v=4","gravatar_id":"","url":"https://api.github.com/users/anijain2305","html_url":"https://github.com/anijain2305","followers_url":"https://api.github.com/users/anijain2305/followers","following_url":"https://api.github.com/users/anijain2305/following{/other_user}","gists_url":"https://api.github.com/users/anijain2305/gists{/gist_id}","starred_url":"https://api.github.com/users/anijain2305/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/anijain2305/subscriptions","organizations_url":"https://api.github.com/users/anijain2305/orgs","repos_url":"https://api.github.com/users/anijain2305/repos","events_url":"https://api.github.com/users/anijain2305/events{/privacy}","received_events_url":"https://api.github.com/users/anijain2305/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-07-07T04:52:18Z","updated_at":"2019-07-07T17:06:19Z","author_association":"CONTRIBUTOR","body":"Thanks everybody for the fruitful discussion. I think we are gradually reaching convergence :)\r\n\r\nI am have been prototyping the qnn.conv2d and qnn.requantize at https://github.com/dmlc/tvm/pull/3367\r\n\r\nI have still few loose ends to fix. I will update once I am done and then we can discuss if the implementation makes sense.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508971309/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508973356","html_url":"https://github.com/apache/tvm/pull/3493#issuecomment-508973356","issue_url":"https://api.github.com/repos/apache/tvm/issues/3493","id":508973356,"node_id":"MDEyOklzc3VlQ29tbWVudDUwODk3MzM1Ng==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-07-07T05:49:26Z","updated_at":"2019-07-07T05:49:26Z","author_association":"MEMBER","body":"Let us not enable global printing for now and think about the need later","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508973356/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508973421","html_url":"https://github.com/apache/tvm/issues/2351#issuecomment-508973421","issue_url":"https://api.github.com/repos/apache/tvm/issues/2351","id":508973421,"node_id":"MDEyOklzc3VlQ29tbWVudDUwODk3MzQyMQ==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-07-07T05:51:00Z","updated_at":"2019-07-07T05:51:00Z","author_association":"MEMBER","body":"One thing to be careful about is that when using shift and normalize, right shift corresponds to round down as opposed to round to nearest, an additional 0.5 equivalence needs to be added to get the round behavior","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508973421/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508975286","html_url":"https://github.com/apache/tvm/pull/3493#issuecomment-508975286","issue_url":"https://api.github.com/repos/apache/tvm/issues/3493","id":508975286,"node_id":"MDEyOklzc3VlQ29tbWVudDUwODk3NTI4Ng==","user":{"login":"zhiics","id":5145158,"node_id":"MDQ6VXNlcjUxNDUxNTg=","avatar_url":"https://avatars.githubusercontent.com/u/5145158?v=4","gravatar_id":"","url":"https://api.github.com/users/zhiics","html_url":"https://github.com/zhiics","followers_url":"https://api.github.com/users/zhiics/followers","following_url":"https://api.github.com/users/zhiics/following{/other_user}","gists_url":"https://api.github.com/users/zhiics/gists{/gist_id}","starred_url":"https://api.github.com/users/zhiics/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zhiics/subscriptions","organizations_url":"https://api.github.com/users/zhiics/orgs","repos_url":"https://api.github.com/users/zhiics/repos","events_url":"https://api.github.com/users/zhiics/events{/privacy}","received_events_url":"https://api.github.com/users/zhiics/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-07-07T06:34:26Z","updated_at":"2019-07-07T06:34:26Z","author_association":"MEMBER","body":"Thanks all. I updated the PR.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508975286/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508978879","html_url":"https://github.com/apache/tvm/issues/2351#issuecomment-508978879","issue_url":"https://api.github.com/repos/apache/tvm/issues/2351","id":508978879,"node_id":"MDEyOklzc3VlQ29tbWVudDUwODk3ODg3OQ==","user":{"login":"jnorwood","id":1499591,"node_id":"MDQ6VXNlcjE0OTk1OTE=","avatar_url":"https://avatars.githubusercontent.com/u/1499591?v=4","gravatar_id":"","url":"https://api.github.com/users/jnorwood","html_url":"https://github.com/jnorwood","followers_url":"https://api.github.com/users/jnorwood/followers","following_url":"https://api.github.com/users/jnorwood/following{/other_user}","gists_url":"https://api.github.com/users/jnorwood/gists{/gist_id}","starred_url":"https://api.github.com/users/jnorwood/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jnorwood/subscriptions","organizations_url":"https://api.github.com/users/jnorwood/orgs","repos_url":"https://api.github.com/users/jnorwood/repos","events_url":"https://api.github.com/users/jnorwood/events{/privacy}","received_events_url":"https://api.github.com/users/jnorwood/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-07-07T07:45:28Z","updated_at":"2019-07-07T07:46:05Z","author_association":"NONE","body":"> an additional 0.5 equivalence needs to be added to get the round behavior\r\n\r\nif followed by relu, you can skip extra round processing for negative values.\r\n\r\notherwise for negative values you need to subtract 0.5 equivalent.\r\n\r\nif using convergent nearest/even rounding, also need to handle the boundary cases for even/odd decision.\r\n","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/508978879/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]