[{"url":"https://api.github.com/repos/apache/metron/issues/comments/492805642","html_url":"https://github.com/apache/metron/pull/1401#issuecomment-492805642","issue_url":"https://api.github.com/repos/apache/metron/issues/1401","id":492805642,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5MjgwNTY0Mg==","user":{"login":"justinleet","id":5077341,"node_id":"MDQ6VXNlcjUwNzczNDE=","avatar_url":"https://avatars.githubusercontent.com/u/5077341?v=4","gravatar_id":"","url":"https://api.github.com/users/justinleet","html_url":"https://github.com/justinleet","followers_url":"https://api.github.com/users/justinleet/followers","following_url":"https://api.github.com/users/justinleet/following{/other_user}","gists_url":"https://api.github.com/users/justinleet/gists{/gist_id}","starred_url":"https://api.github.com/users/justinleet/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/justinleet/subscriptions","organizations_url":"https://api.github.com/users/justinleet/orgs","repos_url":"https://api.github.com/users/justinleet/repos","events_url":"https://api.github.com/users/justinleet/events{/privacy}","received_events_url":"https://api.github.com/users/justinleet/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-15T20:11:36Z","updated_at":"2019-05-15T20:11:36Z","author_association":"CONTRIBUTOR","body":"+1, thanks for adding this!","reactions":{"url":"https://api.github.com/repos/apache/metron/issues/comments/492805642/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/metron/issues/comments/493077288","html_url":"https://github.com/apache/metron/pull/1407#issuecomment-493077288","issue_url":"https://api.github.com/repos/apache/metron/issues/1407","id":493077288,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5MzA3NzI4OA==","user":{"login":"justinleet","id":5077341,"node_id":"MDQ6VXNlcjUwNzczNDE=","avatar_url":"https://avatars.githubusercontent.com/u/5077341?v=4","gravatar_id":"","url":"https://api.github.com/users/justinleet","html_url":"https://github.com/justinleet","followers_url":"https://api.github.com/users/justinleet/followers","following_url":"https://api.github.com/users/justinleet/following{/other_user}","gists_url":"https://api.github.com/users/justinleet/gists{/gist_id}","starred_url":"https://api.github.com/users/justinleet/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/justinleet/subscriptions","organizations_url":"https://api.github.com/users/justinleet/orgs","repos_url":"https://api.github.com/users/justinleet/repos","events_url":"https://api.github.com/users/justinleet/events{/privacy}","received_events_url":"https://api.github.com/users/justinleet/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-16T13:54:19Z","updated_at":"2019-05-16T13:54:19Z","author_association":"CONTRIBUTOR","body":"Bouncing Travis. Seems to be an issue pulling down Maven. Maybe we should be caching that, rather than hitting it every time?","reactions":{"url":"https://api.github.com/repos/apache/metron/issues/comments/493077288/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/metron/issues/comments/493107444","html_url":"https://github.com/apache/metron/pull/1380#issuecomment-493107444","issue_url":"https://api.github.com/repos/apache/metron/issues/1380","id":493107444,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5MzEwNzQ0NA==","user":{"login":"sardell","id":7304869,"node_id":"MDQ6VXNlcjczMDQ4Njk=","avatar_url":"https://avatars.githubusercontent.com/u/7304869?v=4","gravatar_id":"","url":"https://api.github.com/users/sardell","html_url":"https://github.com/sardell","followers_url":"https://api.github.com/users/sardell/followers","following_url":"https://api.github.com/users/sardell/following{/other_user}","gists_url":"https://api.github.com/users/sardell/gists{/gist_id}","starred_url":"https://api.github.com/users/sardell/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sardell/subscriptions","organizations_url":"https://api.github.com/users/sardell/orgs","repos_url":"https://api.github.com/users/sardell/repos","events_url":"https://api.github.com/users/sardell/events{/privacy}","received_events_url":"https://api.github.com/users/sardell/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-16T15:07:48Z","updated_at":"2019-05-16T15:11:51Z","author_association":"CONTRIBUTOR","body":"@ruffle1986 This looks good to me, but I do want to bring up one thing that I noticed that's existed before but is even more pronounced now that we can enter the timestamp manually.\r\n\r\nIn the date picker template, there is a click handler that toggles the menu on the input element. I think if a user is manually entering a timestamp, they won't need to see a calendar. In addition, let's say I want to changed the default populated 'now' value to my own custom timestamp. I would double click on the field in order to highlight the 'now' value and replace it with my own value. This quickly opens and closes the calendar. When I go to click on the Apply button, the calendar appears again. I included a gif below to show what I'm talking about.\r\n\r\n![date-picker-click-toggle](https://user-images.githubusercontent.com/7304869/57864645-92cec880-77fc-11e9-8c37-e7c2cd3c810b.gif)\r\n\r\nI think that instead of having a click handler on the input, we should maybe have it on the calendar icon. That way, the date picker calendar only opens when the icon is clicked like this one from Angular Material.\r\n\r\n![angular-material-date-picker](https://user-images.githubusercontent.com/7304869/57864929-0244b800-77fd-11e9-96aa-b0a0bec73ecb.gif)\r\n\r\nWhat do you think?\r\n\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/metron/issues/comments/493107444/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/metron/issues/comments/493126591","html_url":"https://github.com/apache/metron/pull/1393#issuecomment-493126591","issue_url":"https://api.github.com/repos/apache/metron/issues/1393","id":493126591,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5MzEyNjU5MQ==","user":{"login":"sardell","id":7304869,"node_id":"MDQ6VXNlcjczMDQ4Njk=","avatar_url":"https://avatars.githubusercontent.com/u/7304869?v=4","gravatar_id":"","url":"https://api.github.com/users/sardell","html_url":"https://github.com/sardell","followers_url":"https://api.github.com/users/sardell/followers","following_url":"https://api.github.com/users/sardell/following{/other_user}","gists_url":"https://api.github.com/users/sardell/gists{/gist_id}","starred_url":"https://api.github.com/users/sardell/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sardell/subscriptions","organizations_url":"https://api.github.com/users/sardell/orgs","repos_url":"https://api.github.com/users/sardell/repos","events_url":"https://api.github.com/users/sardell/events{/privacy}","received_events_url":"https://api.github.com/users/sardell/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-16T15:55:19Z","updated_at":"2019-05-16T15:56:50Z","author_association":"CONTRIBUTOR","body":"@ruffle1986 When testing, I'm not seeing the timestamp field when creating a new Grok parser. What do I need to do to 'Make sure the TIMESTAMP field is there'? Maybe I need to take additional steps besides clicking on the '+' button in the bottom right corner and choosing Grok as my parser type.\r\n\r\n![Screen Shot 2019-05-16 at 5 53 44 PM](https://user-images.githubusercontent.com/7304869/57868592-8f8b0b00-7803-11e9-8ca3-0b529683eb1d.png)\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/metron/issues/comments/493126591/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/metron/issues/comments/493358360","html_url":"https://github.com/apache/metron/pull/1393#issuecomment-493358360","issue_url":"https://api.github.com/repos/apache/metron/issues/1393","id":493358360,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5MzM1ODM2MA==","user":{"login":"ruffle1986","id":2196208,"node_id":"MDQ6VXNlcjIxOTYyMDg=","avatar_url":"https://avatars.githubusercontent.com/u/2196208?v=4","gravatar_id":"","url":"https://api.github.com/users/ruffle1986","html_url":"https://github.com/ruffle1986","followers_url":"https://api.github.com/users/ruffle1986/followers","following_url":"https://api.github.com/users/ruffle1986/following{/other_user}","gists_url":"https://api.github.com/users/ruffle1986/gists{/gist_id}","starred_url":"https://api.github.com/users/ruffle1986/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ruffle1986/subscriptions","organizations_url":"https://api.github.com/users/ruffle1986/orgs","repos_url":"https://api.github.com/users/ruffle1986/repos","events_url":"https://api.github.com/users/ruffle1986/events{/privacy}","received_events_url":"https://api.github.com/users/ruffle1986/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-17T07:50:54Z","updated_at":"2019-05-17T07:51:38Z","author_association":"CONTRIBUTOR","body":"@sardell weird. for me, it's there. looks like a caching issue. There's no additional step that I know about.\r\n\r\n![Screen Shot 2019-05-17 at 9 49 57](https://user-images.githubusercontent.com/2196208/57911876-3f568c00-7889-11e9-8622-b0c60df597a2.png)\r\n","reactions":{"url":"https://api.github.com/repos/apache/metron/issues/comments/493358360/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/metron/issues/comments/493359168","html_url":"https://github.com/apache/metron/pull/1380#issuecomment-493359168","issue_url":"https://api.github.com/repos/apache/metron/issues/1380","id":493359168,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5MzM1OTE2OA==","user":{"login":"ruffle1986","id":2196208,"node_id":"MDQ6VXNlcjIxOTYyMDg=","avatar_url":"https://avatars.githubusercontent.com/u/2196208?v=4","gravatar_id":"","url":"https://api.github.com/users/ruffle1986","html_url":"https://github.com/ruffle1986","followers_url":"https://api.github.com/users/ruffle1986/followers","following_url":"https://api.github.com/users/ruffle1986/following{/other_user}","gists_url":"https://api.github.com/users/ruffle1986/gists{/gist_id}","starred_url":"https://api.github.com/users/ruffle1986/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ruffle1986/subscriptions","organizations_url":"https://api.github.com/users/ruffle1986/orgs","repos_url":"https://api.github.com/users/ruffle1986/repos","events_url":"https://api.github.com/users/ruffle1986/events{/privacy}","received_events_url":"https://api.github.com/users/ruffle1986/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-17T07:53:45Z","updated_at":"2019-05-17T07:53:45Z","author_association":"CONTRIBUTOR","body":"@sardell Good point and doesn't sound like a big effort. Let me check this out.","reactions":{"url":"https://api.github.com/repos/apache/metron/issues/comments/493359168/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/metron/issues/comments/493369951","html_url":"https://github.com/apache/metron/pull/1380#issuecomment-493369951","issue_url":"https://api.github.com/repos/apache/metron/issues/1380","id":493369951,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5MzM2OTk1MQ==","user":{"login":"ruffle1986","id":2196208,"node_id":"MDQ6VXNlcjIxOTYyMDg=","avatar_url":"https://avatars.githubusercontent.com/u/2196208?v=4","gravatar_id":"","url":"https://api.github.com/users/ruffle1986","html_url":"https://github.com/ruffle1986","followers_url":"https://api.github.com/users/ruffle1986/followers","following_url":"https://api.github.com/users/ruffle1986/following{/other_user}","gists_url":"https://api.github.com/users/ruffle1986/gists{/gist_id}","starred_url":"https://api.github.com/users/ruffle1986/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ruffle1986/subscriptions","organizations_url":"https://api.github.com/users/ruffle1986/orgs","repos_url":"https://api.github.com/users/ruffle1986/repos","events_url":"https://api.github.com/users/ruffle1986/events{/privacy}","received_events_url":"https://api.github.com/users/ruffle1986/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-17T08:30:10Z","updated_at":"2019-05-17T08:30:10Z","author_association":"CONTRIBUTOR","body":"@sardell Alright, I put the trigger on the calendar icon, but in that case I had to remove the toggle listener from the component. The reason is because it has conflicted with Pikaday and Pikaday doesn't have this \"toggling\" capability by by default and there's no option to turn it on so we lost that behaviour. But I think it's not a big deal so I ended going without the toggle.","reactions":{"url":"https://api.github.com/repos/apache/metron/issues/comments/493369951/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/metron/issues/comments/493421928","html_url":"https://github.com/apache/metron/pull/1393#issuecomment-493421928","issue_url":"https://api.github.com/repos/apache/metron/issues/1393","id":493421928,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5MzQyMTkyOA==","user":{"login":"sardell","id":7304869,"node_id":"MDQ6VXNlcjczMDQ4Njk=","avatar_url":"https://avatars.githubusercontent.com/u/7304869?v=4","gravatar_id":"","url":"https://api.github.com/users/sardell","html_url":"https://github.com/sardell","followers_url":"https://api.github.com/users/sardell/followers","following_url":"https://api.github.com/users/sardell/following{/other_user}","gists_url":"https://api.github.com/users/sardell/gists{/gist_id}","starred_url":"https://api.github.com/users/sardell/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sardell/subscriptions","organizations_url":"https://api.github.com/users/sardell/orgs","repos_url":"https://api.github.com/users/sardell/repos","events_url":"https://api.github.com/users/sardell/events{/privacy}","received_events_url":"https://api.github.com/users/sardell/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-17T11:33:34Z","updated_at":"2019-05-17T11:33:34Z","author_association":"CONTRIBUTOR","body":"@ruffle1986 You were right, it must've been something weird with my cache (or maybe it was just user error :flushed:). It works as described for me now when testing locally on full dev. While I can verify that the UI works, I would like another committer who is more familiar with the timestampField to verify that an unformatted string value is correct. It just seems weird to me that a timestamp field wouldn't enforce timestamp formatting, and would default to a string value of \"timestamp.\" Again, this probably stems from my own ignorance of that field and what it is used for on the backend.\r\n\r\n+1 pending another committer verifying that this is indeed how the field should be.","reactions":{"url":"https://api.github.com/repos/apache/metron/issues/comments/493421928/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/metron/issues/comments/493453296","html_url":"https://github.com/apache/metron/pull/1341#issuecomment-493453296","issue_url":"https://api.github.com/repos/apache/metron/issues/1341","id":493453296,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5MzQ1MzI5Ng==","user":{"login":"justinleet","id":5077341,"node_id":"MDQ6VXNlcjUwNzczNDE=","avatar_url":"https://avatars.githubusercontent.com/u/5077341?v=4","gravatar_id":"","url":"https://api.github.com/users/justinleet","html_url":"https://github.com/justinleet","followers_url":"https://api.github.com/users/justinleet/followers","following_url":"https://api.github.com/users/justinleet/following{/other_user}","gists_url":"https://api.github.com/users/justinleet/gists{/gist_id}","starred_url":"https://api.github.com/users/justinleet/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/justinleet/subscriptions","organizations_url":"https://api.github.com/users/justinleet/orgs","repos_url":"https://api.github.com/users/justinleet/repos","events_url":"https://api.github.com/users/justinleet/events{/privacy}","received_events_url":"https://api.github.com/users/justinleet/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-17T13:27:33Z","updated_at":"2019-05-17T13:27:33Z","author_association":"CONTRIBUTOR","body":"@mmiklavc @nickwallen @ottobackwards I merged master post-release and ran up in full dev again. Is everyone still good with the changes?","reactions":{"url":"https://api.github.com/repos/apache/metron/issues/comments/493453296/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/metron/issues/comments/493459303","html_url":"https://github.com/apache/metron/pull/1341#issuecomment-493459303","issue_url":"https://api.github.com/repos/apache/metron/issues/1341","id":493459303,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5MzQ1OTMwMw==","user":{"login":"mmiklavc","id":658443,"node_id":"MDQ6VXNlcjY1ODQ0Mw==","avatar_url":"https://avatars.githubusercontent.com/u/658443?v=4","gravatar_id":"","url":"https://api.github.com/users/mmiklavc","html_url":"https://github.com/mmiklavc","followers_url":"https://api.github.com/users/mmiklavc/followers","following_url":"https://api.github.com/users/mmiklavc/following{/other_user}","gists_url":"https://api.github.com/users/mmiklavc/gists{/gist_id}","starred_url":"https://api.github.com/users/mmiklavc/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mmiklavc/subscriptions","organizations_url":"https://api.github.com/users/mmiklavc/orgs","repos_url":"https://api.github.com/users/mmiklavc/repos","events_url":"https://api.github.com/users/mmiklavc/events{/privacy}","received_events_url":"https://api.github.com/users/mmiklavc/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-17T13:46:08Z","updated_at":"2019-05-17T13:46:08Z","author_association":"CONTRIBUTOR","body":"Probably worth referencing this - https://lists.apache.org/thread.html/55e57410cb8cd467a51545e4ae0f9f67d32312cc3f9e1afa144552f4@%3Cdev.metron.apache.org%3E\r\n\r\nJust to follow up - are there any concerns with, for example, non-UTF-8 inbound data charsets? I think it makes sense for us to normalize, however we may run into trouble in our parsers, e.g https://github.com/apache/metron/pull/1341/files#diff-e5a5c182fb529e5e2d93fc9f06ce1012.","reactions":{"url":"https://api.github.com/repos/apache/metron/issues/comments/493459303/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/metron/issues/comments/493480413","html_url":"https://github.com/apache/metron/pull/1341#issuecomment-493480413","issue_url":"https://api.github.com/repos/apache/metron/issues/1341","id":493480413,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5MzQ4MDQxMw==","user":{"login":"justinleet","id":5077341,"node_id":"MDQ6VXNlcjUwNzczNDE=","avatar_url":"https://avatars.githubusercontent.com/u/5077341?v=4","gravatar_id":"","url":"https://api.github.com/users/justinleet","html_url":"https://github.com/justinleet","followers_url":"https://api.github.com/users/justinleet/followers","following_url":"https://api.github.com/users/justinleet/following{/other_user}","gists_url":"https://api.github.com/users/justinleet/gists{/gist_id}","starred_url":"https://api.github.com/users/justinleet/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/justinleet/subscriptions","organizations_url":"https://api.github.com/users/justinleet/orgs","repos_url":"https://api.github.com/users/justinleet/repos","events_url":"https://api.github.com/users/justinleet/events{/privacy}","received_events_url":"https://api.github.com/users/justinleet/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-17T14:45:57Z","updated_at":"2019-05-17T14:45:57Z","author_association":"CONTRIBUTOR","body":"Ahh good call, it's been long enough that I'd forgotten about that discussion. There should definitely at least be a README addition that I'll add.\r\n\r\nRe: non-UTF-8 inbound data sets, that's potentially a fair problem, although I don't personally know what the circumstances would be where non-UTF-8 string data is coming from (maybe Latin-1?).  Seems like the only real way to deal with this is to make it configurable at the parser level, or otherwise mixing incoming charset encodings is a problem (Which I think it would be right now, if everything is just using platform default, right? Double check my thinking on that). Then the parser itself just reads with whatever character encoding.\r\n\r\nAt that point, stuff like say GrokParser would need do something like `new InputStreamReader(commonInputStream, getEncoding());` or similar.","reactions":{"url":"https://api.github.com/repos/apache/metron/issues/comments/493480413/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/metron/issues/comments/493500295","html_url":"https://github.com/apache/metron/pull/1341#issuecomment-493500295","issue_url":"https://api.github.com/repos/apache/metron/issues/1341","id":493500295,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5MzUwMDI5NQ==","user":{"login":"mmiklavc","id":658443,"node_id":"MDQ6VXNlcjY1ODQ0Mw==","avatar_url":"https://avatars.githubusercontent.com/u/658443?v=4","gravatar_id":"","url":"https://api.github.com/users/mmiklavc","html_url":"https://github.com/mmiklavc","followers_url":"https://api.github.com/users/mmiklavc/followers","following_url":"https://api.github.com/users/mmiklavc/following{/other_user}","gists_url":"https://api.github.com/users/mmiklavc/gists{/gist_id}","starred_url":"https://api.github.com/users/mmiklavc/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mmiklavc/subscriptions","organizations_url":"https://api.github.com/users/mmiklavc/orgs","repos_url":"https://api.github.com/users/mmiklavc/repos","events_url":"https://api.github.com/users/mmiklavc/events{/privacy}","received_events_url":"https://api.github.com/users/mmiklavc/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-17T15:41:19Z","updated_at":"2019-05-17T15:41:19Z","author_association":"CONTRIBUTOR","body":"I think setting a default to `UTF-8` in the parsers and documenting it would be the way to go. Provide a per-sensor config option, e.g. `inputDataCharset` that lets users configure it for the edge case. Emphasis on per-sensor because 99/100 sensors will probably be `UTF-8`, and then one will be something wild like `EBCDIC` because hey, why not.\r\n\r\nIn general, I agree that it would be odd for any network sensors to be set to anything other than `UTF-8`. We're probably looking at other sources of mischief, though. A couple examples could be streaming and bulk loaded enrichments. I would not be surprised to find someone at some point loading `ISO-8859-1` or `Windows-1252`. In multiple big data projects prior to Metron I had to deal with encodings like this.","reactions":{"url":"https://api.github.com/repos/apache/metron/issues/comments/493500295/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/metron/issues/comments/493550026","html_url":"https://github.com/apache/metron/pull/1408#issuecomment-493550026","issue_url":"https://api.github.com/repos/apache/metron/issues/1408","id":493550026,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5MzU1MDAyNg==","user":{"login":"ottobackwards","id":1111551,"node_id":"MDQ6VXNlcjExMTE1NTE=","avatar_url":"https://avatars.githubusercontent.com/u/1111551?v=4","gravatar_id":"","url":"https://api.github.com/users/ottobackwards","html_url":"https://github.com/ottobackwards","followers_url":"https://api.github.com/users/ottobackwards/followers","following_url":"https://api.github.com/users/ottobackwards/following{/other_user}","gists_url":"https://api.github.com/users/ottobackwards/gists{/gist_id}","starred_url":"https://api.github.com/users/ottobackwards/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ottobackwards/subscriptions","organizations_url":"https://api.github.com/users/ottobackwards/orgs","repos_url":"https://api.github.com/users/ottobackwards/repos","events_url":"https://api.github.com/users/ottobackwards/events{/privacy}","received_events_url":"https://api.github.com/users/ottobackwards/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-17T18:17:18Z","updated_at":"2019-05-17T18:17:18Z","author_association":"CONTRIBUTOR","body":"Simon this looks very nice, I'm going to review.\r\n\r\nOne thing I would ask if you can do an integration test, with integration test data and a configuration for this as we have done with the other parsers?\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/metron/issues/comments/493550026/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/metron/issues/comments/493552590","html_url":"https://github.com/apache/metron/pull/1408#issuecomment-493552590","issue_url":"https://api.github.com/repos/apache/metron/issues/1408","id":493552590,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5MzU1MjU5MA==","user":{"login":"mmiklavc","id":658443,"node_id":"MDQ6VXNlcjY1ODQ0Mw==","avatar_url":"https://avatars.githubusercontent.com/u/658443?v=4","gravatar_id":"","url":"https://api.github.com/users/mmiklavc","html_url":"https://github.com/mmiklavc","followers_url":"https://api.github.com/users/mmiklavc/followers","following_url":"https://api.github.com/users/mmiklavc/following{/other_user}","gists_url":"https://api.github.com/users/mmiklavc/gists{/gist_id}","starred_url":"https://api.github.com/users/mmiklavc/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mmiklavc/subscriptions","organizations_url":"https://api.github.com/users/mmiklavc/orgs","repos_url":"https://api.github.com/users/mmiklavc/repos","events_url":"https://api.github.com/users/mmiklavc/events{/privacy}","received_events_url":"https://api.github.com/users/mmiklavc/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-17T18:25:25Z","updated_at":"2019-05-17T18:25:25Z","author_association":"CONTRIBUTOR","body":"Agree with @ottobackwards. I just had to mess about in the integration tests for parsers, so here are some links to help that process:\r\n\r\n- https://github.com/apache/metron/tree/master/metron-platform/metron-parsing/metron-parsers-common/src/test/java/org/apache/metron/parsers/integration\r\n- https://github.com/apache/metron/tree/master/metron-platform/metron-integration-test/src/main/sample/data","reactions":{"url":"https://api.github.com/repos/apache/metron/issues/comments/493552590/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/metron/issues/comments/493566883","html_url":"https://github.com/apache/metron/pull/1408#issuecomment-493566883","issue_url":"https://api.github.com/repos/apache/metron/issues/1408","id":493566883,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5MzU2Njg4Mw==","user":{"login":"simonellistonball","id":1217895,"node_id":"MDQ6VXNlcjEyMTc4OTU=","avatar_url":"https://avatars.githubusercontent.com/u/1217895?v=4","gravatar_id":"","url":"https://api.github.com/users/simonellistonball","html_url":"https://github.com/simonellistonball","followers_url":"https://api.github.com/users/simonellistonball/followers","following_url":"https://api.github.com/users/simonellistonball/following{/other_user}","gists_url":"https://api.github.com/users/simonellistonball/gists{/gist_id}","starred_url":"https://api.github.com/users/simonellistonball/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/simonellistonball/subscriptions","organizations_url":"https://api.github.com/users/simonellistonball/orgs","repos_url":"https://api.github.com/users/simonellistonball/repos","events_url":"https://api.github.com/users/simonellistonball/events{/privacy}","received_events_url":"https://api.github.com/users/simonellistonball/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-17T19:11:13Z","updated_at":"2019-05-17T19:11:13Z","author_association":"CONTRIBUTOR","body":"Lots of good catches there Mike, I'll do some clean up. Many of the issues are inherited from the fact that I heavily 'borrowed' from the existing CEF parser. Do you think it would be worth fixing that up at the same time on this PR, since I'm refactoring bits of it anyway?","reactions":{"url":"https://api.github.com/repos/apache/metron/issues/comments/493566883/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/metron/issues/comments/493567697","html_url":"https://github.com/apache/metron/pull/1408#issuecomment-493567697","issue_url":"https://api.github.com/repos/apache/metron/issues/1408","id":493567697,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5MzU2NzY5Nw==","user":{"login":"simonellistonball","id":1217895,"node_id":"MDQ6VXNlcjEyMTc4OTU=","avatar_url":"https://avatars.githubusercontent.com/u/1217895?v=4","gravatar_id":"","url":"https://api.github.com/users/simonellistonball","html_url":"https://github.com/simonellistonball","followers_url":"https://api.github.com/users/simonellistonball/followers","following_url":"https://api.github.com/users/simonellistonball/following{/other_user}","gists_url":"https://api.github.com/users/simonellistonball/gists{/gist_id}","starred_url":"https://api.github.com/users/simonellistonball/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/simonellistonball/subscriptions","organizations_url":"https://api.github.com/users/simonellistonball/orgs","repos_url":"https://api.github.com/users/simonellistonball/repos","events_url":"https://api.github.com/users/simonellistonball/events{/privacy}","received_events_url":"https://api.github.com/users/simonellistonball/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-17T19:14:08Z","updated_at":"2019-05-17T19:14:08Z","author_association":"CONTRIBUTOR","body":"@ottobackwards sure, integration tests will come shortly. I've not had much luck finding good sample data to make those exercise much more than the unit tests do already (except of course for the pure integration with the parser runner). I would love to see if anyone else has better samples they could contribute to beef up the tests and help us find any edge cases too.","reactions":{"url":"https://api.github.com/repos/apache/metron/issues/comments/493567697/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/metron/issues/comments/493569746","html_url":"https://github.com/apache/metron/pull/1408#issuecomment-493569746","issue_url":"https://api.github.com/repos/apache/metron/issues/1408","id":493569746,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5MzU2OTc0Ng==","user":{"login":"simonellistonball","id":1217895,"node_id":"MDQ6VXNlcjEyMTc4OTU=","avatar_url":"https://avatars.githubusercontent.com/u/1217895?v=4","gravatar_id":"","url":"https://api.github.com/users/simonellistonball","html_url":"https://github.com/simonellistonball","followers_url":"https://api.github.com/users/simonellistonball/followers","following_url":"https://api.github.com/users/simonellistonball/following{/other_user}","gists_url":"https://api.github.com/users/simonellistonball/gists{/gist_id}","starred_url":"https://api.github.com/users/simonellistonball/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/simonellistonball/subscriptions","organizations_url":"https://api.github.com/users/simonellistonball/orgs","repos_url":"https://api.github.com/users/simonellistonball/repos","events_url":"https://api.github.com/users/simonellistonball/events{/privacy}","received_events_url":"https://api.github.com/users/simonellistonball/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-17T19:20:39Z","updated_at":"2019-05-17T19:20:39Z","author_association":"CONTRIBUTOR","body":"> Agree with @ottobackwards. I just had to mess about in the integration tests for parsers, so here are some links to help that process:\r\n> \r\n> * https://github.com/apache/metron/tree/master/metron-platform/metron-parsing/metron-parsers-common/src/test/java/org/apache/metron/parsers/integration\r\n> * https://github.com/apache/metron/tree/master/metron-platform/metron-integration-test/src/main/sample/data\r\n\r\nIs it really a good idea to keep integration tests for the metron-parsers package in the metron-parsers-common package? Seems like we're mixing concerns there.","reactions":{"url":"https://api.github.com/repos/apache/metron/issues/comments/493569746/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/metron/issues/comments/493584143","html_url":"https://github.com/apache/metron/pull/1389#issuecomment-493584143","issue_url":"https://api.github.com/repos/apache/metron/issues/1389","id":493584143,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5MzU4NDE0Mw==","user":{"login":"merrimanr","id":311928,"node_id":"MDQ6VXNlcjMxMTkyOA==","avatar_url":"https://avatars.githubusercontent.com/u/311928?v=4","gravatar_id":"","url":"https://api.github.com/users/merrimanr","html_url":"https://github.com/merrimanr","followers_url":"https://api.github.com/users/merrimanr/followers","following_url":"https://api.github.com/users/merrimanr/following{/other_user}","gists_url":"https://api.github.com/users/merrimanr/gists{/gist_id}","starred_url":"https://api.github.com/users/merrimanr/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/merrimanr/subscriptions","organizations_url":"https://api.github.com/users/merrimanr/orgs","repos_url":"https://api.github.com/users/merrimanr/repos","events_url":"https://api.github.com/users/merrimanr/events{/privacy}","received_events_url":"https://api.github.com/users/merrimanr/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-17T20:11:34Z","updated_at":"2019-05-17T20:11:34Z","author_association":"CONTRIBUTOR","body":"After another round of testing I realized that we also need to separate `metron-elasticsearch` and `metron-solr` into separate `common` and `storm` modules.  This is because the indexing topology depends on uber jars built from the these modules.  The `storm` modules for each now contain flux property files, start scripts, and indexing integration tests.  The benefit of this is that the awkwardness of modules in `metron-indexing` that only contain a single test goes away.  The `metron-indexing-storm-elasticsearch` module in `metron-indexing` is now `metron-elasticsearch-storm` and likewise for `metron-indexing-storm-solr`.\r\n\r\nThe changes were fairly straightforward except for the `pom.xml` files.  I ran into similar class version issues that we commonly run into when refactoring.  The `metron-elasticsearch-storm` module was particularly tricky.  I believe this is caused by our use of a dedicated `elasticsearch-shaded` module that makes the dependency tree more difficult to follow.  The solution was to just include this module dependency at the top of the `metron-elasticsearch-storm` pom.  \r\n\r\nOther changes included updating paths in various tests since the module structure changed and modules containing these tests are now a level deeper.  Other than that the only changes involved were just moving files.\r\n\r\nI ran through another round of tests (based on instructions in https://github.com/apache/metron/pull/1368) and everything seems to be working well.  I also tested the various meta alert functions in the Alerts UI.  I found a bug (https://issues.apache.org/jira/browse/METRON-2119) but I believe it is preexisting and unrelated to this work.","reactions":{"url":"https://api.github.com/repos/apache/metron/issues/comments/493584143/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/metron/issues/comments/493596017","html_url":"https://github.com/apache/metron/pull/1408#issuecomment-493596017","issue_url":"https://api.github.com/repos/apache/metron/issues/1408","id":493596017,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5MzU5NjAxNw==","user":{"login":"mmiklavc","id":658443,"node_id":"MDQ6VXNlcjY1ODQ0Mw==","avatar_url":"https://avatars.githubusercontent.com/u/658443?v=4","gravatar_id":"","url":"https://api.github.com/users/mmiklavc","html_url":"https://github.com/mmiklavc","followers_url":"https://api.github.com/users/mmiklavc/followers","following_url":"https://api.github.com/users/mmiklavc/following{/other_user}","gists_url":"https://api.github.com/users/mmiklavc/gists{/gist_id}","starred_url":"https://api.github.com/users/mmiklavc/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mmiklavc/subscriptions","organizations_url":"https://api.github.com/users/mmiklavc/orgs","repos_url":"https://api.github.com/users/mmiklavc/repos","events_url":"https://api.github.com/users/mmiklavc/events{/privacy}","received_events_url":"https://api.github.com/users/mmiklavc/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-17T20:52:53Z","updated_at":"2019-05-17T20:52:53Z","author_association":"CONTRIBUTOR","body":"> > Agree with @ottobackwards. I just had to mess about in the integration tests for parsers, so here are some links to help that process:\r\n> > \r\n> > * https://github.com/apache/metron/tree/master/metron-platform/metron-parsing/metron-parsers-common/src/test/java/org/apache/metron/parsers/integration\r\n> > * https://github.com/apache/metron/tree/master/metron-platform/metron-integration-test/src/main/sample/data\r\n> \r\n> Is it really a good idea to keep integration tests for the metron-parsers package in the metron-parsers-common package? Seems like we're mixing concerns there.\r\n\r\nI tend to agree, though a handful of them are considered \"common.\"\r\n\r\n- \"jsonMap\",\r\n- \"jsonMapQuery\",\r\n- \"jsonMapWrappedQuery\",\r\n- \"syslog3164\",\r\n- \"syslog5424\"\r\n\r\nThis should probably be split up a bit, but I don't think it needs to happen in this PR.","reactions":{"url":"https://api.github.com/repos/apache/metron/issues/comments/493596017/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/metron/issues/comments/493596337","html_url":"https://github.com/apache/metron/pull/1408#issuecomment-493596337","issue_url":"https://api.github.com/repos/apache/metron/issues/1408","id":493596337,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5MzU5NjMzNw==","user":{"login":"mmiklavc","id":658443,"node_id":"MDQ6VXNlcjY1ODQ0Mw==","avatar_url":"https://avatars.githubusercontent.com/u/658443?v=4","gravatar_id":"","url":"https://api.github.com/users/mmiklavc","html_url":"https://github.com/mmiklavc","followers_url":"https://api.github.com/users/mmiklavc/followers","following_url":"https://api.github.com/users/mmiklavc/following{/other_user}","gists_url":"https://api.github.com/users/mmiklavc/gists{/gist_id}","starred_url":"https://api.github.com/users/mmiklavc/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mmiklavc/subscriptions","organizations_url":"https://api.github.com/users/mmiklavc/orgs","repos_url":"https://api.github.com/users/mmiklavc/repos","events_url":"https://api.github.com/users/mmiklavc/events{/privacy}","received_events_url":"https://api.github.com/users/mmiklavc/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-17T20:54:11Z","updated_at":"2019-05-17T20:54:11Z","author_association":"CONTRIBUTOR","body":"> Lots of good catches there Mike, I'll do some clean up. Many of the issues are inherited from the fact that I heavily 'borrowed' from the existing CEF parser. Do you think it would be worth fixing that up at the same time on this PR, since I'm refactoring bits of it anyway?\r\n\r\nSure, that sounds reasonable. What did you have in mind?","reactions":{"url":"https://api.github.com/repos/apache/metron/issues/comments/493596337/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/metron/issues/comments/493599907","html_url":"https://github.com/apache/metron/pull/1409#issuecomment-493599907","issue_url":"https://api.github.com/repos/apache/metron/issues/1409","id":493599907,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5MzU5OTkwNw==","user":{"login":"mmiklavc","id":658443,"node_id":"MDQ6VXNlcjY1ODQ0Mw==","avatar_url":"https://avatars.githubusercontent.com/u/658443?v=4","gravatar_id":"","url":"https://api.github.com/users/mmiklavc","html_url":"https://github.com/mmiklavc","followers_url":"https://api.github.com/users/mmiklavc/followers","following_url":"https://api.github.com/users/mmiklavc/following{/other_user}","gists_url":"https://api.github.com/users/mmiklavc/gists{/gist_id}","starred_url":"https://api.github.com/users/mmiklavc/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mmiklavc/subscriptions","organizations_url":"https://api.github.com/users/mmiklavc/orgs","repos_url":"https://api.github.com/users/mmiklavc/repos","events_url":"https://api.github.com/users/mmiklavc/events{/privacy}","received_events_url":"https://api.github.com/users/mmiklavc/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-17T21:08:34Z","updated_at":"2019-05-17T21:08:34Z","author_association":"CONTRIBUTOR","body":"Here is the proposed follow on Jira to normalize all existing Metron-managed parsers\r\n\r\nhttps://issues.apache.org/jira/browse/METRON-2120","reactions":{"url":"https://api.github.com/repos/apache/metron/issues/comments/493599907/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/metron/issues/comments/493602054","html_url":"https://github.com/apache/metron/pull/1409#issuecomment-493602054","issue_url":"https://api.github.com/repos/apache/metron/issues/1409","id":493602054,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5MzYwMjA1NA==","user":{"login":"mmiklavc","id":658443,"node_id":"MDQ6VXNlcjY1ODQ0Mw==","avatar_url":"https://avatars.githubusercontent.com/u/658443?v=4","gravatar_id":"","url":"https://api.github.com/users/mmiklavc","html_url":"https://github.com/mmiklavc","followers_url":"https://api.github.com/users/mmiklavc/followers","following_url":"https://api.github.com/users/mmiklavc/following{/other_user}","gists_url":"https://api.github.com/users/mmiklavc/gists{/gist_id}","starred_url":"https://api.github.com/users/mmiklavc/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mmiklavc/subscriptions","organizations_url":"https://api.github.com/users/mmiklavc/orgs","repos_url":"https://api.github.com/users/mmiklavc/repos","events_url":"https://api.github.com/users/mmiklavc/events{/privacy}","received_events_url":"https://api.github.com/users/mmiklavc/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-17T21:17:00Z","updated_at":"2019-05-17T21:17:00Z","author_association":"CONTRIBUTOR","body":"@simonellistonball and @ottobackwards - you guys probably want to have a chance to review the proposed functionality change before it goes in.","reactions":{"url":"https://api.github.com/repos/apache/metron/issues/comments/493602054/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/metron/issues/comments/493607746","html_url":"https://github.com/apache/metron/pull/1407#issuecomment-493607746","issue_url":"https://api.github.com/repos/apache/metron/issues/1407","id":493607746,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5MzYwNzc0Ng==","user":{"login":"mmiklavc","id":658443,"node_id":"MDQ6VXNlcjY1ODQ0Mw==","avatar_url":"https://avatars.githubusercontent.com/u/658443?v=4","gravatar_id":"","url":"https://api.github.com/users/mmiklavc","html_url":"https://github.com/mmiklavc","followers_url":"https://api.github.com/users/mmiklavc/followers","following_url":"https://api.github.com/users/mmiklavc/following{/other_user}","gists_url":"https://api.github.com/users/mmiklavc/gists{/gist_id}","starred_url":"https://api.github.com/users/mmiklavc/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mmiklavc/subscriptions","organizations_url":"https://api.github.com/users/mmiklavc/orgs","repos_url":"https://api.github.com/users/mmiklavc/repos","events_url":"https://api.github.com/users/mmiklavc/events{/privacy}","received_events_url":"https://api.github.com/users/mmiklavc/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-17T21:41:20Z","updated_at":"2019-05-17T21:41:20Z","author_association":"CONTRIBUTOR","body":"Looks good, thanks @justinleet! +1","reactions":{"url":"https://api.github.com/repos/apache/metron/issues/comments/493607746/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/metron/issues/comments/493684308","html_url":"https://github.com/apache/metron/pull/1408#issuecomment-493684308","issue_url":"https://api.github.com/repos/apache/metron/issues/1408","id":493684308,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5MzY4NDMwOA==","user":{"login":"ottobackwards","id":1111551,"node_id":"MDQ6VXNlcjExMTE1NTE=","avatar_url":"https://avatars.githubusercontent.com/u/1111551?v=4","gravatar_id":"","url":"https://api.github.com/users/ottobackwards","html_url":"https://github.com/ottobackwards","followers_url":"https://api.github.com/users/ottobackwards/followers","following_url":"https://api.github.com/users/ottobackwards/following{/other_user}","gists_url":"https://api.github.com/users/ottobackwards/gists{/gist_id}","starred_url":"https://api.github.com/users/ottobackwards/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ottobackwards/subscriptions","organizations_url":"https://api.github.com/users/ottobackwards/orgs","repos_url":"https://api.github.com/users/ottobackwards/repos","events_url":"https://api.github.com/users/ottobackwards/events{/privacy}","received_events_url":"https://api.github.com/users/ottobackwards/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-18T15:12:39Z","updated_at":"2019-05-18T15:12:39Z","author_association":"CONTRIBUTOR","body":"I would leave the parsers over all testing refactor ( the configurations required for integration getting installed ) for a separate pr and not mix concerns here.  Let's get a standard parser through in this pr.","reactions":{"url":"https://api.github.com/repos/apache/metron/issues/comments/493684308/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/metron/issues/comments/493745645","html_url":"https://github.com/apache/metron/pull/1383#issuecomment-493745645","issue_url":"https://api.github.com/repos/apache/metron/issues/1383","id":493745645,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5Mzc0NTY0NQ==","user":{"login":"tigerquoll","id":8340922,"node_id":"MDQ6VXNlcjgzNDA5MjI=","avatar_url":"https://avatars.githubusercontent.com/u/8340922?v=4","gravatar_id":"","url":"https://api.github.com/users/tigerquoll","html_url":"https://github.com/tigerquoll","followers_url":"https://api.github.com/users/tigerquoll/followers","following_url":"https://api.github.com/users/tigerquoll/following{/other_user}","gists_url":"https://api.github.com/users/tigerquoll/gists{/gist_id}","starred_url":"https://api.github.com/users/tigerquoll/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tigerquoll/subscriptions","organizations_url":"https://api.github.com/users/tigerquoll/orgs","repos_url":"https://api.github.com/users/tigerquoll/repos","events_url":"https://api.github.com/users/tigerquoll/events{/privacy}","received_events_url":"https://api.github.com/users/tigerquoll/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-19T10:35:56Z","updated_at":"2019-05-19T10:35:56Z","author_association":"CONTRIBUTOR","body":"Done - new Jira for followup action at https://issues.apache.org/jira/browse/METRON-2121","reactions":{"url":"https://api.github.com/repos/apache/metron/issues/comments/493745645/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/metron/issues/comments/493953570","html_url":"https://github.com/apache/metron/pull/1380#issuecomment-493953570","issue_url":"https://api.github.com/repos/apache/metron/issues/1380","id":493953570,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5Mzk1MzU3MA==","user":{"login":"sardell","id":7304869,"node_id":"MDQ6VXNlcjczMDQ4Njk=","avatar_url":"https://avatars.githubusercontent.com/u/7304869?v=4","gravatar_id":"","url":"https://api.github.com/users/sardell","html_url":"https://github.com/sardell","followers_url":"https://api.github.com/users/sardell/followers","following_url":"https://api.github.com/users/sardell/following{/other_user}","gists_url":"https://api.github.com/users/sardell/gists{/gist_id}","starred_url":"https://api.github.com/users/sardell/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sardell/subscriptions","organizations_url":"https://api.github.com/users/sardell/orgs","repos_url":"https://api.github.com/users/sardell/repos","events_url":"https://api.github.com/users/sardell/events{/privacy}","received_events_url":"https://api.github.com/users/sardell/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-20T11:50:00Z","updated_at":"2019-05-20T11:50:00Z","author_association":"CONTRIBUTOR","body":"@ruffle1986 I see what you mean after testing locally. However, when add the toggle function and the click listener on the calendar icon back into the code, I can see the calendar toggling visibility if I step through with a debugger. After further inspection and testing, I was able to override this behavior by adding `bound: false` to the Pikaday configuration (this allows us to manually handle the open/close functionality with Angular's event binding) and adding `this.picker.hide();` in the ngOnInit function after Pikaday is instantiated (this is what prevents the re-opening of the calendar when toggling open/close).\r\n\r\n![Screen Shot 2019-05-20 at 1 43 27 PM](https://user-images.githubusercontent.com/7304869/58019226-52759000-7b05-11e9-907d-d1f4d1e88cde.png)\r\n\r\n\r\nIn addition, I added `this.picker.hide();` at the end of both if statements inside of ngOnChanges so the calendar closes after a user chooses a date. \r\n\r\n![Screen Shot 2019-05-20 at 1 43 37 PM](https://user-images.githubusercontent.com/7304869/58019236-573a4400-7b05-11e9-90f8-826416e08c6a.png)\r\n\r\nI also noticed that the calendar defaults back to `position: static` with the `bound: false` configuration, so I added the following to styles.scss:\r\n```\r\n.pika-single {\r\n  position: absolute !important;\r\n}\r\n```\r\n\r\nAfter doing all that, it seems to work fine. Try it out and let me know what you think.\r\n\r\n![pikaday-open-close-solution1](https://user-images.githubusercontent.com/7304869/58019273-691be700-7b05-11e9-9cf8-ebe2f49e6804.gif)\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/metron/issues/comments/493953570/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/metron/issues/comments/493969932","html_url":"https://github.com/apache/metron/pull/789#issuecomment-493969932","issue_url":"https://api.github.com/repos/apache/metron/issues/789","id":493969932,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5Mzk2OTkzMg==","user":{"login":"ottobackwards","id":1111551,"node_id":"MDQ6VXNlcjExMTE1NTE=","avatar_url":"https://avatars.githubusercontent.com/u/1111551?v=4","gravatar_id":"","url":"https://api.github.com/users/ottobackwards","html_url":"https://github.com/ottobackwards","followers_url":"https://api.github.com/users/ottobackwards/followers","following_url":"https://api.github.com/users/ottobackwards/following{/other_user}","gists_url":"https://api.github.com/users/ottobackwards/gists{/gist_id}","starred_url":"https://api.github.com/users/ottobackwards/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ottobackwards/subscriptions","organizations_url":"https://api.github.com/users/ottobackwards/orgs","repos_url":"https://api.github.com/users/ottobackwards/repos","events_url":"https://api.github.com/users/ottobackwards/events{/privacy}","received_events_url":"https://api.github.com/users/ottobackwards/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-20T12:40:17Z","updated_at":"2019-05-20T12:40:17Z","author_association":"CONTRIBUTOR","body":"@mmiklavc can you re-visit this and if it is not going to land close it?","reactions":{"url":"https://api.github.com/repos/apache/metron/issues/comments/493969932/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/metron/issues/comments/493971334","html_url":"https://github.com/apache/metron/pull/916#issuecomment-493971334","issue_url":"https://api.github.com/repos/apache/metron/issues/916","id":493971334,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5Mzk3MTMzNA==","user":{"login":"ottobackwards","id":1111551,"node_id":"MDQ6VXNlcjExMTE1NTE=","avatar_url":"https://avatars.githubusercontent.com/u/1111551?v=4","gravatar_id":"","url":"https://api.github.com/users/ottobackwards","html_url":"https://github.com/ottobackwards","followers_url":"https://api.github.com/users/ottobackwards/followers","following_url":"https://api.github.com/users/ottobackwards/following{/other_user}","gists_url":"https://api.github.com/users/ottobackwards/gists{/gist_id}","starred_url":"https://api.github.com/users/ottobackwards/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ottobackwards/subscriptions","organizations_url":"https://api.github.com/users/ottobackwards/orgs","repos_url":"https://api.github.com/users/ottobackwards/repos","events_url":"https://api.github.com/users/ottobackwards/events{/privacy}","received_events_url":"https://api.github.com/users/ottobackwards/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-20T12:44:15Z","updated_at":"2019-05-20T12:44:15Z","author_association":"CONTRIBUTOR","body":"Getting back to this, I'm OK with adding the new readme's and the links to the /contrib area,\r\ncan we get that going?","reactions":{"url":"https://api.github.com/repos/apache/metron/issues/comments/493971334/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/metron/issues/comments/493971457","html_url":"https://github.com/apache/metron/pull/916#issuecomment-493971457","issue_url":"https://api.github.com/repos/apache/metron/issues/916","id":493971457,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5Mzk3MTQ1Nw==","user":{"login":"ottobackwards","id":1111551,"node_id":"MDQ6VXNlcjExMTE1NTE=","avatar_url":"https://avatars.githubusercontent.com/u/1111551?v=4","gravatar_id":"","url":"https://api.github.com/users/ottobackwards","html_url":"https://github.com/ottobackwards","followers_url":"https://api.github.com/users/ottobackwards/followers","following_url":"https://api.github.com/users/ottobackwards/following{/other_user}","gists_url":"https://api.github.com/users/ottobackwards/gists{/gist_id}","starred_url":"https://api.github.com/users/ottobackwards/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ottobackwards/subscriptions","organizations_url":"https://api.github.com/users/ottobackwards/orgs","repos_url":"https://api.github.com/users/ottobackwards/repos","events_url":"https://api.github.com/users/ottobackwards/events{/privacy}","received_events_url":"https://api.github.com/users/ottobackwards/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-20T12:44:38Z","updated_at":"2019-05-20T12:44:38Z","author_association":"CONTRIBUTOR","body":"We may want to refactor this to be centos7 now that we have support for this","reactions":{"url":"https://api.github.com/repos/apache/metron/issues/comments/493971457/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/metron/issues/comments/493973313","html_url":"https://github.com/apache/metron/pull/1282#issuecomment-493973313","issue_url":"https://api.github.com/repos/apache/metron/issues/1282","id":493973313,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5Mzk3MzMxMw==","user":{"login":"ottobackwards","id":1111551,"node_id":"MDQ6VXNlcjExMTE1NTE=","avatar_url":"https://avatars.githubusercontent.com/u/1111551?v=4","gravatar_id":"","url":"https://api.github.com/users/ottobackwards","html_url":"https://github.com/ottobackwards","followers_url":"https://api.github.com/users/ottobackwards/followers","following_url":"https://api.github.com/users/ottobackwards/following{/other_user}","gists_url":"https://api.github.com/users/ottobackwards/gists{/gist_id}","starred_url":"https://api.github.com/users/ottobackwards/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ottobackwards/subscriptions","organizations_url":"https://api.github.com/users/ottobackwards/orgs","repos_url":"https://api.github.com/users/ottobackwards/repos","events_url":"https://api.github.com/users/ottobackwards/events{/privacy}","received_events_url":"https://api.github.com/users/ottobackwards/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-20T12:49:49Z","updated_at":"2019-05-20T12:49:49Z","author_association":"CONTRIBUTOR","body":"What is up with this?","reactions":{"url":"https://api.github.com/repos/apache/metron/issues/comments/493973313/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/metron/issues/comments/493979048","html_url":"https://github.com/apache/metron/pull/1282#issuecomment-493979048","issue_url":"https://api.github.com/repos/apache/metron/issues/1282","id":493979048,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5Mzk3OTA0OA==","user":{"login":"JonZeolla","id":1385510,"node_id":"MDQ6VXNlcjEzODU1MTA=","avatar_url":"https://avatars.githubusercontent.com/u/1385510?v=4","gravatar_id":"","url":"https://api.github.com/users/JonZeolla","html_url":"https://github.com/JonZeolla","followers_url":"https://api.github.com/users/JonZeolla/followers","following_url":"https://api.github.com/users/JonZeolla/following{/other_user}","gists_url":"https://api.github.com/users/JonZeolla/gists{/gist_id}","starred_url":"https://api.github.com/users/JonZeolla/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/JonZeolla/subscriptions","organizations_url":"https://api.github.com/users/JonZeolla/orgs","repos_url":"https://api.github.com/users/JonZeolla/repos","events_url":"https://api.github.com/users/JonZeolla/events{/privacy}","received_events_url":"https://api.github.com/users/JonZeolla/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-20T13:05:50Z","updated_at":"2019-05-20T13:05:50Z","author_association":"MEMBER","body":"I was expecting a 0.3 release in the plugin sooner rather than later, but that didn't happen.\r\n\r\nRight now the 0.3 release is pending the test for topic selection logic, and then to be put up to a vote.","reactions":{"url":"https://api.github.com/repos/apache/metron/issues/comments/493979048/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/metron/issues/comments/494007373","html_url":"https://github.com/apache/metron/pull/1408#issuecomment-494007373","issue_url":"https://api.github.com/repos/apache/metron/issues/1408","id":494007373,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NDAwNzM3Mw==","user":{"login":"simonellistonball","id":1217895,"node_id":"MDQ6VXNlcjEyMTc4OTU=","avatar_url":"https://avatars.githubusercontent.com/u/1217895?v=4","gravatar_id":"","url":"https://api.github.com/users/simonellistonball","html_url":"https://github.com/simonellistonball","followers_url":"https://api.github.com/users/simonellistonball/followers","following_url":"https://api.github.com/users/simonellistonball/following{/other_user}","gists_url":"https://api.github.com/users/simonellistonball/gists{/gist_id}","starred_url":"https://api.github.com/users/simonellistonball/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/simonellistonball/subscriptions","organizations_url":"https://api.github.com/users/simonellistonball/orgs","repos_url":"https://api.github.com/users/simonellistonball/repos","events_url":"https://api.github.com/users/simonellistonball/events{/privacy}","received_events_url":"https://api.github.com/users/simonellistonball/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-20T14:18:46Z","updated_at":"2019-05-20T14:18:46Z","author_association":"CONTRIBUTOR","body":"> > Lots of good catches there Mike, I'll do some clean up. Many of the issues are inherited from the fact that I heavily 'borrowed' from the existing CEF parser. Do you think it would be worth fixing that up at the same time on this PR, since I'm refactoring bits of it anyway?\r\n> \r\n> Sure, that sounds reasonable. What did you have in mind?\r\n\r\nI was thinking that the same string to constant work done here in the LEEF parser should also be backported to the CEF parser, but that's arguably a follow on task from this PR since it's in a different parser.","reactions":{"url":"https://api.github.com/repos/apache/metron/issues/comments/494007373/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/metron/issues/comments/494007778","html_url":"https://github.com/apache/metron/pull/1408#issuecomment-494007778","issue_url":"https://api.github.com/repos/apache/metron/issues/1408","id":494007778,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NDAwNzc3OA==","user":{"login":"simonellistonball","id":1217895,"node_id":"MDQ6VXNlcjEyMTc4OTU=","avatar_url":"https://avatars.githubusercontent.com/u/1217895?v=4","gravatar_id":"","url":"https://api.github.com/users/simonellistonball","html_url":"https://github.com/simonellistonball","followers_url":"https://api.github.com/users/simonellistonball/followers","following_url":"https://api.github.com/users/simonellistonball/following{/other_user}","gists_url":"https://api.github.com/users/simonellistonball/gists{/gist_id}","starred_url":"https://api.github.com/users/simonellistonball/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/simonellistonball/subscriptions","organizations_url":"https://api.github.com/users/simonellistonball/orgs","repos_url":"https://api.github.com/users/simonellistonball/repos","events_url":"https://api.github.com/users/simonellistonball/events{/privacy}","received_events_url":"https://api.github.com/users/simonellistonball/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-20T14:19:47Z","updated_at":"2019-05-20T14:19:47Z","author_association":"CONTRIBUTOR","body":"I think I've addressed all the good points raised by @ottobackwards and @mmiklavc Anything else blocking this for anyone?","reactions":{"url":"https://api.github.com/repos/apache/metron/issues/comments/494007778/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/metron/issues/comments/494028121","html_url":"https://github.com/apache/metron/pull/1408#issuecomment-494028121","issue_url":"https://api.github.com/repos/apache/metron/issues/1408","id":494028121,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NDAyODEyMQ==","user":{"login":"ottobackwards","id":1111551,"node_id":"MDQ6VXNlcjExMTE1NTE=","avatar_url":"https://avatars.githubusercontent.com/u/1111551?v=4","gravatar_id":"","url":"https://api.github.com/users/ottobackwards","html_url":"https://github.com/ottobackwards","followers_url":"https://api.github.com/users/ottobackwards/followers","following_url":"https://api.github.com/users/ottobackwards/following{/other_user}","gists_url":"https://api.github.com/users/ottobackwards/gists{/gist_id}","starred_url":"https://api.github.com/users/ottobackwards/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ottobackwards/subscriptions","organizations_url":"https://api.github.com/users/ottobackwards/orgs","repos_url":"https://api.github.com/users/ottobackwards/repos","events_url":"https://api.github.com/users/ottobackwards/events{/privacy}","received_events_url":"https://api.github.com/users/ottobackwards/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-20T15:09:09Z","updated_at":"2019-05-20T15:09:09Z","author_association":"CONTRIBUTOR","body":"nice work simon, i have one more nit comment, after that I'm set to approve","reactions":{"url":"https://api.github.com/repos/apache/metron/issues/comments/494028121/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/metron/issues/comments/494037198","html_url":"https://github.com/apache/metron/pull/1408#issuecomment-494037198","issue_url":"https://api.github.com/repos/apache/metron/issues/1408","id":494037198,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NDAzNzE5OA==","user":{"login":"ottobackwards","id":1111551,"node_id":"MDQ6VXNlcjExMTE1NTE=","avatar_url":"https://avatars.githubusercontent.com/u/1111551?v=4","gravatar_id":"","url":"https://api.github.com/users/ottobackwards","html_url":"https://github.com/ottobackwards","followers_url":"https://api.github.com/users/ottobackwards/followers","following_url":"https://api.github.com/users/ottobackwards/following{/other_user}","gists_url":"https://api.github.com/users/ottobackwards/gists{/gist_id}","starred_url":"https://api.github.com/users/ottobackwards/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ottobackwards/subscriptions","organizations_url":"https://api.github.com/users/ottobackwards/orgs","repos_url":"https://api.github.com/users/ottobackwards/repos","events_url":"https://api.github.com/users/ottobackwards/events{/privacy}","received_events_url":"https://api.github.com/users/ottobackwards/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-20T15:30:48Z","updated_at":"2019-05-20T15:30:48Z","author_association":"CONTRIBUTOR","body":"@mmiklavc you all set with this?","reactions":{"url":"https://api.github.com/repos/apache/metron/issues/comments/494037198/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/metron/issues/comments/494117391","html_url":"https://github.com/apache/metron/pull/789#issuecomment-494117391","issue_url":"https://api.github.com/repos/apache/metron/issues/789","id":494117391,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NDExNzM5MQ==","user":{"login":"mmiklavc","id":658443,"node_id":"MDQ6VXNlcjY1ODQ0Mw==","avatar_url":"https://avatars.githubusercontent.com/u/658443?v=4","gravatar_id":"","url":"https://api.github.com/users/mmiklavc","html_url":"https://github.com/mmiklavc","followers_url":"https://api.github.com/users/mmiklavc/followers","following_url":"https://api.github.com/users/mmiklavc/following{/other_user}","gists_url":"https://api.github.com/users/mmiklavc/gists{/gist_id}","starred_url":"https://api.github.com/users/mmiklavc/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mmiklavc/subscriptions","organizations_url":"https://api.github.com/users/mmiklavc/orgs","repos_url":"https://api.github.com/users/mmiklavc/repos","events_url":"https://api.github.com/users/mmiklavc/events{/privacy}","received_events_url":"https://api.github.com/users/mmiklavc/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-20T19:21:04Z","updated_at":"2019-05-20T19:21:04Z","author_association":"CONTRIBUTOR","body":"@ottobackwards - considering the current state of enrichment and global config options, I think we should close this. Anything special we need to do to close someone else's PR? We've crossed the threshold for activity lapse, so maybe that's all.","reactions":{"url":"https://api.github.com/repos/apache/metron/issues/comments/494117391/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/metron/issues/comments/494117949","html_url":"https://github.com/apache/metron/pull/1408#issuecomment-494117949","issue_url":"https://api.github.com/repos/apache/metron/issues/1408","id":494117949,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NDExNzk0OQ==","user":{"login":"mmiklavc","id":658443,"node_id":"MDQ6VXNlcjY1ODQ0Mw==","avatar_url":"https://avatars.githubusercontent.com/u/658443?v=4","gravatar_id":"","url":"https://api.github.com/users/mmiklavc","html_url":"https://github.com/mmiklavc","followers_url":"https://api.github.com/users/mmiklavc/followers","following_url":"https://api.github.com/users/mmiklavc/following{/other_user}","gists_url":"https://api.github.com/users/mmiklavc/gists{/gist_id}","starred_url":"https://api.github.com/users/mmiklavc/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mmiklavc/subscriptions","organizations_url":"https://api.github.com/users/mmiklavc/orgs","repos_url":"https://api.github.com/users/mmiklavc/repos","events_url":"https://api.github.com/users/mmiklavc/events{/privacy}","received_events_url":"https://api.github.com/users/mmiklavc/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-20T19:22:50Z","updated_at":"2019-05-20T19:22:50Z","author_association":"CONTRIBUTOR","body":"Looks good, +1 by inspection. Thanks @simonellistonball.","reactions":{"url":"https://api.github.com/repos/apache/metron/issues/comments/494117949/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/metron/issues/comments/494118095","html_url":"https://github.com/apache/metron/pull/1383#issuecomment-494118095","issue_url":"https://api.github.com/repos/apache/metron/issues/1383","id":494118095,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NDExODA5NQ==","user":{"login":"mmiklavc","id":658443,"node_id":"MDQ6VXNlcjY1ODQ0Mw==","avatar_url":"https://avatars.githubusercontent.com/u/658443?v=4","gravatar_id":"","url":"https://api.github.com/users/mmiklavc","html_url":"https://github.com/mmiklavc","followers_url":"https://api.github.com/users/mmiklavc/followers","following_url":"https://api.github.com/users/mmiklavc/following{/other_user}","gists_url":"https://api.github.com/users/mmiklavc/gists{/gist_id}","starred_url":"https://api.github.com/users/mmiklavc/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mmiklavc/subscriptions","organizations_url":"https://api.github.com/users/mmiklavc/orgs","repos_url":"https://api.github.com/users/mmiklavc/repos","events_url":"https://api.github.com/users/mmiklavc/events{/privacy}","received_events_url":"https://api.github.com/users/mmiklavc/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-20T19:23:22Z","updated_at":"2019-05-20T19:23:22Z","author_association":"CONTRIBUTOR","body":"+1 by inspection, thanks @tigerquoll ","reactions":{"url":"https://api.github.com/repos/apache/metron/issues/comments/494118095/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/metron/issues/comments/494123698","html_url":"https://github.com/apache/metron/pull/789#issuecomment-494123698","issue_url":"https://api.github.com/repos/apache/metron/issues/789","id":494123698,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NDEyMzY5OA==","user":{"login":"ottobackwards","id":1111551,"node_id":"MDQ6VXNlcjExMTE1NTE=","avatar_url":"https://avatars.githubusercontent.com/u/1111551?v=4","gravatar_id":"","url":"https://api.github.com/users/ottobackwards","html_url":"https://github.com/ottobackwards","followers_url":"https://api.github.com/users/ottobackwards/followers","following_url":"https://api.github.com/users/ottobackwards/following{/other_user}","gists_url":"https://api.github.com/users/ottobackwards/gists{/gist_id}","starred_url":"https://api.github.com/users/ottobackwards/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ottobackwards/subscriptions","organizations_url":"https://api.github.com/users/ottobackwards/orgs","repos_url":"https://api.github.com/users/ottobackwards/repos","events_url":"https://api.github.com/users/ottobackwards/events{/privacy}","received_events_url":"https://api.github.com/users/ottobackwards/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-20T19:41:43Z","updated_at":"2019-05-20T19:41:43Z","author_association":"CONTRIBUTOR","body":"@DimDroll we are going to close this at this time.  Please feel free to open a DISCUSS thread on the dev list to continue the discussion.","reactions":{"url":"https://api.github.com/repos/apache/metron/issues/comments/494123698/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/metron/issues/comments/494126059","html_url":"https://github.com/apache/metron/pull/1408#issuecomment-494126059","issue_url":"https://api.github.com/repos/apache/metron/issues/1408","id":494126059,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NDEyNjA1OQ==","user":{"login":"ottobackwards","id":1111551,"node_id":"MDQ6VXNlcjExMTE1NTE=","avatar_url":"https://avatars.githubusercontent.com/u/1111551?v=4","gravatar_id":"","url":"https://api.github.com/users/ottobackwards","html_url":"https://github.com/ottobackwards","followers_url":"https://api.github.com/users/ottobackwards/followers","following_url":"https://api.github.com/users/ottobackwards/following{/other_user}","gists_url":"https://api.github.com/users/ottobackwards/gists{/gist_id}","starred_url":"https://api.github.com/users/ottobackwards/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ottobackwards/subscriptions","organizations_url":"https://api.github.com/users/ottobackwards/orgs","repos_url":"https://api.github.com/users/ottobackwards/repos","events_url":"https://api.github.com/users/ottobackwards/events{/privacy}","received_events_url":"https://api.github.com/users/ottobackwards/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-20T19:49:25Z","updated_at":"2019-05-20T19:49:25Z","author_association":"CONTRIBUTOR","body":"+1","reactions":{"url":"https://api.github.com/repos/apache/metron/issues/comments/494126059/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/metron/issues/comments/494156784","html_url":"https://github.com/apache/metron/pull/1403#issuecomment-494156784","issue_url":"https://api.github.com/repos/apache/metron/issues/1403","id":494156784,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NDE1Njc4NA==","user":{"login":"merrimanr","id":311928,"node_id":"MDQ6VXNlcjMxMTkyOA==","avatar_url":"https://avatars.githubusercontent.com/u/311928?v=4","gravatar_id":"","url":"https://api.github.com/users/merrimanr","html_url":"https://github.com/merrimanr","followers_url":"https://api.github.com/users/merrimanr/followers","following_url":"https://api.github.com/users/merrimanr/following{/other_user}","gists_url":"https://api.github.com/users/merrimanr/gists{/gist_id}","starred_url":"https://api.github.com/users/merrimanr/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/merrimanr/subscriptions","organizations_url":"https://api.github.com/users/merrimanr/orgs","repos_url":"https://api.github.com/users/merrimanr/repos","events_url":"https://api.github.com/users/merrimanr/events{/privacy}","received_events_url":"https://api.github.com/users/merrimanr/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-20T21:25:57Z","updated_at":"2019-05-20T21:25:57Z","author_association":"CONTRIBUTOR","body":"The latest commit should address all of your feedback so far.  For read-side testing I was able to add this to the `ElasticsearchSearchIntegrationTest` with only a couple of changes `ElasticSearchComponent` class.  The test now includes bro messages with and without the Metron GUID.  Does that provide the coverage you're looking for?","reactions":{"url":"https://api.github.com/repos/apache/metron/issues/comments/494156784/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/metron/issues/comments/494193217","html_url":"https://github.com/apache/metron/pull/1416#issuecomment-494193217","issue_url":"https://api.github.com/repos/apache/metron/issues/1416","id":494193217,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NDE5MzIxNw==","user":{"login":"mmiklavc","id":658443,"node_id":"MDQ6VXNlcjY1ODQ0Mw==","avatar_url":"https://avatars.githubusercontent.com/u/658443?v=4","gravatar_id":"","url":"https://api.github.com/users/mmiklavc","html_url":"https://github.com/mmiklavc","followers_url":"https://api.github.com/users/mmiklavc/followers","following_url":"https://api.github.com/users/mmiklavc/following{/other_user}","gists_url":"https://api.github.com/users/mmiklavc/gists{/gist_id}","starred_url":"https://api.github.com/users/mmiklavc/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mmiklavc/subscriptions","organizations_url":"https://api.github.com/users/mmiklavc/orgs","repos_url":"https://api.github.com/users/mmiklavc/repos","events_url":"https://api.github.com/users/mmiklavc/events{/privacy}","received_events_url":"https://api.github.com/users/mmiklavc/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-21T00:13:18Z","updated_at":"2019-05-21T00:13:18Z","author_association":"CONTRIBUTOR","body":"### Testing Instructions\r\n\r\nThis is test via unit tests, however you can also spin up the Stellar CLI and do the following for manual validation:\r\n\r\n**Test for regressions on list type**\r\n```\r\nmylist := [ 1, 2, 3 ]\r\nJOIN(mylist, ',')\r\n\"1,2,3\"\r\n```\r\n\r\n**Test set types**\r\n```\r\nJOIN(SET_INIT( [ 'foo', 'bar', 1, 2, 'baz' ] ), ',')\r\n\"foo,bar,1,2,baz\"\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/apache/metron/issues/comments/494193217/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/metron/issues/comments/494446602","html_url":"https://github.com/apache/metron/pull/1417#issuecomment-494446602","issue_url":"https://api.github.com/repos/apache/metron/issues/1417","id":494446602,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NDQ0NjYwMg==","user":{"login":"mmiklavc","id":658443,"node_id":"MDQ6VXNlcjY1ODQ0Mw==","avatar_url":"https://avatars.githubusercontent.com/u/658443?v=4","gravatar_id":"","url":"https://api.github.com/users/mmiklavc","html_url":"https://github.com/mmiklavc","followers_url":"https://api.github.com/users/mmiklavc/followers","following_url":"https://api.github.com/users/mmiklavc/following{/other_user}","gists_url":"https://api.github.com/users/mmiklavc/gists{/gist_id}","starred_url":"https://api.github.com/users/mmiklavc/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mmiklavc/subscriptions","organizations_url":"https://api.github.com/users/mmiklavc/orgs","repos_url":"https://api.github.com/users/mmiklavc/repos","events_url":"https://api.github.com/users/mmiklavc/events{/privacy}","received_events_url":"https://api.github.com/users/mmiklavc/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-21T15:43:37Z","updated_at":"2019-05-21T15:43:37Z","author_association":"CONTRIBUTOR","body":"+1 by inspection pending Travis. Thanks @justinleet!","reactions":{"url":"https://api.github.com/repos/apache/metron/issues/comments/494446602/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/metron/issues/comments/494448127","html_url":"https://github.com/apache/metron/pull/1417#issuecomment-494448127","issue_url":"https://api.github.com/repos/apache/metron/issues/1417","id":494448127,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NDQ0ODEyNw==","user":{"login":"ottobackwards","id":1111551,"node_id":"MDQ6VXNlcjExMTE1NTE=","avatar_url":"https://avatars.githubusercontent.com/u/1111551?v=4","gravatar_id":"","url":"https://api.github.com/users/ottobackwards","html_url":"https://github.com/ottobackwards","followers_url":"https://api.github.com/users/ottobackwards/followers","following_url":"https://api.github.com/users/ottobackwards/following{/other_user}","gists_url":"https://api.github.com/users/ottobackwards/gists{/gist_id}","starred_url":"https://api.github.com/users/ottobackwards/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ottobackwards/subscriptions","organizations_url":"https://api.github.com/users/ottobackwards/orgs","repos_url":"https://api.github.com/users/ottobackwards/repos","events_url":"https://api.github.com/users/ottobackwards/events{/privacy}","received_events_url":"https://api.github.com/users/ottobackwards/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-21T15:47:14Z","updated_at":"2019-05-21T15:47:14Z","author_association":"CONTRIBUTOR","body":"Should we invalidate our travis maven caches?","reactions":{"url":"https://api.github.com/repos/apache/metron/issues/comments/494448127/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/metron/issues/comments/494452962","html_url":"https://github.com/apache/metron/pull/1417#issuecomment-494452962","issue_url":"https://api.github.com/repos/apache/metron/issues/1417","id":494452962,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NDQ1Mjk2Mg==","user":{"login":"justinleet","id":5077341,"node_id":"MDQ6VXNlcjUwNzczNDE=","avatar_url":"https://avatars.githubusercontent.com/u/5077341?v=4","gravatar_id":"","url":"https://api.github.com/users/justinleet","html_url":"https://github.com/justinleet","followers_url":"https://api.github.com/users/justinleet/followers","following_url":"https://api.github.com/users/justinleet/following{/other_user}","gists_url":"https://api.github.com/users/justinleet/gists{/gist_id}","starred_url":"https://api.github.com/users/justinleet/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/justinleet/subscriptions","organizations_url":"https://api.github.com/users/justinleet/orgs","repos_url":"https://api.github.com/users/justinleet/repos","events_url":"https://api.github.com/users/justinleet/events{/privacy}","received_events_url":"https://api.github.com/users/justinleet/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-21T16:00:05Z","updated_at":"2019-05-21T16:00:59Z","author_association":"CONTRIBUTOR","body":"@ottobackwards I think I have permissions to could go ahead and do that.  Should we kill the caches and kick Travis?\r\n\r\nThis involves killing the master cache, btw, since branches without caches pull from master first. So to properly test things, we'll have to kill that cache","reactions":{"url":"https://api.github.com/repos/apache/metron/issues/comments/494452962/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/metron/issues/comments/494463157","html_url":"https://github.com/apache/metron/pull/1417#issuecomment-494463157","issue_url":"https://api.github.com/repos/apache/metron/issues/1417","id":494463157,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NDQ2MzE1Nw==","user":{"login":"ottobackwards","id":1111551,"node_id":"MDQ6VXNlcjExMTE1NTE=","avatar_url":"https://avatars.githubusercontent.com/u/1111551?v=4","gravatar_id":"","url":"https://api.github.com/users/ottobackwards","html_url":"https://github.com/ottobackwards","followers_url":"https://api.github.com/users/ottobackwards/followers","following_url":"https://api.github.com/users/ottobackwards/following{/other_user}","gists_url":"https://api.github.com/users/ottobackwards/gists{/gist_id}","starred_url":"https://api.github.com/users/ottobackwards/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ottobackwards/subscriptions","organizations_url":"https://api.github.com/users/ottobackwards/orgs","repos_url":"https://api.github.com/users/ottobackwards/repos","events_url":"https://api.github.com/users/ottobackwards/events{/privacy}","received_events_url":"https://api.github.com/users/ottobackwards/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-21T16:27:38Z","updated_at":"2019-05-21T16:27:38Z","author_association":"CONTRIBUTOR","body":"I think so","reactions":{"url":"https://api.github.com/repos/apache/metron/issues/comments/494463157/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/metron/issues/comments/494464795","html_url":"https://github.com/apache/metron/pull/1417#issuecomment-494464795","issue_url":"https://api.github.com/repos/apache/metron/issues/1417","id":494464795,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NDQ2NDc5NQ==","user":{"login":"justinleet","id":5077341,"node_id":"MDQ6VXNlcjUwNzczNDE=","avatar_url":"https://avatars.githubusercontent.com/u/5077341?v=4","gravatar_id":"","url":"https://api.github.com/users/justinleet","html_url":"https://github.com/justinleet","followers_url":"https://api.github.com/users/justinleet/followers","following_url":"https://api.github.com/users/justinleet/following{/other_user}","gists_url":"https://api.github.com/users/justinleet/gists{/gist_id}","starred_url":"https://api.github.com/users/justinleet/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/justinleet/subscriptions","organizations_url":"https://api.github.com/users/justinleet/orgs","repos_url":"https://api.github.com/users/justinleet/repos","events_url":"https://api.github.com/users/justinleet/events{/privacy}","received_events_url":"https://api.github.com/users/justinleet/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-21T16:32:15Z","updated_at":"2019-05-21T16:32:15Z","author_association":"CONTRIBUTOR","body":"Looking at our build times, I'm actually concerned that if we kill the caches our builds won't complete.  The integration tests take >45 minutes and it's very possible redownloading everything goes over our remaining time.\r\n\r\nRight now, I'm not going to be able to take time to troubleshoot that if we dump the caches and the builds fail, so I'm inclined to at least temporarily hold off.  I'm open to suggestions about how to deal with it (and we may want to hit the dev list if there's a possibility of master not being able to be built if the cache is killed)","reactions":{"url":"https://api.github.com/repos/apache/metron/issues/comments/494464795/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/metron/issues/comments/494468350","html_url":"https://github.com/apache/metron/pull/1417#issuecomment-494468350","issue_url":"https://api.github.com/repos/apache/metron/issues/1417","id":494468350,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NDQ2ODM1MA==","user":{"login":"ottobackwards","id":1111551,"node_id":"MDQ6VXNlcjExMTE1NTE=","avatar_url":"https://avatars.githubusercontent.com/u/1111551?v=4","gravatar_id":"","url":"https://api.github.com/users/ottobackwards","html_url":"https://github.com/ottobackwards","followers_url":"https://api.github.com/users/ottobackwards/followers","following_url":"https://api.github.com/users/ottobackwards/following{/other_user}","gists_url":"https://api.github.com/users/ottobackwards/gists{/gist_id}","starred_url":"https://api.github.com/users/ottobackwards/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ottobackwards/subscriptions","organizations_url":"https://api.github.com/users/ottobackwards/orgs","repos_url":"https://api.github.com/users/ottobackwards/repos","events_url":"https://api.github.com/users/ottobackwards/events{/privacy}","received_events_url":"https://api.github.com/users/ottobackwards/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-21T16:42:32Z","updated_at":"2019-05-21T16:42:32Z","author_association":"CONTRIBUTOR","body":"i just mean getting one build without the cache, and rebuilding the cache with the https sources\r\n","reactions":{"url":"https://api.github.com/repos/apache/metron/issues/comments/494468350/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/metron/issues/comments/494477636","html_url":"https://github.com/apache/metron/pull/1417#issuecomment-494477636","issue_url":"https://api.github.com/repos/apache/metron/issues/1417","id":494477636,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NDQ3NzYzNg==","user":{"login":"mmiklavc","id":658443,"node_id":"MDQ6VXNlcjY1ODQ0Mw==","avatar_url":"https://avatars.githubusercontent.com/u/658443?v=4","gravatar_id":"","url":"https://api.github.com/users/mmiklavc","html_url":"https://github.com/mmiklavc","followers_url":"https://api.github.com/users/mmiklavc/followers","following_url":"https://api.github.com/users/mmiklavc/following{/other_user}","gists_url":"https://api.github.com/users/mmiklavc/gists{/gist_id}","starred_url":"https://api.github.com/users/mmiklavc/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mmiklavc/subscriptions","organizations_url":"https://api.github.com/users/mmiklavc/orgs","repos_url":"https://api.github.com/users/mmiklavc/repos","events_url":"https://api.github.com/users/mmiklavc/events{/privacy}","received_events_url":"https://api.github.com/users/mmiklavc/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-21T17:09:38Z","updated_at":"2019-05-21T17:09:38Z","author_association":"CONTRIBUTOR","body":"> i just mean getting one build without the cache, and rebuilding the cache with the https sources\r\n\r\nYeah - so we have the ability to restart any 1 of the 4 build phases. Could we invalidate the cache once and then basically restart the fastest one first? Might need to restart the long pole build phases multiple times before we get a build that completes in the time window.","reactions":{"url":"https://api.github.com/repos/apache/metron/issues/comments/494477636/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/metron/issues/comments/494599964","html_url":"https://github.com/apache/metron/pull/1403#issuecomment-494599964","issue_url":"https://api.github.com/repos/apache/metron/issues/1403","id":494599964,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NDU5OTk2NA==","user":{"login":"nickwallen","id":2475409,"node_id":"MDQ6VXNlcjI0NzU0MDk=","avatar_url":"https://avatars.githubusercontent.com/u/2475409?v=4","gravatar_id":"","url":"https://api.github.com/users/nickwallen","html_url":"https://github.com/nickwallen","followers_url":"https://api.github.com/users/nickwallen/followers","following_url":"https://api.github.com/users/nickwallen/following{/other_user}","gists_url":"https://api.github.com/users/nickwallen/gists{/gist_id}","starred_url":"https://api.github.com/users/nickwallen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickwallen/subscriptions","organizations_url":"https://api.github.com/users/nickwallen/orgs","repos_url":"https://api.github.com/users/nickwallen/repos","events_url":"https://api.github.com/users/nickwallen/events{/privacy}","received_events_url":"https://api.github.com/users/nickwallen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-21T23:48:44Z","updated_at":"2019-05-21T23:48:44Z","author_association":"CONTRIBUTOR","body":"+1 Looks great @merrimanr .  Nice work.","reactions":{"url":"https://api.github.com/repos/apache/metron/issues/comments/494599964/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/metron/issues/comments/494688329","html_url":"https://github.com/apache/metron/pull/1380#issuecomment-494688329","issue_url":"https://api.github.com/repos/apache/metron/issues/1380","id":494688329,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NDY4ODMyOQ==","user":{"login":"ruffle1986","id":2196208,"node_id":"MDQ6VXNlcjIxOTYyMDg=","avatar_url":"https://avatars.githubusercontent.com/u/2196208?v=4","gravatar_id":"","url":"https://api.github.com/users/ruffle1986","html_url":"https://github.com/ruffle1986","followers_url":"https://api.github.com/users/ruffle1986/followers","following_url":"https://api.github.com/users/ruffle1986/following{/other_user}","gists_url":"https://api.github.com/users/ruffle1986/gists{/gist_id}","starred_url":"https://api.github.com/users/ruffle1986/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ruffle1986/subscriptions","organizations_url":"https://api.github.com/users/ruffle1986/orgs","repos_url":"https://api.github.com/users/ruffle1986/repos","events_url":"https://api.github.com/users/ruffle1986/events{/privacy}","received_events_url":"https://api.github.com/users/ruffle1986/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-22T07:33:43Z","updated_at":"2019-05-22T07:33:43Z","author_association":"CONTRIBUTOR","body":"@sardell Thank you for the suggestions, they are all good points. But, with your changes, I'm still experiencing the \"flash of date picker\" after manually pasting a date and clicking outside of the input element. I think it's not a big deal especially when I look at the other disadvantages I'm experiencing also. \r\n\r\nHowever, with the patch we can enable this toggling functionality which is great, but now, this is the only way to hide the date picker if I don't want to set a date from the picker. So for me, it hasn't make it any better or user friendlier. \r\n\r\nIt also breaks the cypress tests and adds a lot of complexity in order to add something that should be convenient but not really is. It also breaks the date pickers on the PCAP panel so additional css hacks are needed to get rid of the bad parts that are introduced by the suggested patch.\r\n\r\nSo long story short, I think these changes are not necessary and are not worth the effort.\r\n\r\nI'd like you to reconsider the PR based on my concerns.\r\n\r\nThank you in advance.","reactions":{"url":"https://api.github.com/repos/apache/metron/issues/comments/494688329/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/metron/issues/comments/494762038","html_url":"https://github.com/apache/metron/pull/1419#issuecomment-494762038","issue_url":"https://api.github.com/repos/apache/metron/issues/1419","id":494762038,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NDc2MjAzOA==","user":{"login":"ottobackwards","id":1111551,"node_id":"MDQ6VXNlcjExMTE1NTE=","avatar_url":"https://avatars.githubusercontent.com/u/1111551?v=4","gravatar_id":"","url":"https://api.github.com/users/ottobackwards","html_url":"https://github.com/ottobackwards","followers_url":"https://api.github.com/users/ottobackwards/followers","following_url":"https://api.github.com/users/ottobackwards/following{/other_user}","gists_url":"https://api.github.com/users/ottobackwards/gists{/gist_id}","starred_url":"https://api.github.com/users/ottobackwards/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ottobackwards/subscriptions","organizations_url":"https://api.github.com/users/ottobackwards/orgs","repos_url":"https://api.github.com/users/ottobackwards/repos","events_url":"https://api.github.com/users/ottobackwards/events{/privacy}","received_events_url":"https://api.github.com/users/ottobackwards/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-22T11:24:22Z","updated_at":"2019-05-22T11:24:22Z","author_association":"CONTRIBUTOR","body":"the leef configuration does not go in -common, can you move it please?   ","reactions":{"url":"https://api.github.com/repos/apache/metron/issues/comments/494762038/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/metron/issues/comments/494927222","html_url":"https://github.com/apache/metron/pull/1409#issuecomment-494927222","issue_url":"https://api.github.com/repos/apache/metron/issues/1409","id":494927222,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NDkyNzIyMg==","user":{"login":"merrimanr","id":311928,"node_id":"MDQ6VXNlcjMxMTkyOA==","avatar_url":"https://avatars.githubusercontent.com/u/311928?v=4","gravatar_id":"","url":"https://api.github.com/users/merrimanr","html_url":"https://github.com/merrimanr","followers_url":"https://api.github.com/users/merrimanr/followers","following_url":"https://api.github.com/users/merrimanr/following{/other_user}","gists_url":"https://api.github.com/users/merrimanr/gists{/gist_id}","starred_url":"https://api.github.com/users/merrimanr/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/merrimanr/subscriptions","organizations_url":"https://api.github.com/users/merrimanr/orgs","repos_url":"https://api.github.com/users/merrimanr/repos","events_url":"https://api.github.com/users/merrimanr/events{/privacy}","received_events_url":"https://api.github.com/users/merrimanr/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-22T19:05:28Z","updated_at":"2019-05-22T19:05:28Z","author_association":"CONTRIBUTOR","body":"I ran this up in full dev and tested with the `jsonMapQuery` parser.  I tested with the `overrideOriginalString` set to true and false and the `original_string` field looked correct in all cases.  So everything looks good.\r\n\r\nOne question I have though, when would a user ever want to set `parser.original.string.global` to false?  When I set this and `overrideOriginalString` to false I get an error in the ES error index but it's not obvious what is wrong.\r\n","reactions":{"url":"https://api.github.com/repos/apache/metron/issues/comments/494927222/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/metron/issues/comments/494939000","html_url":"https://github.com/apache/metron/pull/1409#issuecomment-494939000","issue_url":"https://api.github.com/repos/apache/metron/issues/1409","id":494939000,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NDkzOTAwMA==","user":{"login":"ottobackwards","id":1111551,"node_id":"MDQ6VXNlcjExMTE1NTE=","avatar_url":"https://avatars.githubusercontent.com/u/1111551?v=4","gravatar_id":"","url":"https://api.github.com/users/ottobackwards","html_url":"https://github.com/ottobackwards","followers_url":"https://api.github.com/users/ottobackwards/followers","following_url":"https://api.github.com/users/ottobackwards/following{/other_user}","gists_url":"https://api.github.com/users/ottobackwards/gists{/gist_id}","starred_url":"https://api.github.com/users/ottobackwards/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ottobackwards/subscriptions","organizations_url":"https://api.github.com/users/ottobackwards/orgs","repos_url":"https://api.github.com/users/ottobackwards/repos","events_url":"https://api.github.com/users/ottobackwards/events{/privacy}","received_events_url":"https://api.github.com/users/ottobackwards/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-22T19:36:56Z","updated_at":"2019-05-22T19:36:56Z","author_association":"CONTRIBUTOR","body":"I think we should simply add a new field for the source bytes or whatever, and never have the parsers even know about it. \r\n\r\noriginal_string, though perhaps poorly named should remain the domain of the parsers.\r\n\r\nthe we documented it like\r\n\" original_string is to be representative of the string parsed to produce the record it resides in, such that the parse, if passed that string again would produce the same result, although being the domain of the parser that generated it, it may be some other markup or preparsed state”\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/metron/issues/comments/494939000/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/metron/issues/comments/494944052","html_url":"https://github.com/apache/metron/pull/1409#issuecomment-494944052","issue_url":"https://api.github.com/repos/apache/metron/issues/1409","id":494944052,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NDk0NDA1Mg==","user":{"login":"merrimanr","id":311928,"node_id":"MDQ6VXNlcjMxMTkyOA==","avatar_url":"https://avatars.githubusercontent.com/u/311928?v=4","gravatar_id":"","url":"https://api.github.com/users/merrimanr","html_url":"https://github.com/merrimanr","followers_url":"https://api.github.com/users/merrimanr/followers","following_url":"https://api.github.com/users/merrimanr/following{/other_user}","gists_url":"https://api.github.com/users/merrimanr/gists{/gist_id}","starred_url":"https://api.github.com/users/merrimanr/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/merrimanr/subscriptions","organizations_url":"https://api.github.com/users/merrimanr/orgs","repos_url":"https://api.github.com/users/merrimanr/repos","events_url":"https://api.github.com/users/merrimanr/events{/privacy}","received_events_url":"https://api.github.com/users/merrimanr/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-22T19:49:07Z","updated_at":"2019-05-22T19:49:07Z","author_association":"CONTRIBUTOR","body":"I think I agree with @ottobackwards's suggestion.  This would be simpler if the `ParserRunnerImpl` class just populated a separate field with the original bytes that come out of Kafka while the parsers continue to control the `original_string` field.  No configuration necessary in that case.\r\n\r\nWe would still want to do the cleanup described in https://issues.apache.org/jira/browse/METRON-2120.","reactions":{"url":"https://api.github.com/repos/apache/metron/issues/comments/494944052/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/metron/issues/comments/494961246","html_url":"https://github.com/apache/metron/pull/1409#issuecomment-494961246","issue_url":"https://api.github.com/repos/apache/metron/issues/1409","id":494961246,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NDk2MTI0Ng==","user":{"login":"mmiklavc","id":658443,"node_id":"MDQ6VXNlcjY1ODQ0Mw==","avatar_url":"https://avatars.githubusercontent.com/u/658443?v=4","gravatar_id":"","url":"https://api.github.com/users/mmiklavc","html_url":"https://github.com/mmiklavc","followers_url":"https://api.github.com/users/mmiklavc/followers","following_url":"https://api.github.com/users/mmiklavc/following{/other_user}","gists_url":"https://api.github.com/users/mmiklavc/gists{/gist_id}","starred_url":"https://api.github.com/users/mmiklavc/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mmiklavc/subscriptions","organizations_url":"https://api.github.com/users/mmiklavc/orgs","repos_url":"https://api.github.com/users/mmiklavc/repos","events_url":"https://api.github.com/users/mmiklavc/events{/privacy}","received_events_url":"https://api.github.com/users/mmiklavc/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-22T20:33:44Z","updated_at":"2019-05-22T20:33:44Z","author_association":"CONTRIBUTOR","body":"> I ran this up in full dev and tested with the `jsonMapQuery` parser. I tested with the `overrideOriginalString` set to true and false and the `original_string` field looked correct in all cases. So everything looks good.\r\n> \r\n> One question I have though, when would a user ever want to set `parser.original.string.global` to false? When I set this and `overrideOriginalString` to false I get an error in the ES error index but it's not obvious what is wrong.\r\n\r\nThat is because when you have both set to false, then the `original_string` is never added and trips the validation rules. It's actually really good that you stumbled on that because, as I understand it, this is the experience of our users whenever they're trying to work with existing parsers or create their own, but trip on the validation rules. I've heard of multiple people having trouble tracing back the problem.","reactions":{"url":"https://api.github.com/repos/apache/metron/issues/comments/494961246/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/metron/issues/comments/494968256","html_url":"https://github.com/apache/metron/pull/1409#issuecomment-494968256","issue_url":"https://api.github.com/repos/apache/metron/issues/1409","id":494968256,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NDk2ODI1Ng==","user":{"login":"merrimanr","id":311928,"node_id":"MDQ6VXNlcjMxMTkyOA==","avatar_url":"https://avatars.githubusercontent.com/u/311928?v=4","gravatar_id":"","url":"https://api.github.com/users/merrimanr","html_url":"https://github.com/merrimanr","followers_url":"https://api.github.com/users/merrimanr/followers","following_url":"https://api.github.com/users/merrimanr/following{/other_user}","gists_url":"https://api.github.com/users/merrimanr/gists{/gist_id}","starred_url":"https://api.github.com/users/merrimanr/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/merrimanr/subscriptions","organizations_url":"https://api.github.com/users/merrimanr/orgs","repos_url":"https://api.github.com/users/merrimanr/repos","events_url":"https://api.github.com/users/merrimanr/events{/privacy}","received_events_url":"https://api.github.com/users/merrimanr/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-22T20:52:33Z","updated_at":"2019-05-22T20:52:33Z","author_association":"CONTRIBUTOR","body":"Troubleshooting validation issues (as evidenced here) is not easy and is probably a separate issue.  I will file a Jira on that.\r\n\r\nThe question is, why would someone ever set the global option to false?  If instead the `original_string` defaulted to the bytes coming out of Kafka then validation would never fail because `original_string` would always be present.  Wouldn't that be better than failing validation?","reactions":{"url":"https://api.github.com/repos/apache/metron/issues/comments/494968256/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/metron/issues/comments/494980456","html_url":"https://github.com/apache/metron/pull/1409#issuecomment-494980456","issue_url":"https://api.github.com/repos/apache/metron/issues/1409","id":494980456,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NDk4MDQ1Ng==","user":{"login":"mmiklavc","id":658443,"node_id":"MDQ6VXNlcjY1ODQ0Mw==","avatar_url":"https://avatars.githubusercontent.com/u/658443?v=4","gravatar_id":"","url":"https://api.github.com/users/mmiklavc","html_url":"https://github.com/mmiklavc","followers_url":"https://api.github.com/users/mmiklavc/followers","following_url":"https://api.github.com/users/mmiklavc/following{/other_user}","gists_url":"https://api.github.com/users/mmiklavc/gists{/gist_id}","starred_url":"https://api.github.com/users/mmiklavc/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mmiklavc/subscriptions","organizations_url":"https://api.github.com/users/mmiklavc/orgs","repos_url":"https://api.github.com/users/mmiklavc/repos","events_url":"https://api.github.com/users/mmiklavc/events{/privacy}","received_events_url":"https://api.github.com/users/mmiklavc/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-22T21:28:14Z","updated_at":"2019-05-22T21:28:14Z","author_association":"CONTRIBUTOR","body":"> Troubleshooting validation issues (as evidenced here) is not easy and is probably a separate issue. I will file a Jira on that.\r\n> \r\n> The question is, why would someone ever set the global option to false? If instead the `original_string` defaulted to the bytes coming out of Kafka then validation would never fail because `original_string` would always be present. Wouldn't that be better than failing validation?\r\n\r\nYes, absolutely - that's literally what the flag `parser.original.string.global` does - it defaults to true, and will add original_string if not present. The purpose of this PR was to address a very specific case - the jsonmapparser regression due to the JsonPath and JSONObject use for the k sub-messages potentially returned. I wanted to provide a way forward that maintained that original_string if people still wanted it - per the DISCUSS thread, I gathered that was the case from @ottobackwards 's +1. I'm also happy to get rid of the options altogether and effectively force the value through, but that's not what came out of the DISCUSS thread.","reactions":{"url":"https://api.github.com/repos/apache/metron/issues/comments/494980456/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/metron/issues/comments/494985562","html_url":"https://github.com/apache/metron/pull/1419#issuecomment-494985562","issue_url":"https://api.github.com/repos/apache/metron/issues/1419","id":494985562,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NDk4NTU2Mg==","user":{"login":"simonellistonball","id":1217895,"node_id":"MDQ6VXNlcjEyMTc4OTU=","avatar_url":"https://avatars.githubusercontent.com/u/1217895?v=4","gravatar_id":"","url":"https://api.github.com/users/simonellistonball","html_url":"https://github.com/simonellistonball","followers_url":"https://api.github.com/users/simonellistonball/followers","following_url":"https://api.github.com/users/simonellistonball/following{/other_user}","gists_url":"https://api.github.com/users/simonellistonball/gists{/gist_id}","starred_url":"https://api.github.com/users/simonellistonball/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/simonellistonball/subscriptions","organizations_url":"https://api.github.com/users/simonellistonball/orgs","repos_url":"https://api.github.com/users/simonellistonball/repos","events_url":"https://api.github.com/users/simonellistonball/events{/privacy}","received_events_url":"https://api.github.com/users/simonellistonball/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-22T21:44:48Z","updated_at":"2019-05-22T21:45:04Z","author_association":"CONTRIBUTOR","body":"Agreed, but that’s what the integration tests look for, so that’s where it needs to live to get the integration tests required by you comments on the other PR. Can you suggest where it should go, and how we should change the integration test approach?","reactions":{"url":"https://api.github.com/repos/apache/metron/issues/comments/494985562/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/metron/issues/comments/494991158","html_url":"https://github.com/apache/metron/pull/1409#issuecomment-494991158","issue_url":"https://api.github.com/repos/apache/metron/issues/1409","id":494991158,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NDk5MTE1OA==","user":{"login":"mmiklavc","id":658443,"node_id":"MDQ6VXNlcjY1ODQ0Mw==","avatar_url":"https://avatars.githubusercontent.com/u/658443?v=4","gravatar_id":"","url":"https://api.github.com/users/mmiklavc","html_url":"https://github.com/mmiklavc","followers_url":"https://api.github.com/users/mmiklavc/followers","following_url":"https://api.github.com/users/mmiklavc/following{/other_user}","gists_url":"https://api.github.com/users/mmiklavc/gists{/gist_id}","starred_url":"https://api.github.com/users/mmiklavc/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mmiklavc/subscriptions","organizations_url":"https://api.github.com/users/mmiklavc/orgs","repos_url":"https://api.github.com/users/mmiklavc/repos","events_url":"https://api.github.com/users/mmiklavc/events{/privacy}","received_events_url":"https://api.github.com/users/mmiklavc/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-22T22:02:59Z","updated_at":"2019-05-22T22:02:59Z","author_association":"CONTRIBUTOR","body":"> I think we should simply add a new field for the source bytes or whatever, and never have the parsers even know about it.\r\n> \r\n> original_string, though perhaps poorly named should remain the domain of the parsers.\r\n> \r\n> the we documented it like\r\n> \" original_string is to be representative of the string parsed to produce the record it resides in, such that the parse, if passed that string again would produce the same result, although being the domain of the parser that generated it, it may be some other markup or preparsed state”\r\n\r\nIt might be worth going back to the DISCUSS thread with this convo, but here are my current thoughts.\r\n\r\nFirst, we're potentially adding the raw source bytes 2x if we do this. It's also not immediately obvious to me all the implications of converting the current `original_string` to a new purpose while also adding a new `original_string` without doing a fairly involved investigation. I do think that's worthwhile, ultimately. But getting back to the original problem at hand, I don't think it makes sense to make this the immediate solution to fix our regression. If we don't like this configuration approach, I would like to offer a couple much simpler solutions:\r\n\r\n1. Skip the global change proposed by @nickwallen and @simonellistonball  for now. Offer this config option purely for the JsonMapParser, as that's the only place we have a must-fix regression currently\r\n2. Don't offer any config option, instead just remove the specialized original_string handling from JsonMapParser and use the raw bytes.\r\n\r\nI do think it makes sense to have a raw source bytes/string field. But I'm not sure I see much value in an additional `original_string` field if we went that route. Obviously, if custom parsers are written or created via Stellar, you can already add whatever new fields you want, but I think there's more to it than that.\r\n\r\nRight now we have quite a bit wrapped up in `original_string`:\r\n\r\n1. BasicParser validation\r\n2. parser chaining\r\n3. indexing - both Solr and ES templates\r\n4. Alerts UI\r\n5. Kibana dashboards\r\n6. Zeppelin dashboards?\r\n7. Other custom functionality users may have wrapped up in `original_string` currently?\r\n8. How about upgrades, index migrations, and the like? What about historic data in Kafka and HDFS?\r\n\r\nHere are usages found via IDE inspection:\r\n\r\n```\r\nFound usages  (15 usages found)\r\n    Production  (5 usages found)\r\n        BasicAsaParser  (1 usage found)\r\n            parse(byte[])  (1 usage found)\r\n                162 metronJson.put(Constants.Fields.ORIGINAL.getName(), logLine);\r\n        EnvelopedRawMessageStrategy  (2 usages found)\r\n            mergeMetadata(JSONObject, Map<String, Object>, boolean, Map<String, Object>)  (2 usages found)\r\n                116 String originalStringFromMetadata = (String)metadata.get(MetadataUtil.INSTANCE.prefixKey(prefix, Constants.Fields.ORIGINAL.getName()));\r\n                124 message.put(Constants.Fields.ORIGINAL.getName(), originalStringFromMetadata);\r\n        LEEFParser  (1 usage found)\r\n            parseOptionalResult(byte[])  (1 usage found)\r\n                198 obj.put(Fields.ORIGINAL.getName(), originalMessage);\r\n        RegularExpressionsParser  (1 usage found)\r\n            parse(byte[])  (1 usage found)\r\n                174 parsedJson.put(Constants.Fields.ORIGINAL.getName(), originalMessage);\r\n```\r\n\r\nObviously, we're a far cry from using our constants consistently since this shows only a few of the parsers. Here's the remaining results I get via a massaged text search:\r\n\r\n```\r\n    Occurrences of 'original_string' in Project Production Files (Except Comments)\r\nFound Occurrences  (55 usages found)\r\n    Production  (55 usages found)\r\n        BaseSyslogParser.java  (3 usages found)\r\n            validate(JSONObject)  (2 usages found)\r\n                92 if (!(message.containsKey(\"original_string\"))) {\r\n                93 LOG.trace(\"[Metron] Message does not have original_string: {}\", message);\r\n            parseOptionalResult(byte[])  (1 usage found)\r\n                120 jsonObject.put(\"original_string\", originalString);\r\n        BasicBroParser.java  (1 usage found)\r\n            parse(byte[])  (1 usage found)\r\n                105 payload.put(\"original_string\", originalString);\r\n        BasicFireEyeParser.java  (1 usage found)\r\n            parseMessage(String)  (1 usage found)\r\n                146 toReturn.put(\"original_string\", toParse);\r\n        BasicLancopeParser.java  (1 usage found)\r\n            parse(byte[])  (1 usage found)\r\n                83 payload.put(\"original_string\", message);\r\n        BasicLogstashParser.java  (1 usage found)\r\n            parse(byte[])  (1 usage found)\r\n                61 rawJson = mutate(rawJson, \"message\", \"original_string\");\r\n        BasicPaloAltoFirewallParser.java  (1 usage found)\r\n            parse(byte[])  (1 usage found)\r\n                185 outputMessage.put(\"original_string\", toParse);\r\n        BasicParser.java  (2 usages found)\r\n            validate(JSONObject)  (2 usages found)\r\n                36 if (!(value.containsKey(\"original_string\"))) {\r\n                37 LOG.trace(\"[Metron] Message does not have original_string: {}\", message);\r\n        BasicSnortParser.java  (1 usage found)\r\n            parse(byte[])  (1 usage found)\r\n                174 jsonMessage.put(\"original_string\", csvMessage);\r\n        BasicSourcefireParser.java  (1 usage found)\r\n            parse(byte[])  (1 usage found)\r\n                114 payload.put(\"original_string\", originalString);\r\n        CEFParser.java  (1 usage found)\r\n            parse(byte[])  (1 usage found)\r\n                178 obj.put(\"original_string\", cefString);\r\n        Constants.java  (1 usage found)\r\n            58 ,ORIGINAL(\"original_string\")\r\n        Constants.java  (1 usage found)\r\n            41 ,ORIGINAL(\"original_string\")\r\n        CSVParser.java  (1 usage found)\r\n            parse(byte[])  (1 usage found)\r\n                61 value.put(\"original_string\", msg);\r\n        GrokParser.java  (2 usages found)\r\n            parseMultiLine(byte[])  (1 usage found)\r\n                177 message.put(\"original_string\", originalMessage);\r\n            parseSingleLine(byte[])  (1 usage found)\r\n                226 message.put(\"original_string\", originalMessage);\r\n        JSONMapParser.java  (1 usage found)\r\n            parse(byte[])  (1 usage found)\r\n                192 ret.put(\"original_string\", originalJsonObject.toJSONString());\r\n        SelectTransformation.java  (1 usage found)\r\n            32 private static final List<String> systemFields = Arrays.asList(\"timestamp\", \"original_string\", \"source.type\");\r\n        ValidationUtils.java  (1 usage found)\r\n            assertJsonEqual(String, String)  (1 usage found)\r\n                57 if (((String) k).equals(\"original_string\")) {\r\n        adallom.schema  (2 usages found)\r\n            5 \t\t\"original_string\": {\r\n            34 \t\"original_string\", \"timestamp\", \r\n        adallom.schema  (2 usages found)\r\n            5 \t\t\"original_string\": {\r\n            34 \t\"original_string\", \"timestamp\", \r\n        cyberark.json  (1 usage found)\r\n            15 original_string\r\n        cyberark.json  (1 usage found)\r\n            15 original_string\r\n        cyberark.schema  (2 usages found)\r\n            11 \t\t\"original_string\": {\r\n            36 \t\"required\": [\"original_string\", \"timestamp\", \r\n        cyberark.schema  (2 usages found)\r\n            11 \t\t\"original_string\": {\r\n            36 \t\"required\": [\"original_string\", \"timestamp\", \r\n        dashboard-bulkload.json  (4 usages found)\r\n            2 original_string\r\n            20 original_string\r\n            38 original_string\r\n            40 original_string\r\n        LancopeSchema.json  (2 usages found)\r\n            11 \"original_string\": {\r\n            27 \"required\": [\"ip_src_addr\", \"ip_dst_addr\", \"original_string\",\"@version\", \"timestamp\", \"type\",\"host\"]\r\n        LancopeSchema.json  (2 usages found)\r\n            11 \"original_string\": {\r\n            27 \"required\": [\"ip_src_addr\", \"ip_dst_addr\", \"original_string\",\"@version\", \"timestamp\", \"type\",\"host\"]\r\n        palo.schema  (2 usages found)\r\n            11 \t\t\"original_string\": {\r\n            36 \t\"required\": [\"original_string\", \"timestamp\", \r\n        palo.schema  (2 usages found)\r\n            11 \t\t\"original_string\": {\r\n            36 \t\"required\": [\"original_string\", \"timestamp\", \r\n        sample.schema  (2 usages found)\r\n            5     \"original_string\": {\r\n            25     \"original_string\", \"timestamp\",\r\n        SourcefireSchema.json  (3 usages found)\r\n            17 \"original_string\": {\r\n            20 \"original_string\": {\r\n            33 \"required\": [\"ip_src_addr\", \"ip_dst_addr\", \"ip_src_port\", \"ip_dst_port\",\"protocol\",\"original_string\",\"key\",\"timestamp\"]\r\n        SourcefireSchema.json  (3 usages found)\r\n            17 \"original_string\": {\r\n            20 \"original_string\": {\r\n            33 \"required\": [\"ip_src_addr\", \"ip_dst_addr\", \"ip_src_port\", \"ip_dst_port\",\"protocol\",\"original_string\",\"key\",\"timestamp\"]\r\n        waf.schema  (2 usages found)\r\n            17 \t\t\"original_string\": {\r\n            63 \t\"required\": [\"ip_src_addr\", \"ip_dst_addr\", \"ip_src_port\", \"ip_dst_port\", \"original_string\", \"timestamp\", \r\n        waf.schema  (2 usages found)\r\n            17 \t\t\"original_string\": {\r\n            63 \t\"required\": [\"ip_src_addr\", \"ip_dst_addr\", \"ip_src_port\", \"ip_dst_port\", \"original_string\", \"timestamp\", \r\n```\r\n\r\nOf course, I'm happy to talk through possible solutions, but I wanted to get as much of the possible impact on the table as possible before we decide how to move forward. \r\n\r\n**TL;DR** - I'm personally inclined towards the following actions:\r\n\r\n1. In this PR I simply fixing the regression by using the raw source in JsonMapParser for `original_string`. For good or for worse, we currently prioritize this field as a system-level field. There will be no sub-message original_strings right now.\r\n2. Create a Jira for assessing our original_string usage in the system and providing a path forward for managing both `raw_bytes` globally as a system field, and `original_string` per parser as a parser-owned field.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/metron/issues/comments/494991158/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/metron/issues/comments/495005230","html_url":"https://github.com/apache/metron/pull/1409#issuecomment-495005230","issue_url":"https://api.github.com/repos/apache/metron/issues/1409","id":495005230,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NTAwNTIzMA==","user":{"login":"merrimanr","id":311928,"node_id":"MDQ6VXNlcjMxMTkyOA==","avatar_url":"https://avatars.githubusercontent.com/u/311928?v=4","gravatar_id":"","url":"https://api.github.com/users/merrimanr","html_url":"https://github.com/merrimanr","followers_url":"https://api.github.com/users/merrimanr/followers","following_url":"https://api.github.com/users/merrimanr/following{/other_user}","gists_url":"https://api.github.com/users/merrimanr/gists{/gist_id}","starred_url":"https://api.github.com/users/merrimanr/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/merrimanr/subscriptions","organizations_url":"https://api.github.com/users/merrimanr/orgs","repos_url":"https://api.github.com/users/merrimanr/repos","events_url":"https://api.github.com/users/merrimanr/events{/privacy}","received_events_url":"https://api.github.com/users/merrimanr/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-22T22:59:30Z","updated_at":"2019-05-22T22:59:30Z","author_association":"CONTRIBUTOR","body":"If implementing Otto's suggestion is not straightforward and needs more thought/discussion, I think what you've done here is fine for addressing the immediate need while maintaining the current behavior.  I would prefer to see the `parser.original.string.global` option go away and just default to adding the raw bytes from kafka to the `original_string` field.","reactions":{"url":"https://api.github.com/repos/apache/metron/issues/comments/495005230/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/metron/issues/comments/495013460","html_url":"https://github.com/apache/metron/pull/1419#issuecomment-495013460","issue_url":"https://api.github.com/repos/apache/metron/issues/1419","id":495013460,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NTAxMzQ2MA==","user":{"login":"mmiklavc","id":658443,"node_id":"MDQ6VXNlcjY1ODQ0Mw==","avatar_url":"https://avatars.githubusercontent.com/u/658443?v=4","gravatar_id":"","url":"https://api.github.com/users/mmiklavc","html_url":"https://github.com/mmiklavc","followers_url":"https://api.github.com/users/mmiklavc/followers","following_url":"https://api.github.com/users/mmiklavc/following{/other_user}","gists_url":"https://api.github.com/users/mmiklavc/gists{/gist_id}","starred_url":"https://api.github.com/users/mmiklavc/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mmiklavc/subscriptions","organizations_url":"https://api.github.com/users/mmiklavc/orgs","repos_url":"https://api.github.com/users/mmiklavc/repos","events_url":"https://api.github.com/users/mmiklavc/events{/privacy}","received_events_url":"https://api.github.com/users/mmiklavc/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-22T23:38:39Z","updated_at":"2019-05-22T23:38:39Z","author_association":"CONTRIBUTOR","body":"> Agreed, but that’s what the integration tests look for, so that’s where it needs to live to get the integration tests required by you comments on the other PR. Can you suggest where it should go, and how we should change the integration test approach?\r\n\r\nIt actually checks for zookeeper config in both `metron-parsing/metron-parsers` and `metron-parsing/metron-parsers-common` - https://github.com/apache/metron/blob/22cc622d6f08cfa77c06dea2df7f4c56edc1862e/metron-platform/metron-parsing/metron-parsers-common/src/test/java/org/apache/metron/parsers/integration/ParserIntegrationTest.java#L67. I didn't actually realize that until I dug a bit. Echoing our earlier thoughts, I would like to simplify this a bit at some point so that the concerns aren't jumbled.\r\n\r\nThat being said, the leef config should go here - https://github.com/apache/metron/tree/22cc622d6f08cfa77c06dea2df7f4c56edc1862e/metron-platform/metron-parsing/metron-parsers/src/main/config/zookeeper/parsers\r\n","reactions":{"url":"https://api.github.com/repos/apache/metron/issues/comments/495013460/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/metron/issues/comments/495304922","html_url":"https://github.com/apache/metron/pull/1416#issuecomment-495304922","issue_url":"https://api.github.com/repos/apache/metron/issues/1416","id":495304922,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NTMwNDkyMg==","user":{"login":"ottobackwards","id":1111551,"node_id":"MDQ6VXNlcjExMTE1NTE=","avatar_url":"https://avatars.githubusercontent.com/u/1111551?v=4","gravatar_id":"","url":"https://api.github.com/users/ottobackwards","html_url":"https://github.com/ottobackwards","followers_url":"https://api.github.com/users/ottobackwards/followers","following_url":"https://api.github.com/users/ottobackwards/following{/other_user}","gists_url":"https://api.github.com/users/ottobackwards/gists{/gist_id}","starred_url":"https://api.github.com/users/ottobackwards/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ottobackwards/subscriptions","organizations_url":"https://api.github.com/users/ottobackwards/orgs","repos_url":"https://api.github.com/users/ottobackwards/repos","events_url":"https://api.github.com/users/ottobackwards/events{/privacy}","received_events_url":"https://api.github.com/users/ottobackwards/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-23T17:10:43Z","updated_at":"2019-05-23T17:10:43Z","author_association":"CONTRIBUTOR","body":"+1 by inspection","reactions":{"url":"https://api.github.com/repos/apache/metron/issues/comments/495304922/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/metron/issues/comments/495312302","html_url":"https://github.com/apache/metron/pull/1399#issuecomment-495312302","issue_url":"https://api.github.com/repos/apache/metron/issues/1399","id":495312302,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NTMxMjMwMg==","user":{"login":"merrimanr","id":311928,"node_id":"MDQ6VXNlcjMxMTkyOA==","avatar_url":"https://avatars.githubusercontent.com/u/311928?v=4","gravatar_id":"","url":"https://api.github.com/users/merrimanr","html_url":"https://github.com/merrimanr","followers_url":"https://api.github.com/users/merrimanr/followers","following_url":"https://api.github.com/users/merrimanr/following{/other_user}","gists_url":"https://api.github.com/users/merrimanr/gists{/gist_id}","starred_url":"https://api.github.com/users/merrimanr/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/merrimanr/subscriptions","organizations_url":"https://api.github.com/users/merrimanr/orgs","repos_url":"https://api.github.com/users/merrimanr/repos","events_url":"https://api.github.com/users/merrimanr/events{/privacy}","received_events_url":"https://api.github.com/users/merrimanr/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-23T17:31:25Z","updated_at":"2019-05-23T17:31:25Z","author_association":"CONTRIBUTOR","body":"I believe I've addressed the feedback so far with the latest commit.  Let me know how it looks now and what I'm missing.","reactions":{"url":"https://api.github.com/repos/apache/metron/issues/comments/495312302/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/metron/issues/comments/495346438","html_url":"https://github.com/apache/metron/pull/1409#issuecomment-495346438","issue_url":"https://api.github.com/repos/apache/metron/issues/1409","id":495346438,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NTM0NjQzOA==","user":{"login":"mmiklavc","id":658443,"node_id":"MDQ6VXNlcjY1ODQ0Mw==","avatar_url":"https://avatars.githubusercontent.com/u/658443?v=4","gravatar_id":"","url":"https://api.github.com/users/mmiklavc","html_url":"https://github.com/mmiklavc","followers_url":"https://api.github.com/users/mmiklavc/followers","following_url":"https://api.github.com/users/mmiklavc/following{/other_user}","gists_url":"https://api.github.com/users/mmiklavc/gists{/gist_id}","starred_url":"https://api.github.com/users/mmiklavc/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mmiklavc/subscriptions","organizations_url":"https://api.github.com/users/mmiklavc/orgs","repos_url":"https://api.github.com/users/mmiklavc/repos","events_url":"https://api.github.com/users/mmiklavc/events{/privacy}","received_events_url":"https://api.github.com/users/mmiklavc/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-23T19:07:40Z","updated_at":"2019-05-23T19:07:40Z","author_association":"CONTRIBUTOR","body":"> If implementing Otto's suggestion is not straightforward and needs more thought/discussion, I think what you've done here is fine for addressing the immediate need while maintaining the current behavior. I would prefer to see the `parser.original.string.global` option go away and just default to adding the raw bytes from kafka to the `original_string` field.\r\n\r\nI'm going to kill the global config option for now, but leave the `message.putIfAbsent()` in parserrunnerimpl. And then leave the option in jsonmapparser.","reactions":{"url":"https://api.github.com/repos/apache/metron/issues/comments/495346438/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/metron/issues/comments/495348264","html_url":"https://github.com/apache/metron/pull/1419#issuecomment-495348264","issue_url":"https://api.github.com/repos/apache/metron/issues/1419","id":495348264,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NTM0ODI2NA==","user":{"login":"mmiklavc","id":658443,"node_id":"MDQ6VXNlcjY1ODQ0Mw==","avatar_url":"https://avatars.githubusercontent.com/u/658443?v=4","gravatar_id":"","url":"https://api.github.com/users/mmiklavc","html_url":"https://github.com/mmiklavc","followers_url":"https://api.github.com/users/mmiklavc/followers","following_url":"https://api.github.com/users/mmiklavc/following{/other_user}","gists_url":"https://api.github.com/users/mmiklavc/gists{/gist_id}","starred_url":"https://api.github.com/users/mmiklavc/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mmiklavc/subscriptions","organizations_url":"https://api.github.com/users/mmiklavc/orgs","repos_url":"https://api.github.com/users/mmiklavc/repos","events_url":"https://api.github.com/users/mmiklavc/events{/privacy}","received_events_url":"https://api.github.com/users/mmiklavc/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-23T19:13:09Z","updated_at":"2019-05-23T19:13:09Z","author_association":"CONTRIBUTOR","body":"@simonellistonball - I opened a PR against your PR moving the leef config in metron.spec. I ran the build locally and checked that the RPM's build via `time mvn clean package -DskipTests -Pbuild-rpms`\r\n\r\nFwiw, here were the results of the timing - `1111.11s user 154.80s system 56% cpu 37:13.88 total`","reactions":{"url":"https://api.github.com/repos/apache/metron/issues/comments/495348264/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/metron/issues/comments/495394665","html_url":"https://github.com/apache/metron/pull/1409#issuecomment-495394665","issue_url":"https://api.github.com/repos/apache/metron/issues/1409","id":495394665,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NTM5NDY2NQ==","user":{"login":"mmiklavc","id":658443,"node_id":"MDQ6VXNlcjY1ODQ0Mw==","avatar_url":"https://avatars.githubusercontent.com/u/658443?v=4","gravatar_id":"","url":"https://api.github.com/users/mmiklavc","html_url":"https://github.com/mmiklavc","followers_url":"https://api.github.com/users/mmiklavc/followers","following_url":"https://api.github.com/users/mmiklavc/following{/other_user}","gists_url":"https://api.github.com/users/mmiklavc/gists{/gist_id}","starred_url":"https://api.github.com/users/mmiklavc/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mmiklavc/subscriptions","organizations_url":"https://api.github.com/users/mmiklavc/orgs","repos_url":"https://api.github.com/users/mmiklavc/repos","events_url":"https://api.github.com/users/mmiklavc/events{/privacy}","received_events_url":"https://api.github.com/users/mmiklavc/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-23T21:38:45Z","updated_at":"2019-05-23T21:38:45Z","author_association":"CONTRIBUTOR","body":"Latest commit removes the global option to disable the global handling. We can leverage METRON-2120 for normalizing this fully across all parsers.","reactions":{"url":"https://api.github.com/repos/apache/metron/issues/comments/495394665/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/metron/issues/comments/495578734","html_url":"https://github.com/apache/metron/pull/1416#issuecomment-495578734","issue_url":"https://api.github.com/repos/apache/metron/issues/1416","id":495578734,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NTU3ODczNA==","user":{"login":"ottobackwards","id":1111551,"node_id":"MDQ6VXNlcjExMTE1NTE=","avatar_url":"https://avatars.githubusercontent.com/u/1111551?v=4","gravatar_id":"","url":"https://api.github.com/users/ottobackwards","html_url":"https://github.com/ottobackwards","followers_url":"https://api.github.com/users/ottobackwards/followers","following_url":"https://api.github.com/users/ottobackwards/following{/other_user}","gists_url":"https://api.github.com/users/ottobackwards/gists{/gist_id}","starred_url":"https://api.github.com/users/ottobackwards/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ottobackwards/subscriptions","organizations_url":"https://api.github.com/users/ottobackwards/orgs","repos_url":"https://api.github.com/users/ottobackwards/repos","events_url":"https://api.github.com/users/ottobackwards/events{/privacy}","received_events_url":"https://api.github.com/users/ottobackwards/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-24T11:12:30Z","updated_at":"2019-05-24T11:12:30Z","author_association":"CONTRIBUTOR","body":"+2","reactions":{"url":"https://api.github.com/repos/apache/metron/issues/comments/495578734/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/metron/issues/comments/495612372","html_url":"https://github.com/apache/metron/pull/1432#issuecomment-495612372","issue_url":"https://api.github.com/repos/apache/metron/issues/1432","id":495612372,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NTYxMjM3Mg==","user":{"login":"nickwallen","id":2475409,"node_id":"MDQ6VXNlcjI0NzU0MDk=","avatar_url":"https://avatars.githubusercontent.com/u/2475409?v=4","gravatar_id":"","url":"https://api.github.com/users/nickwallen","html_url":"https://github.com/nickwallen","followers_url":"https://api.github.com/users/nickwallen/followers","following_url":"https://api.github.com/users/nickwallen/following{/other_user}","gists_url":"https://api.github.com/users/nickwallen/gists{/gist_id}","starred_url":"https://api.github.com/users/nickwallen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickwallen/subscriptions","organizations_url":"https://api.github.com/users/nickwallen/orgs","repos_url":"https://api.github.com/users/nickwallen/repos","events_url":"https://api.github.com/users/nickwallen/events{/privacy}","received_events_url":"https://api.github.com/users/nickwallen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-24T12:50:23Z","updated_at":"2019-05-24T12:50:23Z","author_association":"CONTRIBUTOR","body":"> 1. Deploy multinode metron cluster\r\n> 2. make sure the Solr is installed on non metron node\r\n> 3. Kerberize the cluster before starting the indexing server\r\n> 4. starting indexing service fails while kinit the solr user.\r\n\r\n@MohanDV Why is this not a problem if I start the indexing server prior to kerberizing?\r\n\r\nHave you tested this change with the other/original installation path; start server, then kerberize?","reactions":{"url":"https://api.github.com/repos/apache/metron/issues/comments/495612372/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/metron/issues/comments/495612964","html_url":"https://github.com/apache/metron/pull/1416#issuecomment-495612964","issue_url":"https://api.github.com/repos/apache/metron/issues/1416","id":495612964,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NTYxMjk2NA==","user":{"login":"nickwallen","id":2475409,"node_id":"MDQ6VXNlcjI0NzU0MDk=","avatar_url":"https://avatars.githubusercontent.com/u/2475409?v=4","gravatar_id":"","url":"https://api.github.com/users/nickwallen","html_url":"https://github.com/nickwallen","followers_url":"https://api.github.com/users/nickwallen/followers","following_url":"https://api.github.com/users/nickwallen/following{/other_user}","gists_url":"https://api.github.com/users/nickwallen/gists{/gist_id}","starred_url":"https://api.github.com/users/nickwallen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickwallen/subscriptions","organizations_url":"https://api.github.com/users/nickwallen/orgs","repos_url":"https://api.github.com/users/nickwallen/repos","events_url":"https://api.github.com/users/nickwallen/events{/privacy}","received_events_url":"https://api.github.com/users/nickwallen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-24T12:51:52Z","updated_at":"2019-05-24T12:51:52Z","author_association":"CONTRIBUTOR","body":"Wait a tick; we can +2 things??? :)","reactions":{"url":"https://api.github.com/repos/apache/metron/issues/comments/495612964/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/metron/issues/comments/495633293","html_url":"https://github.com/apache/metron/pull/1432#issuecomment-495633293","issue_url":"https://api.github.com/repos/apache/metron/issues/1432","id":495633293,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NTYzMzI5Mw==","user":{"login":"MohanDV","id":12934693,"node_id":"MDQ6VXNlcjEyOTM0Njkz","avatar_url":"https://avatars.githubusercontent.com/u/12934693?v=4","gravatar_id":"","url":"https://api.github.com/users/MohanDV","html_url":"https://github.com/MohanDV","followers_url":"https://api.github.com/users/MohanDV/followers","following_url":"https://api.github.com/users/MohanDV/following{/other_user}","gists_url":"https://api.github.com/users/MohanDV/gists{/gist_id}","starred_url":"https://api.github.com/users/MohanDV/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/MohanDV/subscriptions","organizations_url":"https://api.github.com/users/MohanDV/orgs","repos_url":"https://api.github.com/users/MohanDV/repos","events_url":"https://api.github.com/users/MohanDV/events{/privacy}","received_events_url":"https://api.github.com/users/MohanDV/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-24T13:40:59Z","updated_at":"2019-05-24T13:40:59Z","author_association":"CONTRIBUTOR","body":"@nickwallen if I start the indexing server prior to kerberizing it will not try kinit the user and schema will be created and the flag file will be set to true.  Subsequent restarts post kerberization will not try recreating the schema.  ","reactions":{"url":"https://api.github.com/repos/apache/metron/issues/comments/495633293/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/metron/issues/comments/495658374","html_url":"https://github.com/apache/metron/pull/1419#issuecomment-495658374","issue_url":"https://api.github.com/repos/apache/metron/issues/1419","id":495658374,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NTY1ODM3NA==","user":{"login":"justinleet","id":5077341,"node_id":"MDQ6VXNlcjUwNzczNDE=","avatar_url":"https://avatars.githubusercontent.com/u/5077341?v=4","gravatar_id":"","url":"https://api.github.com/users/justinleet","html_url":"https://github.com/justinleet","followers_url":"https://api.github.com/users/justinleet/followers","following_url":"https://api.github.com/users/justinleet/following{/other_user}","gists_url":"https://api.github.com/users/justinleet/gists{/gist_id}","starred_url":"https://api.github.com/users/justinleet/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/justinleet/subscriptions","organizations_url":"https://api.github.com/users/justinleet/orgs","repos_url":"https://api.github.com/users/justinleet/repos","events_url":"https://api.github.com/users/justinleet/events{/privacy}","received_events_url":"https://api.github.com/users/justinleet/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-24T14:38:57Z","updated_at":"2019-05-24T14:38:57Z","author_association":"CONTRIBUTOR","body":"@simonellistonball Would you mind bouncing Travis? Seems like an unrelated failure.","reactions":{"url":"https://api.github.com/repos/apache/metron/issues/comments/495658374/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/metron/issues/comments/495700825","html_url":"https://github.com/apache/metron/pull/1419#issuecomment-495700825","issue_url":"https://api.github.com/repos/apache/metron/issues/1419","id":495700825,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NTcwMDgyNQ==","user":{"login":"simonellistonball","id":1217895,"node_id":"MDQ6VXNlcjEyMTc4OTU=","avatar_url":"https://avatars.githubusercontent.com/u/1217895?v=4","gravatar_id":"","url":"https://api.github.com/users/simonellistonball","html_url":"https://github.com/simonellistonball","followers_url":"https://api.github.com/users/simonellistonball/followers","following_url":"https://api.github.com/users/simonellistonball/following{/other_user}","gists_url":"https://api.github.com/users/simonellistonball/gists{/gist_id}","starred_url":"https://api.github.com/users/simonellistonball/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/simonellistonball/subscriptions","organizations_url":"https://api.github.com/users/simonellistonball/orgs","repos_url":"https://api.github.com/users/simonellistonball/repos","events_url":"https://api.github.com/users/simonellistonball/events{/privacy}","received_events_url":"https://api.github.com/users/simonellistonball/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-24T16:33:40Z","updated_at":"2019-05-24T16:33:40Z","author_association":"CONTRIBUTOR","body":"> @simonellistonball Would you mind bouncing Travis? Seems like an unrelated failure.\r\n\r\nNot sure what the problem is... all the travis checks passed on this.","reactions":{"url":"https://api.github.com/repos/apache/metron/issues/comments/495700825/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/metron/issues/comments/495735994","html_url":"https://github.com/apache/metron/pull/1433#issuecomment-495735994","issue_url":"https://api.github.com/repos/apache/metron/issues/1433","id":495735994,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NTczNTk5NA==","user":{"login":"mmiklavc","id":658443,"node_id":"MDQ6VXNlcjY1ODQ0Mw==","avatar_url":"https://avatars.githubusercontent.com/u/658443?v=4","gravatar_id":"","url":"https://api.github.com/users/mmiklavc","html_url":"https://github.com/mmiklavc","followers_url":"https://api.github.com/users/mmiklavc/followers","following_url":"https://api.github.com/users/mmiklavc/following{/other_user}","gists_url":"https://api.github.com/users/mmiklavc/gists{/gist_id}","starred_url":"https://api.github.com/users/mmiklavc/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mmiklavc/subscriptions","organizations_url":"https://api.github.com/users/mmiklavc/orgs","repos_url":"https://api.github.com/users/mmiklavc/repos","events_url":"https://api.github.com/users/mmiklavc/events{/privacy}","received_events_url":"https://api.github.com/users/mmiklavc/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-24T18:06:59Z","updated_at":"2019-05-24T18:06:59Z","author_association":"CONTRIBUTOR","body":"I'm +1 by inspection pending Travis. I also like @justinleet's suggestion of caching Maven - not sure we need to download it every time.","reactions":{"url":"https://api.github.com/repos/apache/metron/issues/comments/495735994/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/metron/issues/comments/495736884","html_url":"https://github.com/apache/metron/pull/1433#issuecomment-495736884","issue_url":"https://api.github.com/repos/apache/metron/issues/1433","id":495736884,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NTczNjg4NA==","user":{"login":"nickwallen","id":2475409,"node_id":"MDQ6VXNlcjI0NzU0MDk=","avatar_url":"https://avatars.githubusercontent.com/u/2475409?v=4","gravatar_id":"","url":"https://api.github.com/users/nickwallen","html_url":"https://github.com/nickwallen","followers_url":"https://api.github.com/users/nickwallen/followers","following_url":"https://api.github.com/users/nickwallen/following{/other_user}","gists_url":"https://api.github.com/users/nickwallen/gists{/gist_id}","starred_url":"https://api.github.com/users/nickwallen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickwallen/subscriptions","organizations_url":"https://api.github.com/users/nickwallen/orgs","repos_url":"https://api.github.com/users/nickwallen/repos","events_url":"https://api.github.com/users/nickwallen/events{/privacy}","received_events_url":"https://api.github.com/users/nickwallen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-24T18:09:17Z","updated_at":"2019-05-24T18:09:17Z","author_association":"CONTRIBUTOR","body":"Yes, I'd be all for caching whatever we can; including Maven.","reactions":{"url":"https://api.github.com/repos/apache/metron/issues/comments/495736884/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/metron/issues/comments/495803657","html_url":"https://github.com/apache/metron/pull/1389#issuecomment-495803657","issue_url":"https://api.github.com/repos/apache/metron/issues/1389","id":495803657,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NTgwMzY1Nw==","user":{"login":"merrimanr","id":311928,"node_id":"MDQ6VXNlcjMxMTkyOA==","avatar_url":"https://avatars.githubusercontent.com/u/311928?v=4","gravatar_id":"","url":"https://api.github.com/users/merrimanr","html_url":"https://github.com/merrimanr","followers_url":"https://api.github.com/users/merrimanr/followers","following_url":"https://api.github.com/users/merrimanr/following{/other_user}","gists_url":"https://api.github.com/users/merrimanr/gists{/gist_id}","starred_url":"https://api.github.com/users/merrimanr/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/merrimanr/subscriptions","organizations_url":"https://api.github.com/users/merrimanr/orgs","repos_url":"https://api.github.com/users/merrimanr/repos","events_url":"https://api.github.com/users/merrimanr/events{/privacy}","received_events_url":"https://api.github.com/users/merrimanr/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-24T22:24:14Z","updated_at":"2019-05-24T22:24:14Z","author_association":"CONTRIBUTOR","body":"Merge conflicts are resolved and I'll have the READMEs done shortly.  It should be ready to test now.","reactions":{"url":"https://api.github.com/repos/apache/metron/issues/comments/495803657/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/metron/issues/comments/496574026","html_url":"https://github.com/apache/metron/pull/1419#issuecomment-496574026","issue_url":"https://api.github.com/repos/apache/metron/issues/1419","id":496574026,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NjU3NDAyNg==","user":{"login":"justinleet","id":5077341,"node_id":"MDQ6VXNlcjUwNzczNDE=","avatar_url":"https://avatars.githubusercontent.com/u/5077341?v=4","gravatar_id":"","url":"https://api.github.com/users/justinleet","html_url":"https://github.com/justinleet","followers_url":"https://api.github.com/users/justinleet/followers","following_url":"https://api.github.com/users/justinleet/following{/other_user}","gists_url":"https://api.github.com/users/justinleet/gists{/gist_id}","starred_url":"https://api.github.com/users/justinleet/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/justinleet/subscriptions","organizations_url":"https://api.github.com/users/justinleet/orgs","repos_url":"https://api.github.com/users/justinleet/repos","events_url":"https://api.github.com/users/justinleet/events{/privacy}","received_events_url":"https://api.github.com/users/justinleet/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-28T15:46:01Z","updated_at":"2019-05-28T15:46:01Z","author_association":"CONTRIBUTOR","body":"@mmiklavc Are you good with this? I'm going to abstain since I mostly saw a Travis issue that I probably commented on the wrong PR for, based on the response from @simonellistonball ","reactions":{"url":"https://api.github.com/repos/apache/metron/issues/comments/496574026/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/metron/issues/comments/496577578","html_url":"https://github.com/apache/metron/pull/1431#issuecomment-496577578","issue_url":"https://api.github.com/repos/apache/metron/issues/1431","id":496577578,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NjU3NzU3OA==","user":{"login":"sardell","id":7304869,"node_id":"MDQ6VXNlcjczMDQ4Njk=","avatar_url":"https://avatars.githubusercontent.com/u/7304869?v=4","gravatar_id":"","url":"https://api.github.com/users/sardell","html_url":"https://github.com/sardell","followers_url":"https://api.github.com/users/sardell/followers","following_url":"https://api.github.com/users/sardell/following{/other_user}","gists_url":"https://api.github.com/users/sardell/gists{/gist_id}","starred_url":"https://api.github.com/users/sardell/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sardell/subscriptions","organizations_url":"https://api.github.com/users/sardell/orgs","repos_url":"https://api.github.com/users/sardell/repos","events_url":"https://api.github.com/users/sardell/events{/privacy}","received_events_url":"https://api.github.com/users/sardell/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-28T15:54:43Z","updated_at":"2019-05-28T15:54:43Z","author_association":"CONTRIBUTOR","body":"+1 pending a small typo fix. Tested with full dev and the instructions left on the ASF Jira ticket.","reactions":{"url":"https://api.github.com/repos/apache/metron/issues/comments/496577578/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/metron/issues/comments/496589149","html_url":"https://github.com/apache/metron/pull/1419#issuecomment-496589149","issue_url":"https://api.github.com/repos/apache/metron/issues/1419","id":496589149,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NjU4OTE0OQ==","user":{"login":"mmiklavc","id":658443,"node_id":"MDQ6VXNlcjY1ODQ0Mw==","avatar_url":"https://avatars.githubusercontent.com/u/658443?v=4","gravatar_id":"","url":"https://api.github.com/users/mmiklavc","html_url":"https://github.com/mmiklavc","followers_url":"https://api.github.com/users/mmiklavc/followers","following_url":"https://api.github.com/users/mmiklavc/following{/other_user}","gists_url":"https://api.github.com/users/mmiklavc/gists{/gist_id}","starred_url":"https://api.github.com/users/mmiklavc/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mmiklavc/subscriptions","organizations_url":"https://api.github.com/users/mmiklavc/orgs","repos_url":"https://api.github.com/users/mmiklavc/repos","events_url":"https://api.github.com/users/mmiklavc/events{/privacy}","received_events_url":"https://api.github.com/users/mmiklavc/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-28T16:24:47Z","updated_at":"2019-05-28T16:24:47Z","author_association":"CONTRIBUTOR","body":"@justinleet Everything looks good, except we're missing an update to the changelog file here - https://github.com/apache/metron/blob/02bd729bf349095e4fc7054d647dd6b903ac8bb7/metron-deployment/packaging/docker/rpm-docker/SPECS/metron.spec#L688. It looks like we also missed the update from a PR I submitted as well. I'm going to open a separate PR to fix this so we can get master working again.\r\n\r\n+1 by inspection","reactions":{"url":"https://api.github.com/repos/apache/metron/issues/comments/496589149/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/metron/issues/comments/496589891","html_url":"https://github.com/apache/metron/pull/1419#issuecomment-496589891","issue_url":"https://api.github.com/repos/apache/metron/issues/1419","id":496589891,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NjU4OTg5MQ==","user":{"login":"mmiklavc","id":658443,"node_id":"MDQ6VXNlcjY1ODQ0Mw==","avatar_url":"https://avatars.githubusercontent.com/u/658443?v=4","gravatar_id":"","url":"https://api.github.com/users/mmiklavc","html_url":"https://github.com/mmiklavc","followers_url":"https://api.github.com/users/mmiklavc/followers","following_url":"https://api.github.com/users/mmiklavc/following{/other_user}","gists_url":"https://api.github.com/users/mmiklavc/gists{/gist_id}","starred_url":"https://api.github.com/users/mmiklavc/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mmiklavc/subscriptions","organizations_url":"https://api.github.com/users/mmiklavc/orgs","repos_url":"https://api.github.com/users/mmiklavc/repos","events_url":"https://api.github.com/users/mmiklavc/events{/privacy}","received_events_url":"https://api.github.com/users/mmiklavc/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-28T16:26:42Z","updated_at":"2019-05-28T16:26:42Z","author_association":"CONTRIBUTOR","body":"https://issues.apache.org/jira/browse/METRON-2144","reactions":{"url":"https://api.github.com/repos/apache/metron/issues/comments/496589891/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/metron/issues/comments/496797322","html_url":"https://github.com/apache/metron/pull/1380#issuecomment-496797322","issue_url":"https://api.github.com/repos/apache/metron/issues/1380","id":496797322,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5Njc5NzMyMg==","user":{"login":"sardell","id":7304869,"node_id":"MDQ6VXNlcjczMDQ4Njk=","avatar_url":"https://avatars.githubusercontent.com/u/7304869?v=4","gravatar_id":"","url":"https://api.github.com/users/sardell","html_url":"https://github.com/sardell","followers_url":"https://api.github.com/users/sardell/followers","following_url":"https://api.github.com/users/sardell/following{/other_user}","gists_url":"https://api.github.com/users/sardell/gists{/gist_id}","starred_url":"https://api.github.com/users/sardell/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sardell/subscriptions","organizations_url":"https://api.github.com/users/sardell/orgs","repos_url":"https://api.github.com/users/sardell/repos","events_url":"https://api.github.com/users/sardell/events{/privacy}","received_events_url":"https://api.github.com/users/sardell/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-29T06:03:55Z","updated_at":"2019-05-29T06:03:55Z","author_association":"CONTRIBUTOR","body":"I do think my suggestion is creating more work that is clearly out of scope of this specific fix for the datepicker. I respectfully disagree that these changes aren't necessary or worth the effort. Maybe I'm oversimplifying this, but you could add a HostListener to listen for clicks outside of the datepicker. For example: https://stackoverflow.com/questions/40107008/detect-click-outside-angular-component. The Cypress tests are probably broken with the suggested changes because they are targeting the input vs. the icon to open the calendar.\r\n\r\nAll that said, I'm going to give this a +1, as this work clearly addresses the problem you set out to fix (copy and pasting dates in the datepicker). I've created a separate ticket to address the UX issues with the datepicker: https://issues.apache.org/jira/browse/METRON-2146","reactions":{"url":"https://api.github.com/repos/apache/metron/issues/comments/496797322/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/metron/issues/comments/496980446","html_url":"https://github.com/apache/metron/pull/1410#issuecomment-496980446","issue_url":"https://api.github.com/repos/apache/metron/issues/1410","id":496980446,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5Njk4MDQ0Ng==","user":{"login":"ottobackwards","id":1111551,"node_id":"MDQ6VXNlcjExMTE1NTE=","avatar_url":"https://avatars.githubusercontent.com/u/1111551?v=4","gravatar_id":"","url":"https://api.github.com/users/ottobackwards","html_url":"https://github.com/ottobackwards","followers_url":"https://api.github.com/users/ottobackwards/followers","following_url":"https://api.github.com/users/ottobackwards/following{/other_user}","gists_url":"https://api.github.com/users/ottobackwards/gists{/gist_id}","starred_url":"https://api.github.com/users/ottobackwards/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ottobackwards/subscriptions","organizations_url":"https://api.github.com/users/ottobackwards/orgs","repos_url":"https://api.github.com/users/ottobackwards/repos","events_url":"https://api.github.com/users/ottobackwards/events{/privacy}","received_events_url":"https://api.github.com/users/ottobackwards/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-29T15:14:10Z","updated_at":"2019-05-29T15:14:10Z","author_association":"CONTRIBUTOR","body":"+1, looks pretty straight forward, let's get this ball rolling","reactions":{"url":"https://api.github.com/repos/apache/metron/issues/comments/496980446/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/metron/issues/comments/496982090","html_url":"https://github.com/apache/metron/pull/1410#issuecomment-496982090","issue_url":"https://api.github.com/repos/apache/metron/issues/1410","id":496982090,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5Njk4MjA5MA==","user":{"login":"tiborm","id":2437400,"node_id":"MDQ6VXNlcjI0Mzc0MDA=","avatar_url":"https://avatars.githubusercontent.com/u/2437400?v=4","gravatar_id":"","url":"https://api.github.com/users/tiborm","html_url":"https://github.com/tiborm","followers_url":"https://api.github.com/users/tiborm/followers","following_url":"https://api.github.com/users/tiborm/following{/other_user}","gists_url":"https://api.github.com/users/tiborm/gists{/gist_id}","starred_url":"https://api.github.com/users/tiborm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tiborm/subscriptions","organizations_url":"https://api.github.com/users/tiborm/orgs","repos_url":"https://api.github.com/users/tiborm/repos","events_url":"https://api.github.com/users/tiborm/events{/privacy}","received_events_url":"https://api.github.com/users/tiborm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-29T15:17:57Z","updated_at":"2019-05-29T15:17:57Z","author_association":"CONTRIBUTOR","body":"Thanks, Otto for reviewing!","reactions":{"url":"https://api.github.com/repos/apache/metron/issues/comments/496982090/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/metron/issues/comments/497049477","html_url":"https://github.com/apache/metron/pull/1409#issuecomment-497049477","issue_url":"https://api.github.com/repos/apache/metron/issues/1409","id":497049477,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NzA0OTQ3Nw==","user":{"login":"mmiklavc","id":658443,"node_id":"MDQ6VXNlcjY1ODQ0Mw==","avatar_url":"https://avatars.githubusercontent.com/u/658443?v=4","gravatar_id":"","url":"https://api.github.com/users/mmiklavc","html_url":"https://github.com/mmiklavc","followers_url":"https://api.github.com/users/mmiklavc/followers","following_url":"https://api.github.com/users/mmiklavc/following{/other_user}","gists_url":"https://api.github.com/users/mmiklavc/gists{/gist_id}","starred_url":"https://api.github.com/users/mmiklavc/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mmiklavc/subscriptions","organizations_url":"https://api.github.com/users/mmiklavc/orgs","repos_url":"https://api.github.com/users/mmiklavc/repos","events_url":"https://api.github.com/users/mmiklavc/events{/privacy}","received_events_url":"https://api.github.com/users/mmiklavc/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-29T18:12:25Z","updated_at":"2019-05-29T18:36:24Z","author_association":"CONTRIBUTOR","body":"### Test Plan\r\n\r\n**Test the default original_string functionality**\r\n\r\n* Create kafka topic\r\n```\r\n/usr/hdp/current/kafka-broker/bin/kafka-console-consumer.sh --zookeeper $ZOOKEEPER --topic jsonMapQuery --from-beginning\r\n```\r\n\r\n* Pull configs down from ZK\r\n```\r\n$METRON_HOME/bin/zk_load_configs.sh -m PULL -o ${METRON_HOME}/config/zookeeper -z $ZOOKEEPER -f\r\n```\r\n\r\n* Create indexing config. We won't need one for the parser itself because a default is provided already.\r\n```\r\n# /usr/metron/0.7.2/config/zookeeper/indexing/jsonMapQuery.json\r\n{\r\n  \"hdfs\" : {\r\n    \"index\": \"json_map_query\",\r\n    \"batchSize\": 1,\r\n    \"enabled\" : true\r\n  },\r\n  \"elasticsearch\" : {\r\n    \"index\": \"json_map_query\",\r\n    \"batchSize\": 1,\r\n    \"enabled\" : true\r\n  },\r\n  \"solr\" : {\r\n    \"index\": \"json_map_query\",\r\n    \"batchSize\": 1,\r\n    \"enabled\" : true\r\n  }\r\n}\r\n```\r\n\r\n* Push config back up to ZK\r\n```\r\n$METRON_HOME/bin/zk_load_configs.sh -m PUSH -i $METRON_HOME/config/zookeeper/ -z $ZOOKEEPER\r\n```\r\n\r\n* Start the topology \r\n```\r\n$METRON_HOME/bin/start_parser_topology.sh -z $ZOOKEEPER -s jsonMapQuery\r\n```\r\n\r\n* Add some data to a file named json-data.json\r\n```\r\n{\"foo\":[{ \"string\" : \"bar\", \"number\" : 1, \"ignored\" : [ \"blah\" ] },{ \"number\" : 2 },{ \"number\" : 3 },{ \"number\" : 4 },{ \"number\" : 5 },{ \"number\" : 6 },{ \"number\" : 7 },{ \"number\" : 8 },{ \"number\" : 9 },{ \"number\" : 10 }]}\r\n```\r\n\r\n* Send the data to Kafka\r\n```\r\ncat json-data.json | /usr/hdp/current/kafka-broker/bin/kafka-console-producer.sh --broker-list $BROKERLIST --topic jsonMapQuery\r\n```\r\n\r\n* Expect to see 10 new messages created in json_map_query_index\r\n```\r\ncurl -XGET \"http://node1:9200/json_map_query*/_search?pretty=true\"\r\n{\r\n  \"took\" : 18,\r\n  \"timed_out\" : false,\r\n  \"_shards\" : {\r\n    \"total\" : 5,\r\n    \"successful\" : 5,\r\n    \"skipped\" : 0,\r\n    \"failed\" : 0\r\n  },\r\n  \"hits\" : {\r\n    \"total\" : 10,\r\n    \"max_score\" : 1.0,\r\n    \"hits\" : [\r\n      {\r\n        \"_index\" : \"json_map_query_index_2019.05.29.04\",\r\n        \"_type\" : \"jsonMapQuery_doc\",\r\n        \"_id\" : \"AWsB3SuUcGT3jmMsgLwb\",\r\n        \"_score\" : 1.0,\r\n        \"_source\" : {\r\n          \"parallelenricher:splitter:begin:ts\" : \"1559104376560\",\r\n          \"parallelenricher:enrich:end:ts\" : \"1559104376560\",\r\n          \"number\" : 6,\r\n          \"source:type\" : \"jsonMapQuery\",\r\n          \"original_string\" : \"{\\\"foo\\\":[{ \\\"string\\\" : \\\"bar\\\", \\\"number\\\" : 1, \\\"ignored\\\" : [ \\\"blah\\\" ] },{ \\\"number\\\" : 2 },{ \\\"number\\\" : 3 },{ \\\"number\\\" : 4 },{ \\\"number\\\" : 5 },{ \\\"number\\\" : 6 },{ \\\"number\\\" : 7 },{ \\\"number\\\" : 8 },{ \\\"number\\\" : 9 },{ \\\"number\\\" : 10 }]}\",\r\n          \"parallelenricher:enrich:begin:ts\" : \"1559104376560\",\r\n          \"parallelenricher:splitter:end:ts\" : \"1559104376560\",\r\n          \"guid\" : \"975a0761-4590-4290-a9d0-a98493eb1bb0\",\r\n          \"timestamp\" : 1559104359358\r\n        }\r\n      },\r\n      {\r\n        \"_index\" : \"json_map_query_index_2019.05.29.04\",\r\n        \"_type\" : \"jsonMapQuery_doc\",\r\n        \"_id\" : \"AWsB3SvZcGT3jmMsgLwf\",\r\n        \"_score\" : 1.0,\r\n        \"_source\" : {\r\n          \"parallelenricher:splitter:begin:ts\" : \"1559104376561\",\r\n          \"parallelenricher:enrich:end:ts\" : \"1559104376561\",\r\n          \"number\" : 10,\r\n          \"source:type\" : \"jsonMapQuery\",\r\n          \"original_string\" : \"{\\\"foo\\\":[{ \\\"string\\\" : \\\"bar\\\", \\\"number\\\" : 1, \\\"ignored\\\" : [ \\\"blah\\\" ] },{ \\\"number\\\" : 2 },{ \\\"number\\\" : 3 },{ \\\"number\\\" : 4 },{ \\\"number\\\" : 5 },{ \\\"number\\\" : 6 },{ \\\"number\\\" : 7 },{ \\\"number\\\" : 8 },{ \\\"number\\\" : 9 },{ \\\"number\\\" : 10 }]}\",\r\n          \"parallelenricher:enrich:begin:ts\" : \"1559104376561\",\r\n          \"parallelenricher:splitter:end:ts\" : \"1559104376561\",\r\n          \"guid\" : \"3de3a1ab-11fc-42f0-8083-1349e512e113\",\r\n          \"timestamp\" : 1559104359358\r\n        }\r\n      },\r\n      {\r\n        \"_index\" : \"json_map_query_index_2019.05.29.04\",\r\n        \"_type\" : \"jsonMapQuery_doc\",\r\n        \"_id\" : \"AWsB3StRcGT3jmMsgLwZ\",\r\n        \"_score\" : 1.0,\r\n        \"_source\" : {\r\n          \"parallelenricher:splitter:begin:ts\" : \"1559104376559\",\r\n          \"parallelenricher:enrich:end:ts\" : \"1559104376559\",\r\n          \"number\" : 4,\r\n          \"source:type\" : \"jsonMapQuery\",\r\n          \"original_string\" : \"{\\\"foo\\\":[{ \\\"string\\\" : \\\"bar\\\", \\\"number\\\" : 1, \\\"ignored\\\" : [ \\\"blah\\\" ] },{ \\\"number\\\" : 2 },{ \\\"number\\\" : 3 },{ \\\"number\\\" : 4 },{ \\\"number\\\" : 5 },{ \\\"number\\\" : 6 },{ \\\"number\\\" : 7 },{ \\\"number\\\" : 8 },{ \\\"number\\\" : 9 },{ \\\"number\\\" : 10 }]}\",\r\n          \"parallelenricher:enrich:begin:ts\" : \"1559104376559\",\r\n          \"parallelenricher:splitter:end:ts\" : \"1559104376559\",\r\n          \"guid\" : \"f170f724-8da8-48f4-8f33-62aaa5a5842d\",\r\n          \"timestamp\" : 1559104359358\r\n        }\r\n      },\r\n      {\r\n        \"_index\" : \"json_map_query_index_2019.05.29.04\",\r\n        \"_type\" : \"jsonMapQuery_doc\",\r\n        \"_id\" : \"AWsB3SvCcGT3jmMsgLwd\",\r\n        \"_score\" : 1.0,\r\n        \"_source\" : {\r\n          \"parallelenricher:splitter:begin:ts\" : \"1559104376561\",\r\n          \"parallelenricher:enrich:end:ts\" : \"1559104376561\",\r\n          \"number\" : 8,\r\n          \"source:type\" : \"jsonMapQuery\",\r\n          \"original_string\" : \"{\\\"foo\\\":[{ \\\"string\\\" : \\\"bar\\\", \\\"number\\\" : 1, \\\"ignored\\\" : [ \\\"blah\\\" ] },{ \\\"number\\\" : 2 },{ \\\"number\\\" : 3 },{ \\\"number\\\" : 4 },{ \\\"number\\\" : 5 },{ \\\"number\\\" : 6 },{ \\\"number\\\" : 7 },{ \\\"number\\\" : 8 },{ \\\"number\\\" : 9 },{ \\\"number\\\" : 10 }]}\",\r\n          \"parallelenricher:enrich:begin:ts\" : \"1559104376561\",\r\n          \"parallelenricher:splitter:end:ts\" : \"1559104376561\",\r\n          \"guid\" : \"060f5142-73b6-4fc4-b3fa-ad17f5c4f7ce\",\r\n          \"timestamp\" : 1559104359358\r\n        }\r\n      },\r\n      {\r\n        \"_index\" : \"json_map_query_index_2019.05.29.04\",\r\n        \"_type\" : \"jsonMapQuery_doc\",\r\n        \"_id\" : \"AWsB3SvLcGT3jmMsgLwe\",\r\n        \"_score\" : 1.0,\r\n        \"_source\" : {\r\n          \"parallelenricher:splitter:begin:ts\" : \"1559104376561\",\r\n          \"parallelenricher:enrich:end:ts\" : \"1559104376561\",\r\n          \"number\" : 9,\r\n          \"source:type\" : \"jsonMapQuery\",\r\n          \"original_string\" : \"{\\\"foo\\\":[{ \\\"string\\\" : \\\"bar\\\", \\\"number\\\" : 1, \\\"ignored\\\" : [ \\\"blah\\\" ] },{ \\\"number\\\" : 2 },{ \\\"number\\\" : 3 },{ \\\"number\\\" : 4 },{ \\\"number\\\" : 5 },{ \\\"number\\\" : 6 },{ \\\"number\\\" : 7 },{ \\\"number\\\" : 8 },{ \\\"number\\\" : 9 },{ \\\"number\\\" : 10 }]}\",\r\n          \"parallelenricher:enrich:begin:ts\" : \"1559104376561\",\r\n          \"parallelenricher:splitter:end:ts\" : \"1559104376561\",\r\n          \"guid\" : \"d805927d-8fef-4a70-8cf2-f4441eb1f70f\",\r\n          \"timestamp\" : 1559104359358\r\n        }\r\n      },\r\n      {\r\n        \"_index\" : \"json_map_query_index_2019.05.29.04\",\r\n        \"_type\" : \"jsonMapQuery_doc\",\r\n        \"_id\" : \"AWsB3SurcGT3jmMsgLwc\",\r\n        \"_score\" : 1.0,\r\n        \"_source\" : {\r\n          \"parallelenricher:splitter:begin:ts\" : \"1559104376560\",\r\n          \"parallelenricher:enrich:end:ts\" : \"1559104376560\",\r\n          \"number\" : 7,\r\n          \"source:type\" : \"jsonMapQuery\",\r\n          \"original_string\" : \"{\\\"foo\\\":[{ \\\"string\\\" : \\\"bar\\\", \\\"number\\\" : 1, \\\"ignored\\\" : [ \\\"blah\\\" ] },{ \\\"number\\\" : 2 },{ \\\"number\\\" : 3 },{ \\\"number\\\" : 4 },{ \\\"number\\\" : 5 },{ \\\"number\\\" : 6 },{ \\\"number\\\" : 7 },{ \\\"number\\\" : 8 },{ \\\"number\\\" : 9 },{ \\\"number\\\" : 10 }]}\",\r\n          \"parallelenricher:enrich:begin:ts\" : \"1559104376560\",\r\n          \"parallelenricher:splitter:end:ts\" : \"1559104376560\",\r\n          \"guid\" : \"658f48b8-19a7-4506-aabd-133c54ddde89\",\r\n          \"timestamp\" : 1559104359358\r\n        }\r\n      },\r\n      {\r\n        \"_index\" : \"json_map_query_index_2019.05.29.04\",\r\n        \"_type\" : \"jsonMapQuery_doc\",\r\n        \"_id\" : \"AWsB3SsKcGT3jmMsgLwW\",\r\n        \"_score\" : 1.0,\r\n        \"_source\" : {\r\n          \"parallelenricher:splitter:begin:ts\" : \"1559104376559\",\r\n          \"parallelenricher:enrich:end:ts\" : \"1559104376559\",\r\n          \"number\" : 1,\r\n          \"ignored\" : [\r\n            \"blah\"\r\n          ],\r\n          \"source:type\" : \"jsonMapQuery\",\r\n          \"original_string\" : \"{\\\"foo\\\":[{ \\\"string\\\" : \\\"bar\\\", \\\"number\\\" : 1, \\\"ignored\\\" : [ \\\"blah\\\" ] },{ \\\"number\\\" : 2 },{ \\\"number\\\" : 3 },{ \\\"number\\\" : 4 },{ \\\"number\\\" : 5 },{ \\\"number\\\" : 6 },{ \\\"number\\\" : 7 },{ \\\"number\\\" : 8 },{ \\\"number\\\" : 9 },{ \\\"number\\\" : 10 }]}\",\r\n          \"string\" : \"bar\",\r\n          \"parallelenricher:enrich:begin:ts\" : \"1559104376559\",\r\n          \"parallelenricher:splitter:end:ts\" : \"1559104376559\",\r\n          \"guid\" : \"b569df68-e621-46ed-8390-c2adc257c055\",\r\n          \"timestamp\" : 1559104359358\r\n        }\r\n      },\r\n      {\r\n        \"_index\" : \"json_map_query_index_2019.05.29.04\",\r\n        \"_type\" : \"jsonMapQuery_doc\",\r\n        \"_id\" : \"AWsB3StHcGT3jmMsgLwY\",\r\n        \"_score\" : 1.0,\r\n        \"_source\" : {\r\n          \"parallelenricher:splitter:begin:ts\" : \"1559104376559\",\r\n          \"parallelenricher:enrich:end:ts\" : \"1559104376559\",\r\n          \"number\" : 3,\r\n          \"source:type\" : \"jsonMapQuery\",\r\n          \"original_string\" : \"{\\\"foo\\\":[{ \\\"string\\\" : \\\"bar\\\", \\\"number\\\" : 1, \\\"ignored\\\" : [ \\\"blah\\\" ] },{ \\\"number\\\" : 2 },{ \\\"number\\\" : 3 },{ \\\"number\\\" : 4 },{ \\\"number\\\" : 5 },{ \\\"number\\\" : 6 },{ \\\"number\\\" : 7 },{ \\\"number\\\" : 8 },{ \\\"number\\\" : 9 },{ \\\"number\\\" : 10 }]}\",\r\n          \"parallelenricher:enrich:begin:ts\" : \"1559104376559\",\r\n          \"parallelenricher:splitter:end:ts\" : \"1559104376559\",\r\n          \"guid\" : \"f37b4283-a445-47c3-a965-c17937e39755\",\r\n          \"timestamp\" : 1559104359358\r\n        }\r\n      },\r\n      {\r\n        \"_index\" : \"json_map_query_index_2019.05.29.04\",\r\n        \"_type\" : \"jsonMapQuery_doc\",\r\n        \"_id\" : \"AWsB3SswcGT3jmMsgLwX\",\r\n        \"_score\" : 1.0,\r\n        \"_source\" : {\r\n          \"parallelenricher:splitter:begin:ts\" : \"1559104376559\",\r\n          \"parallelenricher:enrich:end:ts\" : \"1559104376559\",\r\n          \"number\" : 2,\r\n          \"source:type\" : \"jsonMapQuery\",\r\n          \"original_string\" : \"{\\\"foo\\\":[{ \\\"string\\\" : \\\"bar\\\", \\\"number\\\" : 1, \\\"ignored\\\" : [ \\\"blah\\\" ] },{ \\\"number\\\" : 2 },{ \\\"number\\\" : 3 },{ \\\"number\\\" : 4 },{ \\\"number\\\" : 5 },{ \\\"number\\\" : 6 },{ \\\"number\\\" : 7 },{ \\\"number\\\" : 8 },{ \\\"number\\\" : 9 },{ \\\"number\\\" : 10 }]}\",\r\n          \"parallelenricher:enrich:begin:ts\" : \"1559104376559\",\r\n          \"parallelenricher:splitter:end:ts\" : \"1559104376559\",\r\n          \"guid\" : \"d7c838e6-ee9f-4067-aa59-10f9ff8412d3\",\r\n          \"timestamp\" : 1559104359358\r\n        }\r\n      },\r\n      {\r\n        \"_index\" : \"json_map_query_index_2019.05.29.04\",\r\n        \"_type\" : \"jsonMapQuery_doc\",\r\n        \"_id\" : \"AWsB3St4cGT3jmMsgLwa\",\r\n        \"_score\" : 1.0,\r\n        \"_source\" : {\r\n          \"parallelenricher:splitter:begin:ts\" : \"1559104376560\",\r\n          \"parallelenricher:enrich:end:ts\" : \"1559104376560\",\r\n          \"number\" : 5,\r\n          \"source:type\" : \"jsonMapQuery\",\r\n          \"original_string\" : \"{\\\"foo\\\":[{ \\\"string\\\" : \\\"bar\\\", \\\"number\\\" : 1, \\\"ignored\\\" : [ \\\"blah\\\" ] },{ \\\"number\\\" : 2 },{ \\\"number\\\" : 3 },{ \\\"number\\\" : 4 },{ \\\"number\\\" : 5 },{ \\\"number\\\" : 6 },{ \\\"number\\\" : 7 },{ \\\"number\\\" : 8 },{ \\\"number\\\" : 9 },{ \\\"number\\\" : 10 }]}\",\r\n          \"parallelenricher:enrich:begin:ts\" : \"1559104376560\",\r\n          \"parallelenricher:splitter:end:ts\" : \"1559104376560\",\r\n          \"guid\" : \"8ad4d1fc-8833-4976-9166-846d0f1d91bb\",\r\n          \"timestamp\" : 1559104359358\r\n        }\r\n      }\r\n    ]\r\n  }\r\n}\r\n```\r\nVerify every message contains the full original_string as source, unchanged.\r\n\r\n**Test JsonMapQuery parser override functionality**\r\n\r\n* Open the jsonMapQuery parser config and add an override string field set to true.\r\n```\r\n{\r\n  \"parserClassName\":\"org.apache.metron.parsers.json.JSONMapParser\",\r\n  \"sensorTopic\":\"jsonMapQuery\",\r\n  \"parserConfig\": {\"jsonpQuery\":\"$.foo\", \"overrideOriginalString\" : true}\r\n}\r\n```\r\n\r\n* Push to ZK.\r\n```\r\n$METRON_HOME/bin/zk_load_configs.sh -m PUSH -i $METRON_HOME/config/zookeeper/ -z $ZOOKEEPER\r\n# verify the change went through\r\n$METRON_HOME/bin/zk_load_configs.sh -m DUMP -z $ZOOKEEPER -c PARSER -n jsonMapQuery\r\n```\r\n\r\n* Restart the topology (parserConfigs are not loaded dynamically)\r\n```\r\nstorm kill jsonMapQuery\r\n$METRON_HOME/bin/start_parser_topology.sh -z $ZOOKEEPER -s jsonMapQuery\r\n```\r\n\r\n* Clear your json sensor index\r\n```\r\ncurl -XDELETE \"http://localhost:9200/json_map_query*\"\r\n# verify it's empty\r\ncurl -XGET \"http://node1:9200/json_map_query*/_stats/docs?pretty=true\"\r\n{\r\n  \"_shards\" : {\r\n    \"total\" : 0,\r\n    \"successful\" : 0,\r\n    \"failed\" : 0\r\n  },\r\n  \"_all\" : {\r\n    \"primaries\" : { },\r\n    \"total\" : { }\r\n  },\r\n  \"indices\" : { }\r\n}\r\n```\r\n\r\n* Run the data through again\r\n```\r\ncat json-data.json | /usr/hdp/current/kafka-broker/bin/kafka-console-producer.sh --broker-list $BROKERLIST --topic jsonMapQuery\r\n```\r\n\r\n* Expect to see 10 new messages created in json_map_query_index\r\n```\r\ncurl -XGET \"http://node1:9200/json_map_query*/_search?pretty=true\"\r\n{\r\n  \"took\" : 2,\r\n  \"timed_out\" : false,\r\n  \"_shards\" : {\r\n    \"total\" : 5,\r\n    \"successful\" : 5,\r\n    \"skipped\" : 0,\r\n    \"failed\" : 0\r\n  },\r\n  \"hits\" : {\r\n    \"total\" : 10,\r\n    \"max_score\" : 1.0,\r\n    \"hits\" : [\r\n      {\r\n        \"_index\" : \"json_map_query_index_2019.05.29.17\",\r\n        \"_type\" : \"jsonMapQuery_doc\",\r\n        \"_id\" : \"AWsEtt80cGT3jmMsgLwz\",\r\n        \"_score\" : 1.0,\r\n        \"_source\" : {\r\n          \"parallelenricher:splitter:begin:ts\" : \"1559152200444\",\r\n          \"parallelenricher:enrich:end:ts\" : \"1559152200444\",\r\n          \"number\" : 1,\r\n          \"ignored\" : [\r\n            \"blah\"\r\n          ],\r\n          \"source:type\" : \"jsonMapQuery\",\r\n          \"original_string\" : \"{\\\"number\\\":1,\\\"ignored\\\":[\\\"blah\\\"],\\\"string\\\":\\\"bar\\\"}\",\r\n          \"string\" : \"bar\",\r\n          \"parallelenricher:enrich:begin:ts\" : \"1559152200444\",\r\n          \"parallelenricher:splitter:end:ts\" : \"1559152200444\",\r\n          \"guid\" : \"820c7c4d-14a5-4fca-a43f-2c2fa207c6e7\",\r\n          \"timestamp\" : 1559152177657\r\n        }\r\n      },\r\n      {\r\n        \"_index\" : \"json_map_query_index_2019.05.29.17\",\r\n        \"_type\" : \"jsonMapQuery_doc\",\r\n        \"_id\" : \"AWsEtt9UcGT3jmMsgLw0\",\r\n        \"_score\" : 1.0,\r\n        \"_source\" : {\r\n          \"parallelenricher:splitter:begin:ts\" : \"1559152200445\",\r\n          \"parallelenricher:enrich:end:ts\" : \"1559152200445\",\r\n          \"number\" : 2,\r\n          \"source:type\" : \"jsonMapQuery\",\r\n          \"original_string\" : \"{\\\"number\\\":2}\",\r\n          \"parallelenricher:enrich:begin:ts\" : \"1559152200445\",\r\n          \"parallelenricher:splitter:end:ts\" : \"1559152200445\",\r\n          \"guid\" : \"270ec17b-a34f-4a8e-b2a1-32b4ad5891d7\",\r\n          \"timestamp\" : 1559152177657\r\n        }\r\n      },\r\n      {\r\n        \"_index\" : \"json_map_query_index_2019.05.29.17\",\r\n        \"_type\" : \"jsonMapQuery_doc\",\r\n        \"_id\" : \"AWsEtt_ZcGT3jmMsgLw8\",\r\n        \"_score\" : 1.0,\r\n        \"_source\" : {\r\n          \"parallelenricher:splitter:begin:ts\" : \"1559152200445\",\r\n          \"parallelenricher:enrich:end:ts\" : \"1559152200445\",\r\n          \"number\" : 10,\r\n          \"source:type\" : \"jsonMapQuery\",\r\n          \"original_string\" : \"{\\\"number\\\":10}\",\r\n          \"parallelenricher:enrich:begin:ts\" : \"1559152200445\",\r\n          \"parallelenricher:splitter:end:ts\" : \"1559152200445\",\r\n          \"guid\" : \"8bc38d0c-0172-464f-8794-f633cac6e60d\",\r\n          \"timestamp\" : 1559152177657\r\n        }\r\n      },\r\n      {\r\n        \"_index\" : \"json_map_query_index_2019.05.29.17\",\r\n        \"_type\" : \"jsonMapQuery_doc\",\r\n        \"_id\" : \"AWsEtt9lcGT3jmMsgLw1\",\r\n        \"_score\" : 1.0,\r\n        \"_source\" : {\r\n          \"parallelenricher:splitter:begin:ts\" : \"1559152200445\",\r\n          \"parallelenricher:enrich:end:ts\" : \"1559152200445\",\r\n          \"number\" : 3,\r\n          \"source:type\" : \"jsonMapQuery\",\r\n          \"original_string\" : \"{\\\"number\\\":3}\",\r\n          \"parallelenricher:enrich:begin:ts\" : \"1559152200445\",\r\n          \"parallelenricher:splitter:end:ts\" : \"1559152200445\",\r\n          \"guid\" : \"a9a89c94-922b-41fe-ad37-3f0cb758dc8e\",\r\n          \"timestamp\" : 1559152177657\r\n        }\r\n      },\r\n      {\r\n        \"_index\" : \"json_map_query_index_2019.05.29.17\",\r\n        \"_type\" : \"jsonMapQuery_doc\",\r\n        \"_id\" : \"AWsEtt96cGT3jmMsgLw3\",\r\n        \"_score\" : 1.0,\r\n        \"_source\" : {\r\n          \"parallelenricher:splitter:begin:ts\" : \"1559152200445\",\r\n          \"parallelenricher:enrich:end:ts\" : \"1559152200445\",\r\n          \"number\" : 5,\r\n          \"source:type\" : \"jsonMapQuery\",\r\n          \"original_string\" : \"{\\\"number\\\":5}\",\r\n          \"parallelenricher:enrich:begin:ts\" : \"1559152200445\",\r\n          \"parallelenricher:splitter:end:ts\" : \"1559152200445\",\r\n          \"guid\" : \"7917038a-67ba-497c-b74e-47c9fe13a34e\",\r\n          \"timestamp\" : 1559152177657\r\n        }\r\n      },\r\n      {\r\n        \"_index\" : \"json_map_query_index_2019.05.29.17\",\r\n        \"_type\" : \"jsonMapQuery_doc\",\r\n        \"_id\" : \"AWsEtt-qcGT3jmMsgLw5\",\r\n        \"_score\" : 1.0,\r\n        \"_source\" : {\r\n          \"parallelenricher:splitter:begin:ts\" : \"1559152200445\",\r\n          \"parallelenricher:enrich:end:ts\" : \"1559152200445\",\r\n          \"number\" : 7,\r\n          \"source:type\" : \"jsonMapQuery\",\r\n          \"original_string\" : \"{\\\"number\\\":7}\",\r\n          \"parallelenricher:enrich:begin:ts\" : \"1559152200445\",\r\n          \"parallelenricher:splitter:end:ts\" : \"1559152200445\",\r\n          \"guid\" : \"0fc44b9c-e218-42f5-816b-0b459088b80a\",\r\n          \"timestamp\" : 1559152177657\r\n        }\r\n      },\r\n      {\r\n        \"_index\" : \"json_map_query_index_2019.05.29.17\",\r\n        \"_type\" : \"jsonMapQuery_doc\",\r\n        \"_id\" : \"AWsEtt9ucGT3jmMsgLw2\",\r\n        \"_score\" : 1.0,\r\n        \"_source\" : {\r\n          \"parallelenricher:splitter:begin:ts\" : \"1559152200445\",\r\n          \"parallelenricher:enrich:end:ts\" : \"1559152200445\",\r\n          \"number\" : 4,\r\n          \"source:type\" : \"jsonMapQuery\",\r\n          \"original_string\" : \"{\\\"number\\\":4}\",\r\n          \"parallelenricher:enrich:begin:ts\" : \"1559152200445\",\r\n          \"parallelenricher:splitter:end:ts\" : \"1559152200445\",\r\n          \"guid\" : \"8aa5943a-884d-4ce5-8816-a227075e2e8f\",\r\n          \"timestamp\" : 1559152177657\r\n        }\r\n      },\r\n      {\r\n        \"_index\" : \"json_map_query_index_2019.05.29.17\",\r\n        \"_type\" : \"jsonMapQuery_doc\",\r\n        \"_id\" : \"AWsEtt-VcGT3jmMsgLw4\",\r\n        \"_score\" : 1.0,\r\n        \"_source\" : {\r\n          \"parallelenricher:splitter:begin:ts\" : \"1559152200445\",\r\n          \"parallelenricher:enrich:end:ts\" : \"1559152200445\",\r\n          \"number\" : 6,\r\n          \"source:type\" : \"jsonMapQuery\",\r\n          \"original_string\" : \"{\\\"number\\\":6}\",\r\n          \"parallelenricher:enrich:begin:ts\" : \"1559152200445\",\r\n          \"parallelenricher:splitter:end:ts\" : \"1559152200445\",\r\n          \"guid\" : \"0eb61762-435a-4dc6-b025-f82f761c75cc\",\r\n          \"timestamp\" : 1559152177657\r\n        }\r\n      },\r\n      {\r\n        \"_index\" : \"json_map_query_index_2019.05.29.17\",\r\n        \"_type\" : \"jsonMapQuery_doc\",\r\n        \"_id\" : \"AWsEtt-3cGT3jmMsgLw6\",\r\n        \"_score\" : 1.0,\r\n        \"_source\" : {\r\n          \"parallelenricher:splitter:begin:ts\" : \"1559152200445\",\r\n          \"parallelenricher:enrich:end:ts\" : \"1559152200445\",\r\n          \"number\" : 8,\r\n          \"source:type\" : \"jsonMapQuery\",\r\n          \"original_string\" : \"{\\\"number\\\":8}\",\r\n          \"parallelenricher:enrich:begin:ts\" : \"1559152200445\",\r\n          \"parallelenricher:splitter:end:ts\" : \"1559152200445\",\r\n          \"guid\" : \"4763dfa1-91fd-4c21-ab48-28d564a5c878\",\r\n          \"timestamp\" : 1559152177657\r\n        }\r\n      },\r\n      {\r\n        \"_index\" : \"json_map_query_index_2019.05.29.17\",\r\n        \"_type\" : \"jsonMapQuery_doc\",\r\n        \"_id\" : \"AWsEtt_LcGT3jmMsgLw7\",\r\n        \"_score\" : 1.0,\r\n        \"_source\" : {\r\n          \"parallelenricher:splitter:begin:ts\" : \"1559152200445\",\r\n          \"parallelenricher:enrich:end:ts\" : \"1559152200445\",\r\n          \"number\" : 9,\r\n          \"source:type\" : \"jsonMapQuery\",\r\n          \"original_string\" : \"{\\\"number\\\":9}\",\r\n          \"parallelenricher:enrich:begin:ts\" : \"1559152200445\",\r\n          \"parallelenricher:splitter:end:ts\" : \"1559152200445\",\r\n          \"guid\" : \"74c7c52a-9aa3-43c4-b7aa-d5a8edbf9409\",\r\n          \"timestamp\" : 1559152177657\r\n        }\r\n      }\r\n    ]\r\n  }\r\n}\r\n```\r\n\r\nThe `original_string` should now be the individual field that was parsed from the root message.\r\n\r\n**Check parser chaining and aggregation use case**\r\n\r\nhttps://github.com/apache/metron/tree/master/use-cases/parser_chaining\r\n\r\nThis feature should still work as-is without any change.","reactions":{"url":"https://api.github.com/repos/apache/metron/issues/comments/497049477/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/metron/issues/comments/497082417","html_url":"https://github.com/apache/metron/pull/1389#issuecomment-497082417","issue_url":"https://api.github.com/repos/apache/metron/issues/1389","id":497082417,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NzA4MjQxNw==","user":{"login":"nickwallen","id":2475409,"node_id":"MDQ6VXNlcjI0NzU0MDk=","avatar_url":"https://avatars.githubusercontent.com/u/2475409?v=4","gravatar_id":"","url":"https://api.github.com/users/nickwallen","html_url":"https://github.com/nickwallen","followers_url":"https://api.github.com/users/nickwallen/followers","following_url":"https://api.github.com/users/nickwallen/following{/other_user}","gists_url":"https://api.github.com/users/nickwallen/gists{/gist_id}","starred_url":"https://api.github.com/users/nickwallen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickwallen/subscriptions","organizations_url":"https://api.github.com/users/nickwallen/orgs","repos_url":"https://api.github.com/users/nickwallen/repos","events_url":"https://api.github.com/users/nickwallen/events{/privacy}","received_events_url":"https://api.github.com/users/nickwallen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-29T19:44:49Z","updated_at":"2019-05-29T19:44:49Z","author_association":"CONTRIBUTOR","body":"+1 Thanks @merrimanr !","reactions":{"url":"https://api.github.com/repos/apache/metron/issues/comments/497082417/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/metron/issues/comments/497090848","html_url":"https://github.com/apache/metron/pull/1409#issuecomment-497090848","issue_url":"https://api.github.com/repos/apache/metron/issues/1409","id":497090848,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NzA5MDg0OA==","user":{"login":"merrimanr","id":311928,"node_id":"MDQ6VXNlcjMxMTkyOA==","avatar_url":"https://avatars.githubusercontent.com/u/311928?v=4","gravatar_id":"","url":"https://api.github.com/users/merrimanr","html_url":"https://github.com/merrimanr","followers_url":"https://api.github.com/users/merrimanr/followers","following_url":"https://api.github.com/users/merrimanr/following{/other_user}","gists_url":"https://api.github.com/users/merrimanr/gists{/gist_id}","starred_url":"https://api.github.com/users/merrimanr/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/merrimanr/subscriptions","organizations_url":"https://api.github.com/users/merrimanr/orgs","repos_url":"https://api.github.com/users/merrimanr/repos","events_url":"https://api.github.com/users/merrimanr/events{/privacy}","received_events_url":"https://api.github.com/users/merrimanr/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-29T20:10:22Z","updated_at":"2019-05-29T20:10:22Z","author_association":"CONTRIBUTOR","body":"This looks great to me.  +1 pending a successful travis run.  Looks like the run timed out so probably just need to restart it.","reactions":{"url":"https://api.github.com/repos/apache/metron/issues/comments/497090848/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/metron/issues/comments/497351075","html_url":"https://github.com/apache/metron/pull/1417#issuecomment-497351075","issue_url":"https://api.github.com/repos/apache/metron/issues/1417","id":497351075,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NzM1MTA3NQ==","user":{"login":"mmiklavc","id":658443,"node_id":"MDQ6VXNlcjY1ODQ0Mw==","avatar_url":"https://avatars.githubusercontent.com/u/658443?v=4","gravatar_id":"","url":"https://api.github.com/users/mmiklavc","html_url":"https://github.com/mmiklavc","followers_url":"https://api.github.com/users/mmiklavc/followers","following_url":"https://api.github.com/users/mmiklavc/following{/other_user}","gists_url":"https://api.github.com/users/mmiklavc/gists{/gist_id}","starred_url":"https://api.github.com/users/mmiklavc/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mmiklavc/subscriptions","organizations_url":"https://api.github.com/users/mmiklavc/orgs","repos_url":"https://api.github.com/users/mmiklavc/repos","events_url":"https://api.github.com/users/mmiklavc/events{/privacy}","received_events_url":"https://api.github.com/users/mmiklavc/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-30T14:32:16Z","updated_at":"2019-05-30T14:32:16Z","author_association":"CONTRIBUTOR","body":"@ottobackwards, @justinleet  - I blew away my personal local caches here - https://travis-ci.org/mmiklavc/metron/builds/538546730 and it succeeded. I took a peek at the logs and do see it downloading artifacts via https, e.g. https://travis-ci.org/mmiklavc/metron/jobs/538546731#L7699. I don't see it downloading any of the other project dependencies, however. I must be missing something on how we set this up. Any ideas?\r\n","reactions":{"url":"https://api.github.com/repos/apache/metron/issues/comments/497351075/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/metron/issues/comments/497412781","html_url":"https://github.com/apache/metron/pull/1409#issuecomment-497412781","issue_url":"https://api.github.com/repos/apache/metron/issues/1409","id":497412781,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NzQxMjc4MQ==","user":{"login":"mmiklavc","id":658443,"node_id":"MDQ6VXNlcjY1ODQ0Mw==","avatar_url":"https://avatars.githubusercontent.com/u/658443?v=4","gravatar_id":"","url":"https://api.github.com/users/mmiklavc","html_url":"https://github.com/mmiklavc","followers_url":"https://api.github.com/users/mmiklavc/followers","following_url":"https://api.github.com/users/mmiklavc/following{/other_user}","gists_url":"https://api.github.com/users/mmiklavc/gists{/gist_id}","starred_url":"https://api.github.com/users/mmiklavc/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mmiklavc/subscriptions","organizations_url":"https://api.github.com/users/mmiklavc/orgs","repos_url":"https://api.github.com/users/mmiklavc/repos","events_url":"https://api.github.com/users/mmiklavc/events{/privacy}","received_events_url":"https://api.github.com/users/mmiklavc/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-30T17:27:50Z","updated_at":"2019-05-30T17:27:50Z","author_association":"CONTRIBUTOR","body":"@ottobackwards - I'd like to merge this in - are you good with the current change?","reactions":{"url":"https://api.github.com/repos/apache/metron/issues/comments/497412781/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/metron/issues/comments/497462939","html_url":"https://github.com/apache/metron/pull/1409#issuecomment-497462939","issue_url":"https://api.github.com/repos/apache/metron/issues/1409","id":497462939,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5NzQ2MjkzOQ==","user":{"login":"ottobackwards","id":1111551,"node_id":"MDQ6VXNlcjExMTE1NTE=","avatar_url":"https://avatars.githubusercontent.com/u/1111551?v=4","gravatar_id":"","url":"https://api.github.com/users/ottobackwards","html_url":"https://github.com/ottobackwards","followers_url":"https://api.github.com/users/ottobackwards/followers","following_url":"https://api.github.com/users/ottobackwards/following{/other_user}","gists_url":"https://api.github.com/users/ottobackwards/gists{/gist_id}","starred_url":"https://api.github.com/users/ottobackwards/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ottobackwards/subscriptions","organizations_url":"https://api.github.com/users/ottobackwards/orgs","repos_url":"https://api.github.com/users/ottobackwards/repos","events_url":"https://api.github.com/users/ottobackwards/events{/privacy}","received_events_url":"https://api.github.com/users/ottobackwards/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-30T19:53:51Z","updated_at":"2019-05-30T19:53:51Z","author_association":"CONTRIBUTOR","body":"+0","reactions":{"url":"https://api.github.com/repos/apache/metron/issues/comments/497462939/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/metron/issues/comments/497794088","html_url":"https://github.com/apache/metron/pull/1431#issuecomment-497794088","issue_url":"https://api.github.com/repos/apache/metron/issues/1431","id":497794088,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5Nzc5NDA4OA==","user":{"login":"mmiklavc","id":658443,"node_id":"MDQ6VXNlcjY1ODQ0Mw==","avatar_url":"https://avatars.githubusercontent.com/u/658443?v=4","gravatar_id":"","url":"https://api.github.com/users/mmiklavc","html_url":"https://github.com/mmiklavc","followers_url":"https://api.github.com/users/mmiklavc/followers","following_url":"https://api.github.com/users/mmiklavc/following{/other_user}","gists_url":"https://api.github.com/users/mmiklavc/gists{/gist_id}","starred_url":"https://api.github.com/users/mmiklavc/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mmiklavc/subscriptions","organizations_url":"https://api.github.com/users/mmiklavc/orgs","repos_url":"https://api.github.com/users/mmiklavc/repos","events_url":"https://api.github.com/users/mmiklavc/events{/privacy}","received_events_url":"https://api.github.com/users/mmiklavc/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-05-31T17:27:32Z","updated_at":"2019-05-31T17:27:32Z","author_association":"CONTRIBUTOR","body":"@tiborm this looks like a pretty cool feature, thanks for the contribution! I'd like to address a couple things before we commit this. I am on board with providing a flag for this feature and leaving it disabled by default - that looks reasonable to me, and I also coincidentally just kicked off a DISCUSS thread along these lines as well - https://lists.apache.org/thread.html/e24e4709fbc06473977a0a7f0c0ce92eb02cfcc8c1c2bc41be08a698@%3Cdev.metron.apache.org%3E. I do think we need to resolve some outstanding questions about how we handle that as a community - see below.\r\n\r\nI looked over your instructions on the Jira ticket and I think we're pretty close. I'd like to see the following:\r\n\r\n1. What's the plan for handling this feature flag? We haven't had any discussion in the community about enabling feature flags to this point. I suspect we might consider them an option for lowering the bar to testing, but we should address this. I don't see any non-happy path tests on this PR, for example. I think that either we need to put this PR through more rigorous testing or come to a community understanding (and document it in the dev guidelines) about what a reasonable level of quality and feature polish will be for code committed under a feature flag.\r\n1. Non-happy path test scenarios? e.g.\r\n    1. What happens to the UI if you misspell a field name? What errors/indication does the user get? Will the UI fail to come up? Will it only fail when a field is visible in the UI column listing?\r\n    2. What happens if you type \"fasle\" for `isEnabled`? Again, what's the default behavior for misconfiguration and where can operations people managing this feature look for logs that detail the exceptions?\r\n    3. What happens for fields not present in a particular record that are used for token replacement? e.g. per the Jira instructions - \"But in the configuration, any available alert property field could be referenced like the following:\" Also, is this impacted in any way by what fields are currently displayed/enabled in the alerts UI column listing? If I've hidden ip_src_addr from display, will it still render the URL correctly?\r\n1. These instructions should have a dedicated section in the documentation/README for the Alerts UI.\r\n    1. Please provide a detailed explanation of the configuration lifecycle - will the changes be picked up automatically, or only after a restart? Provide instructions for whatever those steps are (e.g. restart Alerts UI using command foo)\r\n    1. Provide a detailed schema description for the JSON you provided in your testing examples. I think you've done a decent job of explaining what `alertEntry` and `metaAlertEntry` mean, this just needs to be expanded on a bit and laid out similar to what we've done for parsers here - [general purpose parser config options](https://github.com/apache/metron/tree/master/metron-platform/metron-parsing#introduction) and here - [config details for all parsers](https://github.com/apache/metron/tree/master/metron-platform/metron-parsing#parser-configuration)","reactions":{"url":"https://api.github.com/repos/apache/metron/issues/comments/497794088/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/metron/issues/comments/498320419","html_url":"https://github.com/apache/metron/pull/1431#issuecomment-498320419","issue_url":"https://api.github.com/repos/apache/metron/issues/1431","id":498320419,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5ODMyMDQxOQ==","user":{"login":"sardell","id":7304869,"node_id":"MDQ6VXNlcjczMDQ4Njk=","avatar_url":"https://avatars.githubusercontent.com/u/7304869?v=4","gravatar_id":"","url":"https://api.github.com/users/sardell","html_url":"https://github.com/sardell","followers_url":"https://api.github.com/users/sardell/followers","following_url":"https://api.github.com/users/sardell/following{/other_user}","gists_url":"https://api.github.com/users/sardell/gists{/gist_id}","starred_url":"https://api.github.com/users/sardell/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sardell/subscriptions","organizations_url":"https://api.github.com/users/sardell/orgs","repos_url":"https://api.github.com/users/sardell/repos","events_url":"https://api.github.com/users/sardell/events{/privacy}","received_events_url":"https://api.github.com/users/sardell/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-03T16:04:03Z","updated_at":"2019-06-03T16:04:03Z","author_association":"CONTRIBUTOR","body":"> What's the plan for handling this feature flag?\r\n\r\n@mmiklavc After thinking about it, I feel like this implementation is less like a feature flag and more like a configuration option. I say this because, from how I understand it, feature flags are meant to eventually be included to all users. From what I can tell, this is not a feature that all users will want to turn on because of the required configuration (@tiborm correct me if I'm wrong here).\r\n\r\n> What happens if you type \"fasle\" for isEnabled?\r\n\r\nGood point. I just built the Alerts app with Angular CLI and it completed successfully with that typo. I haven't been able to test the other non-happy/failure path scenarios you mention, but these are all good points.\r\n\r\n> These instructions should have a dedicated section in the documentation/README for the Alerts UI.\r\n\r\n@tiborm Let me know if I can help with this.","reactions":{"url":"https://api.github.com/repos/apache/metron/issues/comments/498320419/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/metron/issues/comments/498365913","html_url":"https://github.com/apache/metron/pull/1431#issuecomment-498365913","issue_url":"https://api.github.com/repos/apache/metron/issues/1431","id":498365913,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5ODM2NTkxMw==","user":{"login":"mmiklavc","id":658443,"node_id":"MDQ6VXNlcjY1ODQ0Mw==","avatar_url":"https://avatars.githubusercontent.com/u/658443?v=4","gravatar_id":"","url":"https://api.github.com/users/mmiklavc","html_url":"https://github.com/mmiklavc","followers_url":"https://api.github.com/users/mmiklavc/followers","following_url":"https://api.github.com/users/mmiklavc/following{/other_user}","gists_url":"https://api.github.com/users/mmiklavc/gists{/gist_id}","starred_url":"https://api.github.com/users/mmiklavc/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mmiklavc/subscriptions","organizations_url":"https://api.github.com/users/mmiklavc/orgs","repos_url":"https://api.github.com/users/mmiklavc/repos","events_url":"https://api.github.com/users/mmiklavc/events{/privacy}","received_events_url":"https://api.github.com/users/mmiklavc/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-03T18:10:09Z","updated_at":"2019-06-03T18:10:18Z","author_association":"CONTRIBUTOR","body":"> After thinking about it, I feel like this implementation is less like a feature flag and more like a configuration option\r\n\r\n@sardell makes sense to me. That being said, I think we need to polish it a bit further per my earlier comments before committing.","reactions":{"url":"https://api.github.com/repos/apache/metron/issues/comments/498365913/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/metron/issues/comments/498369511","html_url":"https://github.com/apache/metron/pull/1436#issuecomment-498369511","issue_url":"https://api.github.com/repos/apache/metron/issues/1436","id":498369511,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5ODM2OTUxMQ==","user":{"login":"mmiklavc","id":658443,"node_id":"MDQ6VXNlcjY1ODQ0Mw==","avatar_url":"https://avatars.githubusercontent.com/u/658443?v=4","gravatar_id":"","url":"https://api.github.com/users/mmiklavc","html_url":"https://github.com/mmiklavc","followers_url":"https://api.github.com/users/mmiklavc/followers","following_url":"https://api.github.com/users/mmiklavc/following{/other_user}","gists_url":"https://api.github.com/users/mmiklavc/gists{/gist_id}","starred_url":"https://api.github.com/users/mmiklavc/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mmiklavc/subscriptions","organizations_url":"https://api.github.com/users/mmiklavc/orgs","repos_url":"https://api.github.com/users/mmiklavc/repos","events_url":"https://api.github.com/users/mmiklavc/events{/privacy}","received_events_url":"https://api.github.com/users/mmiklavc/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-03T18:20:13Z","updated_at":"2019-06-03T18:23:49Z","author_association":"CONTRIBUTOR","body":"I did a crude grep through our Stellar function classes looking for non-java, non-metron dependencies, and this is what I came up with. This is a hit-list of functions that are probably worth a test of some sort or another to verify we haven't broken anything. It might be worth adding a more robust automated test at some point that we can spin up as a topology and include in release validation.\r\n\r\nEDIT - even this list is not sufficient because in instances of more complex functions we don't have a direct dependency on the 3rd party jar. E.g. HLLP uses helper classes, and those don't show up here.\r\n\r\n```\r\nfor file in $(grep -lR --include \\*.java \"@Stellar\" .)\r\ndo \r\n    if grep \"^import\" $file | grep -v \" java\\| org.apache.metron\";\r\n    then\r\n        echo \"    $file matches\"\r\n        echo \"=====================\"\r\n    fi\r\ndone > /tmp/matchlist.txt\r\n\r\n\r\nimport org.apache.commons.validator.routines.LongValidator;\r\n    ./metron-platform/metron-common/src/main/java/org/apache/metron/common/field/validation/primitive/IntegerValidation.java matches\r\n=====================\r\nimport org.apache.commons.validator.routines.EmailValidator;\r\n    ./metron-platform/metron-common/src/main/java/org/apache/metron/common/field/validation/network/EmailValidation.java matches\r\n=====================\r\nimport org.apache.commons.validator.routines.DomainValidator;\r\n    ./metron-platform/metron-common/src/main/java/org/apache/metron/common/field/validation/network/DomainValidation.java matches\r\n=====================\r\nimport org.apache.commons.validator.routines.InetAddressValidator;\r\n    ./metron-platform/metron-common/src/main/java/org/apache/metron/common/field/validation/network/IPValidation.java matches\r\n=====================\r\nimport org.apache.commons.validator.routines.UrlValidator;\r\n    ./metron-platform/metron-common/src/main/java/org/apache/metron/common/field/validation/network/URLValidation.java matches\r\n=====================\r\nimport org.slf4j.Logger;\r\nimport org.slf4j.LoggerFactory;\r\n    ./metron-platform/metron-enrichment/metron-enrichment-common/src/main/java/org/apache/metron/enrichment/stellar/GeoEnrichmentFunctions.java matches\r\n=====================\r\nimport org.slf4j.Logger;\r\nimport org.slf4j.LoggerFactory;\r\n    ./metron-platform/metron-enrichment/metron-enrichment-common/src/main/java/org/apache/metron/enrichment/stellar/AsnEnrichmentFunctions.java matches\r\n=====================\r\nimport com.google.common.cache.CacheBuilder;\r\nimport com.google.common.cache.CacheLoader;\r\nimport com.google.common.cache.LoadingCache;\r\nimport org.apache.commons.io.IOUtils;\r\nimport org.apache.commons.lang3.StringUtils;\r\nimport org.apache.hadoop.conf.Configuration;\r\nimport org.apache.hadoop.fs.FileSystem;\r\nimport org.apache.hadoop.fs.Path;\r\nimport org.slf4j.Logger;\r\nimport org.slf4j.LoggerFactory;\r\n    ./metron-platform/metron-enrichment/metron-enrichment-common/src/main/java/org/apache/metron/enrichment/stellar/ObjectGet.java matches\r\n=====================\r\nimport ch.hsr.geohash.WGS84Point;\r\nimport org.slf4j.Logger;\r\nimport org.slf4j.LoggerFactory;\r\n    ./metron-platform/metron-enrichment/metron-enrichment-common/src/main/java/org/apache/metron/enrichment/stellar/GeoHashFunctions.java matches\r\n=====================\r\nimport com.google.common.cache.Cache;\r\nimport com.google.common.cache.CacheBuilder;\r\nimport org.apache.hadoop.hbase.HBaseConfiguration;\r\nimport org.apache.hadoop.hbase.client.HTableInterface;\r\nimport org.slf4j.Logger;\r\nimport org.slf4j.LoggerFactory;\r\n    ./metron-platform/metron-enrichment/metron-enrichment-common/src/main/java/org/apache/metron/enrichment/stellar/SimpleHBaseEnrichmentFunctions.java matches\r\n=====================\r\nimport com.fasterxml.jackson.core.JsonProcessingException;\r\nimport org.apache.curator.framework.CuratorFramework;\r\nimport org.slf4j.Logger;\r\nimport org.slf4j.LoggerFactory;\r\n    ./metron-platform/metron-management/src/main/java/org/apache/metron/management/ConfigurationFunctions.java matches\r\n=====================\r\nimport com.jakewharton.fliptables.FlipTable;\r\nimport org.apache.commons.io.IOUtils;\r\nimport org.apache.hadoop.conf.Configuration;\r\nimport org.apache.hadoop.fs.FSDataInputStream;\r\nimport org.apache.hadoop.fs.FSDataOutputStream;\r\nimport org.apache.hadoop.fs.FileStatus;\r\nimport org.apache.hadoop.fs.FileSystem;\r\nimport org.apache.hadoop.fs.LocalFileSystem;\r\nimport org.apache.hadoop.fs.Path;\r\nimport org.slf4j.LoggerFactory;\r\n    ./metron-platform/metron-management/src/main/java/org/apache/metron/management/FileSystemFunctions.java matches\r\n=====================\r\nimport com.jakewharton.fliptables.FlipTable;\r\nimport oi.thekraken.grok.api.Grok;\r\nimport oi.thekraken.grok.api.Match;\r\nimport oi.thekraken.grok.api.exception.GrokException;\r\nimport org.slf4j.LoggerFactory;\r\n    ./metron-platform/metron-management/src/main/java/org/apache/metron/management/GrokFunctions.java matches\r\n=====================\r\nimport org.apache.commons.lang3.exception.ExceptionUtils;\r\nimport org.apache.curator.framework.CuratorFramework;\r\n    ./metron-platform/metron-management/src/main/java/org/apache/metron/management/ParserFunctions.java matches\r\n=====================\r\nimport com.fasterxml.jackson.core.JsonProcessingException;\r\nimport org.slf4j.Logger;\r\nimport org.slf4j.LoggerFactory;\r\n    ./metron-platform/metron-management/src/main/java/org/apache/metron/management/IndexingConfigFunctions.java matches\r\n=====================\r\nimport com.fasterxml.jackson.core.JsonProcessingException;\r\nimport com.jakewharton.fliptables.FlipTable;\r\nimport org.apache.commons.collections4.ListUtils;\r\nimport org.apache.commons.lang3.ClassUtils;\r\nimport org.json.simple.JSONObject;\r\nimport org.json.simple.parser.JSONParser;\r\nimport org.slf4j.Logger;\r\nimport org.slf4j.LoggerFactory;\r\n    ./metron-platform/metron-management/src/main/java/org/apache/metron/management/ThreatTriageFunctions.java matches\r\n=====================\r\nimport org.apache.commons.collections4.CollectionUtils;\r\nimport org.apache.commons.lang3.ClassUtils;\r\nimport org.apache.kafka.clients.consumer.ConsumerRecord;\r\nimport org.apache.kafka.clients.consumer.ConsumerRecords;\r\nimport org.apache.kafka.clients.consumer.KafkaConsumer;\r\nimport org.apache.kafka.clients.producer.KafkaProducer;\r\nimport org.apache.kafka.clients.producer.ProducerRecord;\r\nimport org.apache.kafka.clients.producer.RecordMetadata;\r\nimport org.apache.kafka.common.PartitionInfo;\r\nimport org.apache.kafka.common.TopicPartition;\r\nimport org.apache.kafka.common.serialization.StringDeserializer;\r\nimport org.apache.kafka.common.serialization.StringSerializer;\r\nimport org.slf4j.Logger;\r\nimport org.slf4j.LoggerFactory;\r\n    ./metron-platform/metron-management/src/main/java/org/apache/metron/management/KafkaFunctions.java matches\r\n=====================\r\nimport com.fasterxml.jackson.core.JsonProcessingException;\r\nimport com.jakewharton.fliptables.FlipTable;\r\nimport org.slf4j.LoggerFactory;\r\n    ./metron-platform/metron-management/src/main/java/org/apache/metron/management/ParserConfigFunctions.java matches\r\n=====================\r\nimport com.fasterxml.jackson.core.JsonProcessingException;\r\nimport com.jakewharton.fliptables.FlipTable;\r\nimport org.slf4j.LoggerFactory;\r\n    ./metron-platform/metron-management/src/main/java/org/apache/metron/management/EnrichmentConfigFunctions.java matches\r\n=====================\r\nimport com.github.benmanes.caffeine.cache.Cache;\r\nimport com.github.benmanes.caffeine.cache.Caffeine;\r\n    ./metron-analytics/metron-profiler-client/src/main/java/org/apache/metron/profiler/client/stellar/WindowLookback.java matches\r\n=====================\r\nimport org.apache.hadoop.hbase.HBaseConfiguration;\r\nimport org.apache.hadoop.hbase.client.HTableInterface;\r\nimport org.slf4j.Logger;\r\nimport org.slf4j.LoggerFactory;\r\n    ./metron-analytics/metron-profiler-client/src/main/java/org/apache/metron/profiler/client/stellar/GetProfile.java matches\r\n=====================\r\nimport org.apache.hadoop.hbase.HBaseConfiguration;\r\nimport org.apache.hadoop.hbase.client.HTableInterface;\r\nimport org.slf4j.Logger;\r\nimport org.slf4j.LoggerFactory;\r\n    ./metron-analytics/metron-profiler-client/src/main/java/org/apache/metron/profiler/client/stellar/VerboseProfile.java matches\r\n=====================\r\nimport org.apache.commons.lang3.ClassUtils;\r\nimport org.json.simple.JSONArray;\r\nimport org.json.simple.JSONObject;\r\nimport org.json.simple.parser.JSONParser;\r\nimport org.slf4j.LoggerFactory;\r\n    ./metron-analytics/metron-profiler-repl/src/main/java/org/apache/metron/profiler/repl/ProfilerFunctions.java matches\r\n=====================\r\nimport com.google.common.collect.ImmutableList;\r\n    ./metron-analytics/metron-statistics/src/main/java/org/apache/metron/statistics/StellarStatisticsFunctions.java matches\r\n=====================\r\nimport com.codahale.metrics.Reservoir;\r\n    ./metron-analytics/metron-statistics/src/main/java/org/apache/metron/statistics/sampling/SamplingOpsFunctions.java matches\r\n=====================\r\nimport com.google.common.cache.Cache;\r\nimport com.google.common.cache.CacheBuilder;\r\nimport org.apache.curator.framework.CuratorFramework;\r\nimport org.slf4j.Logger;\r\nimport org.slf4j.LoggerFactory;\r\n    ./metron-analytics/metron-maas-common/src/main/java/org/apache/metron/maas/functions/MaaSFunctions.java matches\r\n=====================\r\nimport static org.hamcrest.CoreMatchers.equalTo;\r\nimport static org.hamcrest.CoreMatchers.instanceOf;\r\nimport static org.junit.Assert.assertThat;\r\nimport com.google.common.base.Joiner;\r\nimport com.google.common.collect.ImmutableMap;\r\nimport com.google.common.collect.ImmutableSet;\r\nimport org.apache.commons.lang3.StringUtils;\r\nimport org.junit.Assert;\r\nimport org.junit.Ignore;\r\nimport org.junit.Rule;\r\nimport org.junit.Test;\r\nimport org.junit.rules.ExpectedException;\r\n    ./metron-stellar/stellar-common/src/test/java/org/apache/metron/stellar/dsl/functions/BasicStellarTest.java matches\r\n=====================\r\nimport static org.hamcrest.CoreMatchers.equalTo;\r\nimport static org.junit.Assert.assertThat;\r\nimport org.junit.Assert;\r\nimport org.junit.Before;\r\nimport org.junit.Rule;\r\nimport org.junit.Test;\r\nimport org.junit.rules.ExpectedException;\r\n    ./metron-stellar/stellar-common/src/test/java/org/apache/metron/stellar/dsl/functions/resolver/BaseFunctionResolverTest.java matches\r\n=====================\r\nimport com.google.common.collect.Lists;\r\nimport org.junit.Assert;\r\nimport org.junit.Before;\r\nimport org.junit.Test;\r\n    ./metron-stellar/stellar-common/src/test/java/org/apache/metron/stellar/dsl/functions/resolver/SimpleFunctionResolverTest.java matches\r\n=====================\r\nimport com.google.common.collect.Iterables;\r\n    ./metron-stellar/stellar-common/src/main/java/org/apache/metron/stellar/dsl/functions/DataStructureFunctions.java matches\r\n=====================\r\nimport com.google.common.collect.Lists;\r\n    ./metron-stellar/stellar-common/src/main/java/org/apache/metron/stellar/dsl/functions/FunctionalFunctions.java matches\r\n=====================\r\nimport org.apache.commons.lang.StringUtils;\r\n    ./metron-stellar/stellar-common/src/main/java/org/apache/metron/stellar/dsl/functions/EncodingFunctions.java matches\r\n=====================\r\nimport org.apache.commons.lang3.StringUtils;\r\n    ./metron-stellar/stellar-common/src/main/java/org/apache/metron/stellar/dsl/functions/RegExFunctions.java matches\r\n=====================\r\nimport com.github.benmanes.caffeine.cache.CacheLoader;\r\nimport com.github.benmanes.caffeine.cache.Caffeine;\r\nimport com.github.benmanes.caffeine.cache.LoadingCache;\r\n    ./metron-stellar/stellar-common/src/main/java/org/apache/metron/stellar/dsl/functions/DateFunctions.java matches\r\n=====================\r\nimport org.apache.commons.io.IOUtils;\r\nimport org.apache.hadoop.conf.Configuration;\r\nimport org.apache.hadoop.fs.FSDataInputStream;\r\nimport org.apache.hadoop.fs.FileSystem;\r\nimport org.apache.hadoop.fs.Path;\r\nimport org.apache.http.HttpEntity;\r\nimport org.apache.http.HttpHost;\r\nimport org.apache.http.auth.AuthScope;\r\nimport org.apache.http.auth.UsernamePasswordCredentials;\r\nimport org.apache.http.client.CredentialsProvider;\r\nimport org.apache.http.client.config.RequestConfig;\r\nimport org.apache.http.client.methods.CloseableHttpResponse;\r\nimport org.apache.http.client.methods.HttpGet;\r\nimport org.apache.http.client.protocol.HttpClientContext;\r\nimport org.apache.http.impl.client.BasicCredentialsProvider;\r\nimport org.apache.http.impl.client.CloseableHttpClient;\r\nimport org.apache.http.impl.client.HttpClients;\r\nimport org.apache.http.impl.conn.PoolingHttpClientConnectionManager;\r\nimport org.apache.http.util.EntityUtils;\r\nimport org.slf4j.Logger;\r\nimport org.slf4j.LoggerFactory;\r\n    ./metron-stellar/stellar-common/src/main/java/org/apache/metron/stellar/dsl/functions/RestFunctions.java matches\r\n=====================\r\nimport com.google.common.collect.Iterables;\r\n    ./metron-stellar/stellar-common/src/main/java/org/apache/metron/stellar/dsl/functions/SetFunctions.java matches\r\n=====================\r\nimport com.google.common.collect.Iterables;\r\n    ./metron-stellar/stellar-common/src/main/java/org/apache/metron/stellar/dsl/functions/MapFunctions.java matches\r\n=====================\r\nimport org.apache.commons.codec.EncoderException;\r\n    ./metron-stellar/stellar-common/src/main/java/org/apache/metron/stellar/dsl/functions/HashFunctions.java matches\r\n=====================\r\nimport com.jakewharton.fliptables.FlipTable;\r\nimport org.apache.commons.io.IOUtils;\r\nimport org.apache.commons.lang3.text.WordUtils;\r\nimport org.jboss.aesh.console.Console;\r\nimport org.slf4j.LoggerFactory;\r\n    ./metron-stellar/stellar-common/src/main/java/org/apache/metron/stellar/dsl/functions/ShellFunctions.java matches\r\n=====================\r\nimport com.google.common.collect.Iterables;\r\n    ./metron-stellar/stellar-common/src/main/java/org/apache/metron/stellar/dsl/functions/OrdinalFunctions.java matches\r\n=====================\r\nimport com.google.common.collect.ImmutableList;\r\nimport org.apache.commons.lang.StringUtils;\r\nimport org.apache.commons.text.similarity.FuzzyScore;\r\n    ./metron-stellar/stellar-common/src/main/java/org/apache/metron/stellar/dsl/functions/TextFunctions.java matches\r\n=====================\r\nimport com.fasterxml.jackson.core.JsonProcessingException;\r\nimport com.google.common.base.Joiner;\r\nimport com.google.common.base.Splitter;\r\nimport com.google.common.collect.Iterables;\r\nimport org.apache.commons.lang3.StringUtils;\r\n    ./metron-stellar/stellar-common/src/main/java/org/apache/metron/stellar/dsl/functions/StringFunctions.java matches\r\n=====================\r\nimport com.google.common.base.Joiner;\r\nimport com.google.common.base.Splitter;\r\nimport com.google.common.collect.Iterables;\r\nimport com.google.common.net.InternetDomainName;\r\nimport org.apache.commons.lang3.StringUtils;\r\nimport org.apache.commons.net.util.SubnetUtils;\r\n    ./metron-stellar/stellar-common/src/main/java/org/apache/metron/stellar/dsl/functions/NetworkFunctions.java matches\r\n=====================\r\n```\r\n\r\nJust the files without the import context (there are currently 43 that I've found)\r\n\r\n```\r\n./metron-platform/metron-common/src/main/java/org/apache/metron/common/field/validation/primitive/IntegerValidation.java\r\n./metron-platform/metron-common/src/main/java/org/apache/metron/common/field/validation/network/EmailValidation.java\r\n./metron-platform/metron-common/src/main/java/org/apache/metron/common/field/validation/network/DomainValidation.java\r\n./metron-platform/metron-common/src/main/java/org/apache/metron/common/field/validation/network/IPValidation.java\r\n./metron-platform/metron-common/src/main/java/org/apache/metron/common/field/validation/network/URLValidation.java\r\n./metron-platform/metron-enrichment/metron-enrichment-common/src/main/java/org/apache/metron/enrichment/stellar/GeoEnrichmentFunctions.java\r\n./metron-platform/metron-enrichment/metron-enrichment-common/src/main/java/org/apache/metron/enrichment/stellar/AsnEnrichmentFunctions.java\r\n./metron-platform/metron-enrichment/metron-enrichment-common/src/main/java/org/apache/metron/enrichment/stellar/ObjectGet.java\r\n./metron-platform/metron-enrichment/metron-enrichment-common/src/main/java/org/apache/metron/enrichment/stellar/GeoHashFunctions.java\r\n./metron-platform/metron-enrichment/metron-enrichment-common/src/main/java/org/apache/metron/enrichment/stellar/SimpleHBaseEnrichmentFunctions.java\r\n./metron-platform/metron-management/src/main/java/org/apache/metron/management/ConfigurationFunctions.java\r\n./metron-platform/metron-management/src/main/java/org/apache/metron/management/FileSystemFunctions.java\r\n./metron-platform/metron-management/src/main/java/org/apache/metron/management/GrokFunctions.java\r\n./metron-platform/metron-management/src/main/java/org/apache/metron/management/ParserFunctions.java\r\n./metron-platform/metron-management/src/main/java/org/apache/metron/management/IndexingConfigFunctions.java\r\n./metron-platform/metron-management/src/main/java/org/apache/metron/management/ThreatTriageFunctions.java\r\n./metron-platform/metron-management/src/main/java/org/apache/metron/management/KafkaFunctions.java\r\n./metron-platform/metron-management/src/main/java/org/apache/metron/management/ParserConfigFunctions.java\r\n./metron-platform/metron-management/src/main/java/org/apache/metron/management/EnrichmentConfigFunctions.java\r\n./metron-analytics/metron-profiler-client/src/main/java/org/apache/metron/profiler/client/stellar/WindowLookback.java\r\n./metron-analytics/metron-profiler-client/src/main/java/org/apache/metron/profiler/client/stellar/GetProfile.java\r\n./metron-analytics/metron-profiler-client/src/main/java/org/apache/metron/profiler/client/stellar/VerboseProfile.java\r\n./metron-analytics/metron-profiler-repl/src/main/java/org/apache/metron/profiler/repl/ProfilerFunctions.java\r\n./metron-analytics/metron-statistics/src/main/java/org/apache/metron/statistics/StellarStatisticsFunctions.java\r\n./metron-analytics/metron-statistics/src/main/java/org/apache/metron/statistics/sampling/SamplingOpsFunctions.java\r\n./metron-analytics/metron-maas-common/src/main/java/org/apache/metron/maas/functions/MaaSFunctions.java\r\n./metron-stellar/stellar-common/src/test/java/org/apache/metron/stellar/dsl/functions/BasicStellarTest.java\r\n./metron-stellar/stellar-common/src/test/java/org/apache/metron/stellar/dsl/functions/resolver/BaseFunctionResolverTest.java\r\n./metron-stellar/stellar-common/src/test/java/org/apache/metron/stellar/dsl/functions/resolver/SimpleFunctionResolverTest.java\r\n./metron-stellar/stellar-common/src/main/java/org/apache/metron/stellar/dsl/functions/DataStructureFunctions.java\r\n./metron-stellar/stellar-common/src/main/java/org/apache/metron/stellar/dsl/functions/FunctionalFunctions.java\r\n./metron-stellar/stellar-common/src/main/java/org/apache/metron/stellar/dsl/functions/EncodingFunctions.java\r\n./metron-stellar/stellar-common/src/main/java/org/apache/metron/stellar/dsl/functions/RegExFunctions.java\r\n./metron-stellar/stellar-common/src/main/java/org/apache/metron/stellar/dsl/functions/DateFunctions.java\r\n./metron-stellar/stellar-common/src/main/java/org/apache/metron/stellar/dsl/functions/RestFunctions.java\r\n./metron-stellar/stellar-common/src/main/java/org/apache/metron/stellar/dsl/functions/SetFunctions.java\r\n./metron-stellar/stellar-common/src/main/java/org/apache/metron/stellar/dsl/functions/MapFunctions.java\r\n./metron-stellar/stellar-common/src/main/java/org/apache/metron/stellar/dsl/functions/HashFunctions.java\r\n./metron-stellar/stellar-common/src/main/java/org/apache/metron/stellar/dsl/functions/ShellFunctions.java\r\n./metron-stellar/stellar-common/src/main/java/org/apache/metron/stellar/dsl/functions/OrdinalFunctions.java\r\n./metron-stellar/stellar-common/src/main/java/org/apache/metron/stellar/dsl/functions/TextFunctions.java\r\n./metron-stellar/stellar-common/src/main/java/org/apache/metron/stellar/dsl/functions/StringFunctions.java\r\n./metron-stellar/stellar-common/src/main/java/org/apache/metron/stellar/dsl/functions/NetworkFunctions.java\r\n```","reactions":{"url":"https://api.github.com/repos/apache/metron/issues/comments/498369511/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/metron/issues/comments/498409367","html_url":"https://github.com/apache/metron/pull/1417#issuecomment-498409367","issue_url":"https://api.github.com/repos/apache/metron/issues/1417","id":498409367,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5ODQwOTM2Nw==","user":{"login":"mmiklavc","id":658443,"node_id":"MDQ6VXNlcjY1ODQ0Mw==","avatar_url":"https://avatars.githubusercontent.com/u/658443?v=4","gravatar_id":"","url":"https://api.github.com/users/mmiklavc","html_url":"https://github.com/mmiklavc","followers_url":"https://api.github.com/users/mmiklavc/followers","following_url":"https://api.github.com/users/mmiklavc/following{/other_user}","gists_url":"https://api.github.com/users/mmiklavc/gists{/gist_id}","starred_url":"https://api.github.com/users/mmiklavc/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mmiklavc/subscriptions","organizations_url":"https://api.github.com/users/mmiklavc/orgs","repos_url":"https://api.github.com/users/mmiklavc/repos","events_url":"https://api.github.com/users/mmiklavc/events{/privacy}","received_events_url":"https://api.github.com/users/mmiklavc/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-03T20:15:52Z","updated_at":"2019-06-03T20:15:52Z","author_association":"CONTRIBUTOR","body":"Hey guys, any thoughts on this? We should probably get this working sooner than later.","reactions":{"url":"https://api.github.com/repos/apache/metron/issues/comments/498409367/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/metron/issues/comments/498437027","html_url":"https://github.com/apache/metron/pull/1417#issuecomment-498437027","issue_url":"https://api.github.com/repos/apache/metron/issues/1417","id":498437027,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5ODQzNzAyNw==","user":{"login":"ottobackwards","id":1111551,"node_id":"MDQ6VXNlcjExMTE1NTE=","avatar_url":"https://avatars.githubusercontent.com/u/1111551?v=4","gravatar_id":"","url":"https://api.github.com/users/ottobackwards","html_url":"https://github.com/ottobackwards","followers_url":"https://api.github.com/users/ottobackwards/followers","following_url":"https://api.github.com/users/ottobackwards/following{/other_user}","gists_url":"https://api.github.com/users/ottobackwards/gists{/gist_id}","starred_url":"https://api.github.com/users/ottobackwards/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ottobackwards/subscriptions","organizations_url":"https://api.github.com/users/ottobackwards/orgs","repos_url":"https://api.github.com/users/ottobackwards/repos","events_url":"https://api.github.com/users/ottobackwards/events{/privacy}","received_events_url":"https://api.github.com/users/ottobackwards/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-03T21:41:04Z","updated_at":"2019-06-03T21:41:04Z","author_association":"CONTRIBUTOR","body":"I am +1","reactions":{"url":"https://api.github.com/repos/apache/metron/issues/comments/498437027/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/metron/issues/comments/498438210","html_url":"https://github.com/apache/metron/pull/1437#issuecomment-498438210","issue_url":"https://api.github.com/repos/apache/metron/issues/1437","id":498438210,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5ODQzODIxMA==","user":{"login":"ottobackwards","id":1111551,"node_id":"MDQ6VXNlcjExMTE1NTE=","avatar_url":"https://avatars.githubusercontent.com/u/1111551?v=4","gravatar_id":"","url":"https://api.github.com/users/ottobackwards","html_url":"https://github.com/ottobackwards","followers_url":"https://api.github.com/users/ottobackwards/followers","following_url":"https://api.github.com/users/ottobackwards/following{/other_user}","gists_url":"https://api.github.com/users/ottobackwards/gists{/gist_id}","starred_url":"https://api.github.com/users/ottobackwards/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ottobackwards/subscriptions","organizations_url":"https://api.github.com/users/ottobackwards/orgs","repos_url":"https://api.github.com/users/ottobackwards/repos","events_url":"https://api.github.com/users/ottobackwards/events{/privacy}","received_events_url":"https://api.github.com/users/ottobackwards/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-03T21:45:12Z","updated_at":"2019-06-03T21:45:12Z","author_association":"CONTRIBUTOR","body":"+1","reactions":{"url":"https://api.github.com/repos/apache/metron/issues/comments/498438210/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/metron/issues/comments/498621136","html_url":"https://github.com/apache/metron/pull/1438#issuecomment-498621136","issue_url":"https://api.github.com/repos/apache/metron/issues/1438","id":498621136,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5ODYyMTEzNg==","user":{"login":"ottobackwards","id":1111551,"node_id":"MDQ6VXNlcjExMTE1NTE=","avatar_url":"https://avatars.githubusercontent.com/u/1111551?v=4","gravatar_id":"","url":"https://api.github.com/users/ottobackwards","html_url":"https://github.com/ottobackwards","followers_url":"https://api.github.com/users/ottobackwards/followers","following_url":"https://api.github.com/users/ottobackwards/following{/other_user}","gists_url":"https://api.github.com/users/ottobackwards/gists{/gist_id}","starred_url":"https://api.github.com/users/ottobackwards/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ottobackwards/subscriptions","organizations_url":"https://api.github.com/users/ottobackwards/orgs","repos_url":"https://api.github.com/users/ottobackwards/repos","events_url":"https://api.github.com/users/ottobackwards/events{/privacy}","received_events_url":"https://api.github.com/users/ottobackwards/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-04T10:48:45Z","updated_at":"2019-06-04T10:48:45Z","author_association":"CONTRIBUTOR","body":"+1 by inspection","reactions":{"url":"https://api.github.com/repos/apache/metron/issues/comments/498621136/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/metron/issues/comments/498642471","html_url":"https://github.com/apache/metron/pull/1431#issuecomment-498642471","issue_url":"https://api.github.com/repos/apache/metron/issues/1431","id":498642471,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5ODY0MjQ3MQ==","user":{"login":"tiborm","id":2437400,"node_id":"MDQ6VXNlcjI0Mzc0MDA=","avatar_url":"https://avatars.githubusercontent.com/u/2437400?v=4","gravatar_id":"","url":"https://api.github.com/users/tiborm","html_url":"https://github.com/tiborm","followers_url":"https://api.github.com/users/tiborm/followers","following_url":"https://api.github.com/users/tiborm/following{/other_user}","gists_url":"https://api.github.com/users/tiborm/gists{/gist_id}","starred_url":"https://api.github.com/users/tiborm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tiborm/subscriptions","organizations_url":"https://api.github.com/users/tiborm/orgs","repos_url":"https://api.github.com/users/tiborm/repos","events_url":"https://api.github.com/users/tiborm/events{/privacy}","received_events_url":"https://api.github.com/users/tiborm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-04T12:02:54Z","updated_at":"2019-06-04T12:29:14Z","author_association":"CONTRIBUTOR","body":"> @tiborm this looks like a pretty cool feature, thanks for the contribution! I'd like to address a couple things before we commit this. I am on board with providing a flag for this feature and leaving it disabled by default - that looks reasonable to me, and I also coincidentally just kicked off a DISCUSS thread along these lines as well - https://lists.apache.org/thread.html/e24e4709fbc06473977a0a7f0c0ce92eb02cfcc8c1c2bc41be08a698@%3Cdev.metron.apache.org%3E. I do think we need to resolve some outstanding questions about how we handle that as a community - see below.\r\n> \r\n> I looked over your instructions on the Jira ticket and I think we're pretty close. I'd like to see the following:\r\n> \r\n> 1. What's the plan for handling this feature flag? We haven't had any discussion in the community about enabling feature flags to this point. I suspect we might consider them an option for lowering the bar to testing, but we should address this. I don't see any non-happy path tests on this PR, for example. I think that either we need to put this PR through more rigorous testing or come to a community understanding (and document it in the dev guidelines) about what a reasonable level of quality and feature polish will be for code committed under a feature flag.\r\n\r\nI agree with @sardell on this. The isEnable config parameter here is not a feature flag.\r\nIMHO feature flags are for development teams.  In this case, the isEnabled parameter is for our end users (more precisely for those who maintain deployed Metron on a service level). Even if the click through navigation was put behind a feature flag, I would keep the isEnabled flags for our clients to turn on and off based according to their preference. Having this feature on by default would weaken the user experience if users don’t want to use it. \r\nI know you already agreed with @sardell briefly pointing this out, but I wanted to clarify my  use of the isEnabled parameter. \r\n\r\nOn a related note, I added these two followup Jira here:\r\n[Create REST endpoint to persist Click Through navigation configuration](https://issues.apache.org/jira/browse/METRON-2104)\r\n[Impl Click Through navigation admin interface on Management UI](https://issues.apache.org/jira/browse/METRON-2103)\r\nWith these two additional changes, isEnabled would be fully exposed to our end users (trough a toggle control) and they would be able to turn it on or off through the Management UI.\r\n\r\n> 2. Non-happy path test scenarios? e.g.\r\n>    \r\n>    1. What happens to the UI if you misspell a field name? What errors/indication does the user get? Will the UI fail to come up? Will it only fail when a field is visible in the UI column listing?\r\n\r\nIf the isEnabled field name is misspelled then the isEnabled field is considered as missing. It will evaluate as not true, therefore the feature stays turned off. I’ll extend the implementation with warnings in the console log if any required configuration is missing. I’m also going to cover these scenarios with unit tests.\r\n\r\nIf a field name is misspelled it will be considered missing. None of these scenarios causing errors but I’ll cover them with unit tests. Visibility of a column has no impact on this. I checked it and /search request returns with all the available fields. Visibility of the columns has no impact on the result set.\r\n\r\n>    2. What happens if you type \"fasle\" for `isEnabled`? Again, what's the default behavior for misconfiguration and where can operations people managing this feature look for logs that detail the exceptions?\r\n\r\nThat would actually evaluate as true because of Javascript’s auto type coercion. I’m going to fix this and cover it with unit tests.\r\n\r\n>    3. What happens for fields not present in a particular record that are used for token replacement? e.g. per the Jira instructions - \"But in the configuration, any available alert property field could be referenced like the following:\" Also, is this impacted in any way by what fields are currently displayed/enabled in the alerts UI column listing? If I've hidden ip_src_addr from display, will it still render the URL correctly?\r\n\r\nVisibility of a column has no impact on the token replacement. \r\nReferencing a non-existing token causes no error. However, the URL will not be resolved properly. I’ll cover this scenario with unit tests as well. And add log messages to help configuration.\r\n\r\n> 3. These instructions should have a dedicated section in the documentation/README for the Alerts UI.\r\n>    \r\n>    1. Please provide a detailed explanation of the configuration lifecycle - will the changes be picked up automatically, or only after a restart? Provide instructions for whatever those steps are (e.g. restart Alerts UI using command foo)\r\n>    2. Provide a detailed schema description for the JSON you provided in your testing examples. I think you've done a decent job of explaining what `alertEntry` and `metaAlertEntry` mean, this just needs to be expanded on a bit and laid out similar to what we've done for parsers here - [general purpose parser config options](https://github.com/apache/metron/tree/master/metron-platform/metron-parsing#introduction) and here - [config details for all parsers](https://github.com/apache/metron/tree/master/metron-platform/metron-parsing#parser-configuration)\r\n\r\nWill do. This should be easy using the description in Jira as a basis.\r\n\r\nThanks @mmiklavc \r\n","reactions":{"url":"https://api.github.com/repos/apache/metron/issues/comments/498642471/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/metron/issues/comments/498662519","html_url":"https://github.com/apache/metron/pull/1437#issuecomment-498662519","issue_url":"https://api.github.com/repos/apache/metron/issues/1437","id":498662519,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5ODY2MjUxOQ==","user":{"login":"nickwallen","id":2475409,"node_id":"MDQ6VXNlcjI0NzU0MDk=","avatar_url":"https://avatars.githubusercontent.com/u/2475409?v=4","gravatar_id":"","url":"https://api.github.com/users/nickwallen","html_url":"https://github.com/nickwallen","followers_url":"https://api.github.com/users/nickwallen/followers","following_url":"https://api.github.com/users/nickwallen/following{/other_user}","gists_url":"https://api.github.com/users/nickwallen/gists{/gist_id}","starred_url":"https://api.github.com/users/nickwallen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickwallen/subscriptions","organizations_url":"https://api.github.com/users/nickwallen/orgs","repos_url":"https://api.github.com/users/nickwallen/repos","events_url":"https://api.github.com/users/nickwallen/events{/privacy}","received_events_url":"https://api.github.com/users/nickwallen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-04T13:03:56Z","updated_at":"2019-06-04T13:03:56Z","author_association":"CONTRIBUTOR","body":"+1 Very helpful addition","reactions":{"url":"https://api.github.com/repos/apache/metron/issues/comments/498662519/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/metron/issues/comments/498662850","html_url":"https://github.com/apache/metron/pull/1434#issuecomment-498662850","issue_url":"https://api.github.com/repos/apache/metron/issues/1434","id":498662850,"node_id":"MDEyOklzc3VlQ29tbWVudDQ5ODY2Mjg1MA==","user":{"login":"nickwallen","id":2475409,"node_id":"MDQ6VXNlcjI0NzU0MDk=","avatar_url":"https://avatars.githubusercontent.com/u/2475409?v=4","gravatar_id":"","url":"https://api.github.com/users/nickwallen","html_url":"https://github.com/nickwallen","followers_url":"https://api.github.com/users/nickwallen/followers","following_url":"https://api.github.com/users/nickwallen/following{/other_user}","gists_url":"https://api.github.com/users/nickwallen/gists{/gist_id}","starred_url":"https://api.github.com/users/nickwallen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nickwallen/subscriptions","organizations_url":"https://api.github.com/users/nickwallen/orgs","repos_url":"https://api.github.com/users/nickwallen/repos","events_url":"https://api.github.com/users/nickwallen/events{/privacy}","received_events_url":"https://api.github.com/users/nickwallen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-06-04T13:04:59Z","updated_at":"2019-06-04T13:04:59Z","author_association":"CONTRIBUTOR","body":"+1 Thanks","reactions":{"url":"https://api.github.com/repos/apache/metron/issues/comments/498662850/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]