[{"url":"https://api.github.com/repos/apache/tvm/issues/comments/609058346","html_url":"https://github.com/apache/tvm/pull/5219#issuecomment-609058346","issue_url":"https://api.github.com/repos/apache/tvm/issues/5219","id":609058346,"node_id":"MDEyOklzc3VlQ29tbWVudDYwOTA1ODM0Ng==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-04T17:00:43Z","updated_at":"2020-04-04T17:01:09Z","author_association":"MEMBER","body":"I agree that supporting i64 indices(and i32 as well by auto promoting) is a better idea","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/609058346/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/609062283","html_url":"https://github.com/apache/tvm/pull/5236#issuecomment-609062283","issue_url":"https://api.github.com/repos/apache/tvm/issues/5236","id":609062283,"node_id":"MDEyOklzc3VlQ29tbWVudDYwOTA2MjI4Mw==","user":{"login":"ANSHUMAN87","id":32511895,"node_id":"MDQ6VXNlcjMyNTExODk1","avatar_url":"https://avatars.githubusercontent.com/u/32511895?v=4","gravatar_id":"","url":"https://api.github.com/users/ANSHUMAN87","html_url":"https://github.com/ANSHUMAN87","followers_url":"https://api.github.com/users/ANSHUMAN87/followers","following_url":"https://api.github.com/users/ANSHUMAN87/following{/other_user}","gists_url":"https://api.github.com/users/ANSHUMAN87/gists{/gist_id}","starred_url":"https://api.github.com/users/ANSHUMAN87/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ANSHUMAN87/subscriptions","organizations_url":"https://api.github.com/users/ANSHUMAN87/orgs","repos_url":"https://api.github.com/users/ANSHUMAN87/repos","events_url":"https://api.github.com/users/ANSHUMAN87/events{/privacy}","received_events_url":"https://api.github.com/users/ANSHUMAN87/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-04T17:28:42Z","updated_at":"2020-04-04T17:28:42Z","author_association":"CONTRIBUTOR","body":"> https://github.blog/2019-02-14-introducing-draft-pull-requests/\r\n\r\n@tqchen : Thanks for the suggestion! I missed it, but it seems that already raised PR cant be converted to Draft PR.  Please advise how to proceed, there are 2 ways i can handle it.\r\n   1:> Keep local copy until skeleton is ready, then upload all the changes.\r\n   2:> Close and reopen the PR as Draft.\r\n\r\nThanks!","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/609062283/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/609062776","html_url":"https://github.com/apache/tvm/pull/5236#issuecomment-609062776","issue_url":"https://api.github.com/repos/apache/tvm/issues/5236","id":609062776,"node_id":"MDEyOklzc3VlQ29tbWVudDYwOTA2Mjc3Ng==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-04T17:31:59Z","updated_at":"2020-04-04T17:31:59Z","author_association":"MEMBER","body":"both sounds fine","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/609062776/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/609091439","html_url":"https://github.com/apache/tvm/pull/5233#issuecomment-609091439","issue_url":"https://api.github.com/repos/apache/tvm/issues/5233","id":609091439,"node_id":"MDEyOklzc3VlQ29tbWVudDYwOTA5MTQzOQ==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-04T21:27:26Z","updated_at":"2020-04-04T21:28:18Z","author_association":"MEMBER","body":"- cc @zhiics @icemelon9 @jroesch @wweic as this PR touches the relay VM\r\n- cc @FrozenGene @kumasento as this PR contains a fix to LLVM module to not rely on entry_func to detect empty module (related to https://github.com/apache/incubator-tvm/pull/5146)\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/609091439/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/609364633","html_url":"https://github.com/apache/tvm/pull/5171#issuecomment-609364633","issue_url":"https://api.github.com/repos/apache/tvm/issues/5171","id":609364633,"node_id":"MDEyOklzc3VlQ29tbWVudDYwOTM2NDYzMw==","user":{"login":"yzhliu","id":631860,"node_id":"MDQ6VXNlcjYzMTg2MA==","avatar_url":"https://avatars.githubusercontent.com/u/631860?v=4","gravatar_id":"","url":"https://api.github.com/users/yzhliu","html_url":"https://github.com/yzhliu","followers_url":"https://api.github.com/users/yzhliu/followers","following_url":"https://api.github.com/users/yzhliu/following{/other_user}","gists_url":"https://api.github.com/users/yzhliu/gists{/gist_id}","starred_url":"https://api.github.com/users/yzhliu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yzhliu/subscriptions","organizations_url":"https://api.github.com/users/yzhliu/orgs","repos_url":"https://api.github.com/users/yzhliu/repos","events_url":"https://api.github.com/users/yzhliu/events{/privacy}","received_events_url":"https://api.github.com/users/yzhliu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-05T06:06:54Z","updated_at":"2020-04-05T06:06:54Z","author_association":"MEMBER","body":"@sergei-grechanik I rename it to IntConstraints, and also add checker to ensure the variables to be integers. please take a review again.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/609364633/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/609405224","html_url":"https://github.com/apache/tvm/pull/5167#issuecomment-609405224","issue_url":"https://api.github.com/repos/apache/tvm/issues/5167","id":609405224,"node_id":"MDEyOklzc3VlQ29tbWVudDYwOTQwNTIyNA==","user":{"login":"siju-samuel","id":15828974,"node_id":"MDQ6VXNlcjE1ODI4OTc0","avatar_url":"https://avatars.githubusercontent.com/u/15828974?v=4","gravatar_id":"","url":"https://api.github.com/users/siju-samuel","html_url":"https://github.com/siju-samuel","followers_url":"https://api.github.com/users/siju-samuel/followers","following_url":"https://api.github.com/users/siju-samuel/following{/other_user}","gists_url":"https://api.github.com/users/siju-samuel/gists{/gist_id}","starred_url":"https://api.github.com/users/siju-samuel/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/siju-samuel/subscriptions","organizations_url":"https://api.github.com/users/siju-samuel/orgs","repos_url":"https://api.github.com/users/siju-samuel/repos","events_url":"https://api.github.com/users/siju-samuel/events{/privacy}","received_events_url":"https://api.github.com/users/siju-samuel/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-05T12:02:08Z","updated_at":"2020-04-05T12:02:08Z","author_association":"MEMBER","body":"@masahi  Thanks a lot for your suggestion. i was using tflite frontend. As of now i used dequantize/quantize methods and i was able to run mobilenetv3 models, there are variations in output, still accuracy is not hit very badly.  \r\nWe can use `mul_scalar` method since its scalar, still i suggest, we can keep the `qnn.div` op for non scalar multiplications.\r\n","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/609405224/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/609464739","html_url":"https://github.com/apache/tvm/pull/5238#issuecomment-609464739","issue_url":"https://api.github.com/repos/apache/tvm/issues/5238","id":609464739,"node_id":"MDEyOklzc3VlQ29tbWVudDYwOTQ2NDczOQ==","user":{"login":"icemelon","id":2696494,"node_id":"MDQ6VXNlcjI2OTY0OTQ=","avatar_url":"https://avatars.githubusercontent.com/u/2696494?v=4","gravatar_id":"","url":"https://api.github.com/users/icemelon","html_url":"https://github.com/icemelon","followers_url":"https://api.github.com/users/icemelon/followers","following_url":"https://api.github.com/users/icemelon/following{/other_user}","gists_url":"https://api.github.com/users/icemelon/gists{/gist_id}","starred_url":"https://api.github.com/users/icemelon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/icemelon/subscriptions","organizations_url":"https://api.github.com/users/icemelon/orgs","repos_url":"https://api.github.com/users/icemelon/repos","events_url":"https://api.github.com/users/icemelon/events{/privacy}","received_events_url":"https://api.github.com/users/icemelon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-05T18:56:31Z","updated_at":"2020-04-05T18:56:31Z","author_association":"MEMBER","body":"Could you add some test case for it?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/609464739/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/609474532","html_url":"https://github.com/apache/tvm/pull/5237#issuecomment-609474532","issue_url":"https://api.github.com/repos/apache/tvm/issues/5237","id":609474532,"node_id":"MDEyOklzc3VlQ29tbWVudDYwOTQ3NDUzMg==","user":{"login":"yzhliu","id":631860,"node_id":"MDQ6VXNlcjYzMTg2MA==","avatar_url":"https://avatars.githubusercontent.com/u/631860?v=4","gravatar_id":"","url":"https://api.github.com/users/yzhliu","html_url":"https://github.com/yzhliu","followers_url":"https://api.github.com/users/yzhliu/followers","following_url":"https://api.github.com/users/yzhliu/following{/other_user}","gists_url":"https://api.github.com/users/yzhliu/gists{/gist_id}","starred_url":"https://api.github.com/users/yzhliu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yzhliu/subscriptions","organizations_url":"https://api.github.com/users/yzhliu/orgs","repos_url":"https://api.github.com/users/yzhliu/repos","events_url":"https://api.github.com/users/yzhliu/events{/privacy}","received_events_url":"https://api.github.com/users/yzhliu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-05T20:06:49Z","updated_at":"2020-04-05T20:06:49Z","author_association":"MEMBER","body":"@icemelon9 @zhiics  could you take a look?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/609474532/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/609479437","html_url":"https://github.com/apache/tvm/pull/5103#issuecomment-609479437","issue_url":"https://api.github.com/repos/apache/tvm/issues/5103","id":609479437,"node_id":"MDEyOklzc3VlQ29tbWVudDYwOTQ3OTQzNw==","user":{"login":"kevinthesun","id":15520525,"node_id":"MDQ6VXNlcjE1NTIwNTI1","avatar_url":"https://avatars.githubusercontent.com/u/15520525?v=4","gravatar_id":"","url":"https://api.github.com/users/kevinthesun","html_url":"https://github.com/kevinthesun","followers_url":"https://api.github.com/users/kevinthesun/followers","following_url":"https://api.github.com/users/kevinthesun/following{/other_user}","gists_url":"https://api.github.com/users/kevinthesun/gists{/gist_id}","starred_url":"https://api.github.com/users/kevinthesun/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kevinthesun/subscriptions","organizations_url":"https://api.github.com/users/kevinthesun/orgs","repos_url":"https://api.github.com/users/kevinthesun/repos","events_url":"https://api.github.com/users/kevinthesun/events{/privacy}","received_events_url":"https://api.github.com/users/kevinthesun/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-05T20:42:47Z","updated_at":"2020-04-05T20:42:47Z","author_association":"CONTRIBUTOR","body":"Thanks @wweic @masahi @MarisaKirisame ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/609479437/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/609479857","html_url":"https://github.com/apache/tvm/pull/5237#issuecomment-609479857","issue_url":"https://api.github.com/repos/apache/tvm/issues/5237","id":609479857,"node_id":"MDEyOklzc3VlQ29tbWVudDYwOTQ3OTg1Nw==","user":{"login":"icemelon","id":2696494,"node_id":"MDQ6VXNlcjI2OTY0OTQ=","avatar_url":"https://avatars.githubusercontent.com/u/2696494?v=4","gravatar_id":"","url":"https://api.github.com/users/icemelon","html_url":"https://github.com/icemelon","followers_url":"https://api.github.com/users/icemelon/followers","following_url":"https://api.github.com/users/icemelon/following{/other_user}","gists_url":"https://api.github.com/users/icemelon/gists{/gist_id}","starred_url":"https://api.github.com/users/icemelon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/icemelon/subscriptions","organizations_url":"https://api.github.com/users/icemelon/orgs","repos_url":"https://api.github.com/users/icemelon/repos","events_url":"https://api.github.com/users/icemelon/events{/privacy}","received_events_url":"https://api.github.com/users/icemelon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-05T20:45:51Z","updated_at":"2020-04-05T20:45:51Z","author_association":"MEMBER","body":"Thanks @gaurav1086 ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/609479857/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/609491509","html_url":"https://github.com/apache/tvm/pull/5186#issuecomment-609491509","issue_url":"https://api.github.com/repos/apache/tvm/issues/5186","id":609491509,"node_id":"MDEyOklzc3VlQ29tbWVudDYwOTQ5MTUwOQ==","user":{"login":"icemelon","id":2696494,"node_id":"MDQ6VXNlcjI2OTY0OTQ=","avatar_url":"https://avatars.githubusercontent.com/u/2696494?v=4","gravatar_id":"","url":"https://api.github.com/users/icemelon","html_url":"https://github.com/icemelon","followers_url":"https://api.github.com/users/icemelon/followers","following_url":"https://api.github.com/users/icemelon/following{/other_user}","gists_url":"https://api.github.com/users/icemelon/gists{/gist_id}","starred_url":"https://api.github.com/users/icemelon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/icemelon/subscriptions","organizations_url":"https://api.github.com/users/icemelon/orgs","repos_url":"https://api.github.com/users/icemelon/repos","events_url":"https://api.github.com/users/icemelon/events{/privacy}","received_events_url":"https://api.github.com/users/icemelon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-05T22:00:03Z","updated_at":"2020-04-05T22:00:03Z","author_association":"MEMBER","body":"Thanks @jwfromm @masahi @FrozenGene. This is now merged.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/609491509/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/609498333","html_url":"https://github.com/apache/tvm/issues/5242#issuecomment-609498333","issue_url":"https://api.github.com/repos/apache/tvm/issues/5242","id":609498333,"node_id":"MDEyOklzc3VlQ29tbWVudDYwOTQ5ODMzMw==","user":{"login":"kognat-docs","id":62274503,"node_id":"MDQ6VXNlcjYyMjc0NTAz","avatar_url":"https://avatars.githubusercontent.com/u/62274503?v=4","gravatar_id":"","url":"https://api.github.com/users/kognat-docs","html_url":"https://github.com/kognat-docs","followers_url":"https://api.github.com/users/kognat-docs/followers","following_url":"https://api.github.com/users/kognat-docs/following{/other_user}","gists_url":"https://api.github.com/users/kognat-docs/gists{/gist_id}","starred_url":"https://api.github.com/users/kognat-docs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kognat-docs/subscriptions","organizations_url":"https://api.github.com/users/kognat-docs/orgs","repos_url":"https://api.github.com/users/kognat-docs/repos","events_url":"https://api.github.com/users/kognat-docs/events{/privacy}","received_events_url":"https://api.github.com/users/kognat-docs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-05T22:52:16Z","updated_at":"2020-04-05T22:52:16Z","author_association":"NONE","body":"For history\r\n\r\n```\r\nsam$ git rev-parse master\r\n0cfdecdae99582998dae5c2c3fdfd7a2700f10c0\r\n```","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/609498333/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/609520758","html_url":"https://github.com/apache/tvm/pull/5240#issuecomment-609520758","issue_url":"https://api.github.com/repos/apache/tvm/issues/5240","id":609520758,"node_id":"MDEyOklzc3VlQ29tbWVudDYwOTUyMDc1OA==","user":{"login":"shoubhik","id":2293791,"node_id":"MDQ6VXNlcjIyOTM3OTE=","avatar_url":"https://avatars.githubusercontent.com/u/2293791?v=4","gravatar_id":"","url":"https://api.github.com/users/shoubhik","html_url":"https://github.com/shoubhik","followers_url":"https://api.github.com/users/shoubhik/followers","following_url":"https://api.github.com/users/shoubhik/following{/other_user}","gists_url":"https://api.github.com/users/shoubhik/gists{/gist_id}","starred_url":"https://api.github.com/users/shoubhik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/shoubhik/subscriptions","organizations_url":"https://api.github.com/users/shoubhik/orgs","repos_url":"https://api.github.com/users/shoubhik/repos","events_url":"https://api.github.com/users/shoubhik/events{/privacy}","received_events_url":"https://api.github.com/users/shoubhik/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-06T01:20:53Z","updated_at":"2020-04-06T01:20:53Z","author_association":"CONTRIBUTOR","body":"yes, when i get time, i'll start adding test cases for quantized mkl.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/609520758/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/609525470","html_url":"https://github.com/apache/tvm/issues/5242#issuecomment-609525470","issue_url":"https://api.github.com/repos/apache/tvm/issues/5242","id":609525470,"node_id":"MDEyOklzc3VlQ29tbWVudDYwOTUyNTQ3MA==","user":{"login":"kognat-docs","id":62274503,"node_id":"MDQ6VXNlcjYyMjc0NTAz","avatar_url":"https://avatars.githubusercontent.com/u/62274503?v=4","gravatar_id":"","url":"https://api.github.com/users/kognat-docs","html_url":"https://github.com/kognat-docs","followers_url":"https://api.github.com/users/kognat-docs/followers","following_url":"https://api.github.com/users/kognat-docs/following{/other_user}","gists_url":"https://api.github.com/users/kognat-docs/gists{/gist_id}","starred_url":"https://api.github.com/users/kognat-docs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kognat-docs/subscriptions","organizations_url":"https://api.github.com/users/kognat-docs/orgs","repos_url":"https://api.github.com/users/kognat-docs/repos","events_url":"https://api.github.com/users/kognat-docs/events{/privacy}","received_events_url":"https://api.github.com/users/kognat-docs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-06T01:43:50Z","updated_at":"2020-04-06T01:43:50Z","author_association":"NONE","body":"On the same HW OS and TVM install the following\r\n\r\n`python ~/dev/tvm_test/tensor_expr_get_started.py`\r\n\r\nResults in \r\n\r\n```\r\n<class 'tvm.te.tensor.Tensor'>\r\n[11:09:36] /Users/sam/dev/github/tvm/src/runtime/metal/metal_device_api.mm:136: Intializing Metal device 0, name=Intel(R) HD Graphics Unknown\r\n[11:09:36] /Users/sam/dev/github/tvm/src/runtime/metal/metal_device_api.mm:136: Intializing Metal device 1, name=AMD Radeon Pro 560\r\n-----GPU code-----\r\n#include <metal_stdlib>\r\nusing namespace metal;\r\n\r\nunion __TVMArgUnion {\r\n int v_int;\r\n};\r\n\r\nstruct myadd_kernel0_args_t {\r\n  int n;\r\n  int stride;\r\n  int stride1;\r\n  int stride2;\r\n};\r\n\r\nkernel void myadd_kernel0(  device void* C [[ buffer(0) ]],\r\n  device void* A [[ buffer(1) ]],\r\n  device void* B [[ buffer(2) ]],\r\n  constant myadd_kernel0_args_t& arg [[ buffer(3) ]],\r\n  uint blockIdx [[threadgroup_position_in_grid]],\r\n  uint threadIdx [[thread_position_in_threadgroup]]\r\n) {\r\n  if (((int)blockIdx) < (arg.n >> 6)) {\r\n    ((device float*)C)[((((((int)blockIdx) * 64) + ((int)threadIdx)) * arg.stride2))] = (((device float*)A)[((((((int)blockIdx) * 64) + ((int)threadIdx)) * arg.stride))] + ((device float*)B)[((((((int)blockIdx) * 64) + ((int)threadIdx)) * arg.stride1))]);\r\n  } else {\r\n    if (((((int)blockIdx) * 64) + ((int)threadIdx)) < arg.n) {\r\n      ((device float*)C)[((((((int)blockIdx) * 64) + ((int)threadIdx)) * arg.stride2))] = (((device float*)A)[((((((int)blockIdx) * 64) + ((int)threadIdx)) * arg.stride))] + ((device float*)B)[((((((int)blockIdx) * 64) + ((int)threadIdx)) * arg.stride1))]);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n['myadd.tvm_meta.json', 'myadd.so', 'myadd.metal', 'myadd.o']\r\n```\r\n\r\nWhere the script is as follows adapted from https://tvm.apache.org/docs/tutorials/tensor_expr_get_started.html?highlight=metal\r\n\r\n```\r\n# Licensed to the Apache Software Foundation (ASF) under one\r\n# or more contributor license agreements.  See the NOTICE file\r\n# distributed with this work for additional information\r\n# regarding copyright ownership.  The ASF licenses this file\r\n# to you under the Apache License, Version 2.0 (the\r\n# \"License\"); you may not use this file except in compliance\r\n# with the License.  You may obtain a copy of the License at\r\n#\r\n#   http://www.apache.org/licenses/LICENSE-2.0\r\n#\r\n# Unless required by applicable law or agreed to in writing,\r\n# software distributed under the License is distributed on an\r\n# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n# KIND, either express or implied.  See the License for the\r\n# specific language governing permissions and limitations\r\n# under the License.\r\n\"\"\"\r\n.. _tutorial-tensor-expr-get-started:\r\n\r\nGet Started with Tensor Expression\r\n==================================\r\n**Author**: `Tianqi Chen <https://tqchen.github.io>`_\r\n\r\nThis is an introductory tutorial to the Tensor expression language in TVM.\r\nTVM uses a domain specific tensor expression for efficient kernel construction.\r\n\r\nIn this tutorial, we will demonstrate the basic workflow to use\r\nthe tensor expression language.\r\n\"\"\"\r\nfrom __future__ import absolute_import, print_function\r\n\r\nimport tvm\r\nfrom tvm import te\r\nimport numpy as np\r\n\r\n# Global declarations of environment.\r\n\r\ntgt_host=\"llvm\"\r\n# Change it to respective GPU if gpu is enabled Ex: cuda, opencl, rocm\r\ntgt=\"metal\"\r\n\r\n######################################################################\r\n# Vector Add Example\r\n# ------------------\r\n# In this tutorial, we will use a vector addition example to demonstrate\r\n# the workflow.\r\n#\r\n\r\n######################################################################\r\n# Describe the Computation\r\n# ------------------------\r\n# As a first step, we need to describe our computation.\r\n# TVM adopts tensor semantics, with each intermediate result\r\n# represented as a multi-dimensional array. The user needs to describe\r\n# the computation rule that generates the tensors.\r\n#\r\n# We first define a symbolic variable n to represent the shape.\r\n# We then define two placeholder Tensors, A and B, with given shape (n,)\r\n#\r\n# We then describe the result tensor C, with a compute operation.  The\r\n# compute function takes the shape of the tensor, as well as a lambda\r\n# function that describes the computation rule for each position of\r\n# the tensor.\r\n#\r\n# No computation happens during this phase, as we are only declaring how\r\n# the computation should be done.\r\n#\r\nn = te.var(\"n\")\r\nA = te.placeholder((n,), name='A')\r\nB = te.placeholder((n,), name='B')\r\nC = te.compute(A.shape, lambda i: A[i] + B[i], name=\"C\")\r\nprint(type(C))\r\n\r\n######################################################################\r\n# Schedule the Computation\r\n# ------------------------\r\n# While the above lines describe the computation rule, we can compute\r\n# C in many ways since the axis of C can be computed in a data\r\n# parallel manner.  TVM asks the user to provide a description of the\r\n# computation called a schedule.\r\n#\r\n# A schedule is a set of transformation of computation that transforms\r\n# the loop of computations in the program.\r\n#\r\n# After we construct the schedule, by default the schedule computes\r\n# C in a serial manner in a row-major order.\r\n#\r\n# .. code-block:: c\r\n#\r\n#   for (int i = 0; i < n; ++i) {\r\n#     C[i] = A[i] + B[i];\r\n#   }\r\n#\r\ns = te.create_schedule(C.op)\r\n\r\n######################################################################\r\n# We used the split construct to split the first axis of C,\r\n# this will split the original iteration axis into product of\r\n# two iterations. This is equivalent to the following code.\r\n#\r\n# .. code-block:: c\r\n#\r\n#   for (int bx = 0; bx < ceil(n / 64); ++bx) {\r\n#     for (int tx = 0; tx < 64; ++tx) {\r\n#       int i = bx * 64 + tx;\r\n#       if (i < n) {\r\n#         C[i] = A[i] + B[i];\r\n#       }\r\n#     }\r\n#   }\r\n#\r\nbx, tx = s[C].split(C.op.axis[0], factor=64)\r\n\r\n######################################################################\r\n# Finally we bind the iteration axis bx and tx to threads in the GPU\r\n# compute grid. These are GPU specific constructs that allow us\r\n# to generate code that runs on GPU.\r\n#\r\nif tgt == \"cuda\" or tgt == \"rocm\" or tgt.startswith('opencl') or tgt == \"metal\":\r\n  s[C].bind(bx, te.thread_axis(\"blockIdx.x\"))\r\n  s[C].bind(tx, te.thread_axis(\"threadIdx.x\"))\r\n\r\n######################################################################\r\n# Compilation\r\n# -----------\r\n# After we have finished specifying the schedule, we can compile it\r\n# into a TVM function. By default TVM compiles into a type-erased\r\n# function that can be directly called from the python side.\r\n#\r\n# In the following line, we use tvm.build to create a function.\r\n# The build function takes the schedule, the desired signature of the\r\n# function (including the inputs and outputs) as well as target language\r\n# we want to compile to.\r\n#\r\n# The result of compilation fadd is a GPU device function (if GPU is\r\n# involved) as well as a host wrapper that calls into the GPU\r\n# function.  fadd is the generated host wrapper function, it contains\r\n# a reference to the generated device function internally.\r\n#\r\nfadd = tvm.build(s, [A, B, C], tgt, target_host=tgt_host, name=\"myadd\")\r\n\r\n######################################################################\r\n# Run the Function\r\n# ----------------\r\n# The compiled TVM function is exposes a concise C API\r\n# that can be invoked from any language.\r\n#\r\n# We provide a minimal array API in python to aid quick testing and prototyping.\r\n# The array API is based on the `DLPack <https://github.com/dmlc/dlpack>`_ standard.\r\n#\r\n# - We first create a GPU context.\r\n# - Then tvm.nd.array copies the data to the GPU.\r\n# - fadd runs the actual computation.\r\n# - asnumpy() copies the GPU array back to the CPU and we can use this to verify correctness\r\n#\r\nctx = tvm.context(tgt, 0)\r\n\r\nn = 1024\r\na = tvm.nd.array(np.random.uniform(size=n).astype(A.dtype), ctx)\r\nb = tvm.nd.array(np.random.uniform(size=n).astype(B.dtype), ctx)\r\nc = tvm.nd.array(np.zeros(n, dtype=C.dtype), ctx)\r\nfadd(a, b, c)\r\ntvm.testing.assert_allclose(c.asnumpy(), a.asnumpy() + b.asnumpy())\r\n\r\n######################################################################\r\n# Inspect the Generated Code\r\n# --------------------------\r\n# You can inspect the generated code in TVM. The result of tvm.build\r\n# is a TVM Module. fadd is the host module that contains the host wrapper,\r\n# it also contains a device module for the CUDA (GPU) function.\r\n#\r\n# The following code fetches the device module and prints the content code.\r\n#\r\nif tgt == \"cuda\" or tgt == \"rocm\" or tgt.startswith('opencl') or tgt == \"metal\":\r\n    dev_module = fadd.imported_modules[0]\r\n    print(\"-----GPU code-----\")\r\n    print(dev_module.get_source())\r\nelse:\r\n    print(fadd.get_source())\r\n\r\n######################################################################\r\n# .. note:: Code Specialization\r\n#\r\n#   As you may have noticed, the declarations of A, B and C all\r\n#   take the same shape argument, n. TVM will take advantage of this\r\n#   to pass only a single shape argument to the kernel, as you will find in\r\n#   the printed device code. This is one form of specialization.\r\n#\r\n#   On the host side, TVM will automatically generate check code\r\n#   that checks the constraints in the parameters. So if you pass\r\n#   arrays with different shapes into fadd, an error will be raised.\r\n#\r\n#   We can do more specializations. For example, we can write\r\n#   :code:`n = tvm.runtime.convert(1024)` instead of :code:`n = te.var(\"n\")`,\r\n#   in the computation declaration. The generated function will\r\n#   only take vectors with length 1024.\r\n#\r\n\r\n######################################################################\r\n# Save Compiled Module\r\n# --------------------\r\n# Besides runtime compilation, we can save the compiled modules into\r\n# a file and load them back later. This is called ahead of time compilation.\r\n#\r\n# The following code first performs the following steps:\r\n#\r\n# - It saves the compiled host module into an object file.\r\n# - Then it saves the device module into a ptx file.\r\n# - cc.create_shared calls a compiler (gcc) to create a shared library\r\n#\r\nfrom tvm.contrib import cc\r\nfrom tvm.contrib import util\r\n\r\ntemp = util.tempdir()\r\nfadd.save(temp.relpath(\"myadd.o\"))\r\nif tgt == \"cuda\":\r\n    fadd.imported_modules[0].save(temp.relpath(\"myadd.ptx\"))\r\nif tgt == \"rocm\":\r\n    fadd.imported_modules[0].save(temp.relpath(\"myadd.hsaco\"))\r\nif tgt.startswith('opencl'):\r\n    fadd.imported_modules[0].save(temp.relpath(\"myadd.cl\"))\r\nif tgt.startswith('metal'):\r\n    fadd.imported_modules[0].save(temp.relpath(\"myadd.metal\"))\r\ncc.create_shared(temp.relpath(\"myadd.so\"), [temp.relpath(\"myadd.o\")])\r\nprint(temp.listdir())\r\n\r\n######################################################################\r\n# .. note:: Module Storage Format\r\n#\r\n#   The CPU (host) module is directly saved as a shared library (.so).\r\n#   There can be multiple customized formats of the device code.\r\n#   In our example, the device code is stored in ptx, as well as a meta\r\n#   data json file. They can be loaded and linked separately via import.\r\n#\r\n\r\n######################################################################\r\n# Load Compiled Module\r\n# --------------------\r\n# We can load the compiled module from the file system and run the code.\r\n# The following code loads the host and device module separately and\r\n# re-links them together. We can verify that the newly loaded function works.\r\n#\r\nfadd1 = tvm.runtime.load_module(temp.relpath(\"myadd.so\"))\r\nif tgt == \"cuda\":\r\n    fadd1_dev = tvm.runtime.load_module(temp.relpath(\"myadd.ptx\"))\r\n    fadd1.import_module(fadd1_dev)\r\n\r\nif tgt == \"rocm\":\r\n    fadd1_dev = tvm.runtime.load_module(temp.relpath(\"myadd.hsaco\"))\r\n    fadd1.import_module(fadd1_dev)\r\n\r\nif tgt.startswith('opencl'):\r\n    fadd1_dev = tvm.runtime.load_module(temp.relpath(\"myadd.cl\"))\r\n    fadd1.import_module(fadd1_dev)\r\n\r\nif tgt.startswith('metal'):\r\n    fadd1_dev = tvm.runtime.load_module(temp.relpath(\"myadd.metal\"))\r\n    fadd1.import_module(fadd1_dev)\r\n\r\nfadd1(a, b, c)\r\ntvm.testing.assert_allclose(c.asnumpy(), a.asnumpy() + b.asnumpy())\r\n\r\n######################################################################\r\n# Pack Everything into One Library\r\n# --------------------------------\r\n# In the above example, we store the device and host code separately.\r\n# TVM also supports export everything as one shared library.\r\n# Under the hood, we pack the device modules into binary blobs and link\r\n# them together with the host code.\r\n# Currently we support packing of Metal, OpenCL and CUDA modules.\r\n#\r\nfadd.export_library(temp.relpath(\"myadd_pack.so\"))\r\nfadd2 = tvm.runtime.load_module(temp.relpath(\"myadd_pack.so\"))\r\nfadd2(a, b, c)\r\ntvm.testing.assert_allclose(c.asnumpy(), a.asnumpy() + b.asnumpy())\r\n\r\n######################################################################\r\n# .. note:: Runtime API and Thread-Safety\r\n#\r\n#   The compiled modules of TVM do not depend on the TVM compiler.\r\n#   Instead, they only depend on a minimum runtime library.\r\n#   The TVM runtime library wraps the device drivers and provides\r\n#   thread-safe and device agnostic calls into the compiled functions.\r\n#\r\n#   This means that you can call the compiled TVM functions from any thread,\r\n#   on any GPUs.\r\n#\r\n\r\n######################################################################\r\n# Generate OpenCL Code\r\n# --------------------\r\n# TVM provides code generation features into multiple backends,\r\n# we can also generate OpenCL code or LLVM code that runs on CPU backends.\r\n#\r\n# The following code blocks generate OpenCL code, creates array on an OpenCL\r\n# device, and verifies the correctness of the code.\r\n#\r\nif tgt.startswith('opencl'):\r\n    fadd_cl = tvm.build(s, [A, B, C], tgt, name=\"myadd\")\r\n    print(\"------opencl code------\")\r\n    print(fadd_cl.imported_modules[0].get_source())\r\n    ctx = tvm.cl(0)\r\n    n = 1024\r\n    a = tvm.nd.array(np.random.uniform(size=n).astype(A.dtype), ctx)\r\n    b = tvm.nd.array(np.random.uniform(size=n).astype(B.dtype), ctx)\r\n    c = tvm.nd.array(np.zeros(n, dtype=C.dtype), ctx)\r\n    fadd_cl(a, b, c)\r\n    tvm.testing.assert_allclose(c.asnumpy(), a.asnumpy() + b.asnumpy())\r\n\r\n######################################################################\r\n# Summary\r\n# -------\r\n# This tutorial provides a walk through of TVM workflow using\r\n# a vector add example. The general workflow is\r\n#\r\n# - Describe your computation via a series of operations.\r\n# - Describe how we want to compute use schedule primitives.\r\n# - Compile to the target function we want.\r\n# - Optionally, save the function to be loaded later.\r\n#\r\n# You are more than welcome to checkout other examples and\r\n# tutorials to learn more about the supported operations, scheduling primitives\r\n# and other features in TVM.\r\n#\r\n```\r\n\r\nSo I am at a loss, Metal is working and not working.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/609525470/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/609528569","html_url":"https://github.com/apache/tvm/issues/5242#issuecomment-609528569","issue_url":"https://api.github.com/repos/apache/tvm/issues/5242","id":609528569,"node_id":"MDEyOklzc3VlQ29tbWVudDYwOTUyODU2OQ==","user":{"login":"kognat-docs","id":62274503,"node_id":"MDQ6VXNlcjYyMjc0NTAz","avatar_url":"https://avatars.githubusercontent.com/u/62274503?v=4","gravatar_id":"","url":"https://api.github.com/users/kognat-docs","html_url":"https://github.com/kognat-docs","followers_url":"https://api.github.com/users/kognat-docs/followers","following_url":"https://api.github.com/users/kognat-docs/following{/other_user}","gists_url":"https://api.github.com/users/kognat-docs/gists{/gist_id}","starred_url":"https://api.github.com/users/kognat-docs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kognat-docs/subscriptions","organizations_url":"https://api.github.com/users/kognat-docs/orgs","repos_url":"https://api.github.com/users/kognat-docs/repos","events_url":"https://api.github.com/users/kognat-docs/events{/privacy}","received_events_url":"https://api.github.com/users/kognat-docs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-06T02:00:19Z","updated_at":"2020-04-06T02:00:19Z","author_association":"NONE","body":"The solution was found here\r\n\r\n```\r\nbrew install pkg-config libffi\r\nPKG_CONFIG_PATH=/usr/local/opt/libffi/lib/pkgconfig pip install cffi\r\n```","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/609528569/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/609536929","html_url":"https://github.com/apache/tvm/issues/5242#issuecomment-609536929","issue_url":"https://api.github.com/repos/apache/tvm/issues/5242","id":609536929,"node_id":"MDEyOklzc3VlQ29tbWVudDYwOTUzNjkyOQ==","user":{"login":"kognat-docs","id":62274503,"node_id":"MDQ6VXNlcjYyMjc0NTAz","avatar_url":"https://avatars.githubusercontent.com/u/62274503?v=4","gravatar_id":"","url":"https://api.github.com/users/kognat-docs","html_url":"https://github.com/kognat-docs","followers_url":"https://api.github.com/users/kognat-docs/followers","following_url":"https://api.github.com/users/kognat-docs/following{/other_user}","gists_url":"https://api.github.com/users/kognat-docs/gists{/gist_id}","starred_url":"https://api.github.com/users/kognat-docs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kognat-docs/subscriptions","organizations_url":"https://api.github.com/users/kognat-docs/orgs","repos_url":"https://api.github.com/users/kognat-docs/repos","events_url":"https://api.github.com/users/kognat-docs/events{/privacy}","received_events_url":"https://api.github.com/users/kognat-docs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-06T02:41:27Z","updated_at":"2020-04-06T02:41:27Z","author_association":"NONE","body":"Other issue on same setup:\r\nhttps://github.com/apache/incubator-tvm/issues/5244","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/609536929/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/609550504","html_url":"https://github.com/apache/tvm/issues/5244#issuecomment-609550504","issue_url":"https://api.github.com/repos/apache/tvm/issues/5244","id":609550504,"node_id":"MDEyOklzc3VlQ29tbWVudDYwOTU1MDUwNA==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-06T03:46:48Z","updated_at":"2020-04-06T03:48:31Z","author_association":"MEMBER","body":"The community uses the discuss forum for such kind of trouble shooting questions, please use a discuss forum thread for the problem","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/609550504/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/609551778","html_url":"https://github.com/apache/tvm/issues/5244#issuecomment-609551778","issue_url":"https://api.github.com/repos/apache/tvm/issues/5244","id":609551778,"node_id":"MDEyOklzc3VlQ29tbWVudDYwOTU1MTc3OA==","user":{"login":"kognat-docs","id":62274503,"node_id":"MDQ6VXNlcjYyMjc0NTAz","avatar_url":"https://avatars.githubusercontent.com/u/62274503?v=4","gravatar_id":"","url":"https://api.github.com/users/kognat-docs","html_url":"https://github.com/kognat-docs","followers_url":"https://api.github.com/users/kognat-docs/followers","following_url":"https://api.github.com/users/kognat-docs/following{/other_user}","gists_url":"https://api.github.com/users/kognat-docs/gists{/gist_id}","starred_url":"https://api.github.com/users/kognat-docs/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kognat-docs/subscriptions","organizations_url":"https://api.github.com/users/kognat-docs/orgs","repos_url":"https://api.github.com/users/kognat-docs/repos","events_url":"https://api.github.com/users/kognat-docs/events{/privacy}","received_events_url":"https://api.github.com/users/kognat-docs/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-06T03:54:00Z","updated_at":"2020-04-06T03:54:00Z","author_association":"NONE","body":"Already done: https://discuss.tvm.ai/t/using-metal-but-tvm-asking-for-cuda-use-llvm-on-use-metal-on/6234\r\n\r\nBut a backtrace using the software as intended is not trouble shooting.\r\n\r\nIt is a software defect.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/609551778/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/609551852","html_url":"https://github.com/apache/tvm/pull/5214#issuecomment-609551852","issue_url":"https://api.github.com/repos/apache/tvm/issues/5214","id":609551852,"node_id":"MDEyOklzc3VlQ29tbWVudDYwOTU1MTg1Mg==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-06T03:54:30Z","updated_at":"2020-04-06T03:54:41Z","author_association":"MEMBER","body":"@wpan11nv @yongfeng-nv  can you suggest a bit about possible optimizations that can be done?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/609551852/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/609552445","html_url":"https://github.com/apache/tvm/pull/5243#issuecomment-609552445","issue_url":"https://api.github.com/repos/apache/tvm/issues/5243","id":609552445,"node_id":"MDEyOklzc3VlQ29tbWVudDYwOTU1MjQ0NQ==","user":{"login":"masahi","id":1776403,"node_id":"MDQ6VXNlcjE3NzY0MDM=","avatar_url":"https://avatars.githubusercontent.com/u/1776403?v=4","gravatar_id":"","url":"https://api.github.com/users/masahi","html_url":"https://github.com/masahi","followers_url":"https://api.github.com/users/masahi/followers","following_url":"https://api.github.com/users/masahi/following{/other_user}","gists_url":"https://api.github.com/users/masahi/gists{/gist_id}","starred_url":"https://api.github.com/users/masahi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/masahi/subscriptions","organizations_url":"https://api.github.com/users/masahi/orgs","repos_url":"https://api.github.com/users/masahi/repos","events_url":"https://api.github.com/users/masahi/events{/privacy}","received_events_url":"https://api.github.com/users/masahi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-06T03:58:06Z","updated_at":"2020-04-06T11:02:09Z","author_association":"MEMBER","body":"Hi @kevinthesun, I started experimenting with how to integrate static tensor array in Torch frontend. My use case is to support Python tensor list append and stack. I got two problems below:\r\n\r\n1. When I append the tensor to tensor array (by concat), I can do infer shape on the input tensor to get the fixed shape static tensor array expects. But after I've done some appends and try to stack the static tensor array, I don't have a way to tell what fixed shape the input tensor array to stack expects. See\r\nhttps://github.com/masahi/tvm/blob/support-more-rnn/python/tvm/relay/frontend/pytorch.py#L989-L990\r\nSince the shape is fixed, I think there should be an easy way to query the shape associated with a static array. I see you have such function `check_tensor_array_shape` in this PR (by parsing op name). Is this the recommended way?\r\n\r\n2. The output type of stack is currently `static_tensor_float32_?_2_4_t[]` in my test. Is there a way to easily unwrap static tensor type wrapper and get  relay `Tensor`? @wweic had such unwrapper in https://github.com/apache/incubator-tvm/pull/4325 for generic arrays. We should have something equivalent for static arrays.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/609552445/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/609552784","html_url":"https://github.com/apache/tvm/issues/5244#issuecomment-609552784","issue_url":"https://api.github.com/repos/apache/tvm/issues/5244","id":609552784,"node_id":"MDEyOklzc3VlQ29tbWVudDYwOTU1Mjc4NA==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-06T04:00:18Z","updated_at":"2020-04-06T04:00:18Z","author_association":"MEMBER","body":"There is certainly a blurred line here. But as you can see from other trouble shooting threads, many of them do involves problems that the community work collectively to fix, regardless being on an issue tracker for the discuss forum :) I have followed up on https://discuss.tvm.ai/t/unable-to-get-started-with-metal-on-macos-10-13-with-radeon-pro-560-4096-mb/6209/4","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/609552784/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/609553375","html_url":"https://github.com/apache/tvm/issues/5244#issuecomment-609553375","issue_url":"https://api.github.com/repos/apache/tvm/issues/5244","id":609553375,"node_id":"MDEyOklzc3VlQ29tbWVudDYwOTU1MzM3NQ==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-06T04:03:49Z","updated_at":"2020-04-06T04:03:49Z","author_association":"MEMBER","body":" cc @Shawn-Inspur @Hzfengsy please followup on the post","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/609553375/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/609555750","html_url":"https://github.com/apache/tvm/issues/5113#issuecomment-609555750","issue_url":"https://api.github.com/repos/apache/tvm/issues/5113","id":609555750,"node_id":"MDEyOklzc3VlQ29tbWVudDYwOTU1NTc1MA==","user":{"login":"Leebsun","id":26183056,"node_id":"MDQ6VXNlcjI2MTgzMDU2","avatar_url":"https://avatars.githubusercontent.com/u/26183056?v=4","gravatar_id":"","url":"https://api.github.com/users/Leebsun","html_url":"https://github.com/Leebsun","followers_url":"https://api.github.com/users/Leebsun/followers","following_url":"https://api.github.com/users/Leebsun/following{/other_user}","gists_url":"https://api.github.com/users/Leebsun/gists{/gist_id}","starred_url":"https://api.github.com/users/Leebsun/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Leebsun/subscriptions","organizations_url":"https://api.github.com/users/Leebsun/orgs","repos_url":"https://api.github.com/users/Leebsun/repos","events_url":"https://api.github.com/users/Leebsun/events{/privacy}","received_events_url":"https://api.github.com/users/Leebsun/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-06T04:16:25Z","updated_at":"2020-04-06T04:16:25Z","author_association":"NONE","body":"Did you solve this?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/609555750/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/609583403","html_url":"https://github.com/apache/tvm/pull/5214#issuecomment-609583403","issue_url":"https://api.github.com/repos/apache/tvm/issues/5214","id":609583403,"node_id":"MDEyOklzc3VlQ29tbWVudDYwOTU4MzQwMw==","user":{"login":"yongfeng-nv","id":49211903,"node_id":"MDQ6VXNlcjQ5MjExOTAz","avatar_url":"https://avatars.githubusercontent.com/u/49211903?v=4","gravatar_id":"","url":"https://api.github.com/users/yongfeng-nv","html_url":"https://github.com/yongfeng-nv","followers_url":"https://api.github.com/users/yongfeng-nv/followers","following_url":"https://api.github.com/users/yongfeng-nv/following{/other_user}","gists_url":"https://api.github.com/users/yongfeng-nv/gists{/gist_id}","starred_url":"https://api.github.com/users/yongfeng-nv/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yongfeng-nv/subscriptions","organizations_url":"https://api.github.com/users/yongfeng-nv/orgs","repos_url":"https://api.github.com/users/yongfeng-nv/repos","events_url":"https://api.github.com/users/yongfeng-nv/events{/privacy}","received_events_url":"https://api.github.com/users/yongfeng-nv/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-06T06:05:15Z","updated_at":"2020-04-06T06:05:15Z","author_association":"CONTRIBUTOR","body":"> @wpan11nv @yongfeng-nv can you suggest a bit about possible optimizations that can be done?\r\n\r\nWe don't know the details, but will look into it.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/609583403/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/609598805","html_url":"https://github.com/apache/tvm/pull/5241#issuecomment-609598805","issue_url":"https://api.github.com/repos/apache/tvm/issues/5241","id":609598805,"node_id":"MDEyOklzc3VlQ29tbWVudDYwOTU5ODgwNQ==","user":{"login":"anijain2305","id":13822661,"node_id":"MDQ6VXNlcjEzODIyNjYx","avatar_url":"https://avatars.githubusercontent.com/u/13822661?v=4","gravatar_id":"","url":"https://api.github.com/users/anijain2305","html_url":"https://github.com/anijain2305","followers_url":"https://api.github.com/users/anijain2305/followers","following_url":"https://api.github.com/users/anijain2305/following{/other_user}","gists_url":"https://api.github.com/users/anijain2305/gists{/gist_id}","starred_url":"https://api.github.com/users/anijain2305/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/anijain2305/subscriptions","organizations_url":"https://api.github.com/users/anijain2305/orgs","repos_url":"https://api.github.com/users/anijain2305/repos","events_url":"https://api.github.com/users/anijain2305/events{/privacy}","received_events_url":"https://api.github.com/users/anijain2305/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-06T06:51:11Z","updated_at":"2020-04-06T06:51:11Z","author_association":"CONTRIBUTOR","body":"Do you know why windows build is failing?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/609598805/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/609601354","html_url":"https://github.com/apache/tvm/pull/5241#issuecomment-609601354","issue_url":"https://api.github.com/repos/apache/tvm/issues/5241","id":609601354,"node_id":"MDEyOklzc3VlQ29tbWVudDYwOTYwMTM1NA==","user":{"login":"icemelon","id":2696494,"node_id":"MDQ6VXNlcjI2OTY0OTQ=","avatar_url":"https://avatars.githubusercontent.com/u/2696494?v=4","gravatar_id":"","url":"https://api.github.com/users/icemelon","html_url":"https://github.com/icemelon","followers_url":"https://api.github.com/users/icemelon/followers","following_url":"https://api.github.com/users/icemelon/following{/other_user}","gists_url":"https://api.github.com/users/icemelon/gists{/gist_id}","starred_url":"https://api.github.com/users/icemelon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/icemelon/subscriptions","organizations_url":"https://api.github.com/users/icemelon/orgs","repos_url":"https://api.github.com/users/icemelon/repos","events_url":"https://api.github.com/users/icemelon/events{/privacy}","received_events_url":"https://api.github.com/users/icemelon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-06T06:58:02Z","updated_at":"2020-04-06T06:58:32Z","author_association":"MEMBER","body":"Not really. The log shows the error\r\n```\r\n2020-04-05T22:36:45.4562113Z D:\\a\\incubator-tvm\\incubator-tvm\\topi\\src\\topi.cc : fatal error C1128: number of sections exceeded object file format limit: compile with /bigobj [D:\\a\\incubator-tvm\\incubator-tvm\\build.common\\tvm_topi.vcxproj]\r\n```\r\n\r\nBut in TVM cmake, we already set the [`/bigobj`](https://github.com/apache/incubator-tvm/blob/master/CMakeLists.txt#L90) option.\r\n\r\n@tqchen Do you have a better idea?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/609601354/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/609602675","html_url":"https://github.com/apache/tvm/pull/5243#issuecomment-609602675","issue_url":"https://api.github.com/repos/apache/tvm/issues/5243","id":609602675,"node_id":"MDEyOklzc3VlQ29tbWVudDYwOTYwMjY3NQ==","user":{"login":"masahi","id":1776403,"node_id":"MDQ6VXNlcjE3NzY0MDM=","avatar_url":"https://avatars.githubusercontent.com/u/1776403?v=4","gravatar_id":"","url":"https://api.github.com/users/masahi","html_url":"https://github.com/masahi","followers_url":"https://api.github.com/users/masahi/followers","following_url":"https://api.github.com/users/masahi/following{/other_user}","gists_url":"https://api.github.com/users/masahi/gists{/gist_id}","starred_url":"https://api.github.com/users/masahi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/masahi/subscriptions","organizations_url":"https://api.github.com/users/masahi/orgs","repos_url":"https://api.github.com/users/masahi/repos","events_url":"https://api.github.com/users/masahi/events{/privacy}","received_events_url":"https://api.github.com/users/masahi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-06T07:01:30Z","updated_at":"2020-04-06T10:55:34Z","author_association":"MEMBER","body":"Update: With the new static tensor array, I got the following PyTorch LSTM model, originally from the fastrnn benchmark in PyTorch repo here https://github.com/pytorch/pytorch/blob/master/benchmarks/fastrnns/custom_lstms.py#L187, converted correctly to Relay and got the identical result as torch! It was not possible with generic tensor array. @kevinthesun @wweic \r\n\r\n```Py\r\nclass LSTMCell(jit.ScriptModule):\r\n    def __init__(self, input_size, hidden_size):\r\n        super().__init__()\r\n        self.input_size = input_size\r\n        self.hidden_size = hidden_size\r\n        self.weight_ih = Parameter(torch.randn(4 * hidden_size, input_size))\r\n        self.weight_hh = Parameter(torch.randn(4 * hidden_size, hidden_size))\r\n        self.bias_ih = Parameter(torch.randn(4 * hidden_size))\r\n        self.bias_hh = Parameter(torch.randn(4 * hidden_size))\r\n\r\n    @jit.script_method\r\n    def forward(self, input, state):\r\n        # type: (Tensor, Tuple[Tensor, Tensor]) -> Tuple[Tensor, Tuple[Tensor, Tensor]]\r\n        hx, cx = state\r\n        gates = (torch.mm(input, self.weight_ih.t()) + self.bias_ih +\r\n                 torch.mm(hx, self.weight_hh.t()) + self.bias_hh)\r\n        ingate, forgetgate, cellgate, outgate = gates.chunk(4, 1)\r\n\r\n        ingate = torch.sigmoid(ingate)\r\n        forgetgate = torch.sigmoid(forgetgate)\r\n        cellgate = torch.tanh(cellgate)\r\n        outgate = torch.sigmoid(outgate)\r\n\r\n        cy = (forgetgate * cx) + (ingate * cellgate)\r\n        hy = outgate * torch.tanh(cy)\r\n\r\n        return hy, (hy, cy)\r\n\r\n\r\nclass LSTMLayer(jit.ScriptModule):\r\n    def __init__(self, cell, *cell_args):\r\n        super().__init__()\r\n        self.cell = cell(*cell_args)\r\n\r\n    @jit.script_method\r\n    def forward(self, input, state):\r\n        # type: (Tensor, Tuple[Tensor, Tensor]) -> Tuple[Tensor, Tuple[Tensor, Tensor]]\r\n        outputs = []\r\n        for i in range(input.size(0)):\r\n            out, state = self.cell(input[i], state)\r\n            outputs += [out]\r\n        return torch.stack(outputs), state\r\n```\r\n\r\nHere is the converted Relay IR:\r\n```\r\nfn (%input: Tensor[(5, 2, 3), float32], %v25: Tensor[(16, 3), float32], %v28: Tensor[(16), float32], %v30: Tensor[(16, 4), float32], %v34: Tensor[(16), float32], %states: (Tensor[(2, 4), float32], Tensor[(2, 4), float32])) -> (static_tensor_float32_?_2_4_t[], (Tensor[(2, 4), float32], Tensor[(2, 4), float32])) {\r\n  %0 = Nil /* ty=List[static_tensor_float32_2_4_t[]] */;\r\n  %36 = (\r\n    let %while_loop: fn (int32, List[static_tensor_float32_2_4_t[]], (Tensor[(2, 4), float32], Tensor[(2, 4), float32])) -> (int32, List[static_tensor_float32_2_4_t[]], (Tensor[(2, 4), float32], Tensor[(2, 4), float32])) = fn (%i.1: int32, %outputs.6: List[static_tensor_float32_2_4_t[]], %state.6: (Tensor[(2, 4), float32], Tensor[(2, 4), float32])) -> (int32, List[static_tensor_float32_2_4_t[]], (Tensor[(2, 4), float32], Tensor[(2, 4), float32])) {\r\n      %1 = less(%i.1, 5 /* ty=int32 */) /* ty=bool */;\r\n      if (%1) {\r\n        %2 = add(%i.1, 1 /* ty=int32 */) /* ty=int32 */;\r\n        %3 = take(%input, %i.1, axis=0) /* ty=Tensor[(2, 3), float32] */;\r\n        %4 = transpose(%v25, axes=[1, 0]) /* ty=Tensor[(3, 16), float32] */;\r\n        %5 = transpose(%4, axes=[1, 0]) /* ty=Tensor[(16, 3), float32] */;\r\n        %6 = nn.dense(%3, %5, units=None) /* ty=Tensor[(2, 16), float32] */;\r\n        %7 = add(%6, %v28) /* ty=Tensor[(2, 16), float32] */;\r\n        %8 = %state.6.0;\r\n        %9 = transpose(%v30, axes=[1, 0]) /* ty=Tensor[(4, 16), float32] */;\r\n        %10 = transpose(%9, axes=[1, 0]) /* ty=Tensor[(16, 4), float32] */;\r\n        %11 = nn.dense(%8, %10, units=None) /* ty=Tensor[(2, 16), float32] */;\r\n        %12 = add(%7, %11) /* ty=Tensor[(2, 16), float32] */;\r\n        %13 = add(%12, %v34) /* ty=Tensor[(2, 16), float32] */;\r\n        %14 = strided_slice(%13, begin=[0, 12], end=[2, 16], strides=[1, 1]) /* ty=Tensor[(2, 4), float32] */;\r\n        %15 = sigmoid(%14) /* ty=Tensor[(2, 4), float32] */;\r\n        %16 = strided_slice(%13, begin=[0, 4], end=[2, 8], strides=[1, 1]) /* ty=Tensor[(2, 4), float32] */;\r\n        %17 = sigmoid(%16) /* ty=Tensor[(2, 4), float32] */;\r\n        %18 = %state.6.1;\r\n        %19 = multiply(%17, %18) /* ty=Tensor[(2, 4), float32] */;\r\n        %20 = strided_slice(%13, begin=[0, 0], end=[2, 4], strides=[1, 1]) /* ty=Tensor[(2, 4), float32] */;\r\n        %21 = sigmoid(%20) /* ty=Tensor[(2, 4), float32] */;\r\n        %22 = strided_slice(%13, begin=[0, 8], end=[2, 12], strides=[1, 1]) /* ty=Tensor[(2, 4), float32] */;\r\n        %23 = tanh(%22) /* ty=Tensor[(2, 4), float32] */;\r\n        %24 = multiply(%21, %23) /* ty=Tensor[(2, 4), float32] */;\r\n        %25 = add(%19, %24) /* ty=Tensor[(2, 4), float32] */;\r\n        %26 = tanh(%25) /* ty=Tensor[(2, 4), float32] */;\r\n        %27 = multiply(%15, %26) /* ty=Tensor[(2, 4), float32] */;\r\n        %28 = (%27, %25);\r\n        %29 = (%27, %28);\r\n        %30 = %29.0;\r\n        %31 = tensor_constructor_float32_2_4(%30) /* ty=static_tensor_float32_2_4_t[] */;\r\n        %32 = Nil /* ty=List[static_tensor_float32_2_4_t[]] */;\r\n        %33 = Cons(%31, %32) /* ty=List[static_tensor_float32_2_4_t[]] */;\r\n        %34 = @concat(%outputs.6, %33) /* ty=List[static_tensor_float32_2_4_t[]] */;\r\n        %35 = %29.1;\r\n        %while_loop(%2, %34, %35) /* ty=(int32, List[static_tensor_float32_2_4_t[]], (Tensor[(2, 4), float32], Tensor[(2, 4), float32])) */\r\n      } else {\r\n        (%i.1, %outputs.6, %state.6)\r\n      }\r\n    };\r\n    %while_loop\r\n  );\r\n  %37 = %36(0 /* ty=int32 */, %0, %states) /* ty=(int32, List[static_tensor_float32_2_4_t[]], (Tensor[(2, 4), float32], Tensor[(2, 4), float32])) */;\r\n  %38 = %37.1;\r\n  %39 = @tensor_array_stack_float32_2_4(%38) /* ty=static_tensor_float32_?_2_4_t[] */;\r\n  %40 = %37.2;\r\n  (%39, %40)\r\n}\r\n\r\n```","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/609602675/reactions","total_count":2,"+1":1,"-1":0,"laugh":0,"hooray":1,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/609603405","html_url":"https://github.com/apache/tvm/pull/5238#issuecomment-609603405","issue_url":"https://api.github.com/repos/apache/tvm/issues/5238","id":609603405,"node_id":"MDEyOklzc3VlQ29tbWVudDYwOTYwMzQwNQ==","user":{"login":"chinakook","id":5417628,"node_id":"MDQ6VXNlcjU0MTc2Mjg=","avatar_url":"https://avatars.githubusercontent.com/u/5417628?v=4","gravatar_id":"","url":"https://api.github.com/users/chinakook","html_url":"https://github.com/chinakook","followers_url":"https://api.github.com/users/chinakook/followers","following_url":"https://api.github.com/users/chinakook/following{/other_user}","gists_url":"https://api.github.com/users/chinakook/gists{/gist_id}","starred_url":"https://api.github.com/users/chinakook/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/chinakook/subscriptions","organizations_url":"https://api.github.com/users/chinakook/orgs","repos_url":"https://api.github.com/users/chinakook/repos","events_url":"https://api.github.com/users/chinakook/events{/privacy}","received_events_url":"https://api.github.com/users/chinakook/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-06T07:03:28Z","updated_at":"2020-04-06T07:04:20Z","author_association":"CONTRIBUTOR","body":"@icemelon9 what kind of tests, please? Failure case I've met with?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/609603405/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/609674361","html_url":"https://github.com/apache/tvm/pull/5219#issuecomment-609674361","issue_url":"https://api.github.com/repos/apache/tvm/issues/5219","id":609674361,"node_id":"MDEyOklzc3VlQ29tbWVudDYwOTY3NDM2MQ==","user":{"login":"kazum","id":812126,"node_id":"MDQ6VXNlcjgxMjEyNg==","avatar_url":"https://avatars.githubusercontent.com/u/812126?v=4","gravatar_id":"","url":"https://api.github.com/users/kazum","html_url":"https://github.com/kazum","followers_url":"https://api.github.com/users/kazum/followers","following_url":"https://api.github.com/users/kazum/following{/other_user}","gists_url":"https://api.github.com/users/kazum/gists{/gist_id}","starred_url":"https://api.github.com/users/kazum/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kazum/subscriptions","organizations_url":"https://api.github.com/users/kazum/orgs","repos_url":"https://api.github.com/users/kazum/repos","events_url":"https://api.github.com/users/kazum/events{/privacy}","received_events_url":"https://api.github.com/users/kazum/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-06T09:15:09Z","updated_at":"2020-04-06T09:15:09Z","author_association":"CONTRIBUTOR","body":"Okay, I'll give it a try.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/609674361/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/609771744","html_url":"https://github.com/apache/tvm/issues/5245#issuecomment-609771744","issue_url":"https://api.github.com/repos/apache/tvm/issues/5245","id":609771744,"node_id":"MDEyOklzc3VlQ29tbWVudDYwOTc3MTc0NA==","user":{"login":"roastduck","id":6522983,"node_id":"MDQ6VXNlcjY1MjI5ODM=","avatar_url":"https://avatars.githubusercontent.com/u/6522983?v=4","gravatar_id":"","url":"https://api.github.com/users/roastduck","html_url":"https://github.com/roastduck","followers_url":"https://api.github.com/users/roastduck/followers","following_url":"https://api.github.com/users/roastduck/following{/other_user}","gists_url":"https://api.github.com/users/roastduck/gists{/gist_id}","starred_url":"https://api.github.com/users/roastduck/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/roastduck/subscriptions","organizations_url":"https://api.github.com/users/roastduck/orgs","repos_url":"https://api.github.com/users/roastduck/repos","events_url":"https://api.github.com/users/roastduck/events{/privacy}","received_events_url":"https://api.github.com/users/roastduck/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-06T12:45:08Z","updated_at":"2020-04-06T12:45:08Z","author_association":"CONTRIBUTOR","body":"Well, `%s/Mutate_/VisitExpr_` solves the problem. I will make a PR.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/609771744/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/609835385","html_url":"https://github.com/apache/tvm/pull/5241#issuecomment-609835385","issue_url":"https://api.github.com/repos/apache/tvm/issues/5241","id":609835385,"node_id":"MDEyOklzc3VlQ29tbWVudDYwOTgzNTM4NQ==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-06T14:39:10Z","updated_at":"2020-04-06T14:39:10Z","author_association":"MEMBER","body":"Let us try to break topi.cc into multiple files grouped by their .h","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/609835385/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/609870727","html_url":"https://github.com/apache/tvm/pull/5240#issuecomment-609870727","issue_url":"https://api.github.com/repos/apache/tvm/issues/5240","id":609870727,"node_id":"MDEyOklzc3VlQ29tbWVudDYwOTg3MDcyNw==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-06T15:38:58Z","updated_at":"2020-04-06T15:38:58Z","author_association":"MEMBER","body":"I will reply to do once the CI image is updated, should be in this week ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/609870727/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/609871178","html_url":"https://github.com/apache/tvm/pull/5240#issuecomment-609871178","issue_url":"https://api.github.com/repos/apache/tvm/issues/5240","id":609871178,"node_id":"MDEyOklzc3VlQ29tbWVudDYwOTg3MTE3OA==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-06T15:39:49Z","updated_at":"2020-04-06T15:39:49Z","author_association":"MEMBER","body":"Just to confirm again, does the mxnet-mkl works on machines with AMD cpu?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/609871178/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/609873168","html_url":"https://github.com/apache/tvm/pull/5238#issuecomment-609873168","issue_url":"https://api.github.com/repos/apache/tvm/issues/5238","id":609873168,"node_id":"MDEyOklzc3VlQ29tbWVudDYwOTg3MzE2OA==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-06T15:43:06Z","updated_at":"2020-04-06T15:43:06Z","author_association":"MEMBER","body":"I am going to merge this for now, given it is a change to the nnvm code. However, based on my current impression, I am not really sure if such relaxation should be done, given that node2index is supposed to only contain nodes in the graph, @chinakook would be great if you can comment a bit.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/609873168/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/609873561","html_url":"https://github.com/apache/tvm/pull/5247#issuecomment-609873561","issue_url":"https://api.github.com/repos/apache/tvm/issues/5247","id":609873561,"node_id":"MDEyOklzc3VlQ29tbWVudDYwOTg3MzU2MQ==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-06T15:43:47Z","updated_at":"2020-04-06T15:50:52Z","author_association":"MEMBER","body":"Indeed we need better test coverage for this pass. Thanks @roastduck ! ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/609873561/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/609874135","html_url":"https://github.com/apache/tvm/issues/5245#issuecomment-609874135","issue_url":"https://api.github.com/repos/apache/tvm/issues/5245","id":609874135,"node_id":"MDEyOklzc3VlQ29tbWVudDYwOTg3NDEzNQ==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-06T15:44:44Z","updated_at":"2020-04-06T15:44:44Z","author_association":"MEMBER","body":"Closed by #5247, thanks @roastduck ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/609874135/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/609874843","html_url":"https://github.com/apache/tvm/pull/5240#issuecomment-609874843","issue_url":"https://api.github.com/repos/apache/tvm/issues/5240","id":609874843,"node_id":"MDEyOklzc3VlQ29tbWVudDYwOTg3NDg0Mw==","user":{"login":"shoubhik","id":2293791,"node_id":"MDQ6VXNlcjIyOTM3OTE=","avatar_url":"https://avatars.githubusercontent.com/u/2293791?v=4","gravatar_id":"","url":"https://api.github.com/users/shoubhik","html_url":"https://github.com/shoubhik","followers_url":"https://api.github.com/users/shoubhik/followers","following_url":"https://api.github.com/users/shoubhik/following{/other_user}","gists_url":"https://api.github.com/users/shoubhik/gists{/gist_id}","starred_url":"https://api.github.com/users/shoubhik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/shoubhik/subscriptions","organizations_url":"https://api.github.com/users/shoubhik/orgs","repos_url":"https://api.github.com/users/shoubhik/repos","events_url":"https://api.github.com/users/shoubhik/events{/privacy}","received_events_url":"https://api.github.com/users/shoubhik/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-06T15:45:56Z","updated_at":"2020-04-06T15:45:56Z","author_association":"CONTRIBUTOR","body":"At this time MKL is only compatible with intel CPUs.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/609874843/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/609875364","html_url":"https://github.com/apache/tvm/pull/5230#issuecomment-609875364","issue_url":"https://api.github.com/repos/apache/tvm/issues/5230","id":609875364,"node_id":"MDEyOklzc3VlQ29tbWVudDYwOTg3NTM2NA==","user":{"login":"shoubhik","id":2293791,"node_id":"MDQ6VXNlcjIyOTM3OTE=","avatar_url":"https://avatars.githubusercontent.com/u/2293791?v=4","gravatar_id":"","url":"https://api.github.com/users/shoubhik","html_url":"https://github.com/shoubhik","followers_url":"https://api.github.com/users/shoubhik/followers","following_url":"https://api.github.com/users/shoubhik/following{/other_user}","gists_url":"https://api.github.com/users/shoubhik/gists{/gist_id}","starred_url":"https://api.github.com/users/shoubhik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/shoubhik/subscriptions","organizations_url":"https://api.github.com/users/shoubhik/orgs","repos_url":"https://api.github.com/users/shoubhik/repos","events_url":"https://api.github.com/users/shoubhik/events{/privacy}","received_events_url":"https://api.github.com/users/shoubhik/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-06T15:46:43Z","updated_at":"2020-04-06T15:46:43Z","author_association":"CONTRIBUTOR","body":"@FrozenGene @yzhliu Can you take a look at the fix for depthwise conv2d with 1 input channel.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/609875364/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/609877110","html_url":"https://github.com/apache/tvm/pull/5240#issuecomment-609877110","issue_url":"https://api.github.com/repos/apache/tvm/issues/5240","id":609877110,"node_id":"MDEyOklzc3VlQ29tbWVudDYwOTg3NzExMA==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-06T15:49:44Z","updated_at":"2020-04-06T15:49:44Z","author_association":"MEMBER","body":"Given that we also have machines with AMD CPUs on the CI fleet, and in the future introduce other kinds of CPUs.\r\n\r\nIt would be great it we can work around the dependency to test the QNN implementations, possibly by using a floating pt reference or slower verison","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/609877110/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/609882439","html_url":"https://github.com/apache/tvm/issues/5248#issuecomment-609882439","issue_url":"https://api.github.com/repos/apache/tvm/issues/5248","id":609882439,"node_id":"MDEyOklzc3VlQ29tbWVudDYwOTg4MjQzOQ==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-06T15:58:52Z","updated_at":"2020-04-06T15:58:52Z","author_association":"MEMBER","body":"cc @kazum @srkreddy1238 @icemelon9  Would be great if we can look into this. \r\n\r\nAlso perhaps we should have a discussion in the discuss forum about existing API conventions for gather nd so that we have a clear picture about what they are and how can we convert from one another","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/609882439/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/609885638","html_url":"https://github.com/apache/tvm/pull/5238#issuecomment-609885638","issue_url":"https://api.github.com/repos/apache/tvm/issues/5238","id":609885638,"node_id":"MDEyOklzc3VlQ29tbWVudDYwOTg4NTYzOA==","user":{"login":"chinakook","id":5417628,"node_id":"MDQ6VXNlcjU0MTc2Mjg=","avatar_url":"https://avatars.githubusercontent.com/u/5417628?v=4","gravatar_id":"","url":"https://api.github.com/users/chinakook","html_url":"https://github.com/chinakook","followers_url":"https://api.github.com/users/chinakook/followers","following_url":"https://api.github.com/users/chinakook/following{/other_user}","gists_url":"https://api.github.com/users/chinakook/gists{/gist_id}","starred_url":"https://api.github.com/users/chinakook/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/chinakook/subscriptions","organizations_url":"https://api.github.com/users/chinakook/orgs","repos_url":"https://api.github.com/users/chinakook/repos","events_url":"https://api.github.com/users/chinakook/events{/privacy}","received_events_url":"https://api.github.com/users/chinakook/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-06T16:04:18Z","updated_at":"2020-04-06T16:04:18Z","author_association":"CONTRIBUTOR","body":"@tqchen  As I'v just tested, It's a op named ```_FusedOp``` that cannot be CHECK success.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/609885638/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/609886066","html_url":"https://github.com/apache/tvm/issues/5250#issuecomment-609886066","issue_url":"https://api.github.com/repos/apache/tvm/issues/5250","id":609886066,"node_id":"MDEyOklzc3VlQ29tbWVudDYwOTg4NjA2Ng==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-06T16:05:04Z","updated_at":"2020-04-06T16:44:44Z","author_association":"MEMBER","body":"cc @wweic @zhiics please see if you can take the rest of the items in the incoming week","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/609886066/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/609888261","html_url":"https://github.com/apache/tvm/pull/5238#issuecomment-609888261","issue_url":"https://api.github.com/repos/apache/tvm/issues/5238","id":609888261,"node_id":"MDEyOklzc3VlQ29tbWVudDYwOTg4ODI2MQ==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-06T16:08:59Z","updated_at":"2020-04-06T16:09:07Z","author_association":"MEMBER","body":"i see, perhaps you also want to confirm with the mxnet community as well to make sure it is the intended behavior cc @szha ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/609888261/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/609889153","html_url":"https://github.com/apache/tvm/pull/5238#issuecomment-609889153","issue_url":"https://api.github.com/repos/apache/tvm/issues/5238","id":609889153,"node_id":"MDEyOklzc3VlQ29tbWVudDYwOTg4OTE1Mw==","user":{"login":"chinakook","id":5417628,"node_id":"MDQ6VXNlcjU0MTc2Mjg=","avatar_url":"https://avatars.githubusercontent.com/u/5417628?v=4","gravatar_id":"","url":"https://api.github.com/users/chinakook","html_url":"https://github.com/chinakook","followers_url":"https://api.github.com/users/chinakook/followers","following_url":"https://api.github.com/users/chinakook/following{/other_user}","gists_url":"https://api.github.com/users/chinakook/gists{/gist_id}","starred_url":"https://api.github.com/users/chinakook/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/chinakook/subscriptions","organizations_url":"https://api.github.com/users/chinakook/orgs","repos_url":"https://api.github.com/users/chinakook/repos","events_url":"https://api.github.com/users/chinakook/events{/privacy}","received_events_url":"https://api.github.com/users/chinakook/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-06T16:10:30Z","updated_at":"2020-04-06T16:10:30Z","author_association":"CONTRIBUTOR","body":"I'm sure some network will be fail to hybridize after this https://github.com/apache/incubator-mxnet/pull/15167 PR. So we can add ```e.node->op()->name.compare(\"_FusedOp\")==0``` at first. However, this op name is specified to mxnet but not tvm.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/609889153/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/609895984","html_url":"https://github.com/apache/tvm/pull/5124#issuecomment-609895984","issue_url":"https://api.github.com/repos/apache/tvm/issues/5124","id":609895984,"node_id":"MDEyOklzc3VlQ29tbWVudDYwOTg5NTk4NA==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-06T16:22:48Z","updated_at":"2020-04-06T16:22:48Z","author_association":"MEMBER","body":"LGTM from my side, @liangfu let us also make sure we add the crt test to the CI. possibly by running some of the quick tests in the apps","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/609895984/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/609907149","html_url":"https://github.com/apache/tvm/pull/5251#issuecomment-609907149","issue_url":"https://api.github.com/repos/apache/tvm/issues/5251","id":609907149,"node_id":"MDEyOklzc3VlQ29tbWVudDYwOTkwNzE0OQ==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-06T16:43:45Z","updated_at":"2020-04-06T16:43:45Z","author_association":"MEMBER","body":"cc @zhiics @wweic ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/609907149/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/609910867","html_url":"https://github.com/apache/tvm/issues/4272#issuecomment-609910867","issue_url":"https://api.github.com/repos/apache/tvm/issues/4272","id":609910867,"node_id":"MDEyOklzc3VlQ29tbWVudDYwOTkxMDg2Nw==","user":{"login":"tmoreau89","id":5974488,"node_id":"MDQ6VXNlcjU5NzQ0ODg=","avatar_url":"https://avatars.githubusercontent.com/u/5974488?v=4","gravatar_id":"","url":"https://api.github.com/users/tmoreau89","html_url":"https://github.com/tmoreau89","followers_url":"https://api.github.com/users/tmoreau89/followers","following_url":"https://api.github.com/users/tmoreau89/following{/other_user}","gists_url":"https://api.github.com/users/tmoreau89/gists{/gist_id}","starred_url":"https://api.github.com/users/tmoreau89/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tmoreau89/subscriptions","organizations_url":"https://api.github.com/users/tmoreau89/orgs","repos_url":"https://api.github.com/users/tmoreau89/repos","events_url":"https://api.github.com/users/tmoreau89/events{/privacy}","received_events_url":"https://api.github.com/users/tmoreau89/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-06T16:50:29Z","updated_at":"2020-04-06T16:50:29Z","author_association":"CONTRIBUTOR","body":"@flip1995 if you could start a new page of the doc (see: https://github.com/apache/incubator-tvm/tree/master/docs/vta), and from your private fork issue a PR. When it's ready please assign the PR to be reviewed by me. Thank you!","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/609910867/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/609924079","html_url":"https://github.com/apache/tvm/pull/5243#issuecomment-609924079","issue_url":"https://api.github.com/repos/apache/tvm/issues/5243","id":609924079,"node_id":"MDEyOklzc3VlQ29tbWVudDYwOTkyNDA3OQ==","user":{"login":"kevinthesun","id":15520525,"node_id":"MDQ6VXNlcjE1NTIwNTI1","avatar_url":"https://avatars.githubusercontent.com/u/15520525?v=4","gravatar_id":"","url":"https://api.github.com/users/kevinthesun","html_url":"https://github.com/kevinthesun","followers_url":"https://api.github.com/users/kevinthesun/followers","following_url":"https://api.github.com/users/kevinthesun/following{/other_user}","gists_url":"https://api.github.com/users/kevinthesun/gists{/gist_id}","starred_url":"https://api.github.com/users/kevinthesun/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kevinthesun/subscriptions","organizations_url":"https://api.github.com/users/kevinthesun/orgs","repos_url":"https://api.github.com/users/kevinthesun/repos","events_url":"https://api.github.com/users/kevinthesun/events{/privacy}","received_events_url":"https://api.github.com/users/kevinthesun/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-06T17:15:17Z","updated_at":"2020-04-06T17:15:17Z","author_association":"CONTRIBUTOR","body":"> 2\\. The output type of stack is currently `static_tensor_float32_?_2_4_t[]` in my test. Is there a way to easily unwrap static tensor type wrapper and get  relay `Tensor`? @wweic had such unwrapper in #4325 for generic arrays. We should have something equivalent for static arrays.\r\n\r\n@masahi You can use [tensor_get_data](https://github.com/apache/incubator-tvm/blob/master/python/tvm/relay/prelude.py#L515) to achieve this.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/609924079/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/609926012","html_url":"https://github.com/apache/tvm/pull/5243#issuecomment-609926012","issue_url":"https://api.github.com/repos/apache/tvm/issues/5243","id":609926012,"node_id":"MDEyOklzc3VlQ29tbWVudDYwOTkyNjAxMg==","user":{"login":"kevinthesun","id":15520525,"node_id":"MDQ6VXNlcjE1NTIwNTI1","avatar_url":"https://avatars.githubusercontent.com/u/15520525?v=4","gravatar_id":"","url":"https://api.github.com/users/kevinthesun","html_url":"https://github.com/kevinthesun","followers_url":"https://api.github.com/users/kevinthesun/followers","following_url":"https://api.github.com/users/kevinthesun/following{/other_user}","gists_url":"https://api.github.com/users/kevinthesun/gists{/gist_id}","starred_url":"https://api.github.com/users/kevinthesun/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kevinthesun/subscriptions","organizations_url":"https://api.github.com/users/kevinthesun/orgs","repos_url":"https://api.github.com/users/kevinthesun/repos","events_url":"https://api.github.com/users/kevinthesun/events{/privacy}","received_events_url":"https://api.github.com/users/kevinthesun/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-06T17:18:58Z","updated_at":"2020-04-06T17:18:58Z","author_association":"CONTRIBUTOR","body":"> 1. When I append the tensor to tensor array (by concat), I can do infer shape on the input tensor to get the fixed shape static tensor array expects. But after I've done some appends and try to stack the static tensor array, I don't have a way to tell what fixed shape the input tensor array to stack expects. See\r\n>    https://github.com/masahi/tvm/blob/support-more-rnn/python/tvm/relay/frontend/pytorch.py#L989-L990\r\n>    Since the shape is fixed, I think there should be an easy way to query the shape associated with a static array. I see you have such function `check_tensor_array_shape` in this PR (by parsing op name). Is this the recommended way?\r\n\r\nYes you can use ```check_tensor_array_shape```. I'll change the name to ```get_tensor_array_shape```.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/609926012/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/609930504","html_url":"https://github.com/apache/tvm/pull/3163#issuecomment-609930504","issue_url":"https://api.github.com/repos/apache/tvm/issues/3163","id":609930504,"node_id":"MDEyOklzc3VlQ29tbWVudDYwOTkzMDUwNA==","user":{"login":"kparzysz-quic","id":48801706,"node_id":"MDQ6VXNlcjQ4ODAxNzA2","avatar_url":"https://avatars.githubusercontent.com/u/48801706?v=4","gravatar_id":"","url":"https://api.github.com/users/kparzysz-quic","html_url":"https://github.com/kparzysz-quic","followers_url":"https://api.github.com/users/kparzysz-quic/followers","following_url":"https://api.github.com/users/kparzysz-quic/following{/other_user}","gists_url":"https://api.github.com/users/kparzysz-quic/gists{/gist_id}","starred_url":"https://api.github.com/users/kparzysz-quic/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kparzysz-quic/subscriptions","organizations_url":"https://api.github.com/users/kparzysz-quic/orgs","repos_url":"https://api.github.com/users/kparzysz-quic/repos","events_url":"https://api.github.com/users/kparzysz-quic/events{/privacy}","received_events_url":"https://api.github.com/users/kparzysz-quic/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-06T17:27:38Z","updated_at":"2020-04-06T17:27:38Z","author_association":"CONTRIBUTOR","body":"Replaced by https://github.com/apache/incubator-tvm/pull/5252.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/609930504/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/609948356","html_url":"https://github.com/apache/tvm/pull/5252#issuecomment-609948356","issue_url":"https://api.github.com/repos/apache/tvm/issues/5252","id":609948356,"node_id":"MDEyOklzc3VlQ29tbWVudDYwOTk0ODM1Ng==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-06T18:01:23Z","updated_at":"2020-04-06T18:01:23Z","author_association":"MEMBER","body":"cc @kazum @tmoreau89 @kazum ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/609948356/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/609983357","html_url":"https://github.com/apache/tvm/pull/5240#issuecomment-609983357","issue_url":"https://api.github.com/repos/apache/tvm/issues/5240","id":609983357,"node_id":"MDEyOklzc3VlQ29tbWVudDYwOTk4MzM1Nw==","user":{"login":"icemelon","id":2696494,"node_id":"MDQ6VXNlcjI2OTY0OTQ=","avatar_url":"https://avatars.githubusercontent.com/u/2696494?v=4","gravatar_id":"","url":"https://api.github.com/users/icemelon","html_url":"https://github.com/icemelon","followers_url":"https://api.github.com/users/icemelon/followers","following_url":"https://api.github.com/users/icemelon/following{/other_user}","gists_url":"https://api.github.com/users/icemelon/gists{/gist_id}","starred_url":"https://api.github.com/users/icemelon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/icemelon/subscriptions","organizations_url":"https://api.github.com/users/icemelon/orgs","repos_url":"https://api.github.com/users/icemelon/repos","events_url":"https://api.github.com/users/icemelon/events{/privacy}","received_events_url":"https://api.github.com/users/icemelon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-06T19:11:45Z","updated_at":"2020-04-06T19:11:45Z","author_association":"MEMBER","body":"So in that case, should we use mxnet==1.6.0 instead of mxnet-mkl?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/609983357/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/610016636","html_url":"https://github.com/apache/tvm/pull/5243#issuecomment-610016636","issue_url":"https://api.github.com/repos/apache/tvm/issues/5243","id":610016636,"node_id":"MDEyOklzc3VlQ29tbWVudDYxMDAxNjYzNg==","user":{"login":"masahi","id":1776403,"node_id":"MDQ6VXNlcjE3NzY0MDM=","avatar_url":"https://avatars.githubusercontent.com/u/1776403?v=4","gravatar_id":"","url":"https://api.github.com/users/masahi","html_url":"https://github.com/masahi","followers_url":"https://api.github.com/users/masahi/followers","following_url":"https://api.github.com/users/masahi/following{/other_user}","gists_url":"https://api.github.com/users/masahi/gists{/gist_id}","starred_url":"https://api.github.com/users/masahi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/masahi/subscriptions","organizations_url":"https://api.github.com/users/masahi/orgs","repos_url":"https://api.github.com/users/masahi/repos","events_url":"https://api.github.com/users/masahi/events{/privacy}","received_events_url":"https://api.github.com/users/masahi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-06T20:22:24Z","updated_at":"2020-04-06T20:22:24Z","author_association":"MEMBER","body":"> @masahi You can use [tensor_get_data](https://github.com/apache/incubator-tvm/blob/master/python/tvm/relay/prelude.py#L515) to achieve this\r\n\r\nAh thanks. I tried to use it on the output of stack, but since the first axis is 'Any', I don't know how to pass `shape` param in `get_var_static('tensor_get_data', \"float32\", shape)`. How do I do it?\r\n\r\nA better question might be, why do we need to pass `shape` all over the place? I'd imagine, intuitively stack and other ops that operate on already existing tensor array should be able to figure out the shape, no?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/610016636/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/610017959","html_url":"https://github.com/apache/tvm/pull/5251#issuecomment-610017959","issue_url":"https://api.github.com/repos/apache/tvm/issues/5251","id":610017959,"node_id":"MDEyOklzc3VlQ29tbWVudDYxMDAxNzk1OQ==","user":{"login":"icemelon","id":2696494,"node_id":"MDQ6VXNlcjI2OTY0OTQ=","avatar_url":"https://avatars.githubusercontent.com/u/2696494?v=4","gravatar_id":"","url":"https://api.github.com/users/icemelon","html_url":"https://github.com/icemelon","followers_url":"https://api.github.com/users/icemelon/followers","following_url":"https://api.github.com/users/icemelon/following{/other_user}","gists_url":"https://api.github.com/users/icemelon/gists{/gist_id}","starred_url":"https://api.github.com/users/icemelon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/icemelon/subscriptions","organizations_url":"https://api.github.com/users/icemelon/orgs","repos_url":"https://api.github.com/users/icemelon/repos","events_url":"https://api.github.com/users/icemelon/events{/privacy}","received_events_url":"https://api.github.com/users/icemelon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-06T20:25:08Z","updated_at":"2020-04-06T20:25:08Z","author_association":"MEMBER","body":"Thanks @tqchen @zhiics ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/610017959/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/610019209","html_url":"https://github.com/apache/tvm/pull/5240#issuecomment-610019209","issue_url":"https://api.github.com/repos/apache/tvm/issues/5240","id":610019209,"node_id":"MDEyOklzc3VlQ29tbWVudDYxMDAxOTIwOQ==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-06T20:27:48Z","updated_at":"2020-04-06T20:27:48Z","author_association":"MEMBER","body":"Yes, I think we should use `mxnet==1.6.0` instead. Unfortunately it does not give a simple answer to @shoubhik 's problem, if mxnet's quantized model support relies on mkl. This is a bullet we have to bite though for broader coverage capabilities.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/610019209/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/610020931","html_url":"https://github.com/apache/tvm/pull/5190#issuecomment-610020931","issue_url":"https://api.github.com/repos/apache/tvm/issues/5190","id":610020931,"node_id":"MDEyOklzc3VlQ29tbWVudDYxMDAyMDkzMQ==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-06T20:31:31Z","updated_at":"2020-04-06T20:31:31Z","author_association":"MEMBER","body":"@Hzfengsy @vinx13 @ZihengJiang can you help to take a look?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/610020931/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/610021128","html_url":"https://github.com/apache/tvm/pull/5249#issuecomment-610021128","issue_url":"https://api.github.com/repos/apache/tvm/issues/5249","id":610021128,"node_id":"MDEyOklzc3VlQ29tbWVudDYxMDAyMTEyOA==","user":{"login":"masahi","id":1776403,"node_id":"MDQ6VXNlcjE3NzY0MDM=","avatar_url":"https://avatars.githubusercontent.com/u/1776403?v=4","gravatar_id":"","url":"https://api.github.com/users/masahi","html_url":"https://github.com/masahi","followers_url":"https://api.github.com/users/masahi/followers","following_url":"https://api.github.com/users/masahi/following{/other_user}","gists_url":"https://api.github.com/users/masahi/gists{/gist_id}","starred_url":"https://api.github.com/users/masahi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/masahi/subscriptions","organizations_url":"https://api.github.com/users/masahi/orgs","repos_url":"https://api.github.com/users/masahi/repos","events_url":"https://api.github.com/users/masahi/events{/privacy}","received_events_url":"https://api.github.com/users/masahi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-06T20:31:57Z","updated_at":"2020-04-06T20:31:57Z","author_association":"MEMBER","body":"Thanks @siju-samuel. I've just met a model with layer norm yesterday, this is immediately useful to me :)","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/610021128/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/610029111","html_url":"https://github.com/apache/tvm/pull/5243#issuecomment-610029111","issue_url":"https://api.github.com/repos/apache/tvm/issues/5243","id":610029111,"node_id":"MDEyOklzc3VlQ29tbWVudDYxMDAyOTExMQ==","user":{"login":"kevinthesun","id":15520525,"node_id":"MDQ6VXNlcjE1NTIwNTI1","avatar_url":"https://avatars.githubusercontent.com/u/15520525?v=4","gravatar_id":"","url":"https://api.github.com/users/kevinthesun","html_url":"https://github.com/kevinthesun","followers_url":"https://api.github.com/users/kevinthesun/followers","following_url":"https://api.github.com/users/kevinthesun/following{/other_user}","gists_url":"https://api.github.com/users/kevinthesun/gists{/gist_id}","starred_url":"https://api.github.com/users/kevinthesun/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kevinthesun/subscriptions","organizations_url":"https://api.github.com/users/kevinthesun/orgs","repos_url":"https://api.github.com/users/kevinthesun/repos","events_url":"https://api.github.com/users/kevinthesun/events{/privacy}","received_events_url":"https://api.github.com/users/kevinthesun/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-06T20:49:10Z","updated_at":"2020-04-06T20:49:10Z","author_association":"CONTRIBUTOR","body":"@masahi The shape passed to ```get_var_static``` is for identification. For tensor_get_data, it is just for picking up corresponding global var from prelude mod. You just need to pass the shape with which you created StaticTensorArrayOps. For example, if you create a tensor array with shape (1, 2, 3), you just need to pass (1, 2, 3) to get_var_static. However, to define_tensor_get_data, you want to pass (Any(), 1, 2, 3), since this is the actual output shape.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/610029111/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/610032209","html_url":"https://github.com/apache/tvm/pull/5243#issuecomment-610032209","issue_url":"https://api.github.com/repos/apache/tvm/issues/5243","id":610032209,"node_id":"MDEyOklzc3VlQ29tbWVudDYxMDAzMjIwOQ==","user":{"login":"masahi","id":1776403,"node_id":"MDQ6VXNlcjE3NzY0MDM=","avatar_url":"https://avatars.githubusercontent.com/u/1776403?v=4","gravatar_id":"","url":"https://api.github.com/users/masahi","html_url":"https://github.com/masahi","followers_url":"https://api.github.com/users/masahi/followers","following_url":"https://api.github.com/users/masahi/following{/other_user}","gists_url":"https://api.github.com/users/masahi/gists{/gist_id}","starred_url":"https://api.github.com/users/masahi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/masahi/subscriptions","organizations_url":"https://api.github.com/users/masahi/orgs","repos_url":"https://api.github.com/users/masahi/repos","events_url":"https://api.github.com/users/masahi/events{/privacy}","received_events_url":"https://api.github.com/users/masahi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-06T20:55:58Z","updated_at":"2020-04-06T20:55:58Z","author_association":"MEMBER","body":"hmm I tried this:\r\n\r\n```Py\r\ndef _tensor_array_stack(prelude):\r\n    def _impl(inputs, input_types):\r\n        # print(prelude.mod)\r\n        # TODO: how to get the fixed shape of static_tensor_array inputs[0]?\r\n        shape = (2, 4)\r\n        stack = prelude.get_var_static('tensor_array_stack', \"float32\", shape)\r\n        stacked = stack(inputs[0])\r\n\r\n        stacked_shape = (Any(), 2, 4)\r\n        static_tensor_array_ops = StaticTensorArrayOps(prelude, \"float32\", stacked_shape)\r\n        static_tensor_array_ops.register()\r\n        get_tensor = prelude.get_var_static('tensor_get_data', \"float32\", stacked_shape)\r\n        return get_tensor(stacked)\r\n    return _impl\r\n```\r\nBut I'm still getting `AttributeError: 'Prelude' object has no attribute 'tensor_get_data_float32_?_2_4'`.  Do I need a new prelude to register a new shape?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/610032209/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/610039127","html_url":"https://github.com/apache/tvm/pull/5243#issuecomment-610039127","issue_url":"https://api.github.com/repos/apache/tvm/issues/5243","id":610039127,"node_id":"MDEyOklzc3VlQ29tbWVudDYxMDAzOTEyNw==","user":{"login":"kevinthesun","id":15520525,"node_id":"MDQ6VXNlcjE1NTIwNTI1","avatar_url":"https://avatars.githubusercontent.com/u/15520525?v=4","gravatar_id":"","url":"https://api.github.com/users/kevinthesun","html_url":"https://github.com/kevinthesun","followers_url":"https://api.github.com/users/kevinthesun/followers","following_url":"https://api.github.com/users/kevinthesun/following{/other_user}","gists_url":"https://api.github.com/users/kevinthesun/gists{/gist_id}","starred_url":"https://api.github.com/users/kevinthesun/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kevinthesun/subscriptions","organizations_url":"https://api.github.com/users/kevinthesun/orgs","repos_url":"https://api.github.com/users/kevinthesun/repos","events_url":"https://api.github.com/users/kevinthesun/events{/privacy}","received_events_url":"https://api.github.com/users/kevinthesun/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-06T21:11:47Z","updated_at":"2020-04-06T21:11:47Z","author_association":"CONTRIBUTOR","body":"https://github.com/apache/incubator-tvm/pull/5243/files#diff-eae8ecf976e0031823eeae454466f964R903 Take tensor_array_gather as an example, you create a new static tensor array ops object with your input tensor array shape, and register all ops except tensor_get_data. After this, https://github.com/apache/incubator-tvm/pull/5243/files#diff-eae8ecf976e0031823eeae454466f964R924 you need to manually register tensor_get_data. It won't be automatically registered since input shape and output shape might not match.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/610039127/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/610052206","html_url":"https://github.com/apache/tvm/pull/5243#issuecomment-610052206","issue_url":"https://api.github.com/repos/apache/tvm/issues/5243","id":610052206,"node_id":"MDEyOklzc3VlQ29tbWVudDYxMDA1MjIwNg==","user":{"login":"masahi","id":1776403,"node_id":"MDQ6VXNlcjE3NzY0MDM=","avatar_url":"https://avatars.githubusercontent.com/u/1776403?v=4","gravatar_id":"","url":"https://api.github.com/users/masahi","html_url":"https://github.com/masahi","followers_url":"https://api.github.com/users/masahi/followers","following_url":"https://api.github.com/users/masahi/following{/other_user}","gists_url":"https://api.github.com/users/masahi/gists{/gist_id}","starred_url":"https://api.github.com/users/masahi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/masahi/subscriptions","organizations_url":"https://api.github.com/users/masahi/orgs","repos_url":"https://api.github.com/users/masahi/repos","events_url":"https://api.github.com/users/masahi/events{/privacy}","received_events_url":"https://api.github.com/users/masahi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-06T21:42:02Z","updated_at":"2020-04-06T21:42:02Z","author_association":"MEMBER","body":"Great I got the following working. Also confirmed `get_tensor_array_shape` worked. Happy now :) Thank you very much! Unwrapping should enable supporting the \"stacked\" LSTM in https://github.com/pytorch/pytorch/blob/master/benchmarks/fastrnns/custom_lstms.py#L252, where the output from `LSTMLayer` is pipelined `num_layers` times to get a bigger network. \r\n\r\n```Py\r\ndef _tensor_array_stack(prelude):\r\n    def _impl(inputs, input_types):\r\n        shape = get_tensor_array_shape(inputs[0], \"float32\", prelude)\r\n        stack = prelude.get_var_static('tensor_array_stack', \"float32\", shape)\r\n        stacked = stack(inputs[0])\r\n\r\n        stacked_shape = (Any(),) + shape\r\n        static_tensor_array_ops = StaticTensorArrayOps(prelude, \"float32\", shape)\r\n        static_tensor_array_ops.define_tensor_get_data(stacked_shape)\r\n        # passing stacked_shape below gives \"'Prelude' object has no attribute\" error\r\n        get_tensor = prelude.get_var_static('tensor_get_data', \"float32\", shape)\r\n        return get_tensor(stacked)\r\n    return _impl\r\n```","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/610052206/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/610063790","html_url":"https://github.com/apache/tvm/pull/5240#issuecomment-610063790","issue_url":"https://api.github.com/repos/apache/tvm/issues/5240","id":610063790,"node_id":"MDEyOklzc3VlQ29tbWVudDYxMDA2Mzc5MA==","user":{"login":"shoubhik","id":2293791,"node_id":"MDQ6VXNlcjIyOTM3OTE=","avatar_url":"https://avatars.githubusercontent.com/u/2293791?v=4","gravatar_id":"","url":"https://api.github.com/users/shoubhik","html_url":"https://github.com/shoubhik","followers_url":"https://api.github.com/users/shoubhik/followers","following_url":"https://api.github.com/users/shoubhik/following{/other_user}","gists_url":"https://api.github.com/users/shoubhik/gists{/gist_id}","starred_url":"https://api.github.com/users/shoubhik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/shoubhik/subscriptions","organizations_url":"https://api.github.com/users/shoubhik/orgs","repos_url":"https://api.github.com/users/shoubhik/repos","events_url":"https://api.github.com/users/shoubhik/events{/privacy}","received_events_url":"https://api.github.com/users/shoubhik/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-06T22:11:12Z","updated_at":"2020-04-06T22:11:12Z","author_association":"CONTRIBUTOR","body":"Can't we have another step in CI that executes Mxnet Qnn models on intel CPUs only?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/610063790/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/610100600","html_url":"https://github.com/apache/tvm/issues/5248#issuecomment-610100600","issue_url":"https://api.github.com/repos/apache/tvm/issues/5248","id":610100600,"node_id":"MDEyOklzc3VlQ29tbWVudDYxMDEwMDYwMA==","user":{"login":"icemelon","id":2696494,"node_id":"MDQ6VXNlcjI2OTY0OTQ=","avatar_url":"https://avatars.githubusercontent.com/u/2696494?v=4","gravatar_id":"","url":"https://api.github.com/users/icemelon","html_url":"https://github.com/icemelon","followers_url":"https://api.github.com/users/icemelon/followers","following_url":"https://api.github.com/users/icemelon/following{/other_user}","gists_url":"https://api.github.com/users/icemelon/gists{/gist_id}","starred_url":"https://api.github.com/users/icemelon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/icemelon/subscriptions","organizations_url":"https://api.github.com/users/icemelon/orgs","repos_url":"https://api.github.com/users/icemelon/repos","events_url":"https://api.github.com/users/icemelon/events{/privacy}","received_events_url":"https://api.github.com/users/icemelon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-07T00:09:18Z","updated_at":"2020-04-07T00:09:56Z","author_association":"MEMBER","body":"Yes, I've open a topic in the discussion forum. Let's discuss there.\r\nhttps://discuss.tvm.ai/t/gather-nd-semantics/6243","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/610100600/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/610104967","html_url":"https://github.com/apache/tvm/pull/5240#issuecomment-610104967","issue_url":"https://api.github.com/repos/apache/tvm/issues/5240","id":610104967,"node_id":"MDEyOklzc3VlQ29tbWVudDYxMDEwNDk2Nw==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-07T00:24:39Z","updated_at":"2020-04-07T00:25:20Z","author_association":"MEMBER","body":"That will further complicates the CI itself. It would be great if we can explore other ways to validate(e.g. simulated quantize) and stick with the default mxnet","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/610104967/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/610119249","html_url":"https://github.com/apache/tvm/issues/4953#issuecomment-610119249","issue_url":"https://api.github.com/repos/apache/tvm/issues/4953","id":610119249,"node_id":"MDEyOklzc3VlQ29tbWVudDYxMDExOTI0OQ==","user":{"login":"hcho3","id":2532981,"node_id":"MDQ6VXNlcjI1MzI5ODE=","avatar_url":"https://avatars.githubusercontent.com/u/2532981?v=4","gravatar_id":"","url":"https://api.github.com/users/hcho3","html_url":"https://github.com/hcho3","followers_url":"https://api.github.com/users/hcho3/followers","following_url":"https://api.github.com/users/hcho3/following{/other_user}","gists_url":"https://api.github.com/users/hcho3/gists{/gist_id}","starred_url":"https://api.github.com/users/hcho3/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hcho3/subscriptions","organizations_url":"https://api.github.com/users/hcho3/orgs","repos_url":"https://api.github.com/users/hcho3/repos","events_url":"https://api.github.com/users/hcho3/events{/privacy}","received_events_url":"https://api.github.com/users/hcho3/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-07T01:18:01Z","updated_at":"2020-04-07T01:18:01Z","author_association":"CONTRIBUTOR","body":"@leandron Thanks for pointing out which part of TVM test is failing. Not sure if running in debug mode would help, since XGBoost is crashing with segfault here. I will take a look some time this week.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/610119249/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":1,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/610131191","html_url":"https://github.com/apache/tvm/pull/5254#issuecomment-610131191","issue_url":"https://api.github.com/repos/apache/tvm/issues/5254","id":610131191,"node_id":"MDEyOklzc3VlQ29tbWVudDYxMDEzMTE5MQ==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-07T02:04:28Z","updated_at":"2020-04-07T02:04:28Z","author_association":"MEMBER","body":"Thanks @pratikfegade !","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/610131191/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/610146623","html_url":"https://github.com/apache/tvm/issues/5256#issuecomment-610146623","issue_url":"https://api.github.com/repos/apache/tvm/issues/5256","id":610146623,"node_id":"MDEyOklzc3VlQ29tbWVudDYxMDE0NjYyMw==","user":{"login":"fcqfcq","id":19226226,"node_id":"MDQ6VXNlcjE5MjI2MjI2","avatar_url":"https://avatars.githubusercontent.com/u/19226226?v=4","gravatar_id":"","url":"https://api.github.com/users/fcqfcq","html_url":"https://github.com/fcqfcq","followers_url":"https://api.github.com/users/fcqfcq/followers","following_url":"https://api.github.com/users/fcqfcq/following{/other_user}","gists_url":"https://api.github.com/users/fcqfcq/gists{/gist_id}","starred_url":"https://api.github.com/users/fcqfcq/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fcqfcq/subscriptions","organizations_url":"https://api.github.com/users/fcqfcq/orgs","repos_url":"https://api.github.com/users/fcqfcq/repos","events_url":"https://api.github.com/users/fcqfcq/events{/privacy}","received_events_url":"https://api.github.com/users/fcqfcq/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-07T03:02:43Z","updated_at":"2020-04-07T03:02:43Z","author_association":"NONE","body":"WARNING:root:Failed to download tophub package for llvm: <urlopen error [Errno 110] Connection timed out>\r\ndownload failed due to URLError(TimeoutError(110, 'Connection timed out'),), retrying, 2 attempts left\r\ndownload failed due to URLError(TimeoutError(110, 'Connection timed out'),), retrying, 1 attempt left\r\nWARNING:root:Failed to download tophub package for llvm: <urlopen error [Errno 110] Connection timed out>\r\nWARNING:autotvm:Cannot find config for target=llvm, workload=('dense_nopack.x86', ('TENSOR', (8, 512), 'float32'), ('TENSOR', (512, 512), 'float32'), None, 'float32'). A fallback configuration is used, which may bring great performance regression.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/610146623/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/610157736","html_url":"https://github.com/apache/tvm/pull/4459#issuecomment-610157736","issue_url":"https://api.github.com/repos/apache/tvm/issues/4459","id":610157736,"node_id":"MDEyOklzc3VlQ29tbWVudDYxMDE1NzczNg==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-07T03:49:28Z","updated_at":"2020-04-07T03:49:28Z","author_association":"MEMBER","body":"@zhiics @FrozenGene please https://tvm.apache.org/docs/contribute/code_review.html#approve-and-request-changes-explicitly","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/610157736/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/610162643","html_url":"https://github.com/apache/tvm/issues/5256#issuecomment-610162643","issue_url":"https://api.github.com/repos/apache/tvm/issues/5256","id":610162643,"node_id":"MDEyOklzc3VlQ29tbWVudDYxMDE2MjY0Mw==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-07T04:11:30Z","updated_at":"2020-04-07T04:11:30Z","author_association":"MEMBER","body":"Please open a new thread on https://discuss.tvm.ai/","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/610162643/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/610163091","html_url":"https://github.com/apache/tvm/pull/5252#issuecomment-610163091","issue_url":"https://api.github.com/repos/apache/tvm/issues/5252","id":610163091,"node_id":"MDEyOklzc3VlQ29tbWVudDYxMDE2MzA5MQ==","user":{"login":"FrozenGene","id":7287321,"node_id":"MDQ6VXNlcjcyODczMjE=","avatar_url":"https://avatars.githubusercontent.com/u/7287321?v=4","gravatar_id":"","url":"https://api.github.com/users/FrozenGene","html_url":"https://github.com/FrozenGene","followers_url":"https://api.github.com/users/FrozenGene/followers","following_url":"https://api.github.com/users/FrozenGene/following{/other_user}","gists_url":"https://api.github.com/users/FrozenGene/gists{/gist_id}","starred_url":"https://api.github.com/users/FrozenGene/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/FrozenGene/subscriptions","organizations_url":"https://api.github.com/users/FrozenGene/orgs","repos_url":"https://api.github.com/users/FrozenGene/repos","events_url":"https://api.github.com/users/FrozenGene/events{/privacy}","received_events_url":"https://api.github.com/users/FrozenGene/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-07T04:13:22Z","updated_at":"2020-04-07T04:13:22Z","author_association":"MEMBER","body":"Could you provide the `.idl` file too? Because you have provided `tvm_hexagon_remote.h`, if we don't have `.idl` we can not generate .cc / .h for hexagon. I think it is core part of Hexagon runtime support too.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/610163091/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/610167373","html_url":"https://github.com/apache/tvm/pull/5230#issuecomment-610167373","issue_url":"https://api.github.com/repos/apache/tvm/issues/5230","id":610167373,"node_id":"MDEyOklzc3VlQ29tbWVudDYxMDE2NzM3Mw==","user":{"login":"anijain2305","id":13822661,"node_id":"MDQ6VXNlcjEzODIyNjYx","avatar_url":"https://avatars.githubusercontent.com/u/13822661?v=4","gravatar_id":"","url":"https://api.github.com/users/anijain2305","html_url":"https://github.com/anijain2305","followers_url":"https://api.github.com/users/anijain2305/followers","following_url":"https://api.github.com/users/anijain2305/following{/other_user}","gists_url":"https://api.github.com/users/anijain2305/gists{/gist_id}","starred_url":"https://api.github.com/users/anijain2305/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/anijain2305/subscriptions","organizations_url":"https://api.github.com/users/anijain2305/orgs","repos_url":"https://api.github.com/users/anijain2305/repos","events_url":"https://api.github.com/users/anijain2305/events{/privacy}","received_events_url":"https://api.github.com/users/anijain2305/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-07T04:32:17Z","updated_at":"2020-04-07T04:32:27Z","author_association":"CONTRIBUTOR","body":"@FrozenGene If we have C = 1, then depth wise conv becomes normal conv. There is nothing to accumulate across input channels basically. And depth_multiplier becomes equal to the number of output channels. What do you think? Is the change good with you?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/610167373/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/610201864","html_url":"https://github.com/apache/tvm/pull/4459#issuecomment-610201864","issue_url":"https://api.github.com/repos/apache/tvm/issues/4459","id":610201864,"node_id":"MDEyOklzc3VlQ29tbWVudDYxMDIwMTg2NA==","user":{"login":"FrozenGene","id":7287321,"node_id":"MDQ6VXNlcjcyODczMjE=","avatar_url":"https://avatars.githubusercontent.com/u/7287321?v=4","gravatar_id":"","url":"https://api.github.com/users/FrozenGene","html_url":"https://github.com/FrozenGene","followers_url":"https://api.github.com/users/FrozenGene/followers","following_url":"https://api.github.com/users/FrozenGene/following{/other_user}","gists_url":"https://api.github.com/users/FrozenGene/gists{/gist_id}","starred_url":"https://api.github.com/users/FrozenGene/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/FrozenGene/subscriptions","organizations_url":"https://api.github.com/users/FrozenGene/orgs","repos_url":"https://api.github.com/users/FrozenGene/repos","events_url":"https://api.github.com/users/FrozenGene/events{/privacy}","received_events_url":"https://api.github.com/users/FrozenGene/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-07T06:31:07Z","updated_at":"2020-04-07T06:31:07Z","author_association":"MEMBER","body":"I will review it one round today. If no other comment, I will approve today.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/610201864/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/610215069","html_url":"https://github.com/apache/tvm/pull/5259#issuecomment-610215069","issue_url":"https://api.github.com/repos/apache/tvm/issues/5259","id":610215069,"node_id":"MDEyOklzc3VlQ29tbWVudDYxMDIxNTA2OQ==","user":{"login":"adi-muresan","id":6738884,"node_id":"MDQ6VXNlcjY3Mzg4ODQ=","avatar_url":"https://avatars.githubusercontent.com/u/6738884?v=4","gravatar_id":"","url":"https://api.github.com/users/adi-muresan","html_url":"https://github.com/adi-muresan","followers_url":"https://api.github.com/users/adi-muresan/followers","following_url":"https://api.github.com/users/adi-muresan/following{/other_user}","gists_url":"https://api.github.com/users/adi-muresan/gists{/gist_id}","starred_url":"https://api.github.com/users/adi-muresan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/adi-muresan/subscriptions","organizations_url":"https://api.github.com/users/adi-muresan/orgs","repos_url":"https://api.github.com/users/adi-muresan/repos","events_url":"https://api.github.com/users/adi-muresan/events{/privacy}","received_events_url":"https://api.github.com/users/adi-muresan/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-07T07:06:45Z","updated_at":"2020-04-07T07:06:45Z","author_association":"CONTRIBUTOR","body":"@zhiics could you take a look at this short fix?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/610215069/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/610244975","html_url":"https://github.com/apache/tvm/pull/5239#issuecomment-610244975","issue_url":"https://api.github.com/repos/apache/tvm/issues/5239","id":610244975,"node_id":"MDEyOklzc3VlQ29tbWVudDYxMDI0NDk3NQ==","user":{"login":"FrozenGene","id":7287321,"node_id":"MDQ6VXNlcjcyODczMjE=","avatar_url":"https://avatars.githubusercontent.com/u/7287321?v=4","gravatar_id":"","url":"https://api.github.com/users/FrozenGene","html_url":"https://github.com/FrozenGene","followers_url":"https://api.github.com/users/FrozenGene/followers","following_url":"https://api.github.com/users/FrozenGene/following{/other_user}","gists_url":"https://api.github.com/users/FrozenGene/gists{/gist_id}","starred_url":"https://api.github.com/users/FrozenGene/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/FrozenGene/subscriptions","organizations_url":"https://api.github.com/users/FrozenGene/orgs","repos_url":"https://api.github.com/users/FrozenGene/repos","events_url":"https://api.github.com/users/FrozenGene/events{/privacy}","received_events_url":"https://api.github.com/users/FrozenGene/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-07T08:14:21Z","updated_at":"2020-04-07T08:14:21Z","author_association":"MEMBER","body":"Thanks @siju-samuel and @jwfromm . Merged now.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/610244975/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/610268449","html_url":"https://github.com/apache/tvm/pull/5226#issuecomment-610268449","issue_url":"https://api.github.com/repos/apache/tvm/issues/5226","id":610268449,"node_id":"MDEyOklzc3VlQ29tbWVudDYxMDI2ODQ0OQ==","user":{"login":"huochaitiantang","id":17795979,"node_id":"MDQ6VXNlcjE3Nzk1OTc5","avatar_url":"https://avatars.githubusercontent.com/u/17795979?v=4","gravatar_id":"","url":"https://api.github.com/users/huochaitiantang","html_url":"https://github.com/huochaitiantang","followers_url":"https://api.github.com/users/huochaitiantang/followers","following_url":"https://api.github.com/users/huochaitiantang/following{/other_user}","gists_url":"https://api.github.com/users/huochaitiantang/gists{/gist_id}","starred_url":"https://api.github.com/users/huochaitiantang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/huochaitiantang/subscriptions","organizations_url":"https://api.github.com/users/huochaitiantang/orgs","repos_url":"https://api.github.com/users/huochaitiantang/repos","events_url":"https://api.github.com/users/huochaitiantang/events{/privacy}","received_events_url":"https://api.github.com/users/huochaitiantang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-07T09:03:20Z","updated_at":"2020-04-07T09:03:20Z","author_association":"CONTRIBUTOR","body":"Thanks for your review, @wpan11nv . The new commit supported uint8, and it also fixed the unit8 bug in the code generation of BroadcastNode.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/610268449/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/610297032","html_url":"https://github.com/apache/tvm/pull/4459#issuecomment-610297032","issue_url":"https://api.github.com/repos/apache/tvm/issues/4459","id":610297032,"node_id":"MDEyOklzc3VlQ29tbWVudDYxMDI5NzAzMg==","user":{"login":"FrozenGene","id":7287321,"node_id":"MDQ6VXNlcjcyODczMjE=","avatar_url":"https://avatars.githubusercontent.com/u/7287321?v=4","gravatar_id":"","url":"https://api.github.com/users/FrozenGene","html_url":"https://github.com/FrozenGene","followers_url":"https://api.github.com/users/FrozenGene/followers","following_url":"https://api.github.com/users/FrozenGene/following{/other_user}","gists_url":"https://api.github.com/users/FrozenGene/gists{/gist_id}","starred_url":"https://api.github.com/users/FrozenGene/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/FrozenGene/subscriptions","organizations_url":"https://api.github.com/users/FrozenGene/orgs","repos_url":"https://api.github.com/users/FrozenGene/repos","events_url":"https://api.github.com/users/FrozenGene/events{/privacy}","received_events_url":"https://api.github.com/users/FrozenGene/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-07T10:04:28Z","updated_at":"2020-04-07T10:04:28Z","author_association":"MEMBER","body":"Wish we have one doc / tutorial to instruct users how to use this feature in the next pr.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/610297032/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/610315073","html_url":"https://github.com/apache/tvm/issues/5255#issuecomment-610315073","issue_url":"https://api.github.com/repos/apache/tvm/issues/5255","id":610315073,"node_id":"MDEyOklzc3VlQ29tbWVudDYxMDMxNTA3Mw==","user":{"login":"masahi","id":1776403,"node_id":"MDQ6VXNlcjE3NzY0MDM=","avatar_url":"https://avatars.githubusercontent.com/u/1776403?v=4","gravatar_id":"","url":"https://api.github.com/users/masahi","html_url":"https://github.com/masahi","followers_url":"https://api.github.com/users/masahi/followers","following_url":"https://api.github.com/users/masahi/following{/other_user}","gists_url":"https://api.github.com/users/masahi/gists{/gist_id}","starred_url":"https://api.github.com/users/masahi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/masahi/subscriptions","organizations_url":"https://api.github.com/users/masahi/orgs","repos_url":"https://api.github.com/users/masahi/repos","events_url":"https://api.github.com/users/masahi/events{/privacy}","received_events_url":"https://api.github.com/users/masahi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-07T10:44:49Z","updated_at":"2020-04-07T10:44:49Z","author_association":"MEMBER","body":"leaky_relu was added in https://github.com/apache/incubator-tvm/pull/5194. I added other two in \r\nhttps://github.com/apache/incubator-tvm/issues/5133","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/610315073/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/610391857","html_url":"https://github.com/apache/tvm/pull/5252#issuecomment-610391857","issue_url":"https://api.github.com/repos/apache/tvm/issues/5252","id":610391857,"node_id":"MDEyOklzc3VlQ29tbWVudDYxMDM5MTg1Nw==","user":{"login":"kparzysz-quic","id":48801706,"node_id":"MDQ6VXNlcjQ4ODAxNzA2","avatar_url":"https://avatars.githubusercontent.com/u/48801706?v=4","gravatar_id":"","url":"https://api.github.com/users/kparzysz-quic","html_url":"https://github.com/kparzysz-quic","followers_url":"https://api.github.com/users/kparzysz-quic/followers","following_url":"https://api.github.com/users/kparzysz-quic/following{/other_user}","gists_url":"https://api.github.com/users/kparzysz-quic/gists{/gist_id}","starred_url":"https://api.github.com/users/kparzysz-quic/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kparzysz-quic/subscriptions","organizations_url":"https://api.github.com/users/kparzysz-quic/orgs","repos_url":"https://api.github.com/users/kparzysz-quic/repos","events_url":"https://api.github.com/users/kparzysz-quic/events{/privacy}","received_events_url":"https://api.github.com/users/kparzysz-quic/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-07T13:38:09Z","updated_at":"2020-04-07T13:38:09Z","author_association":"CONTRIBUTOR","body":"The IDL file and the implementation of the Hexagon-side target code will be upstreamed in an upcoming PR.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/610391857/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/610392358","html_url":"https://github.com/apache/tvm/pull/5262#issuecomment-610392358","issue_url":"https://api.github.com/repos/apache/tvm/issues/5262","id":610392358,"node_id":"MDEyOklzc3VlQ29tbWVudDYxMDM5MjM1OA==","user":{"login":"mbaret","id":55580676,"node_id":"MDQ6VXNlcjU1NTgwNjc2","avatar_url":"https://avatars.githubusercontent.com/u/55580676?v=4","gravatar_id":"","url":"https://api.github.com/users/mbaret","html_url":"https://github.com/mbaret","followers_url":"https://api.github.com/users/mbaret/followers","following_url":"https://api.github.com/users/mbaret/following{/other_user}","gists_url":"https://api.github.com/users/mbaret/gists{/gist_id}","starred_url":"https://api.github.com/users/mbaret/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbaret/subscriptions","organizations_url":"https://api.github.com/users/mbaret/orgs","repos_url":"https://api.github.com/users/mbaret/repos","events_url":"https://api.github.com/users/mbaret/events{/privacy}","received_events_url":"https://api.github.com/users/mbaret/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-07T13:39:06Z","updated_at":"2020-04-07T13:39:06Z","author_association":"CONTRIBUTOR","body":"cc @masahi @zhiics @trevor-m ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/610392358/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/610392585","html_url":"https://github.com/apache/tvm/pull/5261#issuecomment-610392585","issue_url":"https://api.github.com/repos/apache/tvm/issues/5261","id":610392585,"node_id":"MDEyOklzc3VlQ29tbWVudDYxMDM5MjU4NQ==","user":{"login":"mbaret","id":55580676,"node_id":"MDQ6VXNlcjU1NTgwNjc2","avatar_url":"https://avatars.githubusercontent.com/u/55580676?v=4","gravatar_id":"","url":"https://api.github.com/users/mbaret","html_url":"https://github.com/mbaret","followers_url":"https://api.github.com/users/mbaret/followers","following_url":"https://api.github.com/users/mbaret/following{/other_user}","gists_url":"https://api.github.com/users/mbaret/gists{/gist_id}","starred_url":"https://api.github.com/users/mbaret/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbaret/subscriptions","organizations_url":"https://api.github.com/users/mbaret/orgs","repos_url":"https://api.github.com/users/mbaret/repos","events_url":"https://api.github.com/users/mbaret/events{/privacy}","received_events_url":"https://api.github.com/users/mbaret/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-07T13:39:29Z","updated_at":"2020-04-07T13:39:29Z","author_association":"CONTRIBUTOR","body":"cc @masahi @zhiics @trevor-m ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/610392585/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/610468392","html_url":"https://github.com/apache/tvm/issues/5260#issuecomment-610468392","issue_url":"https://api.github.com/repos/apache/tvm/issues/5260","id":610468392,"node_id":"MDEyOklzc3VlQ29tbWVudDYxMDQ2ODM5Mg==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-07T15:52:42Z","updated_at":"2020-04-07T15:52:42Z","author_association":"MEMBER","body":"This is an expected behavior, as we will start to require python3.6 in 0.7 For otehr questions, please open a new thread on https://discuss.tvm.ai/","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/610468392/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/610495383","html_url":"https://github.com/apache/tvm/pull/5261#issuecomment-610495383","issue_url":"https://api.github.com/repos/apache/tvm/issues/5261","id":610495383,"node_id":"MDEyOklzc3VlQ29tbWVudDYxMDQ5NTM4Mw==","user":{"login":"masahi","id":1776403,"node_id":"MDQ6VXNlcjE3NzY0MDM=","avatar_url":"https://avatars.githubusercontent.com/u/1776403?v=4","gravatar_id":"","url":"https://api.github.com/users/masahi","html_url":"https://github.com/masahi","followers_url":"https://api.github.com/users/masahi/followers","following_url":"https://api.github.com/users/masahi/following{/other_user}","gists_url":"https://api.github.com/users/masahi/gists{/gist_id}","starred_url":"https://api.github.com/users/masahi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/masahi/subscriptions","organizations_url":"https://api.github.com/users/masahi/orgs","repos_url":"https://api.github.com/users/masahi/repos","events_url":"https://api.github.com/users/masahi/events{/privacy}","received_events_url":"https://api.github.com/users/masahi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-07T16:41:19Z","updated_at":"2020-04-07T16:41:19Z","author_association":"MEMBER","body":"cc @soiferj ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/610495383/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/610509436","html_url":"https://github.com/apache/tvm/pull/5261#issuecomment-610509436","issue_url":"https://api.github.com/repos/apache/tvm/issues/5261","id":610509436,"node_id":"MDEyOklzc3VlQ29tbWVudDYxMDUwOTQzNg==","user":{"login":"alexbooth","id":16694980,"node_id":"MDQ6VXNlcjE2Njk0OTgw","avatar_url":"https://avatars.githubusercontent.com/u/16694980?v=4","gravatar_id":"","url":"https://api.github.com/users/alexbooth","html_url":"https://github.com/alexbooth","followers_url":"https://api.github.com/users/alexbooth/followers","following_url":"https://api.github.com/users/alexbooth/following{/other_user}","gists_url":"https://api.github.com/users/alexbooth/gists{/gist_id}","starred_url":"https://api.github.com/users/alexbooth/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexbooth/subscriptions","organizations_url":"https://api.github.com/users/alexbooth/orgs","repos_url":"https://api.github.com/users/alexbooth/repos","events_url":"https://api.github.com/users/alexbooth/events{/privacy}","received_events_url":"https://api.github.com/users/alexbooth/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-07T17:08:11Z","updated_at":"2020-04-07T17:08:11Z","author_association":"CONTRIBUTOR","body":"Partitioning looks good for me with a simple pattern, conv2d_bias_relu. I'm seeing the check fail in IsOp for composite functions however. Maybe for another PR.\r\n\r\n```c++\r\n  bool IsOp(const CallNode* call, const std::string& op_name) const {\r\n    const auto* op_node = call->op.as<OpNode>();\r\n    CHECK(op_node) << \"Expects a single op.\";\r\n    Op op = GetRef<Op>(op_node);\r\n    return op == Op::Get(op_name);\r\n  }\r\n```\r\nhttps://github.com/mbaret/tvm/blob/a197bca20a8effc48d06388190aa1b5f3b525ef6/src/relay/backend/contrib/codegen_c/codegen_c.h#L191-L205\r\n\r\n```TVMError: Check failed: op_node: Expects a single op.```","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/610509436/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/610518146","html_url":"https://github.com/apache/tvm/pull/5262#issuecomment-610518146","issue_url":"https://api.github.com/repos/apache/tvm/issues/5262","id":610518146,"node_id":"MDEyOklzc3VlQ29tbWVudDYxMDUxODE0Ng==","user":{"login":"masahi","id":1776403,"node_id":"MDQ6VXNlcjE3NzY0MDM=","avatar_url":"https://avatars.githubusercontent.com/u/1776403?v=4","gravatar_id":"","url":"https://api.github.com/users/masahi","html_url":"https://github.com/masahi","followers_url":"https://api.github.com/users/masahi/followers","following_url":"https://api.github.com/users/masahi/following{/other_user}","gists_url":"https://api.github.com/users/masahi/gists{/gist_id}","starred_url":"https://api.github.com/users/masahi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/masahi/subscriptions","organizations_url":"https://api.github.com/users/masahi/orgs","repos_url":"https://api.github.com/users/masahi/repos","events_url":"https://api.github.com/users/masahi/events{/privacy}","received_events_url":"https://api.github.com/users/masahi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-07T17:26:12Z","updated_at":"2020-04-07T17:26:12Z","author_association":"MEMBER","body":"I'll revive my old PR https://github.com/apache/incubator-tvm/pull/4741 which should become the first use of composite in the code base.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/610518146/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/610549195","html_url":"https://github.com/apache/tvm/pull/5241#issuecomment-610549195","issue_url":"https://api.github.com/repos/apache/tvm/issues/5241","id":610549195,"node_id":"MDEyOklzc3VlQ29tbWVudDYxMDU0OTE5NQ==","user":{"login":"icemelon","id":2696494,"node_id":"MDQ6VXNlcjI2OTY0OTQ=","avatar_url":"https://avatars.githubusercontent.com/u/2696494?v=4","gravatar_id":"","url":"https://api.github.com/users/icemelon","html_url":"https://github.com/icemelon","followers_url":"https://api.github.com/users/icemelon/followers","following_url":"https://api.github.com/users/icemelon/following{/other_user}","gists_url":"https://api.github.com/users/icemelon/gists{/gist_id}","starred_url":"https://api.github.com/users/icemelon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/icemelon/subscriptions","organizations_url":"https://api.github.com/users/icemelon/orgs","repos_url":"https://api.github.com/users/icemelon/repos","events_url":"https://api.github.com/users/icemelon/events{/privacy}","received_events_url":"https://api.github.com/users/icemelon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-07T18:28:54Z","updated_at":"2020-04-07T18:28:54Z","author_association":"MEMBER","body":"@anijain2305 ci is now green. Could you take a look again?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/610549195/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/610566829","html_url":"https://github.com/apache/tvm/pull/5241#issuecomment-610566829","issue_url":"https://api.github.com/repos/apache/tvm/issues/5241","id":610566829,"node_id":"MDEyOklzc3VlQ29tbWVudDYxMDU2NjgyOQ==","user":{"login":"anijain2305","id":13822661,"node_id":"MDQ6VXNlcjEzODIyNjYx","avatar_url":"https://avatars.githubusercontent.com/u/13822661?v=4","gravatar_id":"","url":"https://api.github.com/users/anijain2305","html_url":"https://github.com/anijain2305","followers_url":"https://api.github.com/users/anijain2305/followers","following_url":"https://api.github.com/users/anijain2305/following{/other_user}","gists_url":"https://api.github.com/users/anijain2305/gists{/gist_id}","starred_url":"https://api.github.com/users/anijain2305/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/anijain2305/subscriptions","organizations_url":"https://api.github.com/users/anijain2305/orgs","repos_url":"https://api.github.com/users/anijain2305/repos","events_url":"https://api.github.com/users/anijain2305/events{/privacy}","received_events_url":"https://api.github.com/users/anijain2305/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-07T19:05:46Z","updated_at":"2020-04-07T19:05:46Z","author_association":"CONTRIBUTOR","body":"Thanks @icemelon9 @tqchen This is merged","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/610566829/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/610567541","html_url":"https://github.com/apache/tvm/issues/5250#issuecomment-610567541","issue_url":"https://api.github.com/repos/apache/tvm/issues/5250","id":610567541,"node_id":"MDEyOklzc3VlQ29tbWVudDYxMDU2NzU0MQ==","user":{"login":"zhiics","id":5145158,"node_id":"MDQ6VXNlcjUxNDUxNTg=","avatar_url":"https://avatars.githubusercontent.com/u/5145158?v=4","gravatar_id":"","url":"https://api.github.com/users/zhiics","html_url":"https://github.com/zhiics","followers_url":"https://api.github.com/users/zhiics/followers","following_url":"https://api.github.com/users/zhiics/following{/other_user}","gists_url":"https://api.github.com/users/zhiics/gists{/gist_id}","starred_url":"https://api.github.com/users/zhiics/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zhiics/subscriptions","organizations_url":"https://api.github.com/users/zhiics/orgs","repos_url":"https://api.github.com/users/zhiics/repos","events_url":"https://api.github.com/users/zhiics/events{/privacy}","received_events_url":"https://api.github.com/users/zhiics/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-07T19:07:16Z","updated_at":"2020-04-07T19:07:42Z","author_association":"MEMBER","body":"@tqchen I will spend some time on this. I just had simple test based on #5251. It looks I had a problem. Could you please take a look at the comment there?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/610567541/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/610607243","html_url":"https://github.com/apache/tvm/pull/5264#issuecomment-610607243","issue_url":"https://api.github.com/repos/apache/tvm/issues/5264","id":610607243,"node_id":"MDEyOklzc3VlQ29tbWVudDYxMDYwNzI0Mw==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-07T20:35:58Z","updated_at":"2020-04-07T20:35:58Z","author_association":"MEMBER","body":"Thanks @kparzysz-quic ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/610607243/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/610632004","html_url":"https://github.com/apache/tvm/pull/5124#issuecomment-610632004","issue_url":"https://api.github.com/repos/apache/tvm/issues/5124","id":610632004,"node_id":"MDEyOklzc3VlQ29tbWVudDYxMDYzMjAwNA==","user":{"login":"tmoreau89","id":5974488,"node_id":"MDQ6VXNlcjU5NzQ0ODg=","avatar_url":"https://avatars.githubusercontent.com/u/5974488?v=4","gravatar_id":"","url":"https://api.github.com/users/tmoreau89","html_url":"https://github.com/tmoreau89","followers_url":"https://api.github.com/users/tmoreau89/followers","following_url":"https://api.github.com/users/tmoreau89/following{/other_user}","gists_url":"https://api.github.com/users/tmoreau89/gists{/gist_id}","starred_url":"https://api.github.com/users/tmoreau89/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tmoreau89/subscriptions","organizations_url":"https://api.github.com/users/tmoreau89/orgs","repos_url":"https://api.github.com/users/tmoreau89/repos","events_url":"https://api.github.com/users/tmoreau89/events{/privacy}","received_events_url":"https://api.github.com/users/tmoreau89/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-07T21:33:39Z","updated_at":"2020-04-07T21:33:39Z","author_association":"CONTRIBUTOR","body":"Thanks @liangfu @tqchen the PR has been merged. For the CRT CI tests, I suggest these get added in a follow up PR.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/610632004/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/610659753","html_url":"https://github.com/apache/tvm/pull/5261#issuecomment-610659753","issue_url":"https://api.github.com/repos/apache/tvm/issues/5261","id":610659753,"node_id":"MDEyOklzc3VlQ29tbWVudDYxMDY1OTc1Mw==","user":{"login":"masahi","id":1776403,"node_id":"MDQ6VXNlcjE3NzY0MDM=","avatar_url":"https://avatars.githubusercontent.com/u/1776403?v=4","gravatar_id":"","url":"https://api.github.com/users/masahi","html_url":"https://github.com/masahi","followers_url":"https://api.github.com/users/masahi/followers","following_url":"https://api.github.com/users/masahi/following{/other_user}","gists_url":"https://api.github.com/users/masahi/gists{/gist_id}","starred_url":"https://api.github.com/users/masahi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/masahi/subscriptions","organizations_url":"https://api.github.com/users/masahi/orgs","repos_url":"https://api.github.com/users/masahi/repos","events_url":"https://api.github.com/users/masahi/events{/privacy}","received_events_url":"https://api.github.com/users/masahi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-07T22:56:02Z","updated_at":"2020-04-07T23:01:35Z","author_association":"MEMBER","body":"Using MergeComposite, AnnotateTarget and PartitionGraph, I get the following graph for conv + bias + relu pattern:\r\n\r\n```\r\ndef @dnnl_0(%dnnl_0_i0: Tensor[(1, 3, 224, 224), float32], Inline=1, Compiler=\"dnnl\", global_symbol=runtime.String(0x55a8d9cddbd0), Primitive=1) -> Tensor[(1, 1, 224, 224), float32] {\r\n  %2 = fn (%data: Tensor[(1, 3, 224, 224), float32], %weight: Tensor[(1, 3, 3, 3), float32], %bias: Tensor[(1, 1, 1), float32], Composite=\"dnnl.conv_bias_relu\") -> Tensor[(1, 1, 224, 224), float32] {\r\n    %0 = nn.conv2d(%data, %weight, padding=[1, 1, 1, 1], channels=1, kernel_size=[3, 3]) /* ty=Tensor[(1, 1, 224, 224), float32] */;\r\n    %1 = add(%0, %bias) /* ty=Tensor[(1, 1, 224, 224), float32] */;\r\n    nn.relu(%1) /* ty=Tensor[(1, 1, 224, 224), float32] */\r\n  };\r\n  %2(%dnnl_0_i0, meta[relay.Constant][0] /* ty=Tensor[(1, 3, 3, 3), float32] */ /* ty=Tensor[(1, 3, 3, 3), float32] */, meta[relay.Constant][1] /* ty=Tensor[(1, 1, 1), float32] */ /* ty=Tensor[(1, 1, 1), float32] */) /* ty=Tensor[(1, 1, 224, 224), float32] */\r\n}\r\n\r\ndef @main(%data1: Tensor[(1, 3, 224, 224), float32]) -> Tensor[(1, 1, 224, 224), float32] {\r\n  @dnnl_0(%data1) /* ty=Tensor[(1, 1, 224, 224), float32] */\r\n}\r\n```\r\n\r\nIs it possible to inline composite function `%2` there into `dnnl_0`? What I want is this:\r\n```\r\ndef @dnnl_0(%dnnl_0_i0: Tensor[(1, 3, 224, 224), float32], Inline=1, Compiler=\"dnnl\", global_symbol=runtime.String(0x5599b307c370), Primitive=1) -> Tensor[(1, 1, 224, 224), float32] {\r\n  %0 = nn.conv2d(%dnnl_0_i0, meta[relay.Constant][0] /* ty=Tensor[(1, 3, 3, 3), float32] */ /* ty=Tensor[(1, 3, 3, 3), float32] */, padding=[1, 1, 1, 1], channels=1, kernel_size=[3, 3]) /* ty=Tensor[(1, 1, 224, 224), float32] */;\r\n  %1 = add(%0, meta[relay.Constant][1] /* ty=Tensor[(1, 1, 1), float32] */ /* ty=Tensor[(1, 1, 1), float32] */) /* ty=Tensor[(1, 1, 224, 224), float32] */;\r\n  nn.relu(%1) /* ty=Tensor[(1, 1, 224, 224), float32] */\r\n}\r\n\r\ndef @main(%data: Tensor[(1, 3, 224, 224), float32]) -> Tensor[(1, 1, 224, 224), float32] {\r\n  @dnnl_0(%data) /* ty=Tensor[(1, 1, 224, 224), float32] */\r\n}\r\n```\r\n\r\nOtherwise I have to support function call in DNNL codegen. @zhiics @mbaret \r\n\r\nUPDATE: hmm if I inline the composite function, I lose the composite attribute and hence cannot detect fused call. Is supporting function call in the DNNL codegen a better option?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/610659753/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/610663673","html_url":"https://github.com/apache/tvm/pull/5261#issuecomment-610663673","issue_url":"https://api.github.com/repos/apache/tvm/issues/5261","id":610663673,"node_id":"MDEyOklzc3VlQ29tbWVudDYxMDY2MzY3Mw==","user":{"login":"trevor-m","id":12981474,"node_id":"MDQ6VXNlcjEyOTgxNDc0","avatar_url":"https://avatars.githubusercontent.com/u/12981474?v=4","gravatar_id":"","url":"https://api.github.com/users/trevor-m","html_url":"https://github.com/trevor-m","followers_url":"https://api.github.com/users/trevor-m/followers","following_url":"https://api.github.com/users/trevor-m/following{/other_user}","gists_url":"https://api.github.com/users/trevor-m/gists{/gist_id}","starred_url":"https://api.github.com/users/trevor-m/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/trevor-m/subscriptions","organizations_url":"https://api.github.com/users/trevor-m/orgs","repos_url":"https://api.github.com/users/trevor-m/repos","events_url":"https://api.github.com/users/trevor-m/events{/privacy}","received_events_url":"https://api.github.com/users/trevor-m/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-07T23:09:20Z","updated_at":"2020-04-07T23:09:20Z","author_association":"CONTRIBUTOR","body":"> Using MergeComposite, AnnotateTarget and PartitionGraph, I get the following graph for conv + bias + relu pattern:\r\n> \r\n> ```\r\n> def @dnnl_0(%dnnl_0_i0: Tensor[(1, 3, 224, 224), float32], Inline=1, Compiler=\"dnnl\", global_symbol=runtime.String(0x55a8d9cddbd0), Primitive=1) -> Tensor[(1, 1, 224, 224), float32] {\r\n>   %2 = fn (%data: Tensor[(1, 3, 224, 224), float32], %weight: Tensor[(1, 3, 3, 3), float32], %bias: Tensor[(1, 1, 1), float32], Composite=\"dnnl.conv_bias_relu\") -> Tensor[(1, 1, 224, 224), float32] {\r\n>     %0 = nn.conv2d(%data, %weight, padding=[1, 1, 1, 1], channels=1, kernel_size=[3, 3]) /* ty=Tensor[(1, 1, 224, 224), float32] */;\r\n>     %1 = add(%0, %bias) /* ty=Tensor[(1, 1, 224, 224), float32] */;\r\n>     nn.relu(%1) /* ty=Tensor[(1, 1, 224, 224), float32] */\r\n>   };\r\n>   %2(%dnnl_0_i0, meta[relay.Constant][0] /* ty=Tensor[(1, 3, 3, 3), float32] */ /* ty=Tensor[(1, 3, 3, 3), float32] */, meta[relay.Constant][1] /* ty=Tensor[(1, 1, 1), float32] */ /* ty=Tensor[(1, 1, 1), float32] */) /* ty=Tensor[(1, 1, 224, 224), float32] */\r\n> }\r\n> \r\n> def @main(%data1: Tensor[(1, 3, 224, 224), float32]) -> Tensor[(1, 1, 224, 224), float32] {\r\n>   @dnnl_0(%data1) /* ty=Tensor[(1, 1, 224, 224), float32] */\r\n> }\r\n> ```\r\n> \r\n> Is it possible to inline composite function `%2` there into `dnnl_0`? What I want is this:\r\n> \r\n> ```\r\n> def @dnnl_0(%dnnl_0_i0: Tensor[(1, 3, 224, 224), float32], Inline=1, Compiler=\"dnnl\", global_symbol=runtime.String(0x5599b307c370), Primitive=1) -> Tensor[(1, 1, 224, 224), float32] {\r\n>   %0 = nn.conv2d(%dnnl_0_i0, meta[relay.Constant][0] /* ty=Tensor[(1, 3, 3, 3), float32] */ /* ty=Tensor[(1, 3, 3, 3), float32] */, padding=[1, 1, 1, 1], channels=1, kernel_size=[3, 3]) /* ty=Tensor[(1, 1, 224, 224), float32] */;\r\n>   %1 = add(%0, meta[relay.Constant][1] /* ty=Tensor[(1, 1, 1), float32] */ /* ty=Tensor[(1, 1, 1), float32] */) /* ty=Tensor[(1, 1, 224, 224), float32] */;\r\n>   nn.relu(%1) /* ty=Tensor[(1, 1, 224, 224), float32] */\r\n> }\r\n> \r\n> def @main(%data: Tensor[(1, 3, 224, 224), float32]) -> Tensor[(1, 1, 224, 224), float32] {\r\n>   @dnnl_0(%data) /* ty=Tensor[(1, 1, 224, 224), float32] */\r\n> }\r\n> ```\r\n> \r\n> Otherwise I have to support function call in DNNL codegen. @zhiics @mbaret\r\n> \r\n> UPDATE: hmm if I inline the composite function, I lose the composite attribute and hence cannot detect fused call. Is supporting function call in the DNNL codegen a better option?\r\n\r\nHi @masahi, I think it is best to leave this to the codegen. That way we have the option to handle a composite all at once at call node or invididually by just doing VisitExpr(func->body) when we encounter one.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/610663673/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/610664463","html_url":"https://github.com/apache/tvm/pull/5270#issuecomment-610664463","issue_url":"https://api.github.com/repos/apache/tvm/issues/5270","id":610664463,"node_id":"MDEyOklzc3VlQ29tbWVudDYxMDY2NDQ2Mw==","user":{"login":"leezu","id":946903,"node_id":"MDQ6VXNlcjk0NjkwMw==","avatar_url":"https://avatars.githubusercontent.com/u/946903?v=4","gravatar_id":"","url":"https://api.github.com/users/leezu","html_url":"https://github.com/leezu","followers_url":"https://api.github.com/users/leezu/followers","following_url":"https://api.github.com/users/leezu/following{/other_user}","gists_url":"https://api.github.com/users/leezu/gists{/gist_id}","starred_url":"https://api.github.com/users/leezu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leezu/subscriptions","organizations_url":"https://api.github.com/users/leezu/orgs","repos_url":"https://api.github.com/users/leezu/repos","events_url":"https://api.github.com/users/leezu/events{/privacy}","received_events_url":"https://api.github.com/users/leezu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-07T23:12:02Z","updated_at":"2020-04-07T23:12:02Z","author_association":"NONE","body":"mxnet-mkl is not build with mkl but only mkldnn. The name is confusing.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/610664463/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/610664896","html_url":"https://github.com/apache/tvm/pull/5270#issuecomment-610664896","issue_url":"https://api.github.com/repos/apache/tvm/issues/5270","id":610664896,"node_id":"MDEyOklzc3VlQ29tbWVudDYxMDY2NDg5Ng==","user":{"login":"leezu","id":946903,"node_id":"MDQ6VXNlcjk0NjkwMw==","avatar_url":"https://avatars.githubusercontent.com/u/946903?v=4","gravatar_id":"","url":"https://api.github.com/users/leezu","html_url":"https://github.com/leezu","followers_url":"https://api.github.com/users/leezu/followers","following_url":"https://api.github.com/users/leezu/following{/other_user}","gists_url":"https://api.github.com/users/leezu/gists{/gist_id}","starred_url":"https://api.github.com/users/leezu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leezu/subscriptions","organizations_url":"https://api.github.com/users/leezu/orgs","repos_url":"https://api.github.com/users/leezu/repos","events_url":"https://api.github.com/users/leezu/events{/privacy}","received_events_url":"https://api.github.com/users/leezu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-07T23:13:22Z","updated_at":"2020-04-07T23:13:22Z","author_association":"NONE","body":"Any release after mxnet 1.6 will build with mkldnn by default. If you don't want to use mkldnn, you need to use mxnet-native package in the future. See https://lists.apache.org/thread.html/1a22dbd79098adab6d02d16e8d607bae2acc908c0bb1b085d28a51ba@%3Cdev.mxnet.apache.org%3E","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/610664896/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/610666034","html_url":"https://github.com/apache/tvm/pull/5261#issuecomment-610666034","issue_url":"https://api.github.com/repos/apache/tvm/issues/5261","id":610666034,"node_id":"MDEyOklzc3VlQ29tbWVudDYxMDY2NjAzNA==","user":{"login":"masahi","id":1776403,"node_id":"MDQ6VXNlcjE3NzY0MDM=","avatar_url":"https://avatars.githubusercontent.com/u/1776403?v=4","gravatar_id":"","url":"https://api.github.com/users/masahi","html_url":"https://github.com/masahi","followers_url":"https://api.github.com/users/masahi/followers","following_url":"https://api.github.com/users/masahi/following{/other_user}","gists_url":"https://api.github.com/users/masahi/gists{/gist_id}","starred_url":"https://api.github.com/users/masahi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/masahi/subscriptions","organizations_url":"https://api.github.com/users/masahi/orgs","repos_url":"https://api.github.com/users/masahi/repos","events_url":"https://api.github.com/users/masahi/events{/privacy}","received_events_url":"https://api.github.com/users/masahi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-07T23:17:13Z","updated_at":"2020-04-07T23:17:13Z","author_association":"MEMBER","body":"@trevor-m Yeah agree. I'm looking to support either function call or \"manual inline\" in the codegen.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/610666034/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/610673485","html_url":"https://github.com/apache/tvm/pull/5270#issuecomment-610673485","issue_url":"https://api.github.com/repos/apache/tvm/issues/5270","id":610673485,"node_id":"MDEyOklzc3VlQ29tbWVudDYxMDY3MzQ4NQ==","user":{"login":"icemelon","id":2696494,"node_id":"MDQ6VXNlcjI2OTY0OTQ=","avatar_url":"https://avatars.githubusercontent.com/u/2696494?v=4","gravatar_id":"","url":"https://api.github.com/users/icemelon","html_url":"https://github.com/icemelon","followers_url":"https://api.github.com/users/icemelon/followers","following_url":"https://api.github.com/users/icemelon/following{/other_user}","gists_url":"https://api.github.com/users/icemelon/gists{/gist_id}","starred_url":"https://api.github.com/users/icemelon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/icemelon/subscriptions","organizations_url":"https://api.github.com/users/icemelon/orgs","repos_url":"https://api.github.com/users/icemelon/repos","events_url":"https://api.github.com/users/icemelon/events{/privacy}","received_events_url":"https://api.github.com/users/icemelon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-07T23:44:06Z","updated_at":"2020-04-07T23:44:45Z","author_association":"MEMBER","body":"Thanks @leezu for the clarification. According to the link @leezu shares, mxnet-mkl is able to run on AMD CPU. So should we just keep mxnet-mkl so that @shoubhik can use the quantization feature for test cases?\r\n\r\n@tqchen ","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/610673485/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/610675721","html_url":"https://github.com/apache/tvm/pull/5270#issuecomment-610675721","issue_url":"https://api.github.com/repos/apache/tvm/issues/5270","id":610675721,"node_id":"MDEyOklzc3VlQ29tbWVudDYxMDY3NTcyMQ==","user":{"login":"anijain2305","id":13822661,"node_id":"MDQ6VXNlcjEzODIyNjYx","avatar_url":"https://avatars.githubusercontent.com/u/13822661?v=4","gravatar_id":"","url":"https://api.github.com/users/anijain2305","html_url":"https://github.com/anijain2305","followers_url":"https://api.github.com/users/anijain2305/followers","following_url":"https://api.github.com/users/anijain2305/following{/other_user}","gists_url":"https://api.github.com/users/anijain2305/gists{/gist_id}","starred_url":"https://api.github.com/users/anijain2305/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/anijain2305/subscriptions","organizations_url":"https://api.github.com/users/anijain2305/orgs","repos_url":"https://api.github.com/users/anijain2305/repos","events_url":"https://api.github.com/users/anijain2305/events{/privacy}","received_events_url":"https://api.github.com/users/anijain2305/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-07T23:52:34Z","updated_at":"2020-04-07T23:52:34Z","author_association":"CONTRIBUTOR","body":"How about ARM CPUs?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/610675721/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/610677853","html_url":"https://github.com/apache/tvm/pull/4459#issuecomment-610677853","issue_url":"https://api.github.com/repos/apache/tvm/issues/4459","id":610677853,"node_id":"MDEyOklzc3VlQ29tbWVudDYxMDY3Nzg1Mw==","user":{"login":"tqchen","id":2577440,"node_id":"MDQ6VXNlcjI1Nzc0NDA=","avatar_url":"https://avatars.githubusercontent.com/u/2577440?v=4","gravatar_id":"","url":"https://api.github.com/users/tqchen","html_url":"https://github.com/tqchen","followers_url":"https://api.github.com/users/tqchen/followers","following_url":"https://api.github.com/users/tqchen/following{/other_user}","gists_url":"https://api.github.com/users/tqchen/gists{/gist_id}","starred_url":"https://api.github.com/users/tqchen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tqchen/subscriptions","organizations_url":"https://api.github.com/users/tqchen/orgs","repos_url":"https://api.github.com/users/tqchen/repos","events_url":"https://api.github.com/users/tqchen/events{/privacy}","received_events_url":"https://api.github.com/users/tqchen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-08T00:00:12Z","updated_at":"2020-04-08T00:00:12Z","author_association":"MEMBER","body":"Thanks @tobegit3hub @FrozenGene @zhiics @soiferj @wrongtest @gmagogsfm @yzhliu . This PR is now merged","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/610677853/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/610682499","html_url":"https://github.com/apache/tvm/pull/5261#issuecomment-610682499","issue_url":"https://api.github.com/repos/apache/tvm/issues/5261","id":610682499,"node_id":"MDEyOklzc3VlQ29tbWVudDYxMDY4MjQ5OQ==","user":{"login":"masahi","id":1776403,"node_id":"MDQ6VXNlcjE3NzY0MDM=","avatar_url":"https://avatars.githubusercontent.com/u/1776403?v=4","gravatar_id":"","url":"https://api.github.com/users/masahi","html_url":"https://github.com/masahi","followers_url":"https://api.github.com/users/masahi/followers","following_url":"https://api.github.com/users/masahi/following{/other_user}","gists_url":"https://api.github.com/users/masahi/gists{/gist_id}","starred_url":"https://api.github.com/users/masahi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/masahi/subscriptions","organizations_url":"https://api.github.com/users/masahi/orgs","repos_url":"https://api.github.com/users/masahi/repos","events_url":"https://api.github.com/users/masahi/events{/privacy}","received_events_url":"https://api.github.com/users/masahi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-08T00:16:44Z","updated_at":"2020-04-08T00:16:44Z","author_association":"MEMBER","body":"Ok got the DNNL conv + bias + relu working (https://github.com/masahi/tvm/compare/byoc-composite...masahi:dnnl-composite). This is a reimplmentation of https://github.com/apache/incubator-tvm/pull/4741 based on composite annotate support in this PR, rather than the manual approach. I think it is much cleaner.\r\n\r\nI can send a new PR as soon as this PR is merged.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/610682499/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/610683044","html_url":"https://github.com/apache/tvm/pull/5270#issuecomment-610683044","issue_url":"https://api.github.com/repos/apache/tvm/issues/5270","id":610683044,"node_id":"MDEyOklzc3VlQ29tbWVudDYxMDY4MzA0NA==","user":{"login":"icemelon","id":2696494,"node_id":"MDQ6VXNlcjI2OTY0OTQ=","avatar_url":"https://avatars.githubusercontent.com/u/2696494?v=4","gravatar_id":"","url":"https://api.github.com/users/icemelon","html_url":"https://github.com/icemelon","followers_url":"https://api.github.com/users/icemelon/followers","following_url":"https://api.github.com/users/icemelon/following{/other_user}","gists_url":"https://api.github.com/users/icemelon/gists{/gist_id}","starred_url":"https://api.github.com/users/icemelon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/icemelon/subscriptions","organizations_url":"https://api.github.com/users/icemelon/orgs","repos_url":"https://api.github.com/users/icemelon/repos","events_url":"https://api.github.com/users/icemelon/events{/privacy}","received_events_url":"https://api.github.com/users/icemelon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-08T00:18:48Z","updated_at":"2020-04-08T00:18:48Z","author_association":"MEMBER","body":"@anijain2305 What do you mean ARM CPUs? mxnet doesn't have pip wheel for ARM.","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/610683044/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/tvm/issues/comments/610684437","html_url":"https://github.com/apache/tvm/pull/5270#issuecomment-610684437","issue_url":"https://api.github.com/repos/apache/tvm/issues/5270","id":610684437,"node_id":"MDEyOklzc3VlQ29tbWVudDYxMDY4NDQzNw==","user":{"login":"shoubhik","id":2293791,"node_id":"MDQ6VXNlcjIyOTM3OTE=","avatar_url":"https://avatars.githubusercontent.com/u/2293791?v=4","gravatar_id":"","url":"https://api.github.com/users/shoubhik","html_url":"https://github.com/shoubhik","followers_url":"https://api.github.com/users/shoubhik/followers","following_url":"https://api.github.com/users/shoubhik/following{/other_user}","gists_url":"https://api.github.com/users/shoubhik/gists{/gist_id}","starred_url":"https://api.github.com/users/shoubhik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/shoubhik/subscriptions","organizations_url":"https://api.github.com/users/shoubhik/orgs","repos_url":"https://api.github.com/users/shoubhik/repos","events_url":"https://api.github.com/users/shoubhik/events{/privacy}","received_events_url":"https://api.github.com/users/shoubhik/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-04-08T00:24:09Z","updated_at":"2020-04-08T00:24:09Z","author_association":"CONTRIBUTOR","body":"If mxnet-mkl does not break any existing functionality we should probably take it as a dependency. That gives us enough wiggle room and infra in the future to experiment on how we can add tests for mxnet Qnn. What do you guys think?","reactions":{"url":"https://api.github.com/repos/apache/tvm/issues/comments/610684437/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]