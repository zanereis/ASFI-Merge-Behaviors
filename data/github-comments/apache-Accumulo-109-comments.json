[{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1527669292","html_url":"https://github.com/apache/accumulo/pull/3361#issuecomment-1527669292","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3361","id":1527669292,"node_id":"IC_kwDOACaFSM5bDmIs","user":{"login":"ctubbsii","id":1280725,"node_id":"MDQ6VXNlcjEyODA3MjU=","avatar_url":"https://avatars.githubusercontent.com/u/1280725?v=4","gravatar_id":"","url":"https://api.github.com/users/ctubbsii","html_url":"https://github.com/ctubbsii","followers_url":"https://api.github.com/users/ctubbsii/followers","following_url":"https://api.github.com/users/ctubbsii/following{/other_user}","gists_url":"https://api.github.com/users/ctubbsii/gists{/gist_id}","starred_url":"https://api.github.com/users/ctubbsii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ctubbsii/subscriptions","organizations_url":"https://api.github.com/users/ctubbsii/orgs","repos_url":"https://api.github.com/users/ctubbsii/repos","events_url":"https://api.github.com/users/ctubbsii/events{/privacy}","received_events_url":"https://api.github.com/users/ctubbsii/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-04-28T14:38:47Z","updated_at":"2023-04-28T14:38:47Z","author_association":"MEMBER","body":"> When I was looking at that code it gave me pause and a comment would have clarified that it was safe / expected without needing to understand why it was safe in that context.\r\n\r\nI suspect it gave you pause because you know extra things about how context is passed around widely in other threads inside our server classes. But that's clearly not the case here.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1527669292/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1527670717","html_url":"https://github.com/apache/accumulo/pull/3360#issuecomment-1527670717","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3360","id":1527670717,"node_id":"IC_kwDOACaFSM5bDme9","user":{"login":"EdColeman","id":7047700,"node_id":"MDQ6VXNlcjcwNDc3MDA=","avatar_url":"https://avatars.githubusercontent.com/u/7047700?v=4","gravatar_id":"","url":"https://api.github.com/users/EdColeman","html_url":"https://github.com/EdColeman","followers_url":"https://api.github.com/users/EdColeman/followers","following_url":"https://api.github.com/users/EdColeman/following{/other_user}","gists_url":"https://api.github.com/users/EdColeman/gists{/gist_id}","starred_url":"https://api.github.com/users/EdColeman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/EdColeman/subscriptions","organizations_url":"https://api.github.com/users/EdColeman/orgs","repos_url":"https://api.github.com/users/EdColeman/repos","events_url":"https://api.github.com/users/EdColeman/events{/privacy}","received_events_url":"https://api.github.com/users/EdColeman/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-04-28T14:39:55Z","updated_at":"2023-04-28T14:39:55Z","author_association":"CONTRIBUTOR","body":"I'm fine with 2.1 is the tool.  It seems unlikely to occur, but I guess I was thinking that if a group went from a very old version and upgraded to something modern, then external users \"might\" see an issue if they needed to run / do something that they do not do regularly.  So, rather that the admin need to be reactive, they could be pro-active before the \"old-account\" became suddenly a \"crisis\" to the end-user. ","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1527670717/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1527676547","html_url":"https://github.com/apache/accumulo/pull/3360#issuecomment-1527676547","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3360","id":1527676547,"node_id":"IC_kwDOACaFSM5bDn6D","user":{"login":"ctubbsii","id":1280725,"node_id":"MDQ6VXNlcjEyODA3MjU=","avatar_url":"https://avatars.githubusercontent.com/u/1280725?v=4","gravatar_id":"","url":"https://api.github.com/users/ctubbsii","html_url":"https://github.com/ctubbsii","followers_url":"https://api.github.com/users/ctubbsii/followers","following_url":"https://api.github.com/users/ctubbsii/following{/other_user}","gists_url":"https://api.github.com/users/ctubbsii/gists{/gist_id}","starred_url":"https://api.github.com/users/ctubbsii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ctubbsii/subscriptions","organizations_url":"https://api.github.com/users/ctubbsii/orgs","repos_url":"https://api.github.com/users/ctubbsii/repos","events_url":"https://api.github.com/users/ctubbsii/events{/privacy}","received_events_url":"https://api.github.com/users/ctubbsii/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-04-28T14:44:05Z","updated_at":"2023-04-28T14:44:05Z","author_association":"MEMBER","body":"> I'm fine with 2.1 is the tool. It seems unlikely to occur, but I guess I was thinking that if a group went from a very old version and upgraded to something modern, then external users \"might\" see an issue if they needed to run / do something that they do not do regularly. So, rather that the admin need to be reactive, they could be pro-active before the \"old-account\" became suddenly a \"crisis\" to the end-user.\r\n\r\nEven if upgrading from a very old version, they still have to upgrade to 2.1 first, at which point they'll see the warnings before they proceed to the next upgrade. But even if there's a worse case scenario, and they don't stop to authenticate any users... they still have a solution to reset the password for the root user, and re-set up additional users and permissions. It may be inconvenient in this extreme case, but it's far from a \"crisis\". And, this extreme case is very unlikely to happen. At a minimum, the vast vast majority of users are going to at least authenticate the root user once before upgrading.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1527676547/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1527753486","html_url":"https://github.com/apache/accumulo/pull/3355#issuecomment-1527753486","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3355","id":1527753486,"node_id":"IC_kwDOACaFSM5bD6sO","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-04-28T15:43:08Z","updated_at":"2023-04-28T15:43:08Z","author_association":"CONTRIBUTOR","body":"> @keith-turner Do you see any pitfalls due to not using the TabletIteratorEnvironment's implementation? (See previous comments)\r\n\r\nBefore this change it was calling the following code which could potentially add the ProblemReportingIterator and TimeSettingIterator.\r\n\r\nhttps://github.com/apache/accumulo/blob/9c459ce8f06d9d9e04280d020ea091fedf13749b/server/base/src/main/java/org/apache/accumulo/server/fs/FileManager.java#L503","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1527753486/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1527772760","html_url":"https://github.com/apache/accumulo/pull/3355#issuecomment-1527772760","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3355","id":1527772760,"node_id":"IC_kwDOACaFSM5bD_ZY","user":{"login":"ctubbsii","id":1280725,"node_id":"MDQ6VXNlcjEyODA3MjU=","avatar_url":"https://avatars.githubusercontent.com/u/1280725?v=4","gravatar_id":"","url":"https://api.github.com/users/ctubbsii","html_url":"https://github.com/ctubbsii","followers_url":"https://api.github.com/users/ctubbsii/followers","following_url":"https://api.github.com/users/ctubbsii/following{/other_user}","gists_url":"https://api.github.com/users/ctubbsii/gists{/gist_id}","starred_url":"https://api.github.com/users/ctubbsii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ctubbsii/subscriptions","organizations_url":"https://api.github.com/users/ctubbsii/orgs","repos_url":"https://api.github.com/users/ctubbsii/repos","events_url":"https://api.github.com/users/ctubbsii/events{/privacy}","received_events_url":"https://api.github.com/users/ctubbsii/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-04-28T16:00:04Z","updated_at":"2023-04-28T16:00:54Z","author_association":"MEMBER","body":"@keith-turner wrote:\r\n> Before this change it was calling the following code which could potentially add the ProblemReportingIterator and TimeSettingIterator.\r\n\r\nRight. I think it also limited the number of open readers (because there is a configurable max open) and caches the open readers for re-use. We're bypassing all of that, and I'm not sure if that's safe to do. It's very unlikely we're going to hit this code at all, given that nobody I know uses Mapfiles at all anymore. But I'm just not that familiar with the file reader code at the bottom of the iterator stack on the server side, and don't feel qualified to know whether those things are important enough that we shouldn't bypass them.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1527772760/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1527777664","html_url":"https://github.com/apache/accumulo/issues/3363#issuecomment-1527777664","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3363","id":1527777664,"node_id":"IC_kwDOACaFSM5bEAmA","user":{"login":"ctubbsii","id":1280725,"node_id":"MDQ6VXNlcjEyODA3MjU=","avatar_url":"https://avatars.githubusercontent.com/u/1280725?v=4","gravatar_id":"","url":"https://api.github.com/users/ctubbsii","html_url":"https://github.com/ctubbsii","followers_url":"https://api.github.com/users/ctubbsii/followers","following_url":"https://api.github.com/users/ctubbsii/following{/other_user}","gists_url":"https://api.github.com/users/ctubbsii/gists{/gist_id}","starred_url":"https://api.github.com/users/ctubbsii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ctubbsii/subscriptions","organizations_url":"https://api.github.com/users/ctubbsii/orgs","repos_url":"https://api.github.com/users/ctubbsii/repos","events_url":"https://api.github.com/users/ctubbsii/events{/privacy}","received_events_url":"https://api.github.com/users/ctubbsii/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-04-28T16:03:51Z","updated_at":"2023-04-28T16:03:51Z","author_association":"MEMBER","body":"This bug sounds familiar. I thought we addressed this, or something very similar, in a previous bugfix for 2.0 or 2.1.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1527777664/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1527800231","html_url":"https://github.com/apache/accumulo/pull/3355#issuecomment-1527800231","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3355","id":1527800231,"node_id":"IC_kwDOACaFSM5bEGGn","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-04-28T16:24:01Z","updated_at":"2023-04-28T16:24:01Z","author_association":"CONTRIBUTOR","body":"Looking into a bit more the initial MapFileIterator is at the lowest level s of the stack.  For scan and compaction it would have iterators like the ProblemReportingIterator and TimeSettingIterator layered on top of the initial MapFileITerator.  If deep copy is called on the stack it will go down through ProblemReportingIterator and TimeSettingIterator, so there is no need to set those up at the lowest level because they are already at higher levels.  Since its so low in the stack it should be doing very minimal and I think this changes looks good.  Would keep the config passed into the constructor.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1527800231/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1528156107","html_url":"https://github.com/apache/accumulo/pull/3232#issuecomment-1528156107","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3232","id":1528156107,"node_id":"IC_kwDOACaFSM5bFc_L","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-04-28T22:29:13Z","updated_at":"2023-04-28T22:29:13Z","author_association":"CONTRIBUTOR","body":"Superseded by #3251  ","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1528156107/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1528718570","html_url":"https://github.com/apache/accumulo/pull/3365#issuecomment-1528718570","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3365","id":1528718570,"node_id":"IC_kwDOACaFSM5bHmTq","user":{"login":"ctubbsii","id":1280725,"node_id":"MDQ6VXNlcjEyODA3MjU=","avatar_url":"https://avatars.githubusercontent.com/u/1280725?v=4","gravatar_id":"","url":"https://api.github.com/users/ctubbsii","html_url":"https://github.com/ctubbsii","followers_url":"https://api.github.com/users/ctubbsii/followers","following_url":"https://api.github.com/users/ctubbsii/following{/other_user}","gists_url":"https://api.github.com/users/ctubbsii/gists{/gist_id}","starred_url":"https://api.github.com/users/ctubbsii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ctubbsii/subscriptions","organizations_url":"https://api.github.com/users/ctubbsii/orgs","repos_url":"https://api.github.com/users/ctubbsii/repos","events_url":"https://api.github.com/users/ctubbsii/events{/privacy}","received_events_url":"https://api.github.com/users/ctubbsii/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-04-29T08:35:49Z","updated_at":"2023-04-29T08:35:49Z","author_association":"MEMBER","body":"Is this applicable to 2.1 also?","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1528718570/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1528807830","html_url":"https://github.com/apache/accumulo/pull/3332#issuecomment-1528807830","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3332","id":1528807830,"node_id":"IC_kwDOACaFSM5bH8GW","user":{"login":"cshannon","id":123009,"node_id":"MDQ6VXNlcjEyMzAwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/123009?v=4","gravatar_id":"","url":"https://api.github.com/users/cshannon","html_url":"https://github.com/cshannon","followers_url":"https://api.github.com/users/cshannon/followers","following_url":"https://api.github.com/users/cshannon/following{/other_user}","gists_url":"https://api.github.com/users/cshannon/gists{/gist_id}","starred_url":"https://api.github.com/users/cshannon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cshannon/subscriptions","organizations_url":"https://api.github.com/users/cshannon/orgs","repos_url":"https://api.github.com/users/cshannon/repos","events_url":"https://api.github.com/users/cshannon/events{/privacy}","received_events_url":"https://api.github.com/users/cshannon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-04-29T15:03:20Z","updated_at":"2023-04-29T15:03:20Z","author_association":"CONTRIBUTOR","body":"> I wonder if instead of creating `FencedReader` and `IndexedFileSKVIterator` the existing objects should be modified to include the fence Range. I think the fence Range should be required, not optional. I think that would make the code less confusing in the future - one way of doing things vs the developer having to make the \"right\" choice later.\r\n\r\nI've been going back and forth with this idea. We could ultimately decide to do this but I talked to @keith-turner about this a bit yesterday and and he thought having it separate is nice for testing and for optimization as we can leave out all the extra code for handing fencing in the iterator stack if there's no fence effective fencing going on. Even if we make it required it still could be effectively optional and ignored if it is an infinite range or covers the entire file. On the other hand we could probably write it in such a way that even if we require a fence object in the RFile we could essentially avoid the performance penalty by skipping all the checks and seeks and stuff if we can detect that the rfile fits entirely in the fence. I can let @keith-turner comment here too if he wants to elaborate more on this thoughts about this.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1528807830/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1528815427","html_url":"https://github.com/apache/accumulo/pull/3331#issuecomment-1528815427","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3331","id":1528815427,"node_id":"IC_kwDOACaFSM5bH99D","user":{"login":"cshannon","id":123009,"node_id":"MDQ6VXNlcjEyMzAwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/123009?v=4","gravatar_id":"","url":"https://api.github.com/users/cshannon","html_url":"https://github.com/cshannon","followers_url":"https://api.github.com/users/cshannon/followers","following_url":"https://api.github.com/users/cshannon/following{/other_user}","gists_url":"https://api.github.com/users/cshannon/gists{/gist_id}","starred_url":"https://api.github.com/users/cshannon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cshannon/subscriptions","organizations_url":"https://api.github.com/users/cshannon/orgs","repos_url":"https://api.github.com/users/cshannon/repos","events_url":"https://api.github.com/users/cshannon/events{/privacy}","received_events_url":"https://api.github.com/users/cshannon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-04-29T15:42:44Z","updated_at":"2023-04-29T15:42:44Z","author_association":"CONTRIBUTOR","body":"I ran a full IT build against this PR and it passed.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1528815427/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1528816358","html_url":"https://github.com/apache/accumulo/pull/3365#issuecomment-1528816358","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3365","id":1528816358,"node_id":"IC_kwDOACaFSM5bH-Lm","user":{"login":"cshannon","id":123009,"node_id":"MDQ6VXNlcjEyMzAwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/123009?v=4","gravatar_id":"","url":"https://api.github.com/users/cshannon","html_url":"https://github.com/cshannon","followers_url":"https://api.github.com/users/cshannon/followers","following_url":"https://api.github.com/users/cshannon/following{/other_user}","gists_url":"https://api.github.com/users/cshannon/gists{/gist_id}","starred_url":"https://api.github.com/users/cshannon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cshannon/subscriptions","organizations_url":"https://api.github.com/users/cshannon/orgs","repos_url":"https://api.github.com/users/cshannon/repos","events_url":"https://api.github.com/users/cshannon/events{/privacy}","received_events_url":"https://api.github.com/users/cshannon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-04-29T15:47:08Z","updated_at":"2023-04-29T15:47:08Z","author_association":"CONTRIBUTOR","body":"I think this should go into 2.1 as it seems like a bug, especially if we also merge #3331 into 2.1","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1528816358/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1528823989","html_url":"https://github.com/apache/accumulo/issues/3346#issuecomment-1528823989","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3346","id":1528823989,"node_id":"IC_kwDOACaFSM5bIAC1","user":{"login":"cshannon","id":123009,"node_id":"MDQ6VXNlcjEyMzAwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/123009?v=4","gravatar_id":"","url":"https://api.github.com/users/cshannon","html_url":"https://github.com/cshannon","followers_url":"https://api.github.com/users/cshannon/followers","following_url":"https://api.github.com/users/cshannon/following{/other_user}","gists_url":"https://api.github.com/users/cshannon/gists{/gist_id}","starred_url":"https://api.github.com/users/cshannon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cshannon/subscriptions","organizations_url":"https://api.github.com/users/cshannon/orgs","repos_url":"https://api.github.com/users/cshannon/repos","events_url":"https://api.github.com/users/cshannon/events{/privacy}","received_events_url":"https://api.github.com/users/cshannon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-04-29T16:26:57Z","updated_at":"2023-05-01T21:32:17Z","author_association":"CONTRIBUTOR","body":"It looks like the original version of this was first merged in #2320 and was to fix #2031.  There were a couple more modifications by #2524 and #2583\r\n\r\nSo there of course is the question of why the scanner is closed (as @ivakegg said, possible HDFS issues reading RFiles) but at the very least we need to catch exceptions here because as shown uncaught runtime exceptions will bubble up and kill the task and the server.\r\n\r\nI think that simply catching exceptions and logging an error is probably fine here and I don't necessarily think we need to do anything else because if it's something like HDFS issues as alluded do with the scans than we really can't handle that other than catch the errors and not fall over. I also don't think we need to worry about an exponential backoff or anything and can just let the task retry normally the next run. The default health check period is every 30 minutes so it's certainly not a rapid check that needs to be backed off (at least unless someone decided to speed it up with the property [here](https://github.com/apache/accumulo/blob/ba472d6e24daa8f0014a22cabace3061f5d46413/core/src/main/java/org/apache/accumulo/core/conf/Property.java#L625))","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1528823989/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1528838346","html_url":"https://github.com/apache/accumulo/issues/3348#issuecomment-1528838346","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3348","id":1528838346,"node_id":"IC_kwDOACaFSM5bIDjK","user":{"login":"cshannon","id":123009,"node_id":"MDQ6VXNlcjEyMzAwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/123009?v=4","gravatar_id":"","url":"https://api.github.com/users/cshannon","html_url":"https://github.com/cshannon","followers_url":"https://api.github.com/users/cshannon/followers","following_url":"https://api.github.com/users/cshannon/following{/other_user}","gists_url":"https://api.github.com/users/cshannon/gists{/gist_id}","starred_url":"https://api.github.com/users/cshannon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cshannon/subscriptions","organizations_url":"https://api.github.com/users/cshannon/orgs","repos_url":"https://api.github.com/users/cshannon/repos","events_url":"https://api.github.com/users/cshannon/events{/privacy}","received_events_url":"https://api.github.com/users/cshannon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-04-29T17:47:24Z","updated_at":"2023-04-29T17:47:24Z","author_association":"CONTRIBUTOR","body":"I only briefly looked this over so it needs to be investigated in more detail but at first glance it seems like we could simply check for a negative value and return Long.MAX_VALUE instead of the negative when it overflows. We'd also need to be careful to not overflow elsewhere as well. For example, we iterate [here](https://github.com/apache/accumulo/blob/main/hadoop-mapreduce/src/main/java/org/apache/accumulo/hadoopImpl/mapreduce/BatchInputSplit.java#L113) and sum the total so that could overflow as well.\r\n\r\nThere is a [method](https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/Math.html#addExact(long,long)) in the Math class that could be of use here to detect overflow but it's normally used for adding and this is doing bit shifting so not sure there are any utilities to help here. ","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1528838346/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1529074073","html_url":"https://github.com/apache/accumulo/pull/3246#issuecomment-1529074073","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3246","id":1529074073,"node_id":"IC_kwDOACaFSM5bI9GZ","user":{"login":"cshannon","id":123009,"node_id":"MDQ6VXNlcjEyMzAwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/123009?v=4","gravatar_id":"","url":"https://api.github.com/users/cshannon","html_url":"https://github.com/cshannon","followers_url":"https://api.github.com/users/cshannon/followers","following_url":"https://api.github.com/users/cshannon/following{/other_user}","gists_url":"https://api.github.com/users/cshannon/gists{/gist_id}","starred_url":"https://api.github.com/users/cshannon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cshannon/subscriptions","organizations_url":"https://api.github.com/users/cshannon/orgs","repos_url":"https://api.github.com/users/cshannon/repos","events_url":"https://api.github.com/users/cshannon/events{/privacy}","received_events_url":"https://api.github.com/users/cshannon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-04-30T16:42:44Z","updated_at":"2023-04-30T16:42:54Z","author_association":"CONTRIBUTOR","body":"Closing this for now as this has been superseded by #3332 ","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1529074073/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1529120364","html_url":"https://github.com/apache/accumulo/pull/3332#issuecomment-1529120364","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3332","id":1529120364,"node_id":"IC_kwDOACaFSM5bJIZs","user":{"login":"cshannon","id":123009,"node_id":"MDQ6VXNlcjEyMzAwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/123009?v=4","gravatar_id":"","url":"https://api.github.com/users/cshannon","html_url":"https://github.com/cshannon","followers_url":"https://api.github.com/users/cshannon/followers","following_url":"https://api.github.com/users/cshannon/following{/other_user}","gists_url":"https://api.github.com/users/cshannon/gists{/gist_id}","starred_url":"https://api.github.com/users/cshannon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cshannon/subscriptions","organizations_url":"https://api.github.com/users/cshannon/orgs","repos_url":"https://api.github.com/users/cshannon/repos","events_url":"https://api.github.com/users/cshannon/events{/privacy}","received_events_url":"https://api.github.com/users/cshannon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-04-30T19:21:48Z","updated_at":"2023-04-30T19:21:48Z","author_association":"CONTRIBUTOR","body":"I have been working today on a new commit/PR to start adding range information to the CQ when storing tablet file metadata so we can store the same file with different ranges and treat them as unique files. \r\n\r\nThe PR I am working on is based off of this branch so I'm not sure the best way of going about submitting a draft PR. It would be nice to submit a separate PR for the change as it's pretty substantial but if I do that it also pulls in the commits from this PR so it's not isolated so I might as well just push the new commit here if I were to do that.\r\n\r\n@ctubbsii - Any thoughts on the best way to chain PRs or how to handle this situation? I know this was a problem with elasticity as well.\r\n\r\nI'm not quite ready to submit the draft PR yet as there's still some things that need fixing that are expecting the old format (like GC so those tests break) but the branch i'm working on is here https://github.com/cshannon/accumulo/tree/file-metadata-range  I'll create an actual draft PR when I think it's ready to get some initial reviews, hopefully later this week. In the meantime i'll be amending/force pushing a lot.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1529120364/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1529614046","html_url":"https://github.com/apache/accumulo/issues/3095#issuecomment-1529614046","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3095","id":1529614046,"node_id":"IC_kwDOACaFSM5bLA7e","user":{"login":"dlmarion","id":567911,"node_id":"MDQ6VXNlcjU2NzkxMQ==","avatar_url":"https://avatars.githubusercontent.com/u/567911?v=4","gravatar_id":"","url":"https://api.github.com/users/dlmarion","html_url":"https://github.com/dlmarion","followers_url":"https://api.github.com/users/dlmarion/followers","following_url":"https://api.github.com/users/dlmarion/following{/other_user}","gists_url":"https://api.github.com/users/dlmarion/gists{/gist_id}","starred_url":"https://api.github.com/users/dlmarion/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dlmarion/subscriptions","organizations_url":"https://api.github.com/users/dlmarion/orgs","repos_url":"https://api.github.com/users/dlmarion/repos","events_url":"https://api.github.com/users/dlmarion/events{/privacy}","received_events_url":"https://api.github.com/users/dlmarion/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-01T11:48:20Z","updated_at":"2023-05-01T11:48:20Z","author_association":"CONTRIBUTOR","body":"@ctubbsii - This is great, thanks for doing this!","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1529614046/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1529730624","html_url":"https://github.com/apache/accumulo/pull/3332#issuecomment-1529730624","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3332","id":1529730624,"node_id":"IC_kwDOACaFSM5bLdZA","user":{"login":"dlmarion","id":567911,"node_id":"MDQ6VXNlcjU2NzkxMQ==","avatar_url":"https://avatars.githubusercontent.com/u/567911?v=4","gravatar_id":"","url":"https://api.github.com/users/dlmarion","html_url":"https://github.com/dlmarion","followers_url":"https://api.github.com/users/dlmarion/followers","following_url":"https://api.github.com/users/dlmarion/following{/other_user}","gists_url":"https://api.github.com/users/dlmarion/gists{/gist_id}","starred_url":"https://api.github.com/users/dlmarion/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dlmarion/subscriptions","organizations_url":"https://api.github.com/users/dlmarion/orgs","repos_url":"https://api.github.com/users/dlmarion/repos","events_url":"https://api.github.com/users/dlmarion/events{/privacy}","received_events_url":"https://api.github.com/users/dlmarion/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-01T13:50:25Z","updated_at":"2023-05-01T13:50:25Z","author_association":"CONTRIBUTOR","body":"> I have been working today on a new commit/PR to start adding range information to the CQ when storing tablet file metadata so we can store the same file with different ranges and treat them as unique files.\r\n\r\nWhat's the impetus for this vs what is being done here? I'm concerned about potential explosion in temporary tablet metadata entries (bulk import, flush files) that may cause the metadata tablets to split unnecessarily.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1529730624/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1529753812","html_url":"https://github.com/apache/accumulo/pull/3336#issuecomment-1529753812","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3336","id":1529753812,"node_id":"IC_kwDOACaFSM5bLjDU","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-01T14:10:18Z","updated_at":"2023-05-01T14:10:18Z","author_association":"CONTRIBUTOR","body":"Looked at bulk import V1 in 2.1 branch and I don't think this optimization could apply to bulk V1 because there is no good way to know what files are imported to what tablets.  In bulk V1 intermediate tservers do all of the work of figuring out what files go where and these tservers know something about the metadata.  However the manager does not know enough to limit the clean up scans.  \r\n\r\nWe could make this change in 2.1, but it would only benefit bulk import v2.  Bulk import V1 would continue to scan the entire table for each bulk import when doing cleanup.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1529753812/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1529783603","html_url":"https://github.com/apache/accumulo/pull/3336#issuecomment-1529783603","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3336","id":1529783603,"node_id":"IC_kwDOACaFSM5bLqUz","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-01T14:38:10Z","updated_at":"2023-05-01T14:38:23Z","author_association":"CONTRIBUTOR","body":"I rebased this onto 2.1","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1529783603/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1529943361","html_url":"https://github.com/apache/accumulo/pull/3366#issuecomment-1529943361","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3366","id":1529943361,"node_id":"IC_kwDOACaFSM5bMRVB","user":{"login":"EdColeman","id":7047700,"node_id":"MDQ6VXNlcjcwNDc3MDA=","avatar_url":"https://avatars.githubusercontent.com/u/7047700?v=4","gravatar_id":"","url":"https://api.github.com/users/EdColeman","html_url":"https://github.com/EdColeman","followers_url":"https://api.github.com/users/EdColeman/followers","following_url":"https://api.github.com/users/EdColeman/following{/other_user}","gists_url":"https://api.github.com/users/EdColeman/gists{/gist_id}","starred_url":"https://api.github.com/users/EdColeman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/EdColeman/subscriptions","organizations_url":"https://api.github.com/users/EdColeman/orgs","repos_url":"https://api.github.com/users/EdColeman/repos","events_url":"https://api.github.com/users/EdColeman/events{/privacy}","received_events_url":"https://api.github.com/users/EdColeman/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-01T16:52:29Z","updated_at":"2023-05-01T16:52:29Z","author_association":"CONTRIBUTOR","body":"I am not sure that just logging the error and then waiting for the next check is appropriate, and a retry and fail after X attempts may be a better approach.\r\n\r\nFor the case that triggered this, it seems the error is transient, but what if it was not?  I think the check was to validate that the tserver can read the entire metadata table - if it cannot, it may not be \"safe\" to continue to run with incomplete metadata information.  Even if those operations \"fail\" because the metadata cannot be known to be consistent, if we allow the tserver to keep running, then it seems like work would be continued to be assigned / attempted even though it will not work with the current tserver state.\r\n\r\nThis would be similar the the issue where tservers could not host tablets, but the manager keeps seeing that tserver as having 0 tablets and kept trying to make assignments to that \"under-utilized\" tserver. (the solution was to detect and remove the tserver lock to stop assignment attempts.\r\n\r\nThis change shifts the priority to \"keeping the tserver up\" rather than killing the process is it cannot fill a basic requirement of being able to maintain a consistent view of the metadata.  A retry may provide a balance of having a better chance to ride out transient errors, but still provide a hard fail if it cannot.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1529943361/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1529986095","html_url":"https://github.com/apache/accumulo/pull/3350#issuecomment-1529986095","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3350","id":1529986095,"node_id":"IC_kwDOACaFSM5bMbwv","user":{"login":"dlmarion","id":567911,"node_id":"MDQ6VXNlcjU2NzkxMQ==","avatar_url":"https://avatars.githubusercontent.com/u/567911?v=4","gravatar_id":"","url":"https://api.github.com/users/dlmarion","html_url":"https://github.com/dlmarion","followers_url":"https://api.github.com/users/dlmarion/followers","following_url":"https://api.github.com/users/dlmarion/following{/other_user}","gists_url":"https://api.github.com/users/dlmarion/gists{/gist_id}","starred_url":"https://api.github.com/users/dlmarion/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dlmarion/subscriptions","organizations_url":"https://api.github.com/users/dlmarion/orgs","repos_url":"https://api.github.com/users/dlmarion/repos","events_url":"https://api.github.com/users/dlmarion/events{/privacy}","received_events_url":"https://api.github.com/users/dlmarion/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-01T17:32:58Z","updated_at":"2023-05-01T17:32:58Z","author_association":"CONTRIBUTOR","body":"I wonder if the tablet refresh mechanism should be pulled out into a separate PR as a solution for #3310. ","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1529986095/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1529995969","html_url":"https://github.com/apache/accumulo/pull/3350#issuecomment-1529995969","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3350","id":1529995969,"node_id":"IC_kwDOACaFSM5bMeLB","user":{"login":"dlmarion","id":567911,"node_id":"MDQ6VXNlcjU2NzkxMQ==","avatar_url":"https://avatars.githubusercontent.com/u/567911?v=4","gravatar_id":"","url":"https://api.github.com/users/dlmarion","html_url":"https://github.com/dlmarion","followers_url":"https://api.github.com/users/dlmarion/followers","following_url":"https://api.github.com/users/dlmarion/following{/other_user}","gists_url":"https://api.github.com/users/dlmarion/gists{/gist_id}","starred_url":"https://api.github.com/users/dlmarion/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dlmarion/subscriptions","organizations_url":"https://api.github.com/users/dlmarion/orgs","repos_url":"https://api.github.com/users/dlmarion/repos","events_url":"https://api.github.com/users/dlmarion/events{/privacy}","received_events_url":"https://api.github.com/users/dlmarion/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-01T17:40:00Z","updated_at":"2023-05-01T17:40:00Z","author_association":"CONTRIBUTOR","body":"I'm curious if you need a refresh column in the metadata. You could send the RPC to the hosting tablet server as a FaTE transaction and expect a response. If the call times out or fails, then you could retry as part of the FaTE framework.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1529995969/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1530052719","html_url":"https://github.com/apache/accumulo/pull/3350#issuecomment-1530052719","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3350","id":1530052719,"node_id":"IC_kwDOACaFSM5bMsBv","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-01T18:33:12Z","updated_at":"2023-05-01T18:33:12Z","author_association":"CONTRIBUTOR","body":"> I'm curious if you need a refresh column in the metadata. You could send the RPC to the hosting tablet server as a FaTE transaction and expect a response. If the call times out or fails, then you could retry as part of the FaTE framework.\r\n\r\nI think that could be done and it may be more efficient for the normal case when everything is stable and working well.  The refresh column handles the following cases that would not handled by an RPC alone.\r\n\r\n * The refresh column is set with the location of the tserver at the time the files were added.  So it can detect if the tablet has moved since it added the files and if it did move then it knows that no refresh is needed.\r\n * In the case where the manager dies, the refresh column keeps track of what work is left across manager restarts.\r\n * The transaction id in the refresh column allows the tablet server to know if it has already recently loaded something.  For example if 3 fate transactions all want to refresh a tablet at around the same time the tablet can do one actual refresh and satisfy all request.  Without the refresh column the tablet will always have reload its metadata when requested even if its not needed (because a recent reload it did satisfies the request).\r\n * The refresh column allows FATE to process the refresh operations in the isReady call using async RPC which means a fate thread is not tied up.  Without the refresh column a FATE thread would have to be tied up until all tablets are refreshed because the tracking of what is refreshed is moved from metadata table to memory.  Also the Fate operation would have to use synchronous RPCs vs async.  Also the fate thread has to keep everything in memory.\r\n\r\nUsing only an RPC, I think we could do the following.  \r\n\r\n * Scan the metadata table for tablets with load markers and build a map of `Map<TServerLoc, List<KeyExtent>>`.  The map may contain some tservers that do not actually need to refresh because they were not the location when the files were set, but that does not hurt anythnig.\r\n * Continue sending synchronous RPCs unil a positive response has been received for everything in the map. \r\n\r\nBarring all the edge cases, this may be faster. The fate thread would be tied up for however long this takes. If all the fate threads are tied up, more can be added as long as memory supports it.  There are other fate operations that hold a bunch of stuff in memory and/or tie up a fate thread for an indefinite time period while waiting for a condition to become true.\r\n","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1530052719/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1530064131","html_url":"https://github.com/apache/accumulo/issues/3348#issuecomment-1530064131","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3348","id":1530064131,"node_id":"IC_kwDOACaFSM5bMu0D","user":{"login":"jschmidt10","id":1583214,"node_id":"MDQ6VXNlcjE1ODMyMTQ=","avatar_url":"https://avatars.githubusercontent.com/u/1583214?v=4","gravatar_id":"","url":"https://api.github.com/users/jschmidt10","html_url":"https://github.com/jschmidt10","followers_url":"https://api.github.com/users/jschmidt10/followers","following_url":"https://api.github.com/users/jschmidt10/following{/other_user}","gists_url":"https://api.github.com/users/jschmidt10/gists{/gist_id}","starred_url":"https://api.github.com/users/jschmidt10/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jschmidt10/subscriptions","organizations_url":"https://api.github.com/users/jschmidt10/orgs","repos_url":"https://api.github.com/users/jschmidt10/repos","events_url":"https://api.github.com/users/jschmidt10/events{/privacy}","received_events_url":"https://api.github.com/users/jschmidt10/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-01T18:46:32Z","updated_at":"2023-05-01T18:46:32Z","author_association":"CONTRIBUTOR","body":"@cshannon Thanks for checking it out. The MAX_VALUE sounds reasonable to me. Not sure how it's utilized in other non-Spark frameworks but seems like an estimate is reasonable and anything non-negative works.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1530064131/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1530098847","html_url":"https://github.com/apache/accumulo/pull/3350#issuecomment-1530098847","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3350","id":1530098847,"node_id":"IC_kwDOACaFSM5bM3Sf","user":{"login":"dlmarion","id":567911,"node_id":"MDQ6VXNlcjU2NzkxMQ==","avatar_url":"https://avatars.githubusercontent.com/u/567911?v=4","gravatar_id":"","url":"https://api.github.com/users/dlmarion","html_url":"https://github.com/dlmarion","followers_url":"https://api.github.com/users/dlmarion/followers","following_url":"https://api.github.com/users/dlmarion/following{/other_user}","gists_url":"https://api.github.com/users/dlmarion/gists{/gist_id}","starred_url":"https://api.github.com/users/dlmarion/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dlmarion/subscriptions","organizations_url":"https://api.github.com/users/dlmarion/orgs","repos_url":"https://api.github.com/users/dlmarion/repos","events_url":"https://api.github.com/users/dlmarion/events{/privacy}","received_events_url":"https://api.github.com/users/dlmarion/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-01T19:15:43Z","updated_at":"2023-05-01T19:15:43Z","author_association":"CONTRIBUTOR","body":"It appears that a [check](https://github.com/apache/accumulo/blob/elasticity/server/tserver/src/main/java/org/apache/accumulo/tserver/TabletServer.java#L779) for tablet metadata being out of date was already added (maybe in 2.1). I wonder if there is a way to consolidate some of these things on the tserver side.  Given that the TabletServer is going to have to periodically check the TabletMetadata to perform a refresh, I wonder if it would just be easier to have a scan iterator on the tablet metadata that computes a a single hash value for the tablet metadata in the metadata table. The hash could be stored in memory in the TabletMetadata object in the TabletServer, and if it's different, then refresh.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1530098847/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1530107739","html_url":"https://github.com/apache/accumulo/pull/3366#issuecomment-1530107739","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3366","id":1530107739,"node_id":"IC_kwDOACaFSM5bM5db","user":{"login":"ivakegg","id":347158,"node_id":"MDQ6VXNlcjM0NzE1OA==","avatar_url":"https://avatars.githubusercontent.com/u/347158?v=4","gravatar_id":"","url":"https://api.github.com/users/ivakegg","html_url":"https://github.com/ivakegg","followers_url":"https://api.github.com/users/ivakegg/followers","following_url":"https://api.github.com/users/ivakegg/following{/other_user}","gists_url":"https://api.github.com/users/ivakegg/gists{/gist_id}","starred_url":"https://api.github.com/users/ivakegg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ivakegg/subscriptions","organizations_url":"https://api.github.com/users/ivakegg/orgs","repos_url":"https://api.github.com/users/ivakegg/repos","events_url":"https://api.github.com/users/ivakegg/events{/privacy}","received_events_url":"https://api.github.com/users/ivakegg/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-01T19:25:24Z","updated_at":"2023-05-01T19:27:02Z","author_association":"CONTRIBUTOR","body":"Note that the validation was not throwing an exception and hence was not actually halting the server (see Tablet.compareTabletInfo).  It was halting because the tserver had a failure when attempting to scan the metadata.  Hence catching Exception is OK here (or moving it to the non-critical thread pool) UNLESS you want to have the validation halt the server.  In any case a scan failure should NOT halt the server.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1530107739/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1530121983","html_url":"https://github.com/apache/accumulo/pull/3350#issuecomment-1530121983","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3350","id":1530121983,"node_id":"IC_kwDOACaFSM5bM87_","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-01T19:42:05Z","updated_at":"2023-05-01T19:43:10Z","author_association":"CONTRIBUTOR","body":"> It appears that a [check](https://github.com/apache/accumulo/blob/elasticity/server/tserver/src/main/java/org/apache/accumulo/tserver/TabletServer.java#L779) for tablet metadata being out of date was already added (maybe in 2.1). I wonder if there is a way to consolidate some of these things on the tserver side.\r\n\r\nWe may be able to remove that because it based on different assumptions.  It assumes the tablet reads the metadata and then only writes to it and is doing periodic validation.  We are moving away from what is in memory on the tserver being the authority to whats in the metadata table being the authority.\r\n\r\n> I wonder if it would just be easier to have a scan iterator on the tablet metadata that computes a a single hash value for the tablet metadata in the metadata table. The hash could be stored in memory in the TabletMetadata object in the TabletServer, and if it's different, then refresh.\r\n\r\nThat could avoid some uneeded refreshes, the tablet would need to track the last few hashes.   The following shows a situation where tacking the last few hashes is useful.\r\n\r\n 1. bulk import fate operation reads hash A\r\n 2.  a compaction operation adds a file changing the hash to B\r\n 3. the compaction ask  the tserver to refresh getting the file updates from the compaction and bulk import and it remembers the current hash of the files is B and adds A to the set that tracks the last N hashes.\r\n 4. the refresh request from bulk import arrives with hash A. The tserver ignores this because A is one of its previous hashes.\r\n\r\nWe could also have a file update counter in the tablet.  Every time the set of files is updated in the tablet this counter is incremented by one.  This increment can be safely done with conditional mutations, its like an atomic long in java.  Refresh request just specify the counter they observed asking the tablet to update if its current counter is less than the one from the refresh RPC.  The counter may be simpler to implement than the hash.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1530121983/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1530126605","html_url":"https://github.com/apache/accumulo/pull/3350#issuecomment-1530126605","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3350","id":1530126605,"node_id":"IC_kwDOACaFSM5bM-EN","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-01T19:47:51Z","updated_at":"2023-05-01T19:47:51Z","author_association":"CONTRIBUTOR","body":"I am going to try only having a refresh RPC and no refresh column to see what it looks like and see if there are any surprises.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1530126605/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1530182946","html_url":"https://github.com/apache/accumulo/issues/3367#issuecomment-1530182946","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3367","id":1530182946,"node_id":"IC_kwDOACaFSM5bNL0i","user":{"login":"dlmarion","id":567911,"node_id":"MDQ6VXNlcjU2NzkxMQ==","avatar_url":"https://avatars.githubusercontent.com/u/567911?v=4","gravatar_id":"","url":"https://api.github.com/users/dlmarion","html_url":"https://github.com/dlmarion","followers_url":"https://api.github.com/users/dlmarion/followers","following_url":"https://api.github.com/users/dlmarion/following{/other_user}","gists_url":"https://api.github.com/users/dlmarion/gists{/gist_id}","starred_url":"https://api.github.com/users/dlmarion/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dlmarion/subscriptions","organizations_url":"https://api.github.com/users/dlmarion/orgs","repos_url":"https://api.github.com/users/dlmarion/repos","events_url":"https://api.github.com/users/dlmarion/events{/privacy}","received_events_url":"https://api.github.com/users/dlmarion/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-01T20:23:55Z","updated_at":"2023-05-01T20:23:55Z","author_association":"CONTRIBUTOR","body":"This is likely due to the upgrade of JLine to version 3. The escape character in their default line parser is set [here](https://github.com/jline/jline3/blob/master/reader/src/main/java/org/jline/reader/impl/DefaultParser.java#L53). I'm wondering if the solution is:\r\n\r\n```\r\n    DefaultParser parser = new DefaultParser();\r\n    parser.setEscapeChars(new char[] {(char) 92});\r\n    reader = LineReaderBuilder.builder().terminal(terminal).parser(parser).build();\r\n```\r\n\r\nWe'll have to test that out.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1530182946/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1530209460","html_url":"https://github.com/apache/accumulo/issues/3367#issuecomment-1530209460","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3367","id":1530209460,"node_id":"IC_kwDOACaFSM5bNSS0","user":{"login":"ctubbsii","id":1280725,"node_id":"MDQ6VXNlcjEyODA3MjU=","avatar_url":"https://avatars.githubusercontent.com/u/1280725?v=4","gravatar_id":"","url":"https://api.github.com/users/ctubbsii","html_url":"https://github.com/ctubbsii","followers_url":"https://api.github.com/users/ctubbsii/followers","following_url":"https://api.github.com/users/ctubbsii/following{/other_user}","gists_url":"https://api.github.com/users/ctubbsii/gists{/gist_id}","starred_url":"https://api.github.com/users/ctubbsii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ctubbsii/subscriptions","organizations_url":"https://api.github.com/users/ctubbsii/orgs","repos_url":"https://api.github.com/users/ctubbsii/repos","events_url":"https://api.github.com/users/ctubbsii/events{/privacy}","received_events_url":"https://api.github.com/users/ctubbsii/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-01T20:37:27Z","updated_at":"2023-05-01T20:37:27Z","author_association":"MEMBER","body":"I'm not sure what the full extent of the escaping feature is in JLine, but it would be great if we could get rid of our custom parsing of lines, and let JLine be responsible for all the escaping.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1530209460/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1530215429","html_url":"https://github.com/apache/accumulo/issues/3367#issuecomment-1530215429","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3367","id":1530215429,"node_id":"IC_kwDOACaFSM5bNTwF","user":{"login":"ctubbsii","id":1280725,"node_id":"MDQ6VXNlcjEyODA3MjU=","avatar_url":"https://avatars.githubusercontent.com/u/1280725?v=4","gravatar_id":"","url":"https://api.github.com/users/ctubbsii","html_url":"https://github.com/ctubbsii","followers_url":"https://api.github.com/users/ctubbsii/followers","following_url":"https://api.github.com/users/ctubbsii/following{/other_user}","gists_url":"https://api.github.com/users/ctubbsii/gists{/gist_id}","starred_url":"https://api.github.com/users/ctubbsii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ctubbsii/subscriptions","organizations_url":"https://api.github.com/users/ctubbsii/orgs","repos_url":"https://api.github.com/users/ctubbsii/repos","events_url":"https://api.github.com/users/ctubbsii/events{/privacy}","received_events_url":"https://api.github.com/users/ctubbsii/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-01T20:40:30Z","updated_at":"2023-05-01T20:40:30Z","author_association":"MEMBER","body":"I would strongly recommend, though, that if this is breaking anybody, they should seriously consider using JShell to do their custom scripts. The Accumulo shell is a very minimal solution for very basic functionality. Any serious work should be done in Java directly. JShell allows you to do this quite easily, for small Java applications. And we have a convenient entry point for JShell (`bin/accumulo jshell`) that sets up an execution environment with the Accumulo classpath and create an initial AccumuloClient ready-to-use.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1530215429/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1530237778","html_url":"https://github.com/apache/accumulo/pull/3332#issuecomment-1530237778","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3332","id":1530237778,"node_id":"IC_kwDOACaFSM5bNZNS","user":{"login":"cshannon","id":123009,"node_id":"MDQ6VXNlcjEyMzAwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/123009?v=4","gravatar_id":"","url":"https://api.github.com/users/cshannon","html_url":"https://github.com/cshannon","followers_url":"https://api.github.com/users/cshannon/followers","following_url":"https://api.github.com/users/cshannon/following{/other_user}","gists_url":"https://api.github.com/users/cshannon/gists{/gist_id}","starred_url":"https://api.github.com/users/cshannon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cshannon/subscriptions","organizations_url":"https://api.github.com/users/cshannon/orgs","repos_url":"https://api.github.com/users/cshannon/repos","events_url":"https://api.github.com/users/cshannon/events{/privacy}","received_events_url":"https://api.github.com/users/cshannon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-01T20:52:00Z","updated_at":"2023-05-01T20:52:00Z","author_association":"CONTRIBUTOR","body":"> > I have been working today on a new commit/PR to start adding range information to the CQ when storing tablet file metadata so we can store the same file with different ranges and treat them as unique files.\r\n> \r\n> What's the impetus for this vs what is being done here? I'm concerned about potential explosion in temporary tablet metadata entries (bulk import, flush files) that may cause the metadata tablets to split unnecessarily.\r\n\r\nI can let @keith-turner comment as well but I'm not sure how much of an issue this would be in practice but we can certainly test. My thoughts initially are that we really only would more than 1 range per file when merging but maybe there would be other use cases for it. I'm not sure how much that would impact bulk import as I wouldn't expect those files to have more than one range, at least on first import.  I haven't looked at bulk import much though so maybe I am missing something. So in general I'd expect the amount of extra generated metadata to be correlated to the number of merges that are done on tables and that would depend on the system and whether or not we decide to enable some sort of automatic merging in the future like we do with automatic splits.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1530237778/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1530257638","html_url":"https://github.com/apache/accumulo/issues/3367#issuecomment-1530257638","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3367","id":1530257638,"node_id":"IC_kwDOACaFSM5bNeDm","user":{"login":"dlmarion","id":567911,"node_id":"MDQ6VXNlcjU2NzkxMQ==","avatar_url":"https://avatars.githubusercontent.com/u/567911?v=4","gravatar_id":"","url":"https://api.github.com/users/dlmarion","html_url":"https://github.com/dlmarion","followers_url":"https://api.github.com/users/dlmarion/followers","following_url":"https://api.github.com/users/dlmarion/following{/other_user}","gists_url":"https://api.github.com/users/dlmarion/gists{/gist_id}","starred_url":"https://api.github.com/users/dlmarion/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dlmarion/subscriptions","organizations_url":"https://api.github.com/users/dlmarion/orgs","repos_url":"https://api.github.com/users/dlmarion/repos","events_url":"https://api.github.com/users/dlmarion/events{/privacy}","received_events_url":"https://api.github.com/users/dlmarion/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-01T21:00:50Z","updated_at":"2023-05-01T21:00:50Z","author_association":"CONTRIBUTOR","body":"> We were wondering if it was intentional.\r\n\r\nThis was not intentional, but is a side-effect of a dependency upgrade. It looks like JLine was version 2.11 in Accumulo 1.10.x and 2.0.0. It was upgraded to 3.x in Accumulo version 2.1.0. \r\n\r\n> Expected behavior\r\nWe would expect to be able to scan the same way between Accumulo 1 and 2.\r\n\r\nI'm not sure about this given that this is a major version increase. APIs and behaviors change. However, I wonder if this change in a minor version (2.0 to 2.1) should be expected by users. I'm glad that you found this during testing. Do the scripts fail silently, or do you get an error?\r\n","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1530257638/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1530274094","html_url":"https://github.com/apache/accumulo/issues/3367#issuecomment-1530274094","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3367","id":1530274094,"node_id":"IC_kwDOACaFSM5bNiEu","user":{"login":"hlgp","id":31748527,"node_id":"MDQ6VXNlcjMxNzQ4NTI3","avatar_url":"https://avatars.githubusercontent.com/u/31748527?v=4","gravatar_id":"","url":"https://api.github.com/users/hlgp","html_url":"https://github.com/hlgp","followers_url":"https://api.github.com/users/hlgp/followers","following_url":"https://api.github.com/users/hlgp/following{/other_user}","gists_url":"https://api.github.com/users/hlgp/gists{/gist_id}","starred_url":"https://api.github.com/users/hlgp/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hlgp/subscriptions","organizations_url":"https://api.github.com/users/hlgp/orgs","repos_url":"https://api.github.com/users/hlgp/repos","events_url":"https://api.github.com/users/hlgp/events{/privacy}","received_events_url":"https://api.github.com/users/hlgp/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-01T21:08:04Z","updated_at":"2023-05-01T21:08:04Z","author_association":"NONE","body":"I haven't tested them all yet, but so far they fail silently since the main symptom is retrieving no data due to the missing escape character.   If I find a case where an error is thrown, I'll post again.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1530274094/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1530279093","html_url":"https://github.com/apache/accumulo/pull/3366#issuecomment-1530279093","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3366","id":1530279093,"node_id":"IC_kwDOACaFSM5bNjS1","user":{"login":"cshannon","id":123009,"node_id":"MDQ6VXNlcjEyMzAwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/123009?v=4","gravatar_id":"","url":"https://api.github.com/users/cshannon","html_url":"https://github.com/cshannon","followers_url":"https://api.github.com/users/cshannon/followers","following_url":"https://api.github.com/users/cshannon/following{/other_user}","gists_url":"https://api.github.com/users/cshannon/gists{/gist_id}","starred_url":"https://api.github.com/users/cshannon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cshannon/subscriptions","organizations_url":"https://api.github.com/users/cshannon/orgs","repos_url":"https://api.github.com/users/cshannon/repos","events_url":"https://api.github.com/users/cshannon/events{/privacy}","received_events_url":"https://api.github.com/users/cshannon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-01T21:10:00Z","updated_at":"2023-05-01T21:10:00Z","author_association":"CONTRIBUTOR","body":"> Note that the validation was not throwing an exception and hence was not actually halting the server (see Tablet.compareTabletInfo). It was halting because the tserver had a failure when attempting to scan the metadata. Hence catching Exception is OK here (or moving it to the non-critical thread pool) UNLESS you want to have the validation halt the server. In any case a scan failure should NOT halt the server.\r\n\r\nRight I wouldn't think we should halt either on scan failure so that's what this fix does, is prevent that. In terms of making it a non critical task I guess that is fine too, if we are catching the exception and continuing I'm not sure it much matters at that point. Either way it seems like catching an exception and logging it there vs killing the task makes sense so it can be retried normally so the task and server don't fall over.\r\n\r\nIn terms of whether not we retry faster or some other logic on scan failure maybe that's a follow on issue if that is going to be more complex and maybe could be something for 2.1.2. This at least fixes the immediately issue that is a regression in 2.1 for 2.1.1 so the server doesn't fall over on a scan failure which just may be transient. Halting on metadata failure itself (not a scan failure) is another issue entirely of course and maybe that is valid but maybe shouldn't be a bug fix release and 3.0 instead.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1530279093/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1530315463","html_url":"https://github.com/apache/accumulo/issues/3348#issuecomment-1530315463","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3348","id":1530315463,"node_id":"IC_kwDOACaFSM5bNsLH","user":{"login":"ctubbsii","id":1280725,"node_id":"MDQ6VXNlcjEyODA3MjU=","avatar_url":"https://avatars.githubusercontent.com/u/1280725?v=4","gravatar_id":"","url":"https://api.github.com/users/ctubbsii","html_url":"https://github.com/ctubbsii","followers_url":"https://api.github.com/users/ctubbsii/followers","following_url":"https://api.github.com/users/ctubbsii/following{/other_user}","gists_url":"https://api.github.com/users/ctubbsii/gists{/gist_id}","starred_url":"https://api.github.com/users/ctubbsii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ctubbsii/subscriptions","organizations_url":"https://api.github.com/users/ctubbsii/orgs","repos_url":"https://api.github.com/users/ctubbsii/repos","events_url":"https://api.github.com/users/ctubbsii/events{/privacy}","received_events_url":"https://api.github.com/users/ctubbsii/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-01T21:26:35Z","updated_at":"2023-05-01T21:26:35Z","author_association":"MEMBER","body":"One thing to keep in mind, that may make this easier to address: SplitUtils is not public API and is not intended for direct consumption. It is used internally to help us approximate relative split sizes when calculating InputSplits. So, it doesn't matter if its method returns a negative number, as long as the places where it's used check its sign to ensure that they handle that situation appropriately.\r\n\r\nWe could also try to come up with better approximation methods for split sizes, but I think addressing the negative in the places where it's used is the quickest and easiest way to fix this, without completely rewriting the approximation algorithm.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1530315463/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1530329288","html_url":"https://github.com/apache/accumulo/pull/3350#issuecomment-1530329288","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3350","id":1530329288,"node_id":"IC_kwDOACaFSM5bNvjI","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-01T21:33:56Z","updated_at":"2023-05-01T21:36:40Z","author_association":"CONTRIBUTOR","body":"Experimented with changing just the RefreshTablets Repo for the FATE operation to see what it would look like if we dropped the refresh column and only sent RPCs.\r\n\r\n```java\r\npublic class RefreshTablets extends ManagerRepo {\r\n   public long isReady(long tid, Manager manager) throws Exception {\r\n       // nothing to do here, always ready to run\r\n       return 0;\r\n   }\r\n  @Override\r\n  public Repo<Manager> call(long tid, Manager manager) throws Exception {\r\n\r\n    Map<Location,List<KeyExtent>> refreshesNeeded;\r\n\r\n    try (var tablets =\r\n        manager.getContext().getAmple().readTablets().forTable(bulkInfo.tableId).checkConsistency()\r\n            .fetch(ColumnType.LOADED, ColumnType.LOCATION, ColumnType.PREV_ROW).build()) {\r\n\r\n      // Find all tablets that have a location and load markers for this bulk load operation and\r\n      // therefore need to refresh their metadata. There may be some tablets in the map that were\r\n      // hosted after the bulk files were set and that is ok, it just results in an unneeded refresh\r\n      // request. There may also be tablets that had a location when the files were set but do not\r\n      // have a location now, that is ok the next time that tablet loads somewhere it will see the\r\n      // files.\r\n      refreshesNeeded = tablets.stream()\r\n          .filter(tabletMetadata -> tabletMetadata.getLocation() != null\r\n              && tabletMetadata.getLoaded().containsValue(tid))\r\n          .collect(groupingBy(TabletMetadata::getLocation,\r\n              mapping(TabletMetadata::getExtent, toList())));\r\n    }\r\n    HashSet<Location> completed = new HashSet<>();\r\n\r\n    while (!refreshesNeeded.isEmpty()) {\r\n      for (Map.Entry<Location,List<KeyExtent>> entry : refreshesNeeded.entrySet()) {\r\n        try {\r\n          // TODO use a thread pool to send RPC request\r\n          // Ask tablet server to reload the metadata for these tablets. If the tabletserver is no\r\n          // longer serving a tablet that is ok as long is refreshes the ones that it is\r\n          // still serving. If a tablet was unloaded after the map was created above when it\r\n          // reloads elsewhere it will see the bulk files. The tserver will need to ensure tablets\r\n          // that had future location and are in the process of loading are handled correctly or\r\n          // the refresh request could be missed due to race conditions in the tablet server.\r\n          sendSyncRefreshRequest(entry.getKey(), entry.getValue());\r\n          // refresh request returned successfully, so mark the location as completed\r\n          completed.add(entry.getKey());\r\n        } catch (Exception e) { // TODO what exceptions are ok to catch and retry on? this\r\n                                // exception is too broad\r\n          if (tserverIsDead(entry.getKey())) {\r\n            // if the tserver is no longer alive then when tablets load elsewhere they will see \r\n            // the files, so mark it completed\r\n            completed.add(entry.getKey());\r\n          } else {\r\n            // TODO log something about waiting on this tserver for bulk import refresh request\r\n          }\r\n        }\r\n      }\r\n\r\n      // remove all tablet server that were successfully refreshed\r\n      refreshesNeeded.keySet().removeAll(completed);\r\n\r\n      if (!refreshesNeeded.isEmpty()) {\r\n        // TODO sleep and log using a retry object\r\n      }\r\n    }\r\n\r\n    return new CleanUpBulkImport(bulkInfo);\r\n  }   \r\n}\r\n```\r\n\r\nLearned a few things from this.  Will probably need a thread pool and will need to handle tservers that die after getting the information from the metadata table. I also realized there could be some tricky issues with future locations with this approach, but those should be ok also long as the tserver handles concurrent tablet loads and refresh request correctly.  I can't think of any cases with this approach where a tablet that needs to refresh does not. \r\n\r\nThinking of switching to this approach.  It has pluses and minuses compared to the refresh column.  Thinking its simpler to start with, likely faster, and if any of the problems the refresh column addresses show up then we can reconsider it later.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1530329288/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1530335966","html_url":"https://github.com/apache/accumulo/pull/3350#issuecomment-1530335966","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3350","id":1530335966,"node_id":"IC_kwDOACaFSM5bNxLe","user":{"login":"dlmarion","id":567911,"node_id":"MDQ6VXNlcjU2NzkxMQ==","avatar_url":"https://avatars.githubusercontent.com/u/567911?v=4","gravatar_id":"","url":"https://api.github.com/users/dlmarion","html_url":"https://github.com/dlmarion","followers_url":"https://api.github.com/users/dlmarion/followers","following_url":"https://api.github.com/users/dlmarion/following{/other_user}","gists_url":"https://api.github.com/users/dlmarion/gists{/gist_id}","starred_url":"https://api.github.com/users/dlmarion/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dlmarion/subscriptions","organizations_url":"https://api.github.com/users/dlmarion/orgs","repos_url":"https://api.github.com/users/dlmarion/repos","events_url":"https://api.github.com/users/dlmarion/events{/privacy}","received_events_url":"https://api.github.com/users/dlmarion/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-01T21:37:05Z","updated_at":"2023-05-01T21:37:05Z","author_association":"CONTRIBUTOR","body":"I think this approach coupled with a periodic check in the tserver might cover all bases.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1530335966/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1530338941","html_url":"https://github.com/apache/accumulo/pull/3365#issuecomment-1530338941","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3365","id":1530338941,"node_id":"IC_kwDOACaFSM5bNx59","user":{"login":"ctubbsii","id":1280725,"node_id":"MDQ6VXNlcjEyODA3MjU=","avatar_url":"https://avatars.githubusercontent.com/u/1280725?v=4","gravatar_id":"","url":"https://api.github.com/users/ctubbsii","html_url":"https://github.com/ctubbsii","followers_url":"https://api.github.com/users/ctubbsii/followers","following_url":"https://api.github.com/users/ctubbsii/following{/other_user}","gists_url":"https://api.github.com/users/ctubbsii/gists{/gist_id}","starred_url":"https://api.github.com/users/ctubbsii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ctubbsii/subscriptions","organizations_url":"https://api.github.com/users/ctubbsii/orgs","repos_url":"https://api.github.com/users/ctubbsii/repos","events_url":"https://api.github.com/users/ctubbsii/events{/privacy}","received_events_url":"https://api.github.com/users/ctubbsii/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-01T21:38:32Z","updated_at":"2023-05-01T21:38:32Z","author_association":"MEMBER","body":"Cherry-picked and force-pushed to base this on 2.1. Waiting for QA checks, then will merge into 2.1 and forward to main.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1530338941/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1530342781","html_url":"https://github.com/apache/accumulo/pull/3350#issuecomment-1530342781","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3350","id":1530342781,"node_id":"IC_kwDOACaFSM5bNy19","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-01T21:40:34Z","updated_at":"2023-05-02T00:50:36Z","author_association":"CONTRIBUTOR","body":"> I think this approach coupled with a periodic check in the tserver might cover all bases.\r\n\r\nThe periodic validation the tserver does to check memory vs metadata can be changed to just refresh metadata (and drop the validation against whats in memory aspect of what it does).","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1530342781/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1530345603","html_url":"https://github.com/apache/accumulo/pull/3336#issuecomment-1530345603","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3336","id":1530345603,"node_id":"IC_kwDOACaFSM5bNziD","user":{"login":"ctubbsii","id":1280725,"node_id":"MDQ6VXNlcjEyODA3MjU=","avatar_url":"https://avatars.githubusercontent.com/u/1280725?v=4","gravatar_id":"","url":"https://api.github.com/users/ctubbsii","html_url":"https://github.com/ctubbsii","followers_url":"https://api.github.com/users/ctubbsii/followers","following_url":"https://api.github.com/users/ctubbsii/following{/other_user}","gists_url":"https://api.github.com/users/ctubbsii/gists{/gist_id}","starred_url":"https://api.github.com/users/ctubbsii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ctubbsii/subscriptions","organizations_url":"https://api.github.com/users/ctubbsii/orgs","repos_url":"https://api.github.com/users/ctubbsii/repos","events_url":"https://api.github.com/users/ctubbsii/events{/privacy}","received_events_url":"https://api.github.com/users/ctubbsii/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-01T21:42:03Z","updated_at":"2023-05-01T21:42:51Z","author_association":"MEMBER","body":"GitHub Actions QA checks didn't run on this PR not sure why. Going to try to add an empty commit to the PR branch to force them to run.\r\nEDIT: Nevermind. Closing and reopening triggered the QA checks.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1530345603/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1530357675","html_url":"https://github.com/apache/accumulo/pull/3332#issuecomment-1530357675","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3332","id":1530357675,"node_id":"IC_kwDOACaFSM5bN2er","user":{"login":"ctubbsii","id":1280725,"node_id":"MDQ6VXNlcjEyODA3MjU=","avatar_url":"https://avatars.githubusercontent.com/u/1280725?v=4","gravatar_id":"","url":"https://api.github.com/users/ctubbsii","html_url":"https://github.com/ctubbsii","followers_url":"https://api.github.com/users/ctubbsii/followers","following_url":"https://api.github.com/users/ctubbsii/following{/other_user}","gists_url":"https://api.github.com/users/ctubbsii/gists{/gist_id}","starred_url":"https://api.github.com/users/ctubbsii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ctubbsii/subscriptions","organizations_url":"https://api.github.com/users/ctubbsii/orgs","repos_url":"https://api.github.com/users/ctubbsii/repos","events_url":"https://api.github.com/users/ctubbsii/events{/privacy}","received_events_url":"https://api.github.com/users/ctubbsii/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-01T21:48:26Z","updated_at":"2023-05-01T21:48:26Z","author_association":"MEMBER","body":"> @ctubbsii - Any thoughts on the best way to chain PRs or how to handle this situation? I know this was a problem with elasticity as well.\r\n\r\nReplied with a few possibilities in Slack instead of here, to avoid cluttering the PR with contributor workflow discussion.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1530357675/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1530571534","html_url":"https://github.com/apache/accumulo/pull/3332#issuecomment-1530571534","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3332","id":1530571534,"node_id":"IC_kwDOACaFSM5bOqsO","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-01T23:35:38Z","updated_at":"2023-05-01T23:35:38Z","author_association":"CONTRIBUTOR","body":"> So in general I'd expect the amount of extra generated metadata to be correlated to the number of merges that are done\r\n\r\nThat is what I would expect also and I don't think it will differ much from what we currently have. Currently if 50 tablets are merged into 1 and each tablet had 2 files then the new tablet could end up with 100 files.  That should be the same with these changes except now the files will have a range. ","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1530571534/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1530590999","html_url":"https://github.com/apache/accumulo/pull/3332#issuecomment-1530590999","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3332","id":1530590999,"node_id":"IC_kwDOACaFSM5bOvcX","user":{"login":"dlmarion","id":567911,"node_id":"MDQ6VXNlcjU2NzkxMQ==","avatar_url":"https://avatars.githubusercontent.com/u/567911?v=4","gravatar_id":"","url":"https://api.github.com/users/dlmarion","html_url":"https://github.com/dlmarion","followers_url":"https://api.github.com/users/dlmarion/followers","following_url":"https://api.github.com/users/dlmarion/following{/other_user}","gists_url":"https://api.github.com/users/dlmarion/gists{/gist_id}","starred_url":"https://api.github.com/users/dlmarion/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dlmarion/subscriptions","organizations_url":"https://api.github.com/users/dlmarion/orgs","repos_url":"https://api.github.com/users/dlmarion/repos","events_url":"https://api.github.com/users/dlmarion/events{/privacy}","received_events_url":"https://api.github.com/users/dlmarion/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-01T23:47:11Z","updated_at":"2023-05-01T23:47:11Z","author_association":"CONTRIBUTOR","body":"My main concern is bulk imports here. It's possible to have one bulk import file that maps to many tablets. Depending on how many bulk imports you do in a day, you could end up having a lot of short-lived file entries in the tablet metadata, with them getting removed as the bulk import files are compacted away. The tablet metadata will go through grow/shrink cycles depending on the frequency of the bulk imports into that tablet. If that is happening on a large number of tablets, then it's possible/likely to reach the split threshold for the metadata table tablets.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1530590999/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1530684930","html_url":"https://github.com/apache/accumulo/pull/3332#issuecomment-1530684930","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3332","id":1530684930,"node_id":"IC_kwDOACaFSM5bPGYC","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-02T00:35:35Z","updated_at":"2023-05-02T00:35:35Z","author_association":"CONTRIBUTOR","body":">  Depending on how many bulk imports you do in a day, you could end up having a lot of short-lived file entries in the tablet metadata, with them getting removed as the bulk import files are compacted away. \r\n\r\nIs the concern that with the above situation adding a range per file will add more data?  We could make the serialization of an infinite range that these files would have really small, that common case could be handled specially in the serialization.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1530684930/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1531553674","html_url":"https://github.com/apache/accumulo/pull/3366#issuecomment-1531553674","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3366","id":1531553674,"node_id":"IC_kwDOACaFSM5bSaeK","user":{"login":"EdColeman","id":7047700,"node_id":"MDQ6VXNlcjcwNDc3MDA=","avatar_url":"https://avatars.githubusercontent.com/u/7047700?v=4","gravatar_id":"","url":"https://api.github.com/users/EdColeman","html_url":"https://github.com/EdColeman","followers_url":"https://api.github.com/users/EdColeman/followers","following_url":"https://api.github.com/users/EdColeman/following{/other_user}","gists_url":"https://api.github.com/users/EdColeman/gists{/gist_id}","starred_url":"https://api.github.com/users/EdColeman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/EdColeman/subscriptions","organizations_url":"https://api.github.com/users/EdColeman/orgs","repos_url":"https://api.github.com/users/EdColeman/repos","events_url":"https://api.github.com/users/EdColeman/events{/privacy}","received_events_url":"https://api.github.com/users/EdColeman/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-02T14:11:04Z","updated_at":"2023-05-02T14:11:04Z","author_association":"CONTRIBUTOR","body":"My point is that the entire check seems to be trying to validate that the tserver can read and has a consistent view of the metadata tablet.   If this check cannot complete then I think the intention was to \"hard\" fail the tserver so that it was not trying to run with possibly incomplete / incorrect view of the metadata.\r\n\r\nBecause it seems a transient (but somehow repeating) failure is stopping the tserver - a more conservative change would be to retry the scan (or the entire check) to guard against transient failures - but if the check cannot complete within a reasonable period, then it would be safer to continue to stop the process.\r\n\r\nChanging the check so that it only logs the exception seems that it could lead to cases where the tserver would continue to run when the intention is that it would have been halted.\r\n\r\nWe may want to add resiliency to the check, but the underlying issue seems to be something in the environment is repeatably causing a scan failure while reading the metadata - nurffing the check to accommodate that case my just be hiding an underlying issue that needs to be corrected.  This change seems that it could allow other issues to also be hidden.\r\n\r\nAgain, I am addressing the overall goal of the check - not the issue that a transient scan failure seems to be triggering more aggressively that necessary.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1531553674/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1531606988","html_url":"https://github.com/apache/accumulo/pull/3366#issuecomment-1531606988","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3366","id":1531606988,"node_id":"IC_kwDOACaFSM5bSnfM","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-02T14:43:18Z","updated_at":"2023-05-02T14:43:18Z","author_association":"CONTRIBUTOR","body":"I think it makes sense for the check not to terminate the tablet server and log an error.  The original intention of the check was to ensure what tablets have in memory matches the metadata table, it was not to test scanning the metadata table.  Not being able to scan the metadata table is not great, but it was not the intent of the check.  So the check can find problems that it was not designed to, that is a good thing.  However the check finding a new unforeseen problem and not giving anyone a chance to work through it (because it nuked all the tservers) is not a good thing. ","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1531606988/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1531615672","html_url":"https://github.com/apache/accumulo/pull/3366#issuecomment-1531615672","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3366","id":1531615672,"node_id":"IC_kwDOACaFSM5bSpm4","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-02T14:48:40Z","updated_at":"2023-05-02T14:48:40Z","author_association":"CONTRIBUTOR","body":"Also, if there are any bugs in the check itself we would not want that to kill tservers.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1531615672/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1531740334","html_url":"https://github.com/apache/accumulo/pull/3366#issuecomment-1531740334","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3366","id":1531740334,"node_id":"IC_kwDOACaFSM5bTICu","user":{"login":"EdColeman","id":7047700,"node_id":"MDQ6VXNlcjcwNDc3MDA=","avatar_url":"https://avatars.githubusercontent.com/u/7047700?v=4","gravatar_id":"","url":"https://api.github.com/users/EdColeman","html_url":"https://github.com/EdColeman","followers_url":"https://api.github.com/users/EdColeman/followers","following_url":"https://api.github.com/users/EdColeman/following{/other_user}","gists_url":"https://api.github.com/users/EdColeman/gists{/gist_id}","starred_url":"https://api.github.com/users/EdColeman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/EdColeman/subscriptions","organizations_url":"https://api.github.com/users/EdColeman/orgs","repos_url":"https://api.github.com/users/EdColeman/repos","events_url":"https://api.github.com/users/EdColeman/events{/privacy}","received_events_url":"https://api.github.com/users/EdColeman/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-02T16:08:02Z","updated_at":"2023-05-02T16:08:02Z","author_association":"CONTRIBUTOR","body":"If I had the wrong impression of the check, then I am okay with the changes - maybe log the error and also move it to a non-critical thread check?\r\n\r\nAre there things that we *should* be checking for a tserver to validate that it meets some minimal level of healthy?","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1531740334/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1531807723","html_url":"https://github.com/apache/accumulo/pull/3366#issuecomment-1531807723","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3366","id":1531807723,"node_id":"IC_kwDOACaFSM5bTYfr","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-02T16:46:31Z","updated_at":"2023-05-02T16:47:07Z","author_association":"CONTRIBUTOR","body":"> Are there things that we should be checking for a tserver to validate that it meets some minimal level of healthy?\r\n\r\nWe also have some sort of check for stuck compactions, I think it just logs something also.  Does it make sense to emit metrics for these things in addition a log message?  Maybe each server could have a unhealthy count metric.  The impl of the metric could survey known things and add one if they are currently unhealthy.  If a compaction is currently stuck that would contribute to the count when surveyed. If the metadata validation with memory is having problems that would contribute to the counter when surveyed.  If things are unhealthy and then healthy the survey would count nothing and emit zero.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1531807723/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1531814869","html_url":"https://github.com/apache/accumulo/pull/3366#issuecomment-1531814869","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3366","id":1531814869,"node_id":"IC_kwDOACaFSM5bTaPV","user":{"login":"EdColeman","id":7047700,"node_id":"MDQ6VXNlcjcwNDc3MDA=","avatar_url":"https://avatars.githubusercontent.com/u/7047700?v=4","gravatar_id":"","url":"https://api.github.com/users/EdColeman","html_url":"https://github.com/EdColeman","followers_url":"https://api.github.com/users/EdColeman/followers","following_url":"https://api.github.com/users/EdColeman/following{/other_user}","gists_url":"https://api.github.com/users/EdColeman/gists{/gist_id}","starred_url":"https://api.github.com/users/EdColeman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/EdColeman/subscriptions","organizations_url":"https://api.github.com/users/EdColeman/orgs","repos_url":"https://api.github.com/users/EdColeman/repos","events_url":"https://api.github.com/users/EdColeman/events{/privacy}","received_events_url":"https://api.github.com/users/EdColeman/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-02T16:51:58Z","updated_at":"2023-05-02T16:51:58Z","author_association":"CONTRIBUTOR","body":"I had been thinking that a metric for the elapsed time in this check would make a good metric - it might be a good proxy for health over time as well as possibly being useful to compare across servers.  But with the upcoming changes I thought it may be better to hold off until those settle.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1531814869/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1532280984","html_url":"https://github.com/apache/accumulo/pull/3350#issuecomment-1532280984","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3350","id":1532280984,"node_id":"IC_kwDOACaFSM5bVMCY","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-02T23:37:49Z","updated_at":"2023-05-02T23:37:49Z","author_association":"CONTRIBUTOR","body":"I rebased this after merging in #3317.  I also added commit 9318029 which dropped the refresh column and started using a synchronous rpc for asking tserver to refresh tablet metadata.  Took the PR out of draft after those changes.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1532280984/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1532413165","html_url":"https://github.com/apache/accumulo/issues/3368#issuecomment-1532413165","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3368","id":1532413165,"node_id":"IC_kwDOACaFSM5bVsTt","user":{"login":"ctubbsii","id":1280725,"node_id":"MDQ6VXNlcjEyODA3MjU=","avatar_url":"https://avatars.githubusercontent.com/u/1280725?v=4","gravatar_id":"","url":"https://api.github.com/users/ctubbsii","html_url":"https://github.com/ctubbsii","followers_url":"https://api.github.com/users/ctubbsii/followers","following_url":"https://api.github.com/users/ctubbsii/following{/other_user}","gists_url":"https://api.github.com/users/ctubbsii/gists{/gist_id}","starred_url":"https://api.github.com/users/ctubbsii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ctubbsii/subscriptions","organizations_url":"https://api.github.com/users/ctubbsii/orgs","repos_url":"https://api.github.com/users/ctubbsii/repos","events_url":"https://api.github.com/users/ctubbsii/events{/privacy}","received_events_url":"https://api.github.com/users/ctubbsii/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-03T03:27:00Z","updated_at":"2023-05-03T03:27:00Z","author_association":"MEMBER","body":"@ivakegg If using a snapshot, can you provide the commit used? If not sure, the built jars probably have the commit in their manifest.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1532413165/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1532428242","html_url":"https://github.com/apache/accumulo/pull/3342#issuecomment-1532428242","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3342","id":1532428242,"node_id":"IC_kwDOACaFSM5bVv_S","user":{"login":"ctubbsii","id":1280725,"node_id":"MDQ6VXNlcjEyODA3MjU=","avatar_url":"https://avatars.githubusercontent.com/u/1280725?v=4","gravatar_id":"","url":"https://api.github.com/users/ctubbsii","html_url":"https://github.com/ctubbsii","followers_url":"https://api.github.com/users/ctubbsii/followers","following_url":"https://api.github.com/users/ctubbsii/following{/other_user}","gists_url":"https://api.github.com/users/ctubbsii/gists{/gist_id}","starred_url":"https://api.github.com/users/ctubbsii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ctubbsii/subscriptions","organizations_url":"https://api.github.com/users/ctubbsii/orgs","repos_url":"https://api.github.com/users/ctubbsii/repos","events_url":"https://api.github.com/users/ctubbsii/events{/privacy}","received_events_url":"https://api.github.com/users/ctubbsii/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-03T03:56:37Z","updated_at":"2023-05-03T03:56:37Z","author_association":"MEMBER","body":"Haven't re-reviewed yet, but just thought of a suggestion (I don't know if it's workable). Internally, this could use Guava Range classes. As long as they're not exposed to this class' API, it might make some implementation easier (perhaps not, though... I'm not sure).","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1532428242/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1532804340","html_url":"https://github.com/apache/accumulo/pull/3366#issuecomment-1532804340","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3366","id":1532804340,"node_id":"IC_kwDOACaFSM5bXLz0","user":{"login":"cshannon","id":123009,"node_id":"MDQ6VXNlcjEyMzAwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/123009?v=4","gravatar_id":"","url":"https://api.github.com/users/cshannon","html_url":"https://github.com/cshannon","followers_url":"https://api.github.com/users/cshannon/followers","following_url":"https://api.github.com/users/cshannon/following{/other_user}","gists_url":"https://api.github.com/users/cshannon/gists{/gist_id}","starred_url":"https://api.github.com/users/cshannon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cshannon/subscriptions","organizations_url":"https://api.github.com/users/cshannon/orgs","repos_url":"https://api.github.com/users/cshannon/repos","events_url":"https://api.github.com/users/cshannon/events{/privacy}","received_events_url":"https://api.github.com/users/cshannon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-03T10:39:43Z","updated_at":"2023-05-03T10:39:43Z","author_association":"CONTRIBUTOR","body":"I moved the check to a non critical thread based on the feedback here. Is there anything else to do here or is this good to merge?","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1532804340/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1533341127","html_url":"https://github.com/apache/accumulo/pull/3366#issuecomment-1533341127","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3366","id":1533341127,"node_id":"IC_kwDOACaFSM5bZO3H","user":{"login":"cshannon","id":123009,"node_id":"MDQ6VXNlcjEyMzAwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/123009?v=4","gravatar_id":"","url":"https://api.github.com/users/cshannon","html_url":"https://github.com/cshannon","followers_url":"https://api.github.com/users/cshannon/followers","following_url":"https://api.github.com/users/cshannon/following{/other_user}","gists_url":"https://api.github.com/users/cshannon/gists{/gist_id}","starred_url":"https://api.github.com/users/cshannon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cshannon/subscriptions","organizations_url":"https://api.github.com/users/cshannon/orgs","repos_url":"https://api.github.com/users/cshannon/repos","events_url":"https://api.github.com/users/cshannon/events{/privacy}","received_events_url":"https://api.github.com/users/cshannon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-03T16:24:34Z","updated_at":"2023-05-03T16:24:34Z","author_association":"CONTRIBUTOR","body":"After some discussion we decided to keep it as a critical task as it already was but to just keep the try/catch change so we don't fall over for normal exceptions.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1533341127/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1533434072","html_url":"https://github.com/apache/accumulo/pull/3332#issuecomment-1533434072","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3332","id":1533434072,"node_id":"IC_kwDOACaFSM5bZljY","user":{"login":"dlmarion","id":567911,"node_id":"MDQ6VXNlcjU2NzkxMQ==","avatar_url":"https://avatars.githubusercontent.com/u/567911?v=4","gravatar_id":"","url":"https://api.github.com/users/dlmarion","html_url":"https://github.com/dlmarion","followers_url":"https://api.github.com/users/dlmarion/followers","following_url":"https://api.github.com/users/dlmarion/following{/other_user}","gists_url":"https://api.github.com/users/dlmarion/gists{/gist_id}","starred_url":"https://api.github.com/users/dlmarion/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dlmarion/subscriptions","organizations_url":"https://api.github.com/users/dlmarion/orgs","repos_url":"https://api.github.com/users/dlmarion/repos","events_url":"https://api.github.com/users/dlmarion/events{/privacy}","received_events_url":"https://api.github.com/users/dlmarion/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-03T17:29:32Z","updated_at":"2023-05-03T17:29:32Z","author_association":"CONTRIBUTOR","body":"> Is the concern that with the above situation adding a range per file will add more data?\r\n\r\nI thought this through a little more, and with respect to bulk loads  I don't think there is an issue.\r\n","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1533434072/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1533617136","html_url":"https://github.com/apache/accumulo/pull/3342#issuecomment-1533617136","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3342","id":1533617136,"node_id":"IC_kwDOACaFSM5baSPw","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-03T19:39:05Z","updated_at":"2023-05-03T19:39:05Z","author_association":"CONTRIBUTOR","body":"@DomGarguilo  feel free to ignore the coverage comments, was just commenting on what I saw.  I think the most important to get coverage on are the clip and merge functions as those are the most complex.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1533617136/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1534710580","html_url":"https://github.com/apache/accumulo/issues/3363#issuecomment-1534710580","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3363","id":1534710580,"node_id":"IC_kwDOACaFSM5bedM0","user":{"login":"ivakegg","id":347158,"node_id":"MDQ6VXNlcjM0NzE1OA==","avatar_url":"https://avatars.githubusercontent.com/u/347158?v=4","gravatar_id":"","url":"https://api.github.com/users/ivakegg","html_url":"https://github.com/ivakegg","followers_url":"https://api.github.com/users/ivakegg/followers","following_url":"https://api.github.com/users/ivakegg/following{/other_user}","gists_url":"https://api.github.com/users/ivakegg/gists{/gist_id}","starred_url":"https://api.github.com/users/ivakegg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ivakegg/subscriptions","organizations_url":"https://api.github.com/users/ivakegg/orgs","repos_url":"https://api.github.com/users/ivakegg/repos","events_url":"https://api.github.com/users/ivakegg/events{/privacy}","received_events_url":"https://api.github.com/users/ivakegg/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-04T12:41:44Z","updated_at":"2023-05-04T12:41:44Z","author_association":"CONTRIBUTOR","body":"I believe this may be because when we do a accumulo-cluster start, all of the tservers start up with the short hostname.  When I restart a server using accumulo-service tserver start on the nodes where a tserver fell over, then it start with the fully qualified hostname instead.  Hence the monitor may not be figuring out that the tserver has been restarted.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1534710580/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1534837590","html_url":"https://github.com/apache/accumulo/issues/3371#issuecomment-1534837590","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3371","id":1534837590,"node_id":"IC_kwDOACaFSM5be8NW","user":{"login":"EdColeman","id":7047700,"node_id":"MDQ6VXNlcjcwNDc3MDA=","avatar_url":"https://avatars.githubusercontent.com/u/7047700?v=4","gravatar_id":"","url":"https://api.github.com/users/EdColeman","html_url":"https://github.com/EdColeman","followers_url":"https://api.github.com/users/EdColeman/followers","following_url":"https://api.github.com/users/EdColeman/following{/other_user}","gists_url":"https://api.github.com/users/EdColeman/gists{/gist_id}","starred_url":"https://api.github.com/users/EdColeman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/EdColeman/subscriptions","organizations_url":"https://api.github.com/users/EdColeman/orgs","repos_url":"https://api.github.com/users/EdColeman/repos","events_url":"https://api.github.com/users/EdColeman/events{/privacy}","received_events_url":"https://api.github.com/users/EdColeman/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-04T14:00:42Z","updated_at":"2023-05-04T14:00:42Z","author_association":"CONTRIBUTOR","body":"I'll work to create a test iterator that throws Error (instead of an exception) to see if I can reproduce in a local / test environment. ","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1534837590/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1534847662","html_url":"https://github.com/apache/accumulo/issues/3371#issuecomment-1534847662","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3371","id":1534847662,"node_id":"IC_kwDOACaFSM5be-qu","user":{"login":"ivakegg","id":347158,"node_id":"MDQ6VXNlcjM0NzE1OA==","avatar_url":"https://avatars.githubusercontent.com/u/347158?v=4","gravatar_id":"","url":"https://api.github.com/users/ivakegg","html_url":"https://github.com/ivakegg","followers_url":"https://api.github.com/users/ivakegg/followers","following_url":"https://api.github.com/users/ivakegg/following{/other_user}","gists_url":"https://api.github.com/users/ivakegg/gists{/gist_id}","starred_url":"https://api.github.com/users/ivakegg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ivakegg/subscriptions","organizations_url":"https://api.github.com/users/ivakegg/orgs","repos_url":"https://api.github.com/users/ivakegg/repos","events_url":"https://api.github.com/users/ivakegg/events{/privacy}","received_events_url":"https://api.github.com/users/ivakegg/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-04T14:06:51Z","updated_at":"2023-05-04T14:06:51Z","author_association":"CONTRIBUTOR","body":"So the error being thrown in our case is\r\n```\r\njava.lang.NoClassDefFoundError: Could not initialize class datawave......\r\n     at datawave......\r\n     ...\r\n     at org.apache.accumulo.core.iteratorsImpl.system.SourceSwitchingiterator.readnext(SourceSwitchingIterator.java:165)\r\n     ...\r\n     at org.apache.accumulo.tserver.scan.LookupTask.run(LookupTask.java:129)\r\n     at org.apache.accumulo.tserver.session.ScanSession$ScanMeasurer.run(ScanSession.java:62)\r\n     at org.apache.accumulo.core.trace.TraceWrappedRunnable.run(TraceWrappedRunnable.java:52)\r\n     at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\r\n     at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\r\n     at org.apache.accumulo.core.trace.TraceWrappedRunnable.run(TraceWrappedRunnable.java:52)\r\n     at java.base/java.lang.Thread.run(Thread.java:829)\r\nCaused by: java.util.zip.ZipException: ZipFile closed\r\n    ...\r\n\r\nError thrown in thread: Thread[scan-default-Worker-14,5,main], halting VM.\r\n```","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1534847662/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1535231966","html_url":"https://github.com/apache/accumulo/issues/3363#issuecomment-1535231966","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3363","id":1535231966,"node_id":"IC_kwDOACaFSM5bgcfe","user":{"login":"DomGarguilo","id":47725857,"node_id":"MDQ6VXNlcjQ3NzI1ODU3","avatar_url":"https://avatars.githubusercontent.com/u/47725857?v=4","gravatar_id":"","url":"https://api.github.com/users/DomGarguilo","html_url":"https://github.com/DomGarguilo","followers_url":"https://api.github.com/users/DomGarguilo/followers","following_url":"https://api.github.com/users/DomGarguilo/following{/other_user}","gists_url":"https://api.github.com/users/DomGarguilo/gists{/gist_id}","starred_url":"https://api.github.com/users/DomGarguilo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DomGarguilo/subscriptions","organizations_url":"https://api.github.com/users/DomGarguilo/orgs","repos_url":"https://api.github.com/users/DomGarguilo/repos","events_url":"https://api.github.com/users/DomGarguilo/events{/privacy}","received_events_url":"https://api.github.com/users/DomGarguilo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-04T18:36:43Z","updated_at":"2023-05-04T18:36:43Z","author_association":"MEMBER","body":"I will start looking into this","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1535231966/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1535433324","html_url":"https://github.com/apache/accumulo/issues/3371#issuecomment-1535433324","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3371","id":1535433324,"node_id":"IC_kwDOACaFSM5bhNps","user":{"login":"EdColeman","id":7047700,"node_id":"MDQ6VXNlcjcwNDc3MDA=","avatar_url":"https://avatars.githubusercontent.com/u/7047700?v=4","gravatar_id":"","url":"https://api.github.com/users/EdColeman","html_url":"https://github.com/EdColeman","followers_url":"https://api.github.com/users/EdColeman/followers","following_url":"https://api.github.com/users/EdColeman/following{/other_user}","gists_url":"https://api.github.com/users/EdColeman/gists{/gist_id}","starred_url":"https://api.github.com/users/EdColeman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/EdColeman/subscriptions","organizations_url":"https://api.github.com/users/EdColeman/orgs","repos_url":"https://api.github.com/users/EdColeman/repos","events_url":"https://api.github.com/users/EdColeman/events{/privacy}","received_events_url":"https://api.github.com/users/EdColeman/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-04T21:24:04Z","updated_at":"2023-05-04T21:24:04Z","author_association":"CONTRIBUTOR","body":"Fixed by PR #3375  (PR is a possible approach)","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1535433324/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1535500498","html_url":"https://github.com/apache/accumulo/issues/3359#issuecomment-1535500498","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3359","id":1535500498,"node_id":"IC_kwDOACaFSM5bheDS","user":{"login":"ctubbsii","id":1280725,"node_id":"MDQ6VXNlcjEyODA3MjU=","avatar_url":"https://avatars.githubusercontent.com/u/1280725?v=4","gravatar_id":"","url":"https://api.github.com/users/ctubbsii","html_url":"https://github.com/ctubbsii","followers_url":"https://api.github.com/users/ctubbsii/followers","following_url":"https://api.github.com/users/ctubbsii/following{/other_user}","gists_url":"https://api.github.com/users/ctubbsii/gists{/gist_id}","starred_url":"https://api.github.com/users/ctubbsii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ctubbsii/subscriptions","organizations_url":"https://api.github.com/users/ctubbsii/orgs","repos_url":"https://api.github.com/users/ctubbsii/repos","events_url":"https://api.github.com/users/ctubbsii/events{/privacy}","received_events_url":"https://api.github.com/users/ctubbsii/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-04T22:47:48Z","updated_at":"2023-05-04T22:48:16Z","author_association":"MEMBER","body":"MyMapFile (a customized version of Hadoop's MapFile) was dropped in https://issues.apache.org/jira/browse/ACCUMULO-288 for 1.5.0. Ever since, the MapFile reading support has been broken because MapFileIterator never set topKey or topValue to anything other than null, so reading from that iterator for an existing MapFile would have made every file look like an empty one.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1535500498/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1535932841","html_url":"https://github.com/apache/accumulo/issues/3371#issuecomment-1535932841","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3371","id":1535932841,"node_id":"IC_kwDOACaFSM5bjHmp","user":{"login":"ctubbsii","id":1280725,"node_id":"MDQ6VXNlcjEyODA3MjU=","avatar_url":"https://avatars.githubusercontent.com/u/1280725?v=4","gravatar_id":"","url":"https://api.github.com/users/ctubbsii","html_url":"https://github.com/ctubbsii","followers_url":"https://api.github.com/users/ctubbsii/followers","following_url":"https://api.github.com/users/ctubbsii/following{/other_user}","gists_url":"https://api.github.com/users/ctubbsii/gists{/gist_id}","starred_url":"https://api.github.com/users/ctubbsii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ctubbsii/subscriptions","organizations_url":"https://api.github.com/users/ctubbsii/orgs","repos_url":"https://api.github.com/users/ctubbsii/repos","events_url":"https://api.github.com/users/ctubbsii/events{/privacy}","received_events_url":"https://api.github.com/users/ctubbsii/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-05T08:47:41Z","updated_at":"2023-05-05T08:47:41Z","author_association":"MEMBER","body":"While this may be a bug caused by commons-vfs, this does not appear to be a bug in Accumulo. I think Accumulo is behaving correctly in the face of Errors thrown by the optional third-party component. See my comment at https://github.com/apache/accumulo/pull/3375#pullrequestreview-1414393608","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1535932841/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1535958440","html_url":"https://github.com/apache/accumulo/issues/3372#issuecomment-1535958440","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3372","id":1535958440,"node_id":"IC_kwDOACaFSM5bjN2o","user":{"login":"ctubbsii","id":1280725,"node_id":"MDQ6VXNlcjEyODA3MjU=","avatar_url":"https://avatars.githubusercontent.com/u/1280725?v=4","gravatar_id":"","url":"https://api.github.com/users/ctubbsii","html_url":"https://github.com/ctubbsii","followers_url":"https://api.github.com/users/ctubbsii/followers","following_url":"https://api.github.com/users/ctubbsii/following{/other_user}","gists_url":"https://api.github.com/users/ctubbsii/gists{/gist_id}","starred_url":"https://api.github.com/users/ctubbsii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ctubbsii/subscriptions","organizations_url":"https://api.github.com/users/ctubbsii/orgs","repos_url":"https://api.github.com/users/ctubbsii/repos","events_url":"https://api.github.com/users/ctubbsii/events{/privacy}","received_events_url":"https://api.github.com/users/ctubbsii/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-05T09:07:00Z","updated_at":"2023-05-05T09:07:00Z","author_association":"MEMBER","body":"The error I've seen is:\r\n\r\n```\r\n[WARNING] org.apache.accumulo.test.functional.MemoryStarvedScanIT.testBatchScanPauses\r\n[ERROR]   Run 1: MemoryStarvedScanIT.testBatchScanPauses:334 expected: <0> but was: <1>\r\n[ERROR]   Run 2: MemoryStarvedScanIT.testBatchScanPauses:386 expected: <1> but was: <0>\r\n[ERROR]   Run 3: MemoryStarvedScanIT.testBatchScanPauses:386 expected: <1> but was: <0>\r\n[ERROR]   Run 4: MemoryStarvedScanIT.testBatchScanPauses:386 expected: <1> but was: <0>\r\n[ERROR]   Run 5: MemoryStarvedScanIT.testBatchScanPauses:386 expected: <1> but was: <0>\r\n[INFO]   Run 6: PASS\r\n[INFO] \r\n[WARNING] org.apache.accumulo.test.functional.MemoryStarvedScanIT.testBatchScanReturnsEarlyDueToLowMemory\r\n[ERROR]   Run 1: MemoryStarvedScanIT.testBatchScanReturnsEarlyDueToLowMemory:316 expected: <1> but was: <0>\r\n[INFO]   Run 2: PASS\r\n```","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1535958440/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1535959904","html_url":"https://github.com/apache/accumulo/issues/3374#issuecomment-1535959904","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3374","id":1535959904,"node_id":"IC_kwDOACaFSM5bjONg","user":{"login":"ctubbsii","id":1280725,"node_id":"MDQ6VXNlcjEyODA3MjU=","avatar_url":"https://avatars.githubusercontent.com/u/1280725?v=4","gravatar_id":"","url":"https://api.github.com/users/ctubbsii","html_url":"https://github.com/ctubbsii","followers_url":"https://api.github.com/users/ctubbsii/followers","following_url":"https://api.github.com/users/ctubbsii/following{/other_user}","gists_url":"https://api.github.com/users/ctubbsii/gists{/gist_id}","starred_url":"https://api.github.com/users/ctubbsii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ctubbsii/subscriptions","organizations_url":"https://api.github.com/users/ctubbsii/orgs","repos_url":"https://api.github.com/users/ctubbsii/repos","events_url":"https://api.github.com/users/ctubbsii/events{/privacy}","received_events_url":"https://api.github.com/users/ctubbsii/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-05T09:08:13Z","updated_at":"2023-05-05T09:08:13Z","author_association":"MEMBER","body":"What version? If snapshot, please provide the closest git hash to what you're using.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1535959904/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1535963328","html_url":"https://github.com/apache/accumulo/issues/3373#issuecomment-1535963328","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3373","id":1535963328,"node_id":"IC_kwDOACaFSM5bjPDA","user":{"login":"ctubbsii","id":1280725,"node_id":"MDQ6VXNlcjEyODA3MjU=","avatar_url":"https://avatars.githubusercontent.com/u/1280725?v=4","gravatar_id":"","url":"https://api.github.com/users/ctubbsii","html_url":"https://github.com/ctubbsii","followers_url":"https://api.github.com/users/ctubbsii/followers","following_url":"https://api.github.com/users/ctubbsii/following{/other_user}","gists_url":"https://api.github.com/users/ctubbsii/gists{/gist_id}","starred_url":"https://api.github.com/users/ctubbsii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ctubbsii/subscriptions","organizations_url":"https://api.github.com/users/ctubbsii/orgs","repos_url":"https://api.github.com/users/ctubbsii/repos","events_url":"https://api.github.com/users/ctubbsii/events{/privacy}","received_events_url":"https://api.github.com/users/ctubbsii/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-05T09:10:58Z","updated_at":"2023-05-05T09:10:58Z","author_association":"MEMBER","body":"I don't remember us having that, or removing it. What version did you see it in, and what version are you using where it's missing?","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1535963328/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1536005346","html_url":"https://github.com/apache/accumulo/issues/3363#issuecomment-1536005346","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3363","id":1536005346,"node_id":"IC_kwDOACaFSM5bjZTi","user":{"login":"ctubbsii","id":1280725,"node_id":"MDQ6VXNlcjEyODA3MjU=","avatar_url":"https://avatars.githubusercontent.com/u/1280725?v=4","gravatar_id":"","url":"https://api.github.com/users/ctubbsii","html_url":"https://github.com/ctubbsii","followers_url":"https://api.github.com/users/ctubbsii/followers","following_url":"https://api.github.com/users/ctubbsii/following{/other_user}","gists_url":"https://api.github.com/users/ctubbsii/gists{/gist_id}","starred_url":"https://api.github.com/users/ctubbsii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ctubbsii/subscriptions","organizations_url":"https://api.github.com/users/ctubbsii/orgs","repos_url":"https://api.github.com/users/ctubbsii/repos","events_url":"https://api.github.com/users/ctubbsii/events{/privacy}","received_events_url":"https://api.github.com/users/ctubbsii/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-05T09:46:43Z","updated_at":"2023-05-05T09:46:43Z","author_association":"MEMBER","body":"> I believe this may be because when we do a accumulo-cluster start, all of the tservers start up with the short hostname. When I restart a server using accumulo-service tserver start on the nodes where a tserver fell over, then it start with the fully qualified hostname instead. Hence the monitor may not be figuring out that the tserver has been restarted.\r\n\r\nDo you mean the hostname you're specifying in the accumulo-cluster's `conf/cluster.yaml` file is different from the hostname that is automatically determined by Accumulo? Is the monitor showing the newly started servers with their FQDN?\r\n\r\nIf you can confirm this is being caused by that discrepancy on how the server is identified, that would be helpful. However, if that is the case, I'm not sure there's much we can do about this, because it's possible you could have one host named \"something\" and another host named \"something.else\", and Accumulo has no way of knowing whether \"something\" and \"something.else\" are the same hosts or separate. That's up to the name service, which might not even be configured the same on every node. Accumulo just has to use what is provided in the config, or else try to auto-discover it on the node.\r\n\r\nIf you prefer the short name, you could try starting with the preferred short name on the host. That's all the `accumulo-cluster` script does, getting the preferred name from its config file. But, the `accumulo-service` script is much simpler, and isn't aware of the config file. It just does what it's explicitly told to do. If not provided a preferred name, it will try to auto-discover it. You can specify it using:\r\n\r\n```bash\r\n$ bin/accumulo-service tserver start -o general.process.bind.addr=$(hostname -s)\r\n```\r\n\r\nOr, you can set `general.process.bind.addr` in `conf/accumulo.properties` to use an environment variable, as in `general.process.bind.addr=${env:SHORTHOSTNAME}`, and set the environment in `conf/accumulo-env.sh` with something like `SHORTHOSTNAME=$(hostname -s)`\r\n\r\n(Note: the configuration for the bind address name replaces the old `-a` command you might be familiar with. In future, we'll probably add a new config option to specify the advertisement address separately from the bind address. Right now, the service advertisement address assumes that it's the same as the bind address, as it did with `-a`.)","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1536005346/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1536174194","html_url":"https://github.com/apache/accumulo/pull/3375#issuecomment-1536174194","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3375","id":1536174194,"node_id":"IC_kwDOACaFSM5bkChy","user":{"login":"dlmarion","id":567911,"node_id":"MDQ6VXNlcjU2NzkxMQ==","avatar_url":"https://avatars.githubusercontent.com/u/567911?v=4","gravatar_id":"","url":"https://api.github.com/users/dlmarion","html_url":"https://github.com/dlmarion","followers_url":"https://api.github.com/users/dlmarion/followers","following_url":"https://api.github.com/users/dlmarion/following{/other_user}","gists_url":"https://api.github.com/users/dlmarion/gists{/gist_id}","starred_url":"https://api.github.com/users/dlmarion/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dlmarion/subscriptions","organizations_url":"https://api.github.com/users/dlmarion/orgs","repos_url":"https://api.github.com/users/dlmarion/repos","events_url":"https://api.github.com/users/dlmarion/events{/privacy}","received_events_url":"https://api.github.com/users/dlmarion/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-05T12:17:15Z","updated_at":"2023-05-05T12:17:15Z","author_association":"CONTRIBUTOR","body":"I remembered that at one point I had made this configurable. I went back and looked and I did in an early [commit](https://github.com/apache/accumulo/pull/1818/commits/d66ba42bc3ac227d85aaa0cbce98cf179dd01be8#diff-deac7e822d8841e7105b78917860aae5a0bfc2760f30aaa8f2d74dd9c5fa4761) in the PR that introduced this behavior. We also had this discussion on that PR as well ([ref](https://github.com/apache/accumulo/pull/1818/files#r543599320)). \r\n\r\nIf we take VFS out of the equation - if a user mistakenly specifies that classpath for a classloader context, then runs a scan on table that uses that context to load iterator classes, then they can take down a good portion or the entire cluster. However, I believe that the client makes a call to the Tablet Server to test that it can load the iterator classes.\r\n\r\nI believe the issue here is the class can only be loaded by a portion of the TabletServers, due to VFS. Given that we have users using the VFSClassLoader, I think we should resurrect the configuration property. If we can somehow scope that to apply only to scan threads and only to classloading Errors, that might be appropriate.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1536174194/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1536185268","html_url":"https://github.com/apache/accumulo/pull/3375#issuecomment-1536185268","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3375","id":1536185268,"node_id":"IC_kwDOACaFSM5bkFO0","user":{"login":"cshannon","id":123009,"node_id":"MDQ6VXNlcjEyMzAwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/123009?v=4","gravatar_id":"","url":"https://api.github.com/users/cshannon","html_url":"https://github.com/cshannon","followers_url":"https://api.github.com/users/cshannon/followers","following_url":"https://api.github.com/users/cshannon/following{/other_user}","gists_url":"https://api.github.com/users/cshannon/gists{/gist_id}","starred_url":"https://api.github.com/users/cshannon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cshannon/subscriptions","organizations_url":"https://api.github.com/users/cshannon/orgs","repos_url":"https://api.github.com/users/cshannon/repos","events_url":"https://api.github.com/users/cshannon/events{/privacy}","received_events_url":"https://api.github.com/users/cshannon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-05T12:27:13Z","updated_at":"2023-05-05T12:27:13Z","author_association":"CONTRIBUTOR","body":"If we are going to try and handle Errors here we should at least narrow the scope to certain ones (like no class def found). There are a lot of Errors we don't want to handle and should crash.\r\n\r\nSpecifically, any [VirtualMachineErrors](https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/VirtualMachineError.html) we would never want to convert to a RuntimeException. These types of Errors include OOM, StackOverflow, etc.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1536185268/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1536200374","html_url":"https://github.com/apache/accumulo/pull/3375#issuecomment-1536200374","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3375","id":1536200374,"node_id":"IC_kwDOACaFSM5bkI62","user":{"login":"ctubbsii","id":1280725,"node_id":"MDQ6VXNlcjEyODA3MjU=","avatar_url":"https://avatars.githubusercontent.com/u/1280725?v=4","gravatar_id":"","url":"https://api.github.com/users/ctubbsii","html_url":"https://github.com/ctubbsii","followers_url":"https://api.github.com/users/ctubbsii/followers","following_url":"https://api.github.com/users/ctubbsii/following{/other_user}","gists_url":"https://api.github.com/users/ctubbsii/gists{/gist_id}","starred_url":"https://api.github.com/users/ctubbsii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ctubbsii/subscriptions","organizations_url":"https://api.github.com/users/ctubbsii/orgs","repos_url":"https://api.github.com/users/ctubbsii/repos","events_url":"https://api.github.com/users/ctubbsii/events{/privacy}","received_events_url":"https://api.github.com/users/ctubbsii/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-05T12:37:49Z","updated_at":"2023-05-05T12:38:55Z","author_association":"MEMBER","body":"> If we take VFS out of the equation - if a user mistakenly specifies that classpath for a classloader context, then runs a scan on table that uses that context to load iterator classes, then they can take down a good portion or the entire cluster. However, I believe that the client makes a call to the Tablet Server to test that it can load the iterator classes.\r\n\r\nI stand by my statement in the previous discussion that a misconfigured classpath is indicative of a serious problem, and the risks of continuing to run under such circumstances are far higher than being offline temporarily.\r\n\r\n> I believe the issue here is the class can only be loaded by a portion of the TabletServers, due to VFS. Given that we have users using the VFSClassLoader, I think we should resurrect the configuration property. If we can somehow scope that to apply only to scan threads and only to classloading Errors, that might be appropriate.\r\n\r\nI strongly disagree. We already knew that we had users still using the VFSClassLoader when we made the previous change. Nothing has changed from then. All the options we previously discussed when thinking through a migration path for these users are still available. Resurrecting a configuration property like that is still putting the responsibility for handling these things *inside* Accumulo's code base, and that's retreating from the position we staked out when creating the ContextClassLoaderFactory SPI. The proper place for adding that complexity, trade-offs, configuration knobs, etc., for handling things differently than the default for class loading is inside the user's choice of class to implement ContextClassLoaderFactory, and *not* inside Accumulo.\r\n\r\nIf we want to help users move forward here, we should evangelize the pluggable mechanism we created, where they can exercise their choices, and trade-offs, for their requirements.\r\n","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1536200374/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1536247606","html_url":"https://github.com/apache/accumulo/pull/3375#issuecomment-1536247606","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3375","id":1536247606,"node_id":"IC_kwDOACaFSM5bkUc2","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-05T13:15:36Z","updated_at":"2023-05-05T13:20:54Z","author_association":"CONTRIBUTOR","body":"I suspect a user could create an iterator and configure on their stack that does this translation.  Wondering if something like this would work [ErrorHandlingIterator](https://gist.github.com/keith-turner/de6d6efdf218cd99bec274c0c8c005ff) if configured at the top of the users iterator stack.  Seems like all errors would go through it.\r\n\r\nIn the PR I am curious if there a particular reason for catching Error in the SourceSwitchingIterator?","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1536247606/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1536265308","html_url":"https://github.com/apache/accumulo/pull/3375#issuecomment-1536265308","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3375","id":1536265308,"node_id":"IC_kwDOACaFSM5bkYxc","user":{"login":"EdColeman","id":7047700,"node_id":"MDQ6VXNlcjcwNDc3MDA=","avatar_url":"https://avatars.githubusercontent.com/u/7047700?v=4","gravatar_id":"","url":"https://api.github.com/users/EdColeman","html_url":"https://github.com/EdColeman","followers_url":"https://api.github.com/users/EdColeman/followers","following_url":"https://api.github.com/users/EdColeman/following{/other_user}","gists_url":"https://api.github.com/users/EdColeman/gists{/gist_id}","starred_url":"https://api.github.com/users/EdColeman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/EdColeman/subscriptions","organizations_url":"https://api.github.com/users/EdColeman/orgs","repos_url":"https://api.github.com/users/EdColeman/repos","events_url":"https://api.github.com/users/EdColeman/events{/privacy}","received_events_url":"https://api.github.com/users/EdColeman/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-05T13:29:24Z","updated_at":"2023-05-05T13:29:24Z","author_association":"CONTRIBUTOR","body":"I picked SourceSwitchingIterator after a brief internal discussion and that was where the issue reported was throwing the exception.  There was not an alternate, obvious iterator that would at least demonstrate the problem.\r\n\r\nThe only real benefit of this PR was being able to reproduce the stack trace as reported in the issue quickly.  It also identified what possible locations would need protection.\r\n\r\nOne underlying issue that has been discussed before, but I do not recall a resolution or even a proposed approach is how to isolate \"user errors\" from system errors and allowing a \"user error\" to halt otherwise healthy services.  This PR does not come close to solving that, other than this is \"what not to do\"\r\n\r\nI converted this to draft and would just have closed it, but maybe something can come from the discussion?\r\n","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1536265308/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1536311772","html_url":"https://github.com/apache/accumulo/pull/3375#issuecomment-1536311772","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3375","id":1536311772,"node_id":"IC_kwDOACaFSM5bkkHc","user":{"login":"ctubbsii","id":1280725,"node_id":"MDQ6VXNlcjEyODA3MjU=","avatar_url":"https://avatars.githubusercontent.com/u/1280725?v=4","gravatar_id":"","url":"https://api.github.com/users/ctubbsii","html_url":"https://github.com/ctubbsii","followers_url":"https://api.github.com/users/ctubbsii/followers","following_url":"https://api.github.com/users/ctubbsii/following{/other_user}","gists_url":"https://api.github.com/users/ctubbsii/gists{/gist_id}","starred_url":"https://api.github.com/users/ctubbsii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ctubbsii/subscriptions","organizations_url":"https://api.github.com/users/ctubbsii/orgs","repos_url":"https://api.github.com/users/ctubbsii/repos","events_url":"https://api.github.com/users/ctubbsii/events{/privacy}","received_events_url":"https://api.github.com/users/ctubbsii/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-05T14:03:48Z","updated_at":"2023-05-05T14:03:48Z","author_association":"MEMBER","body":"If a user is going to spend effort on providing a pluggable implementation to address this class of issues, I think their time would be better spent working on a custom ContextClassLoaderFactory implementation that downgrades specific Errors or handles them, rather than doing the same in an iterator. The former would cast a wider net to catch the same class of problems more generally (such as when an Error occurs tried to load the user's iterator in the per-table context).","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1536311772/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1536380742","html_url":"https://github.com/apache/accumulo/pull/3378#issuecomment-1536380742","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3378","id":1536380742,"node_id":"IC_kwDOACaFSM5bk09G","user":{"login":"ctubbsii","id":1280725,"node_id":"MDQ6VXNlcjEyODA3MjU=","avatar_url":"https://avatars.githubusercontent.com/u/1280725?v=4","gravatar_id":"","url":"https://api.github.com/users/ctubbsii","html_url":"https://github.com/ctubbsii","followers_url":"https://api.github.com/users/ctubbsii/followers","following_url":"https://api.github.com/users/ctubbsii/following{/other_user}","gists_url":"https://api.github.com/users/ctubbsii/gists{/gist_id}","starred_url":"https://api.github.com/users/ctubbsii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ctubbsii/subscriptions","organizations_url":"https://api.github.com/users/ctubbsii/orgs","repos_url":"https://api.github.com/users/ctubbsii/repos","events_url":"https://api.github.com/users/ctubbsii/events{/privacy}","received_events_url":"https://api.github.com/users/ctubbsii/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-05T14:53:17Z","updated_at":"2023-05-05T14:53:17Z","author_association":"MEMBER","body":"All unit tests and ITs passed.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1536380742/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1536433278","html_url":"https://github.com/apache/accumulo/pull/3286#issuecomment-1536433278","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3286","id":1536433278,"node_id":"IC_kwDOACaFSM5blBx-","user":{"login":"cshannon","id":123009,"node_id":"MDQ6VXNlcjEyMzAwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/123009?v=4","gravatar_id":"","url":"https://api.github.com/users/cshannon","html_url":"https://github.com/cshannon","followers_url":"https://api.github.com/users/cshannon/followers","following_url":"https://api.github.com/users/cshannon/following{/other_user}","gists_url":"https://api.github.com/users/cshannon/gists{/gist_id}","starred_url":"https://api.github.com/users/cshannon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cshannon/subscriptions","organizations_url":"https://api.github.com/users/cshannon/orgs","repos_url":"https://api.github.com/users/cshannon/repos","events_url":"https://api.github.com/users/cshannon/events{/privacy}","received_events_url":"https://api.github.com/users/cshannon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-05T15:33:58Z","updated_at":"2023-05-05T15:33:58Z","author_association":"CONTRIBUTOR","body":"Closing this for now as a different approach is being taken to store a range along with the file in the CQ and having multiple entries in metadata for a file (1 per range) vs storing ranges in the value itself","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1536433278/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1536511530","html_url":"https://github.com/apache/accumulo/pull/3381#issuecomment-1536511530","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3381","id":1536511530,"node_id":"IC_kwDOACaFSM5blU4q","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-05T16:42:41Z","updated_at":"2023-05-05T16:42:41Z","author_association":"CONTRIBUTOR","body":"This PR consolidates all the writes done to the metadata table into one place during table creation. The default tablet was being written twice in some cases, this was fixed by removing the call to `MetadataTableUtil.addTablet()`.  The hosting goals were being written after the initial tablets were written, this was folded into the initial write.  The initial write was made to use ample instead of a batch writer.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1536511530/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1536512041","html_url":"https://github.com/apache/accumulo/pull/3381#issuecomment-1536512041","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3381","id":1536512041,"node_id":"IC_kwDOACaFSM5blVAp","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-05T16:43:12Z","updated_at":"2023-05-05T16:43:12Z","author_association":"CONTRIBUTOR","body":"I ran ReadWriteIT and NewTableConfigurationIT locally and those passed.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1536512041/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1536516060","html_url":"https://github.com/apache/accumulo/pull/3381#issuecomment-1536516060","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3381","id":1536516060,"node_id":"IC_kwDOACaFSM5blV_c","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-05T16:46:33Z","updated_at":"2023-05-05T16:46:33Z","author_association":"CONTRIBUTOR","body":"I double checked that removing the call to `MetadataTableUtil.addTablet()` did not drop any needed metadata writes.  If anyone else has second, take a look at that and make sure I didn't miss anything.  I think the exact same things are still being written.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1536516060/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1536614290","html_url":"https://github.com/apache/accumulo/pull/3380#issuecomment-1536614290","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3380","id":1536614290,"node_id":"IC_kwDOACaFSM5blt-S","user":{"login":"dlmarion","id":567911,"node_id":"MDQ6VXNlcjU2NzkxMQ==","avatar_url":"https://avatars.githubusercontent.com/u/567911?v=4","gravatar_id":"","url":"https://api.github.com/users/dlmarion","html_url":"https://github.com/dlmarion","followers_url":"https://api.github.com/users/dlmarion/followers","following_url":"https://api.github.com/users/dlmarion/following{/other_user}","gists_url":"https://api.github.com/users/dlmarion/gists{/gist_id}","starred_url":"https://api.github.com/users/dlmarion/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dlmarion/subscriptions","organizations_url":"https://api.github.com/users/dlmarion/orgs","repos_url":"https://api.github.com/users/dlmarion/repos","events_url":"https://api.github.com/users/dlmarion/events{/privacy}","received_events_url":"https://api.github.com/users/dlmarion/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-05T18:20:40Z","updated_at":"2023-05-05T18:20:40Z","author_association":"CONTRIBUTOR","body":"I don't think it buys us anything since there are infinite retries and it does not get used in the call to `Retry.waitForNextAttempt`. ","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1536614290/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1536616225","html_url":"https://github.com/apache/accumulo/issues/3354#issuecomment-1536616225","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3354","id":1536616225,"node_id":"IC_kwDOACaFSM5bluch","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-05T18:22:37Z","updated_at":"2023-05-05T18:23:52Z","author_association":"CONTRIBUTOR","body":"In BulkNewIT there is a disabled test (was disabled in #3350).  When this is fixed that test can be enabled.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1536616225/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1536621127","html_url":"https://github.com/apache/accumulo/pull/3380#issuecomment-1536621127","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3380","id":1536621127,"node_id":"IC_kwDOACaFSM5blvpH","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-05T18:27:20Z","updated_at":"2023-05-05T18:27:20Z","author_association":"CONTRIBUTOR","body":"> I don't think it buys us anything since there are infinite retries and it does not get used in the call to Retry.waitForNextAttempt.\r\n\r\nThats right, nevermind. I thought it was calling getMessage() which used the counter, but its not. ","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1536621127/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1536710881","html_url":"https://github.com/apache/accumulo/issues/3373#issuecomment-1536710881","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3373","id":1536710881,"node_id":"IC_kwDOACaFSM5bmFjh","user":{"login":"DomGarguilo","id":47725857,"node_id":"MDQ6VXNlcjQ3NzI1ODU3","avatar_url":"https://avatars.githubusercontent.com/u/47725857?v=4","gravatar_id":"","url":"https://api.github.com/users/DomGarguilo","html_url":"https://github.com/DomGarguilo","followers_url":"https://api.github.com/users/DomGarguilo/followers","following_url":"https://api.github.com/users/DomGarguilo/following{/other_user}","gists_url":"https://api.github.com/users/DomGarguilo/gists{/gist_id}","starred_url":"https://api.github.com/users/DomGarguilo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DomGarguilo/subscriptions","organizations_url":"https://api.github.com/users/DomGarguilo/orgs","repos_url":"https://api.github.com/users/DomGarguilo/repos","events_url":"https://api.github.com/users/DomGarguilo/events{/privacy}","received_events_url":"https://api.github.com/users/DomGarguilo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-05T19:56:41Z","updated_at":"2023-05-05T19:56:41Z","author_association":"MEMBER","body":"Looking at the Monitor code in 1.10 I see the following:\r\n\r\nhttps://github.com/apache/accumulo/blob/a71fa294f13b2176a4882b0cfb15336a5be0dcd4/server/monitor/src/main/java/org/apache/accumulo/monitor/servlets/MasterServlet.java#L123-L126\r\n\r\nWhich looks like it will display on the Master page if the `state` from the monitors `MasterMonitorInfo` is other than `MasterState.NORMAL`.\r\n\r\nhttps://github.com/apache/accumulo/blob/a71fa294f13b2176a4882b0cfb15336a5be0dcd4/server/monitor/src/main/java/org/apache/accumulo/monitor/servlets/XMLServlet.java#L103\r\n\r\nAnd this is appended to the output of the XML endpoint (which i was able to verify by standing up a 1.10 cluster and viewing)\r\n\r\n\r\nIn 2.1, it looks like that data (now `managerGoalState`) is still present in the `MangerMonitorInfo` but is never displayed on the Manger page. I think it will still be present in the `/XML` endpoint though (but have not yet verified).\r\n\r\n@ivakegg does this sound right to you? If so, is the goal of this ticket to have the manager goal state displayed in the 2.1 manger page if it is not `NORMAL`?","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1536710881/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1537148292","html_url":"https://github.com/apache/accumulo/pull/3385#issuecomment-1537148292","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3385","id":1537148292,"node_id":"IC_kwDOACaFSM5bnwWE","user":{"login":"cshannon","id":123009,"node_id":"MDQ6VXNlcjEyMzAwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/123009?v=4","gravatar_id":"","url":"https://api.github.com/users/cshannon","html_url":"https://github.com/cshannon","followers_url":"https://api.github.com/users/cshannon/followers","following_url":"https://api.github.com/users/cshannon/following{/other_user}","gists_url":"https://api.github.com/users/cshannon/gists{/gist_id}","starred_url":"https://api.github.com/users/cshannon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cshannon/subscriptions","organizations_url":"https://api.github.com/users/cshannon/orgs","repos_url":"https://api.github.com/users/cshannon/repos","events_url":"https://api.github.com/users/cshannon/events{/privacy}","received_events_url":"https://api.github.com/users/cshannon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-06T13:59:08Z","updated_at":"2023-05-06T13:59:08Z","author_association":"CONTRIBUTOR","body":"I just kicked off a full IT run.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1537148292/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1537162205","html_url":"https://github.com/apache/accumulo/pull/3342#issuecomment-1537162205","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3342","id":1537162205,"node_id":"IC_kwDOACaFSM5bnzvd","user":{"login":"cshannon","id":123009,"node_id":"MDQ6VXNlcjEyMzAwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/123009?v=4","gravatar_id":"","url":"https://api.github.com/users/cshannon","html_url":"https://github.com/cshannon","followers_url":"https://api.github.com/users/cshannon/followers","following_url":"https://api.github.com/users/cshannon/following{/other_user}","gists_url":"https://api.github.com/users/cshannon/gists{/gist_id}","starred_url":"https://api.github.com/users/cshannon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cshannon/subscriptions","organizations_url":"https://api.github.com/users/cshannon/orgs","repos_url":"https://api.github.com/users/cshannon/repos","events_url":"https://api.github.com/users/cshannon/events{/privacy}","received_events_url":"https://api.github.com/users/cshannon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-06T15:12:41Z","updated_at":"2023-05-06T15:12:41Z","author_association":"CONTRIBUTOR","body":"Looking at this it would be really nice if [Range](https://github.com/apache/accumulo/blob/56d49f15a05db9a46dbceb845918497760601c11/core/src/main/java/org/apache/accumulo/core/data/Range.java#L39) and `RowRange` could share code. Two ideas I had:\r\n\r\n1. I am wondering if it makes more sense to refactor `Range` to extend `RowRange`. At first glance it seems like the two should be able to share a lot of code as the main difference is comparing Text start/end row vs Key start/end otherwise the core methods/logic for the Range should be pretty similar. But again, I haven't looked in detail or thought through it all the way so maybe there are other reasons to keep it separate.\r\n\r\n2. Another option, which I like but may not work if we consider Range public API, is to refactor things and rename the existing Range object to KeyRange and have a more generic abstract Range object and then have `RowRange` and `KeyRange` extend that and share code. Having two descriptive objects of `RowRange` and `KeyRange` and have them share a common abstract class would be quite nice.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1537162205/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1537168827","html_url":"https://github.com/apache/accumulo/issues/3368#issuecomment-1537168827","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3368","id":1537168827,"node_id":"IC_kwDOACaFSM5bn1W7","user":{"login":"cshannon","id":123009,"node_id":"MDQ6VXNlcjEyMzAwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/123009?v=4","gravatar_id":"","url":"https://api.github.com/users/cshannon","html_url":"https://github.com/cshannon","followers_url":"https://api.github.com/users/cshannon/followers","following_url":"https://api.github.com/users/cshannon/following{/other_user}","gists_url":"https://api.github.com/users/cshannon/gists{/gist_id}","starred_url":"https://api.github.com/users/cshannon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cshannon/subscriptions","organizations_url":"https://api.github.com/users/cshannon/orgs","repos_url":"https://api.github.com/users/cshannon/repos","events_url":"https://api.github.com/users/cshannon/events{/privacy}","received_events_url":"https://api.github.com/users/cshannon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-06T15:46:37Z","updated_at":"2023-05-06T15:46:37Z","author_association":"CONTRIBUTOR","body":"Looks like this is the [loop](https://github.com/apache/accumulo/blob/b41427dc18c9fa36c9e619ebf928a02aebeb22fb/server/tserver/src/main/java/org/apache/accumulo/tserver/tablet/Tablet.java#L981) that it's stuck on waiting on for the scans to finish. And the log message is being printed in ThriftScanner unfortunately isn't logging the full stack trace.\r\n\r\n@ivakegg - It seems like the message portion of the exception is null. Since you are using a SNAPSHOT build (and if you can reproduce the issue) I would update the logging [here](https://github.com/apache/accumulo/blob/b41427dc18c9fa36c9e619ebf928a02aebeb22fb/core/src/main/java/org/apache/accumulo/core/clientImpl/ThriftScanner.java#L167) to log the full stack trace and try and log the TException being caught.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1537168827/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1537170960","html_url":"https://github.com/apache/accumulo/issues/3348#issuecomment-1537170960","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3348","id":1537170960,"node_id":"IC_kwDOACaFSM5bn14Q","user":{"login":"cshannon","id":123009,"node_id":"MDQ6VXNlcjEyMzAwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/123009?v=4","gravatar_id":"","url":"https://api.github.com/users/cshannon","html_url":"https://github.com/cshannon","followers_url":"https://api.github.com/users/cshannon/followers","following_url":"https://api.github.com/users/cshannon/following{/other_user}","gists_url":"https://api.github.com/users/cshannon/gists{/gist_id}","starred_url":"https://api.github.com/users/cshannon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cshannon/subscriptions","organizations_url":"https://api.github.com/users/cshannon/orgs","repos_url":"https://api.github.com/users/cshannon/repos","events_url":"https://api.github.com/users/cshannon/events{/privacy}","received_events_url":"https://api.github.com/users/cshannon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-06T15:58:34Z","updated_at":"2023-05-06T15:59:23Z","author_association":"CONTRIBUTOR","body":"> One thing to keep in mind, that may make this easier to address: SplitUtils is not public API and is not intended for direct consumption. It is used internally to help us approximate relative split sizes when calculating InputSplits. So, it doesn't matter if its method returns a negative number, as long as the places where it's used check its sign to ensure that they handle that situation appropriately.\r\n> \r\n> We could also try to come up with better approximation methods for split sizes, but I think addressing the negative in the places where it's used is the quickest and easiest way to fix this, without completely rewriting the approximation algorithm.\r\n\r\nSo do you think it's appropriate to just use Long.MAX_VALUE as the range length if a negative is detected in the spots where the method is used?  (looks like [BatchInputSplit](https://github.com/apache/accumulo/blob/56d49f15a05db9a46dbceb845918497760601c11/hadoop-mapreduce/src/main/java/org/apache/accumulo/hadoopImpl/mapreduce/BatchInputSplit.java#L113) and [RangeInputSplit](https://github.com/apache/accumulo/blob/56d49f15a05db9a46dbceb845918497760601c11/hadoop-mapreduce/src/main/java/org/apache/accumulo/hadoopImpl/mapreduce/RangeInputSplit.java#L119) currently)\r\n\r\nWe could of course just handle a returned negative in both places but it still seems like the simplest thing is to have that method just return Long.MAX_VALUE as the computed range length if it detects an overflow/negative otherwise everytime we call the method we have to handle a potential negative returned which could lead to inconsistencies.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1537170960/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1537526892","html_url":"https://github.com/apache/accumulo/pull/3385#issuecomment-1537526892","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3385","id":1537526892,"node_id":"IC_kwDOACaFSM5bpMxs","user":{"login":"cshannon","id":123009,"node_id":"MDQ6VXNlcjEyMzAwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/123009?v=4","gravatar_id":"","url":"https://api.github.com/users/cshannon","html_url":"https://github.com/cshannon","followers_url":"https://api.github.com/users/cshannon/followers","following_url":"https://api.github.com/users/cshannon/following{/other_user}","gists_url":"https://api.github.com/users/cshannon/gists{/gist_id}","starred_url":"https://api.github.com/users/cshannon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cshannon/subscriptions","organizations_url":"https://api.github.com/users/cshannon/orgs","repos_url":"https://api.github.com/users/cshannon/repos","events_url":"https://api.github.com/users/cshannon/events{/privacy}","received_events_url":"https://api.github.com/users/cshannon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-07T19:52:28Z","updated_at":"2023-05-07T19:52:28Z","author_association":"CONTRIBUTOR","body":"The full IT run passed.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1537526892/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1537543269","html_url":"https://github.com/apache/accumulo/pull/3332#issuecomment-1537543269","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3332","id":1537543269,"node_id":"IC_kwDOACaFSM5bpQxl","user":{"login":"cshannon","id":123009,"node_id":"MDQ6VXNlcjEyMzAwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/123009?v=4","gravatar_id":"","url":"https://api.github.com/users/cshannon","html_url":"https://github.com/cshannon","followers_url":"https://api.github.com/users/cshannon/followers","following_url":"https://api.github.com/users/cshannon/following{/other_user}","gists_url":"https://api.github.com/users/cshannon/gists{/gist_id}","starred_url":"https://api.github.com/users/cshannon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cshannon/subscriptions","organizations_url":"https://api.github.com/users/cshannon/orgs","repos_url":"https://api.github.com/users/cshannon/repos","events_url":"https://api.github.com/users/cshannon/events{/privacy}","received_events_url":"https://api.github.com/users/cshannon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-07T21:20:31Z","updated_at":"2023-05-07T21:20:31Z","author_association":"CONTRIBUTOR","body":"I started making some more changes to this in a new branch for now https://github.com/cshannon/accumulo/tree/accumulo-3332-file-meta-entry. The updates in the new branch are based on changes from #3385 . If/when #3385 gets merged I can then update this PR to be based on that or open a new PR, etc. ","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1537543269/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1538645691","html_url":"https://github.com/apache/accumulo/pull/3342#issuecomment-1538645691","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3342","id":1538645691,"node_id":"IC_kwDOACaFSM5btd67","user":{"login":"DomGarguilo","id":47725857,"node_id":"MDQ6VXNlcjQ3NzI1ODU3","avatar_url":"https://avatars.githubusercontent.com/u/47725857?v=4","gravatar_id":"","url":"https://api.github.com/users/DomGarguilo","html_url":"https://github.com/DomGarguilo","followers_url":"https://api.github.com/users/DomGarguilo/followers","following_url":"https://api.github.com/users/DomGarguilo/following{/other_user}","gists_url":"https://api.github.com/users/DomGarguilo/gists{/gist_id}","starred_url":"https://api.github.com/users/DomGarguilo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DomGarguilo/subscriptions","organizations_url":"https://api.github.com/users/DomGarguilo/orgs","repos_url":"https://api.github.com/users/DomGarguilo/repos","events_url":"https://api.github.com/users/DomGarguilo/events{/privacy}","received_events_url":"https://api.github.com/users/DomGarguilo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-08T15:58:30Z","updated_at":"2023-05-08T15:58:30Z","author_association":"MEMBER","body":"> Looking at this it would be really nice if [Range](https://github.com/apache/accumulo/blob/56d49f15a05db9a46dbceb845918497760601c11/core/src/main/java/org/apache/accumulo/core/data/Range.java#L39) and `RowRange` could share code. Two ideas I had:\r\n> \r\n> 1. I am wondering if it makes more sense to refactor `Range` to extend `RowRange`. At first glance it seems like the two should be able to share a lot of code as the main difference is comparing Text start/end row vs Key start/end otherwise the core methods/logic for the Range should be pretty similar. But again, I haven't looked in detail or thought through it all the way so maybe there are other reasons to keep it separate.\r\n> 2. Another option, which I like but may not work if we consider Range public API, is to refactor things and rename the existing Range object to KeyRange and have a more generic abstract Range object and then have `RowRange` and `KeyRange` extend that and share code. Having two descriptive objects of `RowRange` and `KeyRange` and have them share a common abstract class would be quite nice.\r\n\r\nIt definitely seems like there should be some refactoring to share code. Of these two ideas the first seems like it would be a lot less disruptive as the Range API would not need to change. But the second idea seems maybe more complete(?) or optimal(?) (maybe how things would be done if creating both range and rowrange from scratch at this point) but more disruptive due to changing of the existing API. ","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1538645691/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1538685122","html_url":"https://github.com/apache/accumulo/pull/3230#issuecomment-1538685122","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3230","id":1538685122,"node_id":"IC_kwDOACaFSM5btnjC","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-08T16:24:13Z","updated_at":"2023-05-08T16:26:45Z","author_association":"CONTRIBUTOR","body":"It may be good to move the pre upgrade checks into the Upgrader because the current version of Accumulo may not know how to read the previous version of Accumulo's metadata in order to perform upgrade checks.  Adding new methods make this step explicit when someone is thinking about writing a new Upgrader, it forces them to explicity consider if conditions are safe for an upgrade.  What conditions are safe for an upgrade could be highly dependent on the two versions of Accumulo.  If its an explicit step in the Upgrader, then it makes people consider upgrade safety in future versions of Accumulo.  With all of this in mind I made the following attempt to update the Upgrader interface.\r\n\r\n```java\r\npublic interface Upgrader {\r\n\r\n  /**\r\n   * This method is called before {@link #upgradeZookeeper(ServerContext)} to ensure the system is\r\n   * in a suitable state to upgrade. Examples of what this check could attempt to do are :\r\n   *\r\n   * <UL>\r\n   * <LI>If root tablet metadata is not upgraded, ensure the root tablet is not currently assigned\r\n   * to a live tserver.</LI>\r\n   * <LI>Ensure there are no server processes running from a previous version of Accumulo</LI>\r\n   * </UL>\r\n   *\r\n   * <P>\r\n   * The implementation of this method is delegated to the Uprader because it may have to read data\r\n   * from DFS and Zookeeper in formats used by previous versions of Accumulo. This code for reading\r\n   * previous storage formats should always be delegated to the uprader.\r\n   * </P>\r\n   *\r\n   * <p>\r\n   * Any possible conditions in the distributed system that could cause the upgrade process to\r\n   * corrupt metadata or data should be checked for here and fail if detected.\r\n   * </p>\r\n   *\r\n   * @throws IllegalStateException if conditions are not suitable for upgrade. The exception message\r\n   *         should clearly indicate specifics about what is blocking this upgrade step.\r\n   */\r\n  void preUpgradeZookeeperCheck(ServerContext context);\r\n\r\n  /**\r\n   * Update entries in ZooKeeper - called before the root tablet is loaded.\r\n   *\r\n   * @param context the server context.\r\n   */\r\n  void upgradeZookeeper(ServerContext context);\r\n\r\n  /**\r\n   * This method is called before {@link #upgradeRoot(ServerContext)} to ensure the system is in a\r\n   * suitabl state to upgrade. Examples of what this check could attempt to do are :\r\n   *\r\n   * <UL>\r\n   * <LI>If metadata tablets metadata is not upgraded, ensure no metadata tablets are currently\r\n   * assigned to a live tserver</LI>\r\n   * </UL>\r\n   *\r\n   * @throws IllegalStateException if conditions are not suitable for upgrade. The exception message\r\n   *         should clearly indicate specifics about what is blocking this upgrade step.\r\n   */\r\n  void preUpgradeRootCheck(ServerContext context);\r\n\r\n  /**\r\n   * Update the root tablet - called after the root tablet is loaded and before the metadata table\r\n   * is loaded.\r\n   *\r\n   * @param context the server context.\r\n   */\r\n  void upgradeRoot(ServerContext context);\r\n\r\n  /**\r\n   * This method is called before {@link #upgradeMetadata(ServerContext)} to ensure the system is in\r\n   * a suitable state to upgrade. Examples of what this check could attempt to do are :\r\n   *\r\n   * <UL>\r\n   * <LI>If user tablet metadata is not upgraded, ensure no user tablets are currently assigned\r\n   * to a live tserver</LI>\r\n   * </UL>\r\n   *\r\n   * @throws IllegalStateException if conditions are not suitable for upgrade. The exception message\r\n   *         should clearly indicate specifics about what is blocking this upgrade step.\r\n   */\r\n  void preUpgradeMetadataCheck(ServerContext context);\r\n\r\n  /**\r\n   * Update the metadata table - called after the metadata table is loaded and before loading user\r\n   * tablets.\r\n   *\r\n   * @param context the server context.\r\n   */\r\n  void upgradeMetadata(ServerContext context);\r\n}\r\n\r\n```\r\n\r\nWould the checks written so far in the PR fit into this model?\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1538685122/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1538760161","html_url":"https://github.com/apache/accumulo/pull/3230#issuecomment-1538760161","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3230","id":1538760161,"node_id":"IC_kwDOACaFSM5bt53h","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-08T17:26:53Z","updated_at":"2023-05-08T17:26:53Z","author_association":"CONTRIBUTOR","body":"> I'm confused by the description I guess - is the goal to remove invalid locks or is the goal to stop processes running older versions of software and you are doing it by checking the lock data?\r\n\r\nI would say the overall goal should be to prevent the upgrade code from causing corruption of user metadata or data.  Root and metadata tablets running on old server processes while the upgrade process runs could cause corruption of their metadata.\r\n\r\n> I'd rather see this be a hard failure when there are old servers running. From a user perspective, I would rather know that I need to stop old servers or manually delete their ZK paths before proceeding with an upgrade.\r\n\r\nI agree with this, I think detecting old server processes and failing to upgrade is preferable to automatically killing them.  What if someone accidentally runs the new upgrade code on the wrong cluster and they would not have wanted it to kill all the server processes?","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1538760161/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1538814499","html_url":"https://github.com/apache/accumulo/pull/3230#issuecomment-1538814499","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3230","id":1538814499,"node_id":"IC_kwDOACaFSM5buHIj","user":{"login":"EdColeman","id":7047700,"node_id":"MDQ6VXNlcjcwNDc3MDA=","avatar_url":"https://avatars.githubusercontent.com/u/7047700?v=4","gravatar_id":"","url":"https://api.github.com/users/EdColeman","html_url":"https://github.com/EdColeman","followers_url":"https://api.github.com/users/EdColeman/followers","following_url":"https://api.github.com/users/EdColeman/following{/other_user}","gists_url":"https://api.github.com/users/EdColeman/gists{/gist_id}","starred_url":"https://api.github.com/users/EdColeman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/EdColeman/subscriptions","organizations_url":"https://api.github.com/users/EdColeman/orgs","repos_url":"https://api.github.com/users/EdColeman/repos","events_url":"https://api.github.com/users/EdColeman/events{/privacy}","received_events_url":"https://api.github.com/users/EdColeman/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-08T18:07:24Z","updated_at":"2023-05-08T18:07:24Z","author_association":"CONTRIBUTOR","body":"With the current change - the check tries to contact the tservers and if any are found, then the list is printed at the end of the check, but the lock are not removed.  The default behavior is then to exit the upgrade code and force the upgrade to halt.  This can be controlled via a property if someone really wishes to carry on with tservers that may be incorrect.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1538814499/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1538821292","html_url":"https://github.com/apache/accumulo/pull/3230#issuecomment-1538821292","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3230","id":1538821292,"node_id":"IC_kwDOACaFSM5buIys","user":{"login":"EdColeman","id":7047700,"node_id":"MDQ6VXNlcjcwNDc3MDA=","avatar_url":"https://avatars.githubusercontent.com/u/7047700?v=4","gravatar_id":"","url":"https://api.github.com/users/EdColeman","html_url":"https://github.com/EdColeman","followers_url":"https://api.github.com/users/EdColeman/followers","following_url":"https://api.github.com/users/EdColeman/following{/other_user}","gists_url":"https://api.github.com/users/EdColeman/gists{/gist_id}","starred_url":"https://api.github.com/users/EdColeman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/EdColeman/subscriptions","organizations_url":"https://api.github.com/users/EdColeman/orgs","repos_url":"https://api.github.com/users/EdColeman/repos","events_url":"https://api.github.com/users/EdColeman/events{/privacy}","received_events_url":"https://api.github.com/users/EdColeman/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-08T18:12:06Z","updated_at":"2023-05-08T18:12:06Z","author_association":"CONTRIBUTOR","body":"The pre-upgrade stage was added to support code / checks that are likely independent of a specific version.  Checking the ZooKeeper authorizations is one example.  It is not version dependent, but continuing an upgrade with potentially invalid auths seemed like it should be avoided.\r\n\r\nThe ability to communicate with a tserver seems to also fit within this category.  Before anything happens that is dependent on version, this check would establish a baseline of \"at least I can talk to all of the registered tservers\" before any version dependent code would have a chance to run.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1538821292/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1538822974","html_url":"https://github.com/apache/accumulo/issues/3386#issuecomment-1538822974","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3386","id":1538822974,"node_id":"IC_kwDOACaFSM5buJM-","user":{"login":"ivakegg","id":347158,"node_id":"MDQ6VXNlcjM0NzE1OA==","avatar_url":"https://avatars.githubusercontent.com/u/347158?v=4","gravatar_id":"","url":"https://api.github.com/users/ivakegg","html_url":"https://github.com/ivakegg","followers_url":"https://api.github.com/users/ivakegg/followers","following_url":"https://api.github.com/users/ivakegg/following{/other_user}","gists_url":"https://api.github.com/users/ivakegg/gists{/gist_id}","starred_url":"https://api.github.com/users/ivakegg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ivakegg/subscriptions","organizations_url":"https://api.github.com/users/ivakegg/orgs","repos_url":"https://api.github.com/users/ivakegg/repos","events_url":"https://api.github.com/users/ivakegg/events{/privacy}","received_events_url":"https://api.github.com/users/ivakegg/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-08T18:13:17Z","updated_at":"2023-05-08T18:13:17Z","author_association":"CONTRIBUTOR","body":"For the 12 tablets that got out of sync, they all were for the same table (lets call it table X) and the metadata for all of them were from the same accumulo metadata tablet.  Also they all started complaining about the error at about the same time.  So this suggests that this bad state has to do more with the accumulo metdata tablet that was handling all of the table X tablets at the time.  No errors were found in the previous 30 minutes on either the tserver handling the metadata tablet, or in the tservers handling the tablets for table X.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1538822974/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1538844100","html_url":"https://github.com/apache/accumulo/issues/3386#issuecomment-1538844100","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3386","id":1538844100,"node_id":"IC_kwDOACaFSM5buOXE","user":{"login":"dlmarion","id":567911,"node_id":"MDQ6VXNlcjU2NzkxMQ==","avatar_url":"https://avatars.githubusercontent.com/u/567911?v=4","gravatar_id":"","url":"https://api.github.com/users/dlmarion","html_url":"https://github.com/dlmarion","followers_url":"https://api.github.com/users/dlmarion/followers","following_url":"https://api.github.com/users/dlmarion/following{/other_user}","gists_url":"https://api.github.com/users/dlmarion/gists{/gist_id}","starred_url":"https://api.github.com/users/dlmarion/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dlmarion/subscriptions","organizations_url":"https://api.github.com/users/dlmarion/orgs","repos_url":"https://api.github.com/users/dlmarion/repos","events_url":"https://api.github.com/users/dlmarion/events{/privacy}","received_events_url":"https://api.github.com/users/dlmarion/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-08T18:29:30Z","updated_at":"2023-05-08T18:29:30Z","author_association":"CONTRIBUTOR","body":"@ivakegg  - Are you able to give us an example of the wording of the log message? There are a couple of different places where these checks occur, with slightly different wording.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1538844100/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1538845931","html_url":"https://github.com/apache/accumulo/issues/3386#issuecomment-1538845931","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3386","id":1538845931,"node_id":"IC_kwDOACaFSM5buOzr","user":{"login":"EdColeman","id":7047700,"node_id":"MDQ6VXNlcjcwNDc3MDA=","avatar_url":"https://avatars.githubusercontent.com/u/7047700?v=4","gravatar_id":"","url":"https://api.github.com/users/EdColeman","html_url":"https://github.com/EdColeman","followers_url":"https://api.github.com/users/EdColeman/followers","following_url":"https://api.github.com/users/EdColeman/following{/other_user}","gists_url":"https://api.github.com/users/EdColeman/gists{/gist_id}","starred_url":"https://api.github.com/users/EdColeman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/EdColeman/subscriptions","organizations_url":"https://api.github.com/users/EdColeman/orgs","repos_url":"https://api.github.com/users/EdColeman/repos","events_url":"https://api.github.com/users/EdColeman/events{/privacy}","received_events_url":"https://api.github.com/users/EdColeman/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-08T18:30:55Z","updated_at":"2023-05-08T18:30:55Z","author_association":"CONTRIBUTOR","body":"I think it was in the same check-loop that was changed to prevent the check from killing the tserver","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1538845931/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1538847119","html_url":"https://github.com/apache/accumulo/issues/3386#issuecomment-1538847119","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3386","id":1538847119,"node_id":"IC_kwDOACaFSM5buPGP","user":{"login":"dlmarion","id":567911,"node_id":"MDQ6VXNlcjU2NzkxMQ==","avatar_url":"https://avatars.githubusercontent.com/u/567911?v=4","gravatar_id":"","url":"https://api.github.com/users/dlmarion","html_url":"https://github.com/dlmarion","followers_url":"https://api.github.com/users/dlmarion/followers","following_url":"https://api.github.com/users/dlmarion/following{/other_user}","gists_url":"https://api.github.com/users/dlmarion/gists{/gist_id}","starred_url":"https://api.github.com/users/dlmarion/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dlmarion/subscriptions","organizations_url":"https://api.github.com/users/dlmarion/orgs","repos_url":"https://api.github.com/users/dlmarion/repos","events_url":"https://api.github.com/users/dlmarion/events{/privacy}","received_events_url":"https://api.github.com/users/dlmarion/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2023-05-08T18:31:47Z","updated_at":"2023-05-08T18:31:47Z","author_association":"CONTRIBUTOR","body":"> I think it was in the same check-loop that was changed to prevent the check from killing the tserver\r\n\r\nThis doesn't mean anything to me.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/1538847119/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]