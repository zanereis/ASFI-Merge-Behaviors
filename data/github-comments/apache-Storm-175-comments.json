[{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612870662","html_url":"https://github.com/apache/storm/issues/5374#issuecomment-2612870662","issue_url":"https://api.github.com/repos/apache/storm/issues/5374","id":2612870662,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4NzA2NjI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-12T21:21:46Z","updated_at":"2025-01-24T16:01:27Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user roshannaik commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1101#issuecomment-183492172\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1101#issuecomment-183492172</a></p>\n\n<p>    Added it to <a href=\"https://issues.apache.org/jira/browse/STORM-1491\" title=\"Release Apache Storm 1.0.0\" class=\"issue-link\" data-issue-key=\"STORM-1491\"><del>STORM-1491</del></a>.<br/>\n    The PR for 1.x branch is  <a href=\"https://github.com/apache/storm/pull/1105\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1105</a></p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612870662/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/183494677","html_url":"https://github.com/apache/storm/pull/1105#issuecomment-183494677","issue_url":"https://api.github.com/repos/apache/storm/issues/1105","id":183494677,"node_id":"MDEyOklzc3VlQ29tbWVudDE4MzQ5NDY3Nw==","user":{"login":"knusbaum","id":1819836,"node_id":"MDQ6VXNlcjE4MTk4MzY=","avatar_url":"https://avatars.githubusercontent.com/u/1819836?v=4","gravatar_id":"","url":"https://api.github.com/users/knusbaum","html_url":"https://github.com/knusbaum","followers_url":"https://api.github.com/users/knusbaum/followers","following_url":"https://api.github.com/users/knusbaum/following{/other_user}","gists_url":"https://api.github.com/users/knusbaum/gists{/gist_id}","starred_url":"https://api.github.com/users/knusbaum/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/knusbaum/subscriptions","organizations_url":"https://api.github.com/users/knusbaum/orgs","repos_url":"https://api.github.com/users/knusbaum/repos","events_url":"https://api.github.com/users/knusbaum/events{/privacy}","received_events_url":"https://api.github.com/users/knusbaum/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-12T21:29:43Z","updated_at":"2016-02-12T21:29:43Z","author_association":"CONTRIBUTOR","body":"Should remove the corresponding function from `util.clj`\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/183494677/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612870668","html_url":"https://github.com/apache/storm/issues/5374#issuecomment-2612870668","issue_url":"https://api.github.com/repos/apache/storm/issues/5374","id":2612870668,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4NzA2Njg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-12T21:31:09Z","updated_at":"2025-01-24T16:01:27Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user knusbaum commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1101#issuecomment-183494993\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1101#issuecomment-183494993</a></p>\n\n<p>    Please close this PR.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612870668/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/183501792","html_url":"https://github.com/apache/storm/pull/1101#issuecomment-183501792","issue_url":"https://api.github.com/repos/apache/storm/issues/1101","id":183501792,"node_id":"MDEyOklzc3VlQ29tbWVudDE4MzUwMTc5Mg==","user":{"login":"roshannaik","id":2366541,"node_id":"MDQ6VXNlcjIzNjY1NDE=","avatar_url":"https://avatars.githubusercontent.com/u/2366541?v=4","gravatar_id":"","url":"https://api.github.com/users/roshannaik","html_url":"https://github.com/roshannaik","followers_url":"https://api.github.com/users/roshannaik/followers","following_url":"https://api.github.com/users/roshannaik/following{/other_user}","gists_url":"https://api.github.com/users/roshannaik/gists{/gist_id}","starred_url":"https://api.github.com/users/roshannaik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/roshannaik/subscriptions","organizations_url":"https://api.github.com/users/roshannaik/orgs","repos_url":"https://api.github.com/users/roshannaik/repos","events_url":"https://api.github.com/users/roshannaik/events{/privacy}","received_events_url":"https://api.github.com/users/roshannaik/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-12T21:53:19Z","updated_at":"2016-02-12T21:53:19Z","author_association":"CONTRIBUTOR","body":"will update PR by removing unused clojure function and squashing commits.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/183501792/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612870673","html_url":"https://github.com/apache/storm/issues/5374#issuecomment-2612870673","issue_url":"https://api.github.com/repos/apache/storm/issues/5374","id":2612870673,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4NzA2NzM=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-12T21:53:20Z","updated_at":"2025-01-24T16:01:27Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user roshannaik commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1101#issuecomment-183501792\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1101#issuecomment-183501792</a></p>\n\n<p>    will update PR by removing unused clojure function and squashing commits.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612870673/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612644372","html_url":"https://github.com/apache/storm/issues/5067#issuecomment-2612644372","issue_url":"https://api.github.com/repos/apache/storm/issues/5067","id":2612644372,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NDQzNzI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-12T21:53:41Z","updated_at":"2025-01-24T14:20:06Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1100#discussion_r52803469\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1100#discussion_r52803469</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/ProcessSimulator.java &#8212;<br/>\n    @@ -0,0 +1,89 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm;<br/>\n    +import org.apache.storm.daemon.Shutdownable;<br/>\n    +<br/>\n    +import java.util.Collection;<br/>\n    +import java.util.Set;<br/>\n    +import java.util.concurrent.ConcurrentHashMap;<br/>\n    +<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +public class ProcessSimulator {<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Can we put in some javadocs to explain that the ProcessSimulator keeps track of Shutdownable objects in place of actual processes.</p>\n\n<p>    Also can we file a JIRA to replace Shutdownable with AutoClosable?</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612644372/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612644377","html_url":"https://github.com/apache/storm/issues/5067#issuecomment-2612644377","issue_url":"https://api.github.com/repos/apache/storm/issues/5067","id":2612644377,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NDQzNzc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-12T21:54:57Z","updated_at":"2025-01-24T14:20:07Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1100#discussion_r52803599\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1100#discussion_r52803599</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/ProcessSimulator.java &#8212;<br/>\n    @@ -0,0 +1,80 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm;<br/>\n    +import org.apache.storm.daemon.Shutdownable;<br/>\n    +<br/>\n    +import java.util.Collection;<br/>\n    +import java.util.Set;<br/>\n    +import java.util.concurrent.ConcurrentHashMap;<br/>\n    +<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +public class ProcessSimulator {<br/>\n    +    private static Logger LOG = LoggerFactory.getLogger(ProcessSimulator.class);<br/>\n    +    private static Object lock = new Object();<br/>\n    +    protected static ConcurrentHashMap<String, Shutdownable> processMap = new ConcurrentHashMap<String, Shutdownable>();<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Register a process' handle<br/>\n    +     * <br/>\n    +     * @param pid<br/>\n    +     * @param shutdownable<br/>\n    +     */<br/>\n    +    public static void registerProcess(String pid, Shutdownable shutdownable) </p>\n{\n    +processMap.put(pid, shutdownable);\n    +    }\n<p>    +<br/>\n    +    /**<br/>\n    +     * Get all process handles<br/>\n    +     * <br/>\n    +     * @return<br/>\n    +     */<br/>\n    +    public static Collection<Shutdownable> getAllProcessHandles() </p>\n{\n    +return processMap.values();\n    +    }\n<p>    +<br/>\n    +    /**<br/>\n    +     * Kill a process<br/>\n    +     * <br/>\n    +     * @param pid<br/>\n    +     */<br/>\n    +    public static void killProcess(String pid) {<br/>\n    +synchronized (lock) {<br/>\n    +    LOG.info(\"Begin killing process \" + pid);<br/>\n    +    Shutdownable shutdownHandle = processMap.get(pid);<br/>\n    +    if (shutdownHandle != null) </p>\n{\n    +shutdownHandle.shutdown();\n    +    }\n<p>    +    processMap.remove(pid);<br/>\n    +    LOG.info(\"Successfully killed process \" + pid);<br/>\n    +}<br/>\n    +    }<br/>\n    +<br/>\n    +    /**<br/>\n    +     * kill all processes<br/>\n    +     */<br/>\n    +    public static void killAllProcesses() {<br/>\n    +LOG.info(\"Begin killing all processes\");<br/>\n    +Set<String> pids = processMap.keySet();<br/>\n    +for (String pid : pids) </p>\n{\n    +    killProcess(pid);\n    +}\n<p>    +LOG.info(\"Successfully killed all processes\");<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    We have extra logging here.  In the original code the only log message was once for each process that was \"Killed\".</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612644377/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/183502735","html_url":"https://github.com/apache/storm/pull/1100#issuecomment-183502735","issue_url":"https://api.github.com/repos/apache/storm/issues/1100","id":183502735,"node_id":"MDEyOklzc3VlQ29tbWVudDE4MzUwMjczNQ==","user":{"login":"revans2","id":3441321,"node_id":"MDQ6VXNlcjM0NDEzMjE=","avatar_url":"https://avatars.githubusercontent.com/u/3441321?v=4","gravatar_id":"","url":"https://api.github.com/users/revans2","html_url":"https://github.com/revans2","followers_url":"https://api.github.com/users/revans2/followers","following_url":"https://api.github.com/users/revans2/following{/other_user}","gists_url":"https://api.github.com/users/revans2/gists{/gist_id}","starred_url":"https://api.github.com/users/revans2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/revans2/subscriptions","organizations_url":"https://api.github.com/users/revans2/orgs","repos_url":"https://api.github.com/users/revans2/repos","events_url":"https://api.github.com/users/revans2/events{/privacy}","received_events_url":"https://api.github.com/users/revans2/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-12T21:55:51Z","updated_at":"2016-02-12T21:55:51Z","author_association":"CONTRIBUTOR","body":"Only two very minor comments, other even without them I am a +1\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/183502735/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612644381","html_url":"https://github.com/apache/storm/issues/5067#issuecomment-2612644381","issue_url":"https://api.github.com/repos/apache/storm/issues/5067","id":2612644381,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NDQzODE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-12T21:55:54Z","updated_at":"2025-01-24T14:20:07Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1100#issuecomment-183502735\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1100#issuecomment-183502735</a></p>\n\n<p>    Only two very minor comments, other even without them I am a +1</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612644381/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/183509402","html_url":"https://github.com/apache/storm/pull/1073#issuecomment-183509402","issue_url":"https://api.github.com/repos/apache/storm/issues/1073","id":183509402,"node_id":"MDEyOklzc3VlQ29tbWVudDE4MzUwOTQwMg==","user":{"login":"revans2","id":3441321,"node_id":"MDQ6VXNlcjM0NDEzMjE=","avatar_url":"https://avatars.githubusercontent.com/u/3441321?v=4","gravatar_id":"","url":"https://api.github.com/users/revans2","html_url":"https://github.com/revans2","followers_url":"https://api.github.com/users/revans2/followers","following_url":"https://api.github.com/users/revans2/following{/other_user}","gists_url":"https://api.github.com/users/revans2/gists{/gist_id}","starred_url":"https://api.github.com/users/revans2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/revans2/subscriptions","organizations_url":"https://api.github.com/users/revans2/orgs","repos_url":"https://api.github.com/users/revans2/repos","events_url":"https://api.github.com/users/revans2/events{/privacy}","received_events_url":"https://api.github.com/users/revans2/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-12T22:19:01Z","updated_at":"2016-02-12T22:19:01Z","author_association":"CONTRIBUTOR","body":"+1 lets squash\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/183509402/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612867896","html_url":"https://github.com/apache/storm/issues/5358#issuecomment-2612867896","issue_url":"https://api.github.com/repos/apache/storm/issues/5358","id":2612867896,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4Njc4OTY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-12T22:19:02Z","updated_at":"2025-01-24T16:00:13Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1073#issuecomment-183509402\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1073#issuecomment-183509402</a></p>\n\n<p>    +1 lets squash</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612867896/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612872007","html_url":"https://github.com/apache/storm/issues/5382#issuecomment-2612872007","issue_url":"https://api.github.com/repos/apache/storm/issues/5382","id":2612872007,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4NzIwMDc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-12T22:20:13Z","updated_at":"2025-01-24T16:02:01Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>GitHub user redsanket opened a pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1106\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1106</a></p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1547\" title=\"Read Aggregations for Pacemaker HA\" class=\"issue-link\" data-issue-key=\"STORM-1547\"><del>STORM-1547</del></a> Pacemaker read aggregations</p>\n\n<p>    1. Please note current request does not involve write with HA<br/>\n    2. Only reads and read aggregations are present in the current PR </p>\n\n<p>You can merge this pull request into a Git repository by running:</p>\n\n<p>    $ git pull <a href=\"https://github.com/redsanket/storm\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/redsanket/storm</a> pacemaker-ha-read</p>\n\n<p>Alternatively you can review and apply these changes as the patch at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1106.patch\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1106.patch</a></p>\n\n<p>To close this pull request, make a commit to your master/trunk branch<br/>\nwith (at least) the following in the commit message:</p>\n\n<p>    This closes #1106</p>\n\n<hr />\n<p>commit e1799aa6b16a967c65f1a8b702c190f2e02a807f<br/>\nAuthor: Sanket <schintap@untilservice-lm><br/>\nDate:   2016-02-12T22:02:01Z</p>\n\n<p>    pacemaker-read aggregations</p>\n\n<p>commit b76c8c5408f5e307bdf6fa3751841ffc3ea2a3b3<br/>\nAuthor: Sanket <schintap@untilservice-lm><br/>\nDate:   2016-02-12T22:11:39Z</p>\n\n<p>    reverting PacemakerClient changes</p>\n\n<p>commit 598fb8673b459b98a54ddd8784cd9859007d222b<br/>\nAuthor: Sanket <schintap@untilservice-lm><br/>\nDate:   2016-02-12T22:17:56Z</p>\n\n<p>    fixing indentation</p>\n\n<p>commit 493ff9a81963decfdad95e7fef2d4a7ca3880918<br/>\nAuthor: Sanket <schintap@untilservice-lm><br/>\nDate:   2016-02-12T22:19:23Z</p>\n\n<p>    remove extra lines</p>\n\n<hr />","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612872007/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/183511029","html_url":"https://github.com/apache/storm/pull/1101#issuecomment-183511029","issue_url":"https://api.github.com/repos/apache/storm/issues/1101","id":183511029,"node_id":"MDEyOklzc3VlQ29tbWVudDE4MzUxMTAyOQ==","user":{"login":"revans2","id":3441321,"node_id":"MDQ6VXNlcjM0NDEzMjE=","avatar_url":"https://avatars.githubusercontent.com/u/3441321?v=4","gravatar_id":"","url":"https://api.github.com/users/revans2","html_url":"https://github.com/revans2","followers_url":"https://api.github.com/users/revans2/followers","following_url":"https://api.github.com/users/revans2/following{/other_user}","gists_url":"https://api.github.com/users/revans2/gists{/gist_id}","starred_url":"https://api.github.com/users/revans2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/revans2/subscriptions","organizations_url":"https://api.github.com/users/revans2/orgs","repos_url":"https://api.github.com/users/revans2/repos","events_url":"https://api.github.com/users/revans2/events{/privacy}","received_events_url":"https://api.github.com/users/revans2/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-12T22:27:17Z","updated_at":"2016-02-12T22:27:17Z","author_association":"CONTRIBUTOR","body":"+1 please have a version for 1.x, and please upmerge for 2.x.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/183511029/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612870676","html_url":"https://github.com/apache/storm/issues/5374#issuecomment-2612870676","issue_url":"https://api.github.com/repos/apache/storm/issues/5374","id":2612870676,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4NzA2NzY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-12T22:27:18Z","updated_at":"2025-01-24T16:01:27Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1101#issuecomment-183511029\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1101#issuecomment-183511029</a></p>\n\n<p>    +1 please have a version for 1.x, and please upmerge for 2.x.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612870676/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/183513236","html_url":"https://github.com/apache/storm/pull/1101#issuecomment-183513236","issue_url":"https://api.github.com/repos/apache/storm/issues/1101","id":183513236,"node_id":"MDEyOklzc3VlQ29tbWVudDE4MzUxMzIzNg==","user":{"login":"roshannaik","id":2366541,"node_id":"MDQ6VXNlcjIzNjY1NDE=","avatar_url":"https://avatars.githubusercontent.com/u/2366541?v=4","gravatar_id":"","url":"https://api.github.com/users/roshannaik","html_url":"https://github.com/roshannaik","followers_url":"https://api.github.com/users/roshannaik/followers","following_url":"https://api.github.com/users/roshannaik/following{/other_user}","gists_url":"https://api.github.com/users/roshannaik/gists{/gist_id}","starred_url":"https://api.github.com/users/roshannaik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/roshannaik/subscriptions","organizations_url":"https://api.github.com/users/roshannaik/orgs","repos_url":"https://api.github.com/users/roshannaik/repos","events_url":"https://api.github.com/users/roshannaik/events{/privacy}","received_events_url":"https://api.github.com/users/roshannaik/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-12T22:36:52Z","updated_at":"2016-02-12T22:37:06Z","author_association":"CONTRIBUTOR","body":"@revans2 as mentioned,  the PR for 1.x version  is https://github.com/apache/storm/pull/1105\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/183513236/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612870681","html_url":"https://github.com/apache/storm/issues/5374#issuecomment-2612870681","issue_url":"https://api.github.com/repos/apache/storm/issues/5374","id":2612870681,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4NzA2ODE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-12T22:36:53Z","updated_at":"2025-01-24T16:01:27Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user roshannaik commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1101#issuecomment-183513236\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1101#issuecomment-183513236</a></p>\n\n<p>    @revans2 as mentioned,  the PR for 1.x version  is <a href=\"https://github.com/apache/storm/pull/1101\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1101</a></p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612870681/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/183515177","html_url":"https://github.com/apache/storm/pull/1105#issuecomment-183515177","issue_url":"https://api.github.com/repos/apache/storm/issues/1105","id":183515177,"node_id":"MDEyOklzc3VlQ29tbWVudDE4MzUxNTE3Nw==","user":{"login":"revans2","id":3441321,"node_id":"MDQ6VXNlcjM0NDEzMjE=","avatar_url":"https://avatars.githubusercontent.com/u/3441321?v=4","gravatar_id":"","url":"https://api.github.com/users/revans2","html_url":"https://github.com/revans2","followers_url":"https://api.github.com/users/revans2/followers","following_url":"https://api.github.com/users/revans2/following{/other_user}","gists_url":"https://api.github.com/users/revans2/gists{/gist_id}","starred_url":"https://api.github.com/users/revans2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/revans2/subscriptions","organizations_url":"https://api.github.com/users/revans2/orgs","repos_url":"https://api.github.com/users/revans2/repos","events_url":"https://api.github.com/users/revans2/events{/privacy}","received_events_url":"https://api.github.com/users/revans2/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-12T22:42:15Z","updated_at":"2016-02-12T22:42:15Z","author_association":"CONTRIBUTOR","body":"+1\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/183515177/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/183519030","html_url":"https://github.com/apache/storm/pull/1101#issuecomment-183519030","issue_url":"https://api.github.com/repos/apache/storm/issues/1101","id":183519030,"node_id":"MDEyOklzc3VlQ29tbWVudDE4MzUxOTAzMA==","user":{"login":"roshannaik","id":2366541,"node_id":"MDQ6VXNlcjIzNjY1NDE=","avatar_url":"https://avatars.githubusercontent.com/u/2366541?v=4","gravatar_id":"","url":"https://api.github.com/users/roshannaik","html_url":"https://github.com/roshannaik","followers_url":"https://api.github.com/users/roshannaik/followers","following_url":"https://api.github.com/users/roshannaik/following{/other_user}","gists_url":"https://api.github.com/users/roshannaik/gists{/gist_id}","starred_url":"https://api.github.com/users/roshannaik/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/roshannaik/subscriptions","organizations_url":"https://api.github.com/users/roshannaik/orgs","repos_url":"https://api.github.com/users/roshannaik/repos","events_url":"https://api.github.com/users/roshannaik/events{/privacy}","received_events_url":"https://api.github.com/users/roshannaik/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-12T23:00:26Z","updated_at":"2016-02-12T23:00:26Z","author_association":"CONTRIBUTOR","body":"@revans2  .. PR updated after rebase to master branch\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/183519030/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612870685","html_url":"https://github.com/apache/storm/issues/5374#issuecomment-2612870685","issue_url":"https://api.github.com/repos/apache/storm/issues/5374","id":2612870685,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4NzA2ODU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-12T23:00:29Z","updated_at":"2025-01-24T16:01:28Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user roshannaik commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1101#issuecomment-183519030\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1101#issuecomment-183519030</a></p>\n\n<p>    @revans2  .. PR updated after rebase to master branch</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612870685/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/183524404","html_url":"https://github.com/apache/storm/pull/1073#issuecomment-183524404","issue_url":"https://api.github.com/repos/apache/storm/issues/1073","id":183524404,"node_id":"MDEyOklzc3VlQ29tbWVudDE4MzUyNDQwNA==","user":{"login":"redsanket","id":8295799,"node_id":"MDQ6VXNlcjgyOTU3OTk=","avatar_url":"https://avatars.githubusercontent.com/u/8295799?v=4","gravatar_id":"","url":"https://api.github.com/users/redsanket","html_url":"https://github.com/redsanket","followers_url":"https://api.github.com/users/redsanket/followers","following_url":"https://api.github.com/users/redsanket/following{/other_user}","gists_url":"https://api.github.com/users/redsanket/gists{/gist_id}","starred_url":"https://api.github.com/users/redsanket/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/redsanket/subscriptions","organizations_url":"https://api.github.com/users/redsanket/orgs","repos_url":"https://api.github.com/users/redsanket/repos","events_url":"https://api.github.com/users/redsanket/events{/privacy}","received_events_url":"https://api.github.com/users/redsanket/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-12T23:19:36Z","updated_at":"2016-02-12T23:19:36Z","author_association":"NONE","body":"@revans squashed\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/183524404/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612867899","html_url":"https://github.com/apache/storm/issues/5358#issuecomment-2612867899","issue_url":"https://api.github.com/repos/apache/storm/issues/5358","id":2612867899,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4Njc4OTk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-12T23:19:42Z","updated_at":"2025-01-24T16:00:13Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user redsanket commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1073#issuecomment-183524404\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1073#issuecomment-183524404</a></p>\n\n<p>    @revans squashed</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612867899/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/183528151","html_url":"https://github.com/apache/storm/pull/1105#issuecomment-183528151","issue_url":"https://api.github.com/repos/apache/storm/issues/1105","id":183528151,"node_id":"MDEyOklzc3VlQ29tbWVudDE4MzUyODE1MQ==","user":{"login":"HeartSaVioR","id":1317309,"node_id":"MDQ6VXNlcjEzMTczMDk=","avatar_url":"https://avatars.githubusercontent.com/u/1317309?v=4","gravatar_id":"","url":"https://api.github.com/users/HeartSaVioR","html_url":"https://github.com/HeartSaVioR","followers_url":"https://api.github.com/users/HeartSaVioR/followers","following_url":"https://api.github.com/users/HeartSaVioR/following{/other_user}","gists_url":"https://api.github.com/users/HeartSaVioR/gists{/gist_id}","starred_url":"https://api.github.com/users/HeartSaVioR/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HeartSaVioR/subscriptions","organizations_url":"https://api.github.com/users/HeartSaVioR/orgs","repos_url":"https://api.github.com/users/HeartSaVioR/repos","events_url":"https://api.github.com/users/HeartSaVioR/events{/privacy}","received_events_url":"https://api.github.com/users/HeartSaVioR/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-12T23:35:24Z","updated_at":"2016-02-12T23:35:24Z","author_association":"CONTRIBUTOR","body":"+1\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/183528151/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/183528417","html_url":"https://github.com/apache/storm/pull/1101#issuecomment-183528417","issue_url":"https://api.github.com/repos/apache/storm/issues/1101","id":183528417,"node_id":"MDEyOklzc3VlQ29tbWVudDE4MzUyODQxNw==","user":{"login":"HeartSaVioR","id":1317309,"node_id":"MDQ6VXNlcjEzMTczMDk=","avatar_url":"https://avatars.githubusercontent.com/u/1317309?v=4","gravatar_id":"","url":"https://api.github.com/users/HeartSaVioR","html_url":"https://github.com/HeartSaVioR","followers_url":"https://api.github.com/users/HeartSaVioR/followers","following_url":"https://api.github.com/users/HeartSaVioR/following{/other_user}","gists_url":"https://api.github.com/users/HeartSaVioR/gists{/gist_id}","starred_url":"https://api.github.com/users/HeartSaVioR/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HeartSaVioR/subscriptions","organizations_url":"https://api.github.com/users/HeartSaVioR/orgs","repos_url":"https://api.github.com/users/HeartSaVioR/repos","events_url":"https://api.github.com/users/HeartSaVioR/events{/privacy}","received_events_url":"https://api.github.com/users/HeartSaVioR/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-12T23:35:54Z","updated_at":"2016-02-12T23:35:54Z","author_association":"CONTRIBUTOR","body":"+1 again\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/183528417/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612870687","html_url":"https://github.com/apache/storm/issues/5374#issuecomment-2612870687","issue_url":"https://api.github.com/repos/apache/storm/issues/5374","id":2612870687,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4NzA2ODc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-12T23:35:55Z","updated_at":"2025-01-24T16:01:28Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user HeartSaVioR commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1101#issuecomment-183528417\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1101#issuecomment-183528417</a></p>\n\n<p>    +1 again</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612870687/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612867904","html_url":"https://github.com/apache/storm/issues/5358#issuecomment-2612867904","issue_url":"https://api.github.com/repos/apache/storm/issues/5358","id":2612867904,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4Njc5MDQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-13T03:37:39Z","updated_at":"2025-01-24T16:00:13Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user abhishekagarwal87 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1073#discussion_r52822345\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1073#discussion_r52822345</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/utils/Utils.java &#8212;<br/>\n    @@ -1446,6 +1448,22 @@ public static RuntimeException wrapInRuntime(Exception e){<br/>\n     }<br/>\n }</p>\n\n<p>    +    public static int getAvailablePort(int prefferedPort) {<br/>\n    +int localPort = -1;<br/>\n    +try(ServerSocket socket = new ServerSocket(prefferedPort)) </p>\n{\n    +    localPort = socket.getLocalPort();\n    +}\n<p> catch(IOException exp) {<br/>\n    +    if (prefferedPort > 0) </p>\n{\n    +return getAvailablePort(0);\n    +    }\n<p>    +}<br/>\n    +return localPort;<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    one minor comment. previous version never returns -1. can we just bubble up the exception in catch block if preferredPort is not greater than zero and not return a negative port? Other than that +1.  </p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612867904/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612653345","html_url":"https://github.com/apache/storm/issues/5109#issuecomment-2612653345","issue_url":"https://api.github.com/repos/apache/storm/issues/5109","id":2612653345,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NTMzNDU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-13T03:43:50Z","updated_at":"2025-01-24T14:24:04Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=abhishek.agarwal\">abhishek.agarwal</a>:</i>\n<p>Hi <a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=revans2\" class=\"user-hover\" rel=\"revans2\">Robert Joseph Evans</a> PR is still open.<br/>\n<a href=\"https://github.com/apache/storm/pull/1095\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1095</a></p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612653345/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/183580817","html_url":"https://github.com/apache/storm/pull/1073#issuecomment-183580817","issue_url":"https://api.github.com/repos/apache/storm/issues/1073","id":183580817,"node_id":"MDEyOklzc3VlQ29tbWVudDE4MzU4MDgxNw==","user":{"login":"knusbaum","id":1819836,"node_id":"MDQ6VXNlcjE4MTk4MzY=","avatar_url":"https://avatars.githubusercontent.com/u/1819836?v=4","gravatar_id":"","url":"https://api.github.com/users/knusbaum","html_url":"https://github.com/knusbaum","followers_url":"https://api.github.com/users/knusbaum/followers","following_url":"https://api.github.com/users/knusbaum/following{/other_user}","gists_url":"https://api.github.com/users/knusbaum/gists{/gist_id}","starred_url":"https://api.github.com/users/knusbaum/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/knusbaum/subscriptions","organizations_url":"https://api.github.com/users/knusbaum/orgs","repos_url":"https://api.github.com/users/knusbaum/repos","events_url":"https://api.github.com/users/knusbaum/events{/privacy}","received_events_url":"https://api.github.com/users/knusbaum/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-13T03:45:44Z","updated_at":"2016-02-13T03:45:44Z","author_association":"CONTRIBUTOR","body":"@abhishekagarwal87 Good catch. I doubt it has any practical effects, but it's good to be consistent.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/183580817/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612867907","html_url":"https://github.com/apache/storm/issues/5358#issuecomment-2612867907","issue_url":"https://api.github.com/repos/apache/storm/issues/5358","id":2612867907,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4Njc5MDc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-13T03:45:45Z","updated_at":"2025-01-24T16:00:13Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user knusbaum commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1073#issuecomment-183580817\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1073#issuecomment-183580817</a></p>\n\n<p>    @abhishekagarwal87 Good catch. I doubt it has any practical effects, but it's good to be consistent.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612867907/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/183581113","html_url":"https://github.com/apache/storm/pull/1073#issuecomment-183581113","issue_url":"https://api.github.com/repos/apache/storm/issues/1073","id":183581113,"node_id":"MDEyOklzc3VlQ29tbWVudDE4MzU4MTExMw==","user":{"login":"knusbaum","id":1819836,"node_id":"MDQ6VXNlcjE4MTk4MzY=","avatar_url":"https://avatars.githubusercontent.com/u/1819836?v=4","gravatar_id":"","url":"https://api.github.com/users/knusbaum","html_url":"https://github.com/knusbaum","followers_url":"https://api.github.com/users/knusbaum/followers","following_url":"https://api.github.com/users/knusbaum/following{/other_user}","gists_url":"https://api.github.com/users/knusbaum/gists{/gist_id}","starred_url":"https://api.github.com/users/knusbaum/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/knusbaum/subscriptions","organizations_url":"https://api.github.com/users/knusbaum/orgs","repos_url":"https://api.github.com/users/knusbaum/repos","events_url":"https://api.github.com/users/knusbaum/events{/privacy}","received_events_url":"https://api.github.com/users/knusbaum/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-13T03:51:24Z","updated_at":"2016-02-13T03:51:24Z","author_association":"CONTRIBUTOR","body":"Although, if we want to be consistent with the original code, removing the `if` and the final `return` statement is the solution.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/183581113/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612867915","html_url":"https://github.com/apache/storm/issues/5358#issuecomment-2612867915","issue_url":"https://api.github.com/repos/apache/storm/issues/5358","id":2612867915,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4Njc5MTU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-13T03:51:25Z","updated_at":"2025-01-24T16:00:14Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user knusbaum commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1073#issuecomment-183581113\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1073#issuecomment-183581113</a></p>\n\n<p>    Although, if we want to be consistent with the original code, removing the `if` and the final `return` statement is the solution.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612867915/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612644385","html_url":"https://github.com/apache/storm/issues/5067#issuecomment-2612644385","issue_url":"https://api.github.com/repos/apache/storm/issues/5067","id":2612644385,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NDQzODU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-13T03:54:27Z","updated_at":"2025-01-24T14:20:07Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user abhishekagarwal87 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1100#discussion_r52822501\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1100#discussion_r52822501</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/ProcessSimulator.java &#8212;<br/>\n    @@ -0,0 +1,89 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm;<br/>\n    +import org.apache.storm.daemon.Shutdownable;<br/>\n    +<br/>\n    +import java.util.Collection;<br/>\n    +import java.util.Set;<br/>\n    +import java.util.concurrent.ConcurrentHashMap;<br/>\n    +<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +public class ProcessSimulator {<br/>\n    +    private static Logger LOG = LoggerFactory.getLogger(ProcessSimulator.class);<br/>\n    +    protected static Object lock = new Object();<br/>\n    +    protected static ConcurrentHashMap<String, Shutdownable> processMap = new ConcurrentHashMap<String, Shutdownable>();<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Register a process' handle<br/>\n    +     * <br/>\n    +     * @param pid<br/>\n    +     * @param shutdownable<br/>\n    +     */<br/>\n    +    public static void registerProcess(String pid, Shutdownable shutdownable) </p>\n{\n    +processMap.put(pid, shutdownable);\n    +    }\n<p>    +<br/>\n    +    /**<br/>\n    +     * Get a process' handle<br/>\n    +     * <br/>\n    +     * @param pid<br/>\n    +     * @return<br/>\n    +     */<br/>\n    +    protected static Shutdownable getProcessHandle(String pid) </p>\n{\n    +return processMap.get(pid);\n    +    }\n<p>    +<br/>\n    +    /**<br/>\n    +     * Get all process handles<br/>\n    +     * <br/>\n    +     * @return<br/>\n    +     */<br/>\n    +    public static Collection<Shutdownable> getAllProcessHandles() </p>\n{\n    +return processMap.values();\n    +    }\n<p>    +<br/>\n    +    /**<br/>\n    +     * Kill a process<br/>\n    +     * <br/>\n    +     * @param pid<br/>\n    +     */<br/>\n    +    public static void killProcess(String pid) {<br/>\n    +synchronized (lock) {<br/>\n    +    LOG.info(\"Begin killing process \" + pid);<br/>\n    +    Shutdownable shutdownHandle = getProcessHandle(pid);<br/>\n    +    if (shutdownHandle != null) </p>\n{\n    +shutdownHandle.shutdown();\n    +    }\n<p>    +    processMap.remove(pid);<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    I meant it something such as follows <br/>\n    ```<br/>\n    Shutdownable shutdownHandle = processMap.remove(pid)<br/>\n    if (shutdownHandle != null) </p>\n{\n    shutdownHandle.shutdown();\n}\n<p>    ```<br/>\n    Sorry for the confusion. </p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612644385/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/183588726","html_url":"https://github.com/apache/storm/pull/1073#issuecomment-183588726","issue_url":"https://api.github.com/repos/apache/storm/issues/1073","id":183588726,"node_id":"MDEyOklzc3VlQ29tbWVudDE4MzU4ODcyNg==","user":{"login":"abhishekagarwal87","id":1477457,"node_id":"MDQ6VXNlcjE0Nzc0NTc=","avatar_url":"https://avatars.githubusercontent.com/u/1477457?v=4","gravatar_id":"","url":"https://api.github.com/users/abhishekagarwal87","html_url":"https://github.com/abhishekagarwal87","followers_url":"https://api.github.com/users/abhishekagarwal87/followers","following_url":"https://api.github.com/users/abhishekagarwal87/following{/other_user}","gists_url":"https://api.github.com/users/abhishekagarwal87/gists{/gist_id}","starred_url":"https://api.github.com/users/abhishekagarwal87/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/abhishekagarwal87/subscriptions","organizations_url":"https://api.github.com/users/abhishekagarwal87/orgs","repos_url":"https://api.github.com/users/abhishekagarwal87/repos","events_url":"https://api.github.com/users/abhishekagarwal87/events{/privacy}","received_events_url":"https://api.github.com/users/abhishekagarwal87/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-13T04:54:12Z","updated_at":"2016-02-13T04:54:12Z","author_association":"CONTRIBUTOR","body":"If there is an exception, tests are going to fail nonetheless. If the exception is bubbled up, test failure will show the right error. Though yes I agree, that in practice binding to port zero is not likely to result in an exception. \n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/183588726/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612867922","html_url":"https://github.com/apache/storm/issues/5358#issuecomment-2612867922","issue_url":"https://api.github.com/repos/apache/storm/issues/5358","id":2612867922,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4Njc5MjI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-13T04:54:13Z","updated_at":"2025-01-24T16:00:14Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user abhishekagarwal87 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1073#issuecomment-183588726\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1073#issuecomment-183588726</a></p>\n\n<p>    If there is an exception, tests are going to fail nonetheless. If the exception is bubbled up, test failure will show the right error. Though yes I agree, that in practice binding to port zero is not likely to result in an exception. </p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612867922/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/183595106","html_url":"https://github.com/apache/storm/pull/1073#issuecomment-183595106","issue_url":"https://api.github.com/repos/apache/storm/issues/1073","id":183595106,"node_id":"MDEyOklzc3VlQ29tbWVudDE4MzU5NTEwNg==","user":{"login":"knusbaum","id":1819836,"node_id":"MDQ6VXNlcjE4MTk4MzY=","avatar_url":"https://avatars.githubusercontent.com/u/1819836?v=4","gravatar_id":"","url":"https://api.github.com/users/knusbaum","html_url":"https://github.com/knusbaum","followers_url":"https://api.github.com/users/knusbaum/followers","following_url":"https://api.github.com/users/knusbaum/following{/other_user}","gists_url":"https://api.github.com/users/knusbaum/gists{/gist_id}","starred_url":"https://api.github.com/users/knusbaum/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/knusbaum/subscriptions","organizations_url":"https://api.github.com/users/knusbaum/orgs","repos_url":"https://api.github.com/users/knusbaum/repos","events_url":"https://api.github.com/users/knusbaum/events{/privacy}","received_events_url":"https://api.github.com/users/knusbaum/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-13T05:37:06Z","updated_at":"2016-02-13T05:37:06Z","author_association":"CONTRIBUTOR","body":"Trying with value 0 on failure was a potentially important behavior of the previous implementation.\n\nExceptions will still bubble up if it fails if my solution is implemented.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/183595106/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612867925","html_url":"https://github.com/apache/storm/issues/5358#issuecomment-2612867925","issue_url":"https://api.github.com/repos/apache/storm/issues/5358","id":2612867925,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4Njc5MjU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-13T05:37:07Z","updated_at":"2025-01-24T16:00:14Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user knusbaum commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1073#issuecomment-183595106\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1073#issuecomment-183595106</a></p>\n\n<p>    Trying with value 0 on failure was a potentially important behavior of the previous implementation.</p>\n\n<p>    Exceptions will still bubble up if it fails if my solution is implemented.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612867925/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612871126","html_url":"https://github.com/apache/storm/issues/5377#issuecomment-2612871126","issue_url":"https://api.github.com/repos/apache/storm/issues/5377","id":2612871126,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4NzExMjY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-13T08:49:22Z","updated_at":"2025-01-24T16:01:40Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=abhishek.agarwal\">abhishek.agarwal</a>:</i>\n<p>was pondering over this and logviewer seems like the right place to do worker profiling/debugging. logviewer can be used as an admin tool to take thread stacks, heap dumps etc. There is no need to configure additional ports on supervisor, worker etc. zookeeper need not be used at all for debugging. Debugging requests can be served inline synchronously rather than through files on system. <br/>\n<a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ptgoetz\" class=\"user-hover\" rel=\"ptgoetz\">P. Taylor Goetz</a> <a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=revans2\" class=\"user-hover\" rel=\"revans2\">Robert Joseph Evans</a> Fix for debugging/profiling is an important part of 1.0 stabilization. If the approach mentioned above sounds good, I can put up a patch for this. </p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612871126/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612867930","html_url":"https://github.com/apache/storm/issues/5358#issuecomment-2612867930","issue_url":"https://api.github.com/repos/apache/storm/issues/5358","id":2612867930,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4Njc5MzA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-13T15:34:21Z","updated_at":"2025-01-24T16:00:14Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user redsanket commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1073#discussion_r52829338\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1073#discussion_r52829338</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/utils/Utils.java &#8212;<br/>\n    @@ -1446,6 +1448,22 @@ public static RuntimeException wrapInRuntime(Exception e){<br/>\n     }<br/>\n }</p>\n\n<p>    +    public static int getAvailablePort(int prefferedPort) {<br/>\n    +int localPort = -1;<br/>\n    +try(ServerSocket socket = new ServerSocket(prefferedPort)) </p>\n{\n    +    localPort = socket.getLocalPort();\n    +}\n<p> catch(IOException exp) {<br/>\n    +    if (prefferedPort > 0) </p>\n{\n    +return getAvailablePort(0);\n    +    }\n<p>    +}<br/>\n    +return localPort;<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    socket.getLocalPort() returns -1 if no port is found as per the internal implementation. No harm in assigning localPort with -1</p>\n\n<p>    /**</p>\n<ul>\n\t<li>Returns the port number on which this socket is listening.</li>\n\t<li><p></li>\n\t<li>If the socket was bound prior to being \n{@link #close closed}\n<p>,</p></li>\n\t<li>then this method will continue to return the port number</li>\n\t<li>after the socket is closed.<br/>\n *</li>\n\t<li>@return  the port number to which this socket is listening or</li>\n\t<li>-1 if the socket is not bound yet.<br/>\n */<br/>\npublic int getLocalPort() \n<div class=\"error\"><span class=\"error\">Unknown macro: {    if (!isBound())return -1;    try {\nreturn getImpl().getLocalPort();\n    } catch (SocketException e) {\n// nothing\n// If we're bound, the impl has been created\n// so we shouldn't get here\n    }    return -1;}</span> </div></li>\n</ul>\n\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612867930/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/183687936","html_url":"https://github.com/apache/storm/pull/1073#issuecomment-183687936","issue_url":"https://api.github.com/repos/apache/storm/issues/1073","id":183687936,"node_id":"MDEyOklzc3VlQ29tbWVudDE4MzY4NzkzNg==","user":{"login":"redsanket","id":8295799,"node_id":"MDQ6VXNlcjgyOTU3OTk=","avatar_url":"https://avatars.githubusercontent.com/u/8295799?v=4","gravatar_id":"","url":"https://api.github.com/users/redsanket","html_url":"https://github.com/redsanket","followers_url":"https://api.github.com/users/redsanket/followers","following_url":"https://api.github.com/users/redsanket/following{/other_user}","gists_url":"https://api.github.com/users/redsanket/gists{/gist_id}","starred_url":"https://api.github.com/users/redsanket/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/redsanket/subscriptions","organizations_url":"https://api.github.com/users/redsanket/orgs","repos_url":"https://api.github.com/users/redsanket/repos","events_url":"https://api.github.com/users/redsanket/events{/privacy}","received_events_url":"https://api.github.com/users/redsanket/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-13T15:40:53Z","updated_at":"2016-02-13T15:44:16Z","author_association":"NONE","body":"@knusbaum @abhishekagarwal87 The original implementation would return -1 in any case if the port is not bound yet. If we not changing the final outcome and unless we are concerned about throwing an exception when the port is not bound, I guess it would be fine. Moreover, removing if condition would keep trying to find the port recursively until it finds it I presume. The original code only tries once as per my understanding.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/183687936/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612867938","html_url":"https://github.com/apache/storm/issues/5358#issuecomment-2612867938","issue_url":"https://api.github.com/repos/apache/storm/issues/5358","id":2612867938,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4Njc5Mzg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-13T15:40:55Z","updated_at":"2025-01-24T16:00:14Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user redsanket commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1073#issuecomment-183687936\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1073#issuecomment-183687936</a></p>\n\n<p>    The original implementation would return -1 in any case if the port is not bound yet. If we not changing the final outcome and unless we are concerned about throwing an exception when the port is not bound, I guess it would be fine. Moreover, removing if condition would keep trying to find the port recursively until it finds it I presume. The original code only tries once as per my understanding.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612867938/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/183755699","html_url":"https://github.com/apache/storm/pull/1102#issuecomment-183755699","issue_url":"https://api.github.com/repos/apache/storm/issues/1102","id":183755699,"node_id":"MDEyOklzc3VlQ29tbWVudDE4Mzc1NTY5OQ==","user":{"login":"revans2","id":3441321,"node_id":"MDQ6VXNlcjM0NDEzMjE=","avatar_url":"https://avatars.githubusercontent.com/u/3441321?v=4","gravatar_id":"","url":"https://api.github.com/users/revans2","html_url":"https://github.com/revans2","followers_url":"https://api.github.com/users/revans2/followers","following_url":"https://api.github.com/users/revans2/following{/other_user}","gists_url":"https://api.github.com/users/revans2/gists{/gist_id}","starred_url":"https://api.github.com/users/revans2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/revans2/subscriptions","organizations_url":"https://api.github.com/users/revans2/orgs","repos_url":"https://api.github.com/users/revans2/repos","events_url":"https://api.github.com/users/revans2/events{/privacy}","received_events_url":"https://api.github.com/users/revans2/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-13T21:15:51Z","updated_at":"2016-02-13T21:15:51Z","author_association":"CONTRIBUTOR","body":"+1\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/183755699/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612871007","html_url":"https://github.com/apache/storm/issues/5376#issuecomment-2612871007","issue_url":"https://api.github.com/repos/apache/storm/issues/5376","id":2612871007,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4NzEwMDc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-13T21:15:53Z","updated_at":"2025-01-24T16:01:37Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1102#issuecomment-183755699\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1102#issuecomment-183755699</a></p>\n\n<p>    +1</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612871007/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/183755721","html_url":"https://github.com/apache/storm/pull/1101#issuecomment-183755721","issue_url":"https://api.github.com/repos/apache/storm/issues/1101","id":183755721,"node_id":"MDEyOklzc3VlQ29tbWVudDE4Mzc1NTcyMQ==","user":{"login":"revans2","id":3441321,"node_id":"MDQ6VXNlcjM0NDEzMjE=","avatar_url":"https://avatars.githubusercontent.com/u/3441321?v=4","gravatar_id":"","url":"https://api.github.com/users/revans2","html_url":"https://github.com/revans2","followers_url":"https://api.github.com/users/revans2/followers","following_url":"https://api.github.com/users/revans2/following{/other_user}","gists_url":"https://api.github.com/users/revans2/gists{/gist_id}","starred_url":"https://api.github.com/users/revans2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/revans2/subscriptions","organizations_url":"https://api.github.com/users/revans2/orgs","repos_url":"https://api.github.com/users/revans2/repos","events_url":"https://api.github.com/users/revans2/events{/privacy}","received_events_url":"https://api.github.com/users/revans2/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-13T21:16:17Z","updated_at":"2016-02-13T21:16:17Z","author_association":"CONTRIBUTOR","body":"+1\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/183755721/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612870694","html_url":"https://github.com/apache/storm/issues/5374#issuecomment-2612870694","issue_url":"https://api.github.com/repos/apache/storm/issues/5374","id":2612870694,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4NzA2OTQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-13T21:16:18Z","updated_at":"2025-01-24T16:01:28Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1101#issuecomment-183755721\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1101#issuecomment-183755721</a></p>\n\n<p>    +1</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612870694/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/183789812","html_url":"https://github.com/apache/storm/pull/1105#issuecomment-183789812","issue_url":"https://api.github.com/repos/apache/storm/issues/1105","id":183789812,"node_id":"MDEyOklzc3VlQ29tbWVudDE4Mzc4OTgxMg==","user":{"login":"vesense","id":6711230,"node_id":"MDQ6VXNlcjY3MTEyMzA=","avatar_url":"https://avatars.githubusercontent.com/u/6711230?v=4","gravatar_id":"","url":"https://api.github.com/users/vesense","html_url":"https://github.com/vesense","followers_url":"https://api.github.com/users/vesense/followers","following_url":"https://api.github.com/users/vesense/following{/other_user}","gists_url":"https://api.github.com/users/vesense/gists{/gist_id}","starred_url":"https://api.github.com/users/vesense/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vesense/subscriptions","organizations_url":"https://api.github.com/users/vesense/orgs","repos_url":"https://api.github.com/users/vesense/repos","events_url":"https://api.github.com/users/vesense/events{/privacy}","received_events_url":"https://api.github.com/users/vesense/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-14T01:29:16Z","updated_at":"2016-02-14T01:29:16Z","author_association":"MEMBER","body":"LGTM\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/183789812/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/183790067","html_url":"https://github.com/apache/storm/pull/1105#issuecomment-183790067","issue_url":"https://api.github.com/repos/apache/storm/issues/1105","id":183790067,"node_id":"MDEyOklzc3VlQ29tbWVudDE4Mzc5MDA2Nw==","user":{"login":"knusbaum","id":1819836,"node_id":"MDQ6VXNlcjE4MTk4MzY=","avatar_url":"https://avatars.githubusercontent.com/u/1819836?v=4","gravatar_id":"","url":"https://api.github.com/users/knusbaum","html_url":"https://github.com/knusbaum","followers_url":"https://api.github.com/users/knusbaum/followers","following_url":"https://api.github.com/users/knusbaum/following{/other_user}","gists_url":"https://api.github.com/users/knusbaum/gists{/gist_id}","starred_url":"https://api.github.com/users/knusbaum/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/knusbaum/subscriptions","organizations_url":"https://api.github.com/users/knusbaum/orgs","repos_url":"https://api.github.com/users/knusbaum/repos","events_url":"https://api.github.com/users/knusbaum/events{/privacy}","received_events_url":"https://api.github.com/users/knusbaum/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-14T01:30:38Z","updated_at":"2016-02-14T01:30:38Z","author_association":"CONTRIBUTOR","body":"+1\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/183790067/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612653706","html_url":"https://github.com/apache/storm/issues/5110#issuecomment-2612653706","issue_url":"https://api.github.com/repos/apache/storm/issues/5110","id":2612653706,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NTM3MDY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-14T02:14:06Z","updated_at":"2025-01-24T14:24:13Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user hustfxj commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1081#discussion_r52836589\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1081#discussion_r52836589</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/cluster/ClusterUtils.java &#8212;<br/>\n    @@ -0,0 +1,249 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.cluster;<br/>\n    +<br/>\n    +import clojure.lang.APersistentMap;<br/>\n    +import org.apache.storm.Config;<br/>\n    +import org.apache.storm.generated.ClusterWorkerHeartbeat;<br/>\n    +import org.apache.storm.generated.ExecutorInfo;<br/>\n    +import org.apache.storm.generated.ExecutorStats;<br/>\n    +import org.apache.storm.generated.ProfileAction;<br/>\n    +import org.apache.storm.utils.Utils;<br/>\n    +import org.apache.zookeeper.ZooDefs;<br/>\n    +import org.apache.zookeeper.data.ACL;<br/>\n    +import org.apache.zookeeper.data.Id;<br/>\n    +import org.apache.zookeeper.server.auth.DigestAuthenticationProvider;<br/>\n    +<br/>\n    +import java.io.UnsupportedEncodingException;<br/>\n    +import java.net.URLEncoder;<br/>\n    +import java.security.NoSuchAlgorithmException;<br/>\n    +import java.util.ArrayList;<br/>\n    +import java.util.HashMap;<br/>\n    +import java.util.List;<br/>\n    +import java.util.Map;<br/>\n    +<br/>\n    +public class ClusterUtils {<br/>\n    +<br/>\n    +    public static final String ZK_SEPERATOR = \"/\";<br/>\n    +<br/>\n    +    public static final String ASSIGNMENTS_ROOT = \"assignments\";<br/>\n    +    public static final String CODE_ROOT = \"code\";<br/>\n    +    public static final String STORMS_ROOT = \"storms\";<br/>\n    +    public static final String SUPERVISORS_ROOT = \"supervisors\";<br/>\n    +    public static final String WORKERBEATS_ROOT = \"workerbeats\";<br/>\n    +    public static final String BACKPRESSURE_ROOT = \"backpressure\";<br/>\n    +    public static final String ERRORS_ROOT = \"errors\";<br/>\n    +    public static final String BLOBSTORE_ROOT = \"blobstore\";<br/>\n    +    public static final String BLOBSTORE_MAX_KEY_SEQUENCE_NUMBER_ROOT = \"blobstoremaxkeysequencenumber\";<br/>\n    +    public static final String NIMBUSES_ROOT = \"nimbuses\";<br/>\n    +    public static final String CREDENTIALS_ROOT = \"credentials\";<br/>\n    +    public static final String LOGCONFIG_ROOT = \"logconfigs\";<br/>\n    +    public static final String PROFILERCONFIG_ROOT = \"profilerconfigs\";<br/>\n    +<br/>\n    +    public static final String ASSIGNMENTS_SUBTREE = ZK_SEPERATOR + ASSIGNMENTS_ROOT;<br/>\n    +    public static final String STORMS_SUBTREE = ZK_SEPERATOR + STORMS_ROOT;<br/>\n    +    public static final String SUPERVISORS_SUBTREE = ZK_SEPERATOR + SUPERVISORS_ROOT;<br/>\n    +    public static final String WORKERBEATS_SUBTREE = ZK_SEPERATOR + WORKERBEATS_ROOT;<br/>\n    +    public static final String BACKPRESSURE_SUBTREE = ZK_SEPERATOR + BACKPRESSURE_ROOT;<br/>\n    +    public static final String ERRORS_SUBTREE = ZK_SEPERATOR + ERRORS_ROOT;<br/>\n    +    public static final String BLOBSTORE_SUBTREE = ZK_SEPERATOR + BLOBSTORE_ROOT;<br/>\n    +    public static final String BLOBSTORE_MAX_KEY_SEQUENCE_NUMBER_SUBTREE = ZK_SEPERATOR + BLOBSTORE_MAX_KEY_SEQUENCE_NUMBER_ROOT;<br/>\n    +    public static final String NIMBUSES_SUBTREE = ZK_SEPERATOR + NIMBUSES_ROOT;<br/>\n    +    public static final String CREDENTIALS_SUBTREE = ZK_SEPERATOR + CREDENTIALS_ROOT;<br/>\n    +    public static final String LOGCONFIG_SUBTREE = ZK_SEPERATOR + LOGCONFIG_ROOT;<br/>\n    +    public static final String PROFILERCONFIG_SUBTREE = ZK_SEPERATOR + PROFILERCONFIG_ROOT;<br/>\n    +<br/>\n    +    // A singleton instance allows us to mock delegated static methods in our<br/>\n    +    // tests by subclassing.<br/>\n    +    private static final ClusterUtils INSTANCE = new ClusterUtils();<br/>\n    +    private static ClusterUtils _instance = INSTANCE;<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Provide an instance of this class for delegates to use. To mock out delegated methods, provide an instance of a subclass that overrides the<br/>\n    +     * implementation of the delegated method.<br/>\n    +     *<br/>\n    +     * @param u a Cluster instance<br/>\n    +     */<br/>\n    +    public static void setInstance(ClusterUtils u) </p>\n{\n    +_instance = u;\n    +    }\n<p>    +<br/>\n    +    /**<br/>\n    +     * Resets the singleton instance to the default. This is helpful to reset the class to its original functionality when mocking is no longer desired.<br/>\n    +     */<br/>\n    +    public static void resetInstance() </p>\n{\n    +_instance = INSTANCE;\n    +    }\n<p>    +<br/>\n    +    public static List<ACL> mkTopoOnlyAcls(Map topoConf) throws NoSuchAlgorithmException {<br/>\n    +List<ACL> aclList = null;<br/>\n    +String payload = (String) topoConf.get(Config.STORM_ZOOKEEPER_TOPOLOGY_AUTH_PAYLOAD);<br/>\n    +if (Utils.isZkAuthenticationConfiguredStormServer(topoConf)) </p>\n{\n    +    aclList = new ArrayList<>();\n    +    ACL acl1 = ZooDefs.Ids.CREATOR_ALL_ACL.get(0);\n    +    aclList.add(acl1);\n    +    ACL acl2 = new ACL(ZooDefs.Perms.READ, new Id(\"digest\", DigestAuthenticationProvider.generateDigest(payload)));\n    +    aclList.add(acl2);\n    +}\n<p>    +return aclList;<br/>\n    +    }<br/>\n    +<br/>\n    +    public static String supervisorPath(String id) </p>\n{\n    +return SUPERVISORS_SUBTREE + ZK_SEPERATOR + id;\n    +    }\n<p>    +<br/>\n    +    public static String assignmentPath(String id) </p>\n{\n    +return ASSIGNMENTS_SUBTREE + ZK_SEPERATOR + id;\n    +    }\n<p>    +<br/>\n    +    public static String blobstorePath(String key) </p>\n{\n    +return BLOBSTORE_SUBTREE + ZK_SEPERATOR + key;\n    +    }\n<p>    +<br/>\n    +    public static String blobstoreMaxKeySequenceNumberPath(String key) </p>\n{\n    +return BLOBSTORE_MAX_KEY_SEQUENCE_NUMBER_SUBTREE + ZK_SEPERATOR + key;\n    +    }\n<p>    +<br/>\n    +    public static String nimbusPath(String id) </p>\n{\n    +return NIMBUSES_SUBTREE + ZK_SEPERATOR + id;\n    +    }\n<p>    +<br/>\n    +    public static String stormPath(String id) </p>\n{\n    +return STORMS_SUBTREE + ZK_SEPERATOR + id;\n    +    }\n<p>    +<br/>\n    +    public static String workerbeatStormRoot(String stormId) </p>\n{\n    +return WORKERBEATS_SUBTREE + ZK_SEPERATOR + stormId;\n    +    }\n<p>    +<br/>\n    +    public static String workerbeatPath(String stormId, String node, Long port) </p>\n{\n    +return workerbeatStormRoot(stormId) + ZK_SEPERATOR + node + \"-\" + port;\n    +    }\n<p>    +<br/>\n    +    public static String backpressureStormRoot(String stormId) </p>\n{\n    +return BACKPRESSURE_SUBTREE + ZK_SEPERATOR + stormId;\n    +    }\n<p>    +<br/>\n    +    public static String backpressurePath(String stormId, String node, Long port) </p>\n{\n    +return backpressureStormRoot(stormId) + ZK_SEPERATOR + node + \"-\" + port;\n    +    }\n<p>    +<br/>\n    +    public static String errorStormRoot(String stormId) </p>\n{\n    +return ERRORS_SUBTREE + ZK_SEPERATOR + stormId;\n    +    }\n<p>    +<br/>\n    +    public static String errorPath(String stormId, String componentId) {<br/>\n    +try </p>\n{\n    +    return errorStormRoot(stormId) + ZK_SEPERATOR + URLEncoder.encode(componentId, \"UTF-8\");\n    +}\n<p> catch (UnsupportedEncodingException e) </p>\n{\n    +    throw Utils.wrapInRuntime(e);\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    public static String lastErrorPath(String stormId, String componentId) </p>\n{\n    +return errorPath(stormId, componentId) + \"-last-error\";\n    +    }\n<p>    +<br/>\n    +    public static String credentialsPath(String stormId) </p>\n{\n    +return CREDENTIALS_SUBTREE + ZK_SEPERATOR + stormId;\n    +    }\n<p>    +<br/>\n    +    public static String logConfigPath(String stormId) </p>\n{\n    +return LOGCONFIG_SUBTREE + ZK_SEPERATOR + stormId;\n    +    }\n<p>    +<br/>\n    +    public static String profilerConfigPath(String stormId) </p>\n{\n    +return PROFILERCONFIG_SUBTREE + ZK_SEPERATOR + stormId;\n    +    }\n<p>    +<br/>\n    +    public static String profilerConfigPath(String stormId, String host, Long port, ProfileAction requestType) </p>\n{\n    +return profilerConfigPath(stormId) + ZK_SEPERATOR + host + \"_\" + port + \"_\" + requestType;\n    +    }\n<p>    +<br/>\n    +    public static <T> T maybeDeserialize(byte[] serialized, Class<T> clazz) {<br/>\n    +if (serialized != null) </p>\n{\n    +    return Utils.deserialize(serialized, clazz);\n    +}\n<p>    +return null;<br/>\n    +    }<br/>\n    +<br/>\n    +    // Ensures that we only return heartbeats for executors assigned to this worker<br/>\n    +    public static Map<ExecutorInfo, ClusterWorkerHeartbeat> convertExecutorBeats(List<ExecutorInfo> executors, ClusterWorkerHeartbeat workerHeartbeat) {<br/>\n    +Map<ExecutorInfo, ClusterWorkerHeartbeat> executorWhb = new HashMap<>();<br/>\n    +Map<ExecutorInfo, ExecutorStats> executorStatsMap = workerHeartbeat.get_executor_stats();<br/>\n    +for (ExecutorInfo executor : executors) {<br/>\n    +    if (executorStatsMap.containsKey(executor)) </p>\n{\n    +executorWhb.put(executor, workerHeartbeat);\n    +    }\n<p>    +}<br/>\n    +return executorWhb;<br/>\n    +    }<br/>\n    +<br/>\n    +    public StormClusterState mkStormClusterStateImpl(Object StateStorage, List<ACL> acls, ClusterStateContext context) throws Exception {<br/>\n    +if (StateStorage instanceof StateStorage) {<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    ok</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612653706/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612653711","html_url":"https://github.com/apache/storm/issues/5110#issuecomment-2612653711","issue_url":"https://api.github.com/repos/apache/storm/issues/5110","id":2612653711,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NTM3MTE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-14T02:32:37Z","updated_at":"2025-01-24T14:24:13Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user hustfxj commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1081#discussion_r52836778\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1081#discussion_r52836778</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/cluster/StormClusterState.java &#8212;<br/>\n    @@ -0,0 +1,129 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.cluster;<br/>\n    +<br/>\n    +import clojure.lang.APersistentMap;<br/>\n    +import clojure.lang.IFn;<br/>\n    +import org.apache.storm.generated.*;<br/>\n    +import org.apache.storm.nimbus.NimbusInfo;<br/>\n    +<br/>\n    +import java.security.NoSuchAlgorithmException;<br/>\n    +import java.util.List;<br/>\n    +import java.util.Map;<br/>\n    +<br/>\n    +public interface StormClusterState {<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    yes， you are right. I will fix it</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612653711/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/183808322","html_url":"https://github.com/apache/storm/pull/1038#issuecomment-183808322","issue_url":"https://api.github.com/repos/apache/storm/issues/1038","id":183808322,"node_id":"MDEyOklzc3VlQ29tbWVudDE4MzgwODMyMg==","user":{"login":"vesense","id":6711230,"node_id":"MDQ6VXNlcjY3MTEyMzA=","avatar_url":"https://avatars.githubusercontent.com/u/6711230?v=4","gravatar_id":"","url":"https://api.github.com/users/vesense","html_url":"https://github.com/vesense","followers_url":"https://api.github.com/users/vesense/followers","following_url":"https://api.github.com/users/vesense/following{/other_user}","gists_url":"https://api.github.com/users/vesense/gists{/gist_id}","starred_url":"https://api.github.com/users/vesense/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vesense/subscriptions","organizations_url":"https://api.github.com/users/vesense/orgs","repos_url":"https://api.github.com/users/vesense/repos","events_url":"https://api.github.com/users/vesense/events{/privacy}","received_events_url":"https://api.github.com/users/vesense/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-14T02:57:54Z","updated_at":"2016-02-14T02:57:54Z","author_association":"MEMBER","body":"@2new Maybe Storm 1.0.0 or 2.0.0 will include this.(Storm PMC members will make the final decision).\n Actually, I hope the 1.0 release can include this.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/183808322/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612703100","html_url":"https://github.com/apache/storm/issues/5318#issuecomment-2612703100","issue_url":"https://api.github.com/repos/apache/storm/issues/5318","id":2612703100,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI3MDMxMDA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-14T02:57:55Z","updated_at":"2025-01-24T14:45:33Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user vesense commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1038#issuecomment-183808322\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1038#issuecomment-183808322</a></p>\n\n<p>    @2new Maybe Storm 1.0.0 or 2.0.0 will include this.(Storm PMC members will make the final decision).<br/>\n     Actually, I hope the 1.0 release can include this.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612703100/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612653717","html_url":"https://github.com/apache/storm/issues/5110#issuecomment-2612653717","issue_url":"https://api.github.com/repos/apache/storm/issues/5110","id":2612653717,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NTM3MTc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-14T03:00:21Z","updated_at":"2025-01-24T14:24:14Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user hustfxj commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1081#discussion_r52837081\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1081#discussion_r52837081</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/cluster/ClusterUtils.java &#8212;<br/>\n    @@ -0,0 +1,249 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.cluster;<br/>\n    +<br/>\n    +import clojure.lang.APersistentMap;<br/>\n    +import org.apache.storm.Config;<br/>\n    +import org.apache.storm.generated.ClusterWorkerHeartbeat;<br/>\n    +import org.apache.storm.generated.ExecutorInfo;<br/>\n    +import org.apache.storm.generated.ExecutorStats;<br/>\n    +import org.apache.storm.generated.ProfileAction;<br/>\n    +import org.apache.storm.utils.Utils;<br/>\n    +import org.apache.zookeeper.ZooDefs;<br/>\n    +import org.apache.zookeeper.data.ACL;<br/>\n    +import org.apache.zookeeper.data.Id;<br/>\n    +import org.apache.zookeeper.server.auth.DigestAuthenticationProvider;<br/>\n    +<br/>\n    +import java.io.UnsupportedEncodingException;<br/>\n    +import java.net.URLEncoder;<br/>\n    +import java.security.NoSuchAlgorithmException;<br/>\n    +import java.util.ArrayList;<br/>\n    +import java.util.HashMap;<br/>\n    +import java.util.List;<br/>\n    +import java.util.Map;<br/>\n    +<br/>\n    +public class ClusterUtils {<br/>\n    +<br/>\n    +    public static final String ZK_SEPERATOR = \"/\";<br/>\n    +<br/>\n    +    public static final String ASSIGNMENTS_ROOT = \"assignments\";<br/>\n    +    public static final String CODE_ROOT = \"code\";<br/>\n    +    public static final String STORMS_ROOT = \"storms\";<br/>\n    +    public static final String SUPERVISORS_ROOT = \"supervisors\";<br/>\n    +    public static final String WORKERBEATS_ROOT = \"workerbeats\";<br/>\n    +    public static final String BACKPRESSURE_ROOT = \"backpressure\";<br/>\n    +    public static final String ERRORS_ROOT = \"errors\";<br/>\n    +    public static final String BLOBSTORE_ROOT = \"blobstore\";<br/>\n    +    public static final String BLOBSTORE_MAX_KEY_SEQUENCE_NUMBER_ROOT = \"blobstoremaxkeysequencenumber\";<br/>\n    +    public static final String NIMBUSES_ROOT = \"nimbuses\";<br/>\n    +    public static final String CREDENTIALS_ROOT = \"credentials\";<br/>\n    +    public static final String LOGCONFIG_ROOT = \"logconfigs\";<br/>\n    +    public static final String PROFILERCONFIG_ROOT = \"profilerconfigs\";<br/>\n    +<br/>\n    +    public static final String ASSIGNMENTS_SUBTREE = ZK_SEPERATOR + ASSIGNMENTS_ROOT;<br/>\n    +    public static final String STORMS_SUBTREE = ZK_SEPERATOR + STORMS_ROOT;<br/>\n    +    public static final String SUPERVISORS_SUBTREE = ZK_SEPERATOR + SUPERVISORS_ROOT;<br/>\n    +    public static final String WORKERBEATS_SUBTREE = ZK_SEPERATOR + WORKERBEATS_ROOT;<br/>\n    +    public static final String BACKPRESSURE_SUBTREE = ZK_SEPERATOR + BACKPRESSURE_ROOT;<br/>\n    +    public static final String ERRORS_SUBTREE = ZK_SEPERATOR + ERRORS_ROOT;<br/>\n    +    public static final String BLOBSTORE_SUBTREE = ZK_SEPERATOR + BLOBSTORE_ROOT;<br/>\n    +    public static final String BLOBSTORE_MAX_KEY_SEQUENCE_NUMBER_SUBTREE = ZK_SEPERATOR + BLOBSTORE_MAX_KEY_SEQUENCE_NUMBER_ROOT;<br/>\n    +    public static final String NIMBUSES_SUBTREE = ZK_SEPERATOR + NIMBUSES_ROOT;<br/>\n    +    public static final String CREDENTIALS_SUBTREE = ZK_SEPERATOR + CREDENTIALS_ROOT;<br/>\n    +    public static final String LOGCONFIG_SUBTREE = ZK_SEPERATOR + LOGCONFIG_ROOT;<br/>\n    +    public static final String PROFILERCONFIG_SUBTREE = ZK_SEPERATOR + PROFILERCONFIG_ROOT;<br/>\n    +<br/>\n    +    // A singleton instance allows us to mock delegated static methods in our<br/>\n    +    // tests by subclassing.<br/>\n    +    private static final ClusterUtils INSTANCE = new ClusterUtils();<br/>\n    +    private static ClusterUtils _instance = INSTANCE;<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Provide an instance of this class for delegates to use. To mock out delegated methods, provide an instance of a subclass that overrides the<br/>\n    +     * implementation of the delegated method.<br/>\n    +     *<br/>\n    +     * @param u a Cluster instance<br/>\n    +     */<br/>\n    +    public static void setInstance(ClusterUtils u) </p>\n{\n    +_instance = u;\n    +    }\n<p>    +<br/>\n    +    /**<br/>\n    +     * Resets the singleton instance to the default. This is helpful to reset the class to its original functionality when mocking is no longer desired.<br/>\n    +     */<br/>\n    +    public static void resetInstance() </p>\n{\n    +_instance = INSTANCE;\n    +    }\n<p>    +<br/>\n    +    public static List<ACL> mkTopoOnlyAcls(Map topoConf) throws NoSuchAlgorithmException {<br/>\n    +List<ACL> aclList = null;<br/>\n    +String payload = (String) topoConf.get(Config.STORM_ZOOKEEPER_TOPOLOGY_AUTH_PAYLOAD);<br/>\n    +if (Utils.isZkAuthenticationConfiguredStormServer(topoConf)) </p>\n{\n    +    aclList = new ArrayList<>();\n    +    ACL acl1 = ZooDefs.Ids.CREATOR_ALL_ACL.get(0);\n    +    aclList.add(acl1);\n    +    ACL acl2 = new ACL(ZooDefs.Perms.READ, new Id(\"digest\", DigestAuthenticationProvider.generateDigest(payload)));\n    +    aclList.add(acl2);\n    +}\n<p>    +return aclList;<br/>\n    +    }<br/>\n    +<br/>\n    +    public static String supervisorPath(String id) </p>\n{\n    +return SUPERVISORS_SUBTREE + ZK_SEPERATOR + id;\n    +    }\n<p>    +<br/>\n    +    public static String assignmentPath(String id) </p>\n{\n    +return ASSIGNMENTS_SUBTREE + ZK_SEPERATOR + id;\n    +    }\n<p>    +<br/>\n    +    public static String blobstorePath(String key) </p>\n{\n    +return BLOBSTORE_SUBTREE + ZK_SEPERATOR + key;\n    +    }\n<p>    +<br/>\n    +    public static String blobstoreMaxKeySequenceNumberPath(String key) </p>\n{\n    +return BLOBSTORE_MAX_KEY_SEQUENCE_NUMBER_SUBTREE + ZK_SEPERATOR + key;\n    +    }\n<p>    +<br/>\n    +    public static String nimbusPath(String id) </p>\n{\n    +return NIMBUSES_SUBTREE + ZK_SEPERATOR + id;\n    +    }\n<p>    +<br/>\n    +    public static String stormPath(String id) </p>\n{\n    +return STORMS_SUBTREE + ZK_SEPERATOR + id;\n    +    }\n<p>    +<br/>\n    +    public static String workerbeatStormRoot(String stormId) </p>\n{\n    +return WORKERBEATS_SUBTREE + ZK_SEPERATOR + stormId;\n    +    }\n<p>    +<br/>\n    +    public static String workerbeatPath(String stormId, String node, Long port) </p>\n{\n    +return workerbeatStormRoot(stormId) + ZK_SEPERATOR + node + \"-\" + port;\n    +    }\n<p>    +<br/>\n    +    public static String backpressureStormRoot(String stormId) </p>\n{\n    +return BACKPRESSURE_SUBTREE + ZK_SEPERATOR + stormId;\n    +    }\n<p>    +<br/>\n    +    public static String backpressurePath(String stormId, String node, Long port) </p>\n{\n    +return backpressureStormRoot(stormId) + ZK_SEPERATOR + node + \"-\" + port;\n    +    }\n<p>    +<br/>\n    +    public static String errorStormRoot(String stormId) </p>\n{\n    +return ERRORS_SUBTREE + ZK_SEPERATOR + stormId;\n    +    }\n<p>    +<br/>\n    +    public static String errorPath(String stormId, String componentId) {<br/>\n    +try </p>\n{\n    +    return errorStormRoot(stormId) + ZK_SEPERATOR + URLEncoder.encode(componentId, \"UTF-8\");\n    +}\n<p> catch (UnsupportedEncodingException e) </p>\n{\n    +    throw Utils.wrapInRuntime(e);\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    public static String lastErrorPath(String stormId, String componentId) </p>\n{\n    +return errorPath(stormId, componentId) + \"-last-error\";\n    +    }\n<p>    +<br/>\n    +    public static String credentialsPath(String stormId) </p>\n{\n    +return CREDENTIALS_SUBTREE + ZK_SEPERATOR + stormId;\n    +    }\n<p>    +<br/>\n    +    public static String logConfigPath(String stormId) </p>\n{\n    +return LOGCONFIG_SUBTREE + ZK_SEPERATOR + stormId;\n    +    }\n<p>    +<br/>\n    +    public static String profilerConfigPath(String stormId) </p>\n{\n    +return PROFILERCONFIG_SUBTREE + ZK_SEPERATOR + stormId;\n    +    }\n<p>    +<br/>\n    +    public static String profilerConfigPath(String stormId, String host, Long port, ProfileAction requestType) </p>\n{\n    +return profilerConfigPath(stormId) + ZK_SEPERATOR + host + \"_\" + port + \"_\" + requestType;\n    +    }\n<p>    +<br/>\n    +    public static <T> T maybeDeserialize(byte[] serialized, Class<T> clazz) {<br/>\n    +if (serialized != null) </p>\n{\n    +    return Utils.deserialize(serialized, clazz);\n    +}\n<p>    +return null;<br/>\n    +    }<br/>\n    +<br/>\n    +    // Ensures that we only return heartbeats for executors assigned to this worker<br/>\n    +    public static Map<ExecutorInfo, ClusterWorkerHeartbeat> convertExecutorBeats(List<ExecutorInfo> executors, ClusterWorkerHeartbeat workerHeartbeat) {<br/>\n    +Map<ExecutorInfo, ClusterWorkerHeartbeat> executorWhb = new HashMap<>();<br/>\n    +Map<ExecutorInfo, ExecutorStats> executorStatsMap = workerHeartbeat.get_executor_stats();<br/>\n    +for (ExecutorInfo executor : executors) {<br/>\n    +    if (executorStatsMap.containsKey(executor)) {<br/>\n    +executorWhb.put(executor, workerHeartbeat);<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    yes, It is intentional to return  ClusterWorkerHeartbeat which can be converted clojure code by clojurify-zk-worker-hb. So it can be called by  clojure.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612653717/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/183813706","html_url":"https://github.com/apache/storm/pull/1104#issuecomment-183813706","issue_url":"https://api.github.com/repos/apache/storm/issues/1104","id":183813706,"node_id":"MDEyOklzc3VlQ29tbWVudDE4MzgxMzcwNg==","user":{"login":"vesense","id":6711230,"node_id":"MDQ6VXNlcjY3MTEyMzA=","avatar_url":"https://avatars.githubusercontent.com/u/6711230?v=4","gravatar_id":"","url":"https://api.github.com/users/vesense","html_url":"https://github.com/vesense","followers_url":"https://api.github.com/users/vesense/followers","following_url":"https://api.github.com/users/vesense/following{/other_user}","gists_url":"https://api.github.com/users/vesense/gists{/gist_id}","starred_url":"https://api.github.com/users/vesense/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vesense/subscriptions","organizations_url":"https://api.github.com/users/vesense/orgs","repos_url":"https://api.github.com/users/vesense/repos","events_url":"https://api.github.com/users/vesense/events{/privacy}","received_events_url":"https://api.github.com/users/vesense/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-14T03:28:04Z","updated_at":"2016-02-14T03:28:04Z","author_association":"MEMBER","body":"LGTM\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/183813706/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612647105","html_url":"https://github.com/apache/storm/issues/5082#issuecomment-2612647105","issue_url":"https://api.github.com/repos/apache/storm/issues/5082","id":2612647105,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NDcxMDU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-14T03:31:05Z","updated_at":"2025-01-24T14:21:22Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user bastiliu commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1069#discussion_r52837364\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1069#discussion_r52837364</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/daemon/AckerBolt.java &#8212;<br/>\n    @@ -0,0 +1,128 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.daemon;<br/>\n    +<br/>\n    +import org.apache.storm.task.IBolt;<br/>\n    +import org.apache.storm.task.OutputCollector;<br/>\n    +import org.apache.storm.task.TopologyContext;<br/>\n    +import org.apache.storm.tuple.Tuple;<br/>\n    +import org.apache.storm.utils.RotatingMap;<br/>\n    +import org.apache.storm.utils.TupleUtils;<br/>\n    +import org.apache.storm.utils.Utils;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +import java.util.List;<br/>\n    +import java.util.Map;<br/>\n    +<br/>\n    +public class AckerBolt implements IBolt {<br/>\n    +    private static final Logger LOG = LoggerFactory.getLogger(AckerBolt.class);<br/>\n    +<br/>\n    +    private static final long serialVersionUID = 4430906880683183091L;<br/>\n    +<br/>\n    +    public static final String ACKER_COMPONENT_ID = \"__acker\";<br/>\n    +    public static final String ACKER_INIT_STREAM_ID = \"__ack_init\";<br/>\n    +    public static final String ACKER_ACK_STREAM_ID = \"__ack_ack\";<br/>\n    +    public static final String ACKER_FAIL_STREAM_ID = \"__ack_fail\";<br/>\n    +<br/>\n    +    public static final int TIMEOUT_BUCKET_NUM = 3;<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    If there is only 2 buckets, the timeout period is at most equal to the \"message timeout secs\". But for the most worse case that acker just receives ack_init tuple from spout and then acker process rotate operation, the tuple will be considered as timeout message immediately. For 3 buckets, the timeout period is at least equal to \"message timeout secs\" while the timeout period is at most 2 times of \"message timeout secs\" for the most worse case.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612647105/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612647119","html_url":"https://github.com/apache/storm/issues/5082#issuecomment-2612647119","issue_url":"https://api.github.com/repos/apache/storm/issues/5082","id":2612647119,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NDcxMTk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-14T03:39:40Z","updated_at":"2025-01-24T14:21:22Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user bastiliu commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1069#discussion_r52837413\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1069#discussion_r52837413</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/daemon/AckerBolt.java &#8212;<br/>\n    @@ -0,0 +1,128 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.daemon;<br/>\n    +<br/>\n    +import org.apache.storm.task.IBolt;<br/>\n    +import org.apache.storm.task.OutputCollector;<br/>\n    +import org.apache.storm.task.TopologyContext;<br/>\n    +import org.apache.storm.tuple.Tuple;<br/>\n    +import org.apache.storm.utils.RotatingMap;<br/>\n    +import org.apache.storm.utils.TupleUtils;<br/>\n    +import org.apache.storm.utils.Utils;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +import java.util.List;<br/>\n    +import java.util.Map;<br/>\n    +<br/>\n    +public class AckerBolt implements IBolt {<br/>\n    +    private static final Logger LOG = LoggerFactory.getLogger(AckerBolt.class);<br/>\n    +<br/>\n    +    private static final long serialVersionUID = 4430906880683183091L;<br/>\n    +<br/>\n    +    public static final String ACKER_COMPONENT_ID = \"__acker\";<br/>\n    +    public static final String ACKER_INIT_STREAM_ID = \"__ack_init\";<br/>\n    +    public static final String ACKER_ACK_STREAM_ID = \"__ack_ack\";<br/>\n    +    public static final String ACKER_FAIL_STREAM_ID = \"__ack_fail\";<br/>\n    +<br/>\n    +    public static final int TIMEOUT_BUCKET_NUM = 3;<br/>\n    +<br/>\n    +    private OutputCollector collector;<br/>\n    +    private RotatingMap<Object, AckObject> pending;<br/>\n    +<br/>\n    +    private class AckObject {<br/>\n    +public long val = 0L;<br/>\n    +public Integer spoutTask = null;<br/>\n    +public boolean failed = false;<br/>\n    +<br/>\n    +// val xor value<br/>\n    +public void updateAck(Object value) {<br/>\n    +    val = Utils.bitXor(val, value);<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    The bitXor operation is probably required when migrating the ack relative operation for spout or bolt in the future.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612647119/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612647128","html_url":"https://github.com/apache/storm/issues/5082#issuecomment-2612647128","issue_url":"https://api.github.com/repos/apache/storm/issues/5082","id":2612647128,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NDcxMjg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-14T04:41:22Z","updated_at":"2025-01-24T14:21:23Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user bastiliu commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1069#discussion_r52837863\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1069#discussion_r52837863</a></p>\n\n<p>    &#8212; Diff: storm-core/src/clj/org/apache/storm/daemon/acker.clj &#8212;<br/>\n    @@ -18,74 +18,24 @@<br/>\n       (:import <span class=\"error\">&#91;org.apache.storm.tuple Tuple Fields&#93;</span>)<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    In clojure testing, creation of acker bolt will be overridden in with-tracked-cluster. After porting the implementation of acker to java, it seems there is no way to do a similar override for java method. So, the mk-acker-bolt of acker.clj was kept as temporary solution to make the clojure testing pass. It can be removed after the porting of common.clj and relative testing modules. Is there a solution or workaround for this issue?</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612647128/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612647131","html_url":"https://github.com/apache/storm/issues/5082#issuecomment-2612647131","issue_url":"https://api.github.com/repos/apache/storm/issues/5082","id":2612647131,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NDcxMzE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-14T05:01:57Z","updated_at":"2025-01-24T14:21:23Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user bastiliu commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1069#discussion_r52837980\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1069#discussion_r52837980</a></p>\n\n<p>    &#8212; Diff: storm-core/src/clj/org/apache/storm/daemon/acker.clj &#8212;<br/>\n    @@ -18,74 +18,24 @@<br/>\n       (:import <span class=\"error\">&#91;org.apache.storm.tuple Tuple Fields&#93;</span>)<br/>\n       (:import <span class=\"error\">&#91;org.apache.storm.utils RotatingMap MutableObject&#93;</span>)<br/>\n       (:import <span class=\"error\">&#91;java.util List Map&#93;</span>)</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>(:import <span class=\"error\">&#91;org.apache.storm Constants&#93;</span>)</li>\n\t<li>(:use <span class=\"error\">&#91;org.apache.storm config util log&#93;</span>)<br/>\n    +  (:import <span class=\"error\">&#91;org.apache.storm Constants&#93;</span><br/>\n    +   (org.apache.storm.daemon AckerBolt))<br/>\n    +  (:use <span class=\"error\">&#91;org.apache.storm config util&#93;</span>)<br/>\n       (:gen-class</li>\n\t<li>:init init</li>\n\t<li>:implements <span class=\"error\">&#91;org.apache.storm.task.IBolt&#93;</span></li>\n\t<li>:constructors \n{[] []}<br/>\n    -   :state state ))<br/>\n    +    :init init<br/>\n    +    :implements <span class=\"error\">&#91;org.apache.storm.task.IBolt&#93;</span><br/>\n    +    :constructors {[] []}\n<p>    +    :state state))</p>\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    reverted</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612647131/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612647138","html_url":"https://github.com/apache/storm/issues/5082#issuecomment-2612647138","issue_url":"https://api.github.com/repos/apache/storm/issues/5082","id":2612647138,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NDcxMzg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-14T06:14:09Z","updated_at":"2025-01-24T14:21:23Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user abhishekagarwal87 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1069#discussion_r52838440\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1069#discussion_r52838440</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/daemon/AckerBolt.java &#8212;<br/>\n    @@ -0,0 +1,128 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.daemon;<br/>\n    +<br/>\n    +import org.apache.storm.task.IBolt;<br/>\n    +import org.apache.storm.task.OutputCollector;<br/>\n    +import org.apache.storm.task.TopologyContext;<br/>\n    +import org.apache.storm.tuple.Tuple;<br/>\n    +import org.apache.storm.utils.RotatingMap;<br/>\n    +import org.apache.storm.utils.TupleUtils;<br/>\n    +import org.apache.storm.utils.Utils;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +import java.util.List;<br/>\n    +import java.util.Map;<br/>\n    +<br/>\n    +public class AckerBolt implements IBolt {<br/>\n    +    private static final Logger LOG = LoggerFactory.getLogger(AckerBolt.class);<br/>\n    +<br/>\n    +    private static final long serialVersionUID = 4430906880683183091L;<br/>\n    +<br/>\n    +    public static final String ACKER_COMPONENT_ID = \"__acker\";<br/>\n    +    public static final String ACKER_INIT_STREAM_ID = \"__ack_init\";<br/>\n    +    public static final String ACKER_ACK_STREAM_ID = \"__ack_ack\";<br/>\n    +    public static final String ACKER_FAIL_STREAM_ID = \"__ack_fail\";<br/>\n    +<br/>\n    +    public static final int TIMEOUT_BUCKET_NUM = 3;<br/>\n    +<br/>\n    +    private OutputCollector collector;<br/>\n    +    private RotatingMap<Object, AckObject> pending;<br/>\n    +<br/>\n    +    private class AckObject {<br/>\n    +public long val = 0L;<br/>\n    +public Integer spoutTask = null;<br/>\n    +public boolean failed = false;<br/>\n    +<br/>\n    +// val xor value<br/>\n    +public void updateAck(Object value) {<br/>\n    +    val = Utils.bitXor(val, value);<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    val is being autoboxed everytime in this call. can the bitXor signature be changed to long bitXor(long a, long b)? </p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612647138/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612653722","html_url":"https://github.com/apache/storm/issues/5110#issuecomment-2612653722","issue_url":"https://api.github.com/repos/apache/storm/issues/5110","id":2612653722,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NTM3MjI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-14T06:43:10Z","updated_at":"2025-01-24T14:24:14Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user abhishekagarwal87 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1081#discussion_r52838625\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1081#discussion_r52838625</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/cluster/ClusterUtils.java &#8212;<br/>\n    @@ -0,0 +1,249 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.cluster;<br/>\n    +<br/>\n    +import clojure.lang.APersistentMap;<br/>\n    +import org.apache.storm.Config;<br/>\n    +import org.apache.storm.generated.ClusterWorkerHeartbeat;<br/>\n    +import org.apache.storm.generated.ExecutorInfo;<br/>\n    +import org.apache.storm.generated.ExecutorStats;<br/>\n    +import org.apache.storm.generated.ProfileAction;<br/>\n    +import org.apache.storm.utils.Utils;<br/>\n    +import org.apache.zookeeper.ZooDefs;<br/>\n    +import org.apache.zookeeper.data.ACL;<br/>\n    +import org.apache.zookeeper.data.Id;<br/>\n    +import org.apache.zookeeper.server.auth.DigestAuthenticationProvider;<br/>\n    +<br/>\n    +import java.io.UnsupportedEncodingException;<br/>\n    +import java.net.URLEncoder;<br/>\n    +import java.security.NoSuchAlgorithmException;<br/>\n    +import java.util.ArrayList;<br/>\n    +import java.util.HashMap;<br/>\n    +import java.util.List;<br/>\n    +import java.util.Map;<br/>\n    +<br/>\n    +public class ClusterUtils {<br/>\n    +<br/>\n    +    public static final String ZK_SEPERATOR = \"/\";<br/>\n    +<br/>\n    +    public static final String ASSIGNMENTS_ROOT = \"assignments\";<br/>\n    +    public static final String CODE_ROOT = \"code\";<br/>\n    +    public static final String STORMS_ROOT = \"storms\";<br/>\n    +    public static final String SUPERVISORS_ROOT = \"supervisors\";<br/>\n    +    public static final String WORKERBEATS_ROOT = \"workerbeats\";<br/>\n    +    public static final String BACKPRESSURE_ROOT = \"backpressure\";<br/>\n    +    public static final String ERRORS_ROOT = \"errors\";<br/>\n    +    public static final String BLOBSTORE_ROOT = \"blobstore\";<br/>\n    +    public static final String BLOBSTORE_MAX_KEY_SEQUENCE_NUMBER_ROOT = \"blobstoremaxkeysequencenumber\";<br/>\n    +    public static final String NIMBUSES_ROOT = \"nimbuses\";<br/>\n    +    public static final String CREDENTIALS_ROOT = \"credentials\";<br/>\n    +    public static final String LOGCONFIG_ROOT = \"logconfigs\";<br/>\n    +    public static final String PROFILERCONFIG_ROOT = \"profilerconfigs\";<br/>\n    +<br/>\n    +    public static final String ASSIGNMENTS_SUBTREE = ZK_SEPERATOR + ASSIGNMENTS_ROOT;<br/>\n    +    public static final String STORMS_SUBTREE = ZK_SEPERATOR + STORMS_ROOT;<br/>\n    +    public static final String SUPERVISORS_SUBTREE = ZK_SEPERATOR + SUPERVISORS_ROOT;<br/>\n    +    public static final String WORKERBEATS_SUBTREE = ZK_SEPERATOR + WORKERBEATS_ROOT;<br/>\n    +    public static final String BACKPRESSURE_SUBTREE = ZK_SEPERATOR + BACKPRESSURE_ROOT;<br/>\n    +    public static final String ERRORS_SUBTREE = ZK_SEPERATOR + ERRORS_ROOT;<br/>\n    +    public static final String BLOBSTORE_SUBTREE = ZK_SEPERATOR + BLOBSTORE_ROOT;<br/>\n    +    public static final String BLOBSTORE_MAX_KEY_SEQUENCE_NUMBER_SUBTREE = ZK_SEPERATOR + BLOBSTORE_MAX_KEY_SEQUENCE_NUMBER_ROOT;<br/>\n    +    public static final String NIMBUSES_SUBTREE = ZK_SEPERATOR + NIMBUSES_ROOT;<br/>\n    +    public static final String CREDENTIALS_SUBTREE = ZK_SEPERATOR + CREDENTIALS_ROOT;<br/>\n    +    public static final String LOGCONFIG_SUBTREE = ZK_SEPERATOR + LOGCONFIG_ROOT;<br/>\n    +    public static final String PROFILERCONFIG_SUBTREE = ZK_SEPERATOR + PROFILERCONFIG_ROOT;<br/>\n    +<br/>\n    +    // A singleton instance allows us to mock delegated static methods in our<br/>\n    +    // tests by subclassing.<br/>\n    +    private static final ClusterUtils INSTANCE = new ClusterUtils();<br/>\n    +    private static ClusterUtils _instance = INSTANCE;<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Provide an instance of this class for delegates to use. To mock out delegated methods, provide an instance of a subclass that overrides the<br/>\n    +     * implementation of the delegated method.<br/>\n    +     *<br/>\n    +     * @param u a Cluster instance<br/>\n    +     */<br/>\n    +    public static void setInstance(ClusterUtils u) </p>\n{\n    +_instance = u;\n    +    }\n<p>    +<br/>\n    +    /**<br/>\n    +     * Resets the singleton instance to the default. This is helpful to reset the class to its original functionality when mocking is no longer desired.<br/>\n    +     */<br/>\n    +    public static void resetInstance() </p>\n{\n    +_instance = INSTANCE;\n    +    }\n<p>    +<br/>\n    +    public static List<ACL> mkTopoOnlyAcls(Map topoConf) throws NoSuchAlgorithmException {<br/>\n    +List<ACL> aclList = null;<br/>\n    +String payload = (String) topoConf.get(Config.STORM_ZOOKEEPER_TOPOLOGY_AUTH_PAYLOAD);<br/>\n    +if (Utils.isZkAuthenticationConfiguredStormServer(topoConf)) </p>\n{\n    +    aclList = new ArrayList<>();\n    +    ACL acl1 = ZooDefs.Ids.CREATOR_ALL_ACL.get(0);\n    +    aclList.add(acl1);\n    +    ACL acl2 = new ACL(ZooDefs.Perms.READ, new Id(\"digest\", DigestAuthenticationProvider.generateDigest(payload)));\n    +    aclList.add(acl2);\n    +}\n<p>    +return aclList;<br/>\n    +    }<br/>\n    +<br/>\n    +    public static String supervisorPath(String id) </p>\n{\n    +return SUPERVISORS_SUBTREE + ZK_SEPERATOR + id;\n    +    }\n<p>    +<br/>\n    +    public static String assignmentPath(String id) </p>\n{\n    +return ASSIGNMENTS_SUBTREE + ZK_SEPERATOR + id;\n    +    }\n<p>    +<br/>\n    +    public static String blobstorePath(String key) </p>\n{\n    +return BLOBSTORE_SUBTREE + ZK_SEPERATOR + key;\n    +    }\n<p>    +<br/>\n    +    public static String blobstoreMaxKeySequenceNumberPath(String key) </p>\n{\n    +return BLOBSTORE_MAX_KEY_SEQUENCE_NUMBER_SUBTREE + ZK_SEPERATOR + key;\n    +    }\n<p>    +<br/>\n    +    public static String nimbusPath(String id) </p>\n{\n    +return NIMBUSES_SUBTREE + ZK_SEPERATOR + id;\n    +    }\n<p>    +<br/>\n    +    public static String stormPath(String id) </p>\n{\n    +return STORMS_SUBTREE + ZK_SEPERATOR + id;\n    +    }\n<p>    +<br/>\n    +    public static String workerbeatStormRoot(String stormId) </p>\n{\n    +return WORKERBEATS_SUBTREE + ZK_SEPERATOR + stormId;\n    +    }\n<p>    +<br/>\n    +    public static String workerbeatPath(String stormId, String node, Long port) </p>\n{\n    +return workerbeatStormRoot(stormId) + ZK_SEPERATOR + node + \"-\" + port;\n    +    }\n<p>    +<br/>\n    +    public static String backpressureStormRoot(String stormId) </p>\n{\n    +return BACKPRESSURE_SUBTREE + ZK_SEPERATOR + stormId;\n    +    }\n<p>    +<br/>\n    +    public static String backpressurePath(String stormId, String node, Long port) </p>\n{\n    +return backpressureStormRoot(stormId) + ZK_SEPERATOR + node + \"-\" + port;\n    +    }\n<p>    +<br/>\n    +    public static String errorStormRoot(String stormId) </p>\n{\n    +return ERRORS_SUBTREE + ZK_SEPERATOR + stormId;\n    +    }\n<p>    +<br/>\n    +    public static String errorPath(String stormId, String componentId) {<br/>\n    +try </p>\n{\n    +    return errorStormRoot(stormId) + ZK_SEPERATOR + URLEncoder.encode(componentId, \"UTF-8\");\n    +}\n<p> catch (UnsupportedEncodingException e) </p>\n{\n    +    throw Utils.wrapInRuntime(e);\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    public static String lastErrorPath(String stormId, String componentId) </p>\n{\n    +return errorPath(stormId, componentId) + \"-last-error\";\n    +    }\n<p>    +<br/>\n    +    public static String credentialsPath(String stormId) </p>\n{\n    +return CREDENTIALS_SUBTREE + ZK_SEPERATOR + stormId;\n    +    }\n<p>    +<br/>\n    +    public static String logConfigPath(String stormId) </p>\n{\n    +return LOGCONFIG_SUBTREE + ZK_SEPERATOR + stormId;\n    +    }\n<p>    +<br/>\n    +    public static String profilerConfigPath(String stormId) </p>\n{\n    +return PROFILERCONFIG_SUBTREE + ZK_SEPERATOR + stormId;\n    +    }\n<p>    +<br/>\n    +    public static String profilerConfigPath(String stormId, String host, Long port, ProfileAction requestType) </p>\n{\n    +return profilerConfigPath(stormId) + ZK_SEPERATOR + host + \"_\" + port + \"_\" + requestType;\n    +    }\n<p>    +<br/>\n    +    public static <T> T maybeDeserialize(byte[] serialized, Class<T> clazz) {<br/>\n    +if (serialized != null) </p>\n{\n    +    return Utils.deserialize(serialized, clazz);\n    +}\n<p>    +return null;<br/>\n    +    }<br/>\n    +<br/>\n    +    // Ensures that we only return heartbeats for executors assigned to this worker<br/>\n    +    public static Map<ExecutorInfo, ClusterWorkerHeartbeat> convertExecutorBeats(List<ExecutorInfo> executors, ClusterWorkerHeartbeat workerHeartbeat) {<br/>\n    +Map<ExecutorInfo, ClusterWorkerHeartbeat> executorWhb = new HashMap<>();<br/>\n    +Map<ExecutorInfo, ExecutorStats> executorStatsMap = workerHeartbeat.get_executor_stats();<br/>\n    +for (ExecutorInfo executor : executors) {<br/>\n    +    if (executorStatsMap.containsKey(executor)) {<br/>\n    +executorWhb.put(executor, workerHeartbeat);<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    result map value here doesn't have executor-stats and executor uptime but the whole clusterWorkerHeartBeat. It's not the object type and structure I refer to but the data in object. </p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612653722/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612653730","html_url":"https://github.com/apache/storm/issues/5110#issuecomment-2612653730","issue_url":"https://api.github.com/repos/apache/storm/issues/5110","id":2612653730,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NTM3MzA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-14T06:52:48Z","updated_at":"2025-01-24T14:24:14Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user abhishekagarwal87 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1081#discussion_r52838686\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1081#discussion_r52838686</a></p>\n\n<p>    &#8212; Diff: storm-core/src/clj/org/apache/storm/daemon/nimbus.clj &#8212;<br/>\n    @@ -587,7 +586,12 @@<br/>\n     (defn update-heartbeats! <span class=\"error\">&#91;nimbus storm-id all-executors existing-assignment&#93;</span><br/>\n       (log-debug \"Updating heartbeats for \" storm-id \" \" (pr-str all-executors))<br/>\n       (let [storm-cluster-state (:storm-cluster-state nimbus)</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>executor-beats (.executor-beats storm-cluster-state storm-id (:executor->node+port existing-assignment))<br/>\n    +executor-beats (let [executor-stats-java-map (.executorBeats storm-cluster-state storm-id (.get_executor_node_port (thriftify-assignment existing-assignment)))<br/>\n    +     executor-stats-clojurify (clojurify-structure executor-stats-java-map)]<br/>\n    + (->> (dofor [<span class=\"error\">&#91;^ExecutorInfo executor-info ^ClusterWorkerHeartbeat cluster-worker-heartbeat&#93;</span> executor-stats-clojurify]<br/>\n    +     \n{[(.get_task_start executor-info) (.get_task_end executor-info)] (clojurify-zk-worker-hb cluster-worker-heartbeat)}\n<p>)</p>\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    with reference #diff-3dc2ee75946dae2afc9de7d4e5487219R191<br/>\n    in earlier version,<br/>\n    the structure returned was {<span class=\"error\">&#91;\"task_start\", \"task_end\"&#93;</span> : {time-secs, uptime, executor-stat}}<br/>\n    now the structure returned seems to be {<span class=\"error\">&#91;\"task_start\", \"task_end\"&#93;</span> : {storm-id, executor-stats, time-secs, uptime-secs}}<br/>\n    It seems for each executor, clojurified cluster worker heart beat is being stored. can you confirm this is not the case?</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612653730/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/183839616","html_url":"https://github.com/apache/storm/pull/1073#issuecomment-183839616","issue_url":"https://api.github.com/repos/apache/storm/issues/1073","id":183839616,"node_id":"MDEyOklzc3VlQ29tbWVudDE4MzgzOTYxNg==","user":{"login":"abhishekagarwal87","id":1477457,"node_id":"MDQ6VXNlcjE0Nzc0NTc=","avatar_url":"https://avatars.githubusercontent.com/u/1477457?v=4","gravatar_id":"","url":"https://api.github.com/users/abhishekagarwal87","html_url":"https://github.com/abhishekagarwal87","followers_url":"https://api.github.com/users/abhishekagarwal87/followers","following_url":"https://api.github.com/users/abhishekagarwal87/following{/other_user}","gists_url":"https://api.github.com/users/abhishekagarwal87/gists{/gist_id}","starred_url":"https://api.github.com/users/abhishekagarwal87/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/abhishekagarwal87/subscriptions","organizations_url":"https://api.github.com/users/abhishekagarwal87/orgs","repos_url":"https://api.github.com/users/abhishekagarwal87/repos","events_url":"https://api.github.com/users/abhishekagarwal87/events{/privacy}","received_events_url":"https://api.github.com/users/abhishekagarwal87/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-14T06:58:54Z","updated_at":"2016-02-14T06:58:54Z","author_association":"CONTRIBUTOR","body":"Yes. Original code tries only once and if condition should definitely be kept. It's fine with me. \n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/183839616/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612867943","html_url":"https://github.com/apache/storm/issues/5358#issuecomment-2612867943","issue_url":"https://api.github.com/repos/apache/storm/issues/5358","id":2612867943,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4Njc5NDM=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-14T06:58:55Z","updated_at":"2025-01-24T16:00:14Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user abhishekagarwal87 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1073#issuecomment-183839616\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1073#issuecomment-183839616</a></p>\n\n<p>    Yes. Original code tries only once and if condition should definitely be kept. It's fine with me. </p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612867943/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/183847386","html_url":"https://github.com/apache/storm/pull/1104#issuecomment-183847386","issue_url":"https://api.github.com/repos/apache/storm/issues/1104","id":183847386,"node_id":"MDEyOklzc3VlQ29tbWVudDE4Mzg0NzM4Ng==","user":{"login":"vesense","id":6711230,"node_id":"MDQ6VXNlcjY3MTEyMzA=","avatar_url":"https://avatars.githubusercontent.com/u/6711230?v=4","gravatar_id":"","url":"https://api.github.com/users/vesense","html_url":"https://github.com/vesense","followers_url":"https://api.github.com/users/vesense/followers","following_url":"https://api.github.com/users/vesense/following{/other_user}","gists_url":"https://api.github.com/users/vesense/gists{/gist_id}","starred_url":"https://api.github.com/users/vesense/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vesense/subscriptions","organizations_url":"https://api.github.com/users/vesense/orgs","repos_url":"https://api.github.com/users/vesense/repos","events_url":"https://api.github.com/users/vesense/events{/privacy}","received_events_url":"https://api.github.com/users/vesense/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-14T08:28:42Z","updated_at":"2016-02-14T08:28:42Z","author_association":"MEMBER","body":"Since the PR include STORM-1260 STORM-1261 STORM-1263 STORM-1264, I suggest changing the title of this PR.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/183847386/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612872250","html_url":"https://github.com/apache/storm/issues/5384#issuecomment-2612872250","issue_url":"https://api.github.com/repos/apache/storm/issues/5384","id":2612872250,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4NzIyNTA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-14T14:22:04Z","updated_at":"2025-01-24T16:02:09Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>GitHub user srdo opened a pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1107\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1107</a></p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1549\" title=\"Add support for extending tuple tree timeout\" class=\"issue-link\" data-issue-key=\"STORM-1549\"><del>STORM-1549</del></a>: Add support for resetting tuple timeout from bolts via the OutputCollector</p>\n\n<p>    See <a href=\"https://issues.apache.org/jira/browse/STORM-1549\" class=\"external-link\" rel=\"nofollow\">https://issues.apache.org/jira/browse/STORM-1549</a>.</p>\n\n<p>    Other than implementing tuple timeout reset, I made a minor change to assert-loop in integration_test.clj so it doesn't hang on failing tests. It should now fail the test after 10 seconds. I hope that's okay.</p>\n\n<p>You can merge this pull request into a Git repository by running:</p>\n\n<p>    $ git pull <a href=\"https://github.com/srdo/storm\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/srdo/storm</a> 1.x-branch</p>\n\n<p>Alternatively you can review and apply these changes as the patch at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1107.patch\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1107.patch</a></p>\n\n<p>To close this pull request, make a commit to your master/trunk branch<br/>\nwith (at least) the following in the commit message:</p>\n\n<p>    This closes #1107</p>\n\n<hr />\n<p>commit 406052cdc7138046a79104fc5c6f72212415f7f2<br/>\nAuthor: Stig Rohde Døssing <generalbas.srd@gmail.com><br/>\nDate:   2016-02-14T01:39:42Z</p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1549\" title=\"Add support for extending tuple tree timeout\" class=\"issue-link\" data-issue-key=\"STORM-1549\"><del>STORM-1549</del></a>: Add support for resetting tuple timeout from bolts via the OutputCollector</p>\n\n<hr />","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612872250/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/183929785","html_url":"https://github.com/apache/storm/pull/1055#issuecomment-183929785","issue_url":"https://api.github.com/repos/apache/storm/issues/1055","id":183929785,"node_id":"MDEyOklzc3VlQ29tbWVudDE4MzkyOTc4NQ==","user":{"login":"redsanket","id":8295799,"node_id":"MDQ6VXNlcjgyOTU3OTk=","avatar_url":"https://avatars.githubusercontent.com/u/8295799?v=4","gravatar_id":"","url":"https://api.github.com/users/redsanket","html_url":"https://github.com/redsanket","followers_url":"https://api.github.com/users/redsanket/followers","following_url":"https://api.github.com/users/redsanket/following{/other_user}","gists_url":"https://api.github.com/users/redsanket/gists{/gist_id}","starred_url":"https://api.github.com/users/redsanket/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/redsanket/subscriptions","organizations_url":"https://api.github.com/users/redsanket/orgs","repos_url":"https://api.github.com/users/redsanket/repos","events_url":"https://api.github.com/users/redsanket/events{/privacy}","received_events_url":"https://api.github.com/users/redsanket/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-14T17:11:33Z","updated_at":"2016-02-14T17:11:33Z","author_association":"NONE","body":"@revans2 addressed comments\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/183929785/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/183998783","html_url":"https://github.com/apache/storm/pull/1053#issuecomment-183998783","issue_url":"https://api.github.com/repos/apache/storm/issues/1053","id":183998783,"node_id":"MDEyOklzc3VlQ29tbWVudDE4Mzk5ODc4Mw==","user":{"login":"jerrypeng","id":3613359,"node_id":"MDQ6VXNlcjM2MTMzNTk=","avatar_url":"https://avatars.githubusercontent.com/u/3613359?v=4","gravatar_id":"","url":"https://api.github.com/users/jerrypeng","html_url":"https://github.com/jerrypeng","followers_url":"https://api.github.com/users/jerrypeng/followers","following_url":"https://api.github.com/users/jerrypeng/following{/other_user}","gists_url":"https://api.github.com/users/jerrypeng/gists{/gist_id}","starred_url":"https://api.github.com/users/jerrypeng/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jerrypeng/subscriptions","organizations_url":"https://api.github.com/users/jerrypeng/orgs","repos_url":"https://api.github.com/users/jerrypeng/repos","events_url":"https://api.github.com/users/jerrypeng/events{/privacy}","received_events_url":"https://api.github.com/users/jerrypeng/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-14T23:03:03Z","updated_at":"2016-02-14T23:03:03Z","author_association":"CONTRIBUTOR","body":"@d2r thanks for your review I have addressed your comment\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/183998783/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/184105900","html_url":"https://github.com/apache/storm/pull/1094#issuecomment-184105900","issue_url":"https://api.github.com/repos/apache/storm/issues/1094","id":184105900,"node_id":"MDEyOklzc3VlQ29tbWVudDE4NDEwNTkwMA==","user":{"login":"arunmahadevan","id":6792890,"node_id":"MDQ6VXNlcjY3OTI4OTA=","avatar_url":"https://avatars.githubusercontent.com/u/6792890?v=4","gravatar_id":"","url":"https://api.github.com/users/arunmahadevan","html_url":"https://github.com/arunmahadevan","followers_url":"https://api.github.com/users/arunmahadevan/followers","following_url":"https://api.github.com/users/arunmahadevan/following{/other_user}","gists_url":"https://api.github.com/users/arunmahadevan/gists{/gist_id}","starred_url":"https://api.github.com/users/arunmahadevan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/arunmahadevan/subscriptions","organizations_url":"https://api.github.com/users/arunmahadevan/orgs","repos_url":"https://api.github.com/users/arunmahadevan/repos","events_url":"https://api.github.com/users/arunmahadevan/events{/privacy}","received_events_url":"https://api.github.com/users/arunmahadevan/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-15T08:07:23Z","updated_at":"2016-02-15T08:07:23Z","author_association":"CONTRIBUTOR","body":"@revans2 updated comment to mention the gotchas in windows and raised [JIRA](https://issues.apache.org/jira/browse/STORM-1550) to fix storm.cmd. \n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/184105900/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612869462","html_url":"https://github.com/apache/storm/issues/5367#issuecomment-2612869462","issue_url":"https://api.github.com/repos/apache/storm/issues/5367","id":2612869462,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4Njk0NjI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-15T08:07:24Z","updated_at":"2025-01-24T16:00:55Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user arunmahadevan commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1094#issuecomment-184105900\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1094#issuecomment-184105900</a></p>\n\n<p>    @revans2 updated comment to mention the gotchas in windows and raised <span class=\"error\">&#91;JIRA&#93;</span>(<a href=\"https://issues.apache.org/jira/browse/STORM-1550\" class=\"external-link\" rel=\"nofollow\">https://issues.apache.org/jira/browse/STORM-1550</a>) to fix storm.cmd. </p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612869462/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612644655","html_url":"https://github.com/apache/storm/issues/5069#issuecomment-2612644655","issue_url":"https://api.github.com/repos/apache/storm/issues/5069","id":2612644655,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NDQ2NTU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-15T09:33:23Z","updated_at":"2025-01-24T14:20:14Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>GitHub user vesense opened a pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1108\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1108</a></p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1232\" title=\"port  backtype.storm.scheduler.DefaultScheduler to java\" class=\"issue-link\" data-issue-key=\"STORM-1232\"><del>STORM-1232</del></a> port backtype.storm.scheduler.DefaultScheduler to java</p>\n\n\n\n<p>You can merge this pull request into a Git repository by running:</p>\n\n<p>    $ git pull <a href=\"https://github.com/vesense/storm\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/vesense/storm</a> port-scheduler-to-java</p>\n\n<p>Alternatively you can review and apply these changes as the patch at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1108.patch\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1108.patch</a></p>\n\n<p>To close this pull request, make a commit to your master/trunk branch<br/>\nwith (at least) the following in the commit message:</p>\n\n<p>    This closes #1108</p>\n\n<hr />\n<p>commit 28fe5d683d3c1529c04b204b43afe63cfd23454f<br/>\nAuthor: vesense <best.wangxin@163.com><br/>\nDate:   2016-02-15T09:00:05Z</p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1232\" title=\"port  backtype.storm.scheduler.DefaultScheduler to java\" class=\"issue-link\" data-issue-key=\"STORM-1232\"><del>STORM-1232</del></a> port backtype.storm.scheduler.DefaultScheduler to java<br/>\n    <a href=\"https://issues.apache.org/jira/browse/STORM-1231\" title=\"port backtype.storm.scheduler.EvenScheduler to java\" class=\"issue-link\" data-issue-key=\"STORM-1231\"><del>STORM-1231</del></a> port backtype.storm.scheduler.EvenScheduler to java</p>\n\n<hr />","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612644655/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612644657","html_url":"https://github.com/apache/storm/issues/5069#issuecomment-2612644657","issue_url":"https://api.github.com/repos/apache/storm/issues/5069","id":2612644657,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NDQ2NTc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-15T10:17:38Z","updated_at":"2025-01-24T14:20:14Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user abhishekagarwal87 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1108#discussion_r52880719\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1108#discussion_r52880719</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/scheduler/DefaultScheduler.java &#8212;<br/>\n    @@ -0,0 +1,110 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.scheduler;<br/>\n    +<br/>\n    +import java.util.HashMap;<br/>\n    +import java.util.HashSet;<br/>\n    +import java.util.List;<br/>\n    +import java.util.Map;<br/>\n    +import java.util.Map.Entry;<br/>\n    +import java.util.Set;<br/>\n    +<br/>\n    +import org.apache.storm.utils.Utils;<br/>\n    +<br/>\n    +public class DefaultScheduler implements IScheduler {<br/>\n    +<br/>\n    +    private static Set<WorkerSlot> badSlots(Map<WorkerSlot, List<ExecutorDetails>> existingSlots, int numExecutors, int numWorkers) {<br/>\n    +if (numWorkers != 0) {<br/>\n    +    Map<Integer, Integer> distribution = Utils.integerDivided(numExecutors, numWorkers);<br/>\n    +    Set<WorkerSlot> _slots = new HashSet<WorkerSlot>();<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    _ prefix in variable name can be removed. </p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612644657/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/184149088","html_url":"https://github.com/apache/storm/pull/1058#issuecomment-184149088","issue_url":"https://api.github.com/repos/apache/storm/issues/1058","id":184149088,"node_id":"MDEyOklzc3VlQ29tbWVudDE4NDE0OTA4OA==","user":{"login":"vesense","id":6711230,"node_id":"MDQ6VXNlcjY3MTEyMzA=","avatar_url":"https://avatars.githubusercontent.com/u/6711230?v=4","gravatar_id":"","url":"https://api.github.com/users/vesense","html_url":"https://github.com/vesense","followers_url":"https://api.github.com/users/vesense/followers","following_url":"https://api.github.com/users/vesense/following{/other_user}","gists_url":"https://api.github.com/users/vesense/gists{/gist_id}","starred_url":"https://api.github.com/users/vesense/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vesense/subscriptions","organizations_url":"https://api.github.com/users/vesense/orgs","repos_url":"https://api.github.com/users/vesense/repos","events_url":"https://api.github.com/users/vesense/events{/privacy}","received_events_url":"https://api.github.com/users/vesense/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-15T10:19:19Z","updated_at":"2016-02-15T10:19:19Z","author_association":"MEMBER","body":"Since resolving conflicts merge cause some issues, I have created a new PR(https://github.com/apache/storm/pull/1108). Please take a look.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/184149088/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612644662","html_url":"https://github.com/apache/storm/issues/5069#issuecomment-2612644662","issue_url":"https://api.github.com/repos/apache/storm/issues/5069","id":2612644662,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NDQ2NjI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-15T10:19:22Z","updated_at":"2025-01-24T14:20:14Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user vesense commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1058#issuecomment-184149088\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1058#issuecomment-184149088</a></p>\n\n<p>    Since resolving conflicts merge cause some issues, I have created a new PR(<a href=\"https://github.com/apache/storm/pull/1108\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1108</a>). Please take a look.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612644662/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612644667","html_url":"https://github.com/apache/storm/issues/5069#issuecomment-2612644667","issue_url":"https://api.github.com/repos/apache/storm/issues/5069","id":2612644667,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NDQ2Njc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-15T10:19:22Z","updated_at":"2025-01-24T14:20:14Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user vesense closed the pull request at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1058\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1058</a></p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612644667/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612644671","html_url":"https://github.com/apache/storm/issues/5069#issuecomment-2612644671","issue_url":"https://api.github.com/repos/apache/storm/issues/5069","id":2612644671,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NDQ2NzE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-15T10:20:58Z","updated_at":"2025-01-24T14:20:15Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user abhishekagarwal87 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1108#discussion_r52881064\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1108#discussion_r52881064</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/scheduler/DefaultScheduler.java &#8212;<br/>\n    @@ -0,0 +1,110 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.scheduler;<br/>\n    +<br/>\n    +import java.util.HashMap;<br/>\n    +import java.util.HashSet;<br/>\n    +import java.util.List;<br/>\n    +import java.util.Map;<br/>\n    +import java.util.Map.Entry;<br/>\n    +import java.util.Set;<br/>\n    +<br/>\n    +import org.apache.storm.utils.Utils;<br/>\n    +<br/>\n    +public class DefaultScheduler implements IScheduler {<br/>\n    +<br/>\n    +    private static Set<WorkerSlot> badSlots(Map<WorkerSlot, List<ExecutorDetails>> existingSlots, int numExecutors, int numWorkers) {<br/>\n    +if (numWorkers != 0) {<br/>\n    +    Map<Integer, Integer> distribution = Utils.integerDivided(numExecutors, numWorkers);<br/>\n    +    Set<WorkerSlot> _slots = new HashSet<WorkerSlot>();<br/>\n    +<br/>\n    +    for (Entry<WorkerSlot, List<ExecutorDetails>> entry : existingSlots.entrySet()) {<br/>\n    +Integer executorCount = distribution.get(entry.getValue().size());<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    the value returned is not actually the executor count but the number of workers with executor count = entry.getValue().size(). I would prefer to refactor it <br/>\n    ```<br/>\n    Integer executorCount = entry.getValue().size();<br/>\n    Integer workerCount = distribution.get(executorCount);<br/>\n    if (workerCount != null && workerCount > 0) </p>\n{\n _slots.add(entry.getKey());\n workerCount--;\n distribution.put(executorCount, workerCount);\n     }\n<p>    ```</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612644671/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/184152015","html_url":"https://github.com/apache/storm/pull/1058#issuecomment-184152015","issue_url":"https://api.github.com/repos/apache/storm/issues/1058","id":184152015,"node_id":"MDEyOklzc3VlQ29tbWVudDE4NDE1MjAxNQ==","user":{"login":"vesense","id":6711230,"node_id":"MDQ6VXNlcjY3MTEyMzA=","avatar_url":"https://avatars.githubusercontent.com/u/6711230?v=4","gravatar_id":"","url":"https://api.github.com/users/vesense","html_url":"https://github.com/vesense","followers_url":"https://api.github.com/users/vesense/followers","following_url":"https://api.github.com/users/vesense/following{/other_user}","gists_url":"https://api.github.com/users/vesense/gists{/gist_id}","starred_url":"https://api.github.com/users/vesense/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vesense/subscriptions","organizations_url":"https://api.github.com/users/vesense/orgs","repos_url":"https://api.github.com/users/vesense/repos","events_url":"https://api.github.com/users/vesense/events{/privacy}","received_events_url":"https://api.github.com/users/vesense/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-15T10:23:59Z","updated_at":"2016-02-15T10:23:59Z","author_association":"MEMBER","body":"The new PR also fixed the dependence issue.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/184152015/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612644676","html_url":"https://github.com/apache/storm/issues/5069#issuecomment-2612644676","issue_url":"https://api.github.com/repos/apache/storm/issues/5069","id":2612644676,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NDQ2NzY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-15T10:24:00Z","updated_at":"2025-01-24T14:20:15Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user vesense commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1058#issuecomment-184152015\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1058#issuecomment-184152015</a></p>\n\n<p>    The new PR also fixed the dependence issue.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612644676/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612644684","html_url":"https://github.com/apache/storm/issues/5069#issuecomment-2612644684","issue_url":"https://api.github.com/repos/apache/storm/issues/5069","id":2612644684,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NDQ2ODQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-15T10:25:01Z","updated_at":"2025-01-24T14:20:15Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user abhishekagarwal87 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1108#discussion_r52881453\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1108#discussion_r52881453</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/scheduler/DefaultScheduler.java &#8212;<br/>\n    @@ -0,0 +1,110 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.scheduler;<br/>\n    +<br/>\n    +import java.util.HashMap;<br/>\n    +import java.util.HashSet;<br/>\n    +import java.util.List;<br/>\n    +import java.util.Map;<br/>\n    +import java.util.Map.Entry;<br/>\n    +import java.util.Set;<br/>\n    +<br/>\n    +import org.apache.storm.utils.Utils;<br/>\n    +<br/>\n    +public class DefaultScheduler implements IScheduler {<br/>\n    +<br/>\n    +    private static Set<WorkerSlot> badSlots(Map<WorkerSlot, List<ExecutorDetails>> existingSlots, int numExecutors, int numWorkers) {<br/>\n    +if (numWorkers != 0) {<br/>\n    +    Map<Integer, Integer> distribution = Utils.integerDivided(numExecutors, numWorkers);<br/>\n    +    Set<WorkerSlot> _slots = new HashSet<WorkerSlot>();<br/>\n    +<br/>\n    +    for (Entry<WorkerSlot, List<ExecutorDetails>> entry : existingSlots.entrySet()) {<br/>\n    +Integer executorCount = distribution.get(entry.getValue().size());<br/>\n    +if (executorCount != null && executorCount > 0) </p>\n{\n    +    _slots.add(entry.getKey());\n    +    executorCount--;\n    +    distribution.put(entry.getValue().size(), executorCount);\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    for (WorkerSlot slot : _slots) {<br/>\n    +existingSlots.remove(slot);<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    very minor. It can be replaced with - existingSlots.entrySet().removeAll(_slots). </p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612644684/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612644689","html_url":"https://github.com/apache/storm/issues/5069#issuecomment-2612644689","issue_url":"https://api.github.com/repos/apache/storm/issues/5069","id":2612644689,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NDQ2ODk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-15T10:41:38Z","updated_at":"2025-01-24T14:20:15Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user abhishekagarwal87 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1108#discussion_r52883154\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1108#discussion_r52883154</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/utils/Utils.java &#8212;<br/>\n    @@ -2248,4 +2248,23 @@ public Object call() {<br/>\n     }<br/>\n     return process;<br/>\n }<br/>\n    +<br/>\n    +    public static <T> List<T> interleaveAll(List<List<T>> nodeList) {<br/>\n    +if (nodeList != null && nodeList.size() > 0) {<br/>\n    +    List<T> first = new ArrayList<T>();<br/>\n    +    List<List<T>> rest = new ArrayList<List<T>>();<br/>\n    +    for (List<T> node : nodeList) {<br/>\n    +if (null != node && node.size() > 0) {<br/>\n    +  first.add(node.get(0));<br/>\n    +  rest.add(node.subList(1, node.size()));<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    what if the node size is just 1. </p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612644689/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612644700","html_url":"https://github.com/apache/storm/issues/5069#issuecomment-2612644700","issue_url":"https://api.github.com/repos/apache/storm/issues/5069","id":2612644700,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NDQ3MDA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-15T10:53:23Z","updated_at":"2025-01-24T14:20:15Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user abhishekagarwal87 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1108#discussion_r52884345\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1108#discussion_r52884345</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/utils/Utils.java &#8212;<br/>\n    @@ -2248,4 +2248,23 @@ public Object call() {<br/>\n     }<br/>\n     return process;<br/>\n }<br/>\n    +<br/>\n    +    public static <T> List<T> interleaveAll(List<List<T>> nodeList) {<br/>\n    +if (nodeList != null && nodeList.size() > 0) {<br/>\n    +    List<T> first = new ArrayList<T>();<br/>\n    +    List<List<T>> rest = new ArrayList<List<T>>();<br/>\n    +    for (List<T> node : nodeList) {<br/>\n    +if (null != node && node.size() > 0) {<br/>\n    +  first.add(node.get(0));<br/>\n    +  rest.add(node.subList(1, node.size()));<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    checked that an empty list is returned. So it should be okay as in next recursion step, we ignore empty list. </p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612644700/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612644707","html_url":"https://github.com/apache/storm/issues/5069#issuecomment-2612644707","issue_url":"https://api.github.com/repos/apache/storm/issues/5069","id":2612644707,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NDQ3MDc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-15T10:56:40Z","updated_at":"2025-01-24T14:20:15Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user abhishekagarwal87 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1108#discussion_r52884726\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1108#discussion_r52884726</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/scheduler/EvenScheduler.java &#8212;<br/>\n    @@ -0,0 +1,177 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.scheduler;<br/>\n    +<br/>\n    +import java.util.ArrayList;<br/>\n    +import java.util.Collections;<br/>\n    +import java.util.Comparator;<br/>\n    +import java.util.HashMap;<br/>\n    +import java.util.HashSet;<br/>\n    +import java.util.Iterator;<br/>\n    +import java.util.List;<br/>\n    +import java.util.Map;<br/>\n    +import java.util.Map.Entry;<br/>\n    +import java.util.Set;<br/>\n    +import java.util.TreeMap;<br/>\n    +<br/>\n    +import org.apache.storm.utils.Utils;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +import com.google.common.collect.Sets;<br/>\n    +<br/>\n    +public class EvenScheduler implements IScheduler {<br/>\n    +    private static final Logger LOG = LoggerFactory.getLogger(EvenScheduler.class);<br/>\n    +<br/>\n    +    public static List<WorkerSlot> sortSlots(List<WorkerSlot> availableSlots, Cluster cluster) {<br/>\n    +if (availableSlots != null && availableSlots.size() > 0) {<br/>\n    +    // group by node<br/>\n    +    Map<String, List<WorkerSlot>> slotGroups = new TreeMap<String, List<WorkerSlot>>();<br/>\n    +    for (WorkerSlot slot : availableSlots) {<br/>\n    +String host = cluster.getHost(slot.getNodeId());<br/>\n    +List<WorkerSlot> slots = slotGroups.get(host);<br/>\n    +if (slots == null) </p>\n{\n    +    slots = new ArrayList<WorkerSlot>();\n    +    slotGroups.put(host, slots);\n    +}\n<p>    +slots.add(slot);<br/>\n    +    }<br/>\n    +<br/>\n    +    // sort by port<br/>\n    +    for (List<WorkerSlot> slots : slotGroups.values()) {<br/>\n    +Collections.sort(slots, new Comparator<WorkerSlot>() {<br/>\n    +    @Override<br/>\n    +    public int compare(WorkerSlot o1, WorkerSlot o2) </p>\n{\n    +return o1.getPort() - o2.getPort();\n    +    }\n<p>    +});<br/>\n    +    }<br/>\n    +<br/>\n    +    // sort by count<br/>\n    +    List<List<WorkerSlot>> list = new ArrayList<List<WorkerSlot>>(slotGroups.values());<br/>\n    +    Collections.sort(list, new Comparator<List<WorkerSlot>>() {<br/>\n    +@Override<br/>\n    +public int compare(List<WorkerSlot> o1, List<WorkerSlot> o2) </p>\n{\n    +    return o2.size() - o1.size();\n    +}\n<p>    +    });<br/>\n    +<br/>\n    +    return Utils.interleaveAll(list);<br/>\n    +}<br/>\n    +<br/>\n    +return null;<br/>\n    +    }<br/>\n    +<br/>\n    +    public static Map<WorkerSlot, List<ExecutorDetails>> getAliveAssignedWorkerSlotExecutors(Cluster cluster, String topologyId) {<br/>\n    +SchedulerAssignment existingAssignment = cluster.getAssignmentById(topologyId);<br/>\n    +Map<ExecutorDetails, WorkerSlot> executorToSlot = null;<br/>\n    +if (existingAssignment != null) </p>\n{\n    +    executorToSlot = existingAssignment.getExecutorToSlot();\n    +}\n<p>    +<br/>\n    +Map<WorkerSlot, List<ExecutorDetails>> result = new HashMap<WorkerSlot, List<ExecutorDetails>>();<br/>\n    +if (executorToSlot != null) {<br/>\n    +    for (Entry<ExecutorDetails, WorkerSlot> entry : executorToSlot.entrySet()) {<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    You can use Utils.reverseMap<br/>\n    <a href=\"https://github.com/apache/storm/blob/1a445164a96afdc21eac29856f2da569f331e855/storm-core/src/jvm/org/apache/storm/utils/Utils.java#L1715\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/blob/1a445164a96afdc21eac29856f2da569f331e855/storm-core/src/jvm/org/apache/storm/utils/Utils.java#L1715</a></p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612644707/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612644713","html_url":"https://github.com/apache/storm/issues/5069#issuecomment-2612644713","issue_url":"https://api.github.com/repos/apache/storm/issues/5069","id":2612644713,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NDQ3MTM=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-15T12:44:56Z","updated_at":"2025-01-24T14:20:15Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user abhishekagarwal87 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1108#discussion_r52894445\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1108#discussion_r52894445</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/scheduler/EvenScheduler.java &#8212;<br/>\n    @@ -0,0 +1,177 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.scheduler;<br/>\n    +<br/>\n    +import java.util.ArrayList;<br/>\n    +import java.util.Collections;<br/>\n    +import java.util.Comparator;<br/>\n    +import java.util.HashMap;<br/>\n    +import java.util.HashSet;<br/>\n    +import java.util.Iterator;<br/>\n    +import java.util.List;<br/>\n    +import java.util.Map;<br/>\n    +import java.util.Map.Entry;<br/>\n    +import java.util.Set;<br/>\n    +import java.util.TreeMap;<br/>\n    +<br/>\n    +import org.apache.storm.utils.Utils;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +import com.google.common.collect.Sets;<br/>\n    +<br/>\n    +public class EvenScheduler implements IScheduler {<br/>\n    +    private static final Logger LOG = LoggerFactory.getLogger(EvenScheduler.class);<br/>\n    +<br/>\n    +    public static List<WorkerSlot> sortSlots(List<WorkerSlot> availableSlots, Cluster cluster) {<br/>\n    +if (availableSlots != null && availableSlots.size() > 0) {<br/>\n    +    // group by node<br/>\n    +    Map<String, List<WorkerSlot>> slotGroups = new TreeMap<String, List<WorkerSlot>>();<br/>\n    +    for (WorkerSlot slot : availableSlots) {<br/>\n    +String host = cluster.getHost(slot.getNodeId());<br/>\n    +List<WorkerSlot> slots = slotGroups.get(host);<br/>\n    +if (slots == null) </p>\n{\n    +    slots = new ArrayList<WorkerSlot>();\n    +    slotGroups.put(host, slots);\n    +}\n<p>    +slots.add(slot);<br/>\n    +    }<br/>\n    +<br/>\n    +    // sort by port<br/>\n    +    for (List<WorkerSlot> slots : slotGroups.values()) {<br/>\n    +Collections.sort(slots, new Comparator<WorkerSlot>() {<br/>\n    +    @Override<br/>\n    +    public int compare(WorkerSlot o1, WorkerSlot o2) </p>\n{\n    +return o1.getPort() - o2.getPort();\n    +    }\n<p>    +});<br/>\n    +    }<br/>\n    +<br/>\n    +    // sort by count<br/>\n    +    List<List<WorkerSlot>> list = new ArrayList<List<WorkerSlot>>(slotGroups.values());<br/>\n    +    Collections.sort(list, new Comparator<List<WorkerSlot>>() {<br/>\n    +@Override<br/>\n    +public int compare(List<WorkerSlot> o1, List<WorkerSlot> o2) </p>\n{\n    +    return o2.size() - o1.size();\n    +}\n<p>    +    });<br/>\n    +<br/>\n    +    return Utils.interleaveAll(list);<br/>\n    +}<br/>\n    +<br/>\n    +return null;<br/>\n    +    }<br/>\n    +<br/>\n    +    public static Map<WorkerSlot, List<ExecutorDetails>> getAliveAssignedWorkerSlotExecutors(Cluster cluster, String topologyId) {<br/>\n    +SchedulerAssignment existingAssignment = cluster.getAssignmentById(topologyId);<br/>\n    +Map<ExecutorDetails, WorkerSlot> executorToSlot = null;<br/>\n    +if (existingAssignment != null) </p>\n{\n    +    executorToSlot = existingAssignment.getExecutorToSlot();\n    +}\n<p>    +<br/>\n    +Map<WorkerSlot, List<ExecutorDetails>> result = new HashMap<WorkerSlot, List<ExecutorDetails>>();<br/>\n    +if (executorToSlot != null) {<br/>\n    +    for (Entry<ExecutorDetails, WorkerSlot> entry : executorToSlot.entrySet()) {<br/>\n    +List<ExecutorDetails> list = result.get(entry.getValue());<br/>\n    +if (list == null) </p>\n{\n    +    list = new ArrayList<ExecutorDetails>();\n    +    result.put(entry.getValue(), list);\n    +}\n<p>    +list.add(entry.getKey());<br/>\n    +    }<br/>\n    +}<br/>\n    +return result;<br/>\n    +    }<br/>\n    +<br/>\n    +    private static Map<ExecutorDetails, WorkerSlot> scheduleTopology(TopologyDetails topology, Cluster cluster) {<br/>\n    +List<WorkerSlot> availableSlots = cluster.getAvailableSlots();<br/>\n    +Set<ExecutorDetails> allExecutors = (Set<ExecutorDetails>) topology.getExecutors();<br/>\n    +Map<WorkerSlot, List<ExecutorDetails>> aliveAssigned = getAliveAssignedWorkerSlotExecutors(cluster, topology.getId());<br/>\n    +int totalSlotsToUse = Math.min(topology.getNumWorkers(), availableSlots.size() + aliveAssigned.size());<br/>\n    +<br/>\n    +List<WorkerSlot> sortedList = sortSlots(availableSlots, cluster);<br/>\n    +if (sortedList == null) {<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    also add another condition as OR<br/>\n    `sortedList.size() < (totalSlotsToUse - aliveAssigned.size())`</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612644713/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612644719","html_url":"https://github.com/apache/storm/issues/5069#issuecomment-2612644719","issue_url":"https://api.github.com/repos/apache/storm/issues/5069","id":2612644719,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NDQ3MTk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-15T12:50:40Z","updated_at":"2025-01-24T14:20:15Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user abhishekagarwal87 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1108#discussion_r52894913\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1108#discussion_r52894913</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/scheduler/EvenScheduler.java &#8212;<br/>\n    @@ -0,0 +1,177 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.scheduler;<br/>\n    +<br/>\n    +import java.util.ArrayList;<br/>\n    +import java.util.Collections;<br/>\n    +import java.util.Comparator;<br/>\n    +import java.util.HashMap;<br/>\n    +import java.util.HashSet;<br/>\n    +import java.util.Iterator;<br/>\n    +import java.util.List;<br/>\n    +import java.util.Map;<br/>\n    +import java.util.Map.Entry;<br/>\n    +import java.util.Set;<br/>\n    +import java.util.TreeMap;<br/>\n    +<br/>\n    +import org.apache.storm.utils.Utils;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +import com.google.common.collect.Sets;<br/>\n    +<br/>\n    +public class EvenScheduler implements IScheduler {<br/>\n    +    private static final Logger LOG = LoggerFactory.getLogger(EvenScheduler.class);<br/>\n    +<br/>\n    +    public static List<WorkerSlot> sortSlots(List<WorkerSlot> availableSlots, Cluster cluster) {<br/>\n    +if (availableSlots != null && availableSlots.size() > 0) {<br/>\n    +    // group by node<br/>\n    +    Map<String, List<WorkerSlot>> slotGroups = new TreeMap<String, List<WorkerSlot>>();<br/>\n    +    for (WorkerSlot slot : availableSlots) {<br/>\n    +String host = cluster.getHost(slot.getNodeId());<br/>\n    +List<WorkerSlot> slots = slotGroups.get(host);<br/>\n    +if (slots == null) </p>\n{\n    +    slots = new ArrayList<WorkerSlot>();\n    +    slotGroups.put(host, slots);\n    +}\n<p>    +slots.add(slot);<br/>\n    +    }<br/>\n    +<br/>\n    +    // sort by port<br/>\n    +    for (List<WorkerSlot> slots : slotGroups.values()) {<br/>\n    +Collections.sort(slots, new Comparator<WorkerSlot>() {<br/>\n    +    @Override<br/>\n    +    public int compare(WorkerSlot o1, WorkerSlot o2) </p>\n{\n    +return o1.getPort() - o2.getPort();\n    +    }\n<p>    +});<br/>\n    +    }<br/>\n    +<br/>\n    +    // sort by count<br/>\n    +    List<List<WorkerSlot>> list = new ArrayList<List<WorkerSlot>>(slotGroups.values());<br/>\n    +    Collections.sort(list, new Comparator<List<WorkerSlot>>() {<br/>\n    +@Override<br/>\n    +public int compare(List<WorkerSlot> o1, List<WorkerSlot> o2) </p>\n{\n    +    return o2.size() - o1.size();\n    +}\n<p>    +    });<br/>\n    +<br/>\n    +    return Utils.interleaveAll(list);<br/>\n    +}<br/>\n    +<br/>\n    +return null;<br/>\n    +    }<br/>\n    +<br/>\n    +    public static Map<WorkerSlot, List<ExecutorDetails>> getAliveAssignedWorkerSlotExecutors(Cluster cluster, String topologyId) {<br/>\n    +SchedulerAssignment existingAssignment = cluster.getAssignmentById(topologyId);<br/>\n    +Map<ExecutorDetails, WorkerSlot> executorToSlot = null;<br/>\n    +if (existingAssignment != null) </p>\n{\n    +    executorToSlot = existingAssignment.getExecutorToSlot();\n    +}\n<p>    +<br/>\n    +Map<WorkerSlot, List<ExecutorDetails>> result = new HashMap<WorkerSlot, List<ExecutorDetails>>();<br/>\n    +if (executorToSlot != null) {<br/>\n    +    for (Entry<ExecutorDetails, WorkerSlot> entry : executorToSlot.entrySet()) {<br/>\n    +List<ExecutorDetails> list = result.get(entry.getValue());<br/>\n    +if (list == null) </p>\n{\n    +    list = new ArrayList<ExecutorDetails>();\n    +    result.put(entry.getValue(), list);\n    +}\n<p>    +list.add(entry.getKey());<br/>\n    +    }<br/>\n    +}<br/>\n    +return result;<br/>\n    +    }<br/>\n    +<br/>\n    +    private static Map<ExecutorDetails, WorkerSlot> scheduleTopology(TopologyDetails topology, Cluster cluster) {<br/>\n    +List<WorkerSlot> availableSlots = cluster.getAvailableSlots();<br/>\n    +Set<ExecutorDetails> allExecutors = (Set<ExecutorDetails>) topology.getExecutors();<br/>\n    +Map<WorkerSlot, List<ExecutorDetails>> aliveAssigned = getAliveAssignedWorkerSlotExecutors(cluster, topology.getId());<br/>\n    +int totalSlotsToUse = Math.min(topology.getNumWorkers(), availableSlots.size() + aliveAssigned.size());<br/>\n    +<br/>\n    +List<WorkerSlot> sortedList = sortSlots(availableSlots, cluster);<br/>\n    +if (sortedList == null) {<br/>\n    +    LOG.error(\"Available slots are not enough for topology: {}\", topology.getName());<br/>\n    +    return new HashMap<ExecutorDetails, WorkerSlot>();<br/>\n    +}<br/>\n    +<br/>\n    +List<WorkerSlot> reassignSlots = sortedList.subList(0, totalSlotsToUse - aliveAssigned.size());<br/>\n    +Set<ExecutorDetails> aliveExecutors = new HashSet<ExecutorDetails>();<br/>\n    +for (List<ExecutorDetails> list : aliveAssigned.values()) </p>\n{\n    +    aliveExecutors.addAll(list);\n    +}\n<p>    +Set<ExecutorDetails> reassignExecutors = Sets.difference(allExecutors, aliveExecutors);<br/>\n    +<br/>\n    +Map<ExecutorDetails, WorkerSlot> reassignment = new HashMap<ExecutorDetails, WorkerSlot>();<br/>\n    +if (reassignSlots.size() == 0) </p>\n{\n    +    return reassignment;\n    +}\n<p>    +<br/>\n    +List<ExecutorDetails> _executors = new ArrayList<ExecutorDetails>(reassignExecutors);<br/>\n    +Collections.sort(_executors, new Comparator<ExecutorDetails>() {<br/>\n    +    @Override<br/>\n    +    public int compare(ExecutorDetails o1, ExecutorDetails o2) </p>\n{\n    +return o1.getStartTask() - o2.getStartTask();\n    +    }\n<p>    +});<br/>\n    +<br/>\n    +int numExecutors = _executors.size();<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    I think that the block from L133 to L144 can be simplified to<br/>\n    ```<br/>\n    for (int i = 0; i < numExecutors; i++) </p>\n{\nreassignment.put(_executors.get(i),reassignSlots.get(i % numSlots));\n      }\n<p>    ```</p>\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612644719/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612644725","html_url":"https://github.com/apache/storm/issues/5069#issuecomment-2612644725","issue_url":"https://api.github.com/repos/apache/storm/issues/5069","id":2612644725,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NDQ3MjU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-15T12:56:57Z","updated_at":"2025-01-24T14:20:16Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user abhishekagarwal87 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1108#discussion_r52895423\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1108#discussion_r52895423</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/scheduler/DefaultScheduler.java &#8212;<br/>\n    @@ -0,0 +1,110 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.scheduler;<br/>\n    +<br/>\n    +import java.util.HashMap;<br/>\n    +import java.util.HashSet;<br/>\n    +import java.util.List;<br/>\n    +import java.util.Map;<br/>\n    +import java.util.Map.Entry;<br/>\n    +import java.util.Set;<br/>\n    +<br/>\n    +import org.apache.storm.utils.Utils;<br/>\n    +<br/>\n    +public class DefaultScheduler implements IScheduler {<br/>\n    +<br/>\n    +    private static Set<WorkerSlot> badSlots(Map<WorkerSlot, List<ExecutorDetails>> existingSlots, int numExecutors, int numWorkers) {<br/>\n    +if (numWorkers != 0) {<br/>\n    +    Map<Integer, Integer> distribution = Utils.integerDivided(numExecutors, numWorkers);<br/>\n    +    Set<WorkerSlot> _slots = new HashSet<WorkerSlot>();<br/>\n    +<br/>\n    +    for (Entry<WorkerSlot, List<ExecutorDetails>> entry : existingSlots.entrySet()) {<br/>\n    +Integer executorCount = distribution.get(entry.getValue().size());<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    It is not a bug as such but helps in understanding the code better. </p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612644725/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612662323","html_url":"https://github.com/apache/storm/issues/5156#issuecomment-2612662323","issue_url":"https://api.github.com/repos/apache/storm/issues/5156","id":2612662323,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NjIzMjM=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-15T13:29:16Z","updated_at":"2025-01-24T14:28:10Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=abhishek.agarwal\">abhishek.agarwal</a>:</i>\n<p><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=Johnbaba\" class=\"user-hover\" rel=\"Johnbaba\">John Fang</a> I gather from the discussion pdf that jstom has the option of running kafka spout on the same node as kafka partition. I had been thinking about data locality in storm and just came across this. How much performance improvement did you see? I would like to know how data locality actually helped in a production cluster. </p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612662323/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612653735","html_url":"https://github.com/apache/storm/issues/5110#issuecomment-2612653735","issue_url":"https://api.github.com/repos/apache/storm/issues/5110","id":2612653735,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NTM3MzU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-15T14:45:02Z","updated_at":"2025-01-24T14:24:14Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user hustfxj commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1081#discussion_r52906298\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1081#discussion_r52906298</a></p>\n\n<p>    &#8212; Diff: storm-core/src/clj/org/apache/storm/daemon/nimbus.clj &#8212;<br/>\n    @@ -587,7 +586,12 @@<br/>\n     (defn update-heartbeats! <span class=\"error\">&#91;nimbus storm-id all-executors existing-assignment&#93;</span><br/>\n       (log-debug \"Updating heartbeats for \" storm-id \" \" (pr-str all-executors))<br/>\n       (let [storm-cluster-state (:storm-cluster-state nimbus)</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>executor-beats (.executor-beats storm-cluster-state storm-id (:executor->node+port existing-assignment))<br/>\n    +executor-beats (let [executor-stats-java-map (.executorBeats storm-cluster-state storm-id (.get_executor_node_port (thriftify-assignment existing-assignment)))<br/>\n    +     executor-stats-clojurify (clojurify-structure executor-stats-java-map)]<br/>\n    + (->> (dofor [<span class=\"error\">&#91;^ExecutorInfo executor-info ^ClusterWorkerHeartbeat cluster-worker-heartbeat&#93;</span> executor-stats-clojurify]<br/>\n    +     \n{[(.get_task_start executor-info) (.get_task_end executor-info)] (clojurify-zk-worker-hb cluster-worker-heartbeat)}\n<p>)</p>\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    ok thank you for your comments. I get it.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612653735/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612644729","html_url":"https://github.com/apache/storm/issues/5069#issuecomment-2612644729","issue_url":"https://api.github.com/repos/apache/storm/issues/5069","id":2612644729,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NDQ3Mjk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-15T14:53:34Z","updated_at":"2025-01-24T14:20:16Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user abhishekagarwal87 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1108#discussion_r52907290\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1108#discussion_r52907290</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/scheduler/DefaultScheduler.java &#8212;<br/>\n    @@ -0,0 +1,110 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.scheduler;<br/>\n    +<br/>\n    +import java.util.HashMap;<br/>\n    +import java.util.HashSet;<br/>\n    +import java.util.List;<br/>\n    +import java.util.Map;<br/>\n    +import java.util.Map.Entry;<br/>\n    +import java.util.Set;<br/>\n    +<br/>\n    +import org.apache.storm.utils.Utils;<br/>\n    +<br/>\n    +public class DefaultScheduler implements IScheduler {<br/>\n    +<br/>\n    +    private static Set<WorkerSlot> badSlots(Map<WorkerSlot, List<ExecutorDetails>> existingSlots, int numExecutors, int numWorkers) {<br/>\n    +if (numWorkers != 0) {<br/>\n    +    Map<Integer, Integer> distribution = Utils.integerDivided(numExecutors, numWorkers);<br/>\n    +    Set<WorkerSlot> _slots = new HashSet<WorkerSlot>();<br/>\n    +<br/>\n    +    for (Entry<WorkerSlot, List<ExecutorDetails>> entry : existingSlots.entrySet()) {<br/>\n    +Integer executorCount = distribution.get(entry.getValue().size());<br/>\n    +if (executorCount != null && executorCount > 0) </p>\n{\n    +    _slots.add(entry.getKey());\n    +    executorCount--;\n    +    distribution.put(entry.getValue().size(), executorCount);\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    for (WorkerSlot slot : _slots) </p>\n{\n    +existingSlots.remove(slot);\n    +    }\n<p>    +<br/>\n    +    return existingSlots.keySet();<br/>\n    +}<br/>\n    +<br/>\n    +return null;<br/>\n    +    }<br/>\n    +<br/>\n    +    public static Set<WorkerSlot> slotsCanReassign(Cluster cluster, Set<WorkerSlot> slots) {<br/>\n    +Set<WorkerSlot> result = new HashSet<WorkerSlot>();<br/>\n    +for (WorkerSlot slot : slots) {<br/>\n    +    if (!cluster.isBlackListed(slot.getNodeId())) {<br/>\n    +SupervisorDetails supervisor = cluster.getSupervisorById(slot.getNodeId());<br/>\n    +if (supervisor != null) {<br/>\n    +    Set<Integer> ports = supervisor.getAllPorts();<br/>\n    +    if (ports != null && ports.contains(slot.getPort())) </p>\n{\n    +result.add(slot);\n    +    }\n<p>    +}<br/>\n    +    }<br/>\n    +}<br/>\n    +return result;<br/>\n    +    }<br/>\n    +<br/>\n    +    public static void defaultSchedule(Topologies topologies, Cluster cluster) {<br/>\n    +List<TopologyDetails> needsSchedulingTopologies = cluster.needsSchedulingTopologies(topologies);<br/>\n    +for (TopologyDetails topology : needsSchedulingTopologies) {<br/>\n    +    List<WorkerSlot> availableSlots = cluster.getAvailableSlots();<br/>\n    +    Set<ExecutorDetails> allExecutors = (Set<ExecutorDetails>) topology.getExecutors();<br/>\n    +<br/>\n    +    Map<WorkerSlot, List<ExecutorDetails>> aliveAssigned = EvenScheduler.getAliveAssignedWorkerSlotExecutors(cluster, topology.getId());<br/>\n    +    Set<ExecutorDetails> aliveExecutors = new HashSet<ExecutorDetails>();<br/>\n    +    for (List<ExecutorDetails> list : aliveAssigned.values()) </p>\n{\n    +aliveExecutors.addAll(list);\n    +    }\n<p>    +<br/>\n    +    Set<WorkerSlot> canReassignSlots = slotsCanReassign(cluster, aliveAssigned.keySet());<br/>\n    +    int totalSlotsToUse = Math.min(topology.getNumWorkers(), canReassignSlots.size() + availableSlots.size());<br/>\n    +<br/>\n    +    Set<WorkerSlot> badSlot = null;<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    minor. badSlots</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612644729/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612872706","html_url":"https://github.com/apache/storm/issues/5387#issuecomment-2612872706","issue_url":"https://api.github.com/repos/apache/storm/issues/5387","id":2612872706,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4NzI3MDY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-15T15:17:13Z","updated_at":"2025-01-24T16:02:23Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>GitHub user arunmahadevan opened a pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1109\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1109</a></p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1552\" title=\"Fix topology event sampling log directory \" class=\"issue-link\" data-issue-key=\"STORM-1552\"><del>STORM-1552</del></a> Fix topology event sampling log dir</p>\n\n<p>    Currently the events are logged under \"storm-local/workers-artifacts/</p>\n{storm-id}/{port}/events.log\".<br/>\n    and the \"events\" link in UI does not display the log file.<br/>\n    <br/>\n    The events.log should be kept under \"logs/workers-artifacts/{storm-id}\n<p>/</p>\n{port}/events.log\"<br/>\n    so that its viewable via logviewer.<br/>\n<br/>\nYou can merge this pull request into a Git repository by running:<br/>\n<br/>\n    $ git pull <a href=\"https://github.com/arunmahadevan/storm\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/arunmahadevan/storm</a> <a href=\"https://issues.apache.org/jira/browse/STORM-1552\" title=\"Fix topology event sampling log directory \" class=\"issue-link\" data-issue-key=\"STORM-1552\"><del>STORM-1552</del></a><br/>\n<br/>\nAlternatively you can review and apply these changes as the patch at:<br/>\n<br/>\n    <a href=\"https://github.com/apache/storm/pull/1109.patch\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1109.patch</a><br/>\n<br/>\nTo close this pull request, make a commit to your master/trunk branch<br/>\nwith (at least) the following in the commit message:<br/>\n<br/>\n    This closes #1109<br/>\n    <br/>\n----<br/>\ncommit 8fe36ae26243c89b62e95f950bfc5b901384cb50<br/>\nAuthor: Arun Mahadevan <aiyer@hortonworks.com><br/>\nDate:   2016-02-15T15:11:03Z<br/>\n<br/>\n    <a href=\"https://issues.apache.org/jira/browse/STORM-1552\" title=\"Fix topology event sampling log directory \" class=\"issue-link\" data-issue-key=\"STORM-1552\"><del>STORM-1552</del></a> Fix topology event sampling log dir<br/>\n    <br/>\n    Currently the events are logged under \"storm-local/workers-artifacts/{storm-id}/{port}\n<p>/events.log\".<br/>\n    and the \"events\" link in UI does not display the log file.</p>\n\n<p>    The events.log should be kept under \"logs/workers-artifacts/</p>\n{storm-id}\n<p>/</p>\n{port}\n<p>/events.log\"<br/>\n    so that its viewable via logviewer.</p>\n\n<hr />","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612872706/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612872711","html_url":"https://github.com/apache/storm/issues/5387#issuecomment-2612872711","issue_url":"https://api.github.com/repos/apache/storm/issues/5387","id":2612872711,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4NzI3MTE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-15T18:39:56Z","updated_at":"2025-01-24T16:02:23Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user abhishekagarwal87 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1109#discussion_r52931701\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1109#discussion_r52931701</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/metric/FileBasedEventLogger.java &#8212;<br/>\n    @@ -76,33 +77,35 @@ public void run() </p>\n{\n     scheduler.scheduleAtFixedRate(task, FLUSH_INTERVAL_MILLIS, FLUSH_INTERVAL_MILLIS, TimeUnit.MILLISECONDS);\n }\n\n<p>    +    private String getLogDir(Map stormConf) {<br/>\n    +String logDir;<br/>\n    +if ((logDir = System.getProperty(\"storm.log.dir\")) == null<br/>\n    +&& (logDir = (String) stormConf.get(\"storm.log.dir\")) == null) </p>\n{\n    +    logDir = Paths.get(System.getProperty(\"storm.home\"), \"logs\").toString();\n    +}\n<p>    +return logDir;<br/>\n    +    }</p>\n\n<p> @Override<br/>\n public void prepare(Map stormConf, TopologyContext context) {</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>String logDir; // storm local directory<br/>\n    +String workersArtifactDir; // workers artifact directory<br/>\n     String stormId = context.getStormId();<br/>\n     int port = context.getThisWorkerPort();</li>\n\t<li>if ((logDir = System.getProperty(\"storm.local.dir\")) == null &&</li>\n\t<li>(logDir = (String)stormConf.get(\"storm.local.dir\")) == null) \n{\n    -    String msg = \"Could not determine the directory to log events.\";\n    -    LOG.error(msg);\n    -    throw new RuntimeException(msg);\n    -}\n<p> else {</p></li>\n\t<li>LOG.info(\"FileBasedEventLogger log directory {}.\", logDir);<br/>\n    +if ((workersArtifactDir = (String) stormConf.get(Config.STORM_WORKERS_ARTIFACTS_DIR)) == null) \n{\n    +    workersArtifactDir = \"workers-artifacts\";\n     }\n<p>    -<br/>\n     /*</p></li>\n</ul>\n<ul>\n\t<li>Include the topology name & worker port in the file name so that</li>\n\t<li>multiple event loggers can log independently.<br/>\n      */</li>\n</ul>\n<ul class=\"alternate\" type=\"square\">\n\t<li>Path path = Paths.get(logDir, \"workers-artifacts\", stormId, Integer.toString(port), \"events.log\");<br/>\n    +Path path = Paths.get(workersArtifactDir, stormId, Integer.toString(port), \"events.log\");<br/>\n     if (!path.isAbsolute()) {</li>\n\t<li>path = Paths.get(System.getProperty(\"storm.home\"), logDir, \"workers-artifacts\",</li>\n\t<li>stormId, Integer.toString(port), \"events.log\");<br/>\n    +    path = Paths.get(getLogDir(stormConf), workersArtifactDir,\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    This is very similar to <a href=\"https://github.com/apache/storm/blob/master/storm-core/src/jvm/org/apache/storm/utils/ConfigUtils.java#L407\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/blob/master/storm-core/src/jvm/org/apache/storm/utils/ConfigUtils.java#L407</a></p>\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612872711/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612872716","html_url":"https://github.com/apache/storm/issues/5387#issuecomment-2612872716","issue_url":"https://api.github.com/repos/apache/storm/issues/5387","id":2612872716,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4NzI3MTY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-15T18:40:27Z","updated_at":"2025-01-24T16:02:23Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user abhishekagarwal87 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1109#discussion_r52931753\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1109#discussion_r52931753</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/metric/FileBasedEventLogger.java &#8212;<br/>\n    @@ -76,33 +77,35 @@ public void run() </p>\n{\n     scheduler.scheduleAtFixedRate(task, FLUSH_INTERVAL_MILLIS, FLUSH_INTERVAL_MILLIS, TimeUnit.MILLISECONDS);\n }\n\n<p>    +    private String getLogDir(Map stormConf) {<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    This function is already present in ConfigUtils.java</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612872716/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612872723","html_url":"https://github.com/apache/storm/issues/5387#issuecomment-2612872723","issue_url":"https://api.github.com/repos/apache/storm/issues/5387","id":2612872723,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI4NzI3MjM=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-15T18:53:45Z","updated_at":"2025-01-24T16:02:23Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user arunmahadevan commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1109#discussion_r52932760\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1109#discussion_r52932760</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/metric/FileBasedEventLogger.java &#8212;<br/>\n    @@ -76,33 +77,35 @@ public void run() </p>\n{\n     scheduler.scheduleAtFixedRate(task, FLUSH_INTERVAL_MILLIS, FLUSH_INTERVAL_MILLIS, TimeUnit.MILLISECONDS);\n }\n\n<p>    +    private String getLogDir(Map stormConf) {<br/>\n    +String logDir;<br/>\n    +if ((logDir = System.getProperty(\"storm.log.dir\")) == null<br/>\n    +&& (logDir = (String) stormConf.get(\"storm.log.dir\")) == null) </p>\n{\n    +    logDir = Paths.get(System.getProperty(\"storm.home\"), \"logs\").toString();\n    +}\n<p>    +return logDir;<br/>\n    +    }</p>\n\n<p> @Override<br/>\n public void prepare(Map stormConf, TopologyContext context) {</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>String logDir; // storm local directory<br/>\n    +String workersArtifactDir; // workers artifact directory<br/>\n     String stormId = context.getStormId();<br/>\n     int port = context.getThisWorkerPort();</li>\n\t<li>if ((logDir = System.getProperty(\"storm.local.dir\")) == null &&</li>\n\t<li>(logDir = (String)stormConf.get(\"storm.local.dir\")) == null) \n{\n    -    String msg = \"Could not determine the directory to log events.\";\n    -    LOG.error(msg);\n    -    throw new RuntimeException(msg);\n    -}\n<p> else {</p></li>\n\t<li>LOG.info(\"FileBasedEventLogger log directory {}.\", logDir);<br/>\n    +if ((workersArtifactDir = (String) stormConf.get(Config.STORM_WORKERS_ARTIFACTS_DIR)) == null) \n{\n    +    workersArtifactDir = \"workers-artifacts\";\n     }\n<p>    -<br/>\n     /*</p></li>\n</ul>\n<ul>\n\t<li>Include the topology name & worker port in the file name so that</li>\n\t<li>multiple event loggers can log independently.<br/>\n      */</li>\n</ul>\n<ul class=\"alternate\" type=\"square\">\n\t<li>Path path = Paths.get(logDir, \"workers-artifacts\", stormId, Integer.toString(port), \"events.log\");<br/>\n    +Path path = Paths.get(workersArtifactDir, stormId, Integer.toString(port), \"events.log\");<br/>\n     if (!path.isAbsolute()) {</li>\n\t<li>path = Paths.get(System.getProperty(\"storm.home\"), logDir, \"workers-artifacts\",</li>\n\t<li>stormId, Integer.toString(port), \"events.log\");<br/>\n    +    path = Paths.get(getLogDir(stormConf), workersArtifactDir,\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    ConfigUtils.java is not available in 1.x-branch. I wanted the fix to be applied to both 1.x and master so took 1.x as the base and submitted the PR. Someone can let me know in such cases one need to raise two separate PRs with different code to fix the same issue.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612872723/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/184398720","html_url":"https://github.com/apache/storm/pull/1104#issuecomment-184398720","issue_url":"https://api.github.com/repos/apache/storm/issues/1104","id":184398720,"node_id":"MDEyOklzc3VlQ29tbWVudDE4NDM5ODcyMA==","user":{"login":"revans2","id":3441321,"node_id":"MDQ6VXNlcjM0NDEzMjE=","avatar_url":"https://avatars.githubusercontent.com/u/3441321?v=4","gravatar_id":"","url":"https://api.github.com/users/revans2","html_url":"https://github.com/revans2","followers_url":"https://api.github.com/users/revans2/followers","following_url":"https://api.github.com/users/revans2/following{/other_user}","gists_url":"https://api.github.com/users/revans2/gists{/gist_id}","starred_url":"https://api.github.com/users/revans2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/revans2/subscriptions","organizations_url":"https://api.github.com/users/revans2/orgs","repos_url":"https://api.github.com/users/revans2/repos","events_url":"https://api.github.com/users/revans2/events{/privacy}","received_events_url":"https://api.github.com/users/revans2/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-15T21:14:22Z","updated_at":"2016-02-15T21:14:22Z","author_association":"CONTRIBUTOR","body":"The travis failure is unrelated.  It is a storm-kafa failure.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/184398720/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612648862","html_url":"https://github.com/apache/storm/issues/5090#issuecomment-2612648862","issue_url":"https://api.github.com/repos/apache/storm/issues/5090","id":2612648862,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NDg4NjI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-15T22:35:19Z","updated_at":"2025-01-24T14:22:04Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user jerrypeng commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1098#discussion_r52950000\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1098#discussion_r52950000</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/StormTimer.java &#8212;<br/>\n    @@ -0,0 +1,274 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +<br/>\n    +package org.apache.storm;<br/>\n    +<br/>\n    +import org.apache.storm.utils.Time;<br/>\n    +import org.apache.storm.utils.Utils;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +import java.util.Comparator;<br/>\n    +import java.util.Random;<br/>\n    +import java.util.concurrent.PriorityBlockingQueue;<br/>\n    +import java.util.concurrent.Semaphore;<br/>\n    +import java.util.concurrent.atomic.AtomicBoolean;<br/>\n    +<br/>\n    +/**<br/>\n    + * The timer defined in this file is very similar to java.util.Timer, except<br/>\n    + * it integrates with Storm's time simulation capabilities. This lets us test<br/>\n    + * code that does asynchronous work on the timer thread<br/>\n    + */<br/>\n    +<br/>\n    +public class StormTimer {<br/>\n    +    private static final Logger LOG = LoggerFactory.getLogger(StormTimer.class);<br/>\n    +<br/>\n    +    public interface TimerFunc </p>\n{\n    +public void run(Object o);\n    +    }\n<p>    +<br/>\n    +    public static class QueueEntry {<br/>\n    +public final Long endTimeMs;<br/>\n    +public final TimerFunc afn;<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    The current Timer API allows users to set a \"onKill\" function to be executed if an exception is thrown in the timer thread.  The \"onKill\" function take one argument i.e. the throwable that was caught.  So should we use Runnable interface in conjunction with TimerFuncs interface since the \"onKill\" function cannot be a Runnable as it takes one parameter.  Seems kind of messy if we use the both</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612648862/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612648868","html_url":"https://github.com/apache/storm/issues/5090#issuecomment-2612648868","issue_url":"https://api.github.com/repos/apache/storm/issues/5090","id":2612648868,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NDg4Njg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-15T22:39:43Z","updated_at":"2025-01-24T14:22:04Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user jerrypeng commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1098#discussion_r52950311\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1098#discussion_r52950311</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/StormTimer.java &#8212;<br/>\n    @@ -0,0 +1,274 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +<br/>\n    +package org.apache.storm;<br/>\n    +<br/>\n    +import org.apache.storm.utils.Time;<br/>\n    +import org.apache.storm.utils.Utils;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +import java.util.Comparator;<br/>\n    +import java.util.Random;<br/>\n    +import java.util.concurrent.PriorityBlockingQueue;<br/>\n    +import java.util.concurrent.Semaphore;<br/>\n    +import java.util.concurrent.atomic.AtomicBoolean;<br/>\n    +<br/>\n    +/**<br/>\n    + * The timer defined in this file is very similar to java.util.Timer, except<br/>\n    + * it integrates with Storm's time simulation capabilities. This lets us test<br/>\n    + * code that does asynchronous work on the timer thread<br/>\n    + */<br/>\n    +<br/>\n    +public class StormTimer {<br/>\n    +    private static final Logger LOG = LoggerFactory.getLogger(StormTimer.class);<br/>\n    +<br/>\n    +    public interface TimerFunc </p>\n{\n    +public void run(Object o);\n    +    }\n<p>    +<br/>\n    +    public static class QueueEntry {<br/>\n    +public final Long endTimeMs;<br/>\n    +public final TimerFunc afn;<br/>\n    +public final String id;<br/>\n    +<br/>\n    +public QueueEntry(Long endTimeMs, TimerFunc afn, String id) </p>\n{\n    +    this.endTimeMs = endTimeMs;\n    +    this.afn = afn;\n    +    this.id = id;\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    public static class StormTimerTask extends Thread {<br/>\n    +<br/>\n    +private PriorityBlockingQueue<QueueEntry> queue = new PriorityBlockingQueue<QueueEntry>(10, new Comparator() {<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    will change</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612648868/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612653742","html_url":"https://github.com/apache/storm/issues/5110#issuecomment-2612653742","issue_url":"https://api.github.com/repos/apache/storm/issues/5110","id":2612653742,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NTM3NDI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-16T03:06:59Z","updated_at":"2025-01-24T14:24:14Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user hustfxj commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1081#discussion_r52964766\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1081#discussion_r52964766</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/cluster/ClusterUtils.java &#8212;<br/>\n    @@ -0,0 +1,249 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.cluster;<br/>\n    +<br/>\n    +import clojure.lang.APersistentMap;<br/>\n    +import org.apache.storm.Config;<br/>\n    +import org.apache.storm.generated.ClusterWorkerHeartbeat;<br/>\n    +import org.apache.storm.generated.ExecutorInfo;<br/>\n    +import org.apache.storm.generated.ExecutorStats;<br/>\n    +import org.apache.storm.generated.ProfileAction;<br/>\n    +import org.apache.storm.utils.Utils;<br/>\n    +import org.apache.zookeeper.ZooDefs;<br/>\n    +import org.apache.zookeeper.data.ACL;<br/>\n    +import org.apache.zookeeper.data.Id;<br/>\n    +import org.apache.zookeeper.server.auth.DigestAuthenticationProvider;<br/>\n    +<br/>\n    +import java.io.UnsupportedEncodingException;<br/>\n    +import java.net.URLEncoder;<br/>\n    +import java.security.NoSuchAlgorithmException;<br/>\n    +import java.util.ArrayList;<br/>\n    +import java.util.HashMap;<br/>\n    +import java.util.List;<br/>\n    +import java.util.Map;<br/>\n    +<br/>\n    +public class ClusterUtils {<br/>\n    +<br/>\n    +    public static final String ZK_SEPERATOR = \"/\";<br/>\n    +<br/>\n    +    public static final String ASSIGNMENTS_ROOT = \"assignments\";<br/>\n    +    public static final String CODE_ROOT = \"code\";<br/>\n    +    public static final String STORMS_ROOT = \"storms\";<br/>\n    +    public static final String SUPERVISORS_ROOT = \"supervisors\";<br/>\n    +    public static final String WORKERBEATS_ROOT = \"workerbeats\";<br/>\n    +    public static final String BACKPRESSURE_ROOT = \"backpressure\";<br/>\n    +    public static final String ERRORS_ROOT = \"errors\";<br/>\n    +    public static final String BLOBSTORE_ROOT = \"blobstore\";<br/>\n    +    public static final String BLOBSTORE_MAX_KEY_SEQUENCE_NUMBER_ROOT = \"blobstoremaxkeysequencenumber\";<br/>\n    +    public static final String NIMBUSES_ROOT = \"nimbuses\";<br/>\n    +    public static final String CREDENTIALS_ROOT = \"credentials\";<br/>\n    +    public static final String LOGCONFIG_ROOT = \"logconfigs\";<br/>\n    +    public static final String PROFILERCONFIG_ROOT = \"profilerconfigs\";<br/>\n    +<br/>\n    +    public static final String ASSIGNMENTS_SUBTREE = ZK_SEPERATOR + ASSIGNMENTS_ROOT;<br/>\n    +    public static final String STORMS_SUBTREE = ZK_SEPERATOR + STORMS_ROOT;<br/>\n    +    public static final String SUPERVISORS_SUBTREE = ZK_SEPERATOR + SUPERVISORS_ROOT;<br/>\n    +    public static final String WORKERBEATS_SUBTREE = ZK_SEPERATOR + WORKERBEATS_ROOT;<br/>\n    +    public static final String BACKPRESSURE_SUBTREE = ZK_SEPERATOR + BACKPRESSURE_ROOT;<br/>\n    +    public static final String ERRORS_SUBTREE = ZK_SEPERATOR + ERRORS_ROOT;<br/>\n    +    public static final String BLOBSTORE_SUBTREE = ZK_SEPERATOR + BLOBSTORE_ROOT;<br/>\n    +    public static final String BLOBSTORE_MAX_KEY_SEQUENCE_NUMBER_SUBTREE = ZK_SEPERATOR + BLOBSTORE_MAX_KEY_SEQUENCE_NUMBER_ROOT;<br/>\n    +    public static final String NIMBUSES_SUBTREE = ZK_SEPERATOR + NIMBUSES_ROOT;<br/>\n    +    public static final String CREDENTIALS_SUBTREE = ZK_SEPERATOR + CREDENTIALS_ROOT;<br/>\n    +    public static final String LOGCONFIG_SUBTREE = ZK_SEPERATOR + LOGCONFIG_ROOT;<br/>\n    +    public static final String PROFILERCONFIG_SUBTREE = ZK_SEPERATOR + PROFILERCONFIG_ROOT;<br/>\n    +<br/>\n    +    // A singleton instance allows us to mock delegated static methods in our<br/>\n    +    // tests by subclassing.<br/>\n    +    private static final ClusterUtils INSTANCE = new ClusterUtils();<br/>\n    +    private static ClusterUtils _instance = INSTANCE;<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Provide an instance of this class for delegates to use. To mock out delegated methods, provide an instance of a subclass that overrides the<br/>\n    +     * implementation of the delegated method.<br/>\n    +     *<br/>\n    +     * @param u a Cluster instance<br/>\n    +     */<br/>\n    +    public static void setInstance(ClusterUtils u) </p>\n{\n    +_instance = u;\n    +    }\n<p>    +<br/>\n    +    /**<br/>\n    +     * Resets the singleton instance to the default. This is helpful to reset the class to its original functionality when mocking is no longer desired.<br/>\n    +     */<br/>\n    +    public static void resetInstance() </p>\n{\n    +_instance = INSTANCE;\n    +    }\n<p>    +<br/>\n    +    public static List<ACL> mkTopoOnlyAcls(Map topoConf) throws NoSuchAlgorithmException {<br/>\n    +List<ACL> aclList = null;<br/>\n    +String payload = (String) topoConf.get(Config.STORM_ZOOKEEPER_TOPOLOGY_AUTH_PAYLOAD);<br/>\n    +if (Utils.isZkAuthenticationConfiguredStormServer(topoConf)) </p>\n{\n    +    aclList = new ArrayList<>();\n    +    ACL acl1 = ZooDefs.Ids.CREATOR_ALL_ACL.get(0);\n    +    aclList.add(acl1);\n    +    ACL acl2 = new ACL(ZooDefs.Perms.READ, new Id(\"digest\", DigestAuthenticationProvider.generateDigest(payload)));\n    +    aclList.add(acl2);\n    +}\n<p>    +return aclList;<br/>\n    +    }<br/>\n    +<br/>\n    +    public static String supervisorPath(String id) </p>\n{\n    +return SUPERVISORS_SUBTREE + ZK_SEPERATOR + id;\n    +    }\n<p>    +<br/>\n    +    public static String assignmentPath(String id) </p>\n{\n    +return ASSIGNMENTS_SUBTREE + ZK_SEPERATOR + id;\n    +    }\n<p>    +<br/>\n    +    public static String blobstorePath(String key) </p>\n{\n    +return BLOBSTORE_SUBTREE + ZK_SEPERATOR + key;\n    +    }\n<p>    +<br/>\n    +    public static String blobstoreMaxKeySequenceNumberPath(String key) </p>\n{\n    +return BLOBSTORE_MAX_KEY_SEQUENCE_NUMBER_SUBTREE + ZK_SEPERATOR + key;\n    +    }\n<p>    +<br/>\n    +    public static String nimbusPath(String id) </p>\n{\n    +return NIMBUSES_SUBTREE + ZK_SEPERATOR + id;\n    +    }\n<p>    +<br/>\n    +    public static String stormPath(String id) </p>\n{\n    +return STORMS_SUBTREE + ZK_SEPERATOR + id;\n    +    }\n<p>    +<br/>\n    +    public static String workerbeatStormRoot(String stormId) </p>\n{\n    +return WORKERBEATS_SUBTREE + ZK_SEPERATOR + stormId;\n    +    }\n<p>    +<br/>\n    +    public static String workerbeatPath(String stormId, String node, Long port) </p>\n{\n    +return workerbeatStormRoot(stormId) + ZK_SEPERATOR + node + \"-\" + port;\n    +    }\n<p>    +<br/>\n    +    public static String backpressureStormRoot(String stormId) </p>\n{\n    +return BACKPRESSURE_SUBTREE + ZK_SEPERATOR + stormId;\n    +    }\n<p>    +<br/>\n    +    public static String backpressurePath(String stormId, String node, Long port) </p>\n{\n    +return backpressureStormRoot(stormId) + ZK_SEPERATOR + node + \"-\" + port;\n    +    }\n<p>    +<br/>\n    +    public static String errorStormRoot(String stormId) </p>\n{\n    +return ERRORS_SUBTREE + ZK_SEPERATOR + stormId;\n    +    }\n<p>    +<br/>\n    +    public static String errorPath(String stormId, String componentId) {<br/>\n    +try </p>\n{\n    +    return errorStormRoot(stormId) + ZK_SEPERATOR + URLEncoder.encode(componentId, \"UTF-8\");\n    +}\n<p> catch (UnsupportedEncodingException e) </p>\n{\n    +    throw Utils.wrapInRuntime(e);\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    public static String lastErrorPath(String stormId, String componentId) </p>\n{\n    +return errorPath(stormId, componentId) + \"-last-error\";\n    +    }\n<p>    +<br/>\n    +    public static String credentialsPath(String stormId) </p>\n{\n    +return CREDENTIALS_SUBTREE + ZK_SEPERATOR + stormId;\n    +    }\n<p>    +<br/>\n    +    public static String logConfigPath(String stormId) </p>\n{\n    +return LOGCONFIG_SUBTREE + ZK_SEPERATOR + stormId;\n    +    }\n<p>    +<br/>\n    +    public static String profilerConfigPath(String stormId) </p>\n{\n    +return PROFILERCONFIG_SUBTREE + ZK_SEPERATOR + stormId;\n    +    }\n<p>    +<br/>\n    +    public static String profilerConfigPath(String stormId, String host, Long port, ProfileAction requestType) </p>\n{\n    +return profilerConfigPath(stormId) + ZK_SEPERATOR + host + \"_\" + port + \"_\" + requestType;\n    +    }\n<p>    +<br/>\n    +    public static <T> T maybeDeserialize(byte[] serialized, Class<T> clazz) {<br/>\n    +if (serialized != null) </p>\n{\n    +    return Utils.deserialize(serialized, clazz);\n    +}\n<p>    +return null;<br/>\n    +    }<br/>\n    +<br/>\n    +    // Ensures that we only return heartbeats for executors assigned to this worker<br/>\n    +    public static Map<ExecutorInfo, ClusterWorkerHeartbeat> convertExecutorBeats(List<ExecutorInfo> executors, ClusterWorkerHeartbeat workerHeartbeat) {<br/>\n    +Map<ExecutorInfo, ClusterWorkerHeartbeat> executorWhb = new HashMap<>();<br/>\n    +Map<ExecutorInfo, ExecutorStats> executorStatsMap = workerHeartbeat.get_executor_stats();<br/>\n    +for (ExecutorInfo executor : executors) {<br/>\n    +    if (executorStatsMap.containsKey(executor)) {<br/>\n    +executorWhb.put(executor, workerHeartbeat);<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    thank you, I  fixed it</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612653742/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/184506370","html_url":"https://github.com/apache/storm/pull/1098#issuecomment-184506370","issue_url":"https://api.github.com/repos/apache/storm/issues/1098","id":184506370,"node_id":"MDEyOklzc3VlQ29tbWVudDE4NDUwNjM3MA==","user":{"login":"hustfxj","id":7270212,"node_id":"MDQ6VXNlcjcyNzAyMTI=","avatar_url":"https://avatars.githubusercontent.com/u/7270212?v=4","gravatar_id":"","url":"https://api.github.com/users/hustfxj","html_url":"https://github.com/hustfxj","followers_url":"https://api.github.com/users/hustfxj/followers","following_url":"https://api.github.com/users/hustfxj/following{/other_user}","gists_url":"https://api.github.com/users/hustfxj/gists{/gist_id}","starred_url":"https://api.github.com/users/hustfxj/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hustfxj/subscriptions","organizations_url":"https://api.github.com/users/hustfxj/orgs","repos_url":"https://api.github.com/users/hustfxj/repos","events_url":"https://api.github.com/users/hustfxj/events{/privacy}","received_events_url":"https://api.github.com/users/hustfxj/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-16T03:52:46Z","updated_at":"2016-02-16T03:52:46Z","author_association":"CONTRIBUTOR","body":"I would agree with revans2. It is better to  make it fully object oriented and make all of the static methods regular methods/constructors.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/184506370/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612648877","html_url":"https://github.com/apache/storm/issues/5090#issuecomment-2612648877","issue_url":"https://api.github.com/repos/apache/storm/issues/5090","id":2612648877,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NDg4Nzc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-16T03:52:47Z","updated_at":"2025-01-24T14:22:04Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user hustfxj commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1098#issuecomment-184506370\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1098#issuecomment-184506370</a></p>\n\n<p>    I would agree with revans2. It is better to  make it fully object oriented and make all of the static methods regular methods/constructors.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612648877/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/184507854","html_url":"https://github.com/apache/storm/pull/1104#issuecomment-184507854","issue_url":"https://api.github.com/repos/apache/storm/issues/1104","id":184507854,"node_id":"MDEyOklzc3VlQ29tbWVudDE4NDUwNzg1NA==","user":{"login":"harshach","id":38649,"node_id":"MDQ6VXNlcjM4NjQ5","avatar_url":"https://avatars.githubusercontent.com/u/38649?v=4","gravatar_id":"","url":"https://api.github.com/users/harshach","html_url":"https://github.com/harshach","followers_url":"https://api.github.com/users/harshach/followers","following_url":"https://api.github.com/users/harshach/following{/other_user}","gists_url":"https://api.github.com/users/harshach/gists{/gist_id}","starred_url":"https://api.github.com/users/harshach/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/harshach/subscriptions","organizations_url":"https://api.github.com/users/harshach/orgs","repos_url":"https://api.github.com/users/harshach/repos","events_url":"https://api.github.com/users/harshach/events{/privacy}","received_events_url":"https://api.github.com/users/harshach/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-16T04:03:24Z","updated_at":"2016-02-16T04:03:24Z","author_association":"CONTRIBUTOR","body":"+1\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/184507854/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612648888","html_url":"https://github.com/apache/storm/issues/5090#issuecomment-2612648888","issue_url":"https://api.github.com/repos/apache/storm/issues/5090","id":2612648888,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NDg4ODg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-16T04:16:27Z","updated_at":"2025-01-24T14:22:04Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user jerrypeng commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1098#discussion_r52967762\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1098#discussion_r52967762</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/StormTimer.java &#8212;<br/>\n    @@ -0,0 +1,274 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +<br/>\n    +package org.apache.storm;<br/>\n    +<br/>\n    +import org.apache.storm.utils.Time;<br/>\n    +import org.apache.storm.utils.Utils;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +import java.util.Comparator;<br/>\n    +import java.util.Random;<br/>\n    +import java.util.concurrent.PriorityBlockingQueue;<br/>\n    +import java.util.concurrent.Semaphore;<br/>\n    +import java.util.concurrent.atomic.AtomicBoolean;<br/>\n    +<br/>\n    +/**<br/>\n    + * The timer defined in this file is very similar to java.util.Timer, except<br/>\n    + * it integrates with Storm's time simulation capabilities. This lets us test<br/>\n    + * code that does asynchronous work on the timer thread<br/>\n    + */<br/>\n    +<br/>\n    +public class StormTimer {<br/>\n    +    private static final Logger LOG = LoggerFactory.getLogger(StormTimer.class);<br/>\n    +<br/>\n    +    public interface TimerFunc </p>\n{\n    +public void run(Object o);\n    +    }\n<p>    +<br/>\n    +    public static class QueueEntry {<br/>\n    +public final Long endTimeMs;<br/>\n    +public final TimerFunc afn;<br/>\n    +public final String id;<br/>\n    +<br/>\n    +public QueueEntry(Long endTimeMs, TimerFunc afn, String id) </p>\n{\n    +    this.endTimeMs = endTimeMs;\n    +    this.afn = afn;\n    +    this.id = id;\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    public static class StormTimerTask extends Thread {<br/>\n    +<br/>\n    +private PriorityBlockingQueue<QueueEntry> queue = new PriorityBlockingQueue<QueueEntry>(10, new Comparator() {<br/>\n    +    @Override<br/>\n    +    public int compare(Object o1, Object o2) </p>\n{\n    +return ((QueueEntry)o1).endTimeMs.intValue() - ((QueueEntry)o2).endTimeMs.intValue();\n    +    }\n<p>    +});<br/>\n    +<br/>\n    +// boolean to indicate whether timer is active<br/>\n    +private AtomicBoolean active = new AtomicBoolean(false);<br/>\n    +<br/>\n    +// function to call when timer is killed<br/>\n    +private TimerFunc onKill;<br/>\n    +<br/>\n    +//random number generator<br/>\n    +private Random random = new Random();<br/>\n    +<br/>\n    +// synchronization for cancelling the timer<br/>\n    +private Semaphore cancelNotifier = new Semaphore(0);<br/>\n    +<br/>\n    +//used for synchronization<br/>\n    +private Object lock = new Object();<br/>\n    +<br/>\n    +@Override<br/>\n    +public void run() {<br/>\n    +    while (this.active.get()) {<br/>\n    +QueueEntry queueEntry = null;<br/>\n    +try {<br/>\n    +    synchronized (this.lock) </p>\n{\n    +queueEntry = this.queue.peek();\n    +    }\n<p>    +    if ((queueEntry != null) && (Time.currentTimeMillis() >= queueEntry.endTimeMs)) {<br/>\n    +// It is imperative to not run the function<br/>\n    +// inside the timer lock. Otherwise, it is<br/>\n    +// possible to deadlock if the fn deals with<br/>\n    +// other locks, like the submit lock.<br/>\n    +synchronized (this.lock) {<br/>\n    +    this.queue.poll();<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Ya I noticed that too when I first translated the code but I forgot the mention it.  Instead of a poll can we just use a remove? Such as:</p>\n\n<p>    queueEntry = queue.peek();<br/>\n    if ((queueEntry != null) && (Time.currentTimeMillis() >= queueEntry.endTimeMs)) </p>\n{\n      queueEntry = queue.remove(queueEntry);\n      queueEntry.afn.run();\n    }\n\n<p>    So that we will alway remove what we \"peek\"ed even in the instance when the head of the queue changed because a new entry got added into the priority queue between peek and poll</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612648888/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612648896","html_url":"https://github.com/apache/storm/issues/5090#issuecomment-2612648896","issue_url":"https://api.github.com/repos/apache/storm/issues/5090","id":2612648896,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NDg4OTY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-16T04:18:42Z","updated_at":"2025-01-24T14:22:04Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user jerrypeng commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1098#discussion_r52967841\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1098#discussion_r52967841</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/org/apache/storm/StormTimer.java &#8212;<br/>\n    @@ -0,0 +1,274 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +<br/>\n    +package org.apache.storm;<br/>\n    +<br/>\n    +import org.apache.storm.utils.Time;<br/>\n    +import org.apache.storm.utils.Utils;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +import java.util.Comparator;<br/>\n    +import java.util.Random;<br/>\n    +import java.util.concurrent.PriorityBlockingQueue;<br/>\n    +import java.util.concurrent.Semaphore;<br/>\n    +import java.util.concurrent.atomic.AtomicBoolean;<br/>\n    +<br/>\n    +/**<br/>\n    + * The timer defined in this file is very similar to java.util.Timer, except<br/>\n    + * it integrates with Storm's time simulation capabilities. This lets us test<br/>\n    + * code that does asynchronous work on the timer thread<br/>\n    + */<br/>\n    +<br/>\n    +public class StormTimer {<br/>\n    +    private static final Logger LOG = LoggerFactory.getLogger(StormTimer.class);<br/>\n    +<br/>\n    +    public interface TimerFunc </p>\n{\n    +public void run(Object o);\n    +    }\n<p>    +<br/>\n    +    public static class QueueEntry {<br/>\n    +public final Long endTimeMs;<br/>\n    +public final TimerFunc afn;<br/>\n    +public final String id;<br/>\n    +<br/>\n    +public QueueEntry(Long endTimeMs, TimerFunc afn, String id) </p>\n{\n    +    this.endTimeMs = endTimeMs;\n    +    this.afn = afn;\n    +    this.id = id;\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    public static class StormTimerTask extends Thread {<br/>\n    +<br/>\n    +private PriorityBlockingQueue<QueueEntry> queue = new PriorityBlockingQueue<QueueEntry>(10, new Comparator() {<br/>\n    +    @Override<br/>\n    +    public int compare(Object o1, Object o2) </p>\n{\n    +return ((QueueEntry)o1).endTimeMs.intValue() - ((QueueEntry)o2).endTimeMs.intValue();\n    +    }\n<p>    +});<br/>\n    +<br/>\n    +// boolean to indicate whether timer is active<br/>\n    +private AtomicBoolean active = new AtomicBoolean(false);<br/>\n    +<br/>\n    +// function to call when timer is killed<br/>\n    +private TimerFunc onKill;<br/>\n    +<br/>\n    +//random number generator<br/>\n    +private Random random = new Random();<br/>\n    +<br/>\n    +// synchronization for cancelling the timer<br/>\n    +private Semaphore cancelNotifier = new Semaphore(0);<br/>\n    +<br/>\n    +//used for synchronization<br/>\n    +private Object lock = new Object();<br/>\n    +<br/>\n    +@Override<br/>\n    +public void run() {<br/>\n    +    while (this.active.get()) {<br/>\n    +QueueEntry queueEntry = null;<br/>\n    +try {<br/>\n    +    synchronized (this.lock) </p>\n{\n    +queueEntry = this.queue.peek();\n    +    }\n<p>    +    if ((queueEntry != null) && (Time.currentTimeMillis() >= queueEntry.endTimeMs)) {<br/>\n    +// It is imperative to not run the function<br/>\n    +// inside the timer lock. Otherwise, it is<br/>\n    +// possible to deadlock if the fn deals with<br/>\n    +// other locks, like the submit lock.<br/>\n    +synchronized (this.lock) </p>\n{\n    +    this.queue.poll();\n    +}\n<p>    +queueEntry.afn.run(null);<br/>\n    +    } else if (queueEntry != null) </p>\n{\n    +//  If any events are scheduled, sleep until\n    +// event generation. If any recurring events\n    +// are scheduled then we will always go\n    +// through this branch, sleeping only the\n    +// exact necessary amount of time. We give\n    +// an upper bound, e.g. 1000 millis, to the\n    +// sleeping time, to limit the response time\n    +// for detecting any new event within 1 secs.\n    +Time.sleep(Math.min(1000, (queueEntry.endTimeMs - Time.currentTimeMillis())));\n    +    }\n<p> else </p>\n{\n    +// Otherwise poll to see if any new event\n    +// was scheduled. This is, in essence, the\n    +// response time for detecting any new event\n    +// schedulings when there are no scheduled\n    +// events.\n    +Time.sleep(1000);\n    +    }\n<p>    +} catch (Throwable t) {<br/>\n    +    if (!(Utils.exceptionCauseIsInstanceOf(InterruptedException.class, t))) {<br/>\n    +this.onKill.run(t);<br/>\n    +this.setActive(false);<br/>\n    +throw new RuntimeException(t);<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    ok we will remove</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612648896/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/184514177","html_url":"https://github.com/apache/storm/pull/1081#issuecomment-184514177","issue_url":"https://api.github.com/repos/apache/storm/issues/1081","id":184514177,"node_id":"MDEyOklzc3VlQ29tbWVudDE4NDUxNDE3Nw==","user":{"login":"hustfxj","id":7270212,"node_id":"MDQ6VXNlcjcyNzAyMTI=","avatar_url":"https://avatars.githubusercontent.com/u/7270212?v=4","gravatar_id":"","url":"https://api.github.com/users/hustfxj","html_url":"https://github.com/hustfxj","followers_url":"https://api.github.com/users/hustfxj/followers","following_url":"https://api.github.com/users/hustfxj/following{/other_user}","gists_url":"https://api.github.com/users/hustfxj/gists{/gist_id}","starred_url":"https://api.github.com/users/hustfxj/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hustfxj/subscriptions","organizations_url":"https://api.github.com/users/hustfxj/orgs","repos_url":"https://api.github.com/users/hustfxj/repos","events_url":"https://api.github.com/users/hustfxj/events{/privacy}","received_events_url":"https://api.github.com/users/hustfxj/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-16T04:35:30Z","updated_at":"2016-02-16T04:35:30Z","author_association":"CONTRIBUTOR","body":"@revans2 @abhishekagarwal87  can you help review these commits ?\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/184514177/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612653748","html_url":"https://github.com/apache/storm/issues/5110#issuecomment-2612653748","issue_url":"https://api.github.com/repos/apache/storm/issues/5110","id":2612653748,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2NTM3NDg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-16T04:35:32Z","updated_at":"2025-01-24T14:24:14Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user hustfxj commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/1081#issuecomment-184514177\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/1081#issuecomment-184514177</a></p>\n\n<p>    @revans2 @abhishekagarwal87  can you help review these commits ?</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612653748/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/184515933","html_url":"https://github.com/apache/storm/pull/1081#issuecomment-184515933","issue_url":"https://api.github.com/repos/apache/storm/issues/1081","id":184515933,"node_id":"MDEyOklzc3VlQ29tbWVudDE4NDUxNTkzMw==","user":{"login":"zhuoliu","id":11683054,"node_id":"MDQ6VXNlcjExNjgzMDU0","avatar_url":"https://avatars.githubusercontent.com/u/11683054?v=4","gravatar_id":"","url":"https://api.github.com/users/zhuoliu","html_url":"https://github.com/zhuoliu","followers_url":"https://api.github.com/users/zhuoliu/followers","following_url":"https://api.github.com/users/zhuoliu/following{/other_user}","gists_url":"https://api.github.com/users/zhuoliu/gists{/gist_id}","starred_url":"https://api.github.com/users/zhuoliu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zhuoliu/subscriptions","organizations_url":"https://api.github.com/users/zhuoliu/orgs","repos_url":"https://api.github.com/users/zhuoliu/repos","events_url":"https://api.github.com/users/zhuoliu/events{/privacy}","received_events_url":"https://api.github.com/users/zhuoliu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-02-16T04:47:03Z","updated_at":"2016-02-16T04:47:03Z","author_association":"NONE","body":"We would also like @knusbaum to review this one.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/184515933/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]