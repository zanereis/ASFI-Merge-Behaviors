[{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2253523584","html_url":"https://github.com/apache/accumulo/issues/4246#issuecomment-2253523584","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4246","id":2253523584,"node_id":"IC_kwDOACaFSM6GUgqA","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-07-26T21:21:02Z","updated_at":"2024-07-26T21:21:02Z","author_association":"CONTRIBUTOR","body":"> What's the implication of a failure here. Does the user have to retry their fate transaction? If so, I'm not sure we want that.\r\n\r\nYeah something would probably blow up.  So we could make the MetaFateStore have the same behavior of retrying 5 times and fail and then add the test for it.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2253523584/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2253554034","html_url":"https://github.com/apache/accumulo/issues/4534#issuecomment-2253554034","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4534","id":2253554034,"node_id":"IC_kwDOACaFSM6GUoFy","user":{"login":"cshannon","id":123009,"node_id":"MDQ6VXNlcjEyMzAwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/123009?v=4","gravatar_id":"","url":"https://api.github.com/users/cshannon","html_url":"https://github.com/cshannon","followers_url":"https://api.github.com/users/cshannon/followers","following_url":"https://api.github.com/users/cshannon/following{/other_user}","gists_url":"https://api.github.com/users/cshannon/gists{/gist_id}","starred_url":"https://api.github.com/users/cshannon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cshannon/subscriptions","organizations_url":"https://api.github.com/users/cshannon/orgs","repos_url":"https://api.github.com/users/cshannon/repos","events_url":"https://api.github.com/users/cshannon/events{/privacy}","received_events_url":"https://api.github.com/users/cshannon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-07-26T21:49:20Z","updated_at":"2024-07-26T21:49:20Z","author_association":"CONTRIBUTOR","body":"I'm working on a PR to split up the metrics by type as that makes the most sense and is the most flexible. I've been trying out a few things and i've decided i think the best thing is to just add add a tag for the fate instanceType to the existing metrics for the status. By using a tag a user can filter by the tag type to get only metrics on a certain instance type or aggregate them and get a total. There's some metrics ITs already that verify the metrics get published but not values. I can add some basic tests to assert that the fate ops are increasing but it's somewhat non-deterministic with fate when things run and finish. Also some metrics only apply to ZK and not the Accumulo store.\r\n\r\nI should have something this weekend (at least a draft PR but hopefully something finished as the changes are not too large)","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2253554034/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2253646301","html_url":"https://github.com/apache/accumulo/issues/4710#issuecomment-2253646301","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4710","id":2253646301,"node_id":"IC_kwDOACaFSM6GU-nd","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-07-26T23:32:34Z","updated_at":"2024-07-26T23:32:34Z","author_association":"CONTRIBUTOR","body":"I wanted to reuse some code in the CompactionIT with FlakyAmple. I was looking into taking a different strategy for this rather than extending classes.  Looked in to using junit Tags and TestInfo, was hoping I could annotate a test method with `@Tag(FLAKY_AMPLE)`, but I have not completely figured out how to do this in a way that is not disruptive.  ","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2253646301/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2253731405","html_url":"https://github.com/apache/accumulo/pull/4763#issuecomment-2253731405","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4763","id":2253731405,"node_id":"IC_kwDOACaFSM6GVTZN","user":{"login":"ddanielr","id":12480877,"node_id":"MDQ6VXNlcjEyNDgwODc3","avatar_url":"https://avatars.githubusercontent.com/u/12480877?v=4","gravatar_id":"","url":"https://api.github.com/users/ddanielr","html_url":"https://github.com/ddanielr","followers_url":"https://api.github.com/users/ddanielr/followers","following_url":"https://api.github.com/users/ddanielr/following{/other_user}","gists_url":"https://api.github.com/users/ddanielr/gists{/gist_id}","starred_url":"https://api.github.com/users/ddanielr/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ddanielr/subscriptions","organizations_url":"https://api.github.com/users/ddanielr/orgs","repos_url":"https://api.github.com/users/ddanielr/repos","events_url":"https://api.github.com/users/ddanielr/events{/privacy}","received_events_url":"https://api.github.com/users/ddanielr/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-07-27T03:34:47Z","updated_at":"2024-07-27T03:34:47Z","author_association":"CONTRIBUTOR","body":"One nice side-effect of the accumulo-service refactor is that now the specific service process name is returned to the user, not just the service type: \r\n\r\n```\r\n./accumulo-cluster start-servers --all\r\n...\r\nStarting sserver_default on localhost\r\nStarting compaction-coordinator on localhost\r\nStarting compactor_q1 on localhost\r\nStarting compactor_q2 on localhost\r\n```","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2253731405/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2253813558","html_url":"https://github.com/apache/accumulo/pull/4471#issuecomment-2253813558","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4471","id":2253813558,"node_id":"IC_kwDOACaFSM6GVnc2","user":{"login":"ddanielr","id":12480877,"node_id":"MDQ6VXNlcjEyNDgwODc3","avatar_url":"https://avatars.githubusercontent.com/u/12480877?v=4","gravatar_id":"","url":"https://api.github.com/users/ddanielr","html_url":"https://github.com/ddanielr","followers_url":"https://api.github.com/users/ddanielr/followers","following_url":"https://api.github.com/users/ddanielr/following{/other_user}","gists_url":"https://api.github.com/users/ddanielr/gists{/gist_id}","starred_url":"https://api.github.com/users/ddanielr/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ddanielr/subscriptions","organizations_url":"https://api.github.com/users/ddanielr/orgs","repos_url":"https://api.github.com/users/ddanielr/repos","events_url":"https://api.github.com/users/ddanielr/events{/privacy}","received_events_url":"https://api.github.com/users/ddanielr/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-07-27T06:15:35Z","updated_at":"2024-07-27T06:15:35Z","author_association":"CONTRIBUTOR","body":"Closed in favor of #4699 ","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2253813558/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2253815201","html_url":"https://github.com/apache/accumulo/pull/4535#issuecomment-2253815201","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4535","id":2253815201,"node_id":"IC_kwDOACaFSM6GVn2h","user":{"login":"ddanielr","id":12480877,"node_id":"MDQ6VXNlcjEyNDgwODc3","avatar_url":"https://avatars.githubusercontent.com/u/12480877?v=4","gravatar_id":"","url":"https://api.github.com/users/ddanielr","html_url":"https://github.com/ddanielr","followers_url":"https://api.github.com/users/ddanielr/followers","following_url":"https://api.github.com/users/ddanielr/following{/other_user}","gists_url":"https://api.github.com/users/ddanielr/gists{/gist_id}","starred_url":"https://api.github.com/users/ddanielr/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ddanielr/subscriptions","organizations_url":"https://api.github.com/users/ddanielr/orgs","repos_url":"https://api.github.com/users/ddanielr/repos","events_url":"https://api.github.com/users/ddanielr/events{/privacy}","received_events_url":"https://api.github.com/users/ddanielr/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-07-27T06:17:59Z","updated_at":"2024-07-27T06:17:59Z","author_association":"CONTRIBUTOR","body":"Closing this in favor of #4768 which contains these changes and implements constants for threadpool names ","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2253815201/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2254212009","html_url":"https://github.com/apache/accumulo/pull/4772#issuecomment-2254212009","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4772","id":2254212009,"node_id":"IC_kwDOACaFSM6GXIup","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-07-27T17:48:09Z","updated_at":"2024-07-27T18:39:19Z","author_association":"CONTRIBUTOR","body":"I looked for alternative ways to share code in test like this PR is doing w/o using the inheritance pattern.  Found the following strategy may work, but it would be a large (in terms of diffs) change to the Accumulo code base and not sure if its worthwhile.\r\n\r\n  1. Modify [AccumuloClusterHarness.setupCluster()](https://github.com/apache/accumulo/blob/12c6433acb4b734e654594e76293710a5e4bd17e/test/src/main/java/org/apache/accumulo/harness/AccumuloClusterHarness.java#L114) to be `AccumuloClusterHarness.setupCluster(TestInfo testInfo)` where [TestInfo](AccumuloClusterHarness.setupCluster()) would be injected by junit.\r\n  2. Modify [MiniClusterConfigurationCallback](https://github.com/apache/accumulo/blob/12c6433acb4b734e654594e76293710a5e4bd17e/test/src/main/java/org/apache/accumulo/harness/MiniClusterConfigurationCallback.java#L42) to accept a TestInfo object.\r\n  3. Update all the code that calls MiniClusterConfigurationCallback to pass the TestInfo object through.\r\n  4. Add `@Tag(\"FLAKY_AMPLE\")` to a subset of test methods in CompactionIT\r\n  5. When CompactionIT executes cluster configuration it would have access to the tags for the current running test and could look for the `FLAKY_AMPLE` tag and when it sees it configure the Flaky manager and tserver.\r\n\r\nWith the above strategy could avoid the inheritance pattern this PR introduces.  Not sure if its worthwhile though.  Step 3 above would change a ton of code.\r\n\r\nUpdate: Do not plan to make any changes related to this in this PR.  Was just sharing something I found.  Was wondering if opening a follow on issue would be worthwhile.  Decided its not unless I can think of other use cases for junit tags influencing cluster setup beside this FlakyAmple use case.  Can not think of any at the moment.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2254212009/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2254237926","html_url":"https://github.com/apache/accumulo/pull/4772#issuecomment-2254237926","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4772","id":2254237926,"node_id":"IC_kwDOACaFSM6GXPDm","user":{"login":"cshannon","id":123009,"node_id":"MDQ6VXNlcjEyMzAwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/123009?v=4","gravatar_id":"","url":"https://api.github.com/users/cshannon","html_url":"https://github.com/cshannon","followers_url":"https://api.github.com/users/cshannon/followers","following_url":"https://api.github.com/users/cshannon/following{/other_user}","gists_url":"https://api.github.com/users/cshannon/gists{/gist_id}","starred_url":"https://api.github.com/users/cshannon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cshannon/subscriptions","organizations_url":"https://api.github.com/users/cshannon/orgs","repos_url":"https://api.github.com/users/cshannon/repos","events_url":"https://api.github.com/users/cshannon/events{/privacy}","received_events_url":"https://api.github.com/users/cshannon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-07-27T19:46:58Z","updated_at":"2024-07-27T19:46:58Z","author_association":"CONTRIBUTOR","body":"> Update: Do not plan to make any changes related to this in this PR. Was just sharing something I found. Was wondering if opening a follow on issue would be worthwhile. Decided its not unless I can think of other use cases for junit tags influencing cluster setup beside this FlakyAmple use case. Can not think of any at the moment.\r\n\r\nI agree, I don't think we need to make that change now unless a use case comes up\r\n","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2254237926/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2254558665","html_url":"https://github.com/apache/accumulo/pull/4763#issuecomment-2254558665","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4763","id":2254558665,"node_id":"IC_kwDOACaFSM6GYdXJ","user":{"login":"ddanielr","id":12480877,"node_id":"MDQ6VXNlcjEyNDgwODc3","avatar_url":"https://avatars.githubusercontent.com/u/12480877?v=4","gravatar_id":"","url":"https://api.github.com/users/ddanielr","html_url":"https://github.com/ddanielr","followers_url":"https://api.github.com/users/ddanielr/followers","following_url":"https://api.github.com/users/ddanielr/following{/other_user}","gists_url":"https://api.github.com/users/ddanielr/gists{/gist_id}","starred_url":"https://api.github.com/users/ddanielr/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ddanielr/subscriptions","organizations_url":"https://api.github.com/users/ddanielr/orgs","repos_url":"https://api.github.com/users/ddanielr/repos","events_url":"https://api.github.com/users/ddanielr/events{/privacy}","received_events_url":"https://api.github.com/users/ddanielr/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-07-28T15:35:23Z","updated_at":"2024-07-28T15:35:23Z","author_association":"CONTRIBUTOR","body":"@ctubbsii I believe I've addressed all the changes that were needed. ","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2254558665/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2254948362","html_url":"https://github.com/apache/accumulo/pull/4444#issuecomment-2254948362","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4444","id":2254948362,"node_id":"IC_kwDOACaFSM6GZ8gK","user":{"login":"ddanielr","id":12480877,"node_id":"MDQ6VXNlcjEyNDgwODc3","avatar_url":"https://avatars.githubusercontent.com/u/12480877?v=4","gravatar_id":"","url":"https://api.github.com/users/ddanielr","html_url":"https://github.com/ddanielr","followers_url":"https://api.github.com/users/ddanielr/followers","following_url":"https://api.github.com/users/ddanielr/following{/other_user}","gists_url":"https://api.github.com/users/ddanielr/gists{/gist_id}","starred_url":"https://api.github.com/users/ddanielr/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ddanielr/subscriptions","organizations_url":"https://api.github.com/users/ddanielr/orgs","repos_url":"https://api.github.com/users/ddanielr/repos","events_url":"https://api.github.com/users/ddanielr/events{/privacy}","received_events_url":"https://api.github.com/users/ddanielr/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-07-29T05:00:27Z","updated_at":"2024-07-29T05:00:27Z","author_association":"CONTRIBUTOR","body":"This can get closed. These changes were merged into 2.1 under #4763\n","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2254948362/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2254973750","html_url":"https://github.com/apache/accumulo/pull/4468#issuecomment-2254973750","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4468","id":2254973750,"node_id":"IC_kwDOACaFSM6GaCs2","user":{"login":"ctubbsii","id":1280725,"node_id":"MDQ6VXNlcjEyODA3MjU=","avatar_url":"https://avatars.githubusercontent.com/u/1280725?v=4","gravatar_id":"","url":"https://api.github.com/users/ctubbsii","html_url":"https://github.com/ctubbsii","followers_url":"https://api.github.com/users/ctubbsii/followers","following_url":"https://api.github.com/users/ctubbsii/following{/other_user}","gists_url":"https://api.github.com/users/ctubbsii/gists{/gist_id}","starred_url":"https://api.github.com/users/ctubbsii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ctubbsii/subscriptions","organizations_url":"https://api.github.com/users/ctubbsii/orgs","repos_url":"https://api.github.com/users/ctubbsii/repos","events_url":"https://api.github.com/users/ctubbsii/events{/privacy}","received_events_url":"https://api.github.com/users/ctubbsii/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-07-29T05:26:27Z","updated_at":"2024-07-29T05:26:27Z","author_association":"MEMBER","body":"I pushed the changes to this in commit bdb8ce9725e007435db55b438f577065fafb1151 to add options, keeping the behavior of GrepCommand, but defaulting to the previous behavior for any current user of GrepIterator directly.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2254973750/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2256877958","html_url":"https://github.com/apache/accumulo/pull/4380#issuecomment-2256877958","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4380","id":2256877958,"node_id":"IC_kwDOACaFSM6GhTmG","user":{"login":"DomGarguilo","id":47725857,"node_id":"MDQ6VXNlcjQ3NzI1ODU3","avatar_url":"https://avatars.githubusercontent.com/u/47725857?v=4","gravatar_id":"","url":"https://api.github.com/users/DomGarguilo","html_url":"https://github.com/DomGarguilo","followers_url":"https://api.github.com/users/DomGarguilo/followers","following_url":"https://api.github.com/users/DomGarguilo/following{/other_user}","gists_url":"https://api.github.com/users/DomGarguilo/gists{/gist_id}","starred_url":"https://api.github.com/users/DomGarguilo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DomGarguilo/subscriptions","organizations_url":"https://api.github.com/users/DomGarguilo/orgs","repos_url":"https://api.github.com/users/DomGarguilo/repos","events_url":"https://api.github.com/users/DomGarguilo/events{/privacy}","received_events_url":"https://api.github.com/users/DomGarguilo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-07-29T20:39:02Z","updated_at":"2024-07-29T20:39:02Z","author_association":"MEMBER","body":"> I think everything here is technically correct.\r\n> \r\n> However, I think the purpose of this class is to try to be more expressive, to be able to interact with time durations in a more natural high level way, rather than deal with the arithmetic and comparisons at a low level. I don't think the subtract and compareTo methods are helping at all, and might even make things worse because (at least for me) compareTo can be pretty opaque and I have to remind myself about how the operands relate to the sign.\r\n> \r\n> A higher level utility method, like `hasElapased(Duration)` can be done more efficiently, so fewer Duration objects are needed to be constructed, and can make things much more readable. A `reset()` method could also be added to make it easy to reuse the timer.\r\n> \r\n> Also, we don't need both OpTimer and NanoTime, and NanoTime could be renamed.\r\n\r\nConverted this PR to draft for now. I think these suggestions are good and I can open up a new PR to incorporate them at somepoint.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2256877958/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2257016863","html_url":"https://github.com/apache/accumulo/issues/3635#issuecomment-2257016863","issue_url":"https://api.github.com/repos/apache/accumulo/issues/3635","id":2257016863,"node_id":"IC_kwDOACaFSM6Gh1gf","user":{"login":"dlmarion","id":567911,"node_id":"MDQ6VXNlcjU2NzkxMQ==","avatar_url":"https://avatars.githubusercontent.com/u/567911?v=4","gravatar_id":"","url":"https://api.github.com/users/dlmarion","html_url":"https://github.com/dlmarion","followers_url":"https://api.github.com/users/dlmarion/followers","following_url":"https://api.github.com/users/dlmarion/following{/other_user}","gists_url":"https://api.github.com/users/dlmarion/gists{/gist_id}","starred_url":"https://api.github.com/users/dlmarion/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dlmarion/subscriptions","organizations_url":"https://api.github.com/users/dlmarion/orgs","repos_url":"https://api.github.com/users/dlmarion/repos","events_url":"https://api.github.com/users/dlmarion/events{/privacy}","received_events_url":"https://api.github.com/users/dlmarion/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-07-29T21:12:03Z","updated_at":"2024-07-29T21:12:03Z","author_association":"CONTRIBUTOR","body":"Closed by #4767","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2257016863/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2259073985","html_url":"https://github.com/apache/accumulo/pull/4742#issuecomment-2259073985","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4742","id":2259073985,"node_id":"IC_kwDOACaFSM6GprvB","user":{"login":"DomGarguilo","id":47725857,"node_id":"MDQ6VXNlcjQ3NzI1ODU3","avatar_url":"https://avatars.githubusercontent.com/u/47725857?v=4","gravatar_id":"","url":"https://api.github.com/users/DomGarguilo","html_url":"https://github.com/DomGarguilo","followers_url":"https://api.github.com/users/DomGarguilo/followers","following_url":"https://api.github.com/users/DomGarguilo/following{/other_user}","gists_url":"https://api.github.com/users/DomGarguilo/gists{/gist_id}","starred_url":"https://api.github.com/users/DomGarguilo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DomGarguilo/subscriptions","organizations_url":"https://api.github.com/users/DomGarguilo/orgs","repos_url":"https://api.github.com/users/DomGarguilo/repos","events_url":"https://api.github.com/users/DomGarguilo/events{/privacy}","received_events_url":"https://api.github.com/users/DomGarguilo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-07-30T19:38:11Z","updated_at":"2024-07-30T19:38:11Z","author_association":"MEMBER","body":"> it doesn't seem like it is used anywhere in 2.1 (were you planning to use it in another change?)\r\n\r\nI don't have anywhere specific in mind for this change in 2.1 but seems like moving forward it would be nice to have.\r\n\r\n> Assuming there's no substantial overhead cost for using Duration, I wonder if it would be cleaner to follow this up with removing the `getTimeInMillis()` method, and push the `toMillis()` calls into the calling code.\r\n\r\nThis seems like a good idea. I can look into what the overhead is for using Duration.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2259073985/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2259315138","html_url":"https://github.com/apache/accumulo/pull/4778#issuecomment-2259315138","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4778","id":2259315138,"node_id":"IC_kwDOACaFSM6GqmnC","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-07-30T22:31:48Z","updated_at":"2024-07-30T22:31:48Z","author_association":"CONTRIBUTOR","body":"Wanted to test changes to VisibilityFilter for #4748 and the existing test did not have good coverage.  Decided it would be good to improve the test in 2.1 and merge it forward.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2259315138/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2260731454","html_url":"https://github.com/apache/accumulo/pull/4742#issuecomment-2260731454","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4742","id":2260731454,"node_id":"IC_kwDOACaFSM6GwAY-","user":{"login":"DomGarguilo","id":47725857,"node_id":"MDQ6VXNlcjQ3NzI1ODU3","avatar_url":"https://avatars.githubusercontent.com/u/47725857?v=4","gravatar_id":"","url":"https://api.github.com/users/DomGarguilo","html_url":"https://github.com/DomGarguilo","followers_url":"https://api.github.com/users/DomGarguilo/followers","following_url":"https://api.github.com/users/DomGarguilo/following{/other_user}","gists_url":"https://api.github.com/users/DomGarguilo/gists{/gist_id}","starred_url":"https://api.github.com/users/DomGarguilo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DomGarguilo/subscriptions","organizations_url":"https://api.github.com/users/DomGarguilo/orgs","repos_url":"https://api.github.com/users/DomGarguilo/repos","events_url":"https://api.github.com/users/DomGarguilo/events{/privacy}","received_events_url":"https://api.github.com/users/DomGarguilo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-07-31T15:00:23Z","updated_at":"2024-07-31T15:00:23Z","author_association":"MEMBER","body":"I ran a benchmark and here are the results:\r\n```\r\nBenchmark                                   Mode  Cnt        Score       Error  Units\r\nTimeParserBenchmark.testNewMethod          thrpt    5  1295632.623 ±  8961.727  ops/s\r\nTimeParserBenchmark.testNewMethodDuration  thrpt    5  1359587.680 ± 33716.367  ops/s\r\nTimeParserBenchmark.testOldMethod          thrpt    5  1822320.742 ± 14720.405  ops/s\r\n```\r\n\r\n`testNewMethod` called `getDuration(str).toMillis()` for each input.\r\n`testNewMethodDuration` called `getDuration(str)` for each input.\r\n`testOldMethod` called the original `getTimeInMillis()` code for each input.\r\n\r\nI constructed the test data like this:\r\n```java\r\n    private static final String[] baseUnits = {\"d\", \"h\", \"m\", \"s\", \"ms\"};\r\n    private static final String[] baseValues = {\"1\", \"2\", \"3\", \"4\", \"5\", \"66\", \"777\", \"8888\", \"99999\"};\r\n\r\n    private static final List<String> testStrings = generateTestStrings();\r\n\r\n    private static List<String> generateTestStrings() {\r\n        List<String> result = new ArrayList<>();\r\n        for (String value : baseValues) {\r\n            for (String unit : baseUnits) {\r\n                result.add(value + unit);\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n```\r\n\r\nThere is a clear difference between the old and new methods. I am not sure whether this would cause any issues in practice though.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2260731454/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2260845586","html_url":"https://github.com/apache/accumulo/issues/4698#issuecomment-2260845586","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4698","id":2260845586,"node_id":"IC_kwDOACaFSM6GwcQS","user":{"login":"meatballspaghetti","id":69256191,"node_id":"MDQ6VXNlcjY5MjU2MTkx","avatar_url":"https://avatars.githubusercontent.com/u/69256191?v=4","gravatar_id":"","url":"https://api.github.com/users/meatballspaghetti","html_url":"https://github.com/meatballspaghetti","followers_url":"https://api.github.com/users/meatballspaghetti/followers","following_url":"https://api.github.com/users/meatballspaghetti/following{/other_user}","gists_url":"https://api.github.com/users/meatballspaghetti/gists{/gist_id}","starred_url":"https://api.github.com/users/meatballspaghetti/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/meatballspaghetti/subscriptions","organizations_url":"https://api.github.com/users/meatballspaghetti/orgs","repos_url":"https://api.github.com/users/meatballspaghetti/repos","events_url":"https://api.github.com/users/meatballspaghetti/events{/privacy}","received_events_url":"https://api.github.com/users/meatballspaghetti/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-07-31T15:52:47Z","updated_at":"2024-07-31T15:52:47Z","author_association":"CONTRIBUTOR","body":"I can look into this.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2260845586/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2260933790","html_url":"https://github.com/apache/accumulo/issues/4723#issuecomment-2260933790","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4723","id":2260933790,"node_id":"IC_kwDOACaFSM6Gwxye","user":{"login":"DomGarguilo","id":47725857,"node_id":"MDQ6VXNlcjQ3NzI1ODU3","avatar_url":"https://avatars.githubusercontent.com/u/47725857?v=4","gravatar_id":"","url":"https://api.github.com/users/DomGarguilo","html_url":"https://github.com/DomGarguilo","followers_url":"https://api.github.com/users/DomGarguilo/followers","following_url":"https://api.github.com/users/DomGarguilo/following{/other_user}","gists_url":"https://api.github.com/users/DomGarguilo/gists{/gist_id}","starred_url":"https://api.github.com/users/DomGarguilo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DomGarguilo/subscriptions","organizations_url":"https://api.github.com/users/DomGarguilo/orgs","repos_url":"https://api.github.com/users/DomGarguilo/repos","events_url":"https://api.github.com/users/DomGarguilo/events{/privacy}","received_events_url":"https://api.github.com/users/DomGarguilo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-07-31T16:39:55Z","updated_at":"2024-07-31T16:39:55Z","author_association":"MEMBER","body":"> But one way to fix this in the near term is to add these to the \"fixed properties\" list so that the generated documentation for them will correctly indicate that they require a restart.\r\n\r\nAddressed in #4780 ","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2260933790/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2263557243","html_url":"https://github.com/apache/accumulo/issues/4782#issuecomment-2263557243","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4782","id":2263557243,"node_id":"IC_kwDOACaFSM6G6yR7","user":{"login":"ddanielr","id":12480877,"node_id":"MDQ6VXNlcjEyNDgwODc3","avatar_url":"https://avatars.githubusercontent.com/u/12480877?v=4","gravatar_id":"","url":"https://api.github.com/users/ddanielr","html_url":"https://github.com/ddanielr","followers_url":"https://api.github.com/users/ddanielr/followers","following_url":"https://api.github.com/users/ddanielr/following{/other_user}","gists_url":"https://api.github.com/users/ddanielr/gists{/gist_id}","starred_url":"https://api.github.com/users/ddanielr/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ddanielr/subscriptions","organizations_url":"https://api.github.com/users/ddanielr/orgs","repos_url":"https://api.github.com/users/ddanielr/repos","events_url":"https://api.github.com/users/ddanielr/events{/privacy}","received_events_url":"https://api.github.com/users/ddanielr/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-01T17:11:37Z","updated_at":"2024-08-01T17:11:37Z","author_association":"CONTRIBUTOR","body":"Overall, I think this ticket needs some additional discussion before it can be worked. \r\n\r\nThe concept of a compaction queue is only used by external compactions which makes handling this output a bit interesting. \r\n \r\nSolving this may involve code that is exclusive to the `ec-admin` tool vs the `listcompactions` functionality in the shell. \r\n\r\nInstead of having this functionality split across two tools it might make more sense to create a `accumulo compaction` top level tool that contains the `listcompactions` functionality from the shell along with the current `ec-admin`functionality. \r\n\r\nThen in future accumulo versions, the logic can be removed while the usage pattern for compaction debugging remains the same. ","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2263557243/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2263580588","html_url":"https://github.com/apache/accumulo/issues/4782#issuecomment-2263580588","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4782","id":2263580588,"node_id":"IC_kwDOACaFSM6G63-s","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-01T17:22:56Z","updated_at":"2024-08-01T17:30:43Z","author_association":"CONTRIBUTOR","body":"The ability to get this summary information would be very useful functionality to have.\r\n\r\n> Instead of having this functionality split across two tools it might make more sense to create a accumulo compaction top level tool that contains the listcompactions functionality from the shell along with the current ec-admin functionality.\r\n\r\nThe  issue #4564 is related in that it will also need a way to provide users information about and control over compactions.  Having a top level `accumulo compaction` command that could cover existing uses cases and these new use case would be really nice.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2263580588/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2263639172","html_url":"https://github.com/apache/accumulo/issues/4765#issuecomment-2263639172","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4765","id":2263639172,"node_id":"IC_kwDOACaFSM6G7GSE","user":{"login":"meatballspaghetti","id":69256191,"node_id":"MDQ6VXNlcjY5MjU2MTkx","avatar_url":"https://avatars.githubusercontent.com/u/69256191?v=4","gravatar_id":"","url":"https://api.github.com/users/meatballspaghetti","html_url":"https://github.com/meatballspaghetti","followers_url":"https://api.github.com/users/meatballspaghetti/followers","following_url":"https://api.github.com/users/meatballspaghetti/following{/other_user}","gists_url":"https://api.github.com/users/meatballspaghetti/gists{/gist_id}","starred_url":"https://api.github.com/users/meatballspaghetti/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/meatballspaghetti/subscriptions","organizations_url":"https://api.github.com/users/meatballspaghetti/orgs","repos_url":"https://api.github.com/users/meatballspaghetti/repos","events_url":"https://api.github.com/users/meatballspaghetti/events{/privacy}","received_events_url":"https://api.github.com/users/meatballspaghetti/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-01T17:54:32Z","updated_at":"2024-08-01T17:54:32Z","author_association":"CONTRIBUTOR","body":"I can look into this.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2263639172/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2263647852","html_url":"https://github.com/apache/accumulo/pull/4524#issuecomment-2263647852","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4524","id":2263647852,"node_id":"IC_kwDOACaFSM6G7IZs","user":{"login":"kevinrr888","id":43969518,"node_id":"MDQ6VXNlcjQzOTY5NTE4","avatar_url":"https://avatars.githubusercontent.com/u/43969518?v=4","gravatar_id":"","url":"https://api.github.com/users/kevinrr888","html_url":"https://github.com/kevinrr888","followers_url":"https://api.github.com/users/kevinrr888/followers","following_url":"https://api.github.com/users/kevinrr888/following{/other_user}","gists_url":"https://api.github.com/users/kevinrr888/gists{/gist_id}","starred_url":"https://api.github.com/users/kevinrr888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kevinrr888/subscriptions","organizations_url":"https://api.github.com/users/kevinrr888/orgs","repos_url":"https://api.github.com/users/kevinrr888/repos","events_url":"https://api.github.com/users/kevinrr888/events{/privacy}","received_events_url":"https://api.github.com/users/kevinrr888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-01T17:58:57Z","updated_at":"2024-08-01T17:58:57Z","author_association":"MEMBER","body":"@keith-turner - Addressed all review comments, this PR is ready for re-review. \r\n\r\nSee new commit bd1f17472c8d289878e19d7121f9fc9347e95596\r\n\r\nI also fixed FateStoreIT to work with the new impl of createAndReserve(). A method was deleted in 6760035608387ae537af7050106c9645aac19aae that was no longer used which FateStoreIT relied on. Upon fixing this test, noticed that the original impl of createAndReserve expected an error to be thrown in a certain situation, but in the new implementation, an empty optional was returned instead. Fixed the new impl to match the previous impl for this case. This meant changing UFS.createAndReserve and MFS.createAndReserve. \r\n\r\nAlso verified existing Fate tests still pass: ZooMutatorIT,FateMutatorImplIT,UserFateStoreIT,FateInterleavingIT,FateIT,FateOpsCommandsIT,ComprehensiveFlakyFateIT,DeleteRowsFlakyFateIT,ManagerRepoIT,MultipleStoresIT,FateStoreIT\r\nand verified sunny day tests still pass.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2263647852/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2263815711","html_url":"https://github.com/apache/accumulo/pull/4779#issuecomment-2263815711","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4779","id":2263815711,"node_id":"IC_kwDOACaFSM6G7xYf","user":{"login":"meatballspaghetti","id":69256191,"node_id":"MDQ6VXNlcjY5MjU2MTkx","avatar_url":"https://avatars.githubusercontent.com/u/69256191?v=4","gravatar_id":"","url":"https://api.github.com/users/meatballspaghetti","html_url":"https://github.com/meatballspaghetti","followers_url":"https://api.github.com/users/meatballspaghetti/followers","following_url":"https://api.github.com/users/meatballspaghetti/following{/other_user}","gists_url":"https://api.github.com/users/meatballspaghetti/gists{/gist_id}","starred_url":"https://api.github.com/users/meatballspaghetti/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/meatballspaghetti/subscriptions","organizations_url":"https://api.github.com/users/meatballspaghetti/orgs","repos_url":"https://api.github.com/users/meatballspaghetti/repos","events_url":"https://api.github.com/users/meatballspaghetti/events{/privacy}","received_events_url":"https://api.github.com/users/meatballspaghetti/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-01T19:30:17Z","updated_at":"2024-08-01T19:30:17Z","author_association":"CONTRIBUTOR","body":"> Changes look good. Could update the existing `getColumnVisibilityData(ArrayByteSequence cv)` javadoc to be consistent w/ these new methods.\r\n\r\nDone.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2263815711/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2263872681","html_url":"https://github.com/apache/accumulo/issues/4783#issuecomment-2263872681","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4783","id":2263872681,"node_id":"IC_kwDOACaFSM6G7_Sp","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-01T19:59:17Z","updated_at":"2024-08-01T19:59:17Z","author_association":"CONTRIBUTOR","body":"When looking at the heapdumps in jvisualvm would see 6.1 million concurrent hash map nodes as the most frequent object.  Analyzing those in a few ways it seemed that most of them were in a concurrent hash map in a hadoop config object that was referenced by the static cache. Seemed like each hadoop config object would have 1451 entries in the map.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2263872681/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2263885389","html_url":"https://github.com/apache/accumulo/issues/4783#issuecomment-2263885389","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4783","id":2263885389,"node_id":"IC_kwDOACaFSM6G8CZN","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-01T20:05:32Z","updated_at":"2024-08-01T20:05:32Z","author_association":"CONTRIBUTOR","body":"Did not set a milestone on this because not sure what action to take at the moment.  A problem may never happen w/ current code and the complexity of a potential fix would influence where it lands.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2263885389/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2264200071","html_url":"https://github.com/apache/accumulo/issues/4710#issuecomment-2264200071","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4710","id":2264200071,"node_id":"IC_kwDOACaFSM6G9POH","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-01T23:28:38Z","updated_at":"2024-08-01T23:28:38Z","author_association":"CONTRIBUTOR","body":"Ran the following with code coverage.\n\n```\nmvn clean -PskipQA -DskipTests=false -DskipITs=false -Dit.test=\"*FlakyAmple*IT,ManagerRepoIT\" -Dtest=nothing -DfailIfNoTests=false verify\n```\n\nand found the following.\n\n * Need to increase the coverage of unsplittable case by modifying ManagerRepoIT\n * Need to get coverage on CompactionCoordinator.compactionFailedForLevel\n * The following has no test at all CompactionDriver.cleanupTabletMetadata, will open an issue.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2264200071/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2264597696","html_url":"https://github.com/apache/accumulo/issues/2561#issuecomment-2264597696","issue_url":"https://api.github.com/repos/apache/accumulo/issues/2561","id":2264597696,"node_id":"IC_kwDOACaFSM6G-wTA","user":{"login":"ddanielr","id":12480877,"node_id":"MDQ6VXNlcjEyNDgwODc3","avatar_url":"https://avatars.githubusercontent.com/u/12480877?v=4","gravatar_id":"","url":"https://api.github.com/users/ddanielr","html_url":"https://github.com/ddanielr","followers_url":"https://api.github.com/users/ddanielr/followers","following_url":"https://api.github.com/users/ddanielr/following{/other_user}","gists_url":"https://api.github.com/users/ddanielr/gists{/gist_id}","starred_url":"https://api.github.com/users/ddanielr/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ddanielr/subscriptions","organizations_url":"https://api.github.com/users/ddanielr/orgs","repos_url":"https://api.github.com/users/ddanielr/repos","events_url":"https://api.github.com/users/ddanielr/events{/privacy}","received_events_url":"https://api.github.com/users/ddanielr/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-02T05:38:21Z","updated_at":"2024-08-02T05:38:21Z","author_association":"CONTRIBUTOR","body":"Somewhat related to #4782 ","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2264597696/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2265720850","html_url":"https://github.com/apache/accumulo/pull/4742#issuecomment-2265720850","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4742","id":2265720850,"node_id":"IC_kwDOACaFSM6HDCgS","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-02T16:09:28Z","updated_at":"2024-08-02T16:11:07Z","author_association":"CONTRIBUTOR","body":"> There is a clear difference between the old and new methods. I am not sure whether this would cause any issues in practice though.\r\n\r\nIt has the potential to cause issues if its called really frequently.  Using Duration object will reduce bugs, so should try to use it as much as possible.   If we find current code that is currently calling it really frequently we can either refactor that code to call it less frequently or if that is not possible look into adding  `long getDuration(Property p, TimeUnit unit)`  which should be similar in efficiency to the current getTimeInMillis but a slightly better API for code correctness.\r\n","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2265720850/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2265750660","html_url":"https://github.com/apache/accumulo/pull/4784#issuecomment-2265750660","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4784","id":2265750660,"node_id":"IC_kwDOACaFSM6HDJyE","user":{"login":"DomGarguilo","id":47725857,"node_id":"MDQ6VXNlcjQ3NzI1ODU3","avatar_url":"https://avatars.githubusercontent.com/u/47725857?v=4","gravatar_id":"","url":"https://api.github.com/users/DomGarguilo","html_url":"https://github.com/DomGarguilo","followers_url":"https://api.github.com/users/DomGarguilo/followers","following_url":"https://api.github.com/users/DomGarguilo/following{/other_user}","gists_url":"https://api.github.com/users/DomGarguilo/gists{/gist_id}","starred_url":"https://api.github.com/users/DomGarguilo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DomGarguilo/subscriptions","organizations_url":"https://api.github.com/users/DomGarguilo/orgs","repos_url":"https://api.github.com/users/DomGarguilo/repos","events_url":"https://api.github.com/users/DomGarguilo/events{/privacy}","received_events_url":"https://api.github.com/users/DomGarguilo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-02T16:28:08Z","updated_at":"2024-08-02T16:28:08Z","author_association":"MEMBER","body":"The past commits (cb58770 and 0b644db) made the following changes:\r\n* remove the `start()` and `stop()` methods\r\n    * This allows us to remove some of the member variables and just use the static `startNew()` method for object creation\r\n* replace the `reset()` method with `restart()`\r\n    * this combines the reset and start functionality for similicity\r\n* remove `toString()`\r\n    * this was removed because without the `stop()` method, the time will keep running. This might be an issue if we want to use the timers value and also print it because they would differ slightly in time elapsed since the timer keeps running between calls. The user can just print the numeric value after calling `elapsed()`","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2265750660/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2265769401","html_url":"https://github.com/apache/accumulo/pull/4784#issuecomment-2265769401","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4784","id":2265769401,"node_id":"IC_kwDOACaFSM6HDOW5","user":{"login":"DomGarguilo","id":47725857,"node_id":"MDQ6VXNlcjQ3NzI1ODU3","avatar_url":"https://avatars.githubusercontent.com/u/47725857?v=4","gravatar_id":"","url":"https://api.github.com/users/DomGarguilo","html_url":"https://github.com/DomGarguilo","followers_url":"https://api.github.com/users/DomGarguilo/followers","following_url":"https://api.github.com/users/DomGarguilo/following{/other_user}","gists_url":"https://api.github.com/users/DomGarguilo/gists{/gist_id}","starred_url":"https://api.github.com/users/DomGarguilo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DomGarguilo/subscriptions","organizations_url":"https://api.github.com/users/DomGarguilo/orgs","repos_url":"https://api.github.com/users/DomGarguilo/repos","events_url":"https://api.github.com/users/DomGarguilo/events{/privacy}","received_events_url":"https://api.github.com/users/DomGarguilo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-02T16:39:45Z","updated_at":"2024-08-02T16:39:45Z","author_association":"MEMBER","body":"I am trying to think of the best course of action for merging this up and making usage more consistent across branches.\r\n\r\nShould we look for places that, currently NanoTime, is being used in main and make use of this new Timer object in those spots here in 2.1?\r\n\r\nIt seems like this would make things easier to merge up and also make things more consistent but I am not sure if its worth the disruption to 2.1 code or not.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2265769401/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2265808825","html_url":"https://github.com/apache/accumulo/pull/4784#issuecomment-2265808825","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4784","id":2265808825,"node_id":"IC_kwDOACaFSM6HDX-5","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-02T17:04:50Z","updated_at":"2024-08-02T17:04:50Z","author_association":"CONTRIBUTOR","body":"> I am trying to think of the best course of action for merging this up and making usage more consistent across branches.\r\n\r\nIMO it would be best to minimize refactoring in 2.1.  Could merge these changes up to elasticity, then circle back to main and start doing a wider to refactor to use this new class more broadly.  If any bugs are found during that refactor then could fix those in 2.1.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2265808825/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2265901992","html_url":"https://github.com/apache/accumulo/issues/4777#issuecomment-2265901992","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4777","id":2265901992,"node_id":"IC_kwDOACaFSM6HDuuo","user":{"login":"DomGarguilo","id":47725857,"node_id":"MDQ6VXNlcjQ3NzI1ODU3","avatar_url":"https://avatars.githubusercontent.com/u/47725857?v=4","gravatar_id":"","url":"https://api.github.com/users/DomGarguilo","html_url":"https://github.com/DomGarguilo","followers_url":"https://api.github.com/users/DomGarguilo/followers","following_url":"https://api.github.com/users/DomGarguilo/following{/other_user}","gists_url":"https://api.github.com/users/DomGarguilo/gists{/gist_id}","starred_url":"https://api.github.com/users/DomGarguilo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DomGarguilo/subscriptions","organizations_url":"https://api.github.com/users/DomGarguilo/orgs","repos_url":"https://api.github.com/users/DomGarguilo/repos","events_url":"https://api.github.com/users/DomGarguilo/events{/privacy}","received_events_url":"https://api.github.com/users/DomGarguilo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-02T18:10:58Z","updated_at":"2024-08-02T18:10:58Z","author_association":"MEMBER","body":"Closing via #4784","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2265901992/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2266058704","html_url":"https://github.com/apache/accumulo/pull/4524#issuecomment-2266058704","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4524","id":2266058704,"node_id":"IC_kwDOACaFSM6HEU_Q","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-02T20:01:20Z","updated_at":"2024-08-02T20:01:20Z","author_association":"CONTRIBUTOR","body":"I am finally looking through the test changes right now.   Everything else looks good. ","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2266058704/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":1,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2266126853","html_url":"https://github.com/apache/accumulo/pull/4780#issuecomment-2266126853","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4780","id":2266126853,"node_id":"IC_kwDOACaFSM6HEloF","user":{"login":"ddanielr","id":12480877,"node_id":"MDQ6VXNlcjEyNDgwODc3","avatar_url":"https://avatars.githubusercontent.com/u/12480877?v=4","gravatar_id":"","url":"https://api.github.com/users/ddanielr","html_url":"https://github.com/ddanielr","followers_url":"https://api.github.com/users/ddanielr/followers","following_url":"https://api.github.com/users/ddanielr/following{/other_user}","gists_url":"https://api.github.com/users/ddanielr/gists{/gist_id}","starred_url":"https://api.github.com/users/ddanielr/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ddanielr/subscriptions","organizations_url":"https://api.github.com/users/ddanielr/orgs","repos_url":"https://api.github.com/users/ddanielr/repos","events_url":"https://api.github.com/users/ddanielr/events{/privacy}","received_events_url":"https://api.github.com/users/ddanielr/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-02T20:48:14Z","updated_at":"2024-08-02T20:48:14Z","author_association":"CONTRIBUTOR","body":"This doc update should be applied to the website as part of the 2.1.3 release. \r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2266126853/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2269018927","html_url":"https://github.com/apache/accumulo/issues/4246#issuecomment-2269018927","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4246","id":2269018927,"node_id":"IC_kwDOACaFSM6HPnsv","user":{"login":"dlmarion","id":567911,"node_id":"MDQ6VXNlcjU2NzkxMQ==","avatar_url":"https://avatars.githubusercontent.com/u/567911?v=4","gravatar_id":"","url":"https://api.github.com/users/dlmarion","html_url":"https://github.com/dlmarion","followers_url":"https://api.github.com/users/dlmarion/followers","following_url":"https://api.github.com/users/dlmarion/following{/other_user}","gists_url":"https://api.github.com/users/dlmarion/gists{/gist_id}","starred_url":"https://api.github.com/users/dlmarion/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dlmarion/subscriptions","organizations_url":"https://api.github.com/users/dlmarion/orgs","repos_url":"https://api.github.com/users/dlmarion/repos","events_url":"https://api.github.com/users/dlmarion/events{/privacy}","received_events_url":"https://api.github.com/users/dlmarion/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-05T12:59:17Z","updated_at":"2024-08-05T12:59:17Z","author_association":"CONTRIBUTOR","body":"> > What's the implication of a failure here. Does the user have to retry their fate transaction? If so, I'm not sure we want that.\r\n> \r\n> Yeah something would probably blow up. So we could make the MetaFateStore have the same behavior of retrying 5 times and fail and then add the test for it.\r\n\r\nSo, it sounds like in either case the user, or calling code, has to handle the failure. I'm thinking we should either:\r\n\r\n1. Make the retry limit infinite (and not throw an exception that has to be handled) if the only reason for a duplicate could be a UUID collision. This is unlikely to happen in the first place, and if it does happen on the first call the probability of it happening again is even smaller, right?\r\n\r\n2. Or, just remove the retry entirely and let the user (or calling code) try again.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2269018927/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2269134542","html_url":"https://github.com/apache/accumulo/issues/4246#issuecomment-2269134542","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4246","id":2269134542,"node_id":"IC_kwDOACaFSM6HQD7O","user":{"login":"dlmarion","id":567911,"node_id":"MDQ6VXNlcjU2NzkxMQ==","avatar_url":"https://avatars.githubusercontent.com/u/567911?v=4","gravatar_id":"","url":"https://api.github.com/users/dlmarion","html_url":"https://github.com/dlmarion","followers_url":"https://api.github.com/users/dlmarion/followers","following_url":"https://api.github.com/users/dlmarion/following{/other_user}","gists_url":"https://api.github.com/users/dlmarion/gists{/gist_id}","starred_url":"https://api.github.com/users/dlmarion/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dlmarion/subscriptions","organizations_url":"https://api.github.com/users/dlmarion/orgs","repos_url":"https://api.github.com/users/dlmarion/repos","events_url":"https://api.github.com/users/dlmarion/events{/privacy}","received_events_url":"https://api.github.com/users/dlmarion/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-05T13:52:25Z","updated_at":"2024-08-05T13:52:25Z","author_association":"CONTRIBUTOR","body":"> The MetaFateStore does not retry and does not have a test for the case of a collision.\r\n\r\nI think it does, I think it retries forever at https://github.com/apache/accumulo/blob/elasticity/core/src/main/java/org/apache/accumulo/core/fate/MetaFateStore.java#L92","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2269134542/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2269318803","html_url":"https://github.com/apache/accumulo/pull/4787#issuecomment-2269318803","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4787","id":2269318803,"node_id":"IC_kwDOACaFSM6HQw6T","user":{"login":"kevinrr888","id":43969518,"node_id":"MDQ6VXNlcjQzOTY5NTE4","avatar_url":"https://avatars.githubusercontent.com/u/43969518?v=4","gravatar_id":"","url":"https://api.github.com/users/kevinrr888","html_url":"https://github.com/kevinrr888","followers_url":"https://api.github.com/users/kevinrr888/followers","following_url":"https://api.github.com/users/kevinrr888/following{/other_user}","gists_url":"https://api.github.com/users/kevinrr888/gists{/gist_id}","starred_url":"https://api.github.com/users/kevinrr888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kevinrr888/subscriptions","organizations_url":"https://api.github.com/users/kevinrr888/orgs","repos_url":"https://api.github.com/users/kevinrr888/repos","events_url":"https://api.github.com/users/kevinrr888/events{/privacy}","received_events_url":"https://api.github.com/users/kevinrr888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-05T15:14:46Z","updated_at":"2024-08-05T15:14:46Z","author_association":"MEMBER","body":"Hmm thinking about this some more. Wondering if it would be better if we had finite number of retries for both stores instead of infinite. The probability of collision is very low. \r\n\r\nI'm not sure that both stores are functioning the same under these new changes. The MFS will throw an error if any other KeeperException is seen other than NodeExistsException. The UFS will retry forever if an UNKNOWN status is received. So if there is something wrong and we keep receiving UNKNOWN, it will keep retrying. ","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2269318803/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2269330995","html_url":"https://github.com/apache/accumulo/pull/4787#issuecomment-2269330995","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4787","id":2269330995,"node_id":"IC_kwDOACaFSM6HQz4z","user":{"login":"dlmarion","id":567911,"node_id":"MDQ6VXNlcjU2NzkxMQ==","avatar_url":"https://avatars.githubusercontent.com/u/567911?v=4","gravatar_id":"","url":"https://api.github.com/users/dlmarion","html_url":"https://github.com/dlmarion","followers_url":"https://api.github.com/users/dlmarion/followers","following_url":"https://api.github.com/users/dlmarion/following{/other_user}","gists_url":"https://api.github.com/users/dlmarion/gists{/gist_id}","starred_url":"https://api.github.com/users/dlmarion/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dlmarion/subscriptions","organizations_url":"https://api.github.com/users/dlmarion/orgs","repos_url":"https://api.github.com/users/dlmarion/repos","events_url":"https://api.github.com/users/dlmarion/events{/privacy}","received_events_url":"https://api.github.com/users/dlmarion/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-05T15:20:39Z","updated_at":"2024-08-05T15:20:39Z","author_association":"CONTRIBUTOR","body":"> Hmm thinking about this some more. Wondering if it would be better if we had finite number of retries for both stores instead of infinite. The probability of collision is very low.\r\n> \r\n> I'm not sure that both stores are functioning the same under these new changes. The MFS will throw an error if any other KeeperException is seen other than NodeExistsException. The UFS will retry forever if an UNKNOWN status is received. So if there is something wrong and we keep receiving UNKNOWN, it will keep retrying.\r\n\r\nSo, I first went down the path of creating an IT to determine what error a user would receive when something like `TableOperations.create` failed when the number of retries in the UserFateStore would be exceeded. When I realized that MetaFateStore tried infinitely, I looked at how we could test for a duplicate FateId in the ConditionalMutationWriter. I didn't see an easy way to do that since the FateId is in the `row`.  If we could do that, then we could set a status for duplicate FateId, and continue to retry, and then fail on REJECTED or UNKNOWN. ","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2269330995/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2269333272","html_url":"https://github.com/apache/accumulo/pull/4788#issuecomment-2269333272","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4788","id":2269333272,"node_id":"IC_kwDOACaFSM6HQ0cY","user":{"login":"dlmarion","id":567911,"node_id":"MDQ6VXNlcjU2NzkxMQ==","avatar_url":"https://avatars.githubusercontent.com/u/567911?v=4","gravatar_id":"","url":"https://api.github.com/users/dlmarion","html_url":"https://github.com/dlmarion","followers_url":"https://api.github.com/users/dlmarion/followers","following_url":"https://api.github.com/users/dlmarion/following{/other_user}","gists_url":"https://api.github.com/users/dlmarion/gists{/gist_id}","starred_url":"https://api.github.com/users/dlmarion/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dlmarion/subscriptions","organizations_url":"https://api.github.com/users/dlmarion/orgs","repos_url":"https://api.github.com/users/dlmarion/repos","events_url":"https://api.github.com/users/dlmarion/events{/privacy}","received_events_url":"https://api.github.com/users/dlmarion/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-05T15:21:46Z","updated_at":"2024-08-05T15:21:46Z","author_association":"CONTRIBUTOR","body":"I made these changes because of this comment: https://github.com/apache/accumulo/pull/4784#discussion_r1704009688","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2269333272/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2269377613","html_url":"https://github.com/apache/accumulo/pull/4787#issuecomment-2269377613","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4787","id":2269377613,"node_id":"IC_kwDOACaFSM6HQ_RN","user":{"login":"kevinrr888","id":43969518,"node_id":"MDQ6VXNlcjQzOTY5NTE4","avatar_url":"https://avatars.githubusercontent.com/u/43969518?v=4","gravatar_id":"","url":"https://api.github.com/users/kevinrr888","html_url":"https://github.com/kevinrr888","followers_url":"https://api.github.com/users/kevinrr888/followers","following_url":"https://api.github.com/users/kevinrr888/following{/other_user}","gists_url":"https://api.github.com/users/kevinrr888/gists{/gist_id}","starred_url":"https://api.github.com/users/kevinrr888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kevinrr888/subscriptions","organizations_url":"https://api.github.com/users/kevinrr888/orgs","repos_url":"https://api.github.com/users/kevinrr888/repos","events_url":"https://api.github.com/users/kevinrr888/events{/privacy}","received_events_url":"https://api.github.com/users/kevinrr888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-05T15:42:53Z","updated_at":"2024-08-05T15:45:41Z","author_association":"MEMBER","body":"> I looked at how we could test for a duplicate FateId in the ConditionalMutationWriter. I didn't see an easy way to do that since the FateId is in the row. If we could do that, then we could set a status for duplicate FateId, and continue to retry, and then fail on REJECTED or UNKNOWN.\r\n\r\nAs it works now, it is testing for a duplicate FateId (while not directly looking at the FateId). It will be REJECTED if there is already a TStatus set for the FateId, and a TStatus is always set on creation of the FateId and persists throughout the existence of the FateId. Maybe I'm misunderstanding you?\r\n\r\nMaybe there is no issue with both stores retrying infinitely, but what would be the problem with both stores retrying only a finite number of times? This could be a larger than 5, but still finite. The probability of collision would be, for all intents and purposes, impossible. If it fails after these attempts, then there is a bigger problem and not a problem with collisions","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2269377613/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2269652821","html_url":"https://github.com/apache/accumulo/pull/4787#issuecomment-2269652821","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4787","id":2269652821,"node_id":"IC_kwDOACaFSM6HSCdV","user":{"login":"dlmarion","id":567911,"node_id":"MDQ6VXNlcjU2NzkxMQ==","avatar_url":"https://avatars.githubusercontent.com/u/567911?v=4","gravatar_id":"","url":"https://api.github.com/users/dlmarion","html_url":"https://github.com/dlmarion","followers_url":"https://api.github.com/users/dlmarion/followers","following_url":"https://api.github.com/users/dlmarion/following{/other_user}","gists_url":"https://api.github.com/users/dlmarion/gists{/gist_id}","starred_url":"https://api.github.com/users/dlmarion/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dlmarion/subscriptions","organizations_url":"https://api.github.com/users/dlmarion/orgs","repos_url":"https://api.github.com/users/dlmarion/repos","events_url":"https://api.github.com/users/dlmarion/events{/privacy}","received_events_url":"https://api.github.com/users/dlmarion/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-05T18:25:14Z","updated_at":"2024-08-05T18:25:14Z","author_association":"CONTRIBUTOR","body":"> > I looked at how we could test for a duplicate FateId in the ConditionalMutationWriter. I didn't see an easy way to do that since the FateId is in the row. If we could do that, then we could set a status for duplicate FateId, and continue to retry, and then fail on REJECTED or UNKNOWN.\r\n> \r\n> As it works now, it is testing for a duplicate FateId (while not directly looking at the FateId). It will be REJECTED if there is already a TStatus set for the FateId, and a TStatus is always set on creation of the FateId and persists throughout the existence of the FateId. Maybe I'm misunderstanding you?\r\n> \r\n> Maybe there is no issue with both stores retrying infinitely, but what would be the problem with both stores retrying only a finite number of times? This could be a larger than 5, but still finite. The probability of collision would be, for all intents and purposes, impossible. If it fails after these attempts, then there is a bigger problem and not a problem with collisions\r\n\r\nI think I mis-understood your comment in relation to the code. You are saying that we should continue to retry on REJECTED, but throw an exception on UNKNOWN?","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2269652821/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2269661769","html_url":"https://github.com/apache/accumulo/pull/4787#issuecomment-2269661769","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4787","id":2269661769,"node_id":"IC_kwDOACaFSM6HSEpJ","user":{"login":"kevinrr888","id":43969518,"node_id":"MDQ6VXNlcjQzOTY5NTE4","avatar_url":"https://avatars.githubusercontent.com/u/43969518?v=4","gravatar_id":"","url":"https://api.github.com/users/kevinrr888","html_url":"https://github.com/kevinrr888","followers_url":"https://api.github.com/users/kevinrr888/followers","following_url":"https://api.github.com/users/kevinrr888/following{/other_user}","gists_url":"https://api.github.com/users/kevinrr888/gists{/gist_id}","starred_url":"https://api.github.com/users/kevinrr888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kevinrr888/subscriptions","organizations_url":"https://api.github.com/users/kevinrr888/orgs","repos_url":"https://api.github.com/users/kevinrr888/repos","events_url":"https://api.github.com/users/kevinrr888/events{/privacy}","received_events_url":"https://api.github.com/users/kevinrr888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-05T18:30:31Z","updated_at":"2024-08-05T18:30:31Z","author_association":"MEMBER","body":"I'm just wondering if it would be better/safer to keep a finite number of retries and maybe change MFS to be a finite number of retries as well. It should still retry on UNKNOWN or REJECTED for UFS","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2269661769/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2269688896","html_url":"https://github.com/apache/accumulo/pull/4787#issuecomment-2269688896","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4787","id":2269688896,"node_id":"IC_kwDOACaFSM6HSLRA","user":{"login":"kevinrr888","id":43969518,"node_id":"MDQ6VXNlcjQzOTY5NTE4","avatar_url":"https://avatars.githubusercontent.com/u/43969518?v=4","gravatar_id":"","url":"https://api.github.com/users/kevinrr888","html_url":"https://github.com/kevinrr888","followers_url":"https://api.github.com/users/kevinrr888/followers","following_url":"https://api.github.com/users/kevinrr888/following{/other_user}","gists_url":"https://api.github.com/users/kevinrr888/gists{/gist_id}","starred_url":"https://api.github.com/users/kevinrr888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kevinrr888/subscriptions","organizations_url":"https://api.github.com/users/kevinrr888/orgs","repos_url":"https://api.github.com/users/kevinrr888/repos","events_url":"https://api.github.com/users/kevinrr888/events{/privacy}","received_events_url":"https://api.github.com/users/kevinrr888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-05T18:45:40Z","updated_at":"2024-08-05T18:45:40Z","author_association":"MEMBER","body":"My comment regarding the retry for UNKNOWN was just that if there is something wrong with the TabletServer or something else that would cause UNKNOWN to be received indefinitely, this current impl will retry forever.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2269688896/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2269808773","html_url":"https://github.com/apache/accumulo/pull/4787#issuecomment-2269808773","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4787","id":2269808773,"node_id":"IC_kwDOACaFSM6HSoiF","user":{"login":"dlmarion","id":567911,"node_id":"MDQ6VXNlcjU2NzkxMQ==","avatar_url":"https://avatars.githubusercontent.com/u/567911?v=4","gravatar_id":"","url":"https://api.github.com/users/dlmarion","html_url":"https://github.com/dlmarion","followers_url":"https://api.github.com/users/dlmarion/followers","following_url":"https://api.github.com/users/dlmarion/following{/other_user}","gists_url":"https://api.github.com/users/dlmarion/gists{/gist_id}","starred_url":"https://api.github.com/users/dlmarion/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dlmarion/subscriptions","organizations_url":"https://api.github.com/users/dlmarion/orgs","repos_url":"https://api.github.com/users/dlmarion/repos","events_url":"https://api.github.com/users/dlmarion/events{/privacy}","received_events_url":"https://api.github.com/users/dlmarion/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-05T19:57:23Z","updated_at":"2024-08-05T19:57:23Z","author_association":"CONTRIBUTOR","body":"I think with the changes in 5882212, the two implementations are consistent. They continue forever when there is a dupe, otherwise they throw an exception.\r\n\r\nWe can have a discussion about whether or not they should try forever and I'm wondering what they did previously. Because I think that's the answer as the calling code is already written to handle that.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2269808773/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2269857916","html_url":"https://github.com/apache/accumulo/pull/4787#issuecomment-2269857916","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4787","id":2269857916,"node_id":"IC_kwDOACaFSM6HS0h8","user":{"login":"kevinrr888","id":43969518,"node_id":"MDQ6VXNlcjQzOTY5NTE4","avatar_url":"https://avatars.githubusercontent.com/u/43969518?v=4","gravatar_id":"","url":"https://api.github.com/users/kevinrr888","html_url":"https://github.com/kevinrr888","followers_url":"https://api.github.com/users/kevinrr888/followers","following_url":"https://api.github.com/users/kevinrr888/following{/other_user}","gists_url":"https://api.github.com/users/kevinrr888/gists{/gist_id}","starred_url":"https://api.github.com/users/kevinrr888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kevinrr888/subscriptions","organizations_url":"https://api.github.com/users/kevinrr888/orgs","repos_url":"https://api.github.com/users/kevinrr888/repos","events_url":"https://api.github.com/users/kevinrr888/events{/privacy}","received_events_url":"https://api.github.com/users/kevinrr888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-05T20:26:44Z","updated_at":"2024-08-05T20:26:44Z","author_association":"MEMBER","body":"Apologies if any of my comments were confusing/misleading.\r\nMy only concern is retrying infinitely, not about the logic for retrying. It may be perfectly okay to retry infinitely, I'm just not sure and was throwing that out for discussion","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2269857916/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2269884659","html_url":"https://github.com/apache/accumulo/pull/4787#issuecomment-2269884659","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4787","id":2269884659,"node_id":"IC_kwDOACaFSM6HS7Dz","user":{"login":"dlmarion","id":567911,"node_id":"MDQ6VXNlcjU2NzkxMQ==","avatar_url":"https://avatars.githubusercontent.com/u/567911?v=4","gravatar_id":"","url":"https://api.github.com/users/dlmarion","html_url":"https://github.com/dlmarion","followers_url":"https://api.github.com/users/dlmarion/followers","following_url":"https://api.github.com/users/dlmarion/following{/other_user}","gists_url":"https://api.github.com/users/dlmarion/gists{/gist_id}","starred_url":"https://api.github.com/users/dlmarion/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dlmarion/subscriptions","organizations_url":"https://api.github.com/users/dlmarion/orgs","repos_url":"https://api.github.com/users/dlmarion/repos","events_url":"https://api.github.com/users/dlmarion/events{/privacy}","received_events_url":"https://api.github.com/users/dlmarion/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-05T20:43:38Z","updated_at":"2024-08-05T20:43:38Z","author_association":"CONTRIBUTOR","body":"> Apologies if any of my comments were confusing/misleading. My only concern is retrying infinitely, not about the logic for retrying. It may be perfectly okay to retry infinitely, I'm just not sure and was throwing that out for discussion\r\n\r\nAll good, I'm just trying to make sure things are handled consistently. Based on the old ZooStore implementation, which is now the MetaFateStore class, I think we should retry indefinitely in the UserFateStore. Reason being that the code that calls `Fate.startTransaction()` doesn't currently expect or handle an exception that would cause them to retry. The code that calls `Fate.startTransaction` expects success. If we want to limit the number of retries, then we should throw a `RetriesExceededException` or similar and modify the calling code to either retry or supply appropriate messaging to the user that their call to `TableOperations.compact` or similar has failed to start. ","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2269884659/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2269976732","html_url":"https://github.com/apache/accumulo/issues/4753#issuecomment-2269976732","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4753","id":2269976732,"node_id":"IC_kwDOACaFSM6HTRic","user":{"login":"DomGarguilo","id":47725857,"node_id":"MDQ6VXNlcjQ3NzI1ODU3","avatar_url":"https://avatars.githubusercontent.com/u/47725857?v=4","gravatar_id":"","url":"https://api.github.com/users/DomGarguilo","html_url":"https://github.com/DomGarguilo","followers_url":"https://api.github.com/users/DomGarguilo/followers","following_url":"https://api.github.com/users/DomGarguilo/following{/other_user}","gists_url":"https://api.github.com/users/DomGarguilo/gists{/gist_id}","starred_url":"https://api.github.com/users/DomGarguilo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DomGarguilo/subscriptions","organizations_url":"https://api.github.com/users/DomGarguilo/orgs","repos_url":"https://api.github.com/users/DomGarguilo/repos","events_url":"https://api.github.com/users/DomGarguilo/events{/privacy}","received_events_url":"https://api.github.com/users/DomGarguilo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-05T21:47:28Z","updated_at":"2024-08-05T21:47:28Z","author_association":"MEMBER","body":"It seems like a similar approach to what was done n #4207 could be done here except we done have streams. Trying something out now.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2269976732/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2271363148","html_url":"https://github.com/apache/accumulo/pull/4524#issuecomment-2271363148","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4524","id":2271363148,"node_id":"IC_kwDOACaFSM6HYkBM","user":{"login":"kevinrr888","id":43969518,"node_id":"MDQ6VXNlcjQzOTY5NTE4","avatar_url":"https://avatars.githubusercontent.com/u/43969518?v=4","gravatar_id":"","url":"https://api.github.com/users/kevinrr888","html_url":"https://github.com/kevinrr888","followers_url":"https://api.github.com/users/kevinrr888/followers","following_url":"https://api.github.com/users/kevinrr888/following{/other_user}","gists_url":"https://api.github.com/users/kevinrr888/gists{/gist_id}","starred_url":"https://api.github.com/users/kevinrr888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kevinrr888/subscriptions","organizations_url":"https://api.github.com/users/kevinrr888/orgs","repos_url":"https://api.github.com/users/kevinrr888/repos","events_url":"https://api.github.com/users/kevinrr888/events{/privacy}","received_events_url":"https://api.github.com/users/kevinrr888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-06T13:56:39Z","updated_at":"2024-08-06T14:02:26Z","author_association":"MEMBER","body":"@keith-turner I have compiled and wrote all the follow on issues for this to be merged. This covers all the issues I marked in this PR as `TODO 4131` and all the unresolved review comments. \r\n\r\n_**Here is a synopsis of the follow on issues I will create (so far - still need some questions answered):**_\r\n\r\n* Refactor MultipleStoresIT to function more similarly to other Fate tests like FateIT\r\n* Add FateKey toString() method\r\n* Move MetaFateStore to org.apache.accumulo.core.fate.zookeeper\r\n* Deprecate AbstractFateStore.createDummyLockID(): this includes creating a path in ZK for utilities to get a ZK lock, changing `admin fate fail` and `admin fate delete` commands to get a LockID at this path and no longer require the Manager to be down, and only use a LockID for a store if write operations are expected: the store should fail on write operations if writes are not expected.\r\n* Replace AFS.verifyReserved with a condition on the RESERVATION_COLUMN to verify that it is reserved\r\n* Make WorkFinder and the TransactionRunners critical to the Manager\r\n* Refactor how the RESERVATION_COLUMN works for UserFateStore: create/delete column on reserve/unreserve\r\n* Additional fate test case from https://github.com/apache/accumulo/pull/4524#discussion_r1702301996\r\n\r\n_**Here are some questions I still have:**_\r\n\r\n1) This was an existing TODO that you had marked in your \"distributed FATE\" WIP PR:\r\n```\r\n// TODO 4131\r\n// TODO make the max time a function of the number of concurrent callers, as the number of\r\n// concurrent callers increases then increase the max wait time\r\n// TODO could support signaling within this instance for known events\r\n// TODO made the maxWait low so this would be responsive... that may put a lot of load in\r\n// the case there are lots of things waiting...\r\n```\r\nI made the max wait = curr num callers in seconds. Does this address the first TODO? For the other two TODOs, I was not sure what was to be done, so I left them. Can these be safely deleted without creating follow on issue(s)? If follow on issues should be made, perhaps it would be best for you to write these or explain it here because I am not sure what should be done.\r\n\r\n2) Re one of your review comments:\r\n\"Not a change to make in this PR. Thinking if we push all of the Fate data into a single node it would be nice to use JSON. That would make the data stored in ZK more human readable and it would make it easier to serialize and de-serialize.\"\r\nCould you elaborate on what you mean by \"all of the Fate data into a single node\". By \"all\" do you mean the Repos, TxInfo, Status, Reservation, and FateKey would be in one ZK node? Writing the issue, I want to be sure I'm understanding correctly.\r\n\r\n3) Can https://github.com/apache/accumulo/pull/4524#discussion_r1663064467 be resolved? Or should an issue be made?\r\n\r\n4) There was a TODO regarding whether the ZooUtil.LockID was the best type for the lock. Should I make a follow on issue regarding this or is ZooUtil.LockID okay?\r\n\r\n5) Can this https://github.com/apache/accumulo/pull/4524#discussion_r1663064467 be resolved or should a follow on issue be made?\r\n\r\n6) Can these be resolved: https://github.com/apache/accumulo/pull/4524#discussion_r1670934639, https://github.com/apache/accumulo/pull/4524#discussion_r1695958819\r\n\r\n7) The DeadReservationCleaner runs every 30 seconds. Is this okay? Should this be longer? Shorter?\r\n\r\nOnce the above questions are answered, I can complete my full list of new follow-on issues. This will allow me to remove all the `TODO 4131` in this PR and all the comments in this PR can be resolved as all of these will be addressed or have a follow on issue created for them.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2271363148/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2272200690","html_url":"https://github.com/apache/accumulo/pull/4524#issuecomment-2272200690","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4524","id":2272200690,"node_id":"IC_kwDOACaFSM6Hbwfy","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-06T21:41:47Z","updated_at":"2024-08-06T21:44:06Z","author_association":"CONTRIBUTOR","body":"I resolved a few of the comments.\r\n\r\n> 4. There was a TODO regarding whether the ZooUtil.LockID was the best type for the lock. Should I make a follow on issue regarding this or is ZooUtil.LockID okay?\r\n\r\nThat type seems like the best existing type to use, so I do not think an issue is needed.\r\n\r\n> The DeadReservationCleaner runs every 30 seconds. Is this okay? Should this be longer? Shorter?\r\n\r\n30 seconds seems too short to me.  Would be doing a lot of work and usually never finding anything, should probably be longer maybe 2 or 3 minutes.\r\n\r\n> Could you elaborate on what you mean by \"all of the Fate data into a single node\". By \"all\" do you mean the Repos, TxInfo, Status, Reservation, and FateKey would be in one ZK node? Writing the issue, I want to be sure I'm understanding correctly.\r\n\r\nI was thinking of putting all data that is related to a single fate id into a single zk node.  This will allow atomic updates.  It will be slower (always have to rewrite all repos when adding/removing).  We are only using it for the metadata table.  So thinking it will make things more correct at the expense of speed but that tradeoff is good for metadata related fates.\r\n\r\n> Can these be safely deleted without creating follow on issue(s)? If follow on issues should be made, perhaps it would be best for you to write these or explain it here because I am not sure what should be done.\r\n\r\nYeah you can delete those.  I will look into it and open an issue if needed.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2272200690/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2272215995","html_url":"https://github.com/apache/accumulo/pull/4524#issuecomment-2272215995","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4524","id":2272215995,"node_id":"IC_kwDOACaFSM6Hb0O7","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-06T21:53:44Z","updated_at":"2024-08-06T21:53:44Z","author_association":"CONTRIBUTOR","body":"@kevinrr888 it seems like the only unresolved conversations are covered by your list of issues to open.  I just left those open for now.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2272215995/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2273932737","html_url":"https://github.com/apache/accumulo/pull/4524#issuecomment-2273932737","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4524","id":2273932737,"node_id":"IC_kwDOACaFSM6HiXXB","user":{"login":"kevinrr888","id":43969518,"node_id":"MDQ6VXNlcjQzOTY5NTE4","avatar_url":"https://avatars.githubusercontent.com/u/43969518?v=4","gravatar_id":"","url":"https://api.github.com/users/kevinrr888","html_url":"https://github.com/kevinrr888","followers_url":"https://api.github.com/users/kevinrr888/followers","following_url":"https://api.github.com/users/kevinrr888/following{/other_user}","gists_url":"https://api.github.com/users/kevinrr888/gists{/gist_id}","starred_url":"https://api.github.com/users/kevinrr888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kevinrr888/subscriptions","organizations_url":"https://api.github.com/users/kevinrr888/orgs","repos_url":"https://api.github.com/users/kevinrr888/repos","events_url":"https://api.github.com/users/kevinrr888/events{/privacy}","received_events_url":"https://api.github.com/users/kevinrr888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-07T17:08:06Z","updated_at":"2024-10-03T19:01:16Z","author_association":"MEMBER","body":"@keith-turner - The `TODO 4131` comments have now been removed and I believe this PR is ready to be merged :tada:\r\nI was planning on creating the follow-on issues after this is merged in as a batch of new issues.\r\n\r\nI will post a list of all the outstanding changes to be made below. The trivial ones, I will just make a PR for without creating an issue, the more involved follow-ons will be tracked in an issue.\r\n\r\n**_Here is the list of changes to be made:_**\r\n\r\n_To be tracked by issue:_\r\n- [x] Refactor MultipleStoresIT to function more similarly to other Fate tests like FateIT\r\n- [x] Deprecate AbstractFateStore.createDummyLockID(): this includes creating a path in ZK for utilities to get a ZK lock, changing `admin fate fail` and `admin fate delete` commands to get a LockID at this path and no longer require the Manager to be down, and only use a LockID for a store if write operations are expected: the store should fail on write operations if writes are not expected.\r\n- [x] A single ZK node for all fate data for each fate id\r\n- [x] Replace AFS.verifyReserved with a condition on the RESERVATION_COLUMN to verify that it is reserved\r\n- [x] Make WorkFinder and the TransactionRunners critical to the Manager\r\n- [x] Refactor how the RESERVATION_COLUMN works for UserFateStore: create/delete column on reserve/unreserve\r\n\r\n_Will do in one or a few small PRs:_\r\n- [x] Add a toString() to FateKey\r\n- [x] Move MetaFateStore to org.apache.accumulo.core.fate.zookeeper\r\n- [x] Periodic clean up of dead reservations should be increased from every 30 seconds to every few minutes\r\n- [x] Add additional fate test case suggested in https://github.com/apache/accumulo/pull/4524#discussion_r1702301996\r\n","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2273932737/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2274504243","html_url":"https://github.com/apache/accumulo/pull/4513#issuecomment-2274504243","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4513","id":2274504243,"node_id":"IC_kwDOACaFSM6Hki4z","user":{"login":"ctubbsii","id":1280725,"node_id":"MDQ6VXNlcjEyODA3MjU=","avatar_url":"https://avatars.githubusercontent.com/u/1280725?v=4","gravatar_id":"","url":"https://api.github.com/users/ctubbsii","html_url":"https://github.com/ctubbsii","followers_url":"https://api.github.com/users/ctubbsii/followers","following_url":"https://api.github.com/users/ctubbsii/following{/other_user}","gists_url":"https://api.github.com/users/ctubbsii/gists{/gist_id}","starred_url":"https://api.github.com/users/ctubbsii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ctubbsii/subscriptions","organizations_url":"https://api.github.com/users/ctubbsii/orgs","repos_url":"https://api.github.com/users/ctubbsii/repos","events_url":"https://api.github.com/users/ctubbsii/events{/privacy}","received_events_url":"https://api.github.com/users/ctubbsii/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-07T23:18:00Z","updated_at":"2024-08-07T23:18:00Z","author_association":"MEMBER","body":"Since ITs don't run in GitHub Actions by default, I kicked off a special build at https://github.com/apache/accumulo/actions/runs/10293114308/job/28488804041 to run it.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2274504243/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2274550473","html_url":"https://github.com/apache/accumulo/pull/4513#issuecomment-2274550473","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4513","id":2274550473,"node_id":"IC_kwDOACaFSM6HkuLJ","user":{"login":"ctubbsii","id":1280725,"node_id":"MDQ6VXNlcjEyODA3MjU=","avatar_url":"https://avatars.githubusercontent.com/u/1280725?v=4","gravatar_id":"","url":"https://api.github.com/users/ctubbsii","html_url":"https://github.com/ctubbsii","followers_url":"https://api.github.com/users/ctubbsii/followers","following_url":"https://api.github.com/users/ctubbsii/following{/other_user}","gists_url":"https://api.github.com/users/ctubbsii/gists{/gist_id}","starred_url":"https://api.github.com/users/ctubbsii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ctubbsii/subscriptions","organizations_url":"https://api.github.com/users/ctubbsii/orgs","repos_url":"https://api.github.com/users/ctubbsii/repos","events_url":"https://api.github.com/users/ctubbsii/events{/privacy}","received_events_url":"https://api.github.com/users/ctubbsii/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-07T23:58:21Z","updated_at":"2024-08-08T00:04:59Z","author_association":"MEMBER","body":"> Since ITs don't run in GitHub Actions by default, I kicked off a special build at https://github.com/apache/accumulo/actions/runs/10293114308/job/28488804041 to run it.\r\n\r\n~~The IT passes.~~ Nevermind. I'm not sure it worked correctly. Trying again with https://github.com/apache/accumulo/actions/runs/10293516758/job/28489957136","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2274550473/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2274587508","html_url":"https://github.com/apache/accumulo/pull/4513#issuecomment-2274587508","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4513","id":2274587508,"node_id":"IC_kwDOACaFSM6Hk3N0","user":{"login":"ctubbsii","id":1280725,"node_id":"MDQ6VXNlcjEyODA3MjU=","avatar_url":"https://avatars.githubusercontent.com/u/1280725?v=4","gravatar_id":"","url":"https://api.github.com/users/ctubbsii","html_url":"https://github.com/ctubbsii","followers_url":"https://api.github.com/users/ctubbsii/followers","following_url":"https://api.github.com/users/ctubbsii/following{/other_user}","gists_url":"https://api.github.com/users/ctubbsii/gists{/gist_id}","starred_url":"https://api.github.com/users/ctubbsii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ctubbsii/subscriptions","organizations_url":"https://api.github.com/users/ctubbsii/orgs","repos_url":"https://api.github.com/users/ctubbsii/repos","events_url":"https://api.github.com/users/ctubbsii/events{/privacy}","received_events_url":"https://api.github.com/users/ctubbsii/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-08T00:15:03Z","updated_at":"2024-08-08T00:15:03Z","author_association":"MEMBER","body":"Okay that newer job definitely passed.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2274587508/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2276400956","html_url":"https://github.com/apache/accumulo/pull/4794#issuecomment-2276400956","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4794","id":2276400956,"node_id":"IC_kwDOACaFSM6Hrx88","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-08T18:16:14Z","updated_at":"2024-08-08T18:17:23Z","author_association":"CONTRIBUTOR","body":"As a result of running this test and looking at the coverage data #4792 and #4793 were opened.  The test will run without those changes, but will not get full code coverage.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2276400956/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2278207801","html_url":"https://github.com/apache/accumulo/issues/4783#issuecomment-2278207801","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4783","id":2278207801,"node_id":"IC_kwDOACaFSM6HyrE5","user":{"login":"cshannon","id":123009,"node_id":"MDQ6VXNlcjEyMzAwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/123009?v=4","gravatar_id":"","url":"https://api.github.com/users/cshannon","html_url":"https://github.com/cshannon","followers_url":"https://api.github.com/users/cshannon/followers","following_url":"https://api.github.com/users/cshannon/following{/other_user}","gists_url":"https://api.github.com/users/cshannon/gists{/gist_id}","starred_url":"https://api.github.com/users/cshannon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cshannon/subscriptions","organizations_url":"https://api.github.com/users/cshannon/orgs","repos_url":"https://api.github.com/users/cshannon/repos","events_url":"https://api.github.com/users/cshannon/events{/privacy}","received_events_url":"https://api.github.com/users/cshannon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-09T15:28:32Z","updated_at":"2024-08-09T15:28:32Z","author_association":"CONTRIBUTOR","body":"Besides trying to use weak references a simple fix could be to add a max size to the number of items that can be stored and maybe have the max size be dependent on JVM size. We could even make it more dynamic by setting a maximum weight on the cache and providing a [weigher](https://github.com/ben-manes/caffeine/blob/98895ffbb5e06b345d69fa969fc116c625b70217/caffeine/src/main/java/com/github/benmanes/caffeine/cache/Weigher.java#L34) if the configuration objects are different in size (but they are probably all pretty similar). \r\n\r\nHaving a max size might make the most sense if we are only expected to have a few in memory and then if something else creates a bunch (like in unit testing) we can just evict old ones.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2278207801/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2278232253","html_url":"https://github.com/apache/accumulo/pull/4789#issuecomment-2278232253","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4789","id":2278232253,"node_id":"IC_kwDOACaFSM6HyxC9","user":{"login":"DomGarguilo","id":47725857,"node_id":"MDQ6VXNlcjQ3NzI1ODU3","avatar_url":"https://avatars.githubusercontent.com/u/47725857?v=4","gravatar_id":"","url":"https://api.github.com/users/DomGarguilo","html_url":"https://github.com/DomGarguilo","followers_url":"https://api.github.com/users/DomGarguilo/followers","following_url":"https://api.github.com/users/DomGarguilo/following{/other_user}","gists_url":"https://api.github.com/users/DomGarguilo/gists{/gist_id}","starred_url":"https://api.github.com/users/DomGarguilo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DomGarguilo/subscriptions","organizations_url":"https://api.github.com/users/DomGarguilo/orgs","repos_url":"https://api.github.com/users/DomGarguilo/repos","events_url":"https://api.github.com/users/DomGarguilo/events{/privacy}","received_events_url":"https://api.github.com/users/DomGarguilo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-09T15:40:44Z","updated_at":"2024-08-09T15:40:44Z","author_association":"MEMBER","body":"> I'm against this change. See my notes about the confusing semantics in [#4785 (comment)](https://github.com/apache/accumulo/pull/4785#discussion_r1708177809)\r\n> \r\n> I would prefer to see this reverted in favor of a more clear API. I can make a more concrete suggestion for what that API would look like once I catch up with these changes. I'm a little behind due to being on vacation and currently being sick.\r\n\r\nI am open to considering reverting this change once you finalize your suggestion. For now since this is already merged and another PR is waiting on this change, ill merge it up and we can fix things later in a new PR if needed.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2278232253/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2278314933","html_url":"https://github.com/apache/accumulo/pull/4794#issuecomment-2278314933","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4794","id":2278314933,"node_id":"IC_kwDOACaFSM6HzFO1","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-09T16:25:16Z","updated_at":"2024-08-09T16:25:16Z","author_association":"CONTRIBUTOR","body":"> I went back and took a look and there is an [existing](https://github.com/apache/accumulo/blob/d1456fcaa440f94b03e2a7e7f557fb77f8ef2426/test/src/main/java/org/apache/accumulo/test/LargeSplitRowIT.java#L352) IT that covers this case but I forgot to add one to the ManagerRepoIT after TestAmple was created.\r\n\r\n\r\nThat was a good find.  I added links in the javadoc for each test pointing to the other.  Since the test are somewhat similar it may be useful to know about the other test when making changes in the future.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2278314933/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2278326845","html_url":"https://github.com/apache/accumulo/issues/4783#issuecomment-2278326845","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4783","id":2278326845,"node_id":"IC_kwDOACaFSM6HzII9","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-09T16:32:53Z","updated_at":"2024-08-09T16:32:53Z","author_association":"CONTRIBUTOR","body":"Having a max size could be good.  We could also add an eviction handler that logs a warning on eviction.  Seems like the expectation is that the cache size should be small and evictions should not really happen so it would be nice to know if that assumption no longer holds for some reason.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2278326845/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2278361094","html_url":"https://github.com/apache/accumulo/pull/4787#issuecomment-2278361094","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4787","id":2278361094,"node_id":"IC_kwDOACaFSM6HzQgG","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-09T16:55:16Z","updated_at":"2024-08-09T16:55:16Z","author_association":"CONTRIBUTOR","body":"> @keith-turner - Do see you any issue with this approach?\r\n\r\nNo, that all sounds good.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2278361094/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2278364055","html_url":"https://github.com/apache/accumulo/pull/4787#issuecomment-2278364055","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4787","id":2278364055,"node_id":"IC_kwDOACaFSM6HzROX","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-09T16:57:15Z","updated_at":"2024-08-09T16:57:15Z","author_association":"CONTRIBUTOR","body":"> For the UNKNOWN case that might mean there was just a transient issue with the client getting confirmation after submission so we don't know if it went through so I think we can try again without issue. If it was actually successful the FateCleaner will handle cleanup and age off.\r\n\r\nMore complexity could be added around the unknown case, but its not worth the maintenance burden. I agree its better to just let the FateCleaner deal with it.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2278364055/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2278396575","html_url":"https://github.com/apache/accumulo/pull/4787#issuecomment-2278396575","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4787","id":2278396575,"node_id":"IC_kwDOACaFSM6HzZKf","user":{"login":"cshannon","id":123009,"node_id":"MDQ6VXNlcjEyMzAwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/123009?v=4","gravatar_id":"","url":"https://api.github.com/users/cshannon","html_url":"https://github.com/cshannon","followers_url":"https://api.github.com/users/cshannon/followers","following_url":"https://api.github.com/users/cshannon/following{/other_user}","gists_url":"https://api.github.com/users/cshannon/gists{/gist_id}","starred_url":"https://api.github.com/users/cshannon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cshannon/subscriptions","organizations_url":"https://api.github.com/users/cshannon/orgs","repos_url":"https://api.github.com/users/cshannon/repos","events_url":"https://api.github.com/users/cshannon/events{/privacy}","received_events_url":"https://api.github.com/users/cshannon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-09T17:18:14Z","updated_at":"2024-08-09T17:18:14Z","author_association":"CONTRIBUTOR","body":"> More complexity could be added around the unknown case, but its not worth the maintenance burden. I agree its better to just let the FateCleaner deal with it.\r\n\r\nYeah I figured it wouldn't be worth trying to scan and check if it was successful as it should be rare and the FateCleaner would clean it up. To really handle UNKNOWN effectively you'd need something more complex like how Ample combines a retry and rejection handler API.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2278396575/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2278431832","html_url":"https://github.com/apache/accumulo/issues/4783#issuecomment-2278431832","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4783","id":2278431832,"node_id":"IC_kwDOACaFSM6HzhxY","user":{"login":"cshannon","id":123009,"node_id":"MDQ6VXNlcjEyMzAwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/123009?v=4","gravatar_id":"","url":"https://api.github.com/users/cshannon","html_url":"https://github.com/cshannon","followers_url":"https://api.github.com/users/cshannon/followers","following_url":"https://api.github.com/users/cshannon/following{/other_user}","gists_url":"https://api.github.com/users/cshannon/gists{/gist_id}","starred_url":"https://api.github.com/users/cshannon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cshannon/subscriptions","organizations_url":"https://api.github.com/users/cshannon/orgs","repos_url":"https://api.github.com/users/cshannon/repos","events_url":"https://api.github.com/users/cshannon/events{/privacy}","received_events_url":"https://api.github.com/users/cshannon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-09T17:41:46Z","updated_at":"2024-08-09T17:41:46Z","author_association":"CONTRIBUTOR","body":"I'm wondering what the limit should be on the cache and if we should have a property to configure it if needed. I guess it depends on how many volumes are expected to be used.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2278431832/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2278571519","html_url":"https://github.com/apache/accumulo/pull/4715#issuecomment-2278571519","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4715","id":2278571519,"node_id":"IC_kwDOACaFSM6H0D3_","user":{"login":"cshannon","id":123009,"node_id":"MDQ6VXNlcjEyMzAwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/123009?v=4","gravatar_id":"","url":"https://api.github.com/users/cshannon","html_url":"https://github.com/cshannon","followers_url":"https://api.github.com/users/cshannon/followers","following_url":"https://api.github.com/users/cshannon/following{/other_user}","gists_url":"https://api.github.com/users/cshannon/gists{/gist_id}","starred_url":"https://api.github.com/users/cshannon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cshannon/subscriptions","organizations_url":"https://api.github.com/users/cshannon/orgs","repos_url":"https://api.github.com/users/cshannon/repos","events_url":"https://api.github.com/users/cshannon/events{/privacy}","received_events_url":"https://api.github.com/users/cshannon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-09T19:05:51Z","updated_at":"2024-08-09T19:05:51Z","author_association":"CONTRIBUTOR","body":"I started looking into the authentication support a couple weeks ago and resumed looking into it today to see what was supported. mutual TLS is supported as it's Java and Netty supports that however Kerberos is not supported out of the box. The only authentication that is supported out of the box is SSL/TLS, OAUTH, and a custom Google mechanism called ALTS. See https://grpc.io/docs/guides/auth/\r\n\r\nI did some digging to see if anyone has implemented anything we could use and found the following:\r\n1. A [proposal](https://github.com/grpc/proposal/pull/101) has been open since 2018 but nothing has been done so far.\r\n2. One of the original developers [talks](https://groups.google.com/g/grpc-io/c/mk03Uvi7oVg/m/getqEYwCPgAJ) about HTTP/2 being a little akward for Kerberos and mentions that we would need to pair it with TLS to be secure, which I think would be fine. \r\n3. gRPC is based on Netty and HTTP/2 so likely we would have to write a custom authentication mechanism to handle Kerberos authentication and the client would have to pass the credentials as an HTTP header or auth header and the server would need to read that and perform the checks. To make it secure we would probably need to useTLS as mentioned in number 2. I found an archived [project](https://github.com/elek/grpc-kerberos) on github that we could maybe use as a template to get started (it's ASL2). It looks like it delegates to the built in JDK SASL support and [Krb5LoginModule](https://docs.oracle.com/en/java/javase/17/docs/api//jdk.security.auth/com/sun/security/auth/module/Krb5LoginModule.html)\r\n","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2278571519/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2278635654","html_url":"https://github.com/apache/accumulo/pull/4785#issuecomment-2278635654","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4785","id":2278635654,"node_id":"IC_kwDOACaFSM6H0TiG","user":{"login":"DomGarguilo","id":47725857,"node_id":"MDQ6VXNlcjQ3NzI1ODU3","avatar_url":"https://avatars.githubusercontent.com/u/47725857?v=4","gravatar_id":"","url":"https://api.github.com/users/DomGarguilo","html_url":"https://github.com/DomGarguilo","followers_url":"https://api.github.com/users/DomGarguilo/followers","following_url":"https://api.github.com/users/DomGarguilo/following{/other_user}","gists_url":"https://api.github.com/users/DomGarguilo/gists{/gist_id}","starred_url":"https://api.github.com/users/DomGarguilo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DomGarguilo/subscriptions","organizations_url":"https://api.github.com/users/DomGarguilo/orgs","repos_url":"https://api.github.com/users/DomGarguilo/repos","events_url":"https://api.github.com/users/DomGarguilo/events{/privacy}","received_events_url":"https://api.github.com/users/DomGarguilo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-09T19:47:22Z","updated_at":"2024-08-09T19:47:22Z","author_association":"MEMBER","body":"I am going to mark this as draft for now since there is ongoing discussion about changing `Timer` or adding a separate util class.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2278635654/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2278816560","html_url":"https://github.com/apache/accumulo/issues/4710#issuecomment-2278816560","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4710","id":2278816560,"node_id":"IC_kwDOACaFSM6H0_sw","user":{"login":"cshannon","id":123009,"node_id":"MDQ6VXNlcjEyMzAwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/123009?v=4","gravatar_id":"","url":"https://api.github.com/users/cshannon","html_url":"https://github.com/cshannon","followers_url":"https://api.github.com/users/cshannon/followers","following_url":"https://api.github.com/users/cshannon/following{/other_user}","gists_url":"https://api.github.com/users/cshannon/gists{/gist_id}","starred_url":"https://api.github.com/users/cshannon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cshannon/subscriptions","organizations_url":"https://api.github.com/users/cshannon/orgs","repos_url":"https://api.github.com/users/cshannon/repos","events_url":"https://api.github.com/users/cshannon/events{/privacy}","received_events_url":"https://api.github.com/users/cshannon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-09T22:11:54Z","updated_at":"2024-08-09T22:11:54Z","author_association":"CONTRIBUTOR","body":"I can work on creating a test for `CompactionCoordinator.compactionFailedForLevel` so that we can close out this issue as `CompactionDriver.cleanupTabletMetadata` will be opened as a separate issue. I'll probably try and do something with TestAmple first as that has the interceptor to support the unknown status but FlakyAmpleManager is also an option depending on what is easiest when I take a look. ","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2278816560/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2278819210","html_url":"https://github.com/apache/accumulo/issues/4710#issuecomment-2278819210","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4710","id":2278819210,"node_id":"IC_kwDOACaFSM6H1AWK","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-09T22:15:21Z","updated_at":"2024-08-09T22:15:21Z","author_association":"CONTRIBUTOR","body":"> The following has no test at all CompactionDriver.cleanupTabletMetadata, will open an issue.\r\n\r\nOpened #4795  ","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2278819210/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2278853903","html_url":"https://github.com/apache/accumulo/pull/4785#issuecomment-2278853903","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4785","id":2278853903,"node_id":"IC_kwDOACaFSM6H1I0P","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-09T22:59:07Z","updated_at":"2024-08-09T22:59:07Z","author_association":"CONTRIBUTOR","body":"> I am going to mark this as draft for now since there is ongoing discussion about changing Timer or adding a separate util class.\r\n\r\nI think #4796 implements what @ctubbsii  was suggesting.  If that is merged it would remove one use of NanoTime then this could be merged to remove the rest of the uses and remove NanoTime.  Then we could revert the start with offset changes for Timer.  ","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2278853903/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2282242812","html_url":"https://github.com/apache/accumulo/issues/4710#issuecomment-2282242812","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4710","id":2282242812,"node_id":"IC_kwDOACaFSM6ICEL8","user":{"login":"cshannon","id":123009,"node_id":"MDQ6VXNlcjEyMzAwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/123009?v=4","gravatar_id":"","url":"https://api.github.com/users/cshannon","html_url":"https://github.com/cshannon","followers_url":"https://api.github.com/users/cshannon/followers","following_url":"https://api.github.com/users/cshannon/following{/other_user}","gists_url":"https://api.github.com/users/cshannon/gists{/gist_id}","starred_url":"https://api.github.com/users/cshannon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cshannon/subscriptions","organizations_url":"https://api.github.com/users/cshannon/orgs","repos_url":"https://api.github.com/users/cshannon/repos","events_url":"https://api.github.com/users/cshannon/events{/privacy}","received_events_url":"https://api.github.com/users/cshannon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-10T18:46:03Z","updated_at":"2024-08-10T18:46:03Z","author_association":"CONTRIBUTOR","body":"> I can work on creating a test for `CompactionCoordinator.compactionFailedForLevel` so that we can close out this issue as `CompactionDriver.cleanupTabletMetadata` will be opened as a separate issue. I'll probably try and do something with TestAmple first as that has the interceptor to support the unknown status but FlakyAmpleManager is also an option depending on what is easiest when I take a look.\r\n\r\nI opened up #4797 and I went with using FlakyAmpleManager after all as that was by far the simplest way to test after having tried to use TestAmple. There were already good tests for cancellation that would exercise the failed compaction code so using Flaky ample exercises the rejection handler inside `CompactionCoordinator.compactionFailedForLevel`","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2282242812/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2282243221","html_url":"https://github.com/apache/accumulo/pull/4797#issuecomment-2282243221","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4797","id":2282243221,"node_id":"IC_kwDOACaFSM6ICESV","user":{"login":"cshannon","id":123009,"node_id":"MDQ6VXNlcjEyMzAwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/123009?v=4","gravatar_id":"","url":"https://api.github.com/users/cshannon","html_url":"https://github.com/cshannon","followers_url":"https://api.github.com/users/cshannon/followers","following_url":"https://api.github.com/users/cshannon/following{/other_user}","gists_url":"https://api.github.com/users/cshannon/gists{/gist_id}","starred_url":"https://api.github.com/users/cshannon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cshannon/subscriptions","organizations_url":"https://api.github.com/users/cshannon/orgs","repos_url":"https://api.github.com/users/cshannon/repos","events_url":"https://api.github.com/users/cshannon/events{/privacy}","received_events_url":"https://api.github.com/users/cshannon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-10T18:47:19Z","updated_at":"2024-08-10T18:47:19Z","author_association":"CONTRIBUTOR","body":"This should be the last test addition for #4710 and that issue can be closed after this is merged","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2282243221/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2282246523","html_url":"https://github.com/apache/accumulo/issues/4795#issuecomment-2282246523","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4795","id":2282246523,"node_id":"IC_kwDOACaFSM6ICFF7","user":{"login":"cshannon","id":123009,"node_id":"MDQ6VXNlcjEyMzAwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/123009?v=4","gravatar_id":"","url":"https://api.github.com/users/cshannon","html_url":"https://github.com/cshannon","followers_url":"https://api.github.com/users/cshannon/followers","following_url":"https://api.github.com/users/cshannon/following{/other_user}","gists_url":"https://api.github.com/users/cshannon/gists{/gist_id}","starred_url":"https://api.github.com/users/cshannon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cshannon/subscriptions","organizations_url":"https://api.github.com/users/cshannon/orgs","repos_url":"https://api.github.com/users/cshannon/repos","events_url":"https://api.github.com/users/cshannon/events{/privacy}","received_events_url":"https://api.github.com/users/cshannon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-10T18:59:46Z","updated_at":"2024-08-10T18:59:46Z","author_association":"CONTRIBUTOR","body":"I can work on this, the best way to test is probably to add a test or 2 using `TestAmple`. There is an existing `ManagerRepoIT` that would be a good candidate to add tests for this. We can add some test metadata with TestAmple and then test that it is cleaned up.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2282246523/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2283934477","html_url":"https://github.com/apache/accumulo/pull/4796#issuecomment-2283934477","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4796","id":2283934477,"node_id":"IC_kwDOACaFSM6IIhMN","user":{"login":"DomGarguilo","id":47725857,"node_id":"MDQ6VXNlcjQ3NzI1ODU3","avatar_url":"https://avatars.githubusercontent.com/u/47725857?v=4","gravatar_id":"","url":"https://api.github.com/users/DomGarguilo","html_url":"https://github.com/DomGarguilo","followers_url":"https://api.github.com/users/DomGarguilo/followers","following_url":"https://api.github.com/users/DomGarguilo/following{/other_user}","gists_url":"https://api.github.com/users/DomGarguilo/gists{/gist_id}","starred_url":"https://api.github.com/users/DomGarguilo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DomGarguilo/subscriptions","organizations_url":"https://api.github.com/users/DomGarguilo/orgs","repos_url":"https://api.github.com/users/DomGarguilo/repos","events_url":"https://api.github.com/users/DomGarguilo/events{/privacy}","received_events_url":"https://api.github.com/users/DomGarguilo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-12T13:05:33Z","updated_at":"2024-08-12T15:14:54Z","author_association":"MEMBER","body":"This looks good to me so far. I have two ideas/questions:\r\n1. Would it be beneficial to include both a `startNew(Duration duration)` method and a `startNew(long duration, TimeUnit units)` method?\r\n2. Would it be useful to add a method that simply returns a boolean indicating whether the countdown timer has finished? (maybe something like `isExpired()` or `hasElapsed()`) This would allow us to check if the timer is done without needing to know the exact time remaining.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2283934477/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2284147331","html_url":"https://github.com/apache/accumulo/pull/4800#issuecomment-2284147331","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4800","id":2284147331,"node_id":"IC_kwDOACaFSM6IJVKD","user":{"login":"dlmarion","id":567911,"node_id":"MDQ6VXNlcjU2NzkxMQ==","avatar_url":"https://avatars.githubusercontent.com/u/567911?v=4","gravatar_id":"","url":"https://api.github.com/users/dlmarion","html_url":"https://github.com/dlmarion","followers_url":"https://api.github.com/users/dlmarion/followers","following_url":"https://api.github.com/users/dlmarion/following{/other_user}","gists_url":"https://api.github.com/users/dlmarion/gists{/gist_id}","starred_url":"https://api.github.com/users/dlmarion/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dlmarion/subscriptions","organizations_url":"https://api.github.com/users/dlmarion/orgs","repos_url":"https://api.github.com/users/dlmarion/repos","events_url":"https://api.github.com/users/dlmarion/events{/privacy}","received_events_url":"https://api.github.com/users/dlmarion/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-12T14:30:48Z","updated_at":"2024-08-12T14:30:48Z","author_association":"CONTRIBUTOR","body":"Marking as draft because I'm not sure if we should log the error and *not* perform compactions, or exit the Manager.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2284147331/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2284261904","html_url":"https://github.com/apache/accumulo/issues/1336#issuecomment-2284261904","issue_url":"https://api.github.com/repos/apache/accumulo/issues/1336","id":2284261904,"node_id":"IC_kwDOACaFSM6IJxIQ","user":{"login":"DomGarguilo","id":47725857,"node_id":"MDQ6VXNlcjQ3NzI1ODU3","avatar_url":"https://avatars.githubusercontent.com/u/47725857?v=4","gravatar_id":"","url":"https://api.github.com/users/DomGarguilo","html_url":"https://github.com/DomGarguilo","followers_url":"https://api.github.com/users/DomGarguilo/followers","following_url":"https://api.github.com/users/DomGarguilo/following{/other_user}","gists_url":"https://api.github.com/users/DomGarguilo/gists{/gist_id}","starred_url":"https://api.github.com/users/DomGarguilo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DomGarguilo/subscriptions","organizations_url":"https://api.github.com/users/DomGarguilo/orgs","repos_url":"https://api.github.com/users/DomGarguilo/repos","events_url":"https://api.github.com/users/DomGarguilo/events{/privacy}","received_events_url":"https://api.github.com/users/DomGarguilo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-12T15:18:20Z","updated_at":"2024-08-12T15:18:20Z","author_association":"MEMBER","body":"Does this issue exist in any version later than the reported 1.9.3?","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2284261904/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2284265513","html_url":"https://github.com/apache/accumulo/pull/4801#issuecomment-2284265513","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4801","id":2284265513,"node_id":"IC_kwDOACaFSM6IJyAp","user":{"login":"dlmarion","id":567911,"node_id":"MDQ6VXNlcjU2NzkxMQ==","avatar_url":"https://avatars.githubusercontent.com/u/567911?v=4","gravatar_id":"","url":"https://api.github.com/users/dlmarion","html_url":"https://github.com/dlmarion","followers_url":"https://api.github.com/users/dlmarion/followers","following_url":"https://api.github.com/users/dlmarion/following{/other_user}","gists_url":"https://api.github.com/users/dlmarion/gists{/gist_id}","starred_url":"https://api.github.com/users/dlmarion/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dlmarion/subscriptions","organizations_url":"https://api.github.com/users/dlmarion/orgs","repos_url":"https://api.github.com/users/dlmarion/repos","events_url":"https://api.github.com/users/dlmarion/events{/privacy}","received_events_url":"https://api.github.com/users/dlmarion/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-12T15:19:54Z","updated_at":"2024-08-12T15:19:54Z","author_association":"CONTRIBUTOR","body":"@ddanielr  - Properties can't be removed in 2.1.x or 3.1, so I'm not checking that here. The calls to ConfigCheckUtil should catch any properties that were removed and log a warning about them.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2284265513/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2284517888","html_url":"https://github.com/apache/accumulo/pull/4801#issuecomment-2284517888","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4801","id":2284517888,"node_id":"IC_kwDOACaFSM6IKvoA","user":{"login":"dlmarion","id":567911,"node_id":"MDQ6VXNlcjU2NzkxMQ==","avatar_url":"https://avatars.githubusercontent.com/u/567911?v=4","gravatar_id":"","url":"https://api.github.com/users/dlmarion","html_url":"https://github.com/dlmarion","followers_url":"https://api.github.com/users/dlmarion/followers","following_url":"https://api.github.com/users/dlmarion/following{/other_user}","gists_url":"https://api.github.com/users/dlmarion/gists{/gist_id}","starred_url":"https://api.github.com/users/dlmarion/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dlmarion/subscriptions","organizations_url":"https://api.github.com/users/dlmarion/orgs","repos_url":"https://api.github.com/users/dlmarion/repos","events_url":"https://api.github.com/users/dlmarion/events{/privacy}","received_events_url":"https://api.github.com/users/dlmarion/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-12T17:05:26Z","updated_at":"2024-08-12T17:05:26Z","author_association":"CONTRIBUTOR","body":"Closing in favor of #4802 which is against the 2.1 branch.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2284517888/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2284684757","html_url":"https://github.com/apache/accumulo/issues/4770#issuecomment-2284684757","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4770","id":2284684757,"node_id":"IC_kwDOACaFSM6ILYXV","user":{"login":"dlmarion","id":567911,"node_id":"MDQ6VXNlcjU2NzkxMQ==","avatar_url":"https://avatars.githubusercontent.com/u/567911?v=4","gravatar_id":"","url":"https://api.github.com/users/dlmarion","html_url":"https://github.com/dlmarion","followers_url":"https://api.github.com/users/dlmarion/followers","following_url":"https://api.github.com/users/dlmarion/following{/other_user}","gists_url":"https://api.github.com/users/dlmarion/gists{/gist_id}","starred_url":"https://api.github.com/users/dlmarion/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dlmarion/subscriptions","organizations_url":"https://api.github.com/users/dlmarion/orgs","repos_url":"https://api.github.com/users/dlmarion/repos","events_url":"https://api.github.com/users/dlmarion/events{/privacy}","received_events_url":"https://api.github.com/users/dlmarion/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-12T18:43:49Z","updated_at":"2024-08-12T18:43:49Z","author_association":"CONTRIBUTOR","body":"@ddanielr - Did #4763 fix this? Can this be closed?","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2284684757/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2284711100","html_url":"https://github.com/apache/accumulo/issues/4770#issuecomment-2284711100","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4770","id":2284711100,"node_id":"IC_kwDOACaFSM6ILey8","user":{"login":"ddanielr","id":12480877,"node_id":"MDQ6VXNlcjEyNDgwODc3","avatar_url":"https://avatars.githubusercontent.com/u/12480877?v=4","gravatar_id":"","url":"https://api.github.com/users/ddanielr","html_url":"https://github.com/ddanielr","followers_url":"https://api.github.com/users/ddanielr/followers","following_url":"https://api.github.com/users/ddanielr/following{/other_user}","gists_url":"https://api.github.com/users/ddanielr/gists{/gist_id}","starred_url":"https://api.github.com/users/ddanielr/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ddanielr/subscriptions","organizations_url":"https://api.github.com/users/ddanielr/orgs","repos_url":"https://api.github.com/users/ddanielr/repos","events_url":"https://api.github.com/users/ddanielr/events{/privacy}","received_events_url":"https://api.github.com/users/ddanielr/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-12T18:59:59Z","updated_at":"2024-08-12T18:59:59Z","author_association":"CONTRIBUTOR","body":"> @ddanielr - Did #4763 fix this? Can this be closed?\r\n\r\nno, #4763 added the loop logic. This is a follow up task to that PR for cleaning up this loop logic.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2284711100/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2284718149","html_url":"https://github.com/apache/accumulo/pull/4800#issuecomment-2284718149","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4800","id":2284718149,"node_id":"IC_kwDOACaFSM6ILghF","user":{"login":"ddanielr","id":12480877,"node_id":"MDQ6VXNlcjEyNDgwODc3","avatar_url":"https://avatars.githubusercontent.com/u/12480877?v=4","gravatar_id":"","url":"https://api.github.com/users/ddanielr","html_url":"https://github.com/ddanielr","followers_url":"https://api.github.com/users/ddanielr/followers","following_url":"https://api.github.com/users/ddanielr/following{/other_user}","gists_url":"https://api.github.com/users/ddanielr/gists{/gist_id}","starred_url":"https://api.github.com/users/ddanielr/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ddanielr/subscriptions","organizations_url":"https://api.github.com/users/ddanielr/orgs","repos_url":"https://api.github.com/users/ddanielr/repos","events_url":"https://api.github.com/users/ddanielr/events{/privacy}","received_events_url":"https://api.github.com/users/ddanielr/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-12T19:04:16Z","updated_at":"2024-08-12T19:04:16Z","author_association":"CONTRIBUTOR","body":"LGTM","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2284718149/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2286333798","html_url":"https://github.com/apache/accumulo/issues/4565#issuecomment-2286333798","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4565","id":2286333798,"node_id":"IC_kwDOACaFSM6IRq9m","user":{"login":"ArbaazKhan1","id":29344877,"node_id":"MDQ6VXNlcjI5MzQ0ODc3","avatar_url":"https://avatars.githubusercontent.com/u/29344877?v=4","gravatar_id":"","url":"https://api.github.com/users/ArbaazKhan1","html_url":"https://github.com/ArbaazKhan1","followers_url":"https://api.github.com/users/ArbaazKhan1/followers","following_url":"https://api.github.com/users/ArbaazKhan1/following{/other_user}","gists_url":"https://api.github.com/users/ArbaazKhan1/gists{/gist_id}","starred_url":"https://api.github.com/users/ArbaazKhan1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ArbaazKhan1/subscriptions","organizations_url":"https://api.github.com/users/ArbaazKhan1/orgs","repos_url":"https://api.github.com/users/ArbaazKhan1/repos","events_url":"https://api.github.com/users/ArbaazKhan1/events{/privacy}","received_events_url":"https://api.github.com/users/ArbaazKhan1/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-13T14:00:51Z","updated_at":"2024-08-13T14:00:51Z","author_association":"CONTRIBUTOR","body":"I can take a look at this","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2286333798/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2287010704","html_url":"https://github.com/apache/accumulo/pull/4806#issuecomment-2287010704","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4806","id":2287010704,"node_id":"IC_kwDOACaFSM6IUQOQ","user":{"login":"kevinrr888","id":43969518,"node_id":"MDQ6VXNlcjQzOTY5NTE4","avatar_url":"https://avatars.githubusercontent.com/u/43969518?v=4","gravatar_id":"","url":"https://api.github.com/users/kevinrr888","html_url":"https://github.com/kevinrr888","followers_url":"https://api.github.com/users/kevinrr888/followers","following_url":"https://api.github.com/users/kevinrr888/following{/other_user}","gists_url":"https://api.github.com/users/kevinrr888/gists{/gist_id}","starred_url":"https://api.github.com/users/kevinrr888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kevinrr888/subscriptions","organizations_url":"https://api.github.com/users/kevinrr888/orgs","repos_url":"https://api.github.com/users/kevinrr888/repos","events_url":"https://api.github.com/users/kevinrr888/events{/privacy}","received_events_url":"https://api.github.com/users/kevinrr888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-13T19:49:24Z","updated_at":"2024-08-13T19:50:50Z","author_association":"MEMBER","body":"### Some example outputs and a sketch of the current dependency tree as support:\r\n```\r\nDependency tree sketch:\r\n\r\n        SYSTEM_CONFIG\r\n              |\r\n              V\r\n        ROOT_METADATA\r\n              |\r\n              V\r\n          ROOT_TABLE\r\n         /          \\\r\n   METADATA_TABLE  SYSTEM_FILES\r\n         |\r\n         V\r\n     USER_FILES\r\n```\r\n### Sample outputs:\r\n\r\n```\r\n$ accumulo admin check list\r\n\r\nCheck Name           | Description                                                                      | Depends on          \r\n------------------------------------------------------------------------------------------------------------------------\r\nSYSTEM_CONFIG        | Validate the system config stored in ZooKeeper                                   |                     \r\nROOT_METADATA        | Checks integrity of the root tablet metadata stored in ZooKeeper                 | SYSTEM_CONFIG       \r\nROOT_TABLE           | Scans all the tablet metadata stored in the root table and checks integrity      | ROOT_METADATA       \r\nMETADATA_TABLE       | Scans all the tablet metadata stored in the metadata table and checks integrity  | ROOT_TABLE          \r\nSYSTEM_FILES         | Checks that files in system tablet metadata exist in DFS                         | ROOT_TABLE          \r\nUSER_FILES           | Checks that files in user tablet metadata exist in DFS                           | METADATA_TABLE      \r\n------------------------------------------------------------------------------------------------------------------------\r\n```\r\n\r\n```\r\n$ accumulo admin check run\r\n\r\nRunning check SYSTEM_CONFIG\r\nCheck SYSTEM_CONFIG completed with status OK\r\nRunning check ROOT_METADATA\r\nCheck ROOT_METADATA completed with status OK\r\nRunning check ROOT_TABLE\r\nCheck ROOT_TABLE completed with status OK\r\nRunning check METADATA_TABLE\r\nCheck METADATA_TABLE completed with status OK\r\nRunning check SYSTEM_FILES\r\nCheck SYSTEM_FILES completed with status OK\r\nRunning check USER_FILES\r\nCheck USER_FILES completed with status OK\r\n\r\nCheck Name           | Status              \r\n--------------------------------------------------\r\nSYSTEM_CONFIG        | OK                  \r\nROOT_METADATA        | OK                  \r\nROOT_TABLE           | OK                  \r\nMETADATA_TABLE       | OK                  \r\nSYSTEM_FILES         | OK                  \r\nUSER_FILES           | OK                  \r\n--------------------------------------------------\r\n```\r\n\r\n```\r\n$ accumulo admin check run -p \".*table\"\r\n\r\nRunning check SYSTEM_CONFIG\r\nCheck SYSTEM_CONFIG completed with status OK\r\nRunning check ROOT_METADATA\r\nCheck ROOT_METADATA completed with status OK\r\nRunning check ROOT_TABLE\r\nCheck ROOT_TABLE completed with status OK\r\nRunning check METADATA_TABLE\r\nCheck METADATA_TABLE completed with status OK\r\n\r\nCheck Name           | Status              \r\n--------------------------------------------------\r\nSYSTEM_CONFIG        | OK                  \r\nROOT_METADATA        | OK                  \r\nROOT_TABLE           | OK                  \r\nMETADATA_TABLE       | OK                  \r\n--------------------------------------------------\r\n```\r\n\r\n**In this example, I made `ROOT_TABLE` fail when it was run and attempted to run all the checks**\r\n```\r\n$ accumulo admin check run\r\n\r\nRunning check SYSTEM_CONFIG\r\nCheck SYSTEM_CONFIG completed with status OK\r\nRunning check ROOT_METADATA\r\nCheck ROOT_METADATA completed with status OK\r\nRunning check ROOT_TABLE\r\nCheck ROOT_TABLE completed with status FAILED\r\n\r\nCheck Name           | Status              \r\n--------------------------------------------------\r\nSYSTEM_CONFIG        | OK                  \r\nROOT_METADATA        | OK                  \r\nROOT_TABLE           | FAILED              \r\nMETADATA_TABLE       | SKIPPED_DEPENDENCY_FAILED\r\nSYSTEM_FILES         | SKIPPED_DEPENDENCY_FAILED\r\nUSER_FILES           | SKIPPED_DEPENDENCY_FAILED\r\n--------------------------------------------------\r\n```","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2287010704/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2289486341","html_url":"https://github.com/apache/accumulo/pull/4807#issuecomment-2289486341","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4807","id":2289486341,"node_id":"IC_kwDOACaFSM6IdsoF","user":{"login":"kevinrr888","id":43969518,"node_id":"MDQ6VXNlcjQzOTY5NTE4","avatar_url":"https://avatars.githubusercontent.com/u/43969518?v=4","gravatar_id":"","url":"https://api.github.com/users/kevinrr888","html_url":"https://github.com/kevinrr888","followers_url":"https://api.github.com/users/kevinrr888/followers","following_url":"https://api.github.com/users/kevinrr888/following{/other_user}","gists_url":"https://api.github.com/users/kevinrr888/gists{/gist_id}","starred_url":"https://api.github.com/users/kevinrr888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kevinrr888/subscriptions","organizations_url":"https://api.github.com/users/kevinrr888/orgs","repos_url":"https://api.github.com/users/kevinrr888/repos","events_url":"https://api.github.com/users/kevinrr888/events{/privacy}","received_events_url":"https://api.github.com/users/kevinrr888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-14T17:59:29Z","updated_at":"2024-08-14T17:59:29Z","author_association":"MEMBER","body":"### Some example outputs and a sketch of the current dependency tree as support:\r\n```\r\nDependency tree sketch:\r\n\r\n        SYSTEM_CONFIG\r\n              |\r\n              V\r\n        ROOT_METADATA\r\n              |\r\n              V\r\n          ROOT_TABLE\r\n         /          \\\r\n   METADATA_TABLE  SYSTEM_FILES\r\n         |\r\n         V\r\n     USER_FILES\r\n```\r\n### Sample outputs:\r\n\r\n```\r\n$ accumulo admin check list\r\n\r\nCheck Name           | Description                                                                      | Depends on          \r\n------------------------------------------------------------------------------------------------------------------------\r\nSYSTEM_CONFIG        | Validate the system config stored in ZooKeeper                                   |                     \r\nROOT_METADATA        | Checks integrity of the root tablet metadata stored in ZooKeeper                 | SYSTEM_CONFIG       \r\nROOT_TABLE           | Scans all the tablet metadata stored in the root table and checks integrity      | ROOT_METADATA       \r\nMETADATA_TABLE       | Scans all the tablet metadata stored in the metadata table and checks integrity  | ROOT_TABLE          \r\nSYSTEM_FILES         | Checks that files in system tablet metadata exist in DFS                         | ROOT_TABLE          \r\nUSER_FILES           | Checks that files in user tablet metadata exist in DFS                           | METADATA_TABLE      \r\n------------------------------------------------------------------------------------------------------------------------\r\n```\r\n\r\n```\r\n$ accumulo admin check run\r\n\r\nRunning check SYSTEM_CONFIG\r\nCheck SYSTEM_CONFIG completed with status OK\r\nRunning check ROOT_METADATA\r\nCheck ROOT_METADATA completed with status OK\r\nRunning check ROOT_TABLE\r\nCheck ROOT_TABLE completed with status OK\r\nRunning check METADATA_TABLE\r\nCheck METADATA_TABLE completed with status OK\r\nRunning check SYSTEM_FILES\r\nCheck SYSTEM_FILES completed with status OK\r\nRunning check USER_FILES\r\nCheck USER_FILES completed with status OK\r\n\r\nCheck Name           | Status              \r\n--------------------------------------------------\r\nSYSTEM_CONFIG        | OK                  \r\nROOT_METADATA        | OK                  \r\nROOT_TABLE           | OK                  \r\nMETADATA_TABLE       | OK                  \r\nSYSTEM_FILES         | OK                  \r\nUSER_FILES           | OK                  \r\n--------------------------------------------------\r\n```\r\n\r\n```\r\n$ accumulo admin check run -p \".*table\"\r\n\r\nRunning check SYSTEM_CONFIG\r\nCheck SYSTEM_CONFIG completed with status OK\r\nRunning check ROOT_METADATA\r\nCheck ROOT_METADATA completed with status OK\r\nRunning check ROOT_TABLE\r\nCheck ROOT_TABLE completed with status OK\r\nRunning check METADATA_TABLE\r\nCheck METADATA_TABLE completed with status OK\r\n\r\nCheck Name           | Status              \r\n--------------------------------------------------\r\nSYSTEM_CONFIG        | OK                  \r\nROOT_METADATA        | OK                  \r\nROOT_TABLE           | OK                  \r\nMETADATA_TABLE       | OK                  \r\n--------------------------------------------------\r\n```\r\n\r\n**In this example, I made `ROOT_TABLE` fail when it was run and attempted to run all the checks**\r\n```\r\n$ accumulo admin check run\r\n\r\nRunning check SYSTEM_CONFIG\r\nCheck SYSTEM_CONFIG completed with status OK\r\nRunning check ROOT_METADATA\r\nCheck ROOT_METADATA completed with status OK\r\nRunning check ROOT_TABLE\r\nCheck ROOT_TABLE completed with status FAILED\r\n\r\nCheck Name           | Status              \r\n--------------------------------------------------\r\nSYSTEM_CONFIG        | OK                  \r\nROOT_METADATA        | OK                  \r\nROOT_TABLE           | FAILED              \r\nMETADATA_TABLE       | SKIPPED_DEPENDENCY_FAILED\r\nSYSTEM_FILES         | SKIPPED_DEPENDENCY_FAILED\r\nUSER_FILES           | SKIPPED_DEPENDENCY_FAILED\r\n--------------------------------------------------\r\n```","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2289486341/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2289489377","html_url":"https://github.com/apache/accumulo/pull/4806#issuecomment-2289489377","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4806","id":2289489377,"node_id":"IC_kwDOACaFSM6IdtXh","user":{"login":"kevinrr888","id":43969518,"node_id":"MDQ6VXNlcjQzOTY5NTE4","avatar_url":"https://avatars.githubusercontent.com/u/43969518?v=4","gravatar_id":"","url":"https://api.github.com/users/kevinrr888","html_url":"https://github.com/kevinrr888","followers_url":"https://api.github.com/users/kevinrr888/followers","following_url":"https://api.github.com/users/kevinrr888/following{/other_user}","gists_url":"https://api.github.com/users/kevinrr888/gists{/gist_id}","starred_url":"https://api.github.com/users/kevinrr888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kevinrr888/subscriptions","organizations_url":"https://api.github.com/users/kevinrr888/orgs","repos_url":"https://api.github.com/users/kevinrr888/repos","events_url":"https://api.github.com/users/kevinrr888/events{/privacy}","received_events_url":"https://api.github.com/users/kevinrr888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-14T18:01:05Z","updated_at":"2024-08-14T18:01:05Z","author_association":"MEMBER","body":"Closing this to be replaced by https://github.com/apache/accumulo/pull/4807.\r\nAs suggested by @ctubbsii, making these changes target main","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2289489377/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2289492817","html_url":"https://github.com/apache/accumulo/pull/4807#issuecomment-2289492817","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4807","id":2289492817,"node_id":"IC_kwDOACaFSM6IduNR","user":{"login":"kevinrr888","id":43969518,"node_id":"MDQ6VXNlcjQzOTY5NTE4","avatar_url":"https://avatars.githubusercontent.com/u/43969518?v=4","gravatar_id":"","url":"https://api.github.com/users/kevinrr888","html_url":"https://github.com/kevinrr888","followers_url":"https://api.github.com/users/kevinrr888/followers","following_url":"https://api.github.com/users/kevinrr888/following{/other_user}","gists_url":"https://api.github.com/users/kevinrr888/gists{/gist_id}","starred_url":"https://api.github.com/users/kevinrr888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kevinrr888/subscriptions","organizations_url":"https://api.github.com/users/kevinrr888/orgs","repos_url":"https://api.github.com/users/kevinrr888/repos","events_url":"https://api.github.com/users/kevinrr888/events{/privacy}","received_events_url":"https://api.github.com/users/kevinrr888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-14T18:02:49Z","updated_at":"2024-08-14T18:02:49Z","author_association":"MEMBER","body":"This was created as a replacement for https://github.com/apache/accumulo/pull/4806 which targeted elasticity. This PR targets main","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2289492817/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2289495411","html_url":"https://github.com/apache/accumulo/pull/4807#issuecomment-2289495411","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4807","id":2289495411,"node_id":"IC_kwDOACaFSM6Idu1z","user":{"login":"kevinrr888","id":43969518,"node_id":"MDQ6VXNlcjQzOTY5NTE4","avatar_url":"https://avatars.githubusercontent.com/u/43969518?v=4","gravatar_id":"","url":"https://api.github.com/users/kevinrr888","html_url":"https://github.com/kevinrr888","followers_url":"https://api.github.com/users/kevinrr888/followers","following_url":"https://api.github.com/users/kevinrr888/following{/other_user}","gists_url":"https://api.github.com/users/kevinrr888/gists{/gist_id}","starred_url":"https://api.github.com/users/kevinrr888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kevinrr888/subscriptions","organizations_url":"https://api.github.com/users/kevinrr888/orgs","repos_url":"https://api.github.com/users/kevinrr888/repos","events_url":"https://api.github.com/users/kevinrr888/events{/privacy}","received_events_url":"https://api.github.com/users/kevinrr888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-14T18:04:17Z","updated_at":"2024-08-14T18:04:17Z","author_association":"MEMBER","body":"Relevant review comment from old PR:\r\nhttps://github.com/apache/accumulo/pull/4806#discussion_r1717134389","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2289495411/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2291142303","html_url":"https://github.com/apache/accumulo/issues/4809#issuecomment-2291142303","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4809","id":2291142303,"node_id":"IC_kwDOACaFSM6IkA6f","user":{"login":"meatballspaghetti","id":69256191,"node_id":"MDQ6VXNlcjY5MjU2MTkx","avatar_url":"https://avatars.githubusercontent.com/u/69256191?v=4","gravatar_id":"","url":"https://api.github.com/users/meatballspaghetti","html_url":"https://github.com/meatballspaghetti","followers_url":"https://api.github.com/users/meatballspaghetti/followers","following_url":"https://api.github.com/users/meatballspaghetti/following{/other_user}","gists_url":"https://api.github.com/users/meatballspaghetti/gists{/gist_id}","starred_url":"https://api.github.com/users/meatballspaghetti/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/meatballspaghetti/subscriptions","organizations_url":"https://api.github.com/users/meatballspaghetti/orgs","repos_url":"https://api.github.com/users/meatballspaghetti/repos","events_url":"https://api.github.com/users/meatballspaghetti/events{/privacy}","received_events_url":"https://api.github.com/users/meatballspaghetti/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-15T11:59:41Z","updated_at":"2024-08-15T11:59:41Z","author_association":"CONTRIBUTOR","body":"I can look into this.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2291142303/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2291671430","html_url":"https://github.com/apache/accumulo/issues/4810#issuecomment-2291671430","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4810","id":2291671430,"node_id":"IC_kwDOACaFSM6ImCGG","user":{"login":"kevinrr888","id":43969518,"node_id":"MDQ6VXNlcjQzOTY5NTE4","avatar_url":"https://avatars.githubusercontent.com/u/43969518?v=4","gravatar_id":"","url":"https://api.github.com/users/kevinrr888","html_url":"https://github.com/kevinrr888","followers_url":"https://api.github.com/users/kevinrr888/followers","following_url":"https://api.github.com/users/kevinrr888/following{/other_user}","gists_url":"https://api.github.com/users/kevinrr888/gists{/gist_id}","starred_url":"https://api.github.com/users/kevinrr888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kevinrr888/subscriptions","organizations_url":"https://api.github.com/users/kevinrr888/orgs","repos_url":"https://api.github.com/users/kevinrr888/repos","events_url":"https://api.github.com/users/kevinrr888/events{/privacy}","received_events_url":"https://api.github.com/users/kevinrr888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-15T16:29:26Z","updated_at":"2024-08-15T16:32:06Z","author_association":"MEMBER","body":"These methods have both been deprecated (`getConfig()` since `2.0.0` and `getServiceEnv()` since `2.1.0`) and replaced with `getPluginEnv()` (since `2.1.0`). \r\n\r\nThe equivalent to \r\n`env.getServiceEnv()` \r\nwould now be \r\n`env.getPluginEnv()` \r\n\r\nand the equivalent to \r\n`env.getConfig()` \r\nwould now be \r\n`env.getPluginEnv().getConfiguration(env.getTableId())`\r\n\r\nHope this helps!","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2291671430/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2291704660","html_url":"https://github.com/apache/accumulo/pull/4790#issuecomment-2291704660","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4790","id":2291704660,"node_id":"IC_kwDOACaFSM6ImKNU","user":{"login":"DomGarguilo","id":47725857,"node_id":"MDQ6VXNlcjQ3NzI1ODU3","avatar_url":"https://avatars.githubusercontent.com/u/47725857?v=4","gravatar_id":"","url":"https://api.github.com/users/DomGarguilo","html_url":"https://github.com/DomGarguilo","followers_url":"https://api.github.com/users/DomGarguilo/followers","following_url":"https://api.github.com/users/DomGarguilo/following{/other_user}","gists_url":"https://api.github.com/users/DomGarguilo/gists{/gist_id}","starred_url":"https://api.github.com/users/DomGarguilo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DomGarguilo/subscriptions","organizations_url":"https://api.github.com/users/DomGarguilo/orgs","repos_url":"https://api.github.com/users/DomGarguilo/repos","events_url":"https://api.github.com/users/DomGarguilo/events{/privacy}","received_events_url":"https://api.github.com/users/DomGarguilo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-15T16:48:50Z","updated_at":"2024-08-15T16:48:50Z","author_association":"MEMBER","body":"@cshannon, @kevinrr888, @ctubbsii, all of your suggestions/questions should be addressed now.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2291704660/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2291997745","html_url":"https://github.com/apache/accumulo/pull/4791#issuecomment-2291997745","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4791","id":2291997745,"node_id":"IC_kwDOACaFSM6InRwx","user":{"login":"meatballspaghetti","id":69256191,"node_id":"MDQ6VXNlcjY5MjU2MTkx","avatar_url":"https://avatars.githubusercontent.com/u/69256191?v=4","gravatar_id":"","url":"https://api.github.com/users/meatballspaghetti","html_url":"https://github.com/meatballspaghetti","followers_url":"https://api.github.com/users/meatballspaghetti/followers","following_url":"https://api.github.com/users/meatballspaghetti/following{/other_user}","gists_url":"https://api.github.com/users/meatballspaghetti/gists{/gist_id}","starred_url":"https://api.github.com/users/meatballspaghetti/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/meatballspaghetti/subscriptions","organizations_url":"https://api.github.com/users/meatballspaghetti/orgs","repos_url":"https://api.github.com/users/meatballspaghetti/repos","events_url":"https://api.github.com/users/meatballspaghetti/events{/privacy}","received_events_url":"https://api.github.com/users/meatballspaghetti/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-15T18:57:11Z","updated_at":"2024-08-15T19:16:20Z","author_association":"CONTRIBUTOR","body":"> Changes look good and consistent with #3815.\r\n> \r\n> One thing that may have been missed is changing instances of the method ref equivalents: `String::new` and `String::getBytes` use UTF_8. I found instances of `String::new` that could be changed, but no instances of `String::getBytes`.\r\n\r\nMaybe I'm misunderstanding, but `String::new` just creates an empty String with no encoding involved and no conversion from bytes. I know that `String::getBytes` instances can be converted to something like `s -> s.getBytes(UTF_8)`, but since `String::new` just produces empty Strings to being with, I'm not sure how UTF-8 would be applicable there.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2291997745/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2292067193","html_url":"https://github.com/apache/accumulo/pull/4791#issuecomment-2292067193","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4791","id":2292067193,"node_id":"IC_kwDOACaFSM6Init5","user":{"login":"kevinrr888","id":43969518,"node_id":"MDQ6VXNlcjQzOTY5NTE4","avatar_url":"https://avatars.githubusercontent.com/u/43969518?v=4","gravatar_id":"","url":"https://api.github.com/users/kevinrr888","html_url":"https://github.com/kevinrr888","followers_url":"https://api.github.com/users/kevinrr888/followers","following_url":"https://api.github.com/users/kevinrr888/following{/other_user}","gists_url":"https://api.github.com/users/kevinrr888/gists{/gist_id}","starred_url":"https://api.github.com/users/kevinrr888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kevinrr888/subscriptions","organizations_url":"https://api.github.com/users/kevinrr888/orgs","repos_url":"https://api.github.com/users/kevinrr888/repos","events_url":"https://api.github.com/users/kevinrr888/events{/privacy}","received_events_url":"https://api.github.com/users/kevinrr888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-15T19:43:31Z","updated_at":"2024-08-15T19:43:31Z","author_association":"MEMBER","body":"@meatballspaghetti - Here is an example of what I'm talking about from `TokenFileIT`:\r\n```\r\nint i = scanner.stream().map(Map.Entry::getValue).map(Value::get).map(String::new)\r\n            .map(Integer::parseInt).collect(onlyElement());\r\n```\r\nHere, `String::new` is used as a method reference to the `String` constructor that takes `byte[]` as its arg since `Value::get` returns `byte[]`. I'm suggesting the above (and elsewhere this applies) be changed to\r\n```\r\nint i = scanner.stream().map(Map.Entry::getValue).map(Value::get).map(e -> new String(e, UTF_8))\r\n                .map(Integer::parseInt).collect(onlyElement());\r\n```","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2292067193/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2292128755","html_url":"https://github.com/apache/accumulo/pull/4791#issuecomment-2292128755","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4791","id":2292128755,"node_id":"IC_kwDOACaFSM6Inxvz","user":{"login":"meatballspaghetti","id":69256191,"node_id":"MDQ6VXNlcjY5MjU2MTkx","avatar_url":"https://avatars.githubusercontent.com/u/69256191?v=4","gravatar_id":"","url":"https://api.github.com/users/meatballspaghetti","html_url":"https://github.com/meatballspaghetti","followers_url":"https://api.github.com/users/meatballspaghetti/followers","following_url":"https://api.github.com/users/meatballspaghetti/following{/other_user}","gists_url":"https://api.github.com/users/meatballspaghetti/gists{/gist_id}","starred_url":"https://api.github.com/users/meatballspaghetti/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/meatballspaghetti/subscriptions","organizations_url":"https://api.github.com/users/meatballspaghetti/orgs","repos_url":"https://api.github.com/users/meatballspaghetti/repos","events_url":"https://api.github.com/users/meatballspaghetti/events{/privacy}","received_events_url":"https://api.github.com/users/meatballspaghetti/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-15T20:08:27Z","updated_at":"2024-08-15T20:08:27Z","author_association":"CONTRIBUTOR","body":"@kevinrr888 Makes sense, thanks. Updated.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2292128755/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2292597231","html_url":"https://github.com/apache/accumulo/issues/4810#issuecomment-2292597231","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4810","id":2292597231,"node_id":"IC_kwDOACaFSM6IpkHv","user":{"login":"ctubbsii","id":1280725,"node_id":"MDQ6VXNlcjEyODA3MjU=","avatar_url":"https://avatars.githubusercontent.com/u/1280725?v=4","gravatar_id":"","url":"https://api.github.com/users/ctubbsii","html_url":"https://github.com/ctubbsii","followers_url":"https://api.github.com/users/ctubbsii/followers","following_url":"https://api.github.com/users/ctubbsii/following{/other_user}","gists_url":"https://api.github.com/users/ctubbsii/gists{/gist_id}","starred_url":"https://api.github.com/users/ctubbsii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ctubbsii/subscriptions","organizations_url":"https://api.github.com/users/ctubbsii/orgs","repos_url":"https://api.github.com/users/ctubbsii/repos","events_url":"https://api.github.com/users/ctubbsii/events{/privacy}","received_events_url":"https://api.github.com/users/ctubbsii/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-16T02:01:40Z","updated_at":"2024-08-16T02:01:40Z","author_association":"MEMBER","body":"@kevinrr888 are you saying that using the replacement APIs fixes the issue, or are you just adding extra context to whoever works on fixing the bug?","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2292597231/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2293353938","html_url":"https://github.com/apache/accumulo/issues/4810#issuecomment-2293353938","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4810","id":2293353938,"node_id":"IC_kwDOACaFSM6Isc3S","user":{"login":"FineAndDandy","id":7751180,"node_id":"MDQ6VXNlcjc3NTExODA=","avatar_url":"https://avatars.githubusercontent.com/u/7751180?v=4","gravatar_id":"","url":"https://api.github.com/users/FineAndDandy","html_url":"https://github.com/FineAndDandy","followers_url":"https://api.github.com/users/FineAndDandy/followers","following_url":"https://api.github.com/users/FineAndDandy/following{/other_user}","gists_url":"https://api.github.com/users/FineAndDandy/gists{/gist_id}","starred_url":"https://api.github.com/users/FineAndDandy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/FineAndDandy/subscriptions","organizations_url":"https://api.github.com/users/FineAndDandy/orgs","repos_url":"https://api.github.com/users/FineAndDandy/repos","events_url":"https://api.github.com/users/FineAndDandy/events{/privacy}","received_events_url":"https://api.github.com/users/FineAndDandy/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-16T11:42:26Z","updated_at":"2024-08-16T11:42:26Z","author_association":"CONTRIBUTOR","body":"@kevinrr888 using getPluginEnv() under the covers calls getServiceEnv(), leading to the same UnsupportedOperationException. The issue is the RFileScanner uses an IteratorEnvironment implementation which implements none of these methods.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2293353938/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2293668471","html_url":"https://github.com/apache/accumulo/issues/4810#issuecomment-2293668471","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4810","id":2293668471,"node_id":"IC_kwDOACaFSM6Itpp3","user":{"login":"kevinrr888","id":43969518,"node_id":"MDQ6VXNlcjQzOTY5NTE4","avatar_url":"https://avatars.githubusercontent.com/u/43969518?v=4","gravatar_id":"","url":"https://api.github.com/users/kevinrr888","html_url":"https://github.com/kevinrr888","followers_url":"https://api.github.com/users/kevinrr888/followers","following_url":"https://api.github.com/users/kevinrr888/following{/other_user}","gists_url":"https://api.github.com/users/kevinrr888/gists{/gist_id}","starred_url":"https://api.github.com/users/kevinrr888/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kevinrr888/subscriptions","organizations_url":"https://api.github.com/users/kevinrr888/orgs","repos_url":"https://api.github.com/users/kevinrr888/repos","events_url":"https://api.github.com/users/kevinrr888/events{/privacy}","received_events_url":"https://api.github.com/users/kevinrr888/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-16T14:58:10Z","updated_at":"2024-08-16T14:58:10Z","author_association":"MEMBER","body":"@FineAndDandy \r\n\r\nYes, you are right\r\n\r\nI saw that `getPluginEnv()` just called `getServiceEnv()` but tested (or so I thought) the `RFileScanner` and it was working for `getPluginEnv()` and `getServiceEnv()`. I assumed the `IteratorEnvironment` used for `RFileScanner` had these methods implemented. Upon looking and testing again, I see the same problem as you.\r\n\r\nLooking into this and potentially more issues with `IteratorEnvironment` and its implemenations...\r\n\r\n@ctubbsii \r\n\r\nI thought this replacement fixed the issue, but now see that this is not the case","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2293668471/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2293680164","html_url":"https://github.com/apache/accumulo/issues/4810#issuecomment-2293680164","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4810","id":2293680164,"node_id":"IC_kwDOACaFSM6Itsgk","user":{"login":"FineAndDandy","id":7751180,"node_id":"MDQ6VXNlcjc3NTExODA=","avatar_url":"https://avatars.githubusercontent.com/u/7751180?v=4","gravatar_id":"","url":"https://api.github.com/users/FineAndDandy","html_url":"https://github.com/FineAndDandy","followers_url":"https://api.github.com/users/FineAndDandy/followers","following_url":"https://api.github.com/users/FineAndDandy/following{/other_user}","gists_url":"https://api.github.com/users/FineAndDandy/gists{/gist_id}","starred_url":"https://api.github.com/users/FineAndDandy/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/FineAndDandy/subscriptions","organizations_url":"https://api.github.com/users/FineAndDandy/orgs","repos_url":"https://api.github.com/users/FineAndDandy/repos","events_url":"https://api.github.com/users/FineAndDandy/events{/privacy}","received_events_url":"https://api.github.com/users/FineAndDandy/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-16T15:05:07Z","updated_at":"2024-08-16T15:05:07Z","author_association":"CONTRIBUTOR","body":"`OfflineIteratorEnvironment` has similar issues","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2293680164/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2293783052","html_url":"https://github.com/apache/accumulo/pull/4791#issuecomment-2293783052","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4791","id":2293783052,"node_id":"IC_kwDOACaFSM6IuFoM","user":{"login":"DomGarguilo","id":47725857,"node_id":"MDQ6VXNlcjQ3NzI1ODU3","avatar_url":"https://avatars.githubusercontent.com/u/47725857?v=4","gravatar_id":"","url":"https://api.github.com/users/DomGarguilo","html_url":"https://github.com/DomGarguilo","followers_url":"https://api.github.com/users/DomGarguilo/followers","following_url":"https://api.github.com/users/DomGarguilo/following{/other_user}","gists_url":"https://api.github.com/users/DomGarguilo/gists{/gist_id}","starred_url":"https://api.github.com/users/DomGarguilo/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DomGarguilo/subscriptions","organizations_url":"https://api.github.com/users/DomGarguilo/orgs","repos_url":"https://api.github.com/users/DomGarguilo/repos","events_url":"https://api.github.com/users/DomGarguilo/events{/privacy}","received_events_url":"https://api.github.com/users/DomGarguilo/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-16T16:12:15Z","updated_at":"2024-08-16T16:12:15Z","author_association":"MEMBER","body":"> Looks good to me, but since this is for 2.1, I'll wait to merge it until I can be sure I'm prepared to merge it into the main branch and elasticity and work through any merge conflicts that might arise.\r\n\r\nSorry I did not see this before merging into 2.1. Just saw the approvals and went ahead and merged it. I will attempt to merge it up into main and elasticity. Were there any specific issues or difficulties you foresaw with the merge or did you just mean you didn't have the time to do it when the comment was made so you were planning on doing it later?","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2293783052/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2293799324","html_url":"https://github.com/apache/accumulo/issues/4783#issuecomment-2293799324","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4783","id":2293799324,"node_id":"IC_kwDOACaFSM6IuJmc","user":{"login":"cshannon","id":123009,"node_id":"MDQ6VXNlcjEyMzAwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/123009?v=4","gravatar_id":"","url":"https://api.github.com/users/cshannon","html_url":"https://github.com/cshannon","followers_url":"https://api.github.com/users/cshannon/followers","following_url":"https://api.github.com/users/cshannon/following{/other_user}","gists_url":"https://api.github.com/users/cshannon/gists{/gist_id}","starred_url":"https://api.github.com/users/cshannon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cshannon/subscriptions","organizations_url":"https://api.github.com/users/cshannon/orgs","repos_url":"https://api.github.com/users/cshannon/repos","events_url":"https://api.github.com/users/cshannon/events{/privacy}","received_events_url":"https://api.github.com/users/cshannon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-16T16:23:51Z","updated_at":"2024-08-16T16:23:51Z","author_association":"CONTRIBUTOR","body":"I started to investigate this more today because I was looking to see what size limit might be appropriate. I applied the sample patch here to generate the OOM heap dumps and I noticed that when I tried limiting the cache size to something small, the test was still generating OOM errors which was pretty weird. \r\n\r\nI went ahead and loaded up the heap dumps using the Eclipse memory analyzer and took a look and I discovered that the memory leak in this case had nothing to do with the cache inside of VolumeManagerImpl. There were a bunch of Configuration objects with a weak reference hash map which was surprising and looking into it more I discovered the source of the memory leak in this case was actually because the hadoop Configuration object [registers](https://github.com/apache/hadoop/blob/f00094203bf40a8c3f2216cf22eaa5599e3b9b4d/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/conf/Configuration.java#L834) all the new objects in a weak reference [hash map](https://github.com/apache/hadoop/blob/f00094203bf40a8c3f2216cf22eaa5599e3b9b4d/hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/conf/Configuration.java#L325) inside it's constructor. In this case, the memory leak generated by the test modifications didn't cause a leak due to the `VolumeManagerImpl` cache. \r\n\r\nThinking about the changes here to the testing, this behavior makes sense because `TestAmple` doesn't use that cache. It's just [creating](https://github.com/apache/accumulo/blob/d8185cdea742b00c17b2877f6198fb2a8f73a7ef/test/src/main/java/org/apache/accumulo/test/ample/metadata/TestAmple.java#L243) a new ServerContext each time a new TestAmple is loaded which in turn will end up creating a new config\r\n\r\n@keith-turner - So after finding this I was curious if this was actually the memory leak all along, however reading over the issue again, you said that you analyzed the heap dump and saw the objects were attached to the `VolumeManagerImpl` cache. If that is the case then I'm assuming that means the way we are trying to reproduce this bug here is actually not correct, and the OOM error being generated is similar (too many Configuration objects in memory) but not exactly the same as the large number of Configuration objects generated by TestAmple to cause the leak are not being stored in the VolumeManagerImpl but instead being referenced by the Configuration object itself.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2293799324/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2294204377","html_url":"https://github.com/apache/accumulo/pull/4791#issuecomment-2294204377","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4791","id":2294204377,"node_id":"IC_kwDOACaFSM6IvsfZ","user":{"login":"ctubbsii","id":1280725,"node_id":"MDQ6VXNlcjEyODA3MjU=","avatar_url":"https://avatars.githubusercontent.com/u/1280725?v=4","gravatar_id":"","url":"https://api.github.com/users/ctubbsii","html_url":"https://github.com/ctubbsii","followers_url":"https://api.github.com/users/ctubbsii/followers","following_url":"https://api.github.com/users/ctubbsii/following{/other_user}","gists_url":"https://api.github.com/users/ctubbsii/gists{/gist_id}","starred_url":"https://api.github.com/users/ctubbsii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ctubbsii/subscriptions","organizations_url":"https://api.github.com/users/ctubbsii/orgs","repos_url":"https://api.github.com/users/ctubbsii/repos","events_url":"https://api.github.com/users/ctubbsii/events{/privacy}","received_events_url":"https://api.github.com/users/ctubbsii/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-16T20:37:01Z","updated_at":"2024-08-16T20:37:01Z","author_association":"MEMBER","body":"> > Looks good to me, but since this is for 2.1, I'll wait to merge it until I can be sure I'm prepared to merge it into the main branch and elasticity and work through any merge conflicts that might arise.\r\n> \r\n> Sorry I did not see this before merging into 2.1. Just saw the approvals and went ahead and merged it. I will attempt to merge it up into main and elasticity. Were there any specific issues or difficulties you foresaw with the merge or did you just mean you didn't have the time to do it when the comment was made so you were planning on doing it later?\r\n\r\nI just didn't have time to do it when I reviewed it, and was planning on doing it later, but if it's already done, then that's not a problem at all!","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2294204377/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2294367220","html_url":"https://github.com/apache/accumulo/pull/4715#issuecomment-2294367220","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4715","id":2294367220,"node_id":"IC_kwDOACaFSM6IwUP0","user":{"login":"cshannon","id":123009,"node_id":"MDQ6VXNlcjEyMzAwOQ==","avatar_url":"https://avatars.githubusercontent.com/u/123009?v=4","gravatar_id":"","url":"https://api.github.com/users/cshannon","html_url":"https://github.com/cshannon","followers_url":"https://api.github.com/users/cshannon/followers","following_url":"https://api.github.com/users/cshannon/following{/other_user}","gists_url":"https://api.github.com/users/cshannon/gists{/gist_id}","starred_url":"https://api.github.com/users/cshannon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cshannon/subscriptions","organizations_url":"https://api.github.com/users/cshannon/orgs","repos_url":"https://api.github.com/users/cshannon/repos","events_url":"https://api.github.com/users/cshannon/events{/privacy}","received_events_url":"https://api.github.com/users/cshannon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-16T22:00:36Z","updated_at":"2024-08-16T22:00:36Z","author_association":"CONTRIBUTOR","body":"The changes from #4811 will fix the hanging `ExternalCompaction_2_IT` issue that is currently happening when merged in","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2294367220/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2296434286","html_url":"https://github.com/apache/accumulo/issues/4273#issuecomment-2296434286","issue_url":"https://api.github.com/repos/apache/accumulo/issues/4273","id":2296434286,"node_id":"IC_kwDOACaFSM6I4M5u","user":{"login":"dlmarion","id":567911,"node_id":"MDQ6VXNlcjU2NzkxMQ==","avatar_url":"https://avatars.githubusercontent.com/u/567911?v=4","gravatar_id":"","url":"https://api.github.com/users/dlmarion","html_url":"https://github.com/dlmarion","followers_url":"https://api.github.com/users/dlmarion/followers","following_url":"https://api.github.com/users/dlmarion/following{/other_user}","gists_url":"https://api.github.com/users/dlmarion/gists{/gist_id}","starred_url":"https://api.github.com/users/dlmarion/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dlmarion/subscriptions","organizations_url":"https://api.github.com/users/dlmarion/orgs","repos_url":"https://api.github.com/users/dlmarion/repos","events_url":"https://api.github.com/users/dlmarion/events{/privacy}","received_events_url":"https://api.github.com/users/dlmarion/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2024-08-19T12:16:19Z","updated_at":"2024-08-19T12:16:19Z","author_association":"CONTRIBUTOR","body":"I removed the `bug` label as this issue does not reflect a defect in the current implementation. I also moved this from from `correctness` iteration in the `Elasticity` project to the `scaling` iteration. These changes are not required for the correct operation.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/2296434286/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]