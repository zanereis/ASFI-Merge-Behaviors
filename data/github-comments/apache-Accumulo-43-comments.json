[{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/554415761","html_url":"https://github.com/apache/accumulo/pull/1425#issuecomment-554415761","issue_url":"https://api.github.com/repos/apache/accumulo/issues/1425","id":554415761,"node_id":"MDEyOklzc3VlQ29tbWVudDU1NDQxNTc2MQ==","user":{"login":"milleruntime","id":11872539,"node_id":"MDQ6VXNlcjExODcyNTM5","avatar_url":"https://avatars.githubusercontent.com/u/11872539?v=4","gravatar_id":"","url":"https://api.github.com/users/milleruntime","html_url":"https://github.com/milleruntime","followers_url":"https://api.github.com/users/milleruntime/followers","following_url":"https://api.github.com/users/milleruntime/following{/other_user}","gists_url":"https://api.github.com/users/milleruntime/gists{/gist_id}","starred_url":"https://api.github.com/users/milleruntime/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/milleruntime/subscriptions","organizations_url":"https://api.github.com/users/milleruntime/orgs","repos_url":"https://api.github.com/users/milleruntime/repos","events_url":"https://api.github.com/users/milleruntime/events{/privacy}","received_events_url":"https://api.github.com/users/milleruntime/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-15T15:54:42Z","updated_at":"2019-11-15T15:54:42Z","author_association":"CONTRIBUTOR","body":"Congrats everyone!  I believe this PR was the 1,000th pull request closed.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/554415761/reactions","total_count":2,"+1":0,"-1":0,"laugh":0,"hooray":2,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/554417441","html_url":"https://github.com/apache/accumulo/pull/1432#issuecomment-554417441","issue_url":"https://api.github.com/repos/apache/accumulo/issues/1432","id":554417441,"node_id":"MDEyOklzc3VlQ29tbWVudDU1NDQxNzQ0MQ==","user":{"login":"milleruntime","id":11872539,"node_id":"MDQ6VXNlcjExODcyNTM5","avatar_url":"https://avatars.githubusercontent.com/u/11872539?v=4","gravatar_id":"","url":"https://api.github.com/users/milleruntime","html_url":"https://github.com/milleruntime","followers_url":"https://api.github.com/users/milleruntime/followers","following_url":"https://api.github.com/users/milleruntime/following{/other_user}","gists_url":"https://api.github.com/users/milleruntime/gists{/gist_id}","starred_url":"https://api.github.com/users/milleruntime/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/milleruntime/subscriptions","organizations_url":"https://api.github.com/users/milleruntime/orgs","repos_url":"https://api.github.com/users/milleruntime/repos","events_url":"https://api.github.com/users/milleruntime/events{/privacy}","received_events_url":"https://api.github.com/users/milleruntime/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-15T15:58:28Z","updated_at":"2019-11-15T15:58:41Z","author_association":"CONTRIBUTOR","body":"Here is a helpful article about using GitHub commit messages to automatically close issues:\r\nhttps://help.github.com/en/github/managing-your-work-on-github/closing-issues-using-keywords","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/554417441/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/554421095","html_url":"https://github.com/apache/accumulo/pull/1433#issuecomment-554421095","issue_url":"https://api.github.com/repos/apache/accumulo/issues/1433","id":554421095,"node_id":"MDEyOklzc3VlQ29tbWVudDU1NDQyMTA5NQ==","user":{"login":"milleruntime","id":11872539,"node_id":"MDQ6VXNlcjExODcyNTM5","avatar_url":"https://avatars.githubusercontent.com/u/11872539?v=4","gravatar_id":"","url":"https://api.github.com/users/milleruntime","html_url":"https://github.com/milleruntime","followers_url":"https://api.github.com/users/milleruntime/followers","following_url":"https://api.github.com/users/milleruntime/following{/other_user}","gists_url":"https://api.github.com/users/milleruntime/gists{/gist_id}","starred_url":"https://api.github.com/users/milleruntime/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/milleruntime/subscriptions","organizations_url":"https://api.github.com/users/milleruntime/orgs","repos_url":"https://api.github.com/users/milleruntime/repos","events_url":"https://api.github.com/users/milleruntime/events{/privacy}","received_events_url":"https://api.github.com/users/milleruntime/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-15T16:06:31Z","updated_at":"2019-11-15T16:06:31Z","author_association":"CONTRIBUTOR","body":"Can you make the license template match our current license headers (at least the majority)?  Then you could avoid re-generating one for every file.  I have never not copied and pasted one so I imagine they can't be all that different.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/554421095/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/554441400","html_url":"https://github.com/apache/accumulo/pull/1426#issuecomment-554441400","issue_url":"https://api.github.com/repos/apache/accumulo/issues/1426","id":554441400,"node_id":"MDEyOklzc3VlQ29tbWVudDU1NDQ0MTQwMA==","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-15T16:57:30Z","updated_at":"2019-11-15T16:57:30Z","author_association":"CONTRIBUTOR","body":"> I wouldn't be opposed to dropping getServiceEnv() altogether since it hasn't been around very long and technically was never in the API.\r\n\r\nI considered that.  I decided that if a developer made the effort to get code working against 2.0 and heeded the new deprecation warnings in 2.0, that removing it would invalidate their effort.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/554441400/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/554446420","html_url":"https://github.com/apache/accumulo/pull/1433#issuecomment-554446420","issue_url":"https://api.github.com/repos/apache/accumulo/issues/1433","id":554446420,"node_id":"MDEyOklzc3VlQ29tbWVudDU1NDQ0NjQyMA==","user":{"login":"ctubbsii","id":1280725,"node_id":"MDQ6VXNlcjEyODA3MjU=","avatar_url":"https://avatars.githubusercontent.com/u/1280725?v=4","gravatar_id":"","url":"https://api.github.com/users/ctubbsii","html_url":"https://github.com/ctubbsii","followers_url":"https://api.github.com/users/ctubbsii/followers","following_url":"https://api.github.com/users/ctubbsii/following{/other_user}","gists_url":"https://api.github.com/users/ctubbsii/gists{/gist_id}","starred_url":"https://api.github.com/users/ctubbsii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ctubbsii/subscriptions","organizations_url":"https://api.github.com/users/ctubbsii/orgs","repos_url":"https://api.github.com/users/ctubbsii/repos","events_url":"https://api.github.com/users/ctubbsii/events{/privacy}","received_events_url":"https://api.github.com/users/ctubbsii/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-15T17:11:19Z","updated_at":"2019-11-15T17:11:19Z","author_association":"MEMBER","body":"> If this works well its going to be awesome. Does this new plugin run before the rat plugin? Is the rat plugin still needed?\r\n\r\nCurrently, it runs after the rat plugin. This plugin runs at `process-resources`, while rat runs at `validate` (see https://maven.apache.org/guides/introduction/introduction-to-the-lifecycle.html for reference on lifecycle phases).\r\n\r\nWe can re-order if necessary, but I'm not sure it matters much.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/554446420/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/554446646","html_url":"https://github.com/apache/accumulo/pull/1433#issuecomment-554446646","issue_url":"https://api.github.com/repos/apache/accumulo/issues/1433","id":554446646,"node_id":"MDEyOklzc3VlQ29tbWVudDU1NDQ0NjY0Ng==","user":{"login":"ctubbsii","id":1280725,"node_id":"MDQ6VXNlcjEyODA3MjU=","avatar_url":"https://avatars.githubusercontent.com/u/1280725?v=4","gravatar_id":"","url":"https://api.github.com/users/ctubbsii","html_url":"https://github.com/ctubbsii","followers_url":"https://api.github.com/users/ctubbsii/followers","following_url":"https://api.github.com/users/ctubbsii/following{/other_user}","gists_url":"https://api.github.com/users/ctubbsii/gists{/gist_id}","starred_url":"https://api.github.com/users/ctubbsii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ctubbsii/subscriptions","organizations_url":"https://api.github.com/users/ctubbsii/orgs","repos_url":"https://api.github.com/users/ctubbsii/repos","events_url":"https://api.github.com/users/ctubbsii/events{/privacy}","received_events_url":"https://api.github.com/users/ctubbsii/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-15T17:11:59Z","updated_at":"2019-11-15T17:11:59Z","author_association":"MEMBER","body":"> Can you make the license template match our current license headers (at least the majority)? Then you could avoid re-generating one for every file. I have never not copied and pasted one so I imagine they can't be all that different.\r\n\r\nI thought about that, but we had them too inconsistent, so the change was going to be large either way. I decided to converge on the format that is presented on ASF's official documentation instead.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/554446646/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/554453279","html_url":"https://github.com/apache/accumulo/pull/1433#issuecomment-554453279","issue_url":"https://api.github.com/repos/apache/accumulo/issues/1433","id":554453279,"node_id":"MDEyOklzc3VlQ29tbWVudDU1NDQ1MzI3OQ==","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-15T17:29:48Z","updated_at":"2019-11-15T17:29:48Z","author_association":"CONTRIBUTOR","body":"> Currently, it runs after the rat plugin.\r\n\r\nIt seems like it would be nice if it ran before the rat plugin, that way it could fix up files before rat fails the build.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/554453279/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/554454989","html_url":"https://github.com/apache/accumulo/pull/1433#issuecomment-554454989","issue_url":"https://api.github.com/repos/apache/accumulo/issues/1433","id":554454989,"node_id":"MDEyOklzc3VlQ29tbWVudDU1NDQ1NDk4OQ==","user":{"login":"ctubbsii","id":1280725,"node_id":"MDQ6VXNlcjEyODA3MjU=","avatar_url":"https://avatars.githubusercontent.com/u/1280725?v=4","gravatar_id":"","url":"https://api.github.com/users/ctubbsii","html_url":"https://github.com/ctubbsii","followers_url":"https://api.github.com/users/ctubbsii/followers","following_url":"https://api.github.com/users/ctubbsii/following{/other_user}","gists_url":"https://api.github.com/users/ctubbsii/gists{/gist_id}","starred_url":"https://api.github.com/users/ctubbsii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ctubbsii/subscriptions","organizations_url":"https://api.github.com/users/ctubbsii/orgs","repos_url":"https://api.github.com/users/ctubbsii/repos","events_url":"https://api.github.com/users/ctubbsii/events{/privacy}","received_events_url":"https://api.github.com/users/ctubbsii/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-15T17:34:23Z","updated_at":"2019-11-15T17:34:23Z","author_association":"MEMBER","body":"> > Currently, it runs after the rat plugin.\r\n> \r\n> It seems like it would be nice if it ran before the rat plugin, that way it could fix up files before rat fails the build.\r\n\r\nThat makes sense. I'll do that.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/554454989/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/554468464","html_url":"https://github.com/apache/accumulo/issues/1434#issuecomment-554468464","issue_url":"https://api.github.com/repos/apache/accumulo/issues/1434","id":554468464,"node_id":"MDEyOklzc3VlQ29tbWVudDU1NDQ2ODQ2NA==","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-15T18:10:01Z","updated_at":"2019-11-15T18:10:01Z","author_association":"CONTRIBUTOR","body":"I read this and thought it was a good overview\r\n\r\nhttp://tutorials.jenkov.com/java/modules.html","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/554468464/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/554470595","html_url":"https://github.com/apache/accumulo/pull/1433#issuecomment-554470595","issue_url":"https://api.github.com/repos/apache/accumulo/issues/1433","id":554470595,"node_id":"MDEyOklzc3VlQ29tbWVudDU1NDQ3MDU5NQ==","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-15T18:15:42Z","updated_at":"2019-11-15T18:15:42Z","author_association":"CONTRIBUTOR","body":"Would it make sense to disable this new plugin for travis builds?  That way rat can fail the travis build if files need to be fixed.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/554470595/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/554473371","html_url":"https://github.com/apache/accumulo/pull/1433#issuecomment-554473371","issue_url":"https://api.github.com/repos/apache/accumulo/issues/1433","id":554473371,"node_id":"MDEyOklzc3VlQ29tbWVudDU1NDQ3MzM3MQ==","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-15T18:23:31Z","updated_at":"2019-11-15T18:23:49Z","author_association":"CONTRIBUTOR","body":"> I'm not sure I want to redo this for 1.9, since it's a bit tedious, but it may help with getting things consistent. I'm open to feedback on that.\r\n\r\nIs there any benefit to making the same changes in 1.9? I am assuming that we will only have merge conflicts when someone modifies the license portion in 1.9.  I think that type of modification in 1.9 would be very rare.  Also if there is conflict, could you just delete the license portion and just let the plugin put it back?","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/554473371/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/554475985","html_url":"https://github.com/apache/accumulo/pull/1433#issuecomment-554475985","issue_url":"https://api.github.com/repos/apache/accumulo/issues/1433","id":554475985,"node_id":"MDEyOklzc3VlQ29tbWVudDU1NDQ3NTk4NQ==","user":{"login":"ctubbsii","id":1280725,"node_id":"MDQ6VXNlcjEyODA3MjU=","avatar_url":"https://avatars.githubusercontent.com/u/1280725?v=4","gravatar_id":"","url":"https://api.github.com/users/ctubbsii","html_url":"https://github.com/ctubbsii","followers_url":"https://api.github.com/users/ctubbsii/followers","following_url":"https://api.github.com/users/ctubbsii/following{/other_user}","gists_url":"https://api.github.com/users/ctubbsii/gists{/gist_id}","starred_url":"https://api.github.com/users/ctubbsii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ctubbsii/subscriptions","organizations_url":"https://api.github.com/users/ctubbsii/orgs","repos_url":"https://api.github.com/users/ctubbsii/repos","events_url":"https://api.github.com/users/ctubbsii/events{/privacy}","received_events_url":"https://api.github.com/users/ctubbsii/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-15T18:30:32Z","updated_at":"2019-11-15T18:30:32Z","author_association":"MEMBER","body":"> > I'm not sure I want to redo this for 1.9, since it's a bit tedious, but it may help with getting things consistent. I'm open to feedback on that.\r\n> \r\n> Is there any benefit to making the same changes in 1.9.\r\n\r\nThe main benefit is just having the automation to add the new licenses. I'm not worried about conflicts, because it'd probably only happen, as you say, when the header itself was changed, which shouldn't really happen. For that alone, I'm disinclined to pull this back into 1.9. However, the secondary benefit is that it helps keep our build/release tooling sync'd between branches, which makes it easier to ensure consistent release quality across our actively maintained versions.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/554475985/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/554476548","html_url":"https://github.com/apache/accumulo/pull/1433#issuecomment-554476548","issue_url":"https://api.github.com/repos/apache/accumulo/issues/1433","id":554476548,"node_id":"MDEyOklzc3VlQ29tbWVudDU1NDQ3NjU0OA==","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-15T18:32:05Z","updated_at":"2019-11-15T18:32:05Z","author_association":"CONTRIBUTOR","body":"> which makes it easier to ensure consistent release quality across our actively maintained versions.\r\n\r\nFor this particular case having the rat plugin in 1.9 achieves the quality goal.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/554476548/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/554477622","html_url":"https://github.com/apache/accumulo/pull/1433#issuecomment-554477622","issue_url":"https://api.github.com/repos/apache/accumulo/issues/1433","id":554477622,"node_id":"MDEyOklzc3VlQ29tbWVudDU1NDQ3NzYyMg==","user":{"login":"ctubbsii","id":1280725,"node_id":"MDQ6VXNlcjEyODA3MjU=","avatar_url":"https://avatars.githubusercontent.com/u/1280725?v=4","gravatar_id":"","url":"https://api.github.com/users/ctubbsii","html_url":"https://github.com/ctubbsii","followers_url":"https://api.github.com/users/ctubbsii/followers","following_url":"https://api.github.com/users/ctubbsii/following{/other_user}","gists_url":"https://api.github.com/users/ctubbsii/gists{/gist_id}","starred_url":"https://api.github.com/users/ctubbsii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ctubbsii/subscriptions","organizations_url":"https://api.github.com/users/ctubbsii/orgs","repos_url":"https://api.github.com/users/ctubbsii/repos","events_url":"https://api.github.com/users/ctubbsii/events{/privacy}","received_events_url":"https://api.github.com/users/ctubbsii/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-15T18:34:59Z","updated_at":"2019-11-15T18:34:59Z","author_association":"MEMBER","body":"> Would it make sense to disable this new plugin for travis builds? That way rat can fail the travis build if files need to be fixed.\r\n\r\nSince we currently don't have any other formatting validation checks during CI, I wouldn't want to add it in this PR. However, that could be done as a follow-on to create a CI profile that we use for CI that skips all formatting, and does only formatting validation for all our automated formatting.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/554477622/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/554481941","html_url":"https://github.com/apache/accumulo/pull/1433#issuecomment-554481941","issue_url":"https://api.github.com/repos/apache/accumulo/issues/1433","id":554481941,"node_id":"MDEyOklzc3VlQ29tbWVudDU1NDQ4MTk0MQ==","user":{"login":"ctubbsii","id":1280725,"node_id":"MDQ6VXNlcjEyODA3MjU=","avatar_url":"https://avatars.githubusercontent.com/u/1280725?v=4","gravatar_id":"","url":"https://api.github.com/users/ctubbsii","html_url":"https://github.com/ctubbsii","followers_url":"https://api.github.com/users/ctubbsii/followers","following_url":"https://api.github.com/users/ctubbsii/following{/other_user}","gists_url":"https://api.github.com/users/ctubbsii/gists{/gist_id}","starred_url":"https://api.github.com/users/ctubbsii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ctubbsii/subscriptions","organizations_url":"https://api.github.com/users/ctubbsii/orgs","repos_url":"https://api.github.com/users/ctubbsii/repos","events_url":"https://api.github.com/users/ctubbsii/events{/privacy}","received_events_url":"https://api.github.com/users/ctubbsii/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-15T18:47:25Z","updated_at":"2019-11-15T18:49:12Z","author_association":"MEMBER","body":"> > which makes it easier to ensure consistent release quality across our actively maintained versions.\r\n> \r\n> For this particular case having the rat plugin in 1.9 achieves the quality goal.\r\n\r\nAside from the manual fixes that I did to deal with double-license header issues in the bloomfilter code, I agree, with respect to licenses. I can backport those fixes manually on their own, though, without all the other changes.\r\n\r\nHowever, I was also talking about the burden to maintain separate build configuration, keeping all the Maven plugins up-to-date, etc. The more similar the pom.xml files are between branches, the easier the work is to maintain.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/554481941/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/554537277","html_url":"https://github.com/apache/accumulo/pull/1422#issuecomment-554537277","issue_url":"https://api.github.com/repos/apache/accumulo/issues/1422","id":554537277,"node_id":"MDEyOklzc3VlQ29tbWVudDU1NDUzNzI3Nw==","user":{"login":"jzgithub1","id":5930146,"node_id":"MDQ6VXNlcjU5MzAxNDY=","avatar_url":"https://avatars.githubusercontent.com/u/5930146?v=4","gravatar_id":"","url":"https://api.github.com/users/jzgithub1","html_url":"https://github.com/jzgithub1","followers_url":"https://api.github.com/users/jzgithub1/followers","following_url":"https://api.github.com/users/jzgithub1/following{/other_user}","gists_url":"https://api.github.com/users/jzgithub1/gists{/gist_id}","starred_url":"https://api.github.com/users/jzgithub1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jzgithub1/subscriptions","organizations_url":"https://api.github.com/users/jzgithub1/orgs","repos_url":"https://api.github.com/users/jzgithub1/repos","events_url":"https://api.github.com/users/jzgithub1/events{/privacy}","received_events_url":"https://api.github.com/users/jzgithub1/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-15T21:34:01Z","updated_at":"2019-11-15T21:34:01Z","author_association":"CONTRIBUTOR","body":"> Currently the watched node has a single prop name in its value. It could have a list in its value and that could be very beneficial for create, clone, and import table. The list could help avoid missing updates. It may also be useful for deletetable. It would also better support a future API call that allows setting multiple props at once.\r\n\r\n@keith-turner ,  when I started to implement this I took another hard look at what actions actually call TablePropUtil.setTableProperty and whether it is really necessary for all of them to send notification to all the ZCacheWatchers to notify of a them of creating, cloning and importing.  The reality is that the ZCacheWatchers don't need to get all these messages on the table-version-config znode.  The ZCache never got those messages for the table configuration items until after Zcache.get was first called on the table configuraton zNodes.  \r\n\r\nLets look at cloning for example.  A table exists, call it sourceTable.  Its configs are in Zookeeper.  You want to clone it into destinationTable.  sourceTable has it's table configuration items in all the ZooCaches across the cluster.  TableManager.cloneTable(sourceTable, destinationTable , ..... ) gets called.  cloneTable iterates through sourceTable's config values and sets identical ones for destinationTable in Zookeeper via TablePropUtil.setTableProperty.  At this time none of the ZooCache's anywhere have these zPaths for the destinationTable inside of their internal cache objects.  destinationTable is a new table and no  Tserver or anything has ever called the function ZooCache.get for any of destinationTables zooNode data. It could not have happened.  destinationTable just came into existence.  None of destinationTable's table configs will be in any ZooCache during the execution of cloneTable.    During the cloneTable table operation if we tell the ZooCaches to remove these new configuation items from their cache it is pointless since the configuration items can not be in the ZooCache's anywhere.  That means we don't have to modify the 'table-config-version' znode during cloning because it is pointless.  It really does nothing and is not required when you think about it. Look at what the NodeDataChanged event does now regarding the 'table-config-version' node. It just deletes from the cache the table config item pulled from the data of 'table-config-version' znode.  If you have a big list of items they will just be a big list that aren't in the cache yet.     \r\n\r\nThe call paths that I have identified that require the update of the 'table-config-version' node are ones that start from MasterClientServiceHandler.removeTableProperty and MasterClientServiceHandler.setTableProperty.  They work individually.  They can't be \"batched\".  \r\nI will implement \"batching\" when I can find a suitable entry point to do it.\r\n\r\nAnytime you use the mechanism of changing the data in 'table-version-config' to trigger watch events in the caches to remove items that are not even there yet, you are wasting network resources and taxing the ZooKeeper server. \r\n\r\n@keith-turner,  you motivated me to realize a very good optimization for this process.  Thank you. \r\nI will check in some a new commit for you to look at.  It doesn't implement batching but it is an improvement to the last commit.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/554537277/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/554654547","html_url":"https://github.com/apache/accumulo/issues/1423#issuecomment-554654547","issue_url":"https://api.github.com/repos/apache/accumulo/issues/1423","id":554654547,"node_id":"MDEyOklzc3VlQ29tbWVudDU1NDY1NDU0Nw==","user":{"login":"acastles24","id":55118346,"node_id":"MDQ6VXNlcjU1MTE4MzQ2","avatar_url":"https://avatars.githubusercontent.com/u/55118346?v=4","gravatar_id":"","url":"https://api.github.com/users/acastles24","html_url":"https://github.com/acastles24","followers_url":"https://api.github.com/users/acastles24/followers","following_url":"https://api.github.com/users/acastles24/following{/other_user}","gists_url":"https://api.github.com/users/acastles24/gists{/gist_id}","starred_url":"https://api.github.com/users/acastles24/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/acastles24/subscriptions","organizations_url":"https://api.github.com/users/acastles24/orgs","repos_url":"https://api.github.com/users/acastles24/repos","events_url":"https://api.github.com/users/acastles24/events{/privacy}","received_events_url":"https://api.github.com/users/acastles24/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-16T16:56:08Z","updated_at":"2019-11-16T16:56:08Z","author_association":"NONE","body":"It looks to me like the exists() method must be called before getData() since getData() in ZooKeeper requires a Stat variable which is generated by exists(). Am I interpreting this correctly? If so can Stat used by getData() be null?","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/554654547/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/554676769","html_url":"https://github.com/apache/accumulo/issues/1423#issuecomment-554676769","issue_url":"https://api.github.com/repos/apache/accumulo/issues/1423","id":554676769,"node_id":"MDEyOklzc3VlQ29tbWVudDU1NDY3Njc2OQ==","user":{"login":"jzgithub1","id":5930146,"node_id":"MDQ6VXNlcjU5MzAxNDY=","avatar_url":"https://avatars.githubusercontent.com/u/5930146?v=4","gravatar_id":"","url":"https://api.github.com/users/jzgithub1","html_url":"https://github.com/jzgithub1","followers_url":"https://api.github.com/users/jzgithub1/followers","following_url":"https://api.github.com/users/jzgithub1/following{/other_user}","gists_url":"https://api.github.com/users/jzgithub1/gists{/gist_id}","starred_url":"https://api.github.com/users/jzgithub1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jzgithub1/subscriptions","organizations_url":"https://api.github.com/users/jzgithub1/orgs","repos_url":"https://api.github.com/users/jzgithub1/repos","events_url":"https://api.github.com/users/jzgithub1/events{/privacy}","received_events_url":"https://api.github.com/users/jzgithub1/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-16T21:37:39Z","updated_at":"2019-11-16T21:37:39Z","author_association":"CONTRIBUTOR","body":"Read the comment above the call to exists().  It explains why it is doing this.  \r\n\r\n> `/*\r\n         * The following call to exists() is important, since we are caching that a node does not\r\n         * exist. Once the node comes into existence, it will be added to the cache. But this\r\n         * notification of a node coming into existence will only be given if exists() was\r\n         * previously called. If the call to exists() is bypassed and only getData() is called with\r\n         * a special case that looks for Code.NONODE in the KeeperException, then non-existence can\r\n         * not be cached.\r\n         */`\r\n","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/554676769/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/554682152","html_url":"https://github.com/apache/accumulo/issues/1423#issuecomment-554682152","issue_url":"https://api.github.com/repos/apache/accumulo/issues/1423","id":554682152,"node_id":"MDEyOklzc3VlQ29tbWVudDU1NDY4MjE1Mg==","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-16T22:56:41Z","updated_at":"2019-11-16T22:56:41Z","author_association":"CONTRIBUTOR","body":"> Read the comment above the call to exists(). It explains why it is doing this.\r\n\r\nGood catch, I think I wrote that comment a very long time ago.  Thinking something like the following may avoid the two calls to zookeeper when something exists.  \r\n\r\n```java\r\n        cacheWriteLock.lock();\r\n        try {\r\n          final ZooKeeper zooKeeper = getZooKeeper();\r\n          Stat stat;\r\n          byte[] data = null;\r\n         \r\n          while(true){\r\n            try {\r\n              stat = new Stat();\r\n              data = zooKeeper.getData(zPath, watcher, stat);\r\n              zstat = new ZcStat(stat);\r\n              break;\r\n            } catch (KeeperException.NoNodeException e1) {\r\n              // node did not exists, following call registers a watcher to trigger when it comes into existance\r\n              stat = zooKeeper.exists(zPath, watcher);\r\n              if(stat != null) {\r\n                //came into existance after call to get data... retry whole thing\r\n              } else {\r\n                break;\r\n              }\r\n            }\r\n          }\r\n          \r\n          put(zPath, data, zstat);\r\n          copyStats(status, zstat);\r\n          return data;\r\n        } finally {\r\n          cacheWriteLock.unlock();\r\n        }\r\n```\r\n\r\n\r\nWould still be two calls to zookeeper when it does not exists.  When I opened the issue I was thinking the exists case would be more prevalent, but now I am not sure.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/554682152/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/554683403","html_url":"https://github.com/apache/accumulo/pull/1422#issuecomment-554683403","issue_url":"https://api.github.com/repos/apache/accumulo/issues/1422","id":554683403,"node_id":"MDEyOklzc3VlQ29tbWVudDU1NDY4MzQwMw==","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-16T23:13:51Z","updated_at":"2019-11-16T23:13:51Z","author_association":"CONTRIBUTOR","body":"@jzgithub1 that may be good idea to not trigger on table creation and clone. I would want to do some investigation of a few things.\r\n\r\nTserver execute random operations for clients.  Wondering if the following is possible?  I think there may be some things that would prevent this, but I am not sure.\r\n\r\n  * Client process P1 initiates create table op for table TAB1\r\n  * Client process P2 request request table props for TAB1, this dispatches to tserver TS1\r\n  * The master process has written some props to ZK for table TAB1\r\n  * Tserver TS1 reads a partial list of props for TAB1 into its zoocache\r\n  * The master process completes writing props to ZK for table TAB1\r\n  * If this could happen the partial props in ZooCache may not update \r\n\r\nNeed to investigate the order of information put into ZK, like if the table ID to name map is put into ZK before the props that would make it visible to clients. Also do clients ignore tables in the NEW state?  I think they may, but not sure.\r\n ","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/554683403/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/554799502","html_url":"https://github.com/apache/accumulo/issues/1423#issuecomment-554799502","issue_url":"https://api.github.com/repos/apache/accumulo/issues/1423","id":554799502,"node_id":"MDEyOklzc3VlQ29tbWVudDU1NDc5OTUwMg==","user":{"login":"acastles24","id":55118346,"node_id":"MDQ6VXNlcjU1MTE4MzQ2","avatar_url":"https://avatars.githubusercontent.com/u/55118346?v=4","gravatar_id":"","url":"https://api.github.com/users/acastles24","html_url":"https://github.com/acastles24","followers_url":"https://api.github.com/users/acastles24/followers","following_url":"https://api.github.com/users/acastles24/following{/other_user}","gists_url":"https://api.github.com/users/acastles24/gists{/gist_id}","starred_url":"https://api.github.com/users/acastles24/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/acastles24/subscriptions","organizations_url":"https://api.github.com/users/acastles24/orgs","repos_url":"https://api.github.com/users/acastles24/repos","events_url":"https://api.github.com/users/acastles24/events{/privacy}","received_events_url":"https://api.github.com/users/acastles24/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-17T23:19:54Z","updated_at":"2019-11-17T23:19:54Z","author_association":"NONE","body":"OK I see, thanks for the explanation. Should it just be left as is then?","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/554799502/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/554811044","html_url":"https://github.com/apache/accumulo/issues/1423#issuecomment-554811044","issue_url":"https://api.github.com/repos/apache/accumulo/issues/1423","id":554811044,"node_id":"MDEyOklzc3VlQ29tbWVudDU1NDgxMTA0NA==","user":{"login":"jzgithub1","id":5930146,"node_id":"MDQ6VXNlcjU5MzAxNDY=","avatar_url":"https://avatars.githubusercontent.com/u/5930146?v=4","gravatar_id":"","url":"https://api.github.com/users/jzgithub1","html_url":"https://github.com/jzgithub1","followers_url":"https://api.github.com/users/jzgithub1/followers","following_url":"https://api.github.com/users/jzgithub1/following{/other_user}","gists_url":"https://api.github.com/users/jzgithub1/gists{/gist_id}","starred_url":"https://api.github.com/users/jzgithub1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jzgithub1/subscriptions","organizations_url":"https://api.github.com/users/jzgithub1/orgs","repos_url":"https://api.github.com/users/jzgithub1/repos","events_url":"https://api.github.com/users/jzgithub1/events{/privacy}","received_events_url":"https://api.github.com/users/jzgithub1/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-18T01:10:57Z","updated_at":"2019-11-18T01:10:57Z","author_association":"CONTRIBUTOR","body":"I am inclined to think it should be left as it.  Let @keith-turner give you direction on how to proceed.  Thank you for your investigation of this issue.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/554811044/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/555067415","html_url":"https://github.com/apache/accumulo/issues/1423#issuecomment-555067415","issue_url":"https://api.github.com/repos/apache/accumulo/issues/1423","id":555067415,"node_id":"MDEyOklzc3VlQ29tbWVudDU1NTA2NzQxNQ==","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-18T15:31:39Z","updated_at":"2019-11-18T15:31:39Z","author_association":"CONTRIBUTOR","body":"> Should it just be left as is then?\r\n\r\nI did a quick survey of the code to see how Accumulo is using node data from zoocache.  I found the code is using it to obtain the following information.\r\n\r\n * servers locks and locations\r\n * tables name to id mapping\r\n * root tablet metadata\r\n * accumulo instance id\r\n * accumulo user information\r\n * table properties\r\n\r\nFor all of the above categories, except table properties, I think the expectation is that the data exists in ZK.  Therefore for all uses cases, except table properties, I suspect the approach of calling `zk.getData` first then `zk.exists` if needed makes sense and would result in less overall RPCs to ZK.  \r\n However I don't know the proportion of calls to getData for non table props vs table props.  \r\n\r\nHow table props are cached is undergoing major changes in #1422. Since the relevance of this change hinges on table properties I think it would make sense to wait until after #1422 is complete and reassess. ","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/555067415/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/555067751","html_url":"https://github.com/apache/accumulo/pull/1422#issuecomment-555067751","issue_url":"https://api.github.com/repos/apache/accumulo/issues/1422","id":555067751,"node_id":"MDEyOklzc3VlQ29tbWVudDU1NTA2Nzc1MQ==","user":{"login":"jzgithub1","id":5930146,"node_id":"MDQ6VXNlcjU5MzAxNDY=","avatar_url":"https://avatars.githubusercontent.com/u/5930146?v=4","gravatar_id":"","url":"https://api.github.com/users/jzgithub1","html_url":"https://github.com/jzgithub1","followers_url":"https://api.github.com/users/jzgithub1/followers","following_url":"https://api.github.com/users/jzgithub1/following{/other_user}","gists_url":"https://api.github.com/users/jzgithub1/gists{/gist_id}","starred_url":"https://api.github.com/users/jzgithub1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jzgithub1/subscriptions","organizations_url":"https://api.github.com/users/jzgithub1/orgs","repos_url":"https://api.github.com/users/jzgithub1/repos","events_url":"https://api.github.com/users/jzgithub1/events{/privacy}","received_events_url":"https://api.github.com/users/jzgithub1/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-18T15:32:20Z","updated_at":"2019-11-18T15:32:20Z","author_association":"CONTRIBUTOR","body":"@keith-turner I am rolling back the last commit.   We need the version of the table-config-version updated whenever a table config item  is added by creation or cloning in order to keep it updated in the 'lastTableConfigVersion' member of the ZooCache class.   The act of trying to remove items from the ZooCache that we know can't be in the ZooCache yet is not costly computationally and will be fixed later on.  The reasoning I lay out above regarding about being able to rely on ZooCache.get to actually return up-to-date config items when they are actually needed still applies. ","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/555067751/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/555093372","html_url":"https://github.com/apache/accumulo/pull/1436#issuecomment-555093372","issue_url":"https://api.github.com/repos/apache/accumulo/issues/1436","id":555093372,"node_id":"MDEyOklzc3VlQ29tbWVudDU1NTA5MzM3Mg==","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-18T16:25:30Z","updated_at":"2019-11-18T16:25:30Z","author_association":"CONTRIBUTOR","body":"Thanks for the contribution @ata18 and welcome to the Apache Accumulo community.  If you would like to be listed as a contributor on Accumulo's people page please make a website PR for [people.md](https://github.com/apache/accumulo-website/edit/master/pages/people.md).\r\n\r\nIf you intend to make more contributions, please consider subscribing to the [dev list](https://accumulo.apache.org/contact-us/) and introducing yourself.  Also, you can use the dev list or slack to reach out if you have questions about anything.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/555093372/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/555125231","html_url":"https://github.com/apache/accumulo/pull/1422#issuecomment-555125231","issue_url":"https://api.github.com/repos/apache/accumulo/issues/1422","id":555125231,"node_id":"MDEyOklzc3VlQ29tbWVudDU1NTEyNTIzMQ==","user":{"login":"jzgithub1","id":5930146,"node_id":"MDQ6VXNlcjU5MzAxNDY=","avatar_url":"https://avatars.githubusercontent.com/u/5930146?v=4","gravatar_id":"","url":"https://api.github.com/users/jzgithub1","html_url":"https://github.com/jzgithub1","followers_url":"https://api.github.com/users/jzgithub1/followers","following_url":"https://api.github.com/users/jzgithub1/following{/other_user}","gists_url":"https://api.github.com/users/jzgithub1/gists{/gist_id}","starred_url":"https://api.github.com/users/jzgithub1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jzgithub1/subscriptions","organizations_url":"https://api.github.com/users/jzgithub1/orgs","repos_url":"https://api.github.com/users/jzgithub1/repos","events_url":"https://api.github.com/users/jzgithub1/events{/privacy}","received_events_url":"https://api.github.com/users/jzgithub1/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-18T17:36:41Z","updated_at":"2019-11-19T14:41:05Z","author_association":"CONTRIBUTOR","body":"@keith-turner.  Something that I found out about cloneTable ( at least with the 'ci' table in accumulo-testing) is that when line 241 in TableManager.cloneTable gets executed there aren't any table properties to set:\r\n```-java\r\nlog.info(\r\n        \"TableManager.cloneTable has  \" + propertiesToSet.keySet().size() + \" table props to set\");\r\n\r\nfor (Entry<String,String> entry : propertiesToSet.entrySet())\r\n      TablePropUtil.setTableProperty(context, tableId, entry.getKey(), entry.getValue());\r\n```\r\nDuring the cloning operation the table properties are mostly set in the new table zoo.recursiveCopyPersistent on the line 236 so I have to modify that function to update the table-version-config node.  In there it is easy to gather all of the updated configs and send them atomically into the table-config-version node like you want so I will implement that by the end of today.\r\n\r\nMy logs:\r\n`install/logs/accumulo/master_dragonfly.log:2019-11-18 12:18:38,494 [tables.TableManager] INFO : TableManager.cloneTable has  0 table props to set`","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/555125231/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/555176846","html_url":"https://github.com/apache/accumulo/issues/1434#issuecomment-555176846","issue_url":"https://api.github.com/repos/apache/accumulo/issues/1434","id":555176846,"node_id":"MDEyOklzc3VlQ29tbWVudDU1NTE3Njg0Ng==","user":{"login":"milleruntime","id":11872539,"node_id":"MDQ6VXNlcjExODcyNTM5","avatar_url":"https://avatars.githubusercontent.com/u/11872539?v=4","gravatar_id":"","url":"https://api.github.com/users/milleruntime","html_url":"https://github.com/milleruntime","followers_url":"https://api.github.com/users/milleruntime/followers","following_url":"https://api.github.com/users/milleruntime/following{/other_user}","gists_url":"https://api.github.com/users/milleruntime/gists{/gist_id}","starred_url":"https://api.github.com/users/milleruntime/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/milleruntime/subscriptions","organizations_url":"https://api.github.com/users/milleruntime/orgs","repos_url":"https://api.github.com/users/milleruntime/repos","events_url":"https://api.github.com/users/milleruntime/events{/privacy}","received_events_url":"https://api.github.com/users/milleruntime/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-18T19:41:37Z","updated_at":"2019-11-18T19:41:37Z","author_association":"CONTRIBUTOR","body":"I think a good first step would be adding the ```Automatic-Module-Name``` to our JAR manifest files and getting our dependencies to set this property as well.  Here is a good blog post explaining the situation:\r\nhttp://branchandbound.net/blog/java/2017/12/automatic-module-name/","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/555176846/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/555194757","html_url":"https://github.com/apache/accumulo/issues/1434#issuecomment-555194757","issue_url":"https://api.github.com/repos/apache/accumulo/issues/1434","id":555194757,"node_id":"MDEyOklzc3VlQ29tbWVudDU1NTE5NDc1Nw==","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-18T20:27:21Z","updated_at":"2019-11-18T20:27:21Z","author_association":"CONTRIBUTOR","body":"We should probably look for Accumulo dependencies that have not yet set `Automatic-Module-Name` and encourage them to set it.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/555194757/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/555198006","html_url":"https://github.com/apache/accumulo/issues/1434#issuecomment-555198006","issue_url":"https://api.github.com/repos/apache/accumulo/issues/1434","id":555198006,"node_id":"MDEyOklzc3VlQ29tbWVudDU1NTE5ODAwNg==","user":{"login":"milleruntime","id":11872539,"node_id":"MDQ6VXNlcjExODcyNTM5","avatar_url":"https://avatars.githubusercontent.com/u/11872539?v=4","gravatar_id":"","url":"https://api.github.com/users/milleruntime","html_url":"https://github.com/milleruntime","followers_url":"https://api.github.com/users/milleruntime/followers","following_url":"https://api.github.com/users/milleruntime/following{/other_user}","gists_url":"https://api.github.com/users/milleruntime/gists{/gist_id}","starred_url":"https://api.github.com/users/milleruntime/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/milleruntime/subscriptions","organizations_url":"https://api.github.com/users/milleruntime/orgs","repos_url":"https://api.github.com/users/milleruntime/repos","events_url":"https://api.github.com/users/milleruntime/events{/privacy}","received_events_url":"https://api.github.com/users/milleruntime/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-18T20:36:36Z","updated_at":"2019-11-18T20:36:36Z","author_association":"CONTRIBUTOR","body":"> We should probably look for Accumulo dependencies that have not yet set `Automatic-Module-Name` and encourage them to set it.\r\n\r\nI am going to try and write a script to analyze our dependencies and generate a list.  Otherwise it will be time consuming to inspect each JAR by hand.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/555198006/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/555213665","html_url":"https://github.com/apache/accumulo/issues/1434#issuecomment-555213665","issue_url":"https://api.github.com/repos/apache/accumulo/issues/1434","id":555213665,"node_id":"MDEyOklzc3VlQ29tbWVudDU1NTIxMzY2NQ==","user":{"login":"milleruntime","id":11872539,"node_id":"MDQ6VXNlcjExODcyNTM5","avatar_url":"https://avatars.githubusercontent.com/u/11872539?v=4","gravatar_id":"","url":"https://api.github.com/users/milleruntime","html_url":"https://github.com/milleruntime","followers_url":"https://api.github.com/users/milleruntime/followers","following_url":"https://api.github.com/users/milleruntime/following{/other_user}","gists_url":"https://api.github.com/users/milleruntime/gists{/gist_id}","starred_url":"https://api.github.com/users/milleruntime/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/milleruntime/subscriptions","organizations_url":"https://api.github.com/users/milleruntime/orgs","repos_url":"https://api.github.com/users/milleruntime/repos","events_url":"https://api.github.com/users/milleruntime/events{/privacy}","received_events_url":"https://api.github.com/users/milleruntime/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-18T21:18:44Z","updated_at":"2019-11-18T21:18:44Z","author_association":"CONTRIBUTOR","body":"It turns out the maven dependency plugin already does this so we can generate a list easily with the following command:\r\n```mvn dependency:list -DexcludeTransitive=true | grep \"(auto)\" | grep -v \"optional\" | sort | uniq```","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/555213665/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/555321084","html_url":"https://github.com/apache/accumulo/issues/1423#issuecomment-555321084","issue_url":"https://api.github.com/repos/apache/accumulo/issues/1423","id":555321084,"node_id":"MDEyOklzc3VlQ29tbWVudDU1NTMyMTA4NA==","user":{"login":"acastles24","id":55118346,"node_id":"MDQ6VXNlcjU1MTE4MzQ2","avatar_url":"https://avatars.githubusercontent.com/u/55118346?v=4","gravatar_id":"","url":"https://api.github.com/users/acastles24","html_url":"https://github.com/acastles24","followers_url":"https://api.github.com/users/acastles24/followers","following_url":"https://api.github.com/users/acastles24/following{/other_user}","gists_url":"https://api.github.com/users/acastles24/gists{/gist_id}","starred_url":"https://api.github.com/users/acastles24/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/acastles24/subscriptions","organizations_url":"https://api.github.com/users/acastles24/orgs","repos_url":"https://api.github.com/users/acastles24/repos","events_url":"https://api.github.com/users/acastles24/events{/privacy}","received_events_url":"https://api.github.com/users/acastles24/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-19T03:52:33Z","updated_at":"2019-11-19T03:52:33Z","author_association":"NONE","body":"OK sounds good, thanks for the help.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/555321084/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/555615690","html_url":"https://github.com/apache/accumulo/pull/1438#issuecomment-555615690","issue_url":"https://api.github.com/repos/apache/accumulo/issues/1438","id":555615690,"node_id":"MDEyOklzc3VlQ29tbWVudDU1NTYxNTY5MA==","user":{"login":"milleruntime","id":11872539,"node_id":"MDQ6VXNlcjExODcyNTM5","avatar_url":"https://avatars.githubusercontent.com/u/11872539?v=4","gravatar_id":"","url":"https://api.github.com/users/milleruntime","html_url":"https://github.com/milleruntime","followers_url":"https://api.github.com/users/milleruntime/followers","following_url":"https://api.github.com/users/milleruntime/following{/other_user}","gists_url":"https://api.github.com/users/milleruntime/gists{/gist_id}","starred_url":"https://api.github.com/users/milleruntime/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/milleruntime/subscriptions","organizations_url":"https://api.github.com/users/milleruntime/orgs","repos_url":"https://api.github.com/users/milleruntime/repos","events_url":"https://api.github.com/users/milleruntime/events{/privacy}","received_events_url":"https://api.github.com/users/milleruntime/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-19T17:23:50Z","updated_at":"2019-11-19T17:23:50Z","author_association":"CONTRIBUTOR","body":"This change breaks the javadoc but I am not sure why.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/555615690/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/555683211","html_url":"https://github.com/apache/accumulo/pull/1422#issuecomment-555683211","issue_url":"https://api.github.com/repos/apache/accumulo/issues/1422","id":555683211,"node_id":"MDEyOklzc3VlQ29tbWVudDU1NTY4MzIxMQ==","user":{"login":"jzgithub1","id":5930146,"node_id":"MDQ6VXNlcjU5MzAxNDY=","avatar_url":"https://avatars.githubusercontent.com/u/5930146?v=4","gravatar_id":"","url":"https://api.github.com/users/jzgithub1","html_url":"https://github.com/jzgithub1","followers_url":"https://api.github.com/users/jzgithub1/followers","following_url":"https://api.github.com/users/jzgithub1/following{/other_user}","gists_url":"https://api.github.com/users/jzgithub1/gists{/gist_id}","starred_url":"https://api.github.com/users/jzgithub1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jzgithub1/subscriptions","organizations_url":"https://api.github.com/users/jzgithub1/orgs","repos_url":"https://api.github.com/users/jzgithub1/repos","events_url":"https://api.github.com/users/jzgithub1/events{/privacy}","received_events_url":"https://api.github.com/users/jzgithub1/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-19T19:56:17Z","updated_at":"2019-11-19T19:56:17Z","author_association":"CONTRIBUTOR","body":"@keith-turner,  notifying the ZooCache of in a single notification about all of the added properties has been implemented.  As mentioned above, the only thing that really gets accomplished is that the ZooCaches find out there is a table-config-version they need to update their cache.   We are getting close to resolving issues of concern in this pull request.  \r\n\r\nI am continuing to look into the other concerns you have bulleted above.  ","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/555683211/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/555726509","html_url":"https://github.com/apache/accumulo/pull/1422#issuecomment-555726509","issue_url":"https://api.github.com/repos/apache/accumulo/issues/1422","id":555726509,"node_id":"MDEyOklzc3VlQ29tbWVudDU1NTcyNjUwOQ==","user":{"login":"jzgithub1","id":5930146,"node_id":"MDQ6VXNlcjU5MzAxNDY=","avatar_url":"https://avatars.githubusercontent.com/u/5930146?v=4","gravatar_id":"","url":"https://api.github.com/users/jzgithub1","html_url":"https://github.com/jzgithub1","followers_url":"https://api.github.com/users/jzgithub1/followers","following_url":"https://api.github.com/users/jzgithub1/following{/other_user}","gists_url":"https://api.github.com/users/jzgithub1/gists{/gist_id}","starred_url":"https://api.github.com/users/jzgithub1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jzgithub1/subscriptions","organizations_url":"https://api.github.com/users/jzgithub1/orgs","repos_url":"https://api.github.com/users/jzgithub1/repos","events_url":"https://api.github.com/users/jzgithub1/events{/privacy}","received_events_url":"https://api.github.com/users/jzgithub1/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-19T21:35:58Z","updated_at":"2019-11-19T21:35:58Z","author_association":"CONTRIBUTOR","body":"> @jzgithub1 that may be good idea to not trigger on table creation and clone. I would want to do some investigation of a few things.\r\n> \r\n> Tserver execute random operations for clients. Wondering if the following is possible? I think there may be some things that would prevent this, but I am not sure.\r\n> \r\n>     * Client process P1 initiates create table op for table TAB1\r\n> \r\n>     * Client process P2 request request table props for TAB1, this dispatches to tserver TS1\r\n> \r\n>     * The master process has written some props to ZK for table TAB1\r\n> \r\n>     * Tserver TS1 reads a partial list of props for TAB1 into its zoocache\r\n> \r\n>     * The master process completes writing props to ZK for table TAB1\r\n> \r\n>     * If this could happen the partial props in ZooCache may not update\r\n> \r\n> \r\n> Need to investigate the order of information put into ZK, like if the table ID to name map is put into ZK before the props that would make it visible to clients. Also do clients ignore tables in the NEW state? I think they may, but not sure.\r\n\r\n@keith-turner,  where we are now in this PR is it that we trigger updates of the cache on create table and clone table.  I implemented the sending of all the configs at cloning like you requested (with a caveat I will explain later) .  Delete table is going to modify the ZooCache the way it used to.  Just removing every item from ZooCache with a key that is prefixed with /accumulo/{instance_id}/tables/{table-id}.\r\n\r\nThe sequence of steps that you are talking about is something that you probably observed and I believe @ivakegg  has seen also.  It may actually be fixed by this pull request already.  This is because when a table configuration item is modified by a client process now it will definitely trigger an watch event in the ZCacheWatcher (for the table-config-version node) where it might not have been triggered before .   Only non-existent znodes that had a watcher put on them by a call to ZooCache.get(zPath) would trigger a NodeCreated event catchable in the ZCacheWatcher.  So what people may have been observing is that when they set table configurations in the accumulo shell (during clonetable or createtable), the defaults already in the ZooCache were never wiped and refreshed because there was no proper mechanism for it.  This is my initial hypothesis to explain the phenomenon of non durable table configuration modifications.  \r\n\r\nI will continue to come up with actual steps and scenarios I can go through to address the concerns you have made in the bulleted comments above.\r\n\r\nPlease take a look at my last couple of commits to see that I am going in the right direction towards addressing other requests you have made.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/555726509/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/556094316","html_url":"https://github.com/apache/accumulo/pull/1439#issuecomment-556094316","issue_url":"https://api.github.com/repos/apache/accumulo/issues/1439","id":556094316,"node_id":"MDEyOklzc3VlQ29tbWVudDU1NjA5NDMxNg==","user":{"login":"milleruntime","id":11872539,"node_id":"MDQ6VXNlcjExODcyNTM5","avatar_url":"https://avatars.githubusercontent.com/u/11872539?v=4","gravatar_id":"","url":"https://api.github.com/users/milleruntime","html_url":"https://github.com/milleruntime","followers_url":"https://api.github.com/users/milleruntime/followers","following_url":"https://api.github.com/users/milleruntime/following{/other_user}","gists_url":"https://api.github.com/users/milleruntime/gists{/gist_id}","starred_url":"https://api.github.com/users/milleruntime/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/milleruntime/subscriptions","organizations_url":"https://api.github.com/users/milleruntime/orgs","repos_url":"https://api.github.com/users/milleruntime/repos","events_url":"https://api.github.com/users/milleruntime/events{/privacy}","received_events_url":"https://api.github.com/users/milleruntime/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-20T16:47:47Z","updated_at":"2019-11-20T16:47:47Z","author_association":"CONTRIBUTOR","body":"Thanks for the contribution @srajtiwari and welcome to the Apache Accumulo community. If you would like to be listed as a contributor on Accumulo's people page please make a website PR for [people.md](https://github.com/apache/accumulo-website/edit/master/pages/people.md).\r\n\r\nIf you intend to make more contributions, please consider subscribing to the dev list and introducing yourself. Also, you can use the [dev list](https://accumulo.apache.org/contact-us/) or slack to reach out if you have questions about anything.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/556094316/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/556405223","html_url":"https://github.com/apache/accumulo/pull/1440#issuecomment-556405223","issue_url":"https://api.github.com/repos/apache/accumulo/issues/1440","id":556405223,"node_id":"MDEyOklzc3VlQ29tbWVudDU1NjQwNTIyMw==","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-20T21:14:37Z","updated_at":"2019-11-20T21:14:37Z","author_association":"CONTRIBUTOR","body":"I ran a performance test on a small EC2 cluster to give this a try.  I had the following setup. \r\n\r\n * Table with around 192 million entries\r\n * 8 tablets\r\n * 3 tservers (d2xlarge)\r\n * 30% of 4G data cache size\r\n * 6 threads running circular full table  scans (each with different random start) with execution hint `scan_type=background`\r\n * 16 threads doing random lookups out from set of 8K random rows\r\n\r\nFor the threads doing random lookup on a subset of the table, their data just fit in the data cache. The full table did not fit into the cache. For this test scenario all of the data was local for each tserver and it fit in the OS cache, so a cache miss was not terribly slow. Also HDFS was optimized for local data. Cache misses were noticeable from a latency perspective, which is all I cared about. \r\n\r\nI ran three test all setup with the following Accumulo shell commands.  This makes all the scans that set the execution hint `scan_type=background` go to a special executor with a single thread.\r\n\r\n```\r\n  createtable dc\r\n  config -s tserver.scan.executors.bge.threads=1\r\n  config -t dc -s table.scan.dispatcher.opts.executor.background=bge\r\n  config -t dc -s table.cache.index.enable=true\r\n  config -t dc -s table.cache.block.enable=true\r\n  config -t dc -s table.file.compress.type=snappy\r\n```\r\n\r\nFor one test run I set the following to make scans that set the execution hint `scan_type=background` use opportunistic caching.  This means those scans would use data if its in the cache, but would never load missing data into the cache.\r\n\r\n```\r\n  config -t dc -s table.scan.dispatcher.opts.cacheUsage.background=opportunistic\r\n```\r\n\r\nFor another test run I set the following to make scans that set the execution hint `scan_type=background` fully use the cache.\r\n\r\n```\r\n  config -t dc -s table.scan.dispatcher.opts.cacheUsage.background=enabled\r\n```\r\n\r\nFor the last test run, I just did not run background scans.  I only ran the scans doing random lookups.\r\n\r\nBelow are the average time for the scans doing random lookups for the three test runs. If I ran in a situation where cache misses had higher latency, I suspect the plot would differ more dramatically. I wish I had run a 4th test where the random lookup threads did not use cache.  In all three test the random lookup threads always used cache.\r\n\r\n![test-results](https://user-images.githubusercontent.com/1268739/69278178-c75a7d00-0baf-11ea-9793-a18dee7b1d1f.png)\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/556405223/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/556429640","html_url":"https://github.com/apache/accumulo/pull/1422#issuecomment-556429640","issue_url":"https://api.github.com/repos/apache/accumulo/issues/1422","id":556429640,"node_id":"MDEyOklzc3VlQ29tbWVudDU1NjQyOTY0MA==","user":{"login":"jzgithub1","id":5930146,"node_id":"MDQ6VXNlcjU5MzAxNDY=","avatar_url":"https://avatars.githubusercontent.com/u/5930146?v=4","gravatar_id":"","url":"https://api.github.com/users/jzgithub1","html_url":"https://github.com/jzgithub1","followers_url":"https://api.github.com/users/jzgithub1/followers","following_url":"https://api.github.com/users/jzgithub1/following{/other_user}","gists_url":"https://api.github.com/users/jzgithub1/gists{/gist_id}","starred_url":"https://api.github.com/users/jzgithub1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jzgithub1/subscriptions","organizations_url":"https://api.github.com/users/jzgithub1/orgs","repos_url":"https://api.github.com/users/jzgithub1/repos","events_url":"https://api.github.com/users/jzgithub1/events{/privacy}","received_events_url":"https://api.github.com/users/jzgithub1/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-20T21:36:34Z","updated_at":"2019-11-20T21:36:34Z","author_association":"CONTRIBUTOR","body":"I observed that when a NodeChildrenChanged event occurred on a table configuration znodes (ones that ends in conf) the watcher was not being reset on that zpath and the children of the conf zpath where not being removed from the cache.  I now perform those actions.  It may fix some issues people have see with config changes not being applied because old or default configs have not been removed from the cache.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/556429640/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/556431590","html_url":"https://github.com/apache/accumulo/issues/1434#issuecomment-556431590","issue_url":"https://api.github.com/repos/apache/accumulo/issues/1434","id":556431590,"node_id":"MDEyOklzc3VlQ29tbWVudDU1NjQzMTU5MA==","user":{"login":"milleruntime","id":11872539,"node_id":"MDQ6VXNlcjExODcyNTM5","avatar_url":"https://avatars.githubusercontent.com/u/11872539?v=4","gravatar_id":"","url":"https://api.github.com/users/milleruntime","html_url":"https://github.com/milleruntime","followers_url":"https://api.github.com/users/milleruntime/followers","following_url":"https://api.github.com/users/milleruntime/following{/other_user}","gists_url":"https://api.github.com/users/milleruntime/gists{/gist_id}","starred_url":"https://api.github.com/users/milleruntime/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/milleruntime/subscriptions","organizations_url":"https://api.github.com/users/milleruntime/orgs","repos_url":"https://api.github.com/users/milleruntime/repos","events_url":"https://api.github.com/users/milleruntime/events{/privacy}","received_events_url":"https://api.github.com/users/milleruntime/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-20T21:38:20Z","updated_at":"2020-10-26T19:11:48Z","author_association":"CONTRIBUTOR","body":"For dependencies that have not broached the subject yet, I created the following issues about adding automatic-module-name: \r\n-  https://issues.apache.org/jira/browse/CLI-299\r\n-  https://issues.apache.org/jira/browse/VFS-746 \r\n-  https://issues.apache.org/jira/browse/CURATOR-550\r\n-  https://issues.apache.org/jira/browse/THRIFT-5023 (Fixed in https://github.com/apache/thrift/pull/2264)\r\n-  https://issues.apache.org/jira/browse/ZOOKEEPER-3625\r\n","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/556431590/reactions","total_count":2,"+1":0,"-1":0,"laugh":0,"hooray":2,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/556454841","html_url":"https://github.com/apache/accumulo/issues/1434#issuecomment-556454841","issue_url":"https://api.github.com/repos/apache/accumulo/issues/1434","id":556454841,"node_id":"MDEyOklzc3VlQ29tbWVudDU1NjQ1NDg0MQ==","user":{"login":"milleruntime","id":11872539,"node_id":"MDQ6VXNlcjExODcyNTM5","avatar_url":"https://avatars.githubusercontent.com/u/11872539?v=4","gravatar_id":"","url":"https://api.github.com/users/milleruntime","html_url":"https://github.com/milleruntime","followers_url":"https://api.github.com/users/milleruntime/followers","following_url":"https://api.github.com/users/milleruntime/following{/other_user}","gists_url":"https://api.github.com/users/milleruntime/gists{/gist_id}","starred_url":"https://api.github.com/users/milleruntime/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/milleruntime/subscriptions","organizations_url":"https://api.github.com/users/milleruntime/orgs","repos_url":"https://api.github.com/users/milleruntime/repos","events_url":"https://api.github.com/users/milleruntime/events{/privacy}","received_events_url":"https://api.github.com/users/milleruntime/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-20T21:59:40Z","updated_at":"2019-11-20T21:59:40Z","author_association":"CONTRIBUTOR","body":"Here is a list of dependencies without a module name and their status:\r\n- com.beust:jcommander:jar:1.72:compile -- module jcommander (auto)\r\nhttps://github.com/cbeust/jcommander/issues/385\r\n- com.google.code.gson:gson:jar:2.8.5:compile -- module gson (auto)\r\nhttps://github.com/google/gson/issues/1238\r\n- com.google.protobuf:protobuf-java:jar:3.7.1:compile -- module protobuf.java (auto)\r\nFixed in 3.10.0: https://github.com/protocolbuffers/protobuf/releases/tag/v3.10.0\r\n- commons-beanutils:commons-beanutils:jar:1.9.3:runtime -- module commons.beanutils (auto)\r\nFixed in 2.0.0\r\n- commons-cli:commons-cli:jar:1.4:compile -- module commons.cli (auto)\r\nCreated https://issues.apache.org/jira/browse/CLI-299\r\n- commons-logging:commons-logging:jar:1.2:compile -- module commons.logging (auto)\r\nhttps://issues.apache.org/jira/projects/LOGGING/issues/LOGGING-165\r\n- com.sun.xml.bind:jaxb-core:jar:2.3.0.1:runtime -- module jaxb.core (auto)\r\nIn Beta release 2.4.0-b180608.0325 - https://github.com/javaee/jaxb-v2/issues/1168\r\n- javax.servlet:javax.servlet-api:jar:4.0.1:compile -- module javax.servlet.api (auto)\r\nFixed in 4.0.3-RELEASE - https://github.com/eclipse-ee4j/servlet-api/blob/4.0.3-RELEASE/api/pom.xml#L193-L195\r\n- jline:jline:jar:2.11:compile -- module jline (auto)\r\nPossibly in Jline3 https://github.com/jline/jline3/issues/70\r\n- junit:junit:jar:4.12:compile -- module junit (auto)\r\nModules implemented in junit5\r\n- log4j:log4j:jar:1.2.17:compile -- module log4j (auto)\r\nFixed in 2.13.0\r\n- org.apache.commons:commons-math3:jar:3.6.1:compile -- module commons.math3 (auto)\r\nhttps://issues.apache.org/jira/browse/MATH-1486\r\n- org.apache.commons:commons-vfs2:jar:2.3:compile -- module commons.vfs2 (auto)\r\nCreated https://issues.apache.org/jira/browse/VFS-746 \r\n- org.apache.curator:curator-framework:jar:2.12.0:test -- module curator.framework (auto)\r\nCreated https://issues.apache.org/jira/browse/CURATOR-550\r\n- org.apache.hadoop.*\r\nOpen issue under support for Java 11: https://issues.apache.org/jira/browse/HADOOP-15786\r\n- org.apache.thrift:libthrift:jar:0.12.0:compile -- module libthrift (auto)\r\nCreated https://issues.apache.org/jira/browse/THRIFT-5023\r\n- org.apache.zookeeper:zookeeper:jar:3.4.14:compile -- module zookeeper (auto)\r\nCreated https://issues.apache.org/jira/browse/ZOOKEEPER-3625\r\n- org.glassfish.jersey.*\r\nhttps://github.com/eclipse-ee4j/jersey/issues/4138\r\n- org.slf4j:slf4j-api:jar:1.7.26:compile -- module slf4j.api (auto)\r\nFixed in 1.7.28 - https://jira.qos.ch/browse/SLF4J-420\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/556454841/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/557329087","html_url":"https://github.com/apache/accumulo/pull/1438#issuecomment-557329087","issue_url":"https://api.github.com/repos/apache/accumulo/issues/1438","id":557329087,"node_id":"MDEyOklzc3VlQ29tbWVudDU1NzMyOTA4Nw==","user":{"login":"milleruntime","id":11872539,"node_id":"MDQ6VXNlcjExODcyNTM5","avatar_url":"https://avatars.githubusercontent.com/u/11872539?v=4","gravatar_id":"","url":"https://api.github.com/users/milleruntime","html_url":"https://github.com/milleruntime","followers_url":"https://api.github.com/users/milleruntime/followers","following_url":"https://api.github.com/users/milleruntime/following{/other_user}","gists_url":"https://api.github.com/users/milleruntime/gists{/gist_id}","starred_url":"https://api.github.com/users/milleruntime/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/milleruntime/subscriptions","organizations_url":"https://api.github.com/users/milleruntime/orgs","repos_url":"https://api.github.com/users/milleruntime/repos","events_url":"https://api.github.com/users/milleruntime/events{/privacy}","received_events_url":"https://api.github.com/users/milleruntime/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-22T00:10:39Z","updated_at":"2019-11-22T00:10:39Z","author_association":"CONTRIBUTOR","body":"> This change breaks the javadoc but I am not sure why.\r\n\r\nEven with the all of our jars having their own name the javadoc plugin is still failing.  It looks like an open bug with the plugin: https://issues.apache.org/jira/browse/MJAVADOC-609","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/557329087/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/557657442","html_url":"https://github.com/apache/accumulo/pull/1374#issuecomment-557657442","issue_url":"https://api.github.com/repos/apache/accumulo/issues/1374","id":557657442,"node_id":"MDEyOklzc3VlQ29tbWVudDU1NzY1NzQ0Mg==","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-22T19:13:38Z","updated_at":"2019-11-22T19:13:38Z","author_association":"CONTRIBUTOR","body":"@lbschanno I really like the refactoring you did in 20a9e63.  I opened lbschanno/accumulo#3 as an attempt to further simplify the locking and synchronization.  ","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/557657442/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/557681442","html_url":"https://github.com/apache/accumulo/pull/1422#issuecomment-557681442","issue_url":"https://api.github.com/repos/apache/accumulo/issues/1422","id":557681442,"node_id":"MDEyOklzc3VlQ29tbWVudDU1NzY4MTQ0Mg==","user":{"login":"jzgithub1","id":5930146,"node_id":"MDQ6VXNlcjU5MzAxNDY=","avatar_url":"https://avatars.githubusercontent.com/u/5930146?v=4","gravatar_id":"","url":"https://api.github.com/users/jzgithub1","html_url":"https://github.com/jzgithub1","followers_url":"https://api.github.com/users/jzgithub1/followers","following_url":"https://api.github.com/users/jzgithub1/following{/other_user}","gists_url":"https://api.github.com/users/jzgithub1/gists{/gist_id}","starred_url":"https://api.github.com/users/jzgithub1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jzgithub1/subscriptions","organizations_url":"https://api.github.com/users/jzgithub1/orgs","repos_url":"https://api.github.com/users/jzgithub1/repos","events_url":"https://api.github.com/users/jzgithub1/events{/privacy}","received_events_url":"https://api.github.com/users/jzgithub1/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-22T20:25:30Z","updated_at":"2019-11-22T20:25:30Z","author_association":"CONTRIBUTOR","body":"> @jzgithub1 that may be good idea to not trigger on table creation and clone. I would want to do some investigation of a few things.\r\n> \r\n> Tserver execute random operations for clients. Wondering if the following is possible? I think there may be some things that would prevent this, but I am not sure.\r\n> \r\n>     * Client process P1 initiates create table op for table TAB1\r\n> \r\n>     * Client process P2 request request table props for TAB1, this dispatches to tserver TS1\r\n> \r\n>     * The master process has written some props to ZK for table TAB1\r\n> \r\n>     * Tserver TS1 reads a partial list of props for TAB1 into its zoocache\r\n> \r\n>     * The master process completes writing props to ZK for table TAB1\r\n> \r\n>     * If this could happen the partial props in ZooCache may not update\r\n> \r\n> \r\n> Need to investigate the order of information put into ZK, like if the table ID to name map is put into ZK before the props that would make it visible to clients. Also do clients ignore tables in the NEW state? I think they may, but not sure.\r\n\r\n@keith-turner . my last commit assures that once the master process completes writing props to ZK for TAB1 you won't see a partial props update.  This because a NodeChildrenChanges event will occur for the specific table's 'conf' znode and all the table props will now be cleared from the cache and restored for just that table.  That didn't happen before.  All that happened before was that the value in the cache for the 'conf' directory was removed from the cache.  No other attempt was even made to put a the watcher back on that znode.  In the scenario you describe we are more solid now than we have been in the past in regards to CAP considerations. JMHO.  I have traced the logging as I created, cloned and added and modified props to tables.  I was surprised to see us handling the NodeChildrenChanged event on the 'conf' znodes the way we were. ","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/557681442/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/557738703","html_url":"https://github.com/apache/accumulo/pull/1442#issuecomment-557738703","issue_url":"https://api.github.com/repos/apache/accumulo/issues/1442","id":557738703,"node_id":"MDEyOklzc3VlQ29tbWVudDU1NzczODcwMw==","user":{"login":"ctubbsii","id":1280725,"node_id":"MDQ6VXNlcjEyODA3MjU=","avatar_url":"https://avatars.githubusercontent.com/u/1280725?v=4","gravatar_id":"","url":"https://api.github.com/users/ctubbsii","html_url":"https://github.com/ctubbsii","followers_url":"https://api.github.com/users/ctubbsii/followers","following_url":"https://api.github.com/users/ctubbsii/following{/other_user}","gists_url":"https://api.github.com/users/ctubbsii/gists{/gist_id}","starred_url":"https://api.github.com/users/ctubbsii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ctubbsii/subscriptions","organizations_url":"https://api.github.com/users/ctubbsii/orgs","repos_url":"https://api.github.com/users/ctubbsii/repos","events_url":"https://api.github.com/users/ctubbsii/events{/privacy}","received_events_url":"https://api.github.com/users/ctubbsii/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-23T00:04:01Z","updated_at":"2019-11-23T00:04:01Z","author_association":"MEMBER","body":"It might be worth backporting this to 1.x, if the tablet suspend feature exists there.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/557738703/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/558231268","html_url":"https://github.com/apache/accumulo/pull/1442#issuecomment-558231268","issue_url":"https://api.github.com/repos/apache/accumulo/issues/1442","id":558231268,"node_id":"MDEyOklzc3VlQ29tbWVudDU1ODIzMTI2OA==","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-25T16:24:32Z","updated_at":"2019-11-25T16:24:32Z","author_association":"CONTRIBUTOR","body":"I looked over the code and I think the way it is using System.nanoTime is appropriate, because the use of skewTime makes the use of nanoTime always relative within a process.  This means the code should maintain a monotonically increasing counter as its javadoc suggest.  Below is an example of what the current code would do.\r\n\r\n  * When never run before master process M1 puts 0 on ZK.  Assume M1 has nanoTime of 60E9, it will set its skewTime to 0 - 60E9 = -60E9.\r\n   * 10 seconds later, master M1 has nanoTime of 70E9.  It will add its skew time and store that in ZK.  So it stores 70E9-60E9 = 10E9 in ZK.\r\n   * Master M1 dies.  \r\n   * 3 hours later master M2 starts.  It reads the current time from ZK as 10E9.  Assume master M2 has a nano time of 2500E9.  It will compute a skew time of 10E9 - 2500E9 = -2490E9.\r\n   * 10 seconds later, M2 has a nanoTime of 2510E9.  It will add its skewTime and store that in ZK.  So it does 2510E9 - 2490E = 20E and stores that in ZK.\r\n\r\n\r\n\r\n  ","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/558231268/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/558241037","html_url":"https://github.com/apache/accumulo/pull/1442#issuecomment-558241037","issue_url":"https://api.github.com/repos/apache/accumulo/issues/1442","id":558241037,"node_id":"MDEyOklzc3VlQ29tbWVudDU1ODI0MTAzNw==","user":{"login":"milleruntime","id":11872539,"node_id":"MDQ6VXNlcjExODcyNTM5","avatar_url":"https://avatars.githubusercontent.com/u/11872539?v=4","gravatar_id":"","url":"https://api.github.com/users/milleruntime","html_url":"https://github.com/milleruntime","followers_url":"https://api.github.com/users/milleruntime/followers","following_url":"https://api.github.com/users/milleruntime/following{/other_user}","gists_url":"https://api.github.com/users/milleruntime/gists{/gist_id}","starred_url":"https://api.github.com/users/milleruntime/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/milleruntime/subscriptions","organizations_url":"https://api.github.com/users/milleruntime/orgs","repos_url":"https://api.github.com/users/milleruntime/repos","events_url":"https://api.github.com/users/milleruntime/events{/privacy}","received_events_url":"https://api.github.com/users/milleruntime/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-25T16:47:19Z","updated_at":"2019-11-25T16:47:19Z","author_association":"CONTRIBUTOR","body":"> I looked over the code and I think the way it is using System.nanoTime is appropriate, because the use of skewTime makes the use of nanoTime always relative within a process. This means the code should maintain a monotonically increasing counter as its javadoc suggest. Below is an example of what the current code would do.\r\n> \r\n> * When never run before master process M1 puts 0 on ZK.  Assume M1 has nanoTime of 60E9, it will set its skewTime to 0 - 60E9 = -60E9.\r\n> * 10 seconds later, master M1 has nanoTime of 70E9.  It will add its skew time and store that in ZK.  So it stores 70E9-60E9 = 10E9 in ZK.\r\n> * Master M1 dies.\r\n> * 3 hours later master M2 starts.  It reads the current time from ZK as 10E9.  Assume master M2 has a nano time of 2500E9.  It will compute a skew time of 10E9 - 2500E9 = -2490E9.\r\n\r\nThis is assuming that the M2 initial measurement of nano time is greater than the initial measurement of M1.  M2 will run in a different Java VM so there is no guarantee of how the second time will relate to the first time.\r\n","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/558241037/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/558242311","html_url":"https://github.com/apache/accumulo/issues/1373#issuecomment-558242311","issue_url":"https://api.github.com/repos/apache/accumulo/issues/1373","id":558242311,"node_id":"MDEyOklzc3VlQ29tbWVudDU1ODI0MjMxMQ==","user":{"login":"karthick-rn","id":7976585,"node_id":"MDQ6VXNlcjc5NzY1ODU=","avatar_url":"https://avatars.githubusercontent.com/u/7976585?v=4","gravatar_id":"","url":"https://api.github.com/users/karthick-rn","html_url":"https://github.com/karthick-rn","followers_url":"https://api.github.com/users/karthick-rn/followers","following_url":"https://api.github.com/users/karthick-rn/following{/other_user}","gists_url":"https://api.github.com/users/karthick-rn/gists{/gist_id}","starred_url":"https://api.github.com/users/karthick-rn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/karthick-rn/subscriptions","organizations_url":"https://api.github.com/users/karthick-rn/orgs","repos_url":"https://api.github.com/users/karthick-rn/repos","events_url":"https://api.github.com/users/karthick-rn/events{/privacy}","received_events_url":"https://api.github.com/users/karthick-rn/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-25T16:50:17Z","updated_at":"2019-11-25T16:50:17Z","author_association":"CONTRIBUTOR","body":"I'm interested to work on this. ","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/558242311/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/558246458","html_url":"https://github.com/apache/accumulo/pull/1442#issuecomment-558246458","issue_url":"https://api.github.com/repos/apache/accumulo/issues/1442","id":558246458,"node_id":"MDEyOklzc3VlQ29tbWVudDU1ODI0NjQ1OA==","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-25T16:59:33Z","updated_at":"2019-11-25T16:59:33Z","author_association":"CONTRIBUTOR","body":"> M2 will run in a different Java VM so there is no guarantee of how the second time will relate to the first time.\r\n\r\nI don't think the time between machines matters, because the way skewTime is used it makes everything relative within a process. Below is another scenario where M2 has a nanoTime less than M1.\r\n\r\n * M2 starts.  I reads the current time from ZK as 10E9.  M2 has a nanoTime of -4200E9.  It computes a skew time of 10E9 - (-4200E9) = 4210E9.\r\n * 10 seconds later, M2 writes -4190E9 + 4210E9 = 20E9 to ZK","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/558246458/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/558246535","html_url":"https://github.com/apache/accumulo/pull/1442#issuecomment-558246535","issue_url":"https://api.github.com/repos/apache/accumulo/issues/1442","id":558246535,"node_id":"MDEyOklzc3VlQ29tbWVudDU1ODI0NjUzNQ==","user":{"login":"milleruntime","id":11872539,"node_id":"MDQ6VXNlcjExODcyNTM5","avatar_url":"https://avatars.githubusercontent.com/u/11872539?v=4","gravatar_id":"","url":"https://api.github.com/users/milleruntime","html_url":"https://github.com/milleruntime","followers_url":"https://api.github.com/users/milleruntime/followers","following_url":"https://api.github.com/users/milleruntime/following{/other_user}","gists_url":"https://api.github.com/users/milleruntime/gists{/gist_id}","starred_url":"https://api.github.com/users/milleruntime/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/milleruntime/subscriptions","organizations_url":"https://api.github.com/users/milleruntime/orgs","repos_url":"https://api.github.com/users/milleruntime/repos","events_url":"https://api.github.com/users/milleruntime/events{/privacy}","received_events_url":"https://api.github.com/users/milleruntime/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-25T16:59:47Z","updated_at":"2019-11-25T16:59:47Z","author_association":"CONTRIBUTOR","body":"> a monotonically increasing counter\r\n\r\nThis is exactly what System.currentTimeMillis is... and the function that returns this time, ```getTime``` drops the nano second precision by converting it to millis.  I don't see why we would want to use nano time over currentTimeMillis.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/558246535/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/558247704","html_url":"https://github.com/apache/accumulo/pull/1442#issuecomment-558247704","issue_url":"https://api.github.com/repos/apache/accumulo/issues/1442","id":558247704,"node_id":"MDEyOklzc3VlQ29tbWVudDU1ODI0NzcwNA==","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-25T17:02:28Z","updated_at":"2019-11-25T17:02:28Z","author_association":"CONTRIBUTOR","body":"> I don't see why we would want to use nano time over currentTimeMillis.\r\n\r\nSystem.currentTimeMillis can go backwards (if someone resets the time on a machine).  Differences computed by System.nanoTime will always increase, even if someone resets the time on the machine.  This code seems primarily concerned about the deltas and does not care about absolute times.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/558247704/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/558258330","html_url":"https://github.com/apache/accumulo/pull/1442#issuecomment-558258330","issue_url":"https://api.github.com/repos/apache/accumulo/issues/1442","id":558258330,"node_id":"MDEyOklzc3VlQ29tbWVudDU1ODI1ODMzMA==","user":{"login":"milleruntime","id":11872539,"node_id":"MDQ6VXNlcjExODcyNTM5","avatar_url":"https://avatars.githubusercontent.com/u/11872539?v=4","gravatar_id":"","url":"https://api.github.com/users/milleruntime","html_url":"https://github.com/milleruntime","followers_url":"https://api.github.com/users/milleruntime/followers","following_url":"https://api.github.com/users/milleruntime/following{/other_user}","gists_url":"https://api.github.com/users/milleruntime/gists{/gist_id}","starred_url":"https://api.github.com/users/milleruntime/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/milleruntime/subscriptions","organizations_url":"https://api.github.com/users/milleruntime/orgs","repos_url":"https://api.github.com/users/milleruntime/repos","events_url":"https://api.github.com/users/milleruntime/events{/privacy}","received_events_url":"https://api.github.com/users/milleruntime/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-25T17:28:14Z","updated_at":"2019-11-25T17:28:14Z","author_association":"CONTRIBUTOR","body":"> > I don't see why we would want to use nano time over currentTimeMillis.\r\n> \r\n> System.currentTimeMillis can go backwards (if someone resets the time on a machine). Differences computed by System.nanoTime will always increase, even if someone resets the time on the machine. This code seems primarily concerned about the deltas and does not care about absolute times.\r\n\r\nOK I see. And I now see that it is only used for tracking tablet suspension.  The javadoc comments were misleading to me. ","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/558258330/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/558258991","html_url":"https://github.com/apache/accumulo/issues/1355#issuecomment-558258991","issue_url":"https://api.github.com/repos/apache/accumulo/issues/1355","id":558258991,"node_id":"MDEyOklzc3VlQ29tbWVudDU1ODI1ODk5MQ==","user":{"login":"milleruntime","id":11872539,"node_id":"MDQ6VXNlcjExODcyNTM5","avatar_url":"https://avatars.githubusercontent.com/u/11872539?v=4","gravatar_id":"","url":"https://api.github.com/users/milleruntime","html_url":"https://github.com/milleruntime","followers_url":"https://api.github.com/users/milleruntime/followers","following_url":"https://api.github.com/users/milleruntime/following{/other_user}","gists_url":"https://api.github.com/users/milleruntime/gists{/gist_id}","starred_url":"https://api.github.com/users/milleruntime/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/milleruntime/subscriptions","organizations_url":"https://api.github.com/users/milleruntime/orgs","repos_url":"https://api.github.com/users/milleruntime/repos","events_url":"https://api.github.com/users/milleruntime/events{/privacy}","received_events_url":"https://api.github.com/users/milleruntime/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-25T17:29:57Z","updated_at":"2019-11-25T17:29:57Z","author_association":"CONTRIBUTOR","body":"This was analyzed in #1442 ","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/558258991/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/559930666","html_url":"https://github.com/apache/accumulo/pull/1374#issuecomment-559930666","issue_url":"https://api.github.com/repos/apache/accumulo/issues/1374","id":559930666,"node_id":"MDEyOklzc3VlQ29tbWVudDU1OTkzMDY2Ng==","user":{"login":"lbschanno","id":52420215,"node_id":"MDQ6VXNlcjUyNDIwMjE1","avatar_url":"https://avatars.githubusercontent.com/u/52420215?v=4","gravatar_id":"","url":"https://api.github.com/users/lbschanno","html_url":"https://github.com/lbschanno","followers_url":"https://api.github.com/users/lbschanno/followers","following_url":"https://api.github.com/users/lbschanno/following{/other_user}","gists_url":"https://api.github.com/users/lbschanno/gists{/gist_id}","starred_url":"https://api.github.com/users/lbschanno/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lbschanno/subscriptions","organizations_url":"https://api.github.com/users/lbschanno/orgs","repos_url":"https://api.github.com/users/lbschanno/repos","events_url":"https://api.github.com/users/lbschanno/events{/privacy}","received_events_url":"https://api.github.com/users/lbschanno/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-11-30T09:00:42Z","updated_at":"2019-11-30T09:00:42Z","author_association":"CONTRIBUTOR","body":"I added the additional suggestions, and then rebased in order to update the branch with all commits currently in master, and to consolidate all of the PR-related commits into a single commit.\r\n\r\n@keith-turner I can to write an IT test to test the overall correctness of the functions that we changed, but I'm not entirely certain how to write tests to ensure the correctness of the multithreading aspects.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/559930666/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/560475121","html_url":"https://github.com/apache/accumulo/pull/1374#issuecomment-560475121","issue_url":"https://api.github.com/repos/apache/accumulo/issues/1374","id":560475121,"node_id":"MDEyOklzc3VlQ29tbWVudDU2MDQ3NTEyMQ==","user":{"login":"lbschanno","id":52420215,"node_id":"MDQ6VXNlcjUyNDIwMjE1","avatar_url":"https://avatars.githubusercontent.com/u/52420215?v=4","gravatar_id":"","url":"https://api.github.com/users/lbschanno","html_url":"https://github.com/lbschanno","followers_url":"https://api.github.com/users/lbschanno/followers","following_url":"https://api.github.com/users/lbschanno/following{/other_user}","gists_url":"https://api.github.com/users/lbschanno/gists{/gist_id}","starred_url":"https://api.github.com/users/lbschanno/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lbschanno/subscriptions","organizations_url":"https://api.github.com/users/lbschanno/orgs","repos_url":"https://api.github.com/users/lbschanno/repos","events_url":"https://api.github.com/users/lbschanno/events{/privacy}","received_events_url":"https://api.github.com/users/lbschanno/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-12-02T16:36:48Z","updated_at":"2019-12-02T16:36:48Z","author_association":"CONTRIBUTOR","body":"Please hold of on merging this in, I forgot to do a proper build to ensure the files are formatted correctly. Currently doing that now.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/560475121/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/560477230","html_url":"https://github.com/apache/accumulo/pull/1374#issuecomment-560477230","issue_url":"https://api.github.com/repos/apache/accumulo/issues/1374","id":560477230,"node_id":"MDEyOklzc3VlQ29tbWVudDU2MDQ3NzIzMA==","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-12-02T16:41:35Z","updated_at":"2019-12-02T16:41:35Z","author_association":"CONTRIBUTOR","body":"@lbschanno testing that single threaded functionality is correct would be nice.  Ideally mocking could be used in a unit test, so an IT is not needed.  Do you want to do that in a follow up PR?\r\n\r\nAs for multi-threaded test, I think a simple test could be written.  Like have 10 threads all request connections and make sure they all get diff connections.  Could use a barrier (count down latch), where each thread does something like the following.\r\n\r\n```java\r\n   var conn  = getConnection(...)\r\n   sharedList1.add(conn)\r\n   latch1.countDown()\r\n   latch1.await()\r\n   returnConn(conn);\r\n\r\n   conn  = getConnection(...)\r\n   sharedList2.add(conn)\r\n   latch2.countDown()\r\n   latch2.await()\r\n   returnConn(conn);\r\n```\r\n\r\nin the main test method could do the following\r\n\r\n```java\r\n  // create the two countdown latches of size X\r\n  // create the two shared list\r\n  // create X threads each running the code above\r\n  latch1.await()\r\n  // verify there are X unique objects in sharedList1\r\n  latch2.await()\r\n  // verify there are X unique objects in sharedList2 \r\n```","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/560477230/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/560487379","html_url":"https://github.com/apache/accumulo/pull/1374#issuecomment-560487379","issue_url":"https://api.github.com/repos/apache/accumulo/issues/1374","id":560487379,"node_id":"MDEyOklzc3VlQ29tbWVudDU2MDQ4NzM3OQ==","user":{"login":"lbschanno","id":52420215,"node_id":"MDQ6VXNlcjUyNDIwMjE1","avatar_url":"https://avatars.githubusercontent.com/u/52420215?v=4","gravatar_id":"","url":"https://api.github.com/users/lbschanno","html_url":"https://github.com/lbschanno","followers_url":"https://api.github.com/users/lbschanno/followers","following_url":"https://api.github.com/users/lbschanno/following{/other_user}","gists_url":"https://api.github.com/users/lbschanno/gists{/gist_id}","starred_url":"https://api.github.com/users/lbschanno/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lbschanno/subscriptions","organizations_url":"https://api.github.com/users/lbschanno/orgs","repos_url":"https://api.github.com/users/lbschanno/repos","events_url":"https://api.github.com/users/lbschanno/events{/privacy}","received_events_url":"https://api.github.com/users/lbschanno/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-12-02T17:06:08Z","updated_at":"2019-12-02T17:06:08Z","author_association":"CONTRIBUTOR","body":"Forced pushed an edit to the commit that includes formatting changes that resulted from a build.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/560487379/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/560489731","html_url":"https://github.com/apache/accumulo/pull/1374#issuecomment-560489731","issue_url":"https://api.github.com/repos/apache/accumulo/issues/1374","id":560489731,"node_id":"MDEyOklzc3VlQ29tbWVudDU2MDQ4OTczMQ==","user":{"login":"lbschanno","id":52420215,"node_id":"MDQ6VXNlcjUyNDIwMjE1","avatar_url":"https://avatars.githubusercontent.com/u/52420215?v=4","gravatar_id":"","url":"https://api.github.com/users/lbschanno","html_url":"https://github.com/lbschanno","followers_url":"https://api.github.com/users/lbschanno/followers","following_url":"https://api.github.com/users/lbschanno/following{/other_user}","gists_url":"https://api.github.com/users/lbschanno/gists{/gist_id}","starred_url":"https://api.github.com/users/lbschanno/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lbschanno/subscriptions","organizations_url":"https://api.github.com/users/lbschanno/orgs","repos_url":"https://api.github.com/users/lbschanno/repos","events_url":"https://api.github.com/users/lbschanno/events{/privacy}","received_events_url":"https://api.github.com/users/lbschanno/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-12-02T17:11:47Z","updated_at":"2019-12-02T17:11:47Z","author_association":"CONTRIBUTOR","body":"@keith-turner I think we can do the tests in a follow-up PR. Thanks for the suggestions on structuring the multi-threaded tests, I feel I can handle doing that.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/560489731/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/560506944","html_url":"https://github.com/apache/accumulo/pull/1374#issuecomment-560506944","issue_url":"https://api.github.com/repos/apache/accumulo/issues/1374","id":560506944,"node_id":"MDEyOklzc3VlQ29tbWVudDU2MDUwNjk0NA==","user":{"login":"lbschanno","id":52420215,"node_id":"MDQ6VXNlcjUyNDIwMjE1","avatar_url":"https://avatars.githubusercontent.com/u/52420215?v=4","gravatar_id":"","url":"https://api.github.com/users/lbschanno","html_url":"https://github.com/lbschanno","followers_url":"https://api.github.com/users/lbschanno/followers","following_url":"https://api.github.com/users/lbschanno/following{/other_user}","gists_url":"https://api.github.com/users/lbschanno/gists{/gist_id}","starred_url":"https://api.github.com/users/lbschanno/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lbschanno/subscriptions","organizations_url":"https://api.github.com/users/lbschanno/orgs","repos_url":"https://api.github.com/users/lbschanno/repos","events_url":"https://api.github.com/users/lbschanno/events{/privacy}","received_events_url":"https://api.github.com/users/lbschanno/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-12-02T17:56:00Z","updated_at":"2019-12-02T17:56:00Z","author_association":"CONTRIBUTOR","body":"Force-pushed an edit to the commits to remove trailing whitespace and to address the following errors from FindBugs.\r\n```\r\n [ERROR] Bad attempt to compute absolute value of signed 32-bit hashcode in org.apache.accumulo.core.clientImpl.ThriftTransportPool$ConnectionPool.getLock(ThriftTransportKey) [org.apache.accumulo.core.clientImpl.ThriftTransportPool$ConnectionPool] At ThriftTransportPool.java:[line 265] RV_ABSOLUTE_VALUE_OF_HASHCODE\r\n [ERROR] org.apache.accumulo.core.clientImpl.ThriftTransportPool$ConnectionPool.shutdown() does not release lock on all paths [org.apache.accumulo.core.clientImpl.ThriftTransportPool$ConnectionPool] At ThriftTransportPool.java:[line 228] UL_UNRELEASED_LOCK\r\n```\r\n I modified the absolute value computation, and suppressed the UL_UNRELEASED_LOCK error.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/560506944/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/560721295","html_url":"https://github.com/apache/accumulo/issues/1122#issuecomment-560721295","issue_url":"https://api.github.com/repos/apache/accumulo/issues/1122","id":560721295,"node_id":"MDEyOklzc3VlQ29tbWVudDU2MDcyMTI5NQ==","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-12-02T22:12:27Z","updated_at":"2019-12-02T22:12:27Z","author_association":"CONTRIBUTOR","body":"Closed by 2e5182b","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/560721295/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/560944624","html_url":"https://github.com/apache/accumulo/pull/1445#issuecomment-560944624","issue_url":"https://api.github.com/repos/apache/accumulo/issues/1445","id":560944624,"node_id":"MDEyOklzc3VlQ29tbWVudDU2MDk0NDYyNA==","user":{"login":"ctubbsii","id":1280725,"node_id":"MDQ6VXNlcjEyODA3MjU=","avatar_url":"https://avatars.githubusercontent.com/u/1280725?v=4","gravatar_id":"","url":"https://api.github.com/users/ctubbsii","html_url":"https://github.com/ctubbsii","followers_url":"https://api.github.com/users/ctubbsii/followers","following_url":"https://api.github.com/users/ctubbsii/following{/other_user}","gists_url":"https://api.github.com/users/ctubbsii/gists{/gist_id}","starred_url":"https://api.github.com/users/ctubbsii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ctubbsii/subscriptions","organizations_url":"https://api.github.com/users/ctubbsii/orgs","repos_url":"https://api.github.com/users/ctubbsii/repos","events_url":"https://api.github.com/users/ctubbsii/events{/privacy}","received_events_url":"https://api.github.com/users/ctubbsii/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-12-03T00:37:27Z","updated_at":"2019-12-03T00:37:27Z","author_association":"MEMBER","body":"In our current code, we don't try to keep `table.file.replication` in sync with on-disk policy. Instead, we use the configuration only for new files.... leaving fine-tuning and after-the-fact maintenance up to the HDFS administrator. I would advise you to do the same here... which would significantly reduce complexity added to Accumulo's code base to support the HDFS feature. You could forego the FATE operation entirely.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/560944624/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/560946136","html_url":"https://github.com/apache/accumulo/pull/1445#issuecomment-560946136","issue_url":"https://api.github.com/repos/apache/accumulo/issues/1445","id":560946136,"node_id":"MDEyOklzc3VlQ29tbWVudDU2MDk0NjEzNg==","user":{"login":"etseidl","id":25541553,"node_id":"MDQ6VXNlcjI1NTQxNTUz","avatar_url":"https://avatars.githubusercontent.com/u/25541553?v=4","gravatar_id":"","url":"https://api.github.com/users/etseidl","html_url":"https://github.com/etseidl","followers_url":"https://api.github.com/users/etseidl/followers","following_url":"https://api.github.com/users/etseidl/following{/other_user}","gists_url":"https://api.github.com/users/etseidl/gists{/gist_id}","starred_url":"https://api.github.com/users/etseidl/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/etseidl/subscriptions","organizations_url":"https://api.github.com/users/etseidl/orgs","repos_url":"https://api.github.com/users/etseidl/repos","events_url":"https://api.github.com/users/etseidl/events{/privacy}","received_events_url":"https://api.github.com/users/etseidl/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-12-03T00:44:02Z","updated_at":"2019-12-03T00:44:02Z","author_association":"CONTRIBUTOR","body":"@ctubbsii Thanks, that will simplify things greatly.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/560946136/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/560946575","html_url":"https://github.com/apache/accumulo/pull/1374#issuecomment-560946575","issue_url":"https://api.github.com/repos/apache/accumulo/issues/1374","id":560946575,"node_id":"MDEyOklzc3VlQ29tbWVudDU2MDk0NjU3NQ==","user":{"login":"ctubbsii","id":1280725,"node_id":"MDQ6VXNlcjEyODA3MjU=","avatar_url":"https://avatars.githubusercontent.com/u/1280725?v=4","gravatar_id":"","url":"https://api.github.com/users/ctubbsii","html_url":"https://github.com/ctubbsii","followers_url":"https://api.github.com/users/ctubbsii/followers","following_url":"https://api.github.com/users/ctubbsii/following{/other_user}","gists_url":"https://api.github.com/users/ctubbsii/gists{/gist_id}","starred_url":"https://api.github.com/users/ctubbsii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ctubbsii/subscriptions","organizations_url":"https://api.github.com/users/ctubbsii/orgs","repos_url":"https://api.github.com/users/ctubbsii/repos","events_url":"https://api.github.com/users/ctubbsii/events{/privacy}","received_events_url":"https://api.github.com/users/ctubbsii/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-12-03T00:46:04Z","updated_at":"2019-12-03T00:46:04Z","author_association":"MEMBER","body":"@lbschanno It's generally best to avoid force-pushing, until the end. When we merge, we usually squash the whole PR into one commit (unless there's a good reason not to), so having multiple smaller commits, rather than amending and force-pushing, isn't a problem. Actually, it's easier to see what has changed since the last time looking at the PR, when there are multiple commits, rather than force-push.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/560946575/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/560954009","html_url":"https://github.com/apache/accumulo/pull/1445#issuecomment-560954009","issue_url":"https://api.github.com/repos/apache/accumulo/issues/1445","id":560954009,"node_id":"MDEyOklzc3VlQ29tbWVudDU2MDk1NDAwOQ==","user":{"login":"etseidl","id":25541553,"node_id":"MDQ6VXNlcjI1NTQxNTUz","avatar_url":"https://avatars.githubusercontent.com/u/25541553?v=4","gravatar_id":"","url":"https://api.github.com/users/etseidl","html_url":"https://github.com/etseidl","followers_url":"https://api.github.com/users/etseidl/followers","following_url":"https://api.github.com/users/etseidl/following{/other_user}","gists_url":"https://api.github.com/users/etseidl/gists{/gist_id}","starred_url":"https://api.github.com/users/etseidl/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/etseidl/subscriptions","organizations_url":"https://api.github.com/users/etseidl/orgs","repos_url":"https://api.github.com/users/etseidl/repos","events_url":"https://api.github.com/users/etseidl/events{/privacy}","received_events_url":"https://api.github.com/users/etseidl/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-12-03T01:18:44Z","updated_at":"2019-12-03T01:20:00Z","author_association":"CONTRIBUTOR","body":"Removed the FATE changes, and that halved the number of lines of code added.  I left in client code to check if the storage policy name is valid.  Squashed so no one else has to slog through the removed code.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/560954009/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/560988609","html_url":"https://github.com/apache/accumulo/pull/1442#issuecomment-560988609","issue_url":"https://api.github.com/repos/apache/accumulo/issues/1442","id":560988609,"node_id":"MDEyOklzc3VlQ29tbWVudDU2MDk4ODYwOQ==","user":{"login":"ctubbsii","id":1280725,"node_id":"MDQ6VXNlcjEyODA3MjU=","avatar_url":"https://avatars.githubusercontent.com/u/1280725?v=4","gravatar_id":"","url":"https://api.github.com/users/ctubbsii","html_url":"https://github.com/ctubbsii","followers_url":"https://api.github.com/users/ctubbsii/followers","following_url":"https://api.github.com/users/ctubbsii/following{/other_user}","gists_url":"https://api.github.com/users/ctubbsii/gists{/gist_id}","starred_url":"https://api.github.com/users/ctubbsii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ctubbsii/subscriptions","organizations_url":"https://api.github.com/users/ctubbsii/orgs","repos_url":"https://api.github.com/users/ctubbsii/repos","events_url":"https://api.github.com/users/ctubbsii/events{/privacy}","received_events_url":"https://api.github.com/users/ctubbsii/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-12-03T04:03:57Z","updated_at":"2019-12-03T04:04:08Z","author_association":"MEMBER","body":"I had a difficult time trying to figure out what the skewTime did. Thanks for explaining it with the examples, @keith-turner . Although it is mere subtraction, I find the code very confusing the way it is written, and your examples helped.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/560988609/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/561202650","html_url":"https://github.com/apache/accumulo/pull/1443#issuecomment-561202650","issue_url":"https://api.github.com/repos/apache/accumulo/issues/1443","id":561202650,"node_id":"MDEyOklzc3VlQ29tbWVudDU2MTIwMjY1MA==","user":{"login":"jzgithub1","id":5930146,"node_id":"MDQ6VXNlcjU5MzAxNDY=","avatar_url":"https://avatars.githubusercontent.com/u/5930146?v=4","gravatar_id":"","url":"https://api.github.com/users/jzgithub1","html_url":"https://github.com/jzgithub1","followers_url":"https://api.github.com/users/jzgithub1/followers","following_url":"https://api.github.com/users/jzgithub1/following{/other_user}","gists_url":"https://api.github.com/users/jzgithub1/gists{/gist_id}","starred_url":"https://api.github.com/users/jzgithub1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jzgithub1/subscriptions","organizations_url":"https://api.github.com/users/jzgithub1/orgs","repos_url":"https://api.github.com/users/jzgithub1/repos","events_url":"https://api.github.com/users/jzgithub1/events{/privacy}","received_events_url":"https://api.github.com/users/jzgithub1/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-12-03T14:53:05Z","updated_at":"2019-12-03T14:53:05Z","author_association":"CONTRIBUTOR","body":"> The pull request does not appear to be doing what it purports to do in the comments/log message/subject. That is, it does not appear to remove watches... but does appear to avoid adding some possibly unnecessary ones on nodes that don't yet exist. I _think_ that works because the case of watching for new child node creation is covered by the fact that ZooCache clears out cached child nodes when the parent node watcher is triggered, so the parent node watcher is sufficient.\r\n> \r\n\r\n@ctubbsii ,  I have verified with my Uno instance and the ZooKeeper four letter command 'wchp' that this pull request does indeed remove all of the ZooKeeper watches related to an individual table when that table is deleted.  I verified with the 'createtable' and 'deletetable' commands in the accumulo shell.  There is nothing academic about it.  If 'wchp' is giving me an accurate state of the watchers in ZooKeeper then this pull request is removing watches and associated session information when tables are deleted.  Our current code just leaves all the table configuration watches for a table to remain watched all of the time when a table is deleted even though the actual Zoonodes are gone.   I can demo this PR at our next Hackathon.  PR #1422  which implements your idea in #1225  works well too and eliminates all the watches for sure.   If someone considers that never removing the watches when tables are deleted to be the central problem of running out of memory in Zookeeper,  than we can solve the issue of crashing ZooKeepers with this PR.  That was the hypothesis  that @keith-turner put forth in #1220 .  \r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/561202650/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/561220351","html_url":"https://github.com/apache/accumulo/pull/1443#issuecomment-561220351","issue_url":"https://api.github.com/repos/apache/accumulo/issues/1443","id":561220351,"node_id":"MDEyOklzc3VlQ29tbWVudDU2MTIyMDM1MQ==","user":{"login":"jzgithub1","id":5930146,"node_id":"MDQ6VXNlcjU5MzAxNDY=","avatar_url":"https://avatars.githubusercontent.com/u/5930146?v=4","gravatar_id":"","url":"https://api.github.com/users/jzgithub1","html_url":"https://github.com/jzgithub1","followers_url":"https://api.github.com/users/jzgithub1/followers","following_url":"https://api.github.com/users/jzgithub1/following{/other_user}","gists_url":"https://api.github.com/users/jzgithub1/gists{/gist_id}","starred_url":"https://api.github.com/users/jzgithub1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jzgithub1/subscriptions","organizations_url":"https://api.github.com/users/jzgithub1/orgs","repos_url":"https://api.github.com/users/jzgithub1/repos","events_url":"https://api.github.com/users/jzgithub1/events{/privacy}","received_events_url":"https://api.github.com/users/jzgithub1/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-12-03T15:32:01Z","updated_at":"2019-12-03T15:37:33Z","author_association":"CONTRIBUTOR","body":"@ctubbsii Below is output you see when you run **master branch** then the  'wchp' command shown below after a createtable command and then after a deletetable command in the Uno shell.  \r\n\r\n**alias showtablewatchers='echo wchp | nc localhost 2181 | grep 'conf/table\\.''**\r\n\r\n**This is what how Accumulo works now on Master branch**\r\n**Show the watches on a table after 'createtable table1' in Uno shell**\r\njzeiberg@dragonfly:~/github/fluo-uno$ showtablewatchers | egrep '[2-5]/conf' \r\n/accumulo/a6711212-52fb-4d8a-b0d3-c560fac06c86/tables/2/conf/table.groups.enabled\r\n/accumulo/a6711212-52fb-4d8a-b0d3-c560fac06c86/tables/2/conf/table.iterator.scan.vers.opt.maxVersions\r\n/accumulo/a6711212-52fb-4d8a-b0d3-c560fac06c86/tables/2/conf/table.constraint.1\r\n/accumulo/a6711212-52fb-4d8a-b0d3-c560fac06c86/tables/2/conf/table.balancer\r\n/accumulo/a6711212-52fb-4d8a-b0d3-c560fac06c86/tables/2/conf/table.iterator.majc.vers.opt.maxVersions\r\n/accumulo/a6711212-52fb-4d8a-b0d3-c560fac06c86/tables/2/conf/table.iterator.minc.vers\r\n/accumulo/a6711212-52fb-4d8a-b0d3-c560fac06c86/tables/2/conf/table.iterator.scan.vers\r\n/accumulo/a6711212-52fb-4d8a-b0d3-c560fac06c86/tables/2/conf/table.majc.compaction.strategy\r\n/accumulo/a6711212-52fb-4d8a-b0d3-c560fac06c86/tables/2/conf/table.classpath.context\r\n/accumulo/a6711212-52fb-4d8a-b0d3-c560fac06c86/tables/2/conf/table.replication\r\n/accumulo/a6711212-52fb-4d8a-b0d3-c560fac06c86/tables/2/conf/table.iterator.minc.vers.opt.maxVersions\r\n/accumulo/a6711212-52fb-4d8a-b0d3-c560fac06c86/tables/2/conf/table.iterator.majc.vers\r\n\r\n**Show the watches on  the table1 that is now deleted after 'deletetable table1' in Uno shell**\r\n**This should be empty**\r\n**This PR makes this list empty**\r\njzeiberg@dragonfly:~/github/fluo-uno$ showtablewatchers | egrep '[2-5]/conf' \r\n/accumulo/a6711212-52fb-4d8a-b0d3-c560fac06c86/tables/2/conf/table.groups.enabled\r\n/accumulo/a6711212-52fb-4d8a-b0d3-c560fac06c86/tables/2/conf/table.balancer\r\n/accumulo/a6711212-52fb-4d8a-b0d3-c560fac06c86/tables/2/conf/table.split.endrow.size.max\r\n/accumulo/a6711212-52fb-4d8a-b0d3-c560fac06c86/tables/2/conf/table.compaction.minor.logs.threshold\r\n/accumulo/a6711212-52fb-4d8a-b0d3-c560fac06c86/tables/2/conf/table.split.threshold\r\n/accumulo/a6711212-52fb-4d8a-b0d3-c560fac06c86/tables/2/conf/table.majc.compaction.strategy\r\n/accumulo/a6711212-52fb-4d8a-b0d3-c560fac06c86/tables/2/conf/table.classpath.context\r\n/accumulo/a6711212-52fb-4d8a-b0d3-c560fac06c86/tables/2/conf/table.replication\r\n`\r\n","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/561220351/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/561225860","html_url":"https://github.com/apache/accumulo/pull/1374#issuecomment-561225860","issue_url":"https://api.github.com/repos/apache/accumulo/issues/1374","id":561225860,"node_id":"MDEyOklzc3VlQ29tbWVudDU2MTIyNTg2MA==","user":{"login":"lbschanno","id":52420215,"node_id":"MDQ6VXNlcjUyNDIwMjE1","avatar_url":"https://avatars.githubusercontent.com/u/52420215?v=4","gravatar_id":"","url":"https://api.github.com/users/lbschanno","html_url":"https://github.com/lbschanno","followers_url":"https://api.github.com/users/lbschanno/followers","following_url":"https://api.github.com/users/lbschanno/following{/other_user}","gists_url":"https://api.github.com/users/lbschanno/gists{/gist_id}","starred_url":"https://api.github.com/users/lbschanno/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lbschanno/subscriptions","organizations_url":"https://api.github.com/users/lbschanno/orgs","repos_url":"https://api.github.com/users/lbschanno/repos","events_url":"https://api.github.com/users/lbschanno/events{/privacy}","received_events_url":"https://api.github.com/users/lbschanno/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-12-03T15:43:42Z","updated_at":"2019-12-03T15:43:42Z","author_association":"CONTRIBUTOR","body":"@ctubbsii ah I see, I didn't know the PR is usually squashed when merged in. I'll keep that in mind.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/561225860/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/561798128","html_url":"https://github.com/apache/accumulo/pull/1447#issuecomment-561798128","issue_url":"https://api.github.com/repos/apache/accumulo/issues/1447","id":561798128,"node_id":"MDEyOklzc3VlQ29tbWVudDU2MTc5ODEyOA==","user":{"login":"joshelser","id":67863,"node_id":"MDQ6VXNlcjY3ODYz","avatar_url":"https://avatars.githubusercontent.com/u/67863?v=4","gravatar_id":"","url":"https://api.github.com/users/joshelser","html_url":"https://github.com/joshelser","followers_url":"https://api.github.com/users/joshelser/followers","following_url":"https://api.github.com/users/joshelser/following{/other_user}","gists_url":"https://api.github.com/users/joshelser/gists{/gist_id}","starred_url":"https://api.github.com/users/joshelser/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/joshelser/subscriptions","organizations_url":"https://api.github.com/users/joshelser/orgs","repos_url":"https://api.github.com/users/joshelser/repos","events_url":"https://api.github.com/users/joshelser/events{/privacy}","received_events_url":"https://api.github.com/users/joshelser/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-12-04T19:18:33Z","updated_at":"2019-12-04T19:18:33Z","author_association":"MEMBER","body":"One thing I'm not 100% sure about is the relationship of semantics from AzureBlobStore and HDFS. They both have these things we call \"leases\", but are their semantics the same?\r\n\r\nI can see that for HBase, lease recovery is only done for directories set up for \"atomic rename\" (aka configured with Page Blobs) https://github.com/apache/hadoop/blob/branch-2.8/hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/AzureNativeFileSystemStore.java#L445-L459. However, it seems like this is just an implementation detail for HBase (not that lease recovery requires Page Blobs to be used). I base this finding on https://docs.microsoft.com/en-us/java/api/com.microsoft.azure.storage.blob._cloud_blob.acquirelease?view=azure-java-legacy not saying anything about page/block blobs.\r\n\r\nFrom the presentation I put together the other week, I don't recall Accumulo having any WAL renames that would need to be atomic (in contrast to HBase which moves the WAL once a RS starts working on it).\r\n\r\nThe above aside: we do want to make sure that fencing the WALs still works for Accumulo, to prevent zombie'd Tservers from causing a ruckus. One thing I haven't been able to figure out is if the following scenario will work as we want it to:\r\n* Tserver is in half-dead state, not talking to Master, but is able to keep a lease with ABFS (renew'ed every 40s by default)\r\n* Master whacks that ZNode for the tserver to try to kill it (normally, a max of 60s, but maybe longer until we notice if things are really messed up), and starts reassigning things\r\n* Tserver doesn't yet observe ZK change, and is still renewing the lease with ABFS\r\n* A new TServer calls `acquireLease()` on this WAL which is still being renewed by the half-dead Tserver.\r\n\r\nI can't figure out from docs/code what the expected outcome of this action is. Does it work like HDFS works (the TServer making the `acquireLease()` call \"overriding\" the old lease that the zombie tserver is holding)? Maybe you can find someone on the storage team at Azure to ask about the semantics of https://docs.microsoft.com/en-us/java/api/com.microsoft.azure.storage.blob._cloud_blob.acquirelease?view=azure-java-legacy. If not, maybe you can just write a test which simulates the above happening (makes sure that an old client who once held the lease, can no longer append to a file after another clietn called `acquireLease`).\r\n\r\nAssuming the semantics for `acquireLease` in ABFS are the same as `recoverLease` in HDFS, I think your change is fine. I'm lamenting the \"ugliness\" of the if/elseif/else conditional block in LogCloser, but it's not the end of the world.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/561798128/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/561829747","html_url":"https://github.com/apache/accumulo/pull/1447#issuecomment-561829747","issue_url":"https://api.github.com/repos/apache/accumulo/issues/1447","id":561829747,"node_id":"MDEyOklzc3VlQ29tbWVudDU2MTgyOTc0Nw==","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-12-04T20:41:09Z","updated_at":"2019-12-04T20:41:09Z","author_association":"CONTRIBUTOR","body":"This change may require the hadoop-azure jar on the runtime classpath even when not using Azure.  The code ` ns instanceof NativeAzureFileSystem` in HadoopLogCloser may cause that class the be searched for on the classpath.  \r\n\r\nMaybe the following will avoid it.\r\n\r\n * Mark dep optional in pom\r\n * Create a new class called AzureLogCloser\r\n * Document how user can configure Accumulo to use the log closer.\r\n\r\nWith this approach the class AzureLogCloser will never be loaded unless configured. \r\n ","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/561829747/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/561853321","html_url":"https://github.com/apache/accumulo/pull/1443#issuecomment-561853321","issue_url":"https://api.github.com/repos/apache/accumulo/issues/1443","id":561853321,"node_id":"MDEyOklzc3VlQ29tbWVudDU2MTg1MzMyMQ==","user":{"login":"ctubbsii","id":1280725,"node_id":"MDQ6VXNlcjEyODA3MjU=","avatar_url":"https://avatars.githubusercontent.com/u/1280725?v=4","gravatar_id":"","url":"https://api.github.com/users/ctubbsii","html_url":"https://github.com/ctubbsii","followers_url":"https://api.github.com/users/ctubbsii/followers","following_url":"https://api.github.com/users/ctubbsii/following{/other_user}","gists_url":"https://api.github.com/users/ctubbsii/gists{/gist_id}","starred_url":"https://api.github.com/users/ctubbsii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ctubbsii/subscriptions","organizations_url":"https://api.github.com/users/ctubbsii/orgs","repos_url":"https://api.github.com/users/ctubbsii/repos","events_url":"https://api.github.com/users/ctubbsii/events{/privacy}","received_events_url":"https://api.github.com/users/ctubbsii/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-12-04T21:45:27Z","updated_at":"2019-12-04T21:45:27Z","author_association":"MEMBER","body":"> I have verified with my Uno instance and the ZooKeeper four letter command 'wchp' that this pull request does indeed remove all of the ZooKeeper watches related to an individual table when that table is deleted.\r\n\r\nBecause of https://issues.apache.org/jira/browse/ZOOKEEPER-1274, that command doesn't give a full picture of the watches (it doesn't show child watches), which concerns me a bit.\r\n\r\n> @ctubbsii Below is output you see when you run **master branch** then the 'wchp' command shown below after a createtable command and then after a deletetable command in the Uno shell.\r\n\r\nI see that it does have fewer data watches, and have no doubt of this. My main concern is that the way we use ZooCache, these watches might be important and may have negative consequences if removed. Although it fixes the problem of leaving watches around when the table is deleted, it may make it so ZooCache misses when a new node is created. This is somewhat a drop in the bucket, though. The number of watches is still `O(m*n*p)`, albeit with a slightly smaller `p`. I think this scale problem and the watches on non-existing nodes issue are both resolved by a simpler solution to consolidate configs into a single node, which (as I said above), I'm going to try to look into, picking up my previous investigation into that.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/561853321/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/561867327","html_url":"https://github.com/apache/accumulo/pull/1443#issuecomment-561867327","issue_url":"https://api.github.com/repos/apache/accumulo/issues/1443","id":561867327,"node_id":"MDEyOklzc3VlQ29tbWVudDU2MTg2NzMyNw==","user":{"login":"EdColeman","id":7047700,"node_id":"MDQ6VXNlcjcwNDc3MDA=","avatar_url":"https://avatars.githubusercontent.com/u/7047700?v=4","gravatar_id":"","url":"https://api.github.com/users/EdColeman","html_url":"https://github.com/EdColeman","followers_url":"https://api.github.com/users/EdColeman/followers","following_url":"https://api.github.com/users/EdColeman/following{/other_user}","gists_url":"https://api.github.com/users/EdColeman/gists{/gist_id}","starred_url":"https://api.github.com/users/EdColeman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/EdColeman/subscriptions","organizations_url":"https://api.github.com/users/EdColeman/orgs","repos_url":"https://api.github.com/users/EdColeman/repos","events_url":"https://api.github.com/users/EdColeman/events{/privacy}","received_events_url":"https://api.github.com/users/EdColeman/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-12-04T22:24:33Z","updated_at":"2019-12-04T22:24:33Z","author_association":"CONTRIBUTOR","body":"Another thing that I've confirmed - calling exists(path, false) does not remove previous watchers - it just prevents adding a new one.\r\n\r\nUsing zookeeper, I called:\r\n```\r\nzoo.exists(\"/a\", existsWatcher);\r\nzoo.exists(\"/a\", false);\r\nzoo.exists(\"/a\", null);\r\n```\r\nStill results in the watcher being triggered on a data change event.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/561867327/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/561880782","html_url":"https://github.com/apache/accumulo/pull/1447#issuecomment-561880782","issue_url":"https://api.github.com/repos/apache/accumulo/issues/1447","id":561880782,"node_id":"MDEyOklzc3VlQ29tbWVudDU2MTg4MDc4Mg==","user":{"login":"billierinaldi","id":1810597,"node_id":"MDQ6VXNlcjE4MTA1OTc=","avatar_url":"https://avatars.githubusercontent.com/u/1810597?v=4","gravatar_id":"","url":"https://api.github.com/users/billierinaldi","html_url":"https://github.com/billierinaldi","followers_url":"https://api.github.com/users/billierinaldi/followers","following_url":"https://api.github.com/users/billierinaldi/following{/other_user}","gists_url":"https://api.github.com/users/billierinaldi/gists{/gist_id}","starred_url":"https://api.github.com/users/billierinaldi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/billierinaldi/subscriptions","organizations_url":"https://api.github.com/users/billierinaldi/orgs","repos_url":"https://api.github.com/users/billierinaldi/repos","events_url":"https://api.github.com/users/billierinaldi/events{/privacy}","received_events_url":"https://api.github.com/users/billierinaldi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-12-04T23:03:50Z","updated_at":"2019-12-04T23:03:50Z","author_association":"CONTRIBUTOR","body":"Thanks for the reviews, everyone. I'll make these changes and find out if anything else needs to be done for lease recovery in the wasb case.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/561880782/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/561890790","html_url":"https://github.com/apache/accumulo/pull/1443#issuecomment-561890790","issue_url":"https://api.github.com/repos/apache/accumulo/issues/1443","id":561890790,"node_id":"MDEyOklzc3VlQ29tbWVudDU2MTg5MDc5MA==","user":{"login":"EdColeman","id":7047700,"node_id":"MDQ6VXNlcjcwNDc3MDA=","avatar_url":"https://avatars.githubusercontent.com/u/7047700?v=4","gravatar_id":"","url":"https://api.github.com/users/EdColeman","html_url":"https://github.com/EdColeman","followers_url":"https://api.github.com/users/EdColeman/followers","following_url":"https://api.github.com/users/EdColeman/following{/other_user}","gists_url":"https://api.github.com/users/EdColeman/gists{/gist_id}","starred_url":"https://api.github.com/users/EdColeman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/EdColeman/subscriptions","organizations_url":"https://api.github.com/users/EdColeman/orgs","repos_url":"https://api.github.com/users/EdColeman/repos","events_url":"https://api.github.com/users/EdColeman/events{/privacy}","received_events_url":"https://api.github.com/users/EdColeman/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-12-04T23:32:02Z","updated_at":"2019-12-04T23:32:02Z","author_association":"CONTRIBUTOR","body":"I have a partial IT test that sets and checks watchers - https://github.com/EdColeman/accumulo/tree/zk_watcher_it.  There are two \"tests\" on for setting system props and one (in progress) for a table prop.  I still want to look at delete ops on a table to see if that is triggering an exists event, and there may be some formatting issues, but may be enough to look at until I revisit tomorrow.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/561890790/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/561891970","html_url":"https://github.com/apache/accumulo/pull/1443#issuecomment-561891970","issue_url":"https://api.github.com/repos/apache/accumulo/issues/1443","id":561891970,"node_id":"MDEyOklzc3VlQ29tbWVudDU2MTg5MTk3MA==","user":{"login":"jzgithub1","id":5930146,"node_id":"MDQ6VXNlcjU5MzAxNDY=","avatar_url":"https://avatars.githubusercontent.com/u/5930146?v=4","gravatar_id":"","url":"https://api.github.com/users/jzgithub1","html_url":"https://github.com/jzgithub1","followers_url":"https://api.github.com/users/jzgithub1/followers","following_url":"https://api.github.com/users/jzgithub1/following{/other_user}","gists_url":"https://api.github.com/users/jzgithub1/gists{/gist_id}","starred_url":"https://api.github.com/users/jzgithub1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jzgithub1/subscriptions","organizations_url":"https://api.github.com/users/jzgithub1/orgs","repos_url":"https://api.github.com/users/jzgithub1/repos","events_url":"https://api.github.com/users/jzgithub1/events{/privacy}","received_events_url":"https://api.github.com/users/jzgithub1/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-12-04T23:35:37Z","updated_at":"2019-12-04T23:35:37Z","author_association":"CONTRIBUTOR","body":"@EdColeman , thanks a lot.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/561891970/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/562032279","html_url":"https://github.com/apache/accumulo/pull/1448#issuecomment-562032279","issue_url":"https://api.github.com/repos/apache/accumulo/issues/1448","id":562032279,"node_id":"MDEyOklzc3VlQ29tbWVudDU2MjAzMjI3OQ==","user":{"login":"ctubbsii","id":1280725,"node_id":"MDQ6VXNlcjEyODA3MjU=","avatar_url":"https://avatars.githubusercontent.com/u/1280725?v=4","gravatar_id":"","url":"https://api.github.com/users/ctubbsii","html_url":"https://github.com/ctubbsii","followers_url":"https://api.github.com/users/ctubbsii/followers","following_url":"https://api.github.com/users/ctubbsii/following{/other_user}","gists_url":"https://api.github.com/users/ctubbsii/gists{/gist_id}","starred_url":"https://api.github.com/users/ctubbsii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ctubbsii/subscriptions","organizations_url":"https://api.github.com/users/ctubbsii/orgs","repos_url":"https://api.github.com/users/ctubbsii/repos","events_url":"https://api.github.com/users/ctubbsii/events{/privacy}","received_events_url":"https://api.github.com/users/ctubbsii/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-12-05T08:51:51Z","updated_at":"2019-12-05T08:51:51Z","author_association":"MEMBER","body":"Was spelunking in ZK-related code pertaining to table configuration and found the whole ZK \"convenience\" utilities scattered throughout our code base to be a mess. This is a first pass attempt to clean up quite a bit of the technical debt around ZooKeeper... but I'm sure there's more follow-on to be done.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/562032279/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/562175475","html_url":"https://github.com/apache/accumulo/pull/1447#issuecomment-562175475","issue_url":"https://api.github.com/repos/apache/accumulo/issues/1447","id":562175475,"node_id":"MDEyOklzc3VlQ29tbWVudDU2MjE3NTQ3NQ==","user":{"login":"billierinaldi","id":1810597,"node_id":"MDQ6VXNlcjE4MTA1OTc=","avatar_url":"https://avatars.githubusercontent.com/u/1810597?v=4","gravatar_id":"","url":"https://api.github.com/users/billierinaldi","html_url":"https://github.com/billierinaldi","followers_url":"https://api.github.com/users/billierinaldi/followers","following_url":"https://api.github.com/users/billierinaldi/following{/other_user}","gists_url":"https://api.github.com/users/billierinaldi/gists{/gist_id}","starred_url":"https://api.github.com/users/billierinaldi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/billierinaldi/subscriptions","organizations_url":"https://api.github.com/users/billierinaldi/orgs","repos_url":"https://api.github.com/users/billierinaldi/repos","events_url":"https://api.github.com/users/billierinaldi/events{/privacy}","received_events_url":"https://api.github.com/users/billierinaldi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-12-05T15:20:22Z","updated_at":"2019-12-05T15:20:22Z","author_association":"CONTRIBUTOR","body":"I did some additional testing and found that I could acquire a lease on a walog manually while the walog was active with the tserver. When the tserver tried to write to the walog while I had the lease, the write failed and the tserver started a new walog. But if I refrained from writing while I held the lease, the tserver was able to write to the walog I had leased after the lease expired.\r\n\r\nThis seems to mean the tserver is not acquiring a lease when writing to a walog (which might be good, because the wasb FS implementation does not provide a way to break an existing lease). I am wondering if we need to hold the lease longer after it is obtained in the LogCloser, to prevent a half-dead tserver from continuing to write to the walog, or if there would be a better way to handle this situation.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/562175475/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/562195404","html_url":"https://github.com/apache/accumulo/pull/1447#issuecomment-562195404","issue_url":"https://api.github.com/repos/apache/accumulo/issues/1447","id":562195404,"node_id":"MDEyOklzc3VlQ29tbWVudDU2MjE5NTQwNA==","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-12-05T16:04:54Z","updated_at":"2019-12-05T16:04:54Z","author_association":"CONTRIBUTOR","body":"One possible course of actions is that when a tserver gets an error writing to a walog, it does a strong check (not using ZooCache) to Zookeeper to ensure it still holds it lock.  If we could detect lease loss on the tserver, the check could be done then.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/562195404/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/562269796","html_url":"https://github.com/apache/accumulo/pull/1448#issuecomment-562269796","issue_url":"https://api.github.com/repos/apache/accumulo/issues/1448","id":562269796,"node_id":"MDEyOklzc3VlQ29tbWVudDU2MjI2OTc5Ng==","user":{"login":"ctubbsii","id":1280725,"node_id":"MDQ6VXNlcjEyODA3MjU=","avatar_url":"https://avatars.githubusercontent.com/u/1280725?v=4","gravatar_id":"","url":"https://api.github.com/users/ctubbsii","html_url":"https://github.com/ctubbsii","followers_url":"https://api.github.com/users/ctubbsii/followers","following_url":"https://api.github.com/users/ctubbsii/following{/other_user}","gists_url":"https://api.github.com/users/ctubbsii/gists{/gist_id}","starred_url":"https://api.github.com/users/ctubbsii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ctubbsii/subscriptions","organizations_url":"https://api.github.com/users/ctubbsii/orgs","repos_url":"https://api.github.com/users/ctubbsii/repos","events_url":"https://api.github.com/users/ctubbsii/events{/privacy}","received_events_url":"https://api.github.com/users/ctubbsii/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-12-05T19:07:11Z","updated_at":"2019-12-05T19:07:11Z","author_association":"MEMBER","body":"Tested all the ITs. Aside from the flakey CyclicReplicationIT failing (and then subsequently passing), and the unrelated CleanUpIT (#1449), all ITs and other tests pass. So, I'll merge this in.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/562269796/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/562358436","html_url":"https://github.com/apache/accumulo/issues/564#issuecomment-562358436","issue_url":"https://api.github.com/repos/apache/accumulo/issues/564","id":562358436,"node_id":"MDEyOklzc3VlQ29tbWVudDU2MjM1ODQzNg==","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-12-05T23:06:15Z","updated_at":"2019-12-05T23:06:15Z","author_association":"CONTRIBUTOR","body":"I have been doing some simulation and experimentation related to this issue.\r\n\r\nhttps://gist.github.com/keith-turner/16125790c6ff0d86c67795a08d2c057f","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/562358436/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/562674380","html_url":"https://github.com/apache/accumulo/issues/564#issuecomment-562674380","issue_url":"https://api.github.com/repos/apache/accumulo/issues/564","id":562674380,"node_id":"MDEyOklzc3VlQ29tbWVudDU2MjY3NDM4MA==","user":{"login":"phrocker","id":1781585,"node_id":"MDQ6VXNlcjE3ODE1ODU=","avatar_url":"https://avatars.githubusercontent.com/u/1781585?v=4","gravatar_id":"","url":"https://api.github.com/users/phrocker","html_url":"https://github.com/phrocker","followers_url":"https://api.github.com/users/phrocker/followers","following_url":"https://api.github.com/users/phrocker/following{/other_user}","gists_url":"https://api.github.com/users/phrocker/gists{/gist_id}","starred_url":"https://api.github.com/users/phrocker/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/phrocker/subscriptions","organizations_url":"https://api.github.com/users/phrocker/orgs","repos_url":"https://api.github.com/users/phrocker/repos","events_url":"https://api.github.com/users/phrocker/events{/privacy}","received_events_url":"https://api.github.com/users/phrocker/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-12-06T17:55:36Z","updated_at":"2019-12-06T17:55:36Z","author_association":"CONTRIBUTOR","body":"Could we break these runners out into sep processes to facilitate containerized compactions ?","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/562674380/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/562683537","html_url":"https://github.com/apache/accumulo/pull/1448#issuecomment-562683537","issue_url":"https://api.github.com/repos/apache/accumulo/issues/1448","id":562683537,"node_id":"MDEyOklzc3VlQ29tbWVudDU2MjY4MzUzNw==","user":{"login":"jzgithub1","id":5930146,"node_id":"MDQ6VXNlcjU5MzAxNDY=","avatar_url":"https://avatars.githubusercontent.com/u/5930146?v=4","gravatar_id":"","url":"https://api.github.com/users/jzgithub1","html_url":"https://github.com/jzgithub1","followers_url":"https://api.github.com/users/jzgithub1/followers","following_url":"https://api.github.com/users/jzgithub1/following{/other_user}","gists_url":"https://api.github.com/users/jzgithub1/gists{/gist_id}","starred_url":"https://api.github.com/users/jzgithub1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jzgithub1/subscriptions","organizations_url":"https://api.github.com/users/jzgithub1/orgs","repos_url":"https://api.github.com/users/jzgithub1/repos","events_url":"https://api.github.com/users/jzgithub1/events{/privacy}","received_events_url":"https://api.github.com/users/jzgithub1/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-12-06T18:21:18Z","updated_at":"2019-12-06T18:21:18Z","author_association":"CONTRIBUTOR","body":"Thank you @ctubbsii .","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/562683537/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/562763894","html_url":"https://github.com/apache/accumulo/issues/564#issuecomment-562763894","issue_url":"https://api.github.com/repos/apache/accumulo/issues/564","id":562763894,"node_id":"MDEyOklzc3VlQ29tbWVudDU2Mjc2Mzg5NA==","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-12-06T22:35:05Z","updated_at":"2019-12-06T22:35:05Z","author_association":"CONTRIBUTOR","body":"> Could we break these runners out into sep processes to facilitate containerized compactions ?\r\n\r\nI have been thinking about that, wondering should I do that or this or both.  I have concluded that I think doing both makes sense.  The reason I am thinking that way currently is it seems like the external compactions would be good for one off really large filtering and/or transformation operations.  The internal compactions seem better suited to maintaining order with a constant stream of incoming small files.  I opened #1451.\r\n\r\nI have tried to think through the case of tservers using an external global work queue of compactions to deal with  incoming small files.  Thinking through it, it starts to become really complex because how tserver want to prioritize and select files for compaction may change as soon as a few new small files arrive. Within a tserver it can easy cancel previously queued work, queue new work, and re-prioritize work.  With a distributed work queue, this seems more daunting.  This what I was thinking of when I mentioned early vs late binding in #1451.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/562763894/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/563301371","html_url":"https://github.com/apache/accumulo/pull/1422#issuecomment-563301371","issue_url":"https://api.github.com/repos/apache/accumulo/issues/1422","id":563301371,"node_id":"MDEyOklzc3VlQ29tbWVudDU2MzMwMTM3MQ==","user":{"login":"jzgithub1","id":5930146,"node_id":"MDQ6VXNlcjU5MzAxNDY=","avatar_url":"https://avatars.githubusercontent.com/u/5930146?v=4","gravatar_id":"","url":"https://api.github.com/users/jzgithub1","html_url":"https://github.com/jzgithub1","followers_url":"https://api.github.com/users/jzgithub1/followers","following_url":"https://api.github.com/users/jzgithub1/following{/other_user}","gists_url":"https://api.github.com/users/jzgithub1/gists{/gist_id}","starred_url":"https://api.github.com/users/jzgithub1/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jzgithub1/subscriptions","organizations_url":"https://api.github.com/users/jzgithub1/orgs","repos_url":"https://api.github.com/users/jzgithub1/repos","events_url":"https://api.github.com/users/jzgithub1/events{/privacy}","received_events_url":"https://api.github.com/users/jzgithub1/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-12-09T15:49:49Z","updated_at":"2019-12-09T15:49:49Z","author_association":"CONTRIBUTOR","body":"> Seems like ZooCache.getChildren may still set watchers.\r\n\r\nFrom the ZooKeeper documentation:\r\n\r\nA watch object, or function/context pair, will only be triggered once for a given notification. For example, if the same watch object is registered for an exists and a getData call for the same file and that file is then deleted, the watch object would only be invoked once with the deletion notification for the file.\r\n\r\n[http://zookeeper.apache.org/doc/current/zookeeperProgrammers.html#sc_WatchRemoval](url)","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/563301371/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/563468930","html_url":"https://github.com/apache/accumulo/pull/1446#issuecomment-563468930","issue_url":"https://api.github.com/repos/apache/accumulo/issues/1446","id":563468930,"node_id":"MDEyOklzc3VlQ29tbWVudDU2MzQ2ODkzMA==","user":{"login":"milleruntime","id":11872539,"node_id":"MDQ6VXNlcjExODcyNTM5","avatar_url":"https://avatars.githubusercontent.com/u/11872539?v=4","gravatar_id":"","url":"https://api.github.com/users/milleruntime","html_url":"https://github.com/milleruntime","followers_url":"https://api.github.com/users/milleruntime/followers","following_url":"https://api.github.com/users/milleruntime/following{/other_user}","gists_url":"https://api.github.com/users/milleruntime/gists{/gist_id}","starred_url":"https://api.github.com/users/milleruntime/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/milleruntime/subscriptions","organizations_url":"https://api.github.com/users/milleruntime/orgs","repos_url":"https://api.github.com/users/milleruntime/repos","events_url":"https://api.github.com/users/milleruntime/events{/privacy}","received_events_url":"https://api.github.com/users/milleruntime/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-12-09T22:26:54Z","updated_at":"2019-12-09T22:26:54Z","author_association":"CONTRIBUTOR","body":"There is a test failing but I think this is what we want with the additional validation I added.. TabletMetadataTest.testAllColumns:95 java.lang.NullPointerException: Table ID is missing from tablet file metadata entry: df1\r\nI can update the test to go with this change but I was hoping I could catch some places with the stronger Type where just a string was being used.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/563468930/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/564091751","html_url":"https://github.com/apache/accumulo/issues/1451#issuecomment-564091751","issue_url":"https://api.github.com/repos/apache/accumulo/issues/1451","id":564091751,"node_id":"MDEyOklzc3VlQ29tbWVudDU2NDA5MTc1MQ==","user":{"login":"EdColeman","id":7047700,"node_id":"MDQ6VXNlcjcwNDc3MDA=","avatar_url":"https://avatars.githubusercontent.com/u/7047700?v=4","gravatar_id":"","url":"https://api.github.com/users/EdColeman","html_url":"https://github.com/EdColeman","followers_url":"https://api.github.com/users/EdColeman/followers","following_url":"https://api.github.com/users/EdColeman/following{/other_user}","gists_url":"https://api.github.com/users/EdColeman/gists{/gist_id}","starred_url":"https://api.github.com/users/EdColeman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/EdColeman/subscriptions","organizations_url":"https://api.github.com/users/EdColeman/orgs","repos_url":"https://api.github.com/users/EdColeman/repos","events_url":"https://api.github.com/users/EdColeman/events{/privacy}","received_events_url":"https://api.github.com/users/EdColeman/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-12-10T15:39:08Z","updated_at":"2019-12-10T15:42:06Z","author_association":"CONTRIBUTOR","body":"Concerning leases and lease management.  The apache river / jini project has a lease manager specification that may provide some guidance with this type of functionality.\r\n\r\nSee https://river.apache.org/release-doc/current/specs/html/leaseutil-spec.html\r\n\r\n(The complete list of jini specifications are at https://river.apache.org/release-doc/current/spec-index.html)","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/564091751/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/564094839","html_url":"https://github.com/apache/accumulo/issues/1451#issuecomment-564094839","issue_url":"https://api.github.com/repos/apache/accumulo/issues/1451","id":564094839,"node_id":"MDEyOklzc3VlQ29tbWVudDU2NDA5NDgzOQ==","user":{"login":"ivakegg","id":347158,"node_id":"MDQ6VXNlcjM0NzE1OA==","avatar_url":"https://avatars.githubusercontent.com/u/347158?v=4","gravatar_id":"","url":"https://api.github.com/users/ivakegg","html_url":"https://github.com/ivakegg","followers_url":"https://api.github.com/users/ivakegg/followers","following_url":"https://api.github.com/users/ivakegg/following{/other_user}","gists_url":"https://api.github.com/users/ivakegg/gists{/gist_id}","starred_url":"https://api.github.com/users/ivakegg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ivakegg/subscriptions","organizations_url":"https://api.github.com/users/ivakegg/orgs","repos_url":"https://api.github.com/users/ivakegg/repos","events_url":"https://api.github.com/users/ivakegg/events{/privacy}","received_events_url":"https://api.github.com/users/ivakegg/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-12-10T15:45:30Z","updated_at":"2019-12-10T15:45:30Z","author_association":"CONTRIBUTOR","body":"A few comments:\r\n1) I would imagine that this is primarily for handling larger files that may not be compacted using the configured compaction manager.\r\n2) Using something like yarn instead of kubernetes might be a good initial implementation.\r\n3) I would like to add the ability to do this while accumulo is off line.  This might be very difficult since we still need to make modifications to the accumulo metadata but there might be a way using fate operations, conditional mutations, zookeeper, other....\r\n","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/564094839/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/564095195","html_url":"https://github.com/apache/accumulo/issues/564#issuecomment-564095195","issue_url":"https://api.github.com/repos/apache/accumulo/issues/564","id":564095195,"node_id":"MDEyOklzc3VlQ29tbWVudDU2NDA5NTE5NQ==","user":{"login":"ivakegg","id":347158,"node_id":"MDQ6VXNlcjM0NzE1OA==","avatar_url":"https://avatars.githubusercontent.com/u/347158?v=4","gravatar_id":"","url":"https://api.github.com/users/ivakegg","html_url":"https://github.com/ivakegg","followers_url":"https://api.github.com/users/ivakegg/followers","following_url":"https://api.github.com/users/ivakegg/following{/other_user}","gists_url":"https://api.github.com/users/ivakegg/gists{/gist_id}","starred_url":"https://api.github.com/users/ivakegg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ivakegg/subscriptions","organizations_url":"https://api.github.com/users/ivakegg/orgs","repos_url":"https://api.github.com/users/ivakegg/repos","events_url":"https://api.github.com/users/ivakegg/events{/privacy}","received_events_url":"https://api.github.com/users/ivakegg/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-12-10T15:46:16Z","updated_at":"2019-12-10T15:46:16Z","author_association":"CONTRIBUTOR","body":"+1","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/564095195/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/564105892","html_url":"https://github.com/apache/accumulo/pull/1450#issuecomment-564105892","issue_url":"https://api.github.com/repos/apache/accumulo/issues/1450","id":564105892,"node_id":"MDEyOklzc3VlQ29tbWVudDU2NDEwNTg5Mg==","user":{"login":"karthick-rn","id":7976585,"node_id":"MDQ6VXNlcjc5NzY1ODU=","avatar_url":"https://avatars.githubusercontent.com/u/7976585?v=4","gravatar_id":"","url":"https://api.github.com/users/karthick-rn","html_url":"https://github.com/karthick-rn","followers_url":"https://api.github.com/users/karthick-rn/followers","following_url":"https://api.github.com/users/karthick-rn/following{/other_user}","gists_url":"https://api.github.com/users/karthick-rn/gists{/gist_id}","starred_url":"https://api.github.com/users/karthick-rn/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/karthick-rn/subscriptions","organizations_url":"https://api.github.com/users/karthick-rn/orgs","repos_url":"https://api.github.com/users/karthick-rn/repos","events_url":"https://api.github.com/users/karthick-rn/events{/privacy}","received_events_url":"https://api.github.com/users/karthick-rn/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-12-10T16:08:54Z","updated_at":"2019-12-10T16:08:54Z","author_association":"CONTRIBUTOR","body":"> Thanks for the PR! The changes look really good. I only have very minor comments/suggestions. The test changes are also really nice.\r\n\r\nThanks for reviewing the PR @ctubbsii @keith-turner. Based on the comments, I worked with @billierinaldi & committed the new changes to the PR. Let us know for any further comments/questions?  ","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/564105892/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/564131375","html_url":"https://github.com/apache/accumulo/issues/564#issuecomment-564131375","issue_url":"https://api.github.com/repos/apache/accumulo/issues/564","id":564131375,"node_id":"MDEyOklzc3VlQ29tbWVudDU2NDEzMTM3NQ==","user":{"login":"drewfarris","id":110922,"node_id":"MDQ6VXNlcjExMDkyMg==","avatar_url":"https://avatars.githubusercontent.com/u/110922?v=4","gravatar_id":"","url":"https://api.github.com/users/drewfarris","html_url":"https://github.com/drewfarris","followers_url":"https://api.github.com/users/drewfarris/followers","following_url":"https://api.github.com/users/drewfarris/following{/other_user}","gists_url":"https://api.github.com/users/drewfarris/gists{/gist_id}","starred_url":"https://api.github.com/users/drewfarris/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/drewfarris/subscriptions","organizations_url":"https://api.github.com/users/drewfarris/orgs","repos_url":"https://api.github.com/users/drewfarris/repos","events_url":"https://api.github.com/users/drewfarris/events{/privacy}","received_events_url":"https://api.github.com/users/drewfarris/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-12-10T17:03:03Z","updated_at":"2019-12-10T17:21:02Z","author_association":"CONTRIBUTOR","body":"I think this is looking good as well, just a couple questions:\r\n\r\nHave you thought much about how the `CompactionManager` decides to perform work or decides to cancel scheduled work? I suppose the Compaculation work would plug in here, but I was wondering if we might implement a sort of pluggable strategy for job formulation. Does this mean that there's a new interface we need to design to support this?\r\n\r\nI could be misunderstanding the role of the `CompactionPrioritizer` - it seems that this class establishes priorities for jobs that have already been formulated - maybe the ranking becomes a secondary function of the job formulation strategy?\r\n\r\nI like the idea of moving large or compute-intensive jobs out of the tserver process. Interested to see how managing external compactions works out.\r\n\r\nIn the documentation for `CompactionExecutor` you mention that if a job is too big it will be processed in multiple passes. I wonder how much complexity this will add to the code - perhaps it will be more straightforward if the executor can split jobs - with the notion that an entire job either succeeds or fails, but there's no partial success state?\r\n\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/564131375/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/564133308","html_url":"https://github.com/apache/accumulo/issues/1451#issuecomment-564133308","issue_url":"https://api.github.com/repos/apache/accumulo/issues/1451","id":564133308,"node_id":"MDEyOklzc3VlQ29tbWVudDU2NDEzMzMwOA==","user":{"login":"ivakegg","id":347158,"node_id":"MDQ6VXNlcjM0NzE1OA==","avatar_url":"https://avatars.githubusercontent.com/u/347158?v=4","gravatar_id":"","url":"https://api.github.com/users/ivakegg","html_url":"https://github.com/ivakegg","followers_url":"https://api.github.com/users/ivakegg/followers","following_url":"https://api.github.com/users/ivakegg/following{/other_user}","gists_url":"https://api.github.com/users/ivakegg/gists{/gist_id}","starred_url":"https://api.github.com/users/ivakegg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ivakegg/subscriptions","organizations_url":"https://api.github.com/users/ivakegg/orgs","repos_url":"https://api.github.com/users/ivakegg/repos","events_url":"https://api.github.com/users/ivakegg/events{/privacy}","received_events_url":"https://api.github.com/users/ivakegg/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-12-10T17:07:12Z","updated_at":"2019-12-10T17:16:13Z","author_association":"CONTRIBUTOR","body":"Now that I think about it, doing this while accumulo is off line might not be worth the effort.  Doing this for an off-line table may be reasonable however.  One could say that doing a compaction of a table while it is off line may be the best time to do it.  I could see one needing to take a table off line and then do a full compaction to ensure that incorrect data is removed before bringing it back on line.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/564133308/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/564166783","html_url":"https://github.com/apache/accumulo/issues/564#issuecomment-564166783","issue_url":"https://api.github.com/repos/apache/accumulo/issues/564","id":564166783,"node_id":"MDEyOklzc3VlQ29tbWVudDU2NDE2Njc4Mw==","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-12-10T18:24:00Z","updated_at":"2019-12-10T18:24:00Z","author_association":"CONTRIBUTOR","body":"> Have you thought much about how the CompactionManager decides to perform work or decides to cancel scheduled work?\r\n\r\nThe work I was doing with [compaculation](https://github.com/keith-turner/compaculation) was all centered around creating a new default algorithm for Accumulo that can leverage multiple executors in an efficient manner that keeps the avg files per tablet low.  I [wrote up](https://gist.github.com/keith-turner/16125790c6ff0d86c67795a08d2c057f) some of my results so far, but I am still working towards finding a new default algorithm I like.\r\n\r\n> CompactionPrioritizer - it seems that this class establishes priorities for jobs that have already been formulated\r\n\r\nThat is what I was thinking.  Specifically each executor would have priority queue of immutable compaction jobs and users can specify a comparator for this queue if they like.\r\n\r\n> In the documentation for CompactionExecutor you mention that if a job is too big it will be processed in multiple passes. I wonder how much complexity this will add to the code -\r\n\r\nThat is probably a bad idea and would make things really hard to reason about. If needed a compaction job could possibly support having a list of list of files, with each list being done in a single pass.  With this there is the possibility of multiple passes, but the compaction manager has complete control over it.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/564166783/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/564182113","html_url":"https://github.com/apache/accumulo/issues/1451#issuecomment-564182113","issue_url":"https://api.github.com/repos/apache/accumulo/issues/1451","id":564182113,"node_id":"MDEyOklzc3VlQ29tbWVudDU2NDE4MjExMw==","user":{"login":"keith-turner","id":1268739,"node_id":"MDQ6VXNlcjEyNjg3Mzk=","avatar_url":"https://avatars.githubusercontent.com/u/1268739?v=4","gravatar_id":"","url":"https://api.github.com/users/keith-turner","html_url":"https://github.com/keith-turner","followers_url":"https://api.github.com/users/keith-turner/followers","following_url":"https://api.github.com/users/keith-turner/following{/other_user}","gists_url":"https://api.github.com/users/keith-turner/gists{/gist_id}","starred_url":"https://api.github.com/users/keith-turner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/keith-turner/subscriptions","organizations_url":"https://api.github.com/users/keith-turner/orgs","repos_url":"https://api.github.com/users/keith-turner/repos","events_url":"https://api.github.com/users/keith-turner/events{/privacy}","received_events_url":"https://api.github.com/users/keith-turner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-12-10T19:01:17Z","updated_at":"2019-12-10T19:01:41Z","author_association":"CONTRIBUTOR","body":"> Using something like yarn instead of kubernetes might be a good initial implementation.\r\n\r\nThe Accumulo API will return a list of serializeable runnables.  Then a user could run those wherever they want.  This could lead to multiple little bridge projects that help run compactions in different execution environments.  This is an approach we took with Fluo when creating [fluo-yarn](https://github.com/apache/fluo-yarn) and [fluo-docker](https://github.com/apache/fluo-docker).\r\n\r\nIdeally some of these bridge projects would be created before releasing Accumulo to facilitate testing the new API. ","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/564182113/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/564210514","html_url":"https://github.com/apache/accumulo/issues/1449#issuecomment-564210514","issue_url":"https://api.github.com/repos/apache/accumulo/issues/1449","id":564210514,"node_id":"MDEyOklzc3VlQ29tbWVudDU2NDIxMDUxNA==","user":{"login":"Manno15","id":29436247,"node_id":"MDQ6VXNlcjI5NDM2MjQ3","avatar_url":"https://avatars.githubusercontent.com/u/29436247?v=4","gravatar_id":"","url":"https://api.github.com/users/Manno15","html_url":"https://github.com/Manno15","followers_url":"https://api.github.com/users/Manno15/followers","following_url":"https://api.github.com/users/Manno15/following{/other_user}","gists_url":"https://api.github.com/users/Manno15/gists{/gist_id}","starred_url":"https://api.github.com/users/Manno15/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Manno15/subscriptions","organizations_url":"https://api.github.com/users/Manno15/orgs","repos_url":"https://api.github.com/users/Manno15/repos","events_url":"https://api.github.com/users/Manno15/events{/privacy}","received_events_url":"https://api.github.com/users/Manno15/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-12-10T19:38:37Z","updated_at":"2019-12-10T19:38:37Z","author_association":"CONTRIBUTOR","body":"Looks like Thrift Connection Pool Checker thread does not get properly closed now since #1374. I will work on a fix. ","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/564210514/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/564257458","html_url":"https://github.com/apache/accumulo/issues/1220#issuecomment-564257458","issue_url":"https://api.github.com/repos/apache/accumulo/issues/1220","id":564257458,"node_id":"MDEyOklzc3VlQ29tbWVudDU2NDI1NzQ1OA==","user":{"login":"ctubbsii","id":1280725,"node_id":"MDQ6VXNlcjEyODA3MjU=","avatar_url":"https://avatars.githubusercontent.com/u/1280725?v=4","gravatar_id":"","url":"https://api.github.com/users/ctubbsii","html_url":"https://github.com/ctubbsii","followers_url":"https://api.github.com/users/ctubbsii/followers","following_url":"https://api.github.com/users/ctubbsii/following{/other_user}","gists_url":"https://api.github.com/users/ctubbsii/gists{/gist_id}","starred_url":"https://api.github.com/users/ctubbsii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ctubbsii/subscriptions","organizations_url":"https://api.github.com/users/ctubbsii/orgs","repos_url":"https://api.github.com/users/ctubbsii/repos","events_url":"https://api.github.com/users/ctubbsii/events{/privacy}","received_events_url":"https://api.github.com/users/ctubbsii/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-12-10T21:04:45Z","updated_at":"2019-12-10T21:04:45Z","author_association":"MEMBER","body":"This is superseded by #1454","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/564257458/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/564257771","html_url":"https://github.com/apache/accumulo/pull/1443#issuecomment-564257771","issue_url":"https://api.github.com/repos/apache/accumulo/issues/1443","id":564257771,"node_id":"MDEyOklzc3VlQ29tbWVudDU2NDI1Nzc3MQ==","user":{"login":"ctubbsii","id":1280725,"node_id":"MDQ6VXNlcjEyODA3MjU=","avatar_url":"https://avatars.githubusercontent.com/u/1280725?v=4","gravatar_id":"","url":"https://api.github.com/users/ctubbsii","html_url":"https://github.com/ctubbsii","followers_url":"https://api.github.com/users/ctubbsii/followers","following_url":"https://api.github.com/users/ctubbsii/following{/other_user}","gists_url":"https://api.github.com/users/ctubbsii/gists{/gist_id}","starred_url":"https://api.github.com/users/ctubbsii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ctubbsii/subscriptions","organizations_url":"https://api.github.com/users/ctubbsii/orgs","repos_url":"https://api.github.com/users/ctubbsii/repos","events_url":"https://api.github.com/users/ctubbsii/events{/privacy}","received_events_url":"https://api.github.com/users/ctubbsii/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-12-10T21:05:34Z","updated_at":"2019-12-10T21:05:34Z","author_association":"MEMBER","body":"This is superseded by #1454","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/564257771/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/564262626","html_url":"https://github.com/apache/accumulo/pull/1422#issuecomment-564262626","issue_url":"https://api.github.com/repos/apache/accumulo/issues/1422","id":564262626,"node_id":"MDEyOklzc3VlQ29tbWVudDU2NDI2MjYyNg==","user":{"login":"ctubbsii","id":1280725,"node_id":"MDQ6VXNlcjEyODA3MjU=","avatar_url":"https://avatars.githubusercontent.com/u/1280725?v=4","gravatar_id":"","url":"https://api.github.com/users/ctubbsii","html_url":"https://github.com/ctubbsii","followers_url":"https://api.github.com/users/ctubbsii/followers","following_url":"https://api.github.com/users/ctubbsii/following{/other_user}","gists_url":"https://api.github.com/users/ctubbsii/gists{/gist_id}","starred_url":"https://api.github.com/users/ctubbsii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ctubbsii/subscriptions","organizations_url":"https://api.github.com/users/ctubbsii/orgs","repos_url":"https://api.github.com/users/ctubbsii/repos","events_url":"https://api.github.com/users/ctubbsii/events{/privacy}","received_events_url":"https://api.github.com/users/ctubbsii/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-12-10T21:17:47Z","updated_at":"2019-12-10T21:17:47Z","author_association":"MEMBER","body":"I think this change should be postponed until after #1454 , which should make implementing this a bit simpler.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/564262626/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/564264737","html_url":"https://github.com/apache/accumulo/issues/1454#issuecomment-564264737","issue_url":"https://api.github.com/repos/apache/accumulo/issues/1454","id":564264737,"node_id":"MDEyOklzc3VlQ29tbWVudDU2NDI2NDczNw==","user":{"login":"ctubbsii","id":1280725,"node_id":"MDQ6VXNlcjEyODA3MjU=","avatar_url":"https://avatars.githubusercontent.com/u/1280725?v=4","gravatar_id":"","url":"https://api.github.com/users/ctubbsii","html_url":"https://github.com/ctubbsii","followers_url":"https://api.github.com/users/ctubbsii/followers","following_url":"https://api.github.com/users/ctubbsii/following{/other_user}","gists_url":"https://api.github.com/users/ctubbsii/gists{/gist_id}","starred_url":"https://api.github.com/users/ctubbsii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ctubbsii/subscriptions","organizations_url":"https://api.github.com/users/ctubbsii/orgs","repos_url":"https://api.github.com/users/ctubbsii/repos","events_url":"https://api.github.com/users/ctubbsii/events{/privacy}","received_events_url":"https://api.github.com/users/ctubbsii/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-12-10T21:23:12Z","updated_at":"2019-12-10T21:23:12Z","author_association":"MEMBER","body":"This also supersedes https://issues.apache.org/jira/browse/ACCUMULO-4050","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/564264737/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/564282646","html_url":"https://github.com/apache/accumulo/issues/1007#issuecomment-564282646","issue_url":"https://api.github.com/repos/apache/accumulo/issues/1007","id":564282646,"node_id":"MDEyOklzc3VlQ29tbWVudDU2NDI4MjY0Ng==","user":{"login":"ctubbsii","id":1280725,"node_id":"MDQ6VXNlcjEyODA3MjU=","avatar_url":"https://avatars.githubusercontent.com/u/1280725?v=4","gravatar_id":"","url":"https://api.github.com/users/ctubbsii","html_url":"https://github.com/ctubbsii","followers_url":"https://api.github.com/users/ctubbsii/followers","following_url":"https://api.github.com/users/ctubbsii/following{/other_user}","gists_url":"https://api.github.com/users/ctubbsii/gists{/gist_id}","starred_url":"https://api.github.com/users/ctubbsii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ctubbsii/subscriptions","organizations_url":"https://api.github.com/users/ctubbsii/orgs","repos_url":"https://api.github.com/users/ctubbsii/repos","events_url":"https://api.github.com/users/ctubbsii/events{/privacy}","received_events_url":"https://api.github.com/users/ctubbsii/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-12-10T22:11:31Z","updated_at":"2019-12-10T22:11:31Z","author_association":"MEMBER","body":"ZooUtil.putData was moved to ZooReaderWriter.putData.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/564282646/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/564330045","html_url":"https://github.com/apache/accumulo/pull/1445#issuecomment-564330045","issue_url":"https://api.github.com/repos/apache/accumulo/issues/1445","id":564330045,"node_id":"MDEyOklzc3VlQ29tbWVudDU2NDMzMDA0NQ==","user":{"login":"etseidl","id":25541553,"node_id":"MDQ6VXNlcjI1NTQxNTUz","avatar_url":"https://avatars.githubusercontent.com/u/25541553?v=4","gravatar_id":"","url":"https://api.github.com/users/etseidl","html_url":"https://github.com/etseidl","followers_url":"https://api.github.com/users/etseidl/followers","following_url":"https://api.github.com/users/etseidl/following{/other_user}","gists_url":"https://api.github.com/users/etseidl/gists{/gist_id}","starred_url":"https://api.github.com/users/etseidl/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/etseidl/subscriptions","organizations_url":"https://api.github.com/users/etseidl/orgs","repos_url":"https://api.github.com/users/etseidl/repos","events_url":"https://api.github.com/users/etseidl/events{/privacy}","received_events_url":"https://api.github.com/users/etseidl/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-12-11T01:02:52Z","updated_at":"2019-12-12T00:10:00Z","author_association":"CONTRIBUTOR","body":"@keith-turner @ctubbsii Thanks for all the help, I think this PR is in a much better state now.  One thing that is still bugging me though is getting the policies set for the table directory.  Right now I have a check in `Tablet.checkTabletDir()` for whether the \"default_tablet\" directory is being created.  If it is, I do a call to `VolumeManager.checkDirPolicies()` for the parent directory.  This works fine for table creation, but not for cloning.  If the table being cloned hasn't populated the default_tablet, then the cloned copy won't ever create that directory, so the check on the parent is never done.  (This isn't an issue for import since I already have code to check the parent there.)\r\n\r\nMy first thought was to do a check for existence of the parent whenever creating a tablet directory, but that leads to a race when doing a clone.  The race doesn't cause incorrect behavior, but does result in (potentially many) extra calls to the namenode.  I could add to the existing code a check for \"c-00000000\", but maybe that name is too fragile.  Or I could stop worrying and just add to the documentation that if you clone a table into a namespace that has EC set, it's on you to make sure the parent gets the correct policies set, and I've already added a command line utility to make that easier.  Also, since each call to `mkdirs()` sets the policies anyway, it's not critical that the parent be set for EC, but it does make for less confusion.\r\n\r\nAny suggestions?  Thanks.\r\n\r\nEdit:  Ugh, the current method is wrong anyway since it will only account for the volume the default_tablet lives on.  I guess at this point the options are check the parent every time a new tablet directory is created or just stop worrying about the parent directory.  The latter is the path of least change, so I'm just going with that.  That will mean fewer changes in tableOps too.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/564330045/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/564333159","html_url":"https://github.com/apache/accumulo/issues/1007#issuecomment-564333159","issue_url":"https://api.github.com/repos/apache/accumulo/issues/1007","id":564333159,"node_id":"MDEyOklzc3VlQ29tbWVudDU2NDMzMzE1OQ==","user":{"login":"ctubbsii","id":1280725,"node_id":"MDQ6VXNlcjEyODA3MjU=","avatar_url":"https://avatars.githubusercontent.com/u/1280725?v=4","gravatar_id":"","url":"https://api.github.com/users/ctubbsii","html_url":"https://github.com/ctubbsii","followers_url":"https://api.github.com/users/ctubbsii/followers","following_url":"https://api.github.com/users/ctubbsii/following{/other_user}","gists_url":"https://api.github.com/users/ctubbsii/gists{/gist_id}","starred_url":"https://api.github.com/users/ctubbsii/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ctubbsii/subscriptions","organizations_url":"https://api.github.com/users/ctubbsii/orgs","repos_url":"https://api.github.com/users/ctubbsii/repos","events_url":"https://api.github.com/users/ctubbsii/events{/privacy}","received_events_url":"https://api.github.com/users/ctubbsii/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-12-11T01:16:21Z","updated_at":"2019-12-11T01:16:32Z","author_association":"MEMBER","body":"I'm currently refactoring some of the `ZooReader{Writer,}` code to reduce redundancy and simplify things, and saw the problematic code in question. I can look into a fix.","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/564333159/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/564601206","html_url":"https://github.com/apache/accumulo/pull/1446#issuecomment-564601206","issue_url":"https://api.github.com/repos/apache/accumulo/issues/1446","id":564601206,"node_id":"MDEyOklzc3VlQ29tbWVudDU2NDYwMTIwNg==","user":{"login":"milleruntime","id":11872539,"node_id":"MDQ6VXNlcjExODcyNTM5","avatar_url":"https://avatars.githubusercontent.com/u/11872539?v=4","gravatar_id":"","url":"https://api.github.com/users/milleruntime","html_url":"https://github.com/milleruntime","followers_url":"https://api.github.com/users/milleruntime/followers","following_url":"https://api.github.com/users/milleruntime/following{/other_user}","gists_url":"https://api.github.com/users/milleruntime/gists{/gist_id}","starred_url":"https://api.github.com/users/milleruntime/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/milleruntime/subscriptions","organizations_url":"https://api.github.com/users/milleruntime/orgs","repos_url":"https://api.github.com/users/milleruntime/repos","events_url":"https://api.github.com/users/milleruntime/events{/privacy}","received_events_url":"https://api.github.com/users/milleruntime/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-12-11T15:38:52Z","updated_at":"2019-12-11T15:38:52Z","author_association":"CONTRIBUTOR","body":"I think I will work on #1397 prior to finishing this... it should make this change way simpler. ","reactions":{"url":"https://api.github.com/repos/apache/accumulo/issues/comments/564601206/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]