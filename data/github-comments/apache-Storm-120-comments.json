[{"url":"https://api.github.com/repos/apache/storm/issues/comments/148208528","html_url":"https://github.com/apache/storm/pull/795#issuecomment-148208528","issue_url":"https://api.github.com/repos/apache/storm/issues/795","id":148208528,"node_id":"MDEyOklzc3VlQ29tbWVudDE0ODIwODUyOA==","user":{"login":"kishorvpatil","id":6090397,"node_id":"MDQ6VXNlcjYwOTAzOTc=","avatar_url":"https://avatars.githubusercontent.com/u/6090397?v=4","gravatar_id":"","url":"https://api.github.com/users/kishorvpatil","html_url":"https://github.com/kishorvpatil","followers_url":"https://api.github.com/users/kishorvpatil/followers","following_url":"https://api.github.com/users/kishorvpatil/following{/other_user}","gists_url":"https://api.github.com/users/kishorvpatil/gists{/gist_id}","starred_url":"https://api.github.com/users/kishorvpatil/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kishorvpatil/subscriptions","organizations_url":"https://api.github.com/users/kishorvpatil/orgs","repos_url":"https://api.github.com/users/kishorvpatil/repos","events_url":"https://api.github.com/users/kishorvpatil/events{/privacy}","received_events_url":"https://api.github.com/users/kishorvpatil/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-14T21:31:39Z","updated_at":"2015-10-14T21:31:39Z","author_association":"CONTRIBUTOR","body":"1. Nimbus would not reassign anything because - workers come-up and heartbeat correctly ( as it is independent thread.)\n2. If workerA runs out of attempts to WorkerB ( because workerB was delayed in launching..) The workerA simply hangs..)\n\nThis patch simply helps resolve that bottleneck for trying to connect forever.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/148208528/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612610849","html_url":"https://github.com/apache/storm/issues/4944#issuecomment-2612610849","issue_url":"https://api.github.com/repos/apache/storm/issues/4944","id":2612610849,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MTA4NDk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-14T21:31:41Z","updated_at":"2025-01-24T14:05:10Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user kishorvpatil commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/795#issuecomment-148208528\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/795#issuecomment-148208528</a></p>\n\n<p>    1. Nimbus would not reassign anything because - workers come-up and heartbeat correctly ( as it is independent thread.)<br/>\n    2. If workerA runs out of attempts to WorkerB ( because workerB was delayed in launching..) The workerA simply hangs..)</p>\n\n<p>    This patch simply helps resolve that bottleneck for trying to connect forever.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612610849/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612611727","html_url":"https://github.com/apache/storm/issues/4950#issuecomment-2612611727","issue_url":"https://api.github.com/repos/apache/storm/issues/4950","id":2612611727,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MTE3Mjc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-14T21:32:22Z","updated_at":"2025-01-24T14:05:35Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>GitHub user zhuoliu opened a pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/800\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/800</a></p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1112\" title=\"Add executor id to the thread name of the executor thread for debug\" class=\"issue-link\" data-issue-key=\"STORM-1112\"><del>STORM-1112</del></a> add executor-id to executor thread name</p>\n\n\n\n<p>You can merge this pull request into a Git repository by running:</p>\n\n<p>    $ git pull <a href=\"https://github.com/zhuoliu/storm\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/zhuoliu/storm</a> 1112</p>\n\n<p>Alternatively you can review and apply these changes as the patch at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/800.patch\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/800.patch</a></p>\n\n<p>To close this pull request, make a commit to your master/trunk branch<br/>\nwith (at least) the following in the commit message:</p>\n\n<p>    This closes #800</p>\n\n<hr />\n<p>commit ee1bc8a9d4fc0796e897c3b0082d35170bbca05e<br/>\nAuthor: zhuol <zhuol@yahoo-inc.com><br/>\nDate:   2015-10-14T21:32:44Z</p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1112\" title=\"Add executor id to the thread name of the executor thread for debug\" class=\"issue-link\" data-issue-key=\"STORM-1112\"><del>STORM-1112</del></a> add executor-id to executor thread name</p>\n\n<hr />","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612611727/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/148209299","html_url":"https://github.com/apache/storm/pull/795#issuecomment-148209299","issue_url":"https://api.github.com/repos/apache/storm/issues/795","id":148209299,"node_id":"MDEyOklzc3VlQ29tbWVudDE0ODIwOTI5OQ==","user":{"login":"kishorvpatil","id":6090397,"node_id":"MDQ6VXNlcjYwOTAzOTc=","avatar_url":"https://avatars.githubusercontent.com/u/6090397?v=4","gravatar_id":"","url":"https://api.github.com/users/kishorvpatil","html_url":"https://github.com/kishorvpatil","followers_url":"https://api.github.com/users/kishorvpatil/followers","following_url":"https://api.github.com/users/kishorvpatil/following{/other_user}","gists_url":"https://api.github.com/users/kishorvpatil/gists{/gist_id}","starred_url":"https://api.github.com/users/kishorvpatil/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kishorvpatil/subscriptions","organizations_url":"https://api.github.com/users/kishorvpatil/orgs","repos_url":"https://api.github.com/users/kishorvpatil/repos","events_url":"https://api.github.com/users/kishorvpatil/events{/privacy}","received_events_url":"https://api.github.com/users/kishorvpatil/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-14T21:35:33Z","updated_at":"2015-10-14T21:35:33Z","author_association":"CONTRIBUTOR","body":"Also, there is bigger problem with `HashedWheelTimer` has bigger problems when worker has large number of connections to make and the remote workers are not accepting connections. At least for version of netty we are using there have been reports of it cracking over high CPU usage - i.e. once I saw `HashedWheelTimer` cause worker hangups. I am in the process of creating a reproducible test and solution for that. But we don't have to hold back 0.10.x release for that.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/148209299/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612610853","html_url":"https://github.com/apache/storm/issues/4944#issuecomment-2612610853","issue_url":"https://api.github.com/repos/apache/storm/issues/4944","id":2612610853,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MTA4NTM=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-14T21:35:34Z","updated_at":"2025-01-24T14:05:10Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user kishorvpatil commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/795#issuecomment-148209299\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/795#issuecomment-148209299</a></p>\n\n<p>    Also, there is bigger problem with `HashedWheelTimer` has bigger problems when worker has large number of connections to make and the remote workers are not accepting connections. At least for version of netty we are using there have been reports of it cracking over high CPU usage - i.e. once I saw `HashedWheelTimer` cause worker hangups. I am in the process of creating a reproducible test and solution for that. But we don't have to hold back 0.10.x release for that.</p>\n\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612610853/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/148209473","html_url":"https://github.com/apache/storm/pull/396#issuecomment-148209473","issue_url":"https://api.github.com/repos/apache/storm/issues/396","id":148209473,"node_id":"MDEyOklzc3VlQ29tbWVudDE0ODIwOTQ3Mw==","user":{"login":"HeartSaVioR","id":1317309,"node_id":"MDQ6VXNlcjEzMTczMDk=","avatar_url":"https://avatars.githubusercontent.com/u/1317309?v=4","gravatar_id":"","url":"https://api.github.com/users/HeartSaVioR","html_url":"https://github.com/HeartSaVioR","followers_url":"https://api.github.com/users/HeartSaVioR/followers","following_url":"https://api.github.com/users/HeartSaVioR/following{/other_user}","gists_url":"https://api.github.com/users/HeartSaVioR/gists{/gist_id}","starred_url":"https://api.github.com/users/HeartSaVioR/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HeartSaVioR/subscriptions","organizations_url":"https://api.github.com/users/HeartSaVioR/orgs","repos_url":"https://api.github.com/users/HeartSaVioR/repos","events_url":"https://api.github.com/users/HeartSaVioR/events{/privacy}","received_events_url":"https://api.github.com/users/HeartSaVioR/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-14T21:36:28Z","updated_at":"2015-10-14T21:36:28Z","author_association":"CONTRIBUTOR","body":"Agreed on @knusbaum.\nIt can reduce one ps command for actual users to operate (ps, kill, etc.) specific worker by hand, but I'm curious that there're other benefits.\nI also think that since we're already defining \"port\", we would be better to encapsulate worker process into \"port\" and provide a way to operate such things via \"port\".\n\nOr we can think about providing workers' information (usage of CPU, MEM, etc. but except secure things) into UI. Maybe we could provide a way to kill specific worker from UI, but I wonder there's such use cases.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/148209473/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612521707","html_url":"https://github.com/apache/storm/issues/4479#issuecomment-2612521707","issue_url":"https://api.github.com/repos/apache/storm/issues/4479","id":2612521707,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1MjE3MDc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-14T21:36:29Z","updated_at":"2025-01-24T13:22:53Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user HeartSaVioR commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/396#issuecomment-148209473\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/396#issuecomment-148209473</a></p>\n\n<p>    Agreed on @knusbaum.<br/>\n    It can reduce one ps command for actual users to operate (ps, kill, etc.) specific worker by hand, but I'm curious that there're other benefits.<br/>\n    I also think that since we're already defining \"port\", we would be better to encapsulate worker process into \"port\" and provide a way to operate such things via \"port\".</p>\n\n<p>    Or we can think about providing workers' information (usage of CPU, MEM, etc. but except secure things) into UI. Maybe we could provide a way to kill specific worker from UI, but I wonder there's such use cases.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612521707/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612611848","html_url":"https://github.com/apache/storm/issues/4951#issuecomment-2612611848","issue_url":"https://api.github.com/repos/apache/storm/issues/4951","id":2612611848,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MTE4NDg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-14T21:38:07Z","updated_at":"2025-01-24T14:05:38Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=dagit\">dagit</a>:</i>\n<p><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=ppoulosk\" class=\"user-hover\" rel=\"ppoulosk\">Paul Poulosky</a>, is this a duplicate of <a href=\"https://issues.apache.org/jira/browse/STORM-1112\" title=\"Add executor id to the thread name of the executor thread for debug\" class=\"issue-link\" data-issue-key=\"STORM-1112\"><del>STORM-1112</del></a>?</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612611848/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/148210871","html_url":"https://github.com/apache/storm/pull/795#issuecomment-148210871","issue_url":"https://api.github.com/repos/apache/storm/issues/795","id":148210871,"node_id":"MDEyOklzc3VlQ29tbWVudDE0ODIxMDg3MQ==","user":{"login":"HeartSaVioR","id":1317309,"node_id":"MDQ6VXNlcjEzMTczMDk=","avatar_url":"https://avatars.githubusercontent.com/u/1317309?v=4","gravatar_id":"","url":"https://api.github.com/users/HeartSaVioR","html_url":"https://github.com/HeartSaVioR","followers_url":"https://api.github.com/users/HeartSaVioR/followers","following_url":"https://api.github.com/users/HeartSaVioR/following{/other_user}","gists_url":"https://api.github.com/users/HeartSaVioR/gists{/gist_id}","starred_url":"https://api.github.com/users/HeartSaVioR/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HeartSaVioR/subscriptions","organizations_url":"https://api.github.com/users/HeartSaVioR/orgs","repos_url":"https://api.github.com/users/HeartSaVioR/repos","events_url":"https://api.github.com/users/HeartSaVioR/events{/privacy}","received_events_url":"https://api.github.com/users/HeartSaVioR/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-14T21:43:33Z","updated_at":"2015-10-14T22:35:17Z","author_association":"CONTRIBUTOR","body":"@kishorvpatil \nThanks for the detail. I didn't think about situation 2. (delaying in launching) :)\n+1\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/148210871/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612610861","html_url":"https://github.com/apache/storm/issues/4944#issuecomment-2612610861","issue_url":"https://api.github.com/repos/apache/storm/issues/4944","id":2612610861,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MTA4NjE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-14T21:43:34Z","updated_at":"2025-01-24T14:05:10Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user HeartSaVioR commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/795#issuecomment-148210871\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/795#issuecomment-148210871</a></p>\n\n<p>    @kishorvpatil <br/>\n    Thanks for the detail. I didn't think about situation 2. <img class=\"emoticon\" src=\"https://issues.apache.org/jira/images/icons/emoticons/smile.png\" height=\"16\" width=\"16\" align=\"absmiddle\" alt=\"\" border=\"0\"/><br/>\n    +1</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612610861/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/148212308","html_url":"https://github.com/apache/storm/pull/454#issuecomment-148212308","issue_url":"https://api.github.com/repos/apache/storm/issues/454","id":148212308,"node_id":"MDEyOklzc3VlQ29tbWVudDE0ODIxMjMwOA==","user":{"login":"mjtieman","id":2328777,"node_id":"MDQ6VXNlcjIzMjg3Nzc=","avatar_url":"https://avatars.githubusercontent.com/u/2328777?v=4","gravatar_id":"","url":"https://api.github.com/users/mjtieman","html_url":"https://github.com/mjtieman","followers_url":"https://api.github.com/users/mjtieman/followers","following_url":"https://api.github.com/users/mjtieman/following{/other_user}","gists_url":"https://api.github.com/users/mjtieman/gists{/gist_id}","starred_url":"https://api.github.com/users/mjtieman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mjtieman/subscriptions","organizations_url":"https://api.github.com/users/mjtieman/orgs","repos_url":"https://api.github.com/users/mjtieman/repos","events_url":"https://api.github.com/users/mjtieman/events{/privacy}","received_events_url":"https://api.github.com/users/mjtieman/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-14T21:49:46Z","updated_at":"2015-10-14T21:49:46Z","author_association":"NONE","body":"Resolved conflicts in PartitionManager. Let me know if there is anything I can fix that is blocking these changes from being mergd.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/148212308/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/148217847","html_url":"https://github.com/apache/storm/pull/795#issuecomment-148217847","issue_url":"https://api.github.com/repos/apache/storm/issues/795","id":148217847,"node_id":"MDEyOklzc3VlQ29tbWVudDE0ODIxNzg0Nw==","user":{"login":"HeartSaVioR","id":1317309,"node_id":"MDQ6VXNlcjEzMTczMDk=","avatar_url":"https://avatars.githubusercontent.com/u/1317309?v=4","gravatar_id":"","url":"https://api.github.com/users/HeartSaVioR","html_url":"https://github.com/HeartSaVioR","followers_url":"https://api.github.com/users/HeartSaVioR/followers","following_url":"https://api.github.com/users/HeartSaVioR/following{/other_user}","gists_url":"https://api.github.com/users/HeartSaVioR/gists{/gist_id}","starred_url":"https://api.github.com/users/HeartSaVioR/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HeartSaVioR/subscriptions","organizations_url":"https://api.github.com/users/HeartSaVioR/orgs","repos_url":"https://api.github.com/users/HeartSaVioR/repos","events_url":"https://api.github.com/users/HeartSaVioR/events{/privacy}","received_events_url":"https://api.github.com/users/HeartSaVioR/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-14T22:10:28Z","updated_at":"2015-10-14T22:10:28Z","author_association":"CONTRIBUTOR","body":"Seems like default value of storm.messaging.netty.max_wait_ms is very small.\n\nI didn't see the details about StormBoundedExponentialBackoffRetry, but if it is running as intended via class comment, we're sleeping between 100 ~ 1000 ms for each retry by default.\nBut we're pinning max retry count to 29 from ExponentialBackoffRetry.validateMaxRetries() since we use 1 << retryCount to sleep, resulting that we only sleep about max 29 secs, which is too short.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/148217847/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612610866","html_url":"https://github.com/apache/storm/issues/4944#issuecomment-2612610866","issue_url":"https://api.github.com/repos/apache/storm/issues/4944","id":2612610866,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MTA4NjY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-14T22:10:29Z","updated_at":"2025-01-24T14:05:11Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user HeartSaVioR commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/795#issuecomment-148217847\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/795#issuecomment-148217847</a></p>\n\n<p>    Seems like default value of storm.messaging.netty.max_wait_ms is very small.</p>\n\n<p>    I didn't see the details about StormBoundedExponentialBackoffRetry, but if it is running as intended via class comment, we're sleeping between 100 ~ 1000 ms for each retry by default.<br/>\n    But we're pinning max retry count to 29 from ExponentialBackoffRetry.validateMaxRetries() since we use 1 << retryCount to sleep, resulting that we only sleep about max 29 secs, which is too short.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612610866/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/148219849","html_url":"https://github.com/apache/storm/pull/795#issuecomment-148219849","issue_url":"https://api.github.com/repos/apache/storm/issues/795","id":148219849,"node_id":"MDEyOklzc3VlQ29tbWVudDE0ODIxOTg0OQ==","user":{"login":"kishorvpatil","id":6090397,"node_id":"MDQ6VXNlcjYwOTAzOTc=","avatar_url":"https://avatars.githubusercontent.com/u/6090397?v=4","gravatar_id":"","url":"https://api.github.com/users/kishorvpatil","html_url":"https://github.com/kishorvpatil","followers_url":"https://api.github.com/users/kishorvpatil/followers","following_url":"https://api.github.com/users/kishorvpatil/following{/other_user}","gists_url":"https://api.github.com/users/kishorvpatil/gists{/gist_id}","starred_url":"https://api.github.com/users/kishorvpatil/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kishorvpatil/subscriptions","organizations_url":"https://api.github.com/users/kishorvpatil/orgs","repos_url":"https://api.github.com/users/kishorvpatil/repos","events_url":"https://api.github.com/users/kishorvpatil/events{/privacy}","received_events_url":"https://api.github.com/users/kishorvpatil/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-14T22:20:26Z","updated_at":"2015-10-14T22:20:26Z","author_association":"CONTRIBUTOR","body":"@HeartSaVioR, your understanding about `StormBoundedExponentialBackoffRetry` is correct, the 29 seconds is decent time - in case where workerB restarts due to any reason - during regular set-up.  But initial startup ( requires supervisor to read assignments/download code/launch workers.) which could mean much more than that. \n\nThe `StormBoundedExponentialBackoffRetry` lets you go beyond max attempts to give you 1sec sleep until you succeed. So, the workerA should keep trying unless nimbus informs workerA that workerB ( is no longer working on that port.)\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/148219849/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612610870","html_url":"https://github.com/apache/storm/issues/4944#issuecomment-2612610870","issue_url":"https://api.github.com/repos/apache/storm/issues/4944","id":2612610870,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MTA4NzA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-14T22:20:31Z","updated_at":"2025-01-24T14:05:11Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user kishorvpatil commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/795#issuecomment-148219849\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/795#issuecomment-148219849</a></p>\n\n<p>    @HeartSaVioR, your understanding about `StormBoundedExponentialBackoffRetry` is correct, the 29 seconds is decent time - in case where workerB restarts due to any reason - during regular set-up.  But initial startup ( requires supervisor to read assignments/download code/launch workers.) which could mean much more than that. </p>\n\n<p>    The `StormBoundedExponentialBackoffRetry` lets you go beyond max attempts to give you 1sec sleep until you succeed. So, the workerA should keep trying unless nimbus informs workerA that workerB ( is no longer working on that port.)</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612610870/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/148222144","html_url":"https://github.com/apache/storm/pull/795#issuecomment-148222144","issue_url":"https://api.github.com/repos/apache/storm/issues/795","id":148222144,"node_id":"MDEyOklzc3VlQ29tbWVudDE0ODIyMjE0NA==","user":{"login":"HeartSaVioR","id":1317309,"node_id":"MDQ6VXNlcjEzMTczMDk=","avatar_url":"https://avatars.githubusercontent.com/u/1317309?v=4","gravatar_id":"","url":"https://api.github.com/users/HeartSaVioR","html_url":"https://github.com/HeartSaVioR","followers_url":"https://api.github.com/users/HeartSaVioR/followers","following_url":"https://api.github.com/users/HeartSaVioR/following{/other_user}","gists_url":"https://api.github.com/users/HeartSaVioR/gists{/gist_id}","starred_url":"https://api.github.com/users/HeartSaVioR/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HeartSaVioR/subscriptions","organizations_url":"https://api.github.com/users/HeartSaVioR/orgs","repos_url":"https://api.github.com/users/HeartSaVioR/repos","events_url":"https://api.github.com/users/HeartSaVioR/events{/privacy}","received_events_url":"https://api.github.com/users/HeartSaVioR/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-14T22:33:57Z","updated_at":"2015-10-14T22:33:57Z","author_association":"CONTRIBUTOR","body":"@kishorvpatil \nYeah, after this PR gets merged. :)\nThinking it once more, since default nimbus.task.timeout.secs is 30, retrying for each 1 secs seems not be short.\nJust curious about adjusting max_wait_ms may affect HashedWheelTimer's CPU usage as you stated.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/148222144/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612610876","html_url":"https://github.com/apache/storm/issues/4944#issuecomment-2612610876","issue_url":"https://api.github.com/repos/apache/storm/issues/4944","id":2612610876,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MTA4NzY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-14T22:33:58Z","updated_at":"2025-01-24T14:05:11Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user HeartSaVioR commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/795#issuecomment-148222144\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/795#issuecomment-148222144</a></p>\n\n<p>    @kishorvpatil <br/>\n    Yeah, after this PR gets merged. <img class=\"emoticon\" src=\"https://issues.apache.org/jira/images/icons/emoticons/smile.png\" height=\"16\" width=\"16\" align=\"absmiddle\" alt=\"\" border=\"0\"/><br/>\n    Thinking it once more, since default nimbus.task.timeout.secs is 30, retrying for each 1 secs seems not be short.<br/>\n    Just curious about adjusting max_wait_ms may affect HashedWheelTimer's CPU usage as you stated.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612610876/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612611731","html_url":"https://github.com/apache/storm/issues/4950#issuecomment-2612611731","issue_url":"https://api.github.com/repos/apache/storm/issues/4950","id":2612611731,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MTE3MzE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-14T22:43:22Z","updated_at":"2025-01-24T14:05:35Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user HeartSaVioR commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/800#discussion_r42063657\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/800#discussion_r42063657</a></p>\n\n<p>    &#8212; Diff: storm-core/src/clj/backtype/storm/daemon/executor.clj &#8212;<br/>\n    @@ -685,7 +685,7 @@<br/>\n       0))<br/>\n   :kill-fn (:report-error-and-die executor-data)<br/>\n   :factory? true</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>:thread-name component-id)]))<br/>\n    +      :thread-name (str component-id \"-executor\" (:executor-id executor-data)))]))\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    @zhuoliu <br/>\n    nit: I'd like to add a \"-\" between \"-executor\" and executor-id, but it's related to personal style, and really minor.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612611731/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/148224367","html_url":"https://github.com/apache/storm/pull/800#issuecomment-148224367","issue_url":"https://api.github.com/repos/apache/storm/issues/800","id":148224367,"node_id":"MDEyOklzc3VlQ29tbWVudDE0ODIyNDM2Nw==","user":{"login":"HeartSaVioR","id":1317309,"node_id":"MDQ6VXNlcjEzMTczMDk=","avatar_url":"https://avatars.githubusercontent.com/u/1317309?v=4","gravatar_id":"","url":"https://api.github.com/users/HeartSaVioR","html_url":"https://github.com/HeartSaVioR","followers_url":"https://api.github.com/users/HeartSaVioR/followers","following_url":"https://api.github.com/users/HeartSaVioR/following{/other_user}","gists_url":"https://api.github.com/users/HeartSaVioR/gists{/gist_id}","starred_url":"https://api.github.com/users/HeartSaVioR/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HeartSaVioR/subscriptions","organizations_url":"https://api.github.com/users/HeartSaVioR/orgs","repos_url":"https://api.github.com/users/HeartSaVioR/repos","events_url":"https://api.github.com/users/HeartSaVioR/events{/privacy}","received_events_url":"https://api.github.com/users/HeartSaVioR/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-14T22:43:34Z","updated_at":"2015-10-14T22:43:34Z","author_association":"CONTRIBUTOR","body":"@zhuoliu \nGreat work, +1\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/148224367/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612611736","html_url":"https://github.com/apache/storm/issues/4950#issuecomment-2612611736","issue_url":"https://api.github.com/repos/apache/storm/issues/4950","id":2612611736,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MTE3MzY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-14T22:43:35Z","updated_at":"2025-01-24T14:05:35Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user HeartSaVioR commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/800#issuecomment-148224367\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/800#issuecomment-148224367</a></p>\n\n<p>    @zhuoliu <br/>\n    Great work, +1</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612611736/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612611742","html_url":"https://github.com/apache/storm/issues/4950#issuecomment-2612611742","issue_url":"https://api.github.com/repos/apache/storm/issues/4950","id":2612611742,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MTE3NDI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-14T22:50:10Z","updated_at":"2025-01-24T14:05:35Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user zhuoliu commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/800#discussion_r42064214\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/800#discussion_r42064214</a></p>\n\n<p>    &#8212; Diff: storm-core/src/clj/backtype/storm/daemon/executor.clj &#8212;<br/>\n    @@ -685,7 +685,7 @@<br/>\n       0))<br/>\n   :kill-fn (:report-error-and-die executor-data)<br/>\n   :factory? true</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>:thread-name component-id)]))<br/>\n    +      :thread-name (str component-id \"-executor\" (:executor-id executor-data)))]))\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    Thanks @HeartSaVioR <br/>\n    Currently the executor send queue thread has name like this:<br/>\n     \"Thread-25-disruptor-executor<span class=\"error\">&#91;25 25&#93;</span>-send-queue\"</p>\n\n<p>    I take similar format to above to be consistent, now we will have executor thread name as:<br/>\n    \"Thread-26-spout-executor<span class=\"error\">&#91;25 25&#93;</span>\"</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612611742/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/148225761","html_url":"https://github.com/apache/storm/pull/772#issuecomment-148225761","issue_url":"https://api.github.com/repos/apache/storm/issues/772","id":148225761,"node_id":"MDEyOklzc3VlQ29tbWVudDE0ODIyNTc2MQ==","user":{"login":"HeartSaVioR","id":1317309,"node_id":"MDQ6VXNlcjEzMTczMDk=","avatar_url":"https://avatars.githubusercontent.com/u/1317309?v=4","gravatar_id":"","url":"https://api.github.com/users/HeartSaVioR","html_url":"https://github.com/HeartSaVioR","followers_url":"https://api.github.com/users/HeartSaVioR/followers","following_url":"https://api.github.com/users/HeartSaVioR/following{/other_user}","gists_url":"https://api.github.com/users/HeartSaVioR/gists{/gist_id}","starred_url":"https://api.github.com/users/HeartSaVioR/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HeartSaVioR/subscriptions","organizations_url":"https://api.github.com/users/HeartSaVioR/orgs","repos_url":"https://api.github.com/users/HeartSaVioR/repos","events_url":"https://api.github.com/users/HeartSaVioR/events{/privacy}","received_events_url":"https://api.github.com/users/HeartSaVioR/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-14T22:51:58Z","updated_at":"2015-10-14T22:51:58Z","author_association":"CONTRIBUTOR","body":"Test failure is NPE from time simulator, which is known and #798 addressed it.\n\nI've reviewed code again. Nice work, +1\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/148225761/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612606511","html_url":"https://github.com/apache/storm/issues/4917#issuecomment-2612606511","issue_url":"https://api.github.com/repos/apache/storm/issues/4917","id":2612606511,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MDY1MTE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-14T22:52:00Z","updated_at":"2025-01-24T14:03:13Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user HeartSaVioR commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/772#issuecomment-148225761\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/772#issuecomment-148225761</a></p>\n\n<p>    Test failure is NPE from time simulator, which is known and #798 addressed it.</p>\n\n<p>    I've reviewed code again. Nice work, +1</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612606511/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/148225899","html_url":"https://github.com/apache/storm/pull/798#issuecomment-148225899","issue_url":"https://api.github.com/repos/apache/storm/issues/798","id":148225899,"node_id":"MDEyOklzc3VlQ29tbWVudDE0ODIyNTg5OQ==","user":{"login":"HeartSaVioR","id":1317309,"node_id":"MDQ6VXNlcjEzMTczMDk=","avatar_url":"https://avatars.githubusercontent.com/u/1317309?v=4","gravatar_id":"","url":"https://api.github.com/users/HeartSaVioR","html_url":"https://github.com/HeartSaVioR","followers_url":"https://api.github.com/users/HeartSaVioR/followers","following_url":"https://api.github.com/users/HeartSaVioR/following{/other_user}","gists_url":"https://api.github.com/users/HeartSaVioR/gists{/gist_id}","starred_url":"https://api.github.com/users/HeartSaVioR/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HeartSaVioR/subscriptions","organizations_url":"https://api.github.com/users/HeartSaVioR/orgs","repos_url":"https://api.github.com/users/HeartSaVioR/repos","events_url":"https://api.github.com/users/HeartSaVioR/events{/privacy}","received_events_url":"https://api.github.com/users/HeartSaVioR/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-14T22:52:49Z","updated_at":"2015-10-14T22:52:49Z","author_association":"CONTRIBUTOR","body":"Great work, +1\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/148225899/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612611128","html_url":"https://github.com/apache/storm/issues/4946#issuecomment-2612611128","issue_url":"https://api.github.com/repos/apache/storm/issues/4946","id":2612611128,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MTExMjg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-14T22:52:50Z","updated_at":"2025-01-24T14:05:17Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user HeartSaVioR commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/798#issuecomment-148225899\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/798#issuecomment-148225899</a></p>\n\n<p>    Great work, +1</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612611128/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612611744","html_url":"https://github.com/apache/storm/issues/4950#issuecomment-2612611744","issue_url":"https://api.github.com/repos/apache/storm/issues/4950","id":2612611744,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MTE3NDQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-14T22:53:35Z","updated_at":"2025-01-24T14:05:35Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user HeartSaVioR commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/800#discussion_r42064526\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/800#discussion_r42064526</a></p>\n\n<p>    &#8212; Diff: storm-core/src/clj/backtype/storm/daemon/executor.clj &#8212;<br/>\n    @@ -685,7 +685,7 @@<br/>\n       0))<br/>\n   :kill-fn (:report-error-and-die executor-data)<br/>\n   :factory? true</p>\n<ul class=\"alternate\" type=\"square\">\n\t<li>:thread-name component-id)]))<br/>\n    +      :thread-name (str component-id \"-executor\" (:executor-id executor-data)))]))\n\t<ul class=\"alternate\" type=\"square\">\n\t\t<li>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ul>\n\t</li>\n</ul>\n\n\n<p>    @zhuoliu Ah, OK. I prefer current formatting. <img class=\"emoticon\" src=\"https://issues.apache.org/jira/images/icons/emoticons/smile.png\" height=\"16\" width=\"16\" align=\"absmiddle\" alt=\"\" border=\"0\"/></p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612611744/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612470504","html_url":"https://github.com/apache/storm/issues/4192#issuecomment-2612470504","issue_url":"https://api.github.com/repos/apache/storm/issues/4192","id":2612470504,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0NzA1MDQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-14T22:59:25Z","updated_at":"2025-01-24T12:56:11Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user HeartSaVioR commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/797#discussion_r42065052\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/797#discussion_r42065052</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/utils/MutableObject.java &#8212;<br/>\n    @@ -18,7 +18,7 @@<br/>\n     package backtype.storm.utils;</p>\n\n<p>     public class MutableObject {<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    @revans2 <br/>\n    I think we can remove this class. It is public class, but it's for internal usage, and can be replaced to AtomicReference as you changed.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612470504/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/148236995","html_url":"https://github.com/apache/storm/pull/797#issuecomment-148236995","issue_url":"https://api.github.com/repos/apache/storm/issues/797","id":148236995,"node_id":"MDEyOklzc3VlQ29tbWVudDE0ODIzNjk5NQ==","user":{"login":"HeartSaVioR","id":1317309,"node_id":"MDQ6VXNlcjEzMTczMDk=","avatar_url":"https://avatars.githubusercontent.com/u/1317309?v=4","gravatar_id":"","url":"https://api.github.com/users/HeartSaVioR","html_url":"https://github.com/HeartSaVioR","followers_url":"https://api.github.com/users/HeartSaVioR/followers","following_url":"https://api.github.com/users/HeartSaVioR/following{/other_user}","gists_url":"https://api.github.com/users/HeartSaVioR/gists{/gist_id}","starred_url":"https://api.github.com/users/HeartSaVioR/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HeartSaVioR/subscriptions","organizations_url":"https://api.github.com/users/HeartSaVioR/orgs","repos_url":"https://api.github.com/users/HeartSaVioR/repos","events_url":"https://api.github.com/users/HeartSaVioR/events{/privacy}","received_events_url":"https://api.github.com/users/HeartSaVioR/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-15T00:01:26Z","updated_at":"2015-10-15T00:01:26Z","author_association":"CONTRIBUTOR","body":"@revans2 \nI'm sorry but could you elaborate, please?\n\nNPE could be occurred that we were reading same offset two or more times since we set offset to null after reading.\n\nI don't know Disruptor deeply, but as far as I understand, I think consumeBatchWhenAvailable() seems not be thread safe unless _barrier.waitFor() forces wait for other thread to read datas first, since there're timing issue between modification of cursor and getting current cursor before calling _barrier.waitFor().\n\nIf consumeBatchWhenAvailable() is not thread-safe, revised consumeBatch() is not thread-safe, too.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/148236995/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612470512","html_url":"https://github.com/apache/storm/issues/4192#issuecomment-2612470512","issue_url":"https://api.github.com/repos/apache/storm/issues/4192","id":2612470512,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0NzA1MTI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-15T00:01:27Z","updated_at":"2025-01-24T12:56:11Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user HeartSaVioR commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/797#issuecomment-148236995\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/797#issuecomment-148236995</a></p>\n\n<p>    @revans2 <br/>\n    I'm sorry but could you elaborate, please?</p>\n\n<p>    NPE could be occurred that we were reading same offset two or more times since we set offset to null after reading.</p>\n\n<p>    I don't know Disruptor deeply, but as far as I understand, I think consumeBatchWhenAvailable() seems not be thread safe unless _barrier.waitFor() forces wait for other thread to read datas first, since there're timing issue between modification of cursor and getting current cursor before calling _barrier.waitFor().</p>\n\n<p>    If consumeBatchWhenAvailable() is not thread-safe, revised consumeBatch() is not thread-safe, too.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612470512/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/148262327","html_url":"https://github.com/apache/storm/pull/797#issuecomment-148262327","issue_url":"https://api.github.com/repos/apache/storm/issues/797","id":148262327,"node_id":"MDEyOklzc3VlQ29tbWVudDE0ODI2MjMyNw==","user":{"login":"darionyaphet","id":4414314,"node_id":"MDQ6VXNlcjQ0MTQzMTQ=","avatar_url":"https://avatars.githubusercontent.com/u/4414314?v=4","gravatar_id":"","url":"https://api.github.com/users/darionyaphet","html_url":"https://github.com/darionyaphet","followers_url":"https://api.github.com/users/darionyaphet/followers","following_url":"https://api.github.com/users/darionyaphet/following{/other_user}","gists_url":"https://api.github.com/users/darionyaphet/gists{/gist_id}","starred_url":"https://api.github.com/users/darionyaphet/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/darionyaphet/subscriptions","organizations_url":"https://api.github.com/users/darionyaphet/orgs","repos_url":"https://api.github.com/users/darionyaphet/repos","events_url":"https://api.github.com/users/darionyaphet/events{/privacy}","received_events_url":"https://api.github.com/users/darionyaphet/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-15T02:38:04Z","updated_at":"2015-10-15T02:38:04Z","author_association":"CONTRIBUTOR","body":"Hi  @revans2   do you test new version disruptor ?   Would you know how much performance improvement ?  thanks you for you work~\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/148262327/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612470515","html_url":"https://github.com/apache/storm/issues/4192#issuecomment-2612470515","issue_url":"https://api.github.com/repos/apache/storm/issues/4192","id":2612470515,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0NzA1MTU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-15T02:38:08Z","updated_at":"2025-01-24T12:56:11Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user darionyaphet commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/797#issuecomment-148262327\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/797#issuecomment-148262327</a></p>\n\n<p>    Hi  @revans2   do you test new version disruptor ?   Would you know how much performance improvement ?  thanks you for you work~</p>\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612470515/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/148289930","html_url":"https://github.com/apache/storm/pull/753#issuecomment-148289930","issue_url":"https://api.github.com/repos/apache/storm/issues/753","id":148289930,"node_id":"MDEyOklzc3VlQ29tbWVudDE0ODI4OTkzMA==","user":{"login":"wangli1426","id":5260276,"node_id":"MDQ6VXNlcjUyNjAyNzY=","avatar_url":"https://avatars.githubusercontent.com/u/5260276?v=4","gravatar_id":"","url":"https://api.github.com/users/wangli1426","html_url":"https://github.com/wangli1426","followers_url":"https://api.github.com/users/wangli1426/followers","following_url":"https://api.github.com/users/wangli1426/following{/other_user}","gists_url":"https://api.github.com/users/wangli1426/gists{/gist_id}","starred_url":"https://api.github.com/users/wangli1426/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wangli1426/subscriptions","organizations_url":"https://api.github.com/users/wangli1426/orgs","repos_url":"https://api.github.com/users/wangli1426/repos","events_url":"https://api.github.com/users/wangli1426/events{/privacy}","received_events_url":"https://api.github.com/users/wangli1426/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-15T05:57:06Z","updated_at":"2015-10-15T05:57:06Z","author_association":"CONTRIBUTOR","body":"@revans2 \nThank you for your comment. I will up-merge this PR. However, I can't quite understand your last sentence. What do you mean by \"you like to see the thrift code changed\"? Could please explain more about it? Thanks.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/148289930/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612602853","html_url":"https://github.com/apache/storm/issues/4895#issuecomment-2612602853","issue_url":"https://api.github.com/repos/apache/storm/issues/4895","id":2612602853,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MDI4NTM=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-15T05:57:09Z","updated_at":"2025-01-24T14:01:38Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user wangli1426 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/753#issuecomment-148289930\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/753#issuecomment-148289930</a></p>\n\n<p>    @revans2 <br/>\n    Thank you for your comment. I will up-merge this PR. However, I can't quite understand your last sentence. What do you mean by \"you like to see the thrift code changed\"? Could please explain more about it? Thanks.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612602853/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/148294057","html_url":"https://github.com/apache/storm/pull/796#issuecomment-148294057","issue_url":"https://api.github.com/repos/apache/storm/issues/796","id":148294057,"node_id":"MDEyOklzc3VlQ29tbWVudDE0ODI5NDA1Nw==","user":{"login":"arunmahadevan","id":6792890,"node_id":"MDQ6VXNlcjY3OTI4OTA=","avatar_url":"https://avatars.githubusercontent.com/u/6792890?v=4","gravatar_id":"","url":"https://api.github.com/users/arunmahadevan","html_url":"https://github.com/arunmahadevan","followers_url":"https://api.github.com/users/arunmahadevan/followers","following_url":"https://api.github.com/users/arunmahadevan/following{/other_user}","gists_url":"https://api.github.com/users/arunmahadevan/gists{/gist_id}","starred_url":"https://api.github.com/users/arunmahadevan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/arunmahadevan/subscriptions","organizations_url":"https://api.github.com/users/arunmahadevan/orgs","repos_url":"https://api.github.com/users/arunmahadevan/repos","events_url":"https://api.github.com/users/arunmahadevan/events{/privacy}","received_events_url":"https://api.github.com/users/arunmahadevan/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-15T06:28:42Z","updated_at":"2015-10-15T06:28:42Z","author_association":"CONTRIBUTOR","body":"Thanks, I get it now. I think it would be good to leave some hooks to plugin other approaches to bytecode generation in future if needed.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/148294057/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612610737","html_url":"https://github.com/apache/storm/issues/4943#issuecomment-2612610737","issue_url":"https://api.github.com/repos/apache/storm/issues/4943","id":2612610737,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MTA3Mzc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-15T06:28:44Z","updated_at":"2025-01-24T14:05:06Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user arunmahadevan commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/796#issuecomment-148294057\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/796#issuecomment-148294057</a></p>\n\n<p>    Thanks, I get it now. I think it would be good to leave some hooks to plugin other approaches to bytecode generation in future if needed.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612610737/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/148382991","html_url":"https://github.com/apache/storm/pull/753#issuecomment-148382991","issue_url":"https://api.github.com/repos/apache/storm/issues/753","id":148382991,"node_id":"MDEyOklzc3VlQ29tbWVudDE0ODM4Mjk5MQ==","user":{"login":"revans2","id":3441321,"node_id":"MDQ6VXNlcjM0NDEzMjE=","avatar_url":"https://avatars.githubusercontent.com/u/3441321?v=4","gravatar_id":"","url":"https://api.github.com/users/revans2","html_url":"https://github.com/revans2","followers_url":"https://api.github.com/users/revans2/followers","following_url":"https://api.github.com/users/revans2/following{/other_user}","gists_url":"https://api.github.com/users/revans2/gists{/gist_id}","starred_url":"https://api.github.com/users/revans2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/revans2/subscriptions","organizations_url":"https://api.github.com/users/revans2/orgs","repos_url":"https://api.github.com/users/revans2/repos","events_url":"https://api.github.com/users/revans2/events{/privacy}","received_events_url":"https://api.github.com/users/revans2/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-15T13:17:20Z","updated_at":"2015-10-15T13:17:20Z","author_association":"CONTRIBUTOR","body":"@wangli1426 \n\nThrift classes have two options for member variables.  required and optional.  If you mark a member as required it must be there or thrift will throw an exception before serializing/deserializing it.  This becomes a problem if we want to do a rolling upgrade (upgrade the cluster with no downtime).  In that case we upgrade one daemon at a time, and there will be a period of time when old clients are talking to new servers and/or new clients are talking to old servers.  If we add new required fields to thrift classes then the code will break during the upgrade.  However, if we mark them all as optional and write the code in the client so it does not break if it gets a null for this value, then we will be OK.\n\nI don't want to break a rolling upgrade just so we can have a rate in the UI.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/148382991/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612602865","html_url":"https://github.com/apache/storm/issues/4895#issuecomment-2612602865","issue_url":"https://api.github.com/repos/apache/storm/issues/4895","id":2612602865,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MDI4NjU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-15T13:17:21Z","updated_at":"2025-01-24T14:01:38Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/753#issuecomment-148382991\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/753#issuecomment-148382991</a></p>\n\n<p>    @wangli1426 </p>\n\n<p>    Thrift classes have two options for member variables.  required and optional.  If you mark a member as required it must be there or thrift will throw an exception before serializing/deserializing it.  This becomes a problem if we want to do a rolling upgrade (upgrade the cluster with no downtime).  In that case we upgrade one daemon at a time, and there will be a period of time when old clients are talking to new servers and/or new clients are talking to old servers.  If we add new required fields to thrift classes then the code will break during the upgrade.  However, if we mark them all as optional and write the code in the client so it does not break if it gets a null for this value, then we will be OK.</p>\n\n<p>    I don't want to break a rolling upgrade just so we can have a rate in the UI.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612602865/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612470519","html_url":"https://github.com/apache/storm/issues/4192#issuecomment-2612470519","issue_url":"https://api.github.com/repos/apache/storm/issues/4192","id":2612470519,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0NzA1MTk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-15T13:19:41Z","updated_at":"2025-01-24T12:56:11Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/797#discussion_r42122513\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/797#discussion_r42122513</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/utils/MutableObject.java &#8212;<br/>\n    @@ -18,7 +18,7 @@<br/>\n     package backtype.storm.utils;</p>\n\n<p>     public class MutableObject {<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    I can probably remove the changes I made to the class but it is used in other places in the code still.<br/>\n    ```<br/>\n    $ find ./storm-core/ -iname &#42;.clj | xargs grep -l MutableObject<br/>\n    ./storm-core//src/clj/backtype/storm/daemon/acker.clj<br/>\n    ./storm-core//src/clj/backtype/storm/daemon/executor.clj<br/>\n    ./storm-core//src/clj/backtype/storm/messaging/loader.clj<br/>\n    ./storm-core//src/clj/backtype/storm/util.clj<br/>\n    ```</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612470519/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/148388035","html_url":"https://github.com/apache/storm/pull/797#issuecomment-148388035","issue_url":"https://api.github.com/repos/apache/storm/issues/797","id":148388035,"node_id":"MDEyOklzc3VlQ29tbWVudDE0ODM4ODAzNQ==","user":{"login":"revans2","id":3441321,"node_id":"MDQ6VXNlcjM0NDEzMjE=","avatar_url":"https://avatars.githubusercontent.com/u/3441321?v=4","gravatar_id":"","url":"https://api.github.com/users/revans2","html_url":"https://github.com/revans2","followers_url":"https://api.github.com/users/revans2/followers","following_url":"https://api.github.com/users/revans2/following{/other_user}","gists_url":"https://api.github.com/users/revans2/gists{/gist_id}","starred_url":"https://api.github.com/users/revans2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/revans2/subscriptions","organizations_url":"https://api.github.com/users/revans2/orgs","repos_url":"https://api.github.com/users/revans2/repos","events_url":"https://api.github.com/users/revans2/events{/privacy}","received_events_url":"https://api.github.com/users/revans2/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-15T13:35:35Z","updated_at":"2015-10-15T13:35:35Z","author_association":"CONTRIBUTOR","body":"@HeartSaVioR \n\nThe original version of consumeBatch looked like this.\n\n```\n    public void consumeBatch(EventHandler<Object> handler) {\n        consumeBatchToCursor(_barrier.getCursor(), handler);\n    }\n```\n\nwhere as consumeBatchWhenAvailable will wait for the cursor to be available.\n\n```\n _barrier.waitFor(nextSequence)\n```\n\nI am not sure what happened in the disruptor code between the old version and the new version, but simply getting the cursor from the barrier does not guarantee that it has been committed.  It may still be being updated.  Perhaps this has always been a problem but we lose the race a lot more frequently with the newer code.\n\nWhen I originally wrote the disruptor upgrade code I copied/modified the code so that we could do batching on the receiver side, not on the sender side.  This didn't help as much as I had hoped, but I also left in some code that when the timeout happened it would try to do something similar to what consumeBatch did, so we could read as much of the batch as possible.  This also resulted in the same issue, but it would only show up when a timeout happened on read, meaning the queue was empty for 1 ms, and right at that moment something was inserted into the queue.  Surprisingly with word count on 16 workers it only takes about 10 mins to reproduce the issue.  My tests were pushing things as fast as possible so they never let any queue stay empty for more then 1 ms.\n\nThe fix was to remove the special handling in the Timeout, and just say there was nothing to process so loop around and try again.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/148388035/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612470521","html_url":"https://github.com/apache/storm/issues/4192#issuecomment-2612470521","issue_url":"https://api.github.com/repos/apache/storm/issues/4192","id":2612470521,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0NzA1MjE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-15T13:35:37Z","updated_at":"2025-01-24T12:56:11Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/797#issuecomment-148388035\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/797#issuecomment-148388035</a></p>\n\n<p>    @HeartSaVioR </p>\n\n<p>    The original version of consumeBatch looked like this.<br/>\n    ```<br/>\npublic void consumeBatch(EventHandler<Object> handler) </p>\n{\n    consumeBatchToCursor(_barrier.getCursor(), handler);\n}\n<p>    ```</p>\n\n<p>    where as consumeBatchWhenAvailable will wait for the cursor to be available.<br/>\n    ```<br/>\n     _barrier.waitFor(nextSequence)<br/>\n    ```</p>\n\n<p>    I am not sure what happened in the disruptor code between the old version and the new version, but simply getting the cursor from the barrier does not guarantee that it has been committed.  It may still be being updated.  Perhaps this has always been a problem but we lose the race a lot more frequently with the newer code.</p>\n\n<p>    When I originally wrote the disruptor upgrade code I copied/modified the code so that we could do batching on the receiver side, not on the sender side.  This didn't help as much as I had hoped, but I also left in some code that when the timeout happened it would try to do something similar to what consumeBatch did, so we could read as much of the batch as possible.  This also resulted in the same issue, but it would only show up when a timeout happened on read, meaning the queue was empty for 1 ms, and right at that moment something was inserted into the queue.  Surprisingly with word count on 16 workers it only takes about 10 mins to reproduce the issue.  My tests were pushing things as fast as possible so they never let any queue stay empty for more then 1 ms.</p>\n\n<p>    The fix was to remove the special handling in the Timeout, and just say there was nothing to process so loop around and try again.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612470521/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/148393429","html_url":"https://github.com/apache/storm/pull/797#issuecomment-148393429","issue_url":"https://api.github.com/repos/apache/storm/issues/797","id":148393429,"node_id":"MDEyOklzc3VlQ29tbWVudDE0ODM5MzQyOQ==","user":{"login":"revans2","id":3441321,"node_id":"MDQ6VXNlcjM0NDEzMjE=","avatar_url":"https://avatars.githubusercontent.com/u/3441321?v=4","gravatar_id":"","url":"https://api.github.com/users/revans2","html_url":"https://github.com/revans2","followers_url":"https://api.github.com/users/revans2/followers","following_url":"https://api.github.com/users/revans2/following{/other_user}","gists_url":"https://api.github.com/users/revans2/gists{/gist_id}","starred_url":"https://api.github.com/users/revans2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/revans2/subscriptions","organizations_url":"https://api.github.com/users/revans2/orgs","repos_url":"https://api.github.com/users/revans2/repos","events_url":"https://api.github.com/users/revans2/events{/privacy}","received_events_url":"https://api.github.com/users/revans2/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-15T13:52:51Z","updated_at":"2015-10-15T13:52:51Z","author_association":"CONTRIBUTOR","body":"@darionyaphet I have seen only small changes to the performance of storm.  It is close to nothing really, but in my micro-benchmarks I see about between a 6% and 26% improvement in maximum throughput.\n\nThe big reason for upgrading is that the APIs are improved so that we can support #765.  In that I have seen a maximum throughput for a single node more then double. Making a faster version of wordcount go from 10,000 sentences/second fully counted to 22,000, on my Mac Book Pro laptop.  If you include acking and everything else that happens that is going from 320,000 tuples/second sent+processed to 704,000 tuples/second.  Be aware that you are not likely to see this in real life on a single topology, as the messaging layer is likely to slow things down, and wordcount is a very light weight processing.  Real world processing is usually more intensive.\n\nBut this is just the beginning we are working on benchmarks and subsequent optimizations all throughput the critical path of storm.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/148393429/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612470527","html_url":"https://github.com/apache/storm/issues/4192#issuecomment-2612470527","issue_url":"https://api.github.com/repos/apache/storm/issues/4192","id":2612470527,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0NzA1Mjc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-15T13:52:52Z","updated_at":"2025-01-24T12:56:11Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/797#issuecomment-148393429\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/797#issuecomment-148393429</a></p>\n\n<p>    @darionyaphet I have seen only small changes to the performance of storm.  It is close to nothing really, but in my micro-benchmarks I see about between a 6% and 26% improvement in maximum throughput.</p>\n\n<p>    The big reason for upgrading is that the APIs are improved so that we can support #765.  In that I have seen a maximum throughput for a single node more then double. Making a faster version of wordcount go from 10,000 sentences/second fully counted to 22,000, on my Mac Book Pro laptop.  If you include acking and everything else that happens that is going from 320,000 tuples/second sent+processed to 704,000 tuples/second.  Be aware that you are not likely to see this in real life on a single topology, as the messaging layer is likely to slow things down, and wordcount is a very light weight processing.  Real world processing is usually more intensive.</p>\n\n<p>    But this is just the beginning we are working on benchmarks and subsequent optimizations all throughput the critical path of storm.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612470527/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/148394880","html_url":"https://github.com/apache/storm/pull/753#issuecomment-148394880","issue_url":"https://api.github.com/repos/apache/storm/issues/753","id":148394880,"node_id":"MDEyOklzc3VlQ29tbWVudDE0ODM5NDg4MA==","user":{"login":"wangli1426","id":5260276,"node_id":"MDQ6VXNlcjUyNjAyNzY=","avatar_url":"https://avatars.githubusercontent.com/u/5260276?v=4","gravatar_id":"","url":"https://api.github.com/users/wangli1426","html_url":"https://github.com/wangli1426","followers_url":"https://api.github.com/users/wangli1426/followers","following_url":"https://api.github.com/users/wangli1426/following{/other_user}","gists_url":"https://api.github.com/users/wangli1426/gists{/gist_id}","starred_url":"https://api.github.com/users/wangli1426/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wangli1426/subscriptions","organizations_url":"https://api.github.com/users/wangli1426/orgs","repos_url":"https://api.github.com/users/wangli1426/repos","events_url":"https://api.github.com/users/wangli1426/events{/privacy}","received_events_url":"https://api.github.com/users/wangli1426/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-15T13:58:47Z","updated_at":"2015-10-15T13:58:47Z","author_association":"CONTRIBUTOR","body":"Hi @revans2,\nThank you very much for giving so detailed explanation. Your concern is quite reasonable. I will mark the throughput optional. As a recent commit has made substantial modification to stats.clj, I am afraid I need more time to up-merge this PR. I will come back when I am done. Thanks \n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/148394880/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612602869","html_url":"https://github.com/apache/storm/issues/4895#issuecomment-2612602869","issue_url":"https://api.github.com/repos/apache/storm/issues/4895","id":2612602869,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MDI4Njk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-15T13:58:48Z","updated_at":"2025-01-24T14:01:38Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user wangli1426 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/753#issuecomment-148394880\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/753#issuecomment-148394880</a></p>\n\n<p>    Hi @revans2,<br/>\n    Thank you very much for giving so detailed explanation. Your concern is quite reasonable. I will mark the throughput optional. As a recent commit has made substantial modification to stats.clj, I am afraid I need more time to up-merge this PR. I will come back when I am done. Thanks </p>\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612602869/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612610878","html_url":"https://github.com/apache/storm/issues/4944#issuecomment-2612610878","issue_url":"https://api.github.com/repos/apache/storm/issues/4944","id":2612610878,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MTA4Nzg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-15T14:12:43Z","updated_at":"2025-01-24T14:05:11Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user asfgit closed the pull request at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/795\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/795</a></p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612610878/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/148404697","html_url":"https://github.com/apache/storm/pull/753#issuecomment-148404697","issue_url":"https://api.github.com/repos/apache/storm/issues/753","id":148404697,"node_id":"MDEyOklzc3VlQ29tbWVudDE0ODQwNDY5Nw==","user":{"login":"revans2","id":3441321,"node_id":"MDQ6VXNlcjM0NDEzMjE=","avatar_url":"https://avatars.githubusercontent.com/u/3441321?v=4","gravatar_id":"","url":"https://api.github.com/users/revans2","html_url":"https://github.com/revans2","followers_url":"https://api.github.com/users/revans2/followers","following_url":"https://api.github.com/users/revans2/following{/other_user}","gists_url":"https://api.github.com/users/revans2/gists{/gist_id}","starred_url":"https://api.github.com/users/revans2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/revans2/subscriptions","organizations_url":"https://api.github.com/users/revans2/orgs","repos_url":"https://api.github.com/users/revans2/repos","events_url":"https://api.github.com/users/revans2/events{/privacy}","received_events_url":"https://api.github.com/users/revans2/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-15T14:33:19Z","updated_at":"2015-10-15T14:33:19Z","author_association":"CONTRIBUTOR","body":"@wangli1426 I totally understand that this is going to take more time.  Thank you for your patience.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/148404697/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612602878","html_url":"https://github.com/apache/storm/issues/4895#issuecomment-2612602878","issue_url":"https://api.github.com/repos/apache/storm/issues/4895","id":2612602878,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MDI4Nzg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-15T14:33:26Z","updated_at":"2025-01-24T14:01:39Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/753#issuecomment-148404697\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/753#issuecomment-148404697</a></p>\n\n<p>    @wangli1426 I totally understand that this is going to take more time.  Thank you for your patience.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612602878/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612610881","html_url":"https://github.com/apache/storm/issues/4944#issuecomment-2612610881","issue_url":"https://api.github.com/repos/apache/storm/issues/4944","id":2612610881,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MTA4ODE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-15T14:48:26Z","updated_at":"2025-01-24T14:05:11Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=kishorvpatil\">kishorvpatil</a>:</i>\n<p>This was merged into master and 0.10.x-branch.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612610881/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/148422429","html_url":"https://github.com/apache/storm/pull/800#issuecomment-148422429","issue_url":"https://api.github.com/repos/apache/storm/issues/800","id":148422429,"node_id":"MDEyOklzc3VlQ29tbWVudDE0ODQyMjQyOQ==","user":{"login":"revans2","id":3441321,"node_id":"MDQ6VXNlcjM0NDEzMjE=","avatar_url":"https://avatars.githubusercontent.com/u/3441321?v=4","gravatar_id":"","url":"https://api.github.com/users/revans2","html_url":"https://github.com/revans2","followers_url":"https://api.github.com/users/revans2/followers","following_url":"https://api.github.com/users/revans2/following{/other_user}","gists_url":"https://api.github.com/users/revans2/gists{/gist_id}","starred_url":"https://api.github.com/users/revans2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/revans2/subscriptions","organizations_url":"https://api.github.com/users/revans2/orgs","repos_url":"https://api.github.com/users/revans2/repos","events_url":"https://api.github.com/users/revans2/events{/privacy}","received_events_url":"https://api.github.com/users/revans2/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-15T15:27:25Z","updated_at":"2015-10-15T15:27:25Z","author_association":"CONTRIBUTOR","body":"+1\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/148422429/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612611748","html_url":"https://github.com/apache/storm/issues/4950#issuecomment-2612611748","issue_url":"https://api.github.com/repos/apache/storm/issues/4950","id":2612611748,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MTE3NDg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-15T15:27:29Z","updated_at":"2025-01-24T14:05:35Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/800#issuecomment-148422429\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/800#issuecomment-148422429</a></p>\n\n<p>    +1</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612611748/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/148425413","html_url":"https://github.com/apache/storm/pull/785#issuecomment-148425413","issue_url":"https://api.github.com/repos/apache/storm/issues/785","id":148425413,"node_id":"MDEyOklzc3VlQ29tbWVudDE0ODQyNTQxMw==","user":{"login":"jerrypeng","id":3613359,"node_id":"MDQ6VXNlcjM2MTMzNTk=","avatar_url":"https://avatars.githubusercontent.com/u/3613359?v=4","gravatar_id":"","url":"https://api.github.com/users/jerrypeng","html_url":"https://github.com/jerrypeng","followers_url":"https://api.github.com/users/jerrypeng/followers","following_url":"https://api.github.com/users/jerrypeng/following{/other_user}","gists_url":"https://api.github.com/users/jerrypeng/gists{/gist_id}","starred_url":"https://api.github.com/users/jerrypeng/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jerrypeng/subscriptions","organizations_url":"https://api.github.com/users/jerrypeng/orgs","repos_url":"https://api.github.com/users/jerrypeng/repos","events_url":"https://api.github.com/users/jerrypeng/events{/privacy}","received_events_url":"https://api.github.com/users/jerrypeng/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-15T15:34:03Z","updated_at":"2015-10-15T15:34:03Z","author_association":"CONTRIBUTOR","body":"@d2r @revans2 I just pushed some updates based on what we discussed.  Can you guys look at it again? thanks!\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/148425413/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612607476","html_url":"https://github.com/apache/storm/issues/4922#issuecomment-2612607476","issue_url":"https://api.github.com/repos/apache/storm/issues/4922","id":2612607476,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MDc0NzY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-15T15:34:04Z","updated_at":"2025-01-24T14:03:38Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user jerrypeng commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/785#issuecomment-148425413\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/785#issuecomment-148425413</a></p>\n\n<p>    @d2r @revans2 I just pushed some updates based on what we discussed.  Can you guys look at it again? thanks!</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612607476/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/148433347","html_url":"https://github.com/apache/storm/pull/796#issuecomment-148433347","issue_url":"https://api.github.com/repos/apache/storm/issues/796","id":148433347,"node_id":"MDEyOklzc3VlQ29tbWVudDE0ODQzMzM0Nw==","user":{"login":"haohui","id":1192828,"node_id":"MDQ6VXNlcjExOTI4Mjg=","avatar_url":"https://avatars.githubusercontent.com/u/1192828?v=4","gravatar_id":"","url":"https://api.github.com/users/haohui","html_url":"https://github.com/haohui","followers_url":"https://api.github.com/users/haohui/followers","following_url":"https://api.github.com/users/haohui/following{/other_user}","gists_url":"https://api.github.com/users/haohui/gists{/gist_id}","starred_url":"https://api.github.com/users/haohui/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/haohui/subscriptions","organizations_url":"https://api.github.com/users/haohui/orgs","repos_url":"https://api.github.com/users/haohui/repos","events_url":"https://api.github.com/users/haohui/events{/privacy}","received_events_url":"https://api.github.com/users/haohui/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-15T15:59:13Z","updated_at":"2015-10-15T15:59:13Z","author_association":"NONE","body":"Thanks for the feedback. The architecture will be flexible to allow pluggable code generation.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/148433347/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612610743","html_url":"https://github.com/apache/storm/issues/4943#issuecomment-2612610743","issue_url":"https://api.github.com/repos/apache/storm/issues/4943","id":2612610743,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MTA3NDM=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-15T15:59:14Z","updated_at":"2025-01-24T14:05:06Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user haohui commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/796#issuecomment-148433347\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/796#issuecomment-148433347</a></p>\n\n<p>    Thanks for the feedback. The architecture will be flexible to allow pluggable code generation.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612610743/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612607480","html_url":"https://github.com/apache/storm/issues/4922#issuecomment-2612607480","issue_url":"https://api.github.com/repos/apache/storm/issues/4922","id":2612607480,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MDc0ODA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-15T16:09:40Z","updated_at":"2025-01-24T14:03:38Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/785#discussion_r42144647\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/785#discussion_r42144647</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/validation/ConfigValidation.java &#8212;<br/>\n    @@ -0,0 +1,570 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +<br/>\n    +package backtype.storm.validation;<br/>\n    +<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +import java.lang.annotation.Annotation;<br/>\n    +import java.lang.reflect.Field;<br/>\n    +import java.lang.reflect.InvocationTargetException;<br/>\n    +import java.lang.reflect.Method;<br/>\n    +import java.util.HashMap;<br/>\n    +import java.util.HashSet;<br/>\n    +import java.util.Map;<br/>\n    +<br/>\n    +/**<br/>\n    + * Provides functionality for validating configuration fields.<br/>\n    + */<br/>\n    +public class ConfigValidation {<br/>\n    +<br/>\n    +    private static final Class CONFIG_CLASS = backtype.storm.Config.class;<br/>\n    +<br/>\n    +    private static final Logger LOG = LoggerFactory.getLogger(ConfigValidation.class);<br/>\n    +<br/>\n    +    public static abstract class Validator {<br/>\n    +public Validator(Map<String, Object> params) {}<br/>\n    +public Validator() {}<br/>\n    +public abstract void validateField(String name, Object o) throws InstantiationException, IllegalAccessException;<br/>\n    +    }<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Validator definitions<br/>\n    +     */<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Validates if an object is not null<br/>\n    +     */<br/>\n    +<br/>\n    +    public static class NotNullValidator extends Validator {<br/>\n    +<br/>\n    +@Override<br/>\n    +public void validateField(String name, Object o) {<br/>\n    +    if (o == null) </p>\n{\n    +throw new IllegalArgumentException(\"Field \" + name + \"cannot be null! Actual value: \" + o);\n    +    }\n<p>    +}<br/>\n    +    }<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Validates basic types<br/>\n    +     */<br/>\n    +    public static class SimpleTypeValidator extends Validator {<br/>\n    +<br/>\n    +private Class type;<br/>\n    +<br/>\n    +public SimpleTypeValidator(Map<String, Object> params) </p>\n{\n    +    this.type = (Class) params.get(ConfigValidationAnnotations.ValidatorParams.TYPE);\n    +}\n<p>    +<br/>\n    +@Override<br/>\n    +public void validateField(String name, Object o) </p>\n{\n    +    validateField(name, this.type, o);\n    +}\n<p>    +<br/>\n    +public static void validateField(String name, Class type, Object o) {<br/>\n    +    if (o == null) </p>\n{\n    +return;\n    +    }<br/>\n    +    if (type.isInstance(o)) {    +return;    +    }\n<p>    +    throw new IllegalArgumentException(\"Field \" + name + \" must be of type \" + type + \". Object: \" + o + \" actual type: \" + o.getClass());<br/>\n    +}<br/>\n    +    }<br/>\n    +<br/>\n    +    public static class StringValidator extends Validator {<br/>\n    +<br/>\n    +@Override<br/>\n    +public void validateField(String name, Object o) </p>\n{\n    +    SimpleTypeValidator.validateField(name, String.class, o);\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    public static class BooleanValidator extends Validator {<br/>\n    +<br/>\n    +@Override<br/>\n    +public void validateField(String name, Object o) </p>\n{\n    +    SimpleTypeValidator.validateField(name, Boolean.class, o);\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    public static class NumberValidator extends Validator {<br/>\n    +<br/>\n    +@Override<br/>\n    +public void validateField(String name, Object o) </p>\n{\n    +    SimpleTypeValidator.validateField(name, Number.class, o);\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    public static class DoubleValidator extends Validator {<br/>\n    +<br/>\n    +@Override<br/>\n    +public void validateField(String name, Object o) </p>\n{\n    +    SimpleTypeValidator.validateField(name, Double.class, o);\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Validates a Integer.<br/>\n    +     */<br/>\n    +    public static class IntegerValidator extends Validator {<br/>\n    +<br/>\n    +@Override<br/>\n    +public void validateField(String name, Object o) </p>\n{\n    +    validateInteger(name, o);\n    +}\n<p>    +<br/>\n    +public void validateInteger(String name, Object o) {<br/>\n    +    if (o == null) </p>\n{\n    +return;\n    +    }<br/>\n    +    final long i;<br/>\n    +    if (o instanceof Number &&<br/>\n    +    (i = ((Number) o).longValue()) == ((Number) o).doubleValue()) {<br/>\n    +if (i <= Integer.MAX_VALUE && i >= Integer.MIN_VALUE) {\n    +    return;\n    +}<br/>\n    +    }<br/>\n    +    throw new IllegalArgumentException(\"Field \" + name + \" must be an Integer within type range.\");<br/>\n    +}<br/>\n    +    }<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Validates a map of Strings to a map of Strings to a list.<br/>\n    +     * {str -> {str -> [str,str]}<br/>\n    +     */<br/>\n    +    public static class ImpersonationAclValidator extends Validator {<br/>\n    +<br/>\n    +@Override<br/>\n    +public void validateField(String name, Object o) {<br/>\n    +    if (o == null) {    +return;    +    }\n<p>    +    ConfigValidationUtils.NestableFieldValidator validator = ConfigValidationUtils.mapFv(ConfigValidationUtils.fv(String.class, false),<br/>\n    +    ConfigValidationUtils.mapFv(ConfigValidationUtils.fv(String.class, false),<br/>\n    +    ConfigValidationUtils.listFv(String.class, false), false), true);<br/>\n    +    validator.validateField(name, o);<br/>\n    +}<br/>\n    +    }<br/>\n    +<br/>\n    +    /**<br/>\n    +     * validates a list of has no duplicates<br/>\n    +     */<br/>\n    +    public static class NoDuplicateInListValidator extends Validator {<br/>\n    +<br/>\n    +@Override<br/>\n    +public void validateField(String name, Object field) {<br/>\n    +    if (field == null) </p>\n{\n    +return;\n    +    }<br/>\n    +    //check if iterable<br/>\n    +    SimpleTypeValidator.validateField(name, Iterable.class, field);<br/>\n    +    HashSet<Object> objectSet = new HashSet<Object>();<br/>\n    +    for (Object o : (Iterable) field) {<br/>\n    +if (objectSet.contains(o)) {\n    +    throw new IllegalArgumentException(name + \" should contain no duplicate elements. Duplicated element: \" + o);\n    +}<br/>\n    +objectSet.add(o);<br/>\n    +    }<br/>\n    +}<br/>\n    +    }<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Validates a String or a list of Strings<br/>\n    +     */<br/>\n    +    public static class StringOrStringListValidator extends Validator {<br/>\n    +<br/>\n    +private ConfigValidationUtils.FieldValidator fv = ConfigValidationUtils.listFv(String.class, false);<br/>\n    +<br/>\n    +@Override<br/>\n    +public void validateField(String name, Object o) {<br/>\n    +<br/>\n    +    if (o == null) {    +return;    +    }\n<p>    +    if (o instanceof String) </p>\n{\n    +return;\n    +    }\n<p>    +    //check if iterable<br/>\n    +    try </p>\n{\n    +SimpleTypeValidator.validateField(name, Iterable.class, o);\n    +    }\n<p> catch (Exception ex) {<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Why are we ignoring the exception?</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612607480/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612607485","html_url":"https://github.com/apache/storm/issues/4922#issuecomment-2612607485","issue_url":"https://api.github.com/repos/apache/storm/issues/4922","id":2612607485,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MDc0ODU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-15T16:13:31Z","updated_at":"2025-01-24T14:03:38Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user jerrypeng commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/785#discussion_r42145138\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/785#discussion_r42145138</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/validation/ConfigValidation.java &#8212;<br/>\n    @@ -0,0 +1,570 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +<br/>\n    +package backtype.storm.validation;<br/>\n    +<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +import java.lang.annotation.Annotation;<br/>\n    +import java.lang.reflect.Field;<br/>\n    +import java.lang.reflect.InvocationTargetException;<br/>\n    +import java.lang.reflect.Method;<br/>\n    +import java.util.HashMap;<br/>\n    +import java.util.HashSet;<br/>\n    +import java.util.Map;<br/>\n    +<br/>\n    +/**<br/>\n    + * Provides functionality for validating configuration fields.<br/>\n    + */<br/>\n    +public class ConfigValidation {<br/>\n    +<br/>\n    +    private static final Class CONFIG_CLASS = backtype.storm.Config.class;<br/>\n    +<br/>\n    +    private static final Logger LOG = LoggerFactory.getLogger(ConfigValidation.class);<br/>\n    +<br/>\n    +    public static abstract class Validator {<br/>\n    +public Validator(Map<String, Object> params) {}<br/>\n    +public Validator() {}<br/>\n    +public abstract void validateField(String name, Object o) throws InstantiationException, IllegalAccessException;<br/>\n    +    }<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Validator definitions<br/>\n    +     */<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Validates if an object is not null<br/>\n    +     */<br/>\n    +<br/>\n    +    public static class NotNullValidator extends Validator {<br/>\n    +<br/>\n    +@Override<br/>\n    +public void validateField(String name, Object o) {<br/>\n    +    if (o == null) </p>\n{\n    +throw new IllegalArgumentException(\"Field \" + name + \"cannot be null! Actual value: \" + o);\n    +    }\n<p>    +}<br/>\n    +    }<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Validates basic types<br/>\n    +     */<br/>\n    +    public static class SimpleTypeValidator extends Validator {<br/>\n    +<br/>\n    +private Class type;<br/>\n    +<br/>\n    +public SimpleTypeValidator(Map<String, Object> params) </p>\n{\n    +    this.type = (Class) params.get(ConfigValidationAnnotations.ValidatorParams.TYPE);\n    +}\n<p>    +<br/>\n    +@Override<br/>\n    +public void validateField(String name, Object o) </p>\n{\n    +    validateField(name, this.type, o);\n    +}\n<p>    +<br/>\n    +public static void validateField(String name, Class type, Object o) {<br/>\n    +    if (o == null) </p>\n{\n    +return;\n    +    }<br/>\n    +    if (type.isInstance(o)) {    +return;    +    }\n<p>    +    throw new IllegalArgumentException(\"Field \" + name + \" must be of type \" + type + \". Object: \" + o + \" actual type: \" + o.getClass());<br/>\n    +}<br/>\n    +    }<br/>\n    +<br/>\n    +    public static class StringValidator extends Validator {<br/>\n    +<br/>\n    +@Override<br/>\n    +public void validateField(String name, Object o) </p>\n{\n    +    SimpleTypeValidator.validateField(name, String.class, o);\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    public static class BooleanValidator extends Validator {<br/>\n    +<br/>\n    +@Override<br/>\n    +public void validateField(String name, Object o) </p>\n{\n    +    SimpleTypeValidator.validateField(name, Boolean.class, o);\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    public static class NumberValidator extends Validator {<br/>\n    +<br/>\n    +@Override<br/>\n    +public void validateField(String name, Object o) </p>\n{\n    +    SimpleTypeValidator.validateField(name, Number.class, o);\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    public static class DoubleValidator extends Validator {<br/>\n    +<br/>\n    +@Override<br/>\n    +public void validateField(String name, Object o) </p>\n{\n    +    SimpleTypeValidator.validateField(name, Double.class, o);\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Validates a Integer.<br/>\n    +     */<br/>\n    +    public static class IntegerValidator extends Validator {<br/>\n    +<br/>\n    +@Override<br/>\n    +public void validateField(String name, Object o) </p>\n{\n    +    validateInteger(name, o);\n    +}\n<p>    +<br/>\n    +public void validateInteger(String name, Object o) {<br/>\n    +    if (o == null) </p>\n{\n    +return;\n    +    }<br/>\n    +    final long i;<br/>\n    +    if (o instanceof Number &&<br/>\n    +    (i = ((Number) o).longValue()) == ((Number) o).doubleValue()) {<br/>\n    +if (i <= Integer.MAX_VALUE && i >= Integer.MIN_VALUE) {\n    +    return;\n    +}<br/>\n    +    }<br/>\n    +    throw new IllegalArgumentException(\"Field \" + name + \" must be an Integer within type range.\");<br/>\n    +}<br/>\n    +    }<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Validates a map of Strings to a map of Strings to a list.<br/>\n    +     * {str -> {str -> [str,str]}<br/>\n    +     */<br/>\n    +    public static class ImpersonationAclValidator extends Validator {<br/>\n    +<br/>\n    +@Override<br/>\n    +public void validateField(String name, Object o) {<br/>\n    +    if (o == null) {    +return;    +    }\n<p>    +    ConfigValidationUtils.NestableFieldValidator validator = ConfigValidationUtils.mapFv(ConfigValidationUtils.fv(String.class, false),<br/>\n    +    ConfigValidationUtils.mapFv(ConfigValidationUtils.fv(String.class, false),<br/>\n    +    ConfigValidationUtils.listFv(String.class, false), false), true);<br/>\n    +    validator.validateField(name, o);<br/>\n    +}<br/>\n    +    }<br/>\n    +<br/>\n    +    /**<br/>\n    +     * validates a list of has no duplicates<br/>\n    +     */<br/>\n    +    public static class NoDuplicateInListValidator extends Validator {<br/>\n    +<br/>\n    +@Override<br/>\n    +public void validateField(String name, Object field) {<br/>\n    +    if (field == null) </p>\n{\n    +return;\n    +    }<br/>\n    +    //check if iterable<br/>\n    +    SimpleTypeValidator.validateField(name, Iterable.class, field);<br/>\n    +    HashSet<Object> objectSet = new HashSet<Object>();<br/>\n    +    for (Object o : (Iterable) field) {<br/>\n    +if (objectSet.contains(o)) {\n    +    throw new IllegalArgumentException(name + \" should contain no duplicate elements. Duplicated element: \" + o);\n    +}<br/>\n    +objectSet.add(o);<br/>\n    +    }<br/>\n    +}<br/>\n    +    }<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Validates a String or a list of Strings<br/>\n    +     */<br/>\n    +    public static class StringOrStringListValidator extends Validator {<br/>\n    +<br/>\n    +private ConfigValidationUtils.FieldValidator fv = ConfigValidationUtils.listFv(String.class, false);<br/>\n    +<br/>\n    +@Override<br/>\n    +public void validateField(String name, Object o) {<br/>\n    +<br/>\n    +    if (o == null) {    +return;    +    }\n<p>    +    if (o instanceof String) </p>\n{\n    +return;\n    +    }\n<p>    +    //check if iterable<br/>\n    +    try </p>\n{\n    +SimpleTypeValidator.validateField(name, Iterable.class, o);\n    +    }\n<p> catch (Exception ex) {<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    that is not suppose to be in there.  Not sure how the try catch statement got in there to begin with.  Will remove</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612607485/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/148441476","html_url":"https://github.com/apache/storm/pull/785#issuecomment-148441476","issue_url":"https://api.github.com/repos/apache/storm/issues/785","id":148441476,"node_id":"MDEyOklzc3VlQ29tbWVudDE0ODQ0MTQ3Ng==","user":{"login":"revans2","id":3441321,"node_id":"MDQ6VXNlcjM0NDEzMjE=","avatar_url":"https://avatars.githubusercontent.com/u/3441321?v=4","gravatar_id":"","url":"https://api.github.com/users/revans2","html_url":"https://github.com/revans2","followers_url":"https://api.github.com/users/revans2/followers","following_url":"https://api.github.com/users/revans2/following{/other_user}","gists_url":"https://api.github.com/users/revans2/gists{/gist_id}","starred_url":"https://api.github.com/users/revans2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/revans2/subscriptions","organizations_url":"https://api.github.com/users/revans2/orgs","repos_url":"https://api.github.com/users/revans2/repos","events_url":"https://api.github.com/users/revans2/events{/privacy}","received_events_url":"https://api.github.com/users/revans2/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-15T16:14:12Z","updated_at":"2015-10-15T16:14:12Z","author_association":"CONTRIBUTOR","body":"It looks really good. I am +1 for merging this in.  I have one question about checking that they type is iterable in one place, and then ignoring the error, to have the other code blow up if it is not iterable.  It should do the right thing, just the code is confusing and/or unnecessary.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/148441476/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612607488","html_url":"https://github.com/apache/storm/issues/4922#issuecomment-2612607488","issue_url":"https://api.github.com/repos/apache/storm/issues/4922","id":2612607488,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MDc0ODg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-15T16:14:13Z","updated_at":"2025-01-24T14:03:39Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/785#issuecomment-148441476\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/785#issuecomment-148441476</a></p>\n\n<p>    It looks really good. I am +1 for merging this in.  I have one question about checking that they type is iterable in one place, and then ignoring the error, to have the other code blow up if it is not iterable.  It should do the right thing, just the code is confusing and/or unnecessary.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612607488/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/148442586","html_url":"https://github.com/apache/storm/pull/785#issuecomment-148442586","issue_url":"https://api.github.com/repos/apache/storm/issues/785","id":148442586,"node_id":"MDEyOklzc3VlQ29tbWVudDE0ODQ0MjU4Ng==","user":{"login":"jerrypeng","id":3613359,"node_id":"MDQ6VXNlcjM2MTMzNTk=","avatar_url":"https://avatars.githubusercontent.com/u/3613359?v=4","gravatar_id":"","url":"https://api.github.com/users/jerrypeng","html_url":"https://github.com/jerrypeng","followers_url":"https://api.github.com/users/jerrypeng/followers","following_url":"https://api.github.com/users/jerrypeng/following{/other_user}","gists_url":"https://api.github.com/users/jerrypeng/gists{/gist_id}","starred_url":"https://api.github.com/users/jerrypeng/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jerrypeng/subscriptions","organizations_url":"https://api.github.com/users/jerrypeng/orgs","repos_url":"https://api.github.com/users/jerrypeng/repos","events_url":"https://api.github.com/users/jerrypeng/events{/privacy}","received_events_url":"https://api.github.com/users/jerrypeng/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-15T16:18:47Z","updated_at":"2015-10-15T16:18:47Z","author_association":"CONTRIBUTOR","body":"@revans2 Thanks! You are right that piece of code involving the try catch statement is useless. I have removed it\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/148442586/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612607492","html_url":"https://github.com/apache/storm/issues/4922#issuecomment-2612607492","issue_url":"https://api.github.com/repos/apache/storm/issues/4922","id":2612607492,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MDc0OTI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-15T16:18:49Z","updated_at":"2025-01-24T14:03:39Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user jerrypeng commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/785#issuecomment-148442586\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/785#issuecomment-148442586</a></p>\n\n<p>    @revans2 Thanks! You are right that piece of code involving the try catch statement is useless. I have removed it</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612607492/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/148442889","html_url":"https://github.com/apache/storm/pull/785#issuecomment-148442889","issue_url":"https://api.github.com/repos/apache/storm/issues/785","id":148442889,"node_id":"MDEyOklzc3VlQ29tbWVudDE0ODQ0Mjg4OQ==","user":{"login":"revans2","id":3441321,"node_id":"MDQ6VXNlcjM0NDEzMjE=","avatar_url":"https://avatars.githubusercontent.com/u/3441321?v=4","gravatar_id":"","url":"https://api.github.com/users/revans2","html_url":"https://github.com/revans2","followers_url":"https://api.github.com/users/revans2/followers","following_url":"https://api.github.com/users/revans2/following{/other_user}","gists_url":"https://api.github.com/users/revans2/gists{/gist_id}","starred_url":"https://api.github.com/users/revans2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/revans2/subscriptions","organizations_url":"https://api.github.com/users/revans2/orgs","repos_url":"https://api.github.com/users/revans2/repos","events_url":"https://api.github.com/users/revans2/events{/privacy}","received_events_url":"https://api.github.com/users/revans2/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-15T16:20:13Z","updated_at":"2015-10-15T16:20:23Z","author_association":"CONTRIBUTOR","body":"I am +1 pending no related CI failures.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/148442889/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612607498","html_url":"https://github.com/apache/storm/issues/4922#issuecomment-2612607498","issue_url":"https://api.github.com/repos/apache/storm/issues/4922","id":2612607498,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MDc0OTg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-15T16:20:16Z","updated_at":"2025-01-24T14:03:39Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/785#issuecomment-148442889\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/785#issuecomment-148442889</a></p>\n\n<p>    I am +1 pending not related CI failures.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612607498/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/148443572","html_url":"https://github.com/apache/storm/pull/792#issuecomment-148443572","issue_url":"https://api.github.com/repos/apache/storm/issues/792","id":148443572,"node_id":"MDEyOklzc3VlQ29tbWVudDE0ODQ0MzU3Mg==","user":{"login":"revans2","id":3441321,"node_id":"MDQ6VXNlcjM0NDEzMjE=","avatar_url":"https://avatars.githubusercontent.com/u/3441321?v=4","gravatar_id":"","url":"https://api.github.com/users/revans2","html_url":"https://github.com/revans2","followers_url":"https://api.github.com/users/revans2/followers","following_url":"https://api.github.com/users/revans2/following{/other_user}","gists_url":"https://api.github.com/users/revans2/gists{/gist_id}","starred_url":"https://api.github.com/users/revans2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/revans2/subscriptions","organizations_url":"https://api.github.com/users/revans2/orgs","repos_url":"https://api.github.com/users/revans2/repos","events_url":"https://api.github.com/users/revans2/events{/privacy}","received_events_url":"https://api.github.com/users/revans2/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-15T16:22:57Z","updated_at":"2015-10-15T16:22:57Z","author_association":"CONTRIBUTOR","body":"+1\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/148443572/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612610332","html_url":"https://github.com/apache/storm/issues/4940#issuecomment-2612610332","issue_url":"https://api.github.com/repos/apache/storm/issues/4940","id":2612610332,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MTAzMzI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-15T16:22:59Z","updated_at":"2025-01-24T14:04:55Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/792#issuecomment-148443572\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/792#issuecomment-148443572</a></p>\n\n<p>    +1</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612610332/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612607506","html_url":"https://github.com/apache/storm/issues/4922#issuecomment-2612607506","issue_url":"https://api.github.com/repos/apache/storm/issues/4922","id":2612607506,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MDc1MDY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-15T16:40:22Z","updated_at":"2025-01-24T14:03:39Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user d2r commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/785#discussion_r42148413\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/785#discussion_r42148413</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/validation/ConfigValidation.java &#8212;<br/>\n    @@ -0,0 +1,518 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +<br/>\n    +package backtype.storm.validation;<br/>\n    +<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +import java.lang.annotation.Annotation;<br/>\n    +import java.lang.reflect.Field;<br/>\n    +import java.lang.reflect.InvocationTargetException;<br/>\n    +import java.util.HashSet;<br/>\n    +import java.util.Map;<br/>\n    +<br/>\n    +/**<br/>\n    + * Provides functionality for validating configuration fields.<br/>\n    + */<br/>\n    +public class ConfigValidation {<br/>\n    +<br/>\n    +    private static final Class CONFIG_CLASS = backtype.storm.Config.class;<br/>\n    +<br/>\n    +    private static final Logger LOG = LoggerFactory.getLogger(ConfigValidation.class);<br/>\n    +<br/>\n    +    public static abstract class Validator </p>\n{\n    +public abstract void validateField(String name, Object o);\n    +    }\n<p>    +<br/>\n    +    public abstract static class TypeValidator </p>\n{\n    +public abstract void validateField(String name, Class type, Object o);\n    +    }\n<p>    +<br/>\n    +    /**<br/>\n    +     * Validator definitions<br/>\n    +     */<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Validates if an object is not null<br/>\n    +     */<br/>\n    +<br/>\n    +    public static class NotNullValidator extends Validator {<br/>\n    +<br/>\n    +@Override<br/>\n    +public void validateField(String name, Object o) {<br/>\n    +    if (o == null) </p>\n{\n    +throw new IllegalArgumentException(\"Field \" + name + \"cannot be null! Actual value: \" + o);\n    +    }\n<p>    +}<br/>\n    +    }<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Validates basic types<br/>\n    +     */<br/>\n    +    public static class SimpleTypeValidator extends TypeValidator {<br/>\n    +<br/>\n    +public void validateField(String name, Class type, Object o) {<br/>\n    +    if (o == null) </p>\n{\n    +return;\n    +    }<br/>\n    +    if (type.isInstance(o)) {    +return;    +    }\n<p>    +    throw new IllegalArgumentException(\"Field \" + name + \" must be of type \" + type + \". Object: \" + o + \" actual type: \" + o.getClass());<br/>\n    +}<br/>\n    +    }<br/>\n    +<br/>\n    +    public static class StringValidator extends Validator {<br/>\n    +<br/>\n    +@Override<br/>\n    +public void validateField(String name, Object o) </p>\n{\n    +    SimpleTypeValidator validator = new SimpleTypeValidator();\n    +    validator.validateField(name, String.class, o);\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    public static class BooleanValidator extends Validator {<br/>\n    +<br/>\n    +@Override<br/>\n    +public void validateField(String name, Object o) </p>\n{\n    +    SimpleTypeValidator validator = new SimpleTypeValidator();\n    +    validator.validateField(name, Boolean.class, o);\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    public static class NumberValidator extends Validator {<br/>\n    +<br/>\n    +@Override<br/>\n    +public void validateField(String name, Object o) </p>\n{\n    +    SimpleTypeValidator validator = new SimpleTypeValidator();\n    +    validator.validateField(name, Number.class, o);\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    public static class DoubleValidator extends Validator {<br/>\n    +<br/>\n    +@Override<br/>\n    +public void validateField(String name, Object o) </p>\n{\n    +    SimpleTypeValidator validator = new SimpleTypeValidator();\n    +    validator.validateField(name, Double.class, o);\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Validates a Integer.<br/>\n    +     */<br/>\n    +    public static class IntegerValidator extends Validator {<br/>\n    +<br/>\n    +@Override<br/>\n    +public void validateField(String name, Object o) </p>\n{\n    +    validateInteger(name, o);\n    +}\n<p>    +<br/>\n    +public void validateInteger(String name, Object o) {<br/>\n    +    if (o == null) </p>\n{\n    +return;\n    +    }<br/>\n    +    final long i;<br/>\n    +    if (o instanceof Number &&<br/>\n    +    (i = ((Number) o).longValue()) == ((Number) o).doubleValue()) {<br/>\n    +if (i <= Integer.MAX_VALUE && i >= Integer.MIN_VALUE) {\n    +    return;\n    +}<br/>\n    +    }<br/>\n    +    throw new IllegalArgumentException(\"Field \" + name + \" must be an Integer within type range.\");<br/>\n    +}<br/>\n    +    }<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Validates a map of Strings to a map of Strings to a list.<br/>\n    +     * {str -> {str -> [str,str]}<br/>\n    +     */<br/>\n    +    public static class MapOfStringToMapValidator extends Validator {<br/>\n    +<br/>\n    +@Override<br/>\n    +public void validateField(String name, Object o) {<br/>\n    +    if (o == null) {    +return;    +    }\n<p>    +    ConfigValidationUtils.NestableFieldValidator validator = ConfigValidationUtils.mapFv(ConfigValidationUtils.fv(String.class, false),<br/>\n    +    ConfigValidationUtils.mapFv(ConfigValidationUtils.fv(String.class, false),<br/>\n    +    ConfigValidationUtils.listFv(String.class, false), false), true);<br/>\n    +    validator.validateField(name, o);<br/>\n    +}<br/>\n    +    }<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Looks good to me.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612607506/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612607511","html_url":"https://github.com/apache/storm/issues/4922#issuecomment-2612607511","issue_url":"https://api.github.com/repos/apache/storm/issues/4922","id":2612607511,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MDc1MTE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-15T16:41:00Z","updated_at":"2025-01-24T14:03:39Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user d2r commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/785#discussion_r42148487\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/785#discussion_r42148487</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/validation/ConfigValidation.java &#8212;<br/>\n    @@ -0,0 +1,518 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +<br/>\n    +package backtype.storm.validation;<br/>\n    +<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +import java.lang.annotation.Annotation;<br/>\n    +import java.lang.reflect.Field;<br/>\n    +import java.lang.reflect.InvocationTargetException;<br/>\n    +import java.util.HashSet;<br/>\n    +import java.util.Map;<br/>\n    +<br/>\n    +/**<br/>\n    + * Provides functionality for validating configuration fields.<br/>\n    + */<br/>\n    +public class ConfigValidation {<br/>\n    +<br/>\n    +    private static final Class CONFIG_CLASS = backtype.storm.Config.class;<br/>\n    +<br/>\n    +    private static final Logger LOG = LoggerFactory.getLogger(ConfigValidation.class);<br/>\n    +<br/>\n    +    public static abstract class Validator </p>\n{\n    +public abstract void validateField(String name, Object o);\n    +    }\n<p>    +<br/>\n    +    public abstract static class TypeValidator </p>\n{\n    +public abstract void validateField(String name, Class type, Object o);\n    +    }\n<p>    +<br/>\n    +    /**<br/>\n    +     * Validator definitions<br/>\n    +     */<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Validates if an object is not null<br/>\n    +     */<br/>\n    +<br/>\n    +    public static class NotNullValidator extends Validator {<br/>\n    +<br/>\n    +@Override<br/>\n    +public void validateField(String name, Object o) {<br/>\n    +    if (o == null) </p>\n{\n    +throw new IllegalArgumentException(\"Field \" + name + \"cannot be null! Actual value: \" + o);\n    +    }\n<p>    +}<br/>\n    +    }<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Validates basic types<br/>\n    +     */<br/>\n    +    public static class SimpleTypeValidator extends TypeValidator {<br/>\n    +<br/>\n    +public void validateField(String name, Class type, Object o) {<br/>\n    +    if (o == null) </p>\n{\n    +return;\n    +    }<br/>\n    +    if (type.isInstance(o)) {    +return;    +    }\n<p>    +    throw new IllegalArgumentException(\"Field \" + name + \" must be of type \" + type + \". Object: \" + o + \" actual type: \" + o.getClass());<br/>\n    +}<br/>\n    +    }<br/>\n    +<br/>\n    +    public static class StringValidator extends Validator {<br/>\n    +<br/>\n    +@Override<br/>\n    +public void validateField(String name, Object o) </p>\n{\n    +    SimpleTypeValidator validator = new SimpleTypeValidator();\n    +    validator.validateField(name, String.class, o);\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    public static class BooleanValidator extends Validator {<br/>\n    +<br/>\n    +@Override<br/>\n    +public void validateField(String name, Object o) </p>\n{\n    +    SimpleTypeValidator validator = new SimpleTypeValidator();\n    +    validator.validateField(name, Boolean.class, o);\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    public static class NumberValidator extends Validator {<br/>\n    +<br/>\n    +@Override<br/>\n    +public void validateField(String name, Object o) </p>\n{\n    +    SimpleTypeValidator validator = new SimpleTypeValidator();\n    +    validator.validateField(name, Number.class, o);\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    public static class DoubleValidator extends Validator {<br/>\n    +<br/>\n    +@Override<br/>\n    +public void validateField(String name, Object o) </p>\n{\n    +    SimpleTypeValidator validator = new SimpleTypeValidator();\n    +    validator.validateField(name, Double.class, o);\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Validates a Integer.<br/>\n    +     */<br/>\n    +    public static class IntegerValidator extends Validator {<br/>\n    +<br/>\n    +@Override<br/>\n    +public void validateField(String name, Object o) </p>\n{\n    +    validateInteger(name, o);\n    +}\n<p>    +<br/>\n    +public void validateInteger(String name, Object o) {<br/>\n    +    if (o == null) </p>\n{\n    +return;\n    +    }<br/>\n    +    final long i;<br/>\n    +    if (o instanceof Number &&<br/>\n    +    (i = ((Number) o).longValue()) == ((Number) o).doubleValue()) {<br/>\n    +if (i <= Integer.MAX_VALUE && i >= Integer.MIN_VALUE) {\n    +    return;\n    +}<br/>\n    +    }<br/>\n    +    throw new IllegalArgumentException(\"Field \" + name + \" must be an Integer within type range.\");<br/>\n    +}<br/>\n    +    }<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Validates a map of Strings to a map of Strings to a list.<br/>\n    +     * {str -> {str -> [str,str]}<br/>\n    +     */<br/>\n    +    public static class MapOfStringToMapValidator extends Validator {<br/>\n    +<br/>\n    +@Override<br/>\n    +public void validateField(String name, Object o) {<br/>\n    +    if (o == null) {    +return;    +    }\n<p>    +    ConfigValidationUtils.NestableFieldValidator validator = ConfigValidationUtils.mapFv(ConfigValidationUtils.fv(String.class, false),<br/>\n    +    ConfigValidationUtils.mapFv(ConfigValidationUtils.fv(String.class, false),<br/>\n    +    ConfigValidationUtils.listFv(String.class, false), false), true);<br/>\n    +    validator.validateField(name, o);<br/>\n    +}<br/>\n    +    }<br/>\n    +<br/>\n    +    /**<br/>\n    +     * validates a list of has no dupicates<br/>\n    +     */<br/>\n    +    public static class NoDuplicateInListValidator extends Validator {<br/>\n    +<br/>\n    +@Override<br/>\n    +public void validateField(String name, Object field) {<br/>\n    +    if (field == null) </p>\n{\n    +return;\n    +    }<br/>\n    +    //check if iterable<br/>\n    +    SimpleTypeValidator isIterable = new SimpleTypeValidator();<br/>\n    +    isIterable.validateField(name, Iterable.class, field);<br/>\n    +    HashSet<Object> objectSet = new HashSet<Object>();<br/>\n    +    for (Object o : (Iterable) field) {<br/>\n    +if (objectSet.contains(o)) {\n    +    throw new IllegalArgumentException(name + \" should contain no duplicate elements\");\n    +}<br/>\n    +objectSet.add(o);<br/>\n    +    }<br/>\n    +}<br/>\n    +    }<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Validates a String or a list of Strings<br/>\n    +     */<br/>\n    +    public static class StringOrStringListValidator extends Validator {<br/>\n    +<br/>\n    +private ConfigValidationUtils.FieldValidator fv = ConfigValidationUtils.listFv(String.class, false);<br/>\n    +<br/>\n    +@Override<br/>\n    +public void validateField(String name, Object o) {<br/>\n    +<br/>\n    +    if (o == null) {    +return;    +    }\n<p>    +    if (o instanceof String) </p>\n{\n    +return;\n    +    }<br/>\n    +    //check if iterable<br/>\n    +    SimpleTypeValidator isIterable = new SimpleTypeValidator();<br/>\n    +    try {\n    +isIterable.validateField(name, Iterable.class, o);\n    +    } catch (Exception ex) {\n    +    }<br/>\n    +    this.fv.validateField(name, o);<br/>\n    +}<br/>\n    +    }<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Validates Kryo Registration<br/>\n    +     */<br/>\n    +    public static class KryoRegValidator extends Validator {<br/>\n    +<br/>\n    +@Override<br/>\n    +public void validateField(String name, Object o) {<br/>\n    +    if (o == null) {    +return;    +    }\n<p>    +    if (o instanceof Iterable) {<br/>\n    +for (Object e : (Iterable) o) {<br/>\n    +    if (e instanceof Map) {<br/>\n    +for (Map.Entry<Object, Object> entry : ((Map<Object, Object>) e).entrySet()) {<br/>\n    +    if (!(entry.getKey() instanceof String) ||<br/>\n    +    !(entry.getValue() instanceof String)) </p>\n{\n    +throw new IllegalArgumentException(\n    +\"Each element of the list \" + name + \" must be a String or a Map of Strings\");\n    +    }\n<p>    +}<br/>\n    +    } else if (!(e instanceof String)) </p>\n{\n    +throw new IllegalArgumentException(\n    +\"Each element of the list \" + name + \" must be a String or a Map of Strings\");\n    +    }\n<p>    +}<br/>\n    +return;<br/>\n    +    }<br/>\n    +    throw new IllegalArgumentException(<br/>\n    +    \"Field \" + name + \" must be an Iterable containing only Strings or Maps of Strings\");<br/>\n    +}<br/>\n    +    }<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Validates if a number is a power of 2<br/>\n    +     */<br/>\n    +    public static class PowerOf2Validator extends Validator {<br/>\n    +<br/>\n    +@Override<br/>\n    +public void validateField(String name, Object o) {<br/>\n    +    if (o == null) </p>\n{\n    +return;\n    +    }<br/>\n    +    final long i;<br/>\n    +    if (o instanceof Number &&<br/>\n    +    (i = ((Number) o).longValue()) == ((Number) o).doubleValue()) {<br/>\n    +// Test whether the integer is a power of 2.<br/>\n    +if (i > 0 && (i & (i - 1)) == 0) {\n    +    return;\n    +}<br/>\n    +    }<br/>\n    +    throw new IllegalArgumentException(\"Field \" + name + \" must be a power of 2.\");<br/>\n    +}<br/>\n    +    }<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Validates each entry in a list<br/>\n    +     */<br/>\n    +    public static class ListEntryTypeValidator extends TypeValidator {<br/>\n    +<br/>\n    +@Override<br/>\n    +public void validateField(String name, Class type, Object o) {\n    +    ConfigValidationUtils.NestableFieldValidator validator = ConfigValidationUtils.listFv(type, false);\n    +    validator.validateField(name, o);\n    +}<br/>\n    +    }<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Validates entry in the a list with a list of custom validator<br/>\n    +     */<br/>\n    +    public static class ListEntryCustomValidator {<br/>\n    +<br/>\n    +public void validateField(String name, Class[] validators, Object o) throws IllegalAccessException, InstantiationException {<br/>\n    +    if (o == null) {    +return;    +    }\n<p>    +    //check if iterable<br/>\n    +    SimpleTypeValidator isIterable = new SimpleTypeValidator();<br/>\n    +    isIterable.validateField(name, Iterable.class, o);<br/>\n    +    for (Object entry : (Iterable) o) {<br/>\n    +for (Class validator : validators) {<br/>\n    +    Object v = validator.newInstance();<br/>\n    +    if (v instanceof Validator) </p>\n{\n    +((Validator) v).validateField(name + \" list entry\", entry);\n    +    }\n<p> else {<br/>\n    +LOG.warn(\"validator: {} cannot be used in ListEntryCustomValidator.  Individual entry validators must a instance of Validator class\", validator.getName());<br/>\n    +    }<br/>\n    +}<br/>\n    +    }<br/>\n    +<br/>\n    +}<br/>\n    +    }<br/>\n    +<br/>\n    +    /**<br/>\n    +     * validates each key and value in a map of a certain type<br/>\n    +     */<br/>\n    +    public static class MapEntryTypeValidator {<br/>\n    +<br/>\n    +public void validateField(String name, Class keyType, Class valueType, Object o) </p>\n{\n    +    ConfigValidationUtils.NestableFieldValidator validator = ConfigValidationUtils.mapFv(keyType, valueType, false);\n    +    validator.validateField(name, o);\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    public static class MapEntryCustomValidator {<br/>\n    +<br/>\n    +public void validateField(String name, Class[] keyValidators, Class[] valueValidators, Object o) throws IllegalAccessException, InstantiationException {<br/>\n    +    if (o == null) </p>\n{\n    +return;\n    +    }\n<p>    +    //check if Map<br/>\n    +    SimpleTypeValidator isMap = new SimpleTypeValidator();<br/>\n    +    isMap.validateField(name, Map.class, o);<br/>\n    +    for (Map.Entry<Object, Object> entry : ((Map<Object, Object>) o).entrySet()) {<br/>\n    +for (Class kv : keyValidators) {<br/>\n    +    Object keyValidator = kv.newInstance();<br/>\n    +    if (keyValidator instanceof Validator) </p>\n{\n    +((Validator) keyValidator).validateField(name + \" Map key\", entry.getKey());\n    +    }\n<p> else {<br/>\n    +LOG.warn(\"validator: {} cannot be used in MapEntryCustomValidator to validate keys.  Individual entry validators must a instance of Validator class\", kv.getName());<br/>\n    +    }<br/>\n    +}<br/>\n    +for (Class vv : valueValidators) {<br/>\n    +    Object valueValidator = vv.newInstance();<br/>\n    +    if (valueValidator instanceof Validator) </p>\n{\n    +((Validator) valueValidator).validateField(name + \" Map value\", entry.getValue());\n    +    }\n<p> else {<br/>\n    +LOG.warn(\"validator: {} cannot be used in MapEntryCustomValidator to validate values.  Individual entry validators must a instance of Validator class\", vv.getName());<br/>\n    +    }<br/>\n    +}<br/>\n    +    }<br/>\n    +}<br/>\n    +    }<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Looks good.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612607511/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612607520","html_url":"https://github.com/apache/storm/issues/4922#issuecomment-2612607520","issue_url":"https://api.github.com/repos/apache/storm/issues/4922","id":2612607520,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MDc1MjA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-15T16:41:36Z","updated_at":"2025-01-24T14:03:39Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user d2r commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/785#discussion_r42148564\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/785#discussion_r42148564</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/validation/ConfigValidation.java &#8212;<br/>\n    @@ -0,0 +1,518 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +<br/>\n    +package backtype.storm.validation;<br/>\n    +<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +import java.lang.annotation.Annotation;<br/>\n    +import java.lang.reflect.Field;<br/>\n    +import java.lang.reflect.InvocationTargetException;<br/>\n    +import java.util.HashSet;<br/>\n    +import java.util.Map;<br/>\n    +<br/>\n    +/**<br/>\n    + * Provides functionality for validating configuration fields.<br/>\n    + */<br/>\n    +public class ConfigValidation {<br/>\n    +<br/>\n    +    private static final Class CONFIG_CLASS = backtype.storm.Config.class;<br/>\n    +<br/>\n    +    private static final Logger LOG = LoggerFactory.getLogger(ConfigValidation.class);<br/>\n    +<br/>\n    +    public static abstract class Validator </p>\n{\n    +public abstract void validateField(String name, Object o);\n    +    }\n<p>    +<br/>\n    +    public abstract static class TypeValidator </p>\n{\n    +public abstract void validateField(String name, Class type, Object o);\n    +    }\n<p>    +<br/>\n    +    /**<br/>\n    +     * Validator definitions<br/>\n    +     */<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Validates if an object is not null<br/>\n    +     */<br/>\n    +<br/>\n    +    public static class NotNullValidator extends Validator {<br/>\n    +<br/>\n    +@Override<br/>\n    +public void validateField(String name, Object o) {<br/>\n    +    if (o == null) </p>\n{\n    +throw new IllegalArgumentException(\"Field \" + name + \"cannot be null! Actual value: \" + o);\n    +    }\n<p>    +}<br/>\n    +    }<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Validates basic types<br/>\n    +     */<br/>\n    +    public static class SimpleTypeValidator extends TypeValidator {<br/>\n    +<br/>\n    +public void validateField(String name, Class type, Object o) {<br/>\n    +    if (o == null) </p>\n{\n    +return;\n    +    }<br/>\n    +    if (type.isInstance(o)) {    +return;    +    }\n<p>    +    throw new IllegalArgumentException(\"Field \" + name + \" must be of type \" + type + \". Object: \" + o + \" actual type: \" + o.getClass());<br/>\n    +}<br/>\n    +    }<br/>\n    +<br/>\n    +    public static class StringValidator extends Validator {<br/>\n    +<br/>\n    +@Override<br/>\n    +public void validateField(String name, Object o) </p>\n{\n    +    SimpleTypeValidator validator = new SimpleTypeValidator();\n    +    validator.validateField(name, String.class, o);\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    public static class BooleanValidator extends Validator {<br/>\n    +<br/>\n    +@Override<br/>\n    +public void validateField(String name, Object o) </p>\n{\n    +    SimpleTypeValidator validator = new SimpleTypeValidator();\n    +    validator.validateField(name, Boolean.class, o);\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    public static class NumberValidator extends Validator {<br/>\n    +<br/>\n    +@Override<br/>\n    +public void validateField(String name, Object o) </p>\n{\n    +    SimpleTypeValidator validator = new SimpleTypeValidator();\n    +    validator.validateField(name, Number.class, o);\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    public static class DoubleValidator extends Validator {<br/>\n    +<br/>\n    +@Override<br/>\n    +public void validateField(String name, Object o) </p>\n{\n    +    SimpleTypeValidator validator = new SimpleTypeValidator();\n    +    validator.validateField(name, Double.class, o);\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Validates a Integer.<br/>\n    +     */<br/>\n    +    public static class IntegerValidator extends Validator {<br/>\n    +<br/>\n    +@Override<br/>\n    +public void validateField(String name, Object o) </p>\n{\n    +    validateInteger(name, o);\n    +}\n<p>    +<br/>\n    +public void validateInteger(String name, Object o) {<br/>\n    +    if (o == null) </p>\n{\n    +return;\n    +    }<br/>\n    +    final long i;<br/>\n    +    if (o instanceof Number &&<br/>\n    +    (i = ((Number) o).longValue()) == ((Number) o).doubleValue()) {<br/>\n    +if (i <= Integer.MAX_VALUE && i >= Integer.MIN_VALUE) {\n    +    return;\n    +}<br/>\n    +    }<br/>\n    +    throw new IllegalArgumentException(\"Field \" + name + \" must be an Integer within type range.\");<br/>\n    +}<br/>\n    +    }<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Validates a map of Strings to a map of Strings to a list.<br/>\n    +     * {str -> {str -> [str,str]}<br/>\n    +     */<br/>\n    +    public static class MapOfStringToMapValidator extends Validator {<br/>\n    +<br/>\n    +@Override<br/>\n    +public void validateField(String name, Object o) {<br/>\n    +    if (o == null) {    +return;    +    }\n<p>    +    ConfigValidationUtils.NestableFieldValidator validator = ConfigValidationUtils.mapFv(ConfigValidationUtils.fv(String.class, false),<br/>\n    +    ConfigValidationUtils.mapFv(ConfigValidationUtils.fv(String.class, false),<br/>\n    +    ConfigValidationUtils.listFv(String.class, false), false), true);<br/>\n    +    validator.validateField(name, o);<br/>\n    +}<br/>\n    +    }<br/>\n    +<br/>\n    +    /**<br/>\n    +     * validates a list of has no dupicates<br/>\n    +     */<br/>\n    +    public static class NoDuplicateInListValidator extends Validator {<br/>\n    +<br/>\n    +@Override<br/>\n    +public void validateField(String name, Object field) {<br/>\n    +    if (field == null) </p>\n{\n    +return;\n    +    }<br/>\n    +    //check if iterable<br/>\n    +    SimpleTypeValidator isIterable = new SimpleTypeValidator();<br/>\n    +    isIterable.validateField(name, Iterable.class, field);<br/>\n    +    HashSet<Object> objectSet = new HashSet<Object>();<br/>\n    +    for (Object o : (Iterable) field) {<br/>\n    +if (objectSet.contains(o)) {\n    +    throw new IllegalArgumentException(name + \" should contain no duplicate elements\");\n    +}<br/>\n    +objectSet.add(o);<br/>\n    +    }<br/>\n    +}<br/>\n    +    }<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Validates a String or a list of Strings<br/>\n    +     */<br/>\n    +    public static class StringOrStringListValidator extends Validator {<br/>\n    +<br/>\n    +private ConfigValidationUtils.FieldValidator fv = ConfigValidationUtils.listFv(String.class, false);<br/>\n    +<br/>\n    +@Override<br/>\n    +public void validateField(String name, Object o) {<br/>\n    +<br/>\n    +    if (o == null) {    +return;    +    }\n<p>    +    if (o instanceof String) </p>\n{\n    +return;\n    +    }<br/>\n    +    //check if iterable<br/>\n    +    SimpleTypeValidator isIterable = new SimpleTypeValidator();<br/>\n    +    try {\n    +isIterable.validateField(name, Iterable.class, o);\n    +    } catch (Exception ex) {\n    +    }<br/>\n    +    this.fv.validateField(name, o);<br/>\n    +}<br/>\n    +    }<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Validates Kryo Registration<br/>\n    +     */<br/>\n    +    public static class KryoRegValidator extends Validator {<br/>\n    +<br/>\n    +@Override<br/>\n    +public void validateField(String name, Object o) {<br/>\n    +    if (o == null) {    +return;    +    }\n<p>    +    if (o instanceof Iterable) {<br/>\n    +for (Object e : (Iterable) o) {<br/>\n    +    if (e instanceof Map) {<br/>\n    +for (Map.Entry<Object, Object> entry : ((Map<Object, Object>) e).entrySet()) {<br/>\n    +    if (!(entry.getKey() instanceof String) ||<br/>\n    +    !(entry.getValue() instanceof String)) </p>\n{\n    +throw new IllegalArgumentException(\n    +\"Each element of the list \" + name + \" must be a String or a Map of Strings\");\n    +    }\n<p>    +}<br/>\n    +    } else if (!(e instanceof String)) </p>\n{\n    +throw new IllegalArgumentException(\n    +\"Each element of the list \" + name + \" must be a String or a Map of Strings\");\n    +    }\n<p>    +}<br/>\n    +return;<br/>\n    +    }<br/>\n    +    throw new IllegalArgumentException(<br/>\n    +    \"Field \" + name + \" must be an Iterable containing only Strings or Maps of Strings\");<br/>\n    +}<br/>\n    +    }<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Validates if a number is a power of 2<br/>\n    +     */<br/>\n    +    public static class PowerOf2Validator extends Validator {<br/>\n    +<br/>\n    +@Override<br/>\n    +public void validateField(String name, Object o) {<br/>\n    +    if (o == null) </p>\n{\n    +return;\n    +    }<br/>\n    +    final long i;<br/>\n    +    if (o instanceof Number &&<br/>\n    +    (i = ((Number) o).longValue()) == ((Number) o).doubleValue()) {<br/>\n    +// Test whether the integer is a power of 2.<br/>\n    +if (i > 0 && (i & (i - 1)) == 0) {\n    +    return;\n    +}<br/>\n    +    }<br/>\n    +    throw new IllegalArgumentException(\"Field \" + name + \" must be a power of 2.\");<br/>\n    +}<br/>\n    +    }<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Validates each entry in a list<br/>\n    +     */<br/>\n    +    public static class ListEntryTypeValidator extends TypeValidator {<br/>\n    +<br/>\n    +@Override<br/>\n    +public void validateField(String name, Class type, Object o) {\n    +    ConfigValidationUtils.NestableFieldValidator validator = ConfigValidationUtils.listFv(type, false);\n    +    validator.validateField(name, o);\n    +}<br/>\n    +    }<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Validates entry in the a list with a list of custom validator<br/>\n    +     */<br/>\n    +    public static class ListEntryCustomValidator {<br/>\n    +<br/>\n    +public void validateField(String name, Class[] validators, Object o) throws IllegalAccessException, InstantiationException {<br/>\n    +    if (o == null) {    +return;    +    }\n<p>    +    //check if iterable<br/>\n    +    SimpleTypeValidator isIterable = new SimpleTypeValidator();<br/>\n    +    isIterable.validateField(name, Iterable.class, o);<br/>\n    +    for (Object entry : (Iterable) o) {<br/>\n    +for (Class validator : validators) {<br/>\n    +    Object v = validator.newInstance();<br/>\n    +    if (v instanceof Validator) </p>\n{\n    +((Validator) v).validateField(name + \" list entry\", entry);\n    +    }\n<p> else {<br/>\n    +LOG.warn(\"validator: {} cannot be used in ListEntryCustomValidator.  Individual entry validators must a instance of Validator class\", validator.getName());<br/>\n    +    }<br/>\n    +}<br/>\n    +    }<br/>\n    +<br/>\n    +}<br/>\n    +    }<br/>\n    +<br/>\n    +    /**<br/>\n    +     * validates each key and value in a map of a certain type<br/>\n    +     */<br/>\n    +    public static class MapEntryTypeValidator {<br/>\n    +<br/>\n    +public void validateField(String name, Class keyType, Class valueType, Object o) </p>\n{\n    +    ConfigValidationUtils.NestableFieldValidator validator = ConfigValidationUtils.mapFv(keyType, valueType, false);\n    +    validator.validateField(name, o);\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    public static class MapEntryCustomValidator {<br/>\n    +<br/>\n    +public void validateField(String name, Class[] keyValidators, Class[] valueValidators, Object o) throws IllegalAccessException, InstantiationException {<br/>\n    +    if (o == null) </p>\n{\n    +return;\n    +    }<br/>\n    +    //check if Map<br/>\n    +    SimpleTypeValidator isMap = new SimpleTypeValidator();<br/>\n    +    isMap.validateField(name, Map.class, o);<br/>\n    +    for (Map.Entry<Object, Object> entry : ((Map<Object, Object>) o).entrySet()) {<br/>\n    +for (Class kv : keyValidators) {<br/>\n    +    Object keyValidator = kv.newInstance();<br/>\n    +    if (keyValidator instanceof Validator) {\n    +((Validator) keyValidator).validateField(name + \" Map key\", entry.getKey());\n    +    } else {<br/>\n    +LOG.warn(\"validator: {} cannot be used in MapEntryCustomValidator to validate keys.  Individual entry validators must a instance of Validator class\", kv.getName());<br/>\n    +    }<br/>\n    +}<br/>\n    +for (Class vv : valueValidators) {<br/>\n    +    Object valueValidator = vv.newInstance();<br/>\n    +    if (valueValidator instanceof Validator) {\n    +((Validator) valueValidator).validateField(name + \" Map value\", entry.getValue());\n    +    } else {<br/>\n    +LOG.warn(\"validator: {} cannot be used in MapEntryCustomValidator to validate values.  Individual entry validators must a instance of Validator class\", vv.getName());<br/>\n    +    }<br/>\n    +}<br/>\n    +    }<br/>\n    +}<br/>\n    +    }<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Validates a positive number<br/>\n    +     */<br/>\n    +    public static class PositiveNumberValidator extends Validator{<br/>\n    +<br/>\n    +@Override<br/>\n    +public void validateField(String name, Object o) {\n    +    validateField(name, false, o);\n    +}<br/>\n    +<br/>\n    +    public void validateField(String name, boolean includeZero, Object o) {<br/>\n    +    if (o == null) {    +return;    +    }\n<p>    +    if (o instanceof Number) {<br/>\n    +if(includeZero == true) {<br/>\n    +    if (((Number) o).doubleValue() >= 0.0) </p>\n{\n    +return;\n    +    }<br/>\n    +} else {<br/>\n    +    if (((Number) o).doubleValue() > 0.0) {    +return;    +    }\n<p>    +}<br/>\n    +    }<br/>\n    +    throw new IllegalArgumentException(\"Field \" + name + \" must be a Positive Number\");<br/>\n    +}<br/>\n    +    }<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Methods for validating confs<br/>\n    +     */<br/>\n    +<br/>\n    +    /**<br/>\n    +     * Validates a field given field name as string<br/>\n    +     *<br/>\n    +     * @param fieldName provided as a string<br/>\n    +     * @param conf      map of confs<br/>\n    +     */<br/>\n    +    public static void validateField(String fieldName, Map conf) throws NoSuchFieldException, IllegalAccessException, InstantiationException, NoSuchMethodException, InvocationTargetException </p>\n{\n    +validateField(fieldName, conf, CONFIG_CLASS);\n    +    }\n<p>    &#8212; End diff &#8211;</p>\n\n<p>    OK good answer. Let's leave it.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612607520/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/148462523","html_url":"https://github.com/apache/storm/pull/785#issuecomment-148462523","issue_url":"https://api.github.com/repos/apache/storm/issues/785","id":148462523,"node_id":"MDEyOklzc3VlQ29tbWVudDE0ODQ2MjUyMw==","user":{"login":"revans2","id":3441321,"node_id":"MDQ6VXNlcjM0NDEzMjE=","avatar_url":"https://avatars.githubusercontent.com/u/3441321?v=4","gravatar_id":"","url":"https://api.github.com/users/revans2","html_url":"https://github.com/revans2","followers_url":"https://api.github.com/users/revans2/followers","following_url":"https://api.github.com/users/revans2/following{/other_user}","gists_url":"https://api.github.com/users/revans2/gists{/gist_id}","starred_url":"https://api.github.com/users/revans2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/revans2/subscriptions","organizations_url":"https://api.github.com/users/revans2/orgs","repos_url":"https://api.github.com/users/revans2/repos","events_url":"https://api.github.com/users/revans2/events{/privacy}","received_events_url":"https://api.github.com/users/revans2/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-15T17:16:18Z","updated_at":"2015-10-15T17:16:18Z","author_association":"CONTRIBUTOR","body":"The test failure is an issue with maven trying to download something and getting a failure. I don't see how it is related.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/148462523/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612607523","html_url":"https://github.com/apache/storm/issues/4922#issuecomment-2612607523","issue_url":"https://api.github.com/repos/apache/storm/issues/4922","id":2612607523,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MDc1MjM=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-15T17:16:19Z","updated_at":"2025-01-24T14:03:39Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/785#issuecomment-148462523\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/785#issuecomment-148462523</a></p>\n\n<p>    The test failure is an issue with maven trying to download something and getting a failure. I don't see how it is related.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612607523/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/148468577","html_url":"https://github.com/apache/storm/pull/785#issuecomment-148468577","issue_url":"https://api.github.com/repos/apache/storm/issues/785","id":148468577,"node_id":"MDEyOklzc3VlQ29tbWVudDE0ODQ2ODU3Nw==","user":{"login":"d2r","id":905298,"node_id":"MDQ6VXNlcjkwNTI5OA==","avatar_url":"https://avatars.githubusercontent.com/u/905298?v=4","gravatar_id":"","url":"https://api.github.com/users/d2r","html_url":"https://github.com/d2r","followers_url":"https://api.github.com/users/d2r/followers","following_url":"https://api.github.com/users/d2r/following{/other_user}","gists_url":"https://api.github.com/users/d2r/gists{/gist_id}","starred_url":"https://api.github.com/users/d2r/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/d2r/subscriptions","organizations_url":"https://api.github.com/users/d2r/orgs","repos_url":"https://api.github.com/users/d2r/repos","events_url":"https://api.github.com/users/d2r/events{/privacy}","received_events_url":"https://api.github.com/users/d2r/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-15T17:39:24Z","updated_at":"2015-10-15T17:39:24Z","author_association":"NONE","body":"JDK8 CI test failed because connections to repo.maven.apache.org were reset, and so dependency resolution did not work.  I ran all the tests on OSX myself and they passed for me.\nI am +1, and thanks @jerrypeng for your patience during the review.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/148468577/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612607529","html_url":"https://github.com/apache/storm/issues/4922#issuecomment-2612607529","issue_url":"https://api.github.com/repos/apache/storm/issues/4922","id":2612607529,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MDc1Mjk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-15T17:39:27Z","updated_at":"2025-01-24T14:03:39Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user d2r commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/785#issuecomment-148468577\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/785#issuecomment-148468577</a></p>\n\n<p>    JDK8 CI test failed because connections to repo.maven.apache.org were reset, and so dependency resolution did not work.  I ran all the tests on OSX myself and they passed for me.<br/>\n    I am +1, and thanks @jerrypeng for your patience during the review.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612607529/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/148473108","html_url":"https://github.com/apache/storm/pull/785#issuecomment-148473108","issue_url":"https://api.github.com/repos/apache/storm/issues/785","id":148473108,"node_id":"MDEyOklzc3VlQ29tbWVudDE0ODQ3MzEwOA==","user":{"login":"jerrypeng","id":3613359,"node_id":"MDQ6VXNlcjM2MTMzNTk=","avatar_url":"https://avatars.githubusercontent.com/u/3613359?v=4","gravatar_id":"","url":"https://api.github.com/users/jerrypeng","html_url":"https://github.com/jerrypeng","followers_url":"https://api.github.com/users/jerrypeng/followers","following_url":"https://api.github.com/users/jerrypeng/following{/other_user}","gists_url":"https://api.github.com/users/jerrypeng/gists{/gist_id}","starred_url":"https://api.github.com/users/jerrypeng/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jerrypeng/subscriptions","organizations_url":"https://api.github.com/users/jerrypeng/orgs","repos_url":"https://api.github.com/users/jerrypeng/repos","events_url":"https://api.github.com/users/jerrypeng/events{/privacy}","received_events_url":"https://api.github.com/users/jerrypeng/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-15T17:58:20Z","updated_at":"2015-10-15T17:58:20Z","author_association":"CONTRIBUTOR","body":"@revans2 @d2r Thank you for spending the time to review my PR! Much appreciated!\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/148473108/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612607533","html_url":"https://github.com/apache/storm/issues/4922#issuecomment-2612607533","issue_url":"https://api.github.com/repos/apache/storm/issues/4922","id":2612607533,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MDc1MzM=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-15T17:58:21Z","updated_at":"2025-01-24T14:03:40Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user jerrypeng commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/785#issuecomment-148473108\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/785#issuecomment-148473108</a></p>\n\n<p>    @revans2 @d2r Thank you for spending the time to review my PR! Much appreciated!</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612607533/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612607534","html_url":"https://github.com/apache/storm/issues/4922#issuecomment-2612607534","issue_url":"https://api.github.com/repos/apache/storm/issues/4922","id":2612607534,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MDc1MzQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-15T18:18:23Z","updated_at":"2025-01-24T14:03:40Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user asfgit closed the pull request at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/785\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/785</a></p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612607534/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612607543","html_url":"https://github.com/apache/storm/issues/4922#issuecomment-2612607543","issue_url":"https://api.github.com/repos/apache/storm/issues/4922","id":2612607543,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MDc1NDM=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-15T18:18:57Z","updated_at":"2025-01-24T14:03:40Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=revans2\">revans2</a>:</i>\n<p>Thanks <a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jerrypeng\" class=\"user-hover\" rel=\"jerrypeng\">Boyang Jerry Peng</a>,</p>\n\n<p>I just merged this into master.  Keep up the good work.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612607543/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612611129","html_url":"https://github.com/apache/storm/issues/4946#issuecomment-2612611129","issue_url":"https://api.github.com/repos/apache/storm/issues/4946","id":2612611129,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MTExMjk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-15T18:37:28Z","updated_at":"2025-01-24T14:05:17Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user asfgit closed the pull request at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/798\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/798</a></p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612611129/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612611135","html_url":"https://github.com/apache/storm/issues/4946#issuecomment-2612611135","issue_url":"https://api.github.com/repos/apache/storm/issues/4946","id":2612611135,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MTExMzU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-15T18:38:23Z","updated_at":"2025-01-24T14:05:17Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=revans2\">revans2</a>:</i>\n<p>I just merged this into master.</p>\n\n<p><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=kabhwan\" class=\"user-hover\" rel=\"kabhwan\">Jungtaek Lim</a>,</p>\n\n<p>If you want me to cherry pick it back to 0.10.x I can, I just don't know how much more unit testing we are going to do there.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612611135/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612583218","html_url":"https://github.com/apache/storm/issues/4801#issuecomment-2612583218","issue_url":"https://api.github.com/repos/apache/storm/issues/4801","id":2612583218,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1ODMyMTg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-15T20:22:50Z","updated_at":"2025-01-24T13:53:08Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=darsh221\">darsh221</a>:</i>\n<p>We are facing similar issue in production where storm worker just hangs and we see complete latency increases drastically.This happened 3 times in last 2 months.If I try to take the thread dump worker process just dies. Once i was able to get the thread dump and see lot of block threads in it. I'm attaching thread dump to JIRA.We are using 0.9.5 and spout pending size is set to 1000. </p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612583218/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612608882","html_url":"https://github.com/apache/storm/issues/4931#issuecomment-2612608882","issue_url":"https://api.github.com/repos/apache/storm/issues/4931","id":2612608882,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MDg4ODI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-15T20:51:19Z","updated_at":"2025-01-24T14:04:15Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user knusbaum commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/790#discussion_r42178630\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/790#discussion_r42178630</a></p>\n\n<p>    &#8212; Diff: conf/defaults.yaml &#8212;<br/>\n    @@ -140,7 +140,8 @@ supervisor.memory.capacity.mb: 3072.0<br/>\n     supervisor.cpu.capacity: 400.0</p>\n\n<ol>\n\t<li>\n\t<ol>\n\t\t<li>\n\t\t<ol>\n\t\t\t<li>worker.* configs are for task workers<br/>\n    -worker.childopts: \"-Xmx768m\"<br/>\n    +worker.heap.memory.mb: 768<br/>\n    +worker.childopts: \"-Xmx%HEAP-MEM%m\"</li>\n\t\t</ol>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ol>\n\t</li>\n</ol>\n\n\n<p>    Why is this replacement value in defaults.yaml, but none of the others are?</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612608882/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612612076","html_url":"https://github.com/apache/storm/issues/4953#issuecomment-2612612076","issue_url":"https://api.github.com/repos/apache/storm/issues/4953","id":2612612076,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MTIwNzY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-15T21:17:39Z","updated_at":"2025-01-24T14:05:46Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>GitHub user danielschonfeld opened a pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/802\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/802</a></p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1115\" title=\"Stale leader-lock key effectively bans all nodes from becoming leaders\" class=\"issue-link\" data-issue-key=\"STORM-1115\"><del>STORM-1115</del></a> Stale leader-lock key effectively bans all nodes from becoming leaders</p>\n\n<p>    From the issue:</p>\n\n<p>    ```<br/>\n    I believe this curator bug is what's in play causing the above described situation.<br/>\n    <a href=\"https://issues.apache.org/jira/browse/CURATOR-202\" class=\"external-link\" rel=\"nofollow\">https://issues.apache.org/jira/browse/CURATOR-202</a><br/>\n    ```</p>\n\n<p>You can merge this pull request into a Git repository by running:</p>\n\n<p>    $ git pull <a href=\"https://github.com/schonfeld/storm\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/schonfeld/storm</a> update-curator</p>\n\n<p>Alternatively you can review and apply these changes as the patch at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/802.patch\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/802.patch</a></p>\n\n<p>To close this pull request, make a commit to your master/trunk branch<br/>\nwith (at least) the following in the commit message:</p>\n\n<p>    This closes #802</p>\n\n<hr />\n<p>commit 580de48c91ab32a1777f0e375d065d3a01b8e3e9<br/>\nAuthor: Michael Schonfeld <michael@schonfeld.org><br/>\nDate:   2015-10-06T17:55:17Z</p>\n\n<p>    more logging to nimbusinfo</p>\n\n<p>commit ea2c3a81855dded8c48d946a7017c5ee1ded5e5b<br/>\nAuthor: Michael Schonfeld <michael@schonfeld.org><br/>\nDate:   2015-10-09T19:21:52Z</p>\n\n<p>    debug logging</p>\n\n<p>commit 25ad78e3c6c47e3da3c6cab86d155274ce5ad561<br/>\nAuthor: Michael Schonfeld <michael@schonfeld.org><br/>\nDate:   2015-10-09T19:57:45Z</p>\n\n<p>    wrong encasing</p>\n\n<p>commit b7db4434f10b78c6259b82f6b6edaac676900bef<br/>\nAuthor: Michael Schonfeld <michael@schonfeld.org><br/>\nDate:   2015-10-09T20:36:53Z</p>\n\n<p>    wrap in do()</p>\n\n<p>commit 9ca4d5d4821959b7b9df002fbdc589f6232c37da<br/>\nAuthor: Michael Schonfeld <michael@schonfeld.org><br/>\nDate:   2015-10-09T20:39:49Z</p>\n\n<p>    missing )</p>\n\n<p>commit 24c4ce0056d40f82f17c15603e5ab83a3b9596ab<br/>\nAuthor: Michael Schonfeld <michael@schonfeld.org><br/>\nDate:   2015-10-09T21:15:21Z</p>\n\n<p>    more debug</p>\n\n<p>commit 8253f83ece8a63c076a9a5e833e2871728419c83<br/>\nAuthor: Michael Schonfeld <michael@schonfeld.org><br/>\nDate:   2015-10-09T21:33:23Z</p>\n\n<p>    no need for ()</p>\n\n<p>commit 278206baf7567f270b5bcca41dbeec75c765aaf4<br/>\nAuthor: Michael Schonfeld <michael@schonfeld.org><br/>\nDate:   2015-10-09T21:39:05Z</p>\n\n<p>    blha</p>\n\n<p>commit 9f3e8d55b9083d59423ac9153f0aff8c912242bb<br/>\nAuthor: Michael Schonfeld <michael@schonfeld.org><br/>\nDate:   2015-10-09T23:11:28Z</p>\n\n<p>    dont use local var</p>\n\n<p>commit faf9bda82e1c4e1875c87a4920fb2c1c2a33ba56<br/>\nAuthor: Daniel Schonfeld <daniel@schonfeld.org><br/>\nDate:   2015-10-15T21:11:45Z</p>\n\n<p>    update curator to version 2.9.0 to combat stale leader issue as described in <a href=\"https://issues.apache.org/jira/browse/CURATOR-202\" class=\"external-link\" rel=\"nofollow\">https://issues.apache.org/jira/browse/CURATOR-202</a></p>\n\n<hr />","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612612076/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/148524703","html_url":"https://github.com/apache/storm/pull/802#issuecomment-148524703","issue_url":"https://api.github.com/repos/apache/storm/issues/802","id":148524703,"node_id":"MDEyOklzc3VlQ29tbWVudDE0ODUyNDcwMw==","user":{"login":"Parth-Brahmbhatt","id":6914358,"node_id":"MDQ6VXNlcjY5MTQzNTg=","avatar_url":"https://avatars.githubusercontent.com/u/6914358?v=4","gravatar_id":"","url":"https://api.github.com/users/Parth-Brahmbhatt","html_url":"https://github.com/Parth-Brahmbhatt","followers_url":"https://api.github.com/users/Parth-Brahmbhatt/followers","following_url":"https://api.github.com/users/Parth-Brahmbhatt/following{/other_user}","gists_url":"https://api.github.com/users/Parth-Brahmbhatt/gists{/gist_id}","starred_url":"https://api.github.com/users/Parth-Brahmbhatt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Parth-Brahmbhatt/subscriptions","organizations_url":"https://api.github.com/users/Parth-Brahmbhatt/orgs","repos_url":"https://api.github.com/users/Parth-Brahmbhatt/repos","events_url":"https://api.github.com/users/Parth-Brahmbhatt/events{/privacy}","received_events_url":"https://api.github.com/users/Parth-Brahmbhatt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-15T21:22:21Z","updated_at":"2015-10-15T21:22:21Z","author_association":"CONTRIBUTOR","body":"lot of unnecessary log statements, can you remove them?\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/148524703/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612612081","html_url":"https://github.com/apache/storm/issues/4953#issuecomment-2612612081","issue_url":"https://api.github.com/repos/apache/storm/issues/4953","id":2612612081,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MTIwODE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-15T21:22:22Z","updated_at":"2025-01-24T14:05:47Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user Parth-Brahmbhatt commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/802#issuecomment-148524703\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/802#issuecomment-148524703</a></p>\n\n<p>    lot of unnecessary log statements, can you remove them?</p>\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612612081/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612612085","html_url":"https://github.com/apache/storm/issues/4953#issuecomment-2612612085","issue_url":"https://api.github.com/repos/apache/storm/issues/4953","id":2612612085,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MTIwODU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-15T21:25:53Z","updated_at":"2025-01-24T14:05:47Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=danielschonfeld\">danielschonfeld</a>:</i>\n<p>forced pushed a cleaner version.  </p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612612085/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/148527966","html_url":"https://github.com/apache/storm/pull/802#issuecomment-148527966","issue_url":"https://api.github.com/repos/apache/storm/issues/802","id":148527966,"node_id":"MDEyOklzc3VlQ29tbWVudDE0ODUyNzk2Ng==","user":{"login":"danielschonfeld","id":522598,"node_id":"MDQ6VXNlcjUyMjU5OA==","avatar_url":"https://avatars.githubusercontent.com/u/522598?v=4","gravatar_id":"","url":"https://api.github.com/users/danielschonfeld","html_url":"https://github.com/danielschonfeld","followers_url":"https://api.github.com/users/danielschonfeld/followers","following_url":"https://api.github.com/users/danielschonfeld/following{/other_user}","gists_url":"https://api.github.com/users/danielschonfeld/gists{/gist_id}","starred_url":"https://api.github.com/users/danielschonfeld/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/danielschonfeld/subscriptions","organizations_url":"https://api.github.com/users/danielschonfeld/orgs","repos_url":"https://api.github.com/users/danielschonfeld/repos","events_url":"https://api.github.com/users/danielschonfeld/events{/privacy}","received_events_url":"https://api.github.com/users/danielschonfeld/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-15T21:37:40Z","updated_at":"2015-10-15T21:37:40Z","author_association":"CONTRIBUTOR","body":"any idea why the JDK7 test fails? I'm not entirely clear on why DRPC server is having problems starting up\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/148527966/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612612088","html_url":"https://github.com/apache/storm/issues/4953#issuecomment-2612612088","issue_url":"https://api.github.com/repos/apache/storm/issues/4953","id":2612612088,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MTIwODg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-15T21:37:42Z","updated_at":"2025-01-24T14:05:47Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user danielschonfeld commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/802#issuecomment-148527966\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/802#issuecomment-148527966</a></p>\n\n<p>    any idea why the JDK7 test fails? I'm not entirely clear on why DRPC server is having problems starting up</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612612088/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/148540526","html_url":"https://github.com/apache/storm/pull/765#issuecomment-148540526","issue_url":"https://api.github.com/repos/apache/storm/issues/765","id":148540526,"node_id":"MDEyOklzc3VlQ29tbWVudDE0ODU0MDUyNg==","user":{"login":"mjsax","id":8959638,"node_id":"MDQ6VXNlcjg5NTk2Mzg=","avatar_url":"https://avatars.githubusercontent.com/u/8959638?v=4","gravatar_id":"","url":"https://api.github.com/users/mjsax","html_url":"https://github.com/mjsax","followers_url":"https://api.github.com/users/mjsax/followers","following_url":"https://api.github.com/users/mjsax/following{/other_user}","gists_url":"https://api.github.com/users/mjsax/gists{/gist_id}","starred_url":"https://api.github.com/users/mjsax/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mjsax/subscriptions","organizations_url":"https://api.github.com/users/mjsax/orgs","repos_url":"https://api.github.com/users/mjsax/repos","events_url":"https://api.github.com/users/mjsax/events{/privacy}","received_events_url":"https://api.github.com/users/mjsax/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-15T22:26:00Z","updated_at":"2015-10-15T22:28:07Z","author_association":"MEMBER","body":"I had a look at the numbers. It's a lot of stuff and hard to parse for me... I am not sure what you mean by \"contradict the numbers\"? Can you explain in more detail?\n\nHowever, I agree with your thought about STORM-855 #694 It basically reduces the contention on the output queue, because less calls are made here. I profiled Storm once and observed that on high-end data-rates (when we hit the wall) the contention on the output-queue is the bottleneck (the writing and reading thread have to lock the queue and a lot of waiting for the lock consumes a fair share of the consumed time). This waiting-for-the-lock time is reduced significantly by batching as STORM-855 does.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/148540526/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612563762","html_url":"https://github.com/apache/storm/issues/4695#issuecomment-2612563762","issue_url":"https://api.github.com/repos/apache/storm/issues/4695","id":2612563762,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1NjM3NjI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-15T22:26:02Z","updated_at":"2025-01-24T13:44:00Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user mjsax commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/765#issuecomment-148540526\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/765#issuecomment-148540526</a></p>\n\n<p>    I had a look at the numbers. It's a lot of stuff and hard to parse for me... I am not sure what you mean by \"contradict the numbers\"? Can you explain in more detail?</p>\n\n<p>    However, I agree with your thought about <a href=\"https://issues.apache.org/jira/browse/STORM-855\" title=\"Add tuple batching\" class=\"issue-link\" data-issue-key=\"STORM-855\"><del>STORM-855</del></a> #694 It basically reduces the contention on the output queue, because less calls are made here. I profiled Storm once and observed that on high-end data-rates (when we hit the wall) the contention on the output-queue is the bottleneck (the writing and reading thread have to lock the queue and a lot of waiting for the lock consumes a fair share of the consumed time).</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612563762/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612611140","html_url":"https://github.com/apache/storm/issues/4946#issuecomment-2612611140","issue_url":"https://api.github.com/repos/apache/storm/issues/4946","id":2612611140,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MTExNDA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-15T22:46:47Z","updated_at":"2025-01-24T14:05:18Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=kabhwan\">kabhwan</a>:</i>\n<p>Thanks for the work, <a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=revans2\" class=\"user-hover\" rel=\"revans2\">Robert Joseph Evans</a>.</p>\n\n<p>As far as I think, we may have to get some works for 0.10.1 if some issues from 0.10.0 will be reported.<br/>\nI'm also curious that how much time we should make a patch target to 0.10.x-branch, but since this patch seems be easy to backport, I'll try to.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612611140/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/148544657","html_url":"https://github.com/apache/storm/pull/765#issuecomment-148544657","issue_url":"https://api.github.com/repos/apache/storm/issues/765","id":148544657,"node_id":"MDEyOklzc3VlQ29tbWVudDE0ODU0NDY1Nw==","user":{"login":"revans2","id":3441321,"node_id":"MDQ6VXNlcjM0NDEzMjE=","avatar_url":"https://avatars.githubusercontent.com/u/3441321?v=4","gravatar_id":"","url":"https://api.github.com/users/revans2","html_url":"https://github.com/revans2","followers_url":"https://api.github.com/users/revans2/followers","following_url":"https://api.github.com/users/revans2/following{/other_user}","gists_url":"https://api.github.com/users/revans2/gists{/gist_id}","starred_url":"https://api.github.com/users/revans2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/revans2/subscriptions","organizations_url":"https://api.github.com/users/revans2/orgs","repos_url":"https://api.github.com/users/revans2/repos","events_url":"https://api.github.com/users/revans2/events{/privacy}","received_events_url":"https://api.github.com/users/revans2/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-15T22:47:01Z","updated_at":"2015-10-15T22:47:01Z","author_association":"CONTRIBUTOR","body":"@mjsax \n\nWhat I saw when testing STORM-855 was that the maximum throughput was cut almost in half from 10,000 sentences per second to 5,500.  But your numbers showed maximum throughput more than doubling from around 7,960,300 tuples sent in 30 seconds to 16,347,100 in the same time period (no-acking).  And 1,832,160 in 30 seconds to 2,323,580 an increase of 25% with acking.\n\nTo me this feels like a contradiction. The only thing I can think of is that the messaging layer is so scary slow that cutting the maximum throughput of a worker by half has no impact on the overall performance if it can double the throughput of the messaging layer, by doing more batching.\n\nThis is likely the case, as on the high end 16,347,100 / 30 seconds / 24 workers is about 22,000 tuples per second per worker, where as 5,500 sentences per second results in about 181,500 total tuples per second/worker being processed.\n\nI'm just looking for feedback from others on this, but it looks like I need to do a distributed apples to apples comparison as well to see the impact the messaging layer has.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/148544657/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612563773","html_url":"https://github.com/apache/storm/issues/4695#issuecomment-2612563773","issue_url":"https://api.github.com/repos/apache/storm/issues/4695","id":2612563773,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1NjM3NzM=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-15T22:47:02Z","updated_at":"2025-01-24T13:44:00Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/765#issuecomment-148544657\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/765#issuecomment-148544657</a></p>\n\n<p>    @mjsax </p>\n\n<p>    What I saw when testing <a href=\"https://issues.apache.org/jira/browse/STORM-855\" title=\"Add tuple batching\" class=\"issue-link\" data-issue-key=\"STORM-855\"><del>STORM-855</del></a> was that the maximum throughput was cut almost in half from 10,000 sentences per second to 5,500.  But your numbers showed maximum throughput more than doubling from around 7,960,300 tuples sent in 30 seconds to 16,347,100 in the same time period (no-acking).  And 1,832,160 in 30 seconds to 2,323,580 an increase of 25% with acking.</p>\n\n<p>    To me this feels like a contradiction. The only thing I can think of is that the messaging layer is so scary slow that cutting the maximum throughput of a worker by half has no impact on the overall performance if it can double the throughput of the messaging layer, by doing more batching.</p>\n\n<p>    This is likely the case, as on the high end 16,347,100 / 30 seconds / 24 workers is about 22,000 tuples per second per worker, where as 5,500 sentences per second results in about 181,500 total tuples per second/worker being processed.</p>\n\n<p>    I'm just looking for feedback from others on this, but it looks like I need to do a distributed apples to apples comparison as well to see the impact the messaging layer has.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612563773/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/148548577","html_url":"https://github.com/apache/storm/pull/765#issuecomment-148548577","issue_url":"https://api.github.com/repos/apache/storm/issues/765","id":148548577,"node_id":"MDEyOklzc3VlQ29tbWVudDE0ODU0ODU3Nw==","user":{"login":"mjsax","id":8959638,"node_id":"MDQ6VXNlcjg5NTk2Mzg=","avatar_url":"https://avatars.githubusercontent.com/u/8959638?v=4","gravatar_id":"","url":"https://api.github.com/users/mjsax","html_url":"https://github.com/mjsax","followers_url":"https://api.github.com/users/mjsax/followers","following_url":"https://api.github.com/users/mjsax/following{/other_user}","gists_url":"https://api.github.com/users/mjsax/gists{/gist_id}","starred_url":"https://api.github.com/users/mjsax/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mjsax/subscriptions","organizations_url":"https://api.github.com/users/mjsax/orgs","repos_url":"https://api.github.com/users/mjsax/repos","events_url":"https://api.github.com/users/mjsax/events{/privacy}","received_events_url":"https://api.github.com/users/mjsax/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-15T23:12:22Z","updated_at":"2015-10-15T23:12:22Z","author_association":"MEMBER","body":"Thanks for clarification. :)\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/148548577/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612611145","html_url":"https://github.com/apache/storm/issues/4946#issuecomment-2612611145","issue_url":"https://api.github.com/repos/apache/storm/issues/4946","id":2612611145,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MTExNDU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-16T00:49:23Z","updated_at":"2025-01-24T14:05:18Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=kabhwan\">kabhwan</a>:</i>\n<p>Backported to 0.10.x-branch.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612611145/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612606520","html_url":"https://github.com/apache/storm/issues/4917#issuecomment-2612606520","issue_url":"https://api.github.com/repos/apache/storm/issues/4917","id":2612606520,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MDY1MjA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-16T01:08:07Z","updated_at":"2025-01-24T14:03:13Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user asfgit closed the pull request at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/772\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/772</a></p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612606520/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612606525","html_url":"https://github.com/apache/storm/issues/4917#issuecomment-2612606525","issue_url":"https://api.github.com/repos/apache/storm/issues/4917","id":2612606525,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MDY1MjU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-16T01:13:13Z","updated_at":"2025-01-24T14:03:13Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=kabhwan\">kabhwan</a>:</i>\n<p>Thanks <a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=harsha_ch\" class=\"user-hover\" rel=\"harsha_ch\">sriharsha chintalapani</a>,<br/>\nI merged into master.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612606525/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612605050","html_url":"https://github.com/apache/storm/issues/4909#issuecomment-2612605050","issue_url":"https://api.github.com/repos/apache/storm/issues/4909","id":2612605050,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MDUwNTA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-16T02:08:37Z","updated_at":"2025-01-24T14:02:35Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>GitHub user bourneagain opened a pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/803\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/803</a></p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1071\" title=\"Task Message format to include source task id.\" class=\"issue-link\" data-issue-key=\"STORM-1071\"><del>STORM-1071</del></a> Task Message format to include source task id</p>\n\n<p>    As part of gathering inputs for Resource Aware Scheduler, understanding the tuple network characteristics between tasks would be helpful. <br/>\n    The present implementation of TaskMessage includes only the destination task id and message. Including the source task id to it would help us understand the task-task (component/component) network bandwidth characteristics. It shall also avoid the deserialization of message to retrieve the source task id from the serialized tuple message.</p>\n\n\n\n<p>You can merge this pull request into a Git repository by running:</p>\n\n<p>    $ git pull <a href=\"https://github.com/bourneagain/storm\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/bourneagain/storm</a> <a href=\"https://issues.apache.org/jira/browse/STORM-1071\" title=\"Task Message format to include source task id.\" class=\"issue-link\" data-issue-key=\"STORM-1071\"><del>STORM-1071</del></a></p>\n\n<p>Alternatively you can review and apply these changes as the patch at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/803.patch\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/803.patch</a></p>\n\n<p>To close this pull request, make a commit to your master/trunk branch<br/>\nwith (at least) the following in the commit message:</p>\n\n<p>    This closes #803</p>\n\n<hr />\n<p>commit 7f4d32959a77fff57d5be4872fe27d83829a2314<br/>\nAuthor: Shyam Rajendran <srajendran@yahoo-inc.com><br/>\nDate:   2015-10-16T00:47:28Z</p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1071\" title=\"Task Message format to include source task id.\" class=\"issue-link\" data-issue-key=\"STORM-1071\"><del>STORM-1071</del></a> Task Message format to include source task id</p>\n\n<hr />","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612605050/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/148681032","html_url":"https://github.com/apache/storm/pull/753#issuecomment-148681032","issue_url":"https://api.github.com/repos/apache/storm/issues/753","id":148681032,"node_id":"MDEyOklzc3VlQ29tbWVudDE0ODY4MTAzMg==","user":{"login":"wangli1426","id":5260276,"node_id":"MDQ6VXNlcjUyNjAyNzY=","avatar_url":"https://avatars.githubusercontent.com/u/5260276?v=4","gravatar_id":"","url":"https://api.github.com/users/wangli1426","html_url":"https://github.com/wangli1426","followers_url":"https://api.github.com/users/wangli1426/followers","following_url":"https://api.github.com/users/wangli1426/following{/other_user}","gists_url":"https://api.github.com/users/wangli1426/gists{/gist_id}","starred_url":"https://api.github.com/users/wangli1426/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/wangli1426/subscriptions","organizations_url":"https://api.github.com/users/wangli1426/orgs","repos_url":"https://api.github.com/users/wangli1426/repos","events_url":"https://api.github.com/users/wangli1426/events{/privacy}","received_events_url":"https://api.github.com/users/wangli1426/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-16T10:47:09Z","updated_at":"2015-10-16T10:47:09Z","author_association":"CONTRIBUTOR","body":"Hi @revans2 ,\nI  up-merged my code successfully. Following your suggestion, I mark throughput in storm.thrift as optional. Look forward to your response. Thanks.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/148681032/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612602882","html_url":"https://github.com/apache/storm/issues/4895#issuecomment-2612602882","issue_url":"https://api.github.com/repos/apache/storm/issues/4895","id":2612602882,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MDI4ODI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-16T10:47:10Z","updated_at":"2025-01-24T14:01:39Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user wangli1426 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/753#issuecomment-148681032\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/753#issuecomment-148681032</a></p>\n\n<p>    Hi @revans2 ,<br/>\n    I  up-merged my code successfully. Following your suggestion, I mark throughput in storm.thrift as optional. Look forward to your response. Thanks.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612602882/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612602886","html_url":"https://github.com/apache/storm/issues/4895#issuecomment-2612602886","issue_url":"https://api.github.com/repos/apache/storm/issues/4895","id":2612602886,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MDI4ODY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-16T13:35:18Z","updated_at":"2025-01-24T14:01:39Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/753#discussion_r42242430\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/753#discussion_r42242430</a></p>\n\n<p>    &#8212; Diff: storm-core/src/storm.thrift &#8212;<br/>\n    @@ -244,8 +244,9 @@ struct CommonAggregateStats {<br/>\n     2: optional i32 num_tasks;<br/>\n     3: optional i64 emitted;<br/>\n     4: optional i64 transferred;<br/>\n    -5: optional i64 acked;<br/>\n    -6: optional i64 failed;<br/>\n    +5: optional double throughput;<br/>\n    +6: optional i64 acked;<br/>\n    +7: optional i64 failed;<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    This is another problem with maintaining binary compatibility with the previous code.  You cannot renumber entries.  The tags at the beginning are what identify the field in the binary data.  By renumbering them the new code and old code will mix up throughput, acked, and failed.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612602886/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612602902","html_url":"https://github.com/apache/storm/issues/4895#issuecomment-2612602902","issue_url":"https://api.github.com/repos/apache/storm/issues/4895","id":2612602902,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MDI5MDI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-16T13:35:47Z","updated_at":"2025-01-24T14:01:39Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/753#discussion_r42242476\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/753#discussion_r42242476</a></p>\n\n<p>    &#8212; Diff: storm-core/src/storm.thrift &#8212;<br/>\n    @@ -279,9 +280,10 @@ struct ComponentAggregateStats {<br/>\n     struct TopologyStats {<br/>\n     1: optional map<string, i64> window_to_emitted;<br/>\n     2: optional map<string, i64> window_to_transferred;<br/>\n    -3: optional map<string, double> window_to_complete_latencies_ms;<br/>\n    -4: optional map<string, i64> window_to_acked;<br/>\n    -5: optional map<string, i64> window_to_failed;<br/>\n    +3: optional map<string, double> window_to_throughput;<br/>\n    +4: optional map<string, double> window_to_complete_latencies_ms;<br/>\n    +5: optional map<string, i64> window_to_acked;<br/>\n    +6: optional map<string, i64> window_to_failed;<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Here too, we cannot renumber the entires or the thrift code will not be compatible with older versions.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612602902/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612602912","html_url":"https://github.com/apache/storm/issues/4895#issuecomment-2612602912","issue_url":"https://api.github.com/repos/apache/storm/issues/4895","id":2612602912,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MDI5MTI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-10-16T13:41:03Z","updated_at":"2025-01-24T14:01:39Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/753#discussion_r42243012\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/753#discussion_r42243012</a></p>\n\n<p>    &#8212; Diff: storm-core/src/clj/backtype/storm/ui/core.clj &#8212;<br/>\n    @@ -626,7 +638,8 @@<br/>\n       (let <span class=\"error\">&#91;^CommonAggregateStats cas (.get_common_stats stats)&#93;</span><br/>\n </p>\n{\"stream\" stream-id\n  \"emitted\" (nil-to-zero (.get_emitted cas))\n    -     \"transferred\" (nil-to-zero (.get_transferred cas))}\n<p>))<br/>\n    +     \"transferred\" (nil-to-zero (.get_transferred cas))<br/>\n    +     \"throughput\" (float-str (.get_throughput cas))}))<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    I think we need nil-to-zero here as well, unless float-str will do that already</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612602912/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]