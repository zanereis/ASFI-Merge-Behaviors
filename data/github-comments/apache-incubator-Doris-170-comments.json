[{"url":"https://api.github.com/repos/apache/doris/issues/comments/1300216438","html_url":"https://github.com/apache/doris/pull/13902#issuecomment-1300216438","issue_url":"https://api.github.com/repos/apache/doris/issues/13902","id":1300216438,"node_id":"IC_kwDOBfSlxs5Nf7p2","user":{"login":"hello-stephen","id":27881198,"node_id":"MDQ6VXNlcjI3ODgxMTk4","avatar_url":"https://avatars.githubusercontent.com/u/27881198?v=4","gravatar_id":"","url":"https://api.github.com/users/hello-stephen","html_url":"https://github.com/hello-stephen","followers_url":"https://api.github.com/users/hello-stephen/followers","following_url":"https://api.github.com/users/hello-stephen/following{/other_user}","gists_url":"https://api.github.com/users/hello-stephen/gists{/gist_id}","starred_url":"https://api.github.com/users/hello-stephen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hello-stephen/subscriptions","organizations_url":"https://api.github.com/users/hello-stephen/orgs","repos_url":"https://api.github.com/users/hello-stephen/repos","events_url":"https://api.github.com/users/hello-stephen/events{/privacy}","received_events_url":"https://api.github.com/users/hello-stephen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-11-02T11:58:19Z","updated_at":"2022-11-07T02:08:14Z","author_association":"CONTRIBUTOR","body":"TeamCity pipeline, clickbench performance test result:\n the sum of best hot time: 34.62 seconds\n load time: 452 seconds\n storage size: 17177930138 Bytes\n https://doris-community-test-1308700295.cos.ap-hongkong.myqcloud.com/tmp/20221107020812_clickbench_pr_40705.html","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1300216438/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1300248997","html_url":"https://github.com/apache/doris/pull/13904#issuecomment-1300248997","issue_url":"https://api.github.com/repos/apache/doris/issues/13904","id":1300248997,"node_id":"IC_kwDOBfSlxs5NgDml","user":{"login":"hello-stephen","id":27881198,"node_id":"MDQ6VXNlcjI3ODgxMTk4","avatar_url":"https://avatars.githubusercontent.com/u/27881198?v=4","gravatar_id":"","url":"https://api.github.com/users/hello-stephen","html_url":"https://github.com/hello-stephen","followers_url":"https://api.github.com/users/hello-stephen/followers","following_url":"https://api.github.com/users/hello-stephen/following{/other_user}","gists_url":"https://api.github.com/users/hello-stephen/gists{/gist_id}","starred_url":"https://api.github.com/users/hello-stephen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hello-stephen/subscriptions","organizations_url":"https://api.github.com/users/hello-stephen/orgs","repos_url":"https://api.github.com/users/hello-stephen/repos","events_url":"https://api.github.com/users/hello-stephen/events{/privacy}","received_events_url":"https://api.github.com/users/hello-stephen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-11-02T12:12:28Z","updated_at":"2022-11-02T12:12:28Z","author_association":"CONTRIBUTOR","body":"TeamCity pipeline, clickbench performance test result:\n the sum of best hot time: 38.25 seconds\n load time: 578 seconds\n storage size: 17154810035 Bytes\n https://doris-community-test-1308700295.cos.ap-hongkong.myqcloud.com/tmp/20221102121224_clickbench_pr_38289.html","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1300248997/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1300283529","html_url":"https://github.com/apache/doris/issues/4589#issuecomment-1300283529","issue_url":"https://api.github.com/repos/apache/doris/issues/4589","id":1300283529,"node_id":"IC_kwDOBfSlxs5NgMCJ","user":{"login":"hongli-my","id":8597823,"node_id":"MDQ6VXNlcjg1OTc4MjM=","avatar_url":"https://avatars.githubusercontent.com/u/8597823?v=4","gravatar_id":"","url":"https://api.github.com/users/hongli-my","html_url":"https://github.com/hongli-my","followers_url":"https://api.github.com/users/hongli-my/followers","following_url":"https://api.github.com/users/hongli-my/following{/other_user}","gists_url":"https://api.github.com/users/hongli-my/gists{/gist_id}","starred_url":"https://api.github.com/users/hongli-my/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hongli-my/subscriptions","organizations_url":"https://api.github.com/users/hongli-my/orgs","repos_url":"https://api.github.com/users/hongli-my/repos","events_url":"https://api.github.com/users/hongli-my/events{/privacy}","received_events_url":"https://api.github.com/users/hongli-my/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-11-02T12:25:00Z","updated_at":"2022-11-02T12:25:43Z","author_association":"NONE","body":"in my case:  com.sleepycat.je.rep.elections.Learner$3:execute()  will send query master info to  fe which have been droped.\r\n(use tcpdump to look)\r\nso restart fe will recovery.","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1300283529/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1300334359","html_url":"https://github.com/apache/doris/pull/13867#issuecomment-1300334359","issue_url":"https://api.github.com/repos/apache/doris/issues/13867","id":1300334359,"node_id":"IC_kwDOBfSlxs5NgYcX","user":{"login":"hello-stephen","id":27881198,"node_id":"MDQ6VXNlcjI3ODgxMTk4","avatar_url":"https://avatars.githubusercontent.com/u/27881198?v=4","gravatar_id":"","url":"https://api.github.com/users/hello-stephen","html_url":"https://github.com/hello-stephen","followers_url":"https://api.github.com/users/hello-stephen/followers","following_url":"https://api.github.com/users/hello-stephen/following{/other_user}","gists_url":"https://api.github.com/users/hello-stephen/gists{/gist_id}","starred_url":"https://api.github.com/users/hello-stephen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hello-stephen/subscriptions","organizations_url":"https://api.github.com/users/hello-stephen/orgs","repos_url":"https://api.github.com/users/hello-stephen/repos","events_url":"https://api.github.com/users/hello-stephen/events{/privacy}","received_events_url":"https://api.github.com/users/hello-stephen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-11-02T12:47:13Z","updated_at":"2022-11-17T05:58:47Z","author_association":"CONTRIBUTOR","body":"TeamCity pipeline, clickbench performance test result:\n the sum of best hot time: 34.77 seconds\n load time: 460 seconds\n storage size: 17150993460 Bytes\n https://doris-community-test-1308700295.cos.ap-hongkong.myqcloud.com/tmp/20221117055844_clickbench_pr_47652.html","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1300334359/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1300355659","html_url":"https://github.com/apache/doris/pull/13905#issuecomment-1300355659","issue_url":"https://api.github.com/repos/apache/doris/issues/13905","id":1300355659,"node_id":"IC_kwDOBfSlxs5NgdpL","user":{"login":"hello-stephen","id":27881198,"node_id":"MDQ6VXNlcjI3ODgxMTk4","avatar_url":"https://avatars.githubusercontent.com/u/27881198?v=4","gravatar_id":"","url":"https://api.github.com/users/hello-stephen","html_url":"https://github.com/hello-stephen","followers_url":"https://api.github.com/users/hello-stephen/followers","following_url":"https://api.github.com/users/hello-stephen/following{/other_user}","gists_url":"https://api.github.com/users/hello-stephen/gists{/gist_id}","starred_url":"https://api.github.com/users/hello-stephen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hello-stephen/subscriptions","organizations_url":"https://api.github.com/users/hello-stephen/orgs","repos_url":"https://api.github.com/users/hello-stephen/repos","events_url":"https://api.github.com/users/hello-stephen/events{/privacy}","received_events_url":"https://api.github.com/users/hello-stephen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-11-02T12:57:01Z","updated_at":"2022-11-09T03:10:16Z","author_association":"CONTRIBUTOR","body":"TeamCity pipeline, clickbench performance test result:\n the sum of best hot time: 33.9 seconds\n load time: 443 seconds\n storage size: 17181850338 Bytes\n https://doris-community-test-1308700295.cos.ap-hongkong.myqcloud.com/tmp/20221109031013_clickbench_pr_42366.html","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1300355659/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1300379157","html_url":"https://github.com/apache/doris/issues/13712#issuecomment-1300379157","issue_url":"https://api.github.com/repos/apache/doris/issues/13712","id":1300379157,"node_id":"IC_kwDOBfSlxs5NgjYV","user":{"login":"Yulei-Yang","id":28004179,"node_id":"MDQ6VXNlcjI4MDA0MTc5","avatar_url":"https://avatars.githubusercontent.com/u/28004179?v=4","gravatar_id":"","url":"https://api.github.com/users/Yulei-Yang","html_url":"https://github.com/Yulei-Yang","followers_url":"https://api.github.com/users/Yulei-Yang/followers","following_url":"https://api.github.com/users/Yulei-Yang/following{/other_user}","gists_url":"https://api.github.com/users/Yulei-Yang/gists{/gist_id}","starred_url":"https://api.github.com/users/Yulei-Yang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Yulei-Yang/subscriptions","organizations_url":"https://api.github.com/users/Yulei-Yang/orgs","repos_url":"https://api.github.com/users/Yulei-Yang/repos","events_url":"https://api.github.com/users/Yulei-Yang/events{/privacy}","received_events_url":"https://api.github.com/users/Yulei-Yang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-11-02T13:08:19Z","updated_at":"2022-11-02T13:08:19Z","author_association":"CONTRIBUTOR","body":"try this https://github.com/apache/doris/pull/13914","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1300379157/reactions","total_count":2,"+1":1,"-1":0,"laugh":0,"hooray":1,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1300379166","html_url":"https://github.com/apache/doris/pull/13906#issuecomment-1300379166","issue_url":"https://api.github.com/repos/apache/doris/issues/13906","id":1300379166,"node_id":"IC_kwDOBfSlxs5NgjYe","user":{"login":"hello-stephen","id":27881198,"node_id":"MDQ6VXNlcjI3ODgxMTk4","avatar_url":"https://avatars.githubusercontent.com/u/27881198?v=4","gravatar_id":"","url":"https://api.github.com/users/hello-stephen","html_url":"https://github.com/hello-stephen","followers_url":"https://api.github.com/users/hello-stephen/followers","following_url":"https://api.github.com/users/hello-stephen/following{/other_user}","gists_url":"https://api.github.com/users/hello-stephen/gists{/gist_id}","starred_url":"https://api.github.com/users/hello-stephen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hello-stephen/subscriptions","organizations_url":"https://api.github.com/users/hello-stephen/orgs","repos_url":"https://api.github.com/users/hello-stephen/repos","events_url":"https://api.github.com/users/hello-stephen/events{/privacy}","received_events_url":"https://api.github.com/users/hello-stephen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-11-02T13:08:19Z","updated_at":"2022-11-02T13:08:19Z","author_association":"CONTRIBUTOR","body":"TeamCity pipeline, clickbench performance test result:\n the sum of best hot time: 38.01 seconds\n load time: 571 seconds\n storage size: 17154655426 Bytes\n https://doris-community-test-1308700295.cos.ap-hongkong.myqcloud.com/tmp/20221102130815_clickbench_pr_38346.html","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1300379166/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1300428709","html_url":"https://github.com/apache/doris/pull/12742#issuecomment-1300428709","issue_url":"https://api.github.com/repos/apache/doris/issues/12742","id":1300428709,"node_id":"IC_kwDOBfSlxs5Ngvel","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-02T13:45:38Z","updated_at":"2022-11-02T13:45:38Z","author_association":"CONTRIBUTOR","body":"PR approved by at least one committer and no changes requested.","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1300428709/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1300428786","html_url":"https://github.com/apache/doris/pull/12742#issuecomment-1300428786","issue_url":"https://api.github.com/repos/apache/doris/issues/12742","id":1300428786,"node_id":"IC_kwDOBfSlxs5Ngvfy","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-02T13:45:41Z","updated_at":"2022-11-02T13:45:41Z","author_association":"CONTRIBUTOR","body":"PR approved by anyone and no changes requested.","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1300428786/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1300435444","html_url":"https://github.com/apache/doris/pull/12866#issuecomment-1300435444","issue_url":"https://api.github.com/repos/apache/doris/issues/12866","id":1300435444,"node_id":"IC_kwDOBfSlxs5NgxH0","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-02T13:48:52Z","updated_at":"2022-11-02T13:48:52Z","author_association":"CONTRIBUTOR","body":"PR approved by at least one committer and no changes requested.","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1300435444/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1300449377","html_url":"https://github.com/apache/doris/pull/13907#issuecomment-1300449377","issue_url":"https://api.github.com/repos/apache/doris/issues/13907","id":1300449377,"node_id":"IC_kwDOBfSlxs5Ng0hh","user":{"login":"hello-stephen","id":27881198,"node_id":"MDQ6VXNlcjI3ODgxMTk4","avatar_url":"https://avatars.githubusercontent.com/u/27881198?v=4","gravatar_id":"","url":"https://api.github.com/users/hello-stephen","html_url":"https://github.com/hello-stephen","followers_url":"https://api.github.com/users/hello-stephen/followers","following_url":"https://api.github.com/users/hello-stephen/following{/other_user}","gists_url":"https://api.github.com/users/hello-stephen/gists{/gist_id}","starred_url":"https://api.github.com/users/hello-stephen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hello-stephen/subscriptions","organizations_url":"https://api.github.com/users/hello-stephen/orgs","repos_url":"https://api.github.com/users/hello-stephen/repos","events_url":"https://api.github.com/users/hello-stephen/events{/privacy}","received_events_url":"https://api.github.com/users/hello-stephen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-11-02T13:54:51Z","updated_at":"2022-11-02T13:54:51Z","author_association":"CONTRIBUTOR","body":"TeamCity pipeline, clickbench performance test result:\n the sum of best hot time: 38.35 seconds\n load time: 567 seconds\n storage size: 17154699349 Bytes\n https://doris-community-test-1308700295.cos.ap-hongkong.myqcloud.com/tmp/20221102135448_clickbench_pr_38454.html","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1300449377/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1300552198","html_url":"https://github.com/apache/doris/pull/13909#issuecomment-1300552198","issue_url":"https://api.github.com/repos/apache/doris/issues/13909","id":1300552198,"node_id":"IC_kwDOBfSlxs5NhNoG","user":{"login":"hello-stephen","id":27881198,"node_id":"MDQ6VXNlcjI3ODgxMTk4","avatar_url":"https://avatars.githubusercontent.com/u/27881198?v=4","gravatar_id":"","url":"https://api.github.com/users/hello-stephen","html_url":"https://github.com/hello-stephen","followers_url":"https://api.github.com/users/hello-stephen/followers","following_url":"https://api.github.com/users/hello-stephen/following{/other_user}","gists_url":"https://api.github.com/users/hello-stephen/gists{/gist_id}","starred_url":"https://api.github.com/users/hello-stephen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hello-stephen/subscriptions","organizations_url":"https://api.github.com/users/hello-stephen/orgs","repos_url":"https://api.github.com/users/hello-stephen/repos","events_url":"https://api.github.com/users/hello-stephen/events{/privacy}","received_events_url":"https://api.github.com/users/hello-stephen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-11-02T14:38:11Z","updated_at":"2022-11-03T06:10:00Z","author_association":"CONTRIBUTOR","body":"TeamCity pipeline, clickbench performance test result:\n the sum of best hot time: 37.65 seconds\n load time: 605 seconds\n storage size: 17179856289 Bytes\n https://doris-community-test-1308700295.cos.ap-hongkong.myqcloud.com/tmp/20221103060957_clickbench_pr_38983.html","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1300552198/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1300692142","html_url":"https://github.com/apache/doris/pull/13911#issuecomment-1300692142","issue_url":"https://api.github.com/repos/apache/doris/issues/13911","id":1300692142,"node_id":"IC_kwDOBfSlxs5Nhvyu","user":{"login":"hello-stephen","id":27881198,"node_id":"MDQ6VXNlcjI3ODgxMTk4","avatar_url":"https://avatars.githubusercontent.com/u/27881198?v=4","gravatar_id":"","url":"https://api.github.com/users/hello-stephen","html_url":"https://github.com/hello-stephen","followers_url":"https://api.github.com/users/hello-stephen/followers","following_url":"https://api.github.com/users/hello-stephen/following{/other_user}","gists_url":"https://api.github.com/users/hello-stephen/gists{/gist_id}","starred_url":"https://api.github.com/users/hello-stephen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hello-stephen/subscriptions","organizations_url":"https://api.github.com/users/hello-stephen/orgs","repos_url":"https://api.github.com/users/hello-stephen/repos","events_url":"https://api.github.com/users/hello-stephen/events{/privacy}","received_events_url":"https://api.github.com/users/hello-stephen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-11-02T15:32:39Z","updated_at":"2022-11-03T04:18:15Z","author_association":"CONTRIBUTOR","body":"TeamCity pipeline, clickbench performance test result:\n the sum of best hot time: 38.24 seconds\n load time: 580 seconds\n storage size: 17154810735 Bytes\n https://doris-community-test-1308700295.cos.ap-hongkong.myqcloud.com/tmp/20221103041812_clickbench_pr_38910.html","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1300692142/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1300703747","html_url":"https://github.com/apache/doris/pull/13908#issuecomment-1300703747","issue_url":"https://api.github.com/repos/apache/doris/issues/13908","id":1300703747,"node_id":"IC_kwDOBfSlxs5NhyoD","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-02T15:37:11Z","updated_at":"2022-11-02T15:37:11Z","author_association":"CONTRIBUTOR","body":"PR approved by at least one committer and no changes requested.","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1300703747/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1300703853","html_url":"https://github.com/apache/doris/pull/13908#issuecomment-1300703853","issue_url":"https://api.github.com/repos/apache/doris/issues/13908","id":1300703853,"node_id":"IC_kwDOBfSlxs5Nhypt","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-02T15:37:13Z","updated_at":"2022-11-02T15:37:13Z","author_association":"CONTRIBUTOR","body":"PR approved by anyone and no changes requested.","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1300703853/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1300713558","html_url":"https://github.com/apache/doris/issues/13717#issuecomment-1300713558","issue_url":"https://api.github.com/repos/apache/doris/issues/13717","id":1300713558,"node_id":"IC_kwDOBfSlxs5Nh1BW","user":{"login":"Yulei-Yang","id":28004179,"node_id":"MDQ6VXNlcjI4MDA0MTc5","avatar_url":"https://avatars.githubusercontent.com/u/28004179?v=4","gravatar_id":"","url":"https://api.github.com/users/Yulei-Yang","html_url":"https://github.com/Yulei-Yang","followers_url":"https://api.github.com/users/Yulei-Yang/followers","following_url":"https://api.github.com/users/Yulei-Yang/following{/other_user}","gists_url":"https://api.github.com/users/Yulei-Yang/gists{/gist_id}","starred_url":"https://api.github.com/users/Yulei-Yang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Yulei-Yang/subscriptions","organizations_url":"https://api.github.com/users/Yulei-Yang/orgs","repos_url":"https://api.github.com/users/Yulei-Yang/repos","events_url":"https://api.github.com/users/Yulei-Yang/events{/privacy}","received_events_url":"https://api.github.com/users/Yulei-Yang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-11-02T15:41:05Z","updated_at":"2022-11-02T15:41:05Z","author_association":"CONTRIBUTOR","body":"already been merged to master branch, close it","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1300713558/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1300766000","html_url":"https://github.com/apache/doris/pull/13912#issuecomment-1300766000","issue_url":"https://api.github.com/repos/apache/doris/issues/13912","id":1300766000,"node_id":"IC_kwDOBfSlxs5NiB0w","user":{"login":"hello-stephen","id":27881198,"node_id":"MDQ6VXNlcjI3ODgxMTk4","avatar_url":"https://avatars.githubusercontent.com/u/27881198?v=4","gravatar_id":"","url":"https://api.github.com/users/hello-stephen","html_url":"https://github.com/hello-stephen","followers_url":"https://api.github.com/users/hello-stephen/followers","following_url":"https://api.github.com/users/hello-stephen/following{/other_user}","gists_url":"https://api.github.com/users/hello-stephen/gists{/gist_id}","starred_url":"https://api.github.com/users/hello-stephen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hello-stephen/subscriptions","organizations_url":"https://api.github.com/users/hello-stephen/orgs","repos_url":"https://api.github.com/users/hello-stephen/repos","events_url":"https://api.github.com/users/hello-stephen/events{/privacy}","received_events_url":"https://api.github.com/users/hello-stephen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-11-02T16:01:36Z","updated_at":"2022-11-02T16:01:36Z","author_association":"CONTRIBUTOR","body":"TeamCity pipeline, clickbench performance test result:\n the sum of best hot time: 38.73 seconds\n load time: 574 seconds\n storage size: 17155402002 Bytes\n https://doris-community-test-1308700295.cos.ap-hongkong.myqcloud.com/tmp/20221102160131_clickbench_pr_38643.html","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1300766000/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1300823405","html_url":"https://github.com/apache/doris/pull/13914#issuecomment-1300823405","issue_url":"https://api.github.com/repos/apache/doris/issues/13914","id":1300823405,"node_id":"IC_kwDOBfSlxs5NiP1t","user":{"login":"hello-stephen","id":27881198,"node_id":"MDQ6VXNlcjI3ODgxMTk4","avatar_url":"https://avatars.githubusercontent.com/u/27881198?v=4","gravatar_id":"","url":"https://api.github.com/users/hello-stephen","html_url":"https://github.com/hello-stephen","followers_url":"https://api.github.com/users/hello-stephen/followers","following_url":"https://api.github.com/users/hello-stephen/following{/other_user}","gists_url":"https://api.github.com/users/hello-stephen/gists{/gist_id}","starred_url":"https://api.github.com/users/hello-stephen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hello-stephen/subscriptions","organizations_url":"https://api.github.com/users/hello-stephen/orgs","repos_url":"https://api.github.com/users/hello-stephen/repos","events_url":"https://api.github.com/users/hello-stephen/events{/privacy}","received_events_url":"https://api.github.com/users/hello-stephen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-11-02T16:23:32Z","updated_at":"2022-12-10T05:17:12Z","author_association":"CONTRIBUTOR","body":"TeamCity pipeline, clickbench performance test result:\n the sum of best hot time: 37.47 seconds\n load time: 484 seconds\n storage size: 17123356951 Bytes\n https://doris-community-test-1308700295.cos.ap-hongkong.myqcloud.com/tmp/20221210051708_clickbench_pr_61260.html","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1300823405/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1300912888","html_url":"https://github.com/apache/doris/pull/13917#issuecomment-1300912888","issue_url":"https://api.github.com/repos/apache/doris/issues/13917","id":1300912888,"node_id":"IC_kwDOBfSlxs5Nilr4","user":{"login":"hello-stephen","id":27881198,"node_id":"MDQ6VXNlcjI3ODgxMTk4","avatar_url":"https://avatars.githubusercontent.com/u/27881198?v=4","gravatar_id":"","url":"https://api.github.com/users/hello-stephen","html_url":"https://github.com/hello-stephen","followers_url":"https://api.github.com/users/hello-stephen/followers","following_url":"https://api.github.com/users/hello-stephen/following{/other_user}","gists_url":"https://api.github.com/users/hello-stephen/gists{/gist_id}","starred_url":"https://api.github.com/users/hello-stephen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hello-stephen/subscriptions","organizations_url":"https://api.github.com/users/hello-stephen/orgs","repos_url":"https://api.github.com/users/hello-stephen/repos","events_url":"https://api.github.com/users/hello-stephen/events{/privacy}","received_events_url":"https://api.github.com/users/hello-stephen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-11-02T16:59:48Z","updated_at":"2022-11-10T06:49:43Z","author_association":"CONTRIBUTOR","body":"TeamCity pipeline, clickbench performance test result:\n the sum of best hot time: 35.74 seconds\n load time: 425 seconds\n storage size: 17154643977 Bytes\n https://doris-community-test-1308700295.cos.ap-hongkong.myqcloud.com/tmp/20221110064940_clickbench_pr_43194.html","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1300912888/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1300929016","html_url":"https://github.com/apache/doris/pull/13916#issuecomment-1300929016","issue_url":"https://api.github.com/repos/apache/doris/issues/13916","id":1300929016,"node_id":"IC_kwDOBfSlxs5Nipn4","user":{"login":"hello-stephen","id":27881198,"node_id":"MDQ6VXNlcjI3ODgxMTk4","avatar_url":"https://avatars.githubusercontent.com/u/27881198?v=4","gravatar_id":"","url":"https://api.github.com/users/hello-stephen","html_url":"https://github.com/hello-stephen","followers_url":"https://api.github.com/users/hello-stephen/followers","following_url":"https://api.github.com/users/hello-stephen/following{/other_user}","gists_url":"https://api.github.com/users/hello-stephen/gists{/gist_id}","starred_url":"https://api.github.com/users/hello-stephen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hello-stephen/subscriptions","organizations_url":"https://api.github.com/users/hello-stephen/orgs","repos_url":"https://api.github.com/users/hello-stephen/repos","events_url":"https://api.github.com/users/hello-stephen/events{/privacy}","received_events_url":"https://api.github.com/users/hello-stephen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-11-02T17:06:41Z","updated_at":"2022-11-02T17:06:41Z","author_association":"CONTRIBUTOR","body":"TeamCity pipeline, clickbench performance test result:\n the sum of best hot time: 38.03 seconds\n load time: 577 seconds\n storage size: 17154865250 Bytes\n https://doris-community-test-1308700295.cos.ap-hongkong.myqcloud.com/tmp/20221102170638_clickbench_pr_38686.html","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1300929016/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1300963352","html_url":"https://github.com/apache/doris/pull/13918#issuecomment-1300963352","issue_url":"https://api.github.com/repos/apache/doris/issues/13918","id":1300963352,"node_id":"IC_kwDOBfSlxs5NiyAY","user":{"login":"hello-stephen","id":27881198,"node_id":"MDQ6VXNlcjI3ODgxMTk4","avatar_url":"https://avatars.githubusercontent.com/u/27881198?v=4","gravatar_id":"","url":"https://api.github.com/users/hello-stephen","html_url":"https://github.com/hello-stephen","followers_url":"https://api.github.com/users/hello-stephen/followers","following_url":"https://api.github.com/users/hello-stephen/following{/other_user}","gists_url":"https://api.github.com/users/hello-stephen/gists{/gist_id}","starred_url":"https://api.github.com/users/hello-stephen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hello-stephen/subscriptions","organizations_url":"https://api.github.com/users/hello-stephen/orgs","repos_url":"https://api.github.com/users/hello-stephen/repos","events_url":"https://api.github.com/users/hello-stephen/events{/privacy}","received_events_url":"https://api.github.com/users/hello-stephen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-11-02T17:21:04Z","updated_at":"2022-11-03T02:49:33Z","author_association":"CONTRIBUTOR","body":"TeamCity pipeline, clickbench performance test result:\n the sum of best hot time: 38.33 seconds\n load time: 706 seconds\n storage size: 17182943516 Bytes\n https://doris-community-test-1308700295.cos.ap-hongkong.myqcloud.com/tmp/20221103024929_clickbench_pr_38831.html","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1300963352/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301026332","html_url":"https://github.com/apache/doris/pull/13919#issuecomment-1301026332","issue_url":"https://api.github.com/repos/apache/doris/issues/13919","id":1301026332,"node_id":"IC_kwDOBfSlxs5NjBYc","user":{"login":"hello-stephen","id":27881198,"node_id":"MDQ6VXNlcjI3ODgxMTk4","avatar_url":"https://avatars.githubusercontent.com/u/27881198?v=4","gravatar_id":"","url":"https://api.github.com/users/hello-stephen","html_url":"https://github.com/hello-stephen","followers_url":"https://api.github.com/users/hello-stephen/followers","following_url":"https://api.github.com/users/hello-stephen/following{/other_user}","gists_url":"https://api.github.com/users/hello-stephen/gists{/gist_id}","starred_url":"https://api.github.com/users/hello-stephen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hello-stephen/subscriptions","organizations_url":"https://api.github.com/users/hello-stephen/orgs","repos_url":"https://api.github.com/users/hello-stephen/repos","events_url":"https://api.github.com/users/hello-stephen/events{/privacy}","received_events_url":"https://api.github.com/users/hello-stephen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-11-02T18:04:07Z","updated_at":"2022-11-02T18:04:07Z","author_association":"CONTRIBUTOR","body":"TeamCity pipeline, clickbench performance test result:\n the sum of best hot time: 38.3 seconds\n load time: 575 seconds\n storage size: 17154821257 Bytes\n https://doris-community-test-1308700295.cos.ap-hongkong.myqcloud.com/tmp/20221102180404_clickbench_pr_38737.html","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301026332/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301101509","html_url":"https://github.com/apache/doris/pull/13920#issuecomment-1301101509","issue_url":"https://api.github.com/repos/apache/doris/issues/13920","id":1301101509,"node_id":"IC_kwDOBfSlxs5NjTvF","user":{"login":"hello-stephen","id":27881198,"node_id":"MDQ6VXNlcjI3ODgxMTk4","avatar_url":"https://avatars.githubusercontent.com/u/27881198?v=4","gravatar_id":"","url":"https://api.github.com/users/hello-stephen","html_url":"https://github.com/hello-stephen","followers_url":"https://api.github.com/users/hello-stephen/followers","following_url":"https://api.github.com/users/hello-stephen/following{/other_user}","gists_url":"https://api.github.com/users/hello-stephen/gists{/gist_id}","starred_url":"https://api.github.com/users/hello-stephen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hello-stephen/subscriptions","organizations_url":"https://api.github.com/users/hello-stephen/orgs","repos_url":"https://api.github.com/users/hello-stephen/repos","events_url":"https://api.github.com/users/hello-stephen/events{/privacy}","received_events_url":"https://api.github.com/users/hello-stephen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-11-02T19:16:22Z","updated_at":"2022-11-03T08:01:23Z","author_association":"CONTRIBUTOR","body":"TeamCity pipeline, clickbench performance test result:\n the sum of best hot time: 37.9 seconds\n load time: 574 seconds\n storage size: 17154644836 Bytes\n https://doris-community-test-1308700295.cos.ap-hongkong.myqcloud.com/tmp/20221103080120_clickbench_pr_39119.html","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301101509/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301162361","html_url":"https://github.com/apache/doris/pull/13921#issuecomment-1301162361","issue_url":"https://api.github.com/repos/apache/doris/issues/13921","id":1301162361,"node_id":"IC_kwDOBfSlxs5Njil5","user":{"login":"hello-stephen","id":27881198,"node_id":"MDQ6VXNlcjI3ODgxMTk4","avatar_url":"https://avatars.githubusercontent.com/u/27881198?v=4","gravatar_id":"","url":"https://api.github.com/users/hello-stephen","html_url":"https://github.com/hello-stephen","followers_url":"https://api.github.com/users/hello-stephen/followers","following_url":"https://api.github.com/users/hello-stephen/following{/other_user}","gists_url":"https://api.github.com/users/hello-stephen/gists{/gist_id}","starred_url":"https://api.github.com/users/hello-stephen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hello-stephen/subscriptions","organizations_url":"https://api.github.com/users/hello-stephen/orgs","repos_url":"https://api.github.com/users/hello-stephen/repos","events_url":"https://api.github.com/users/hello-stephen/events{/privacy}","received_events_url":"https://api.github.com/users/hello-stephen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-11-02T20:00:14Z","updated_at":"2022-11-09T07:18:22Z","author_association":"CONTRIBUTOR","body":"TeamCity pipeline, clickbench performance test result:\n the sum of best hot time: 34.6 seconds\n load time: 510 seconds\n storage size: 17180297648 Bytes\n https://doris-community-test-1308700295.cos.ap-hongkong.myqcloud.com/tmp/20221109071819_clickbench_pr_42539.html","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301162361/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301193142","html_url":"https://github.com/apache/doris/pull/13922#issuecomment-1301193142","issue_url":"https://api.github.com/repos/apache/doris/issues/13922","id":1301193142,"node_id":"IC_kwDOBfSlxs5NjqG2","user":{"login":"hello-stephen","id":27881198,"node_id":"MDQ6VXNlcjI3ODgxMTk4","avatar_url":"https://avatars.githubusercontent.com/u/27881198?v=4","gravatar_id":"","url":"https://api.github.com/users/hello-stephen","html_url":"https://github.com/hello-stephen","followers_url":"https://api.github.com/users/hello-stephen/followers","following_url":"https://api.github.com/users/hello-stephen/following{/other_user}","gists_url":"https://api.github.com/users/hello-stephen/gists{/gist_id}","starred_url":"https://api.github.com/users/hello-stephen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hello-stephen/subscriptions","organizations_url":"https://api.github.com/users/hello-stephen/orgs","repos_url":"https://api.github.com/users/hello-stephen/repos","events_url":"https://api.github.com/users/hello-stephen/events{/privacy}","received_events_url":"https://api.github.com/users/hello-stephen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-11-02T20:32:23Z","updated_at":"2022-11-02T20:32:23Z","author_association":"CONTRIBUTOR","body":"TeamCity pipeline, clickbench performance test result:\n the sum of best hot time: 37.87 seconds\n load time: 571 seconds\n storage size: 17154810740 Bytes\n https://doris-community-test-1308700295.cos.ap-hongkong.myqcloud.com/tmp/20221102203220_clickbench_pr_38807.html","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301193142/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301511155","html_url":"https://github.com/apache/doris/pull/9264#issuecomment-1301511155","issue_url":"https://api.github.com/repos/apache/doris/issues/9264","id":1301511155,"node_id":"IC_kwDOBfSlxs5Nk3vz","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-03T00:11:20Z","updated_at":"2022-11-03T00:11:20Z","author_association":"CONTRIBUTOR","body":"We're closing this PR because it hasn't been updated in a while.\nThis isn't a judgement on the merit of the PR in any way. It's just a way of keeping the PR queue manageable.\nIf you'd like to revive this PR, please reopen it and feel free a maintainer to remove the Stale tag!","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301511155/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301522922","html_url":"https://github.com/apache/doris/pull/13921#issuecomment-1301522922","issue_url":"https://api.github.com/repos/apache/doris/issues/13921","id":1301522922,"node_id":"IC_kwDOBfSlxs5Nk6nq","user":{"login":"yiguolei","id":9208457,"node_id":"MDQ6VXNlcjkyMDg0NTc=","avatar_url":"https://avatars.githubusercontent.com/u/9208457?v=4","gravatar_id":"","url":"https://api.github.com/users/yiguolei","html_url":"https://github.com/yiguolei","followers_url":"https://api.github.com/users/yiguolei/followers","following_url":"https://api.github.com/users/yiguolei/following{/other_user}","gists_url":"https://api.github.com/users/yiguolei/gists{/gist_id}","starred_url":"https://api.github.com/users/yiguolei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yiguolei/subscriptions","organizations_url":"https://api.github.com/users/yiguolei/orgs","repos_url":"https://api.github.com/users/yiguolei/repos","events_url":"https://api.github.com/users/yiguolei/events{/privacy}","received_events_url":"https://api.github.com/users/yiguolei/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-11-03T00:35:16Z","updated_at":"2022-11-03T00:35:16Z","author_association":"CONTRIBUTOR","body":"Great！！！","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301522922/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301537666","html_url":"https://github.com/apache/doris/pull/13916#issuecomment-1301537666","issue_url":"https://api.github.com/repos/apache/doris/issues/13916","id":1301537666,"node_id":"IC_kwDOBfSlxs5Nk-OC","user":{"login":"yiguolei","id":9208457,"node_id":"MDQ6VXNlcjkyMDg0NTc=","avatar_url":"https://avatars.githubusercontent.com/u/9208457?v=4","gravatar_id":"","url":"https://api.github.com/users/yiguolei","html_url":"https://github.com/yiguolei","followers_url":"https://api.github.com/users/yiguolei/followers","following_url":"https://api.github.com/users/yiguolei/following{/other_user}","gists_url":"https://api.github.com/users/yiguolei/gists{/gist_id}","starred_url":"https://api.github.com/users/yiguolei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yiguolei/subscriptions","organizations_url":"https://api.github.com/users/yiguolei/orgs","repos_url":"https://api.github.com/users/yiguolei/repos","events_url":"https://api.github.com/users/yiguolei/events{/privacy}","received_events_url":"https://api.github.com/users/yiguolei/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-11-03T01:08:59Z","updated_at":"2022-11-03T01:08:59Z","author_association":"CONTRIBUTOR","body":"Please add sql based regression test.","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301537666/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301558197","html_url":"https://github.com/apache/doris/pull/13868#issuecomment-1301558197","issue_url":"https://api.github.com/repos/apache/doris/issues/13868","id":1301558197,"node_id":"IC_kwDOBfSlxs5NlDO1","user":{"login":"yiguolei","id":9208457,"node_id":"MDQ6VXNlcjkyMDg0NTc=","avatar_url":"https://avatars.githubusercontent.com/u/9208457?v=4","gravatar_id":"","url":"https://api.github.com/users/yiguolei","html_url":"https://github.com/yiguolei","followers_url":"https://api.github.com/users/yiguolei/followers","following_url":"https://api.github.com/users/yiguolei/following{/other_user}","gists_url":"https://api.github.com/users/yiguolei/gists{/gist_id}","starred_url":"https://api.github.com/users/yiguolei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yiguolei/subscriptions","organizations_url":"https://api.github.com/users/yiguolei/orgs","repos_url":"https://api.github.com/users/yiguolei/repos","events_url":"https://api.github.com/users/yiguolei/events{/privacy}","received_events_url":"https://api.github.com/users/yiguolei/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-11-03T01:52:36Z","updated_at":"2022-11-03T01:52:36Z","author_association":"CONTRIBUTOR","body":"Will not support repeat function during upgrade in vectorized engine.","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301558197/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301582499","html_url":"https://github.com/apache/doris/pull/13925#issuecomment-1301582499","issue_url":"https://api.github.com/repos/apache/doris/issues/13925","id":1301582499,"node_id":"IC_kwDOBfSlxs5NlJKj","user":{"login":"hello-stephen","id":27881198,"node_id":"MDQ6VXNlcjI3ODgxMTk4","avatar_url":"https://avatars.githubusercontent.com/u/27881198?v=4","gravatar_id":"","url":"https://api.github.com/users/hello-stephen","html_url":"https://github.com/hello-stephen","followers_url":"https://api.github.com/users/hello-stephen/followers","following_url":"https://api.github.com/users/hello-stephen/following{/other_user}","gists_url":"https://api.github.com/users/hello-stephen/gists{/gist_id}","starred_url":"https://api.github.com/users/hello-stephen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hello-stephen/subscriptions","organizations_url":"https://api.github.com/users/hello-stephen/orgs","repos_url":"https://api.github.com/users/hello-stephen/repos","events_url":"https://api.github.com/users/hello-stephen/events{/privacy}","received_events_url":"https://api.github.com/users/hello-stephen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-11-03T02:46:53Z","updated_at":"2022-11-03T02:46:53Z","author_association":"CONTRIBUTOR","body":"TeamCity pipeline, clickbench performance test result:\n the sum of best hot time: 38.18 seconds\n load time: 608 seconds\n storage size: 17179997360 Bytes\n https://doris-community-test-1308700295.cos.ap-hongkong.myqcloud.com/tmp/20221103024650_clickbench_pr_38838.html","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301582499/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301592104","html_url":"https://github.com/apache/doris/pull/13922#issuecomment-1301592104","issue_url":"https://api.github.com/repos/apache/doris/issues/13922","id":1301592104,"node_id":"IC_kwDOBfSlxs5NlLgo","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-03T03:07:07Z","updated_at":"2022-11-03T03:07:07Z","author_association":"CONTRIBUTOR","body":"PR approved by at least one committer and no changes requested.","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301592104/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301592130","html_url":"https://github.com/apache/doris/pull/13922#issuecomment-1301592130","issue_url":"https://api.github.com/repos/apache/doris/issues/13922","id":1301592130,"node_id":"IC_kwDOBfSlxs5NlLhC","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-03T03:07:10Z","updated_at":"2022-11-03T03:07:10Z","author_association":"CONTRIBUTOR","body":"PR approved by anyone and no changes requested.","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301592130/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301592137","html_url":"https://github.com/apache/doris/pull/13927#issuecomment-1301592137","issue_url":"https://api.github.com/repos/apache/doris/issues/13927","id":1301592137,"node_id":"IC_kwDOBfSlxs5NlLhJ","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-03T03:07:10Z","updated_at":"2022-11-03T03:07:10Z","author_association":"CONTRIBUTOR","body":"PR approved by at least one committer and no changes requested.","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301592137/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301592168","html_url":"https://github.com/apache/doris/pull/13927#issuecomment-1301592168","issue_url":"https://api.github.com/repos/apache/doris/issues/13927","id":1301592168,"node_id":"IC_kwDOBfSlxs5NlLho","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-03T03:07:13Z","updated_at":"2022-11-03T03:07:13Z","author_association":"CONTRIBUTOR","body":"PR approved by anyone and no changes requested.","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301592168/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301592339","html_url":"https://github.com/apache/doris/pull/13434#issuecomment-1301592339","issue_url":"https://api.github.com/repos/apache/doris/issues/13434","id":1301592339,"node_id":"IC_kwDOBfSlxs5NlLkT","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-03T03:07:29Z","updated_at":"2022-11-03T03:07:29Z","author_association":"CONTRIBUTOR","body":"PR approved by at least one committer and no changes requested.","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301592339/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301592361","html_url":"https://github.com/apache/doris/pull/13434#issuecomment-1301592361","issue_url":"https://api.github.com/repos/apache/doris/issues/13434","id":1301592361,"node_id":"IC_kwDOBfSlxs5NlLkp","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-03T03:07:31Z","updated_at":"2022-11-03T03:07:31Z","author_association":"CONTRIBUTOR","body":"PR approved by anyone and no changes requested.","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301592361/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301601963","html_url":"https://github.com/apache/doris/pull/13259#issuecomment-1301601963","issue_url":"https://api.github.com/repos/apache/doris/issues/13259","id":1301601963,"node_id":"IC_kwDOBfSlxs5NlN6r","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-03T03:29:22Z","updated_at":"2022-11-03T03:29:22Z","author_association":"CONTRIBUTOR","body":"#### `sh-checker report`\n\nTo get the full details, please check in the [job](\"https://github.com/apache/doris/actions/runs/3382786622\") output.\n\n<details>\n<summary>shellcheck errors</summary>\n\n```\n\n'shellcheck ' returned error 1 finding the following syntactical issues:\n\n----------\n\nIn teamcity/doris/benchmark/clickbench/common/check_and_kill_deleted_proc.sh line 11:\ncheck=$(lsof -i:$port|awk '{print $2}'|wc -l)\n                ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \ncheck=$(lsof -i:\"$port\"|awk '{print $2}'|wc -l)\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_and_kill_deleted_proc.sh line 12:\nif [ \"check$check\" != \"check0\" ];then\n   ^---------------------------^ SC2292 (style): Prefer [[ ]] over [ ] for tests in Bash/Ksh.\n           ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \nif [[ \"check${check}\" != \"check0\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_and_kill_deleted_proc.sh line 13:\n    if [ \"check\"${case_level} == \"check\" ];then\n       ^-- SC2292 (style): Prefer [[ ]] over [ ] for tests in Bash/Ksh.\n                ^-----------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n    if [[ \"check\"\"${case_level}\" == \"check\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_and_kill_deleted_proc.sh line 14:\n        check_res=$(pwdx `lsof -i:$port|grep -v PID|awk '{print $2}'`|grep $env_name|grep deleted||wc -l)\n                         ^-- SC2046 (warning): Quote this to prevent word splitting.\n                         ^-- SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n                                  ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                  ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                           ^-------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                                                           ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        check_res=$(pwdx $(lsof -i:\"$port\"|grep -v PID|awk '{print $2}')|grep $env_name|grep deleted||wc -l)\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_and_kill_deleted_proc.sh line 16:\n        check_res=$(pwdx `lsof -i:$port|grep -v PID|awk '{print $2}'`|grep $env_name|grep $case_level|grep deleted||wc -l)\n                         ^-- SC2046 (warning): Quote this to prevent word splitting.\n                         ^-- SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n                                  ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                  ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                           ^-------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                                                           ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                                          ^---------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                                                                          ^---------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        check_res=$(pwdx $(lsof -i:\"$port\"|grep -v PID|awk '{print $2}')|grep $env_name|grep $case_level|grep deleted||wc -l)\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_and_kill_deleted_proc.sh line 18:\n    if [ \"check$check_res\" != \"check0\" ];then\n       ^-- SC2292 (style): Prefer [[ ]] over [ ] for tests in Bash/Ksh.\n               ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    if [[ \"check${check_res}\" != \"check0\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_and_kill_deleted_proc.sh line 19:\n        be_pid=(`lsof -i:$port|grep -v PID|awk '{print $2}'`)\n                ^-- SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).\n                ^-- SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n                         ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                         ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        be_pid=($(lsof -i:\"$port\"|grep -v PID|awk '{print $2}'))\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_and_kill_deleted_proc.sh line 20:\n        echo \"Detected residual processes: ${be_pid}\"\n                                           ^-------^ SC2128 (warning): Expanding an array without an index only gives the first element.\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_and_kill_deleted_proc.sh line 21:\n        echo \"kill residual processes: kill -9 ${be_pid}\"\n                                               ^-------^ SC2128 (warning): Expanding an array without an index only gives the first element.\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_and_kill_deleted_proc.sh line 22:\n        kill -9 $be_pid\n                ^-----^ SC2128 (warning): Expanding an array without an index only gives the first element.\n                ^-----^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                ^-----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        kill -9 \"$be_pid\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 29:\n    while [ 1 -eq 1 ]\n          ^---------^ SC2292 (style): Prefer [[ ]] over [ ] for tests in Bash/Ksh.\n              ^-^ SC2050 (warning): This expression is constant. Did you forget the $ on a variable?\n\nDid you mean: \n    while [[ 1 -eq 1 ]]\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 32:\n        res=($(curl --header \"authorization: Bearer ${GITHUB_TOKEN}\" https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files?per_page=$per_page\\&page=$page|jq -r '.[]|select(.status = \"removed\")| .filename'))\n             ^-- SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).\n                                                                                                  ^------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                                                                           ^-----^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                                                                                         ^------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                                                                                                                                 ^-------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                                                                                                                 ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                                                                                                                 ^---^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                                                                                                                                 ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        res=($(curl --header \"authorization: Bearer ${GITHUB_TOKEN}\" https://api.github.com/repos/\"${owner}\"/\"${repo}\"/pulls/\"${pr_id}\"/files?per_page=\"$per_page\"\\&page=$page|jq -r '.[]|select(.status = \"removed\")| .filename'))\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 35:\n        if [ ${res_len} -ne 0 ];then\n           ^------------------^ SC2292 (style): Prefer [[ ]] over [ ] for tests in Bash/Ksh.\n             ^--------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n        if [[ \"${res_len}\" -ne 0 ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 36:\n            let page+=1\n            ^---------^ SC2219 (style): Instead of 'let expr', prefer (( expr )) .\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 38:\n            files=(${res[@]} ${files[*]})\n                   ^-------^ SC2206 (warning): Quote to prevent word splitting/globbing, or split robustly with mapfile or read -a.\n                             ^---------^ SC2206 (warning): Quote to prevent word splitting/globbing, or split robustly with mapfile or read -a.\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 54:\n    res=($(get_all_change_files $pr_id))\n         ^----------------------------^ SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).\n                                ^----^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    res=($(get_all_change_files \"$pr_id\"))\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 58:\n    for file in ${res[@]}\n                ^-------^ SC2068 (error): Double quote array expansions to avoid re-splitting elements.\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 61:\n\tfile_dir=$(echo $file|cut -d '/' -f 1)\n                        ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                        ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n\tfile_dir=$(echo \"$file\"|cut -d '/' -f 1)\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 62:\n        file_type=$(echo $file|rev|cut -d / -f 1|cut -d '.' -f 1|rev)\n                         ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                         ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        file_type=$(echo \"$file\"|rev|cut -d / -f 1|cut -d '.' -f 1|rev)\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 64:\n\tif [[ $file_type == \"cpp\" || $file_type == \"c\" || $file_type == \"java\" || $file_type == \"py\" || $file_type == \"h\" || $file_type == 'js' ]];then\n              ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                     ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                          ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                                  ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                                                        ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                                                                             ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n\tif [[ ${file_type} == \"cpp\" || ${file_type} == \"c\" || ${file_type} == \"java\" || ${file_type} == \"py\" || ${file_type} == \"h\" || ${file_type} == 'js' ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 68:\n\tif [[ \"check$file_dir\" == \"check${module}\" ]];then\n                    ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n\tif [[ \"check${file_dir}\" == \"check${module}\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 69:\n            let module_file+=1\n            ^----------------^ SC2219 (style): Instead of 'let expr', prefer (( expr )) .\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 89:\n    res=($(get_all_change_files $pr_id))\n         ^----------------------------^ SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).\n                                ^----^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    res=($(get_all_change_files \"$pr_id\"))\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 98:\n    for file in ${res[@]}\n                ^-------^ SC2068 (error): Double quote array expansions to avoid re-splitting elements.\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 101:\n\techo \"$file\"\n              ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n\techo \"${file}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 102:\n        file_dir=$(echo $file|cut -d '/' -f 1)\n                        ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                        ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        file_dir=$(echo \"$file\"|cut -d '/' -f 1)\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 103:\n\tif [[ $file_dir == \"docs\" ]];then\n              ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n\tif [[ ${file_dir} == \"docs\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 104:\n            let doc_num+=1\n            ^------------^ SC2219 (style): Instead of 'let expr', prefer (( expr )) .\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 106:\n        if [[ \"$file\" =~ \"docs/zh-CN/docs/sql-manual/\" || \"$file\" =~ \"docs/en/docs/sql-manual/\" ]];then\n               ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                           ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        if [[ \"${file}\" =~ \"docs/zh-CN/docs/sql-manual/\" || \"${file}\" =~ \"docs/en/docs/sql-manual/\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 107:\n            let doc_sql_manual_num+=1\n            ^-----------------------^ SC2219 (style): Instead of 'let expr', prefer (( expr )) .\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 120:\n    echo \"doc_num: $doc_num\"\n                   ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    echo \"doc_num: ${doc_num}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 121:\n    echo \"file_nums: $file_nums\"\n                     ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    echo \"file_nums: ${file_nums}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 122:\n    echo \"doc_sql_manual_num: $doc_sql_manual_num\"\n                              ^-----------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    echo \"doc_sql_manual_num: ${doc_sql_manual_num}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 123:\n    if [[ $doc_num -eq $file_nums && $doc_sql_manual_num -eq 0 ]];then\n          ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                       ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                     ^-----------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    if [[ ${doc_num} -eq ${file_nums} && ${doc_sql_manual_num} -eq 0 ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 138:\n    res=($(get_all_change_files $pr_id))\n         ^----------------------------^ SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).\n                                ^----^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    res=($(get_all_change_files \"$pr_id\"))\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 146:\n    for file in ${res[@]}\n                ^-------^ SC2068 (error): Double quote array expansions to avoid re-splitting elements.\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 148:\n        echo \"$file\"\n              ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        echo \"${file}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 150:\n        file_dir=$(echo $file|cut -d '/' -f 1)\n                        ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                        ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        file_dir=$(echo \"$file\"|cut -d '/' -f 1)\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 151:\n        if [[ $file_dir == \"be\" || $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]];then\n              ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                   ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                          ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        if [[ ${file_dir} == \"be\" || ${file_dir} == \"docs\" || ${file_dir} == \"fs_brokers\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 152:\n            let doc_num+=1\n            ^------------^ SC2219 (style): Instead of 'let expr', prefer (( expr )) .\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 156:\n    if [[ $doc_num -eq $file_nums ]];then\n          ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                       ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    if [[ ${doc_num} -eq ${file_nums} ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 171:\n    res=($(get_all_change_files $pr_id))\n         ^----------------------------^ SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).\n                                ^----^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    res=($(get_all_change_files \"$pr_id\"))\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 179:\n    for file in ${res[@]}\n                ^-------^ SC2068 (error): Double quote array expansions to avoid re-splitting elements.\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 181:\n        echo \"$file\"\n              ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        echo \"${file}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 183:\n        file_dir=$(echo $file|cut -d '/' -f 1)\n                        ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                        ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        file_dir=$(echo \"$file\"|cut -d '/' -f 1)\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 184:\n        if [[ $file_dir == \"fe\" || $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]];then\n              ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                   ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                          ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        if [[ ${file_dir} == \"fe\" || ${file_dir} == \"docs\" || ${file_dir} == \"fs_brokers\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 185:\n            let doc_num+=1\n            ^------------^ SC2219 (style): Instead of 'let expr', prefer (( expr )) .\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 189:\n    if [[ $doc_num -eq $file_nums ]];then\n          ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                       ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    if [[ ${doc_num} -eq ${file_nums} ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 200:\nif [ $# > 0 ]; then\n   ^--------^ SC2292 (style): Prefer [[ ]] over [ ] for tests in Bash/Ksh.\n        ^-- SC2071 (error): > is for string comparisons. Use -gt instead.\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 203:\n\t    check_removed_change_file $2 \"be\"\n                                      ^-- SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n\t    check_removed_change_file \"$2\" \"be\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 205:\n\t    check_all_change_files_is_under_be $2\n                                               ^-- SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n\t    check_all_change_files_is_under_be \"$2\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 207:\n\t    echo ${check_1}\n                 ^--------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n\nDid you mean: \n\t    echo \"${check_1}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 208:\n\t    echo ${check_2}\n                 ^--------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n\nDid you mean: \n\t    echo \"${check_2}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 209:\n\t    res=`expr $check_1 \\* $check_2`\n            ^-^ SC2178 (warning): Variable was used as an array but is now assigned a string.\n                ^-------------------------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n                 ^--^ SC2003 (style): expr is antiquated. Consider rewriting this using $((..)), ${} or [[ ]].\n                      ^------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                      ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                  ^------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                  ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n\t    res=$(expr \"$check_1\" \\* $check_2)\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 210:\n\t    exit $res\n                 ^--^ SC2128 (warning): Expanding an array without an index only gives the first element.\n                 ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                 ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n\t    exit \"$res\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 213:\n\t    check_removed_change_file $2 \"fe\"\n                                      ^-- SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n\t    check_removed_change_file \"$2\" \"fe\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 215:\n\t    check_all_change_files_is_under_fe $2\n                                               ^-- SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n\t    check_all_change_files_is_under_fe \"$2\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 217:\n            res=`expr $check_1 \\* $check_2`\n            ^-^ SC2178 (warning): Variable was used as an array but is now assigned a string.\n                ^-------------------------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n                 ^--^ SC2003 (style): expr is antiquated. Consider rewriting this using $((..)), ${} or [[ ]].\n                      ^------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                      ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                  ^------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                  ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n            res=$(expr \"$check_1\" \\* $check_2)\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 218:\n\t    echo ${check_1}\n                 ^--------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n\nDid you mean: \n\t    echo \"${check_1}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 219:\n\t    echo ${check_2}\n                 ^--------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n\nDid you mean: \n\t    echo \"${check_2}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 220:\n\t    exit $res\n                 ^--^ SC2128 (warning): Expanding an array without an index only gives the first element.\n                 ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                 ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n\t    exit \"$res\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 223:\n\t    check_removed_change_file $2 \"docs\"\n                                      ^-- SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n\t    check_removed_change_file \"$2\" \"docs\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 225:\n\t    check_all_change_files_is_under_doc $2\n                                                ^-- SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n\t    check_all_change_files_is_under_doc \"$2\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 227:\n            res=`expr $check_1 + $check_2`\n            ^-^ SC2178 (warning): Variable was used as an array but is now assigned a string.\n                ^------------------------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n                 ^--^ SC2003 (style): expr is antiquated. Consider rewriting this using $((..)), ${} or [[ ]].\n                      ^------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                      ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                 ^------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                 ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n            res=$(expr \"$check_1\" + $check_2)\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 228:\n\t    echo ${check_1}\n                 ^--------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n\nDid you mean: \n\t    echo \"${check_1}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 229:\n            echo ${check_2}\n                 ^--------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n\nDid you mean: \n            echo \"${check_2}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 230:\n\t    exit $res\n                 ^--^ SC2128 (warning): Expanding an array without an index only gives the first element.\n                 ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                 ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n\t    exit \"$res\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 238:\nmain $@\n     ^-- SC2068 (error): Double quote array expansions to avoid re-splitting elements.\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 6:\necho `date \"+%Y-%m-%d %H:%M:%S\"` \"start to clear oudate file!\"\n     ^-------------------------^ SC2046 (warning): Quote this to prevent word splitting.\n     ^-------------------------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n\nDid you mean: \necho $(date \"+%Y-%m-%d %H:%M:%S\") \"start to clear oudate file!\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 7:\ncd /home/work/teamcity/TeamCity/piplineWork/Compile/\n^-- SC2164 (warning): Use 'cd ... || exit' or 'cd ... || return' in case cd fails.\n\nDid you mean: \ncd /home/work/teamcity/TeamCity/piplineWork/Compile/ || exit\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 8:\nfind /home/work/teamcity/TeamCity/piplineWork/Compile/ -maxdepth 1 -mindepth 1 -mmin +${existsTime} -type d -name \"*_*\" -exec rm -rf {} \\;\n                                                                                      ^-----------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n\nDid you mean: \nfind /home/work/teamcity/TeamCity/piplineWork/Compile/ -maxdepth 1 -mindepth 1 -mmin +\"${existsTime}\" -type d -name \"*_*\" -exec rm -rf {} \\;\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 9:\ncd -\n^--^ SC2164 (warning): Use 'cd ... || exit' or 'cd ... || return' in case cd fails.\n^--^ SC2103 (info): Use a ( subshell ) to avoid having to cd back.\n\nDid you mean: \ncd - || exit\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 10:\ncd /home/work/teamcity/TeamCity/piplineWork/feUt/\n^-- SC2164 (warning): Use 'cd ... || exit' or 'cd ... || return' in case cd fails.\n\nDid you mean: \ncd /home/work/teamcity/TeamCity/piplineWork/feUt/ || exit\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 11:\nfind /home/work/teamcity/TeamCity/piplineWork/feUt/ -maxdepth 1 -mindepth 1 -mmin +${existsTime} -type d -name \"*_*\" -exec rm -rf {} \\;\n                                                                                   ^-----------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n\nDid you mean: \nfind /home/work/teamcity/TeamCity/piplineWork/feUt/ -maxdepth 1 -mindepth 1 -mmin +\"${existsTime}\" -type d -name \"*_*\" -exec rm -rf {} \\;\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 12:\ncd -\n^--^ SC2164 (warning): Use 'cd ... || exit' or 'cd ... || return' in case cd fails.\n\nDid you mean: \ncd - || exit\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 13:\ncd /home/work/teamcity/TeamCity/piplineWork/beUt/\n^-- SC2164 (warning): Use 'cd ... || exit' or 'cd ... || return' in case cd fails.\n\nDid you mean: \ncd /home/work/teamcity/TeamCity/piplineWork/beUt/ || exit\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 14:\nfind /home/work/teamcity/TeamCity/piplineWork/beUt/ -maxdepth 1 -mindepth 1 -mmin +${existsTime} -type d -name \"*_*\" -exec rm -rf {} \\;\n                                                                                   ^-----------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n\nDid you mean: \nfind /home/work/teamcity/TeamCity/piplineWork/beUt/ -maxdepth 1 -mindepth 1 -mmin +\"${existsTime}\" -type d -name \"*_*\" -exec rm -rf {} \\;\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 15:\ncd -\n^--^ SC2164 (warning): Use 'cd ... || exit' or 'cd ... || return' in case cd fails.\n\nDid you mean: \ncd - || exit\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 16:\ncd /mnt/ssd01/teamcity/TeamCity/piplineWork/Compile/\n^-- SC2164 (warning): Use 'cd ... || exit' or 'cd ... || return' in case cd fails.\n\nDid you mean: \ncd /mnt/ssd01/teamcity/TeamCity/piplineWork/Compile/ || exit\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 17:\nfind /mnt/ssd01/teamcity/TeamCity/piplineWork/Compile/ -maxdepth 1 -mindepth 1 -mmin +${existsTime} -type d -name \"*_*\" -exec rm -rf {} \\;\n                                                                                      ^-----------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n\nDid you mean: \nfind /mnt/ssd01/teamcity/TeamCity/piplineWork/Compile/ -maxdepth 1 -mindepth 1 -mmin +\"${existsTime}\" -type d -name \"*_*\" -exec rm -rf {} \\;\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 18:\ncd -\n^--^ SC2164 (warning): Use 'cd ... || exit' or 'cd ... || return' in case cd fails.\n\nDid you mean: \ncd - || exit\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 19:\ncd /mnt/ssd01/teamcity/TeamCity/piplineWork/beUt/\n^-- SC2164 (warning): Use 'cd ... || exit' or 'cd ... || return' in case cd fails.\n\nDid you mean: \ncd /mnt/ssd01/teamcity/TeamCity/piplineWork/beUt/ || exit\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 20:\nfind /mnt/ssd01/teamcity/TeamCity/piplineWork/beUt/ -maxdepth 1 -mindepth 1 -mmin +${existsTime} -type d -name \"*_*\" -exec rm -rf {} \\;\n                                                                                   ^-----------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n\nDid you mean: \nfind /mnt/ssd01/teamcity/TeamCity/piplineWork/beUt/ -maxdepth 1 -mindepth 1 -mmin +\"${existsTime}\" -type d -name \"*_*\" -exec rm -rf {} \\;\n\n\nIn teamcity/doris/benchmark/clickbench/common/docker_compile.sh line 3:\nid=$(echo $RANDOM)\n   ^-------------^ SC2116 (style): Useless echo? Instead of 'cmd $(echo foo)', just use 'cmd foo'.\n          ^-----^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n          ^-----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \nid=$(echo \"$RANDOM\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/docker_compile.sh line 5:\ndocker run -i --rm --name doris-compile-$id -e TZ=Asia/Shanghai -v /etc/localtime:/etc/localtime:ro -v /home/work/.m2:/root/.m2 -v /home/work/.npm:/root/.npm -v $work_path:/root/doris apache/incubator-doris:build-env-ldb-toolchain-latest /bin/bash -c \"cd /root/doris && sh builds.sh\"\n                                        ^-^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                        ^-^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                                                                                                                 ^--------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                                                                                                                                                 ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \ndocker run -i --rm --name doris-compile-\"$id\" -e TZ=Asia/Shanghai -v /etc/localtime:/etc/localtime:ro -v /home/work/.m2:/root/.m2 -v /home/work/.npm:/root/.npm -v $work_path:/root/doris apache/incubator-doris:build-env-ldb-toolchain-latest /bin/bash -c \"cd /root/doris && sh builds.sh\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/docker_trigger_api.sh line 40:\n    docker_name=\"doris-compile-\"$(echo $RANDOM)\n                               ^-- SC1078 (warning): Did you forget to close this double quoted string?\n\n\nIn teamcity/doris/benchmark/clickbench/common/docker_trigger_api.sh line 42:\n    cmd=\"docker run -i --rm --name doris-compile-$id -e TZ=Asia/Shanghai -v /etc/localtime:/etc/localtime:ro -v /home/work/.m2:/root/.m2 -v /home/work/.npm:/root/.npm -v %system.teamcity.build.workingDir%:/root/doris apache/incubator-doris:build-env-ldb-toolchain-latest /bin/bash -c \"cd /root/doris && sh builds.sh\"\n        ^-- SC1079 (info): This is actually an end quote, but due to next char it looks suspect.\n\n\nIn teamcity/doris/benchmark/clickbench/common/docker_trigger_api.sh line 43:\n\"\n^-- SC1073 (error): Couldn't parse this double quoted string. Fix to allow more checks.\n^-- SC1009 (info): The mentioned syntax error was in this simple command.\n\n\nIn teamcity/doris/benchmark/clickbench/common/docker_trigger_api.sh line 45:\n\n^-- SC1072 (error): Expected end of double quoted string. Fix any mentioned problems and try again.\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_api.sh line 5:\n<<'COMMENT'\n^---------^ SC2188 (warning): This redirection doesn't have a command. Move to its command (or use 'true' as no-op).\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_api.sh line 145:\nif [ $# > 0 ]; then\n   ^--------^ SC2292 (style): Prefer [[ ]] over [ ] for tests in Bash/Ksh.\n        ^-- SC2071 (error): > is for string comparisons. Use -gt instead.\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_api.sh line 147:\n        --cancel_running_build) build_id=$2; cancel_running_build $build_id; shift ;;\n                                                                  ^-------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                                                  ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        --cancel_running_build) build_id=$2; cancel_running_build \"$build_id\"; shift ;;\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_api.sh line 148:\n        --cancel_pending_build) build_id=$2; cancel_pending_build $build_id; shift ;;\n                                                                  ^-------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                                                  ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        --cancel_pending_build) build_id=$2; cancel_pending_build \"$build_id\"; shift ;;\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_api.sh line 149:\n        --show_build_state) build_id=$2; res=$(show_build_state $build_id); echo $res; shift ;;\n                                                                ^-------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                                                ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                                 ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                                                                 ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        --show_build_state) build_id=$2; res=$(show_build_state \"$build_id\"); echo $res; shift ;;\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_api.sh line 150:\n        --show_build_status) build_id=$2; res=$(show_build_status $build_id); echo $res; shift ;;\n                                                                  ^-------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                                                  ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                                   ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                                                                   ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        --show_build_status) build_id=$2; res=$(show_build_status \"$build_id\"); echo $res; shift ;;\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_api.sh line 153:\n        --get_all_builds_of_pr_id) get_all_builds $2; shift ;;\n                                                  ^-- SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n        --get_all_builds_of_pr_id) get_all_builds \"$2\"; shift ;;\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_api.sh line 161:\nmain $@\n     ^-- SC2068 (error): Double quote array expansions to avoid re-splitting elements.\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 4:\nzcp_TOKEN=\"eyJ0eXAiOiAiVENWMiJ9.bW1DcHJpRWNCSktnREhLaHd5Y1lndmpycnJ3.NmEwM2E3YTEtMTVmYy00NGU0LWI1OTAtMzU3MzljODE0Njdk\"\n^-------^ SC2034 (warning): zcp_TOKEN appears unused. Verify use (or export if used externally).\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 7:\nzcp_TEAMCITY_SERVER=\"http://43.129.232.36:8111\"\n^-----------------^ SC2034 (warning): zcp_TEAMCITY_SERVER appears unused. Verify use (or export if used externally).\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 40:\n    state=$(show_build_state $build_id)\n                             ^-------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                             ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    state=$(show_build_state \"$build_id\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 41:\n    if [[ $state == \"running\" ]];then\n          ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    if [[ ${state} == \"running\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 43:\n        cmd=\"/app/rest/builds/id:$build_id\"\n                                 ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        cmd=\"/app/rest/builds/id:${build_id}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 44:\n        cmd=$cmd\" -X POST -H \\'Content-Type: application/json\\' -d \\'{ \\\"buildCancelRequest\\\": {       \\\"comment\\\": \\\"Stop obsolete running builds.\\\",      \\\"readdIntoQueue\\\": \\\"false\\\"    }  }'\"\n            ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        cmd=${cmd}\" -X POST -H \\'Content-Type: application/json\\' -d \\'{ \\\"buildCancelRequest\\\": {       \\\"comment\\\": \\\"Stop obsolete running builds.\\\",      \\\"readdIntoQueue\\\": \\\"false\\\"    }  }'\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 45:\n        url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $TEAMCITY_SERVER/$cmd\"\n                     ^-----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                               ^------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                              ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                       ^--------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                        ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        url=\"curl -s ${HEADER} \\\"${AUTHORIZATION} ${TOKEN}\\\" ${TEAMCITY_SERVER}/${cmd}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 46:\n        res=$(eval $eval)\n                   ^---^ SC2154 (warning): eval is referenced but not assigned (for output from commands, use \"$(eval ...)\" ).\n                   ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                   ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        res=$(eval \"$eval\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 47:\n        check=$(echo $res |grep status=\"UNKNOWN\")\n                     ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                     ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        check=$(echo \"$res\" |grep status=\"UNKNOWN\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 48:\n        if [[ -z $check ]];then\n                 ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        if [[ -z ${check} ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 57:\n    state=$(show_build_state $build_id)\n                             ^-------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                             ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    state=$(show_build_state \"$build_id\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 58:\n    if [[ $state == \"queued\" ]];then\n          ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    if [[ ${state} == \"queued\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 59:\n        cmd=\"app/rest/buildQueue/id:$build_id\"\n                                    ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        cmd=\"app/rest/buildQueue/id:${build_id}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 60:\n        cmd=$cmd\" -X POST -H \\'Content-Type: application/json\\' -d \\'{ \\\"buildCancelRequest\\\": {       \\\"comment\\\": \\\"Cancel obsolete queue build.\\\",      \\\"readdIntoQueue\\\": \\\"false\\\"    }  }'\"\n            ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        cmd=${cmd}\" -X POST -H \\'Content-Type: application/json\\' -d \\'{ \\\"buildCancelRequest\\\": {       \\\"comment\\\": \\\"Cancel obsolete queue build.\\\",      \\\"readdIntoQueue\\\": \\\"false\\\"    }  }'\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 61:\n        url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $TEAMCITY_SERVER/$cmd\"\n                     ^-----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                               ^------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                              ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                       ^--------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                        ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        url=\"curl -s ${HEADER} \\\"${AUTHORIZATION} ${TOKEN}\\\" ${TEAMCITY_SERVER}/${cmd}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 63:\n        res=$(eval $eval)\n                   ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                   ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        res=$(eval \"$eval\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 64:\n        check=$(echo $res |grep status=\"UNKNOWN\")\n                     ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                     ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        check=$(echo \"$res\" |grep status=\"UNKNOWN\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 65:\n        if [[ -z $check ]];then\n                 ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        if [[ -z ${check} ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 73:\n    cmd=\"app/rest/builds?locator=id:$build_id\"\n                                    ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    cmd=\"app/rest/builds?locator=id:${build_id}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 74:\n    url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $TEAMCITY_SERVER/$cmd\"\n                 ^-----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                           ^------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                          ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                   ^--------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                    ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    url=\"curl -s ${HEADER} \\\"${AUTHORIZATION} ${TOKEN}\\\" ${TEAMCITY_SERVER}/${cmd}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 76:\n    res=`eval $url`\n        ^---------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n              ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n              ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    res=$(eval \"$url\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 79:\n    check=$(echo $res|grep \"<builds count=\\\"1\\\"\")\n                 ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                 ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    check=$(echo \"$res\"|grep \"<builds count=\\\"1\\\"\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 80:\n    if [[ -z $check ]]; then\n             ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    if [[ -z ${check} ]]; then\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 84:\n    state=`echo $res |awk -F ' ' '{print $9\" \"$10\" \"$11}'|awk -F \"state=\" '{print $2}'|cut -d ' ' -f 1|sed 's/\\\"//g'`\n          ^-- SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n                ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    state=$(echo \"$res\" |awk -F ' ' '{print $9\" \"$10\" \"$11}'|awk -F \"state=\" '{print $2}'|cut -d ' ' -f 1|sed 's/\\\"//g')\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 86:\n    echo $state\n         ^----^ SC2086 (info): Double quote to prevent globbing and word splitting.\n         ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    echo \"$state\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 91:\n    cmd=\"app/rest/builds?locator=id:$build_id\"\n                                    ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    cmd=\"app/rest/builds?locator=id:${build_id}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 92:\n    url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $TEAMCITY_SERVER/$cmd\"\n                 ^-----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                           ^------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                          ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                   ^--------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                    ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    url=\"curl -s ${HEADER} \\\"${AUTHORIZATION} ${TOKEN}\\\" ${TEAMCITY_SERVER}/${cmd}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 94:\n    res=`eval $url`\n        ^---------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n              ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n              ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    res=$(eval \"$url\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 96:\n    check1=$(echo $res|grep \"<builds count=\\\"1\\\"\")\n                  ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                  ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    check1=$(echo \"$res\"|grep \"<builds count=\\\"1\\\"\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 97:\n    if [[ -z $check1 ]]; then\n             ^-----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    if [[ -z ${check1} ]]; then\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 105:\n    state=`echo $res |awk -F ' ' '{print $9\" \"$10\" \"$11}'|awk -F \"status=\" '{print $2}'|cut -d ' ' -f 1|sed 's/\\\"//g'`\n          ^-- SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n                ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    state=$(echo \"$res\" |awk -F ' ' '{print $9\" \"$10\" \"$11}'|awk -F \"status=\" '{print $2}'|cut -d ' ' -f 1|sed 's/\\\"//g')\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 107:\n    echo $state\n         ^----^ SC2086 (info): Double quote to prevent globbing and word splitting.\n         ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    echo \"$state\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 112:\n    cmd=\"app/rest/builds?locator=branch:$branch\"\n                                        ^-----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    cmd=\"app/rest/builds?locator=branch:${branch}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 113:\n    url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $TEAMCITY_SERVER/$cmd\"\n                 ^-----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                           ^------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                          ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                   ^--------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                    ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    url=\"curl -s ${HEADER} \\\"${AUTHORIZATION} ${TOKEN}\\\" ${TEAMCITY_SERVER}/${cmd}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 114:\n    res=`eval $url`\n        ^---------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n              ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n              ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    res=$(eval \"$url\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 119:\n    url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $TEAMCITY_SERVER/$cmd\"\n                 ^-----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                        ^-^ SC2089 (warning): Quotes/backslashes will be treated literally. Use an array.\n                           ^------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                          ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                   ^--------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                    ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    url=\"curl -s ${HEADER} \\\"${AUTHORIZATION} ${TOKEN}\\\" ${TEAMCITY_SERVER}/${cmd}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 121:\n    res=eval $url\n    ^-----------^ SC2209 (warning): Use var=$(command) to assign output (or quote to assign string).\n             ^--^ SC2090 (warning): Quotes/backslashes in this variable will not be respected.\n             ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    res=eval ${url}\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 126:\n    url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $JSON_HEADER $TEAMCITY_SERVER/$cmd\"\n                 ^-----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                           ^------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                          ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                   ^----------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                ^--------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                                 ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    url=\"curl -s ${HEADER} \\\"${AUTHORIZATION} ${TOKEN}\\\" ${JSON_HEADER} ${TEAMCITY_SERVER}/${cmd}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 128:\n    res=`eval $url`\n        ^---------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n              ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n              ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    res=$(eval \"$url\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/test.sh line 12:\n    while [ 1 -eq 1 ]\n          ^---------^ SC2292 (style): Prefer [[ ]] over [ ] for tests in Bash/Ksh.\n              ^-^ SC2050 (warning): This expression is constant. Did you forget the $ on a variable?\n\nDid you mean: \n    while [[ 1 -eq 1 ]]\n\n\nIn teamcity/doris/benchmark/clickbench/common/test.sh line 15:\n\tres=($(curl --header \"authorization: Bearer ${GITHUB_TOKEN}\" https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files?per_page=$per_page\\&page=$page|jq -r '.[]|select(.status = \"removed\")| .filename'))\n             ^-- SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).\n                                                                                                  ^------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                                                                           ^-----^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                                                                                         ^------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                                                                                                                                 ^-------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                                                                                                                 ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                                                                                                                 ^---^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                                                                                                                                 ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n\tres=($(curl --header \"authorization: Bearer ${GITHUB_TOKEN}\" https://api.github.com/repos/\"${owner}\"/\"${repo}\"/pulls/\"${pr_id}\"/files?per_page=\"$per_page\"\\&page=$page|jq -r '.[]|select(.status = \"removed\")| .filename'))\n\n\nIn teamcity/doris/benchmark/clickbench/common/test.sh line 17:\n        if [ ${res_len} -ne 0 ];then\n           ^------------------^ SC2292 (style): Prefer [[ ]] over [ ] for tests in Bash/Ksh.\n             ^--------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n        if [[ \"${res_len}\" -ne 0 ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/test.sh line 18:\n\t    let page+=1\n            ^---------^ SC2219 (style): Instead of 'let expr', prefer (( expr )) .\n\n\nIn teamcity/doris/benchmark/clickbench/common/test.sh line 20:\n\t    files=(${res[@]} ${files[*]})\n                   ^-------^ SC2206 (warning): Quote to prevent word splitting/globbing, or split robustly with mapfile or read -a.\n                             ^---------^ SC2206 (warning): Quote to prevent word splitting/globbing, or split robustly with mapfile or read -a.\n\n\nIn teamcity/doris/benchmark/clickbench/common/test.sh line 30:\nout=($(get_all_change_files 11154))\n     ^---------------------------^ SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check.sh line 3:\n<<'COMMENT'\n^---------^ SC2188 (warning): This redirection doesn't have a command. Move to its command (or use 'true' as no-op).\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 26:\n    res=($(curl https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files|jq -r '.[]|select(.status != \"removed\")| .filename'))\n         ^-- SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).\n                                             ^------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                      ^-----^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                                    ^------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n    res=($(curl https://api.github.com/repos/\"${owner}\"/\"${repo}\"/pulls/\"${pr_id}\"/files|jq -r '.[]|select(.status != \"removed\")| .filename'))\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 30:\n    for file in ${res[@]}\n                ^-------^ SC2068 (error): Double quote array expansions to avoid re-splitting elements.\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 33:\n        file_dir=$(echo $file|cut -d '/' -f 1)\n                        ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                        ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        file_dir=$(echo \"$file\"|cut -d '/' -f 1)\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 34:\n        if [[ $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]];then\n              ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                     ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        if [[ ${file_dir} == \"docs\" || ${file_dir} == \"fs_brokers\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 35:\n            let doc_num+=1\n            ^------------^ SC2219 (style): Instead of 'let expr', prefer (( expr )) .\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 46:\n    if [[ $doc_num -eq $file_nums ]];then\n          ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                       ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    if [[ ${doc_num} -eq ${file_nums} ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 60:\n    res=($(curl https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files|jq -r '.[]|select(.status != \"removed\")| .filename'))\n         ^-- SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).\n                                             ^------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                      ^-----^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                                    ^------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n    res=($(curl https://api.github.com/repos/\"${owner}\"/\"${repo}\"/pulls/\"${pr_id}\"/files|jq -r '.[]|select(.status != \"removed\")| .filename'))\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 65:\n    for file in ${res[@]}\n                ^-------^ SC2068 (error): Double quote array expansions to avoid re-splitting elements.\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 68:\n        file_dir=$(echo $file|cut -d '/' -f 1)\n                        ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                        ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        file_dir=$(echo \"$file\"|cut -d '/' -f 1)\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 69:\n        if [[ $file_dir == \"be\" || $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]];then\n              ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                   ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                          ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        if [[ ${file_dir} == \"be\" || ${file_dir} == \"docs\" || ${file_dir} == \"fs_brokers\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 70:\n            let doc_num+=1\n            ^------------^ SC2219 (style): Instead of 'let expr', prefer (( expr )) .\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 74:\n    if [[ $doc_num -eq $file_nums ]];then\n          ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                       ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    if [[ ${doc_num} -eq ${file_nums} ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 88:\n    res=($(curl https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files|jq -r '.[]|select(.status != \"removed\")| .filename'))\n         ^-- SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).\n                                             ^------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                      ^-----^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                                    ^------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n    res=($(curl https://api.github.com/repos/\"${owner}\"/\"${repo}\"/pulls/\"${pr_id}\"/files|jq -r '.[]|select(.status != \"removed\")| .filename'))\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 93:\n    for file in ${res[@]}\n                ^-------^ SC2068 (error): Double quote array expansions to avoid re-splitting elements.\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 96:\n        file_dir=$(echo $file|cut -d '/' -f 1)\n                        ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                        ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        file_dir=$(echo \"$file\"|cut -d '/' -f 1)\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 97:\n        if [[ $file_dir == \"fe\" || $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]];then\n              ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                   ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                          ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        if [[ ${file_dir} == \"fe\" || ${file_dir} == \"docs\" || ${file_dir} == \"fs_brokers\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 98:\n            let doc_num+=1\n            ^------------^ SC2219 (style): Instead of 'let expr', prefer (( expr )) .\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 102:\n    if [[ $doc_num -eq $file_nums ]];then\n          ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                       ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    if [[ ${doc_num} -eq ${file_nums} ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 113:\nif [ $# > 0 ]; then\n   ^--------^ SC2292 (style): Prefer [[ ]] over [ ] for tests in Bash/Ksh.\n        ^-- SC2071 (error): > is for string comparisons. Use -gt instead.\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 115:\n        --is_modify_only_invoved_be) check_all_change_files_is_under_be $2; shift ;;\n                                                                        ^-- SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n        --is_modify_only_invoved_be) check_all_change_files_is_under_be \"$2\"; shift ;;\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 116:\n        --is_modify_only_invoved_fe) check_all_change_files_is_under_fe $2; shift ;;\n                                                                        ^-- SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n        --is_modify_only_invoved_fe) check_all_change_files_is_under_fe \"$2\"; shift ;;\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 117:\n\t--is_modify_only_doc) check_all_change_files_is_under_doc $2; shift ;;\n                                                                  ^-- SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n\t--is_modify_only_doc) check_all_change_files_is_under_doc \"$2\"; shift ;;\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 124:\nmain $@\n     ^-- SC2068 (error): Double quote array expansions to avoid re-splitting elements.\n\nFor more information:\n  https://www.shellcheck.net/wiki/SC2068 -- Double quote array expansions to ...\n  https://www.shellcheck.net/wiki/SC2071 -- > is for string comparisons. Use ...\n  https://www.shellcheck.net/wiki/SC1078 -- Did you forget to close this doub...\n----------\n\nYou can address the above issues in one of three ways:\n1. Manually correct the issue in the offending shell script;\n2. Disable specific issues by adding the comment:\n  # shellcheck disable=NNNN\nabove the line that contains the issue, where NNNN is the error code;\n3. Add '-e NNNN' to the SHELLCHECK_OPTS setting in your .yml action file.\n\n\n\n```\n</details>\n\n<details>\n<summary>shfmt errors</summary>\n\n```\n\n'shfmt ' returned error 1 finding the following formatting issues:\n\n----------\n--- teamcity/doris/benchmark/clickbench/common/check_and_kill_deleted_proc.sh.orig\n+++ teamcity/doris/benchmark/clickbench/common/check_and_kill_deleted_proc.sh\n@@ -8,23 +8,22 @@\n echo \"====================================\"\n echo \"START TO DETECT RESIDUAL PROCESSES!\"\n \n-check=$(lsof -i:$port|awk '{print $2}'|wc -l)\n-if [ \"check$check\" != \"check0\" ];then\n-    if [ \"check\"${case_level} == \"check\" ];then\n-        check_res=$(pwdx `lsof -i:$port|grep -v PID|awk '{print $2}'`|grep $env_name|grep deleted||wc -l)\n+check=$(lsof -i:$port | awk '{print $2}' | wc -l)\n+if [ \"check$check\" != \"check0\" ]; then\n+    if [ \"check\"${case_level} == \"check\" ]; then\n+        check_res=$(pwdx $(lsof -i:$port | grep -v PID | awk '{print $2}') | grep $env_name | grep deleted || wc -l)\n     else\n-        check_res=$(pwdx `lsof -i:$port|grep -v PID|awk '{print $2}'`|grep $env_name|grep $case_level|grep deleted||wc -l)\n+        check_res=$(pwdx $(lsof -i:$port | grep -v PID | awk '{print $2}') | grep $env_name | grep $case_level | grep deleted || wc -l)\n     fi\n-    if [ \"check$check_res\" != \"check0\" ];then\n-        be_pid=(`lsof -i:$port|grep -v PID|awk '{print $2}'`)\n+    if [ \"check$check_res\" != \"check0\" ]; then\n+        be_pid=($(lsof -i:$port | grep -v PID | awk '{print $2}'))\n         echo \"Detected residual processes: ${be_pid}\"\n         echo \"kill residual processes: kill -9 ${be_pid}\"\n         kill -9 $be_pid\n     fi\n else\n-        echo \"No residual processes\"\n+    echo \"No residual processes\"\n fi\n \n-\n echo \"FINISH DETECT RESIDUAL PROCESSES!\"\n echo \"===================================\"\n--- teamcity/doris/benchmark/clickbench/common/check_change_file.sh.orig\n+++ teamcity/doris/benchmark/clickbench/common/check_change_file.sh\n@@ -7,7 +7,7 @@\n GITHUB_TOKEN=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\n \n usage() {\n-  echo \"\n+    echo \"\n Usage: $0 <options>\n   Optional options:\n \n@@ -16,23 +16,21 @@\n     $0 --is_modify_only_invoved_fe pr_id          if pr changed code only invoved fe doc, fs_brocker, return 0; else return 2\n     $0 --is_modify_only_invoved_doc pr_id         if pr changed code only invoved doc, fs_brocker, return 0; else return 2\n   \"\n-  exit 1\n+    exit 1\n }\n \n-\n-function get_all_change_files(){\n+function get_all_change_files() {\n     pr_id=$1\n     files=()\n \n     page=1\n     per_page=100\n-    while [ 1 -eq 1 ]\n-    do\n+    while [ 1 -eq 1 ]; do\n         #echo \"curl --header 'authorization: Bearer ${GITHUB_TOKEN}' https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files?per_page=$per_page\\&page=$page\"\n-        res=($(curl --header \"authorization: Bearer ${GITHUB_TOKEN}\" https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files?per_page=$per_page\\&page=$page|jq -r '.[]|select(.status = \"removed\")| .filename'))\n+        res=($(curl --header \"authorization: Bearer ${GITHUB_TOKEN}\" https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files?per_page=$per_page\\&page=$page | jq -r '.[]|select(.status = \"removed\")| .filename'))\n         res_len=${#res[@]}\n         #echo \"================\"$res_len\n-        if [ ${res_len} -ne 0 ];then\n+        if [ ${res_len} -ne 0 ]; then\n             let page+=1\n             #files=\"${res[@]}\"\"$files\"\n             files=(${res[@]} ${files[*]})\n@@ -44,8 +42,7 @@\n     echo \"${files[@]}\"\n }\n \n-\n-function check_removed_change_file(){\n+function check_removed_change_file() {\n     pr_id=$1\n     module=$2\n     owner='apache'\n@@ -55,26 +52,25 @@\n     file_nums=${#res[@]}\n     is_code_change_flag=false\n     module_file=0\n-    for file in ${res[@]}\n-    do\n-\t#echo \"$file\"\n-\tfile_dir=$(echo $file|cut -d '/' -f 1)\n-        file_type=$(echo $file|rev|cut -d / -f 1|cut -d '.' -f 1|rev)\n-\t#if [[  \"check$file_dir\" == \"check${module}\" &&  ($file_type == \"cpp\" || $file_type == \"c\" || $file_type == \"java\" || $file_type == \"py\" || $file_type == \"h\" || $file_type == 'js') ]];then\n-\tif [[ $file_type == \"cpp\" || $file_type == \"c\" || $file_type == \"java\" || $file_type == \"py\" || $file_type == \"h\" || $file_type == 'js' ]];then\n-\t    echo \"code has changed, ${file} is deleted\"\n-\t    is_code_change_flag=true\n-\tfi\n-\tif [[ \"check$file_dir\" == \"check${module}\" ]];then\n+    for file in ${res[@]}; do\n+        #echo \"$file\"\n+        file_dir=$(echo $file | cut -d '/' -f 1)\n+        file_type=$(echo $file | rev | cut -d / -f 1 | cut -d '.' -f 1 | rev)\n+        #if [[  \"check$file_dir\" == \"check${module}\" &&  ($file_type == \"cpp\" || $file_type == \"c\" || $file_type == \"java\" || $file_type == \"py\" || $file_type == \"h\" || $file_type == 'js') ]];then\n+        if [[ $file_type == \"cpp\" || $file_type == \"c\" || $file_type == \"java\" || $file_type == \"py\" || $file_type == \"h\" || $file_type == 'js' ]]; then\n+            echo \"code has changed, ${file} is deleted\"\n+            is_code_change_flag=true\n+        fi\n+        if [[ \"check$file_dir\" == \"check${module}\" ]]; then\n             let module_file+=1\n-\tfi\n+        fi\n     done\n \n-    if [[ \"${is_code_change_flag}\" == \"false\" ]];then\n-\techo \"NO CODE FILE DELETED, PASSED!\"\n+    if [[ \"${is_code_change_flag}\" == \"false\" ]]; then\n+        echo \"NO CODE FILE DELETED, PASSED!\"\n         return 0\n     else\n-\techo \"CODE FILE BE DELETED\"\n+        echo \"CODE FILE BE DELETED\"\n         return 2\n     fi\n \n@@ -95,20 +91,18 @@\n \n     doc_num=0\n     doc_sql_manual_num=0\n-    for file in ${res[@]}\n-    do\n+    for file in ${res[@]}; do\n         #check change file is on docs/fs_brokers or not\n-\techo \"$file\"\n-        file_dir=$(echo $file|cut -d '/' -f 1)\n-\tif [[ $file_dir == \"docs\" ]];then\n+        echo \"$file\"\n+        file_dir=$(echo $file | cut -d '/' -f 1)\n+        if [[ $file_dir == \"docs\" ]]; then\n             let doc_num+=1\n-\tfi\n-        if [[ \"$file\" =~ \"docs/zh-CN/docs/sql-manual/\" || \"$file\" =~ \"docs/en/docs/sql-manual/\" ]];then\n+        fi\n+        if [[ \"$file\" =~ \"docs/zh-CN/docs/sql-manual/\" || \"$file\" =~ \"docs/en/docs/sql-manual/\" ]]; then\n             let doc_sql_manual_num+=1\n             continue\n         fi\n \n-\n         #check change file is md/txt/doc file\n         #file_type=$(echo $file|cut -d '.' -f 2)\n         #if [[ $file_type == \"md\" || $file_type == \"txt\" || $file_type == \"doc\" ]];then\n@@ -120,7 +114,7 @@\n     echo \"doc_num: $doc_num\"\n     echo \"file_nums: $file_nums\"\n     echo \"doc_sql_manual_num: $doc_sql_manual_num\"\n-    if [[ $doc_num -eq $file_nums && $doc_sql_manual_num -eq 0 ]];then\n+    if [[ $doc_num -eq $file_nums && $doc_sql_manual_num -eq 0 ]]; then\n         echo \"JUST MODIFY DOCUMENT, NO COED CHSNGED, PASSED!\"\n         return 0\n     else\n@@ -143,17 +137,16 @@\n \n     doc_num=0\n     echo \"START CHECK CODE IS ONLY RELATED BE OR NOT\"\n-    for file in ${res[@]}\n-    do\n+    for file in ${res[@]}; do\n         echo \"$file\"\n         #check change file is on be or not\n-        file_dir=$(echo $file|cut -d '/' -f 1)\n-        if [[ $file_dir == \"be\" || $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]];then\n+        file_dir=$(echo $file | cut -d '/' -f 1)\n+        if [[ $file_dir == \"be\" || $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]]; then\n             let doc_num+=1\n             continue\n-\tfi\n+        fi\n     done\n-    if [[ $doc_num -eq $file_nums ]];then\n+    if [[ $doc_num -eq $file_nums ]]; then\n         echo \"JUST MODIFY BE CODE, NO NEED RUN FE UT, PASSED!\"\n         return 0\n     else\n@@ -176,17 +169,16 @@\n \n     doc_num=0\n     echo \"START CHECK CODE IS ONLY RELATED FE OR NOT\"\n-    for file in ${res[@]}\n-    do\n+    for file in ${res[@]}; do\n         echo \"$file\"\n         #check change file is on be or not\n-        file_dir=$(echo $file|cut -d '/' -f 1)\n-        if [[ $file_dir == \"fe\" || $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]];then\n+        file_dir=$(echo $file | cut -d '/' -f 1)\n+        if [[ $file_dir == \"fe\" || $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]]; then\n             let doc_num+=1\n             continue\n         fi\n     done\n-    if [[ $doc_num -eq $file_nums ]];then\n+    if [[ $doc_num -eq $file_nums ]]; then\n         echo \"JUST MODIFY FE CODE, NO NEED RUN BE UT, PASSED!\"\n         return 0\n     else\n@@ -197,42 +189,49 @@\n \n main() {\n \n-if [ $# > 0 ]; then\n-    case \"$1\" in\n+    if [ $# ] >0; then\n+        case \"$1\" in\n         --is_modify_only_invoved_be)\n-\t    check_removed_change_file $2 \"be\"\n-\t    check_1=$?\n-\t    check_all_change_files_is_under_be $2\n-\t    check_2=$?\n-\t    echo ${check_1}\n-\t    echo ${check_2}\n-\t    res=`expr $check_1 \\* $check_2`\n-\t    exit $res\n-\t    shift ;;\n+            check_removed_change_file $2 \"be\"\n+            check_1=$?\n+            check_all_change_files_is_under_be $2\n+            check_2=$?\n+            echo ${check_1}\n+            echo ${check_2}\n+            res=$(expr $check_1 \\* $check_2)\n+            exit $res\n+            shift\n+            ;;\n         --is_modify_only_invoved_fe)\n-\t    check_removed_change_file $2 \"fe\"\n-\t    check_1=$?\n-\t    check_all_change_files_is_under_fe $2\n-\t    check_2=$?\n-            res=`expr $check_1 \\* $check_2`\n-\t    echo ${check_1}\n-\t    echo ${check_2}\n-\t    exit $res\n-\t    shift ;;\n-\t--is_modify_only_invoved_doc)\n-\t    check_removed_change_file $2 \"docs\"\n-\t    check_1=$?\n-\t    check_all_change_files_is_under_doc $2\n-\t    check_2=$?\n-            res=`expr $check_1 + $check_2`\n-\t    echo ${check_1}\n+            check_removed_change_file $2 \"fe\"\n+            check_1=$?\n+            check_all_change_files_is_under_fe $2\n+            check_2=$?\n+            res=$(expr $check_1 \\* $check_2)\n+            echo ${check_1}\n             echo ${check_2}\n-\t    exit $res\n-\t    shift ;;\n-        *) echo \"ERROR\"; usage; exit 1 ;;\n-    esac\n+            exit $res\n+            shift\n+            ;;\n+        --is_modify_only_invoved_doc)\n+            check_removed_change_file $2 \"docs\"\n+            check_1=$?\n+            check_all_change_files_is_under_doc $2\n+            check_2=$?\n+            res=$(expr $check_1 + $check_2)\n+            echo ${check_1}\n+            echo ${check_2}\n+            exit $res\n+            shift\n+            ;;\n+        *)\n+            echo \"ERROR\"\n+            usage\n+            exit 1\n+            ;;\n+        esac\n \n-fi\n+    fi\n }\n \n main $@\n--- teamcity/doris/benchmark/clickbench/common/clean_disk.sh.orig\n+++ teamcity/doris/benchmark/clickbench/common/clean_disk.sh\n@@ -3,7 +3,7 @@\n df -h\n existsTime=720\n #delete files created 20 hours ago\n-echo `date \"+%Y-%m-%d %H:%M:%S\"` \"start to clear oudate file!\"\n+echo $(date \"+%Y-%m-%d %H:%M:%S\") \"start to clear oudate file!\"\n cd /home/work/teamcity/TeamCity/piplineWork/Compile/\n find /home/work/teamcity/TeamCity/piplineWork/Compile/ -maxdepth 1 -mindepth 1 -mmin +${existsTime} -type d -name \"*_*\" -exec rm -rf {} \\;\n cd -\nteamcity/doris/benchmark/clickbench/common/docker_trigger_api.sh:43:1: reached EOF without closing quote \"\n--- teamcity/doris/benchmark/clickbench/common/teamcity_api.sh.orig\n+++ teamcity/doris/benchmark/clickbench/common/teamcity_api.sh\n@@ -139,23 +139,55 @@\n }\n COMMENT\n \n-\n main() {\n \n-if [ $# > 0 ]; then\n-    case \"$1\" in \n-        --cancel_running_build) build_id=$2; cancel_running_build $build_id; shift ;;\n-        --cancel_pending_build) build_id=$2; cancel_pending_build $build_id; shift ;;\n-        --show_build_state) build_id=$2; res=$(show_build_state $build_id); echo $res; shift ;;\n-        --show_build_status) build_id=$2; res=$(show_build_status $build_id); echo $res; shift ;;\n-        --show_latest_builds) get_latest_builds; shift ;;\n-        --show_queued_builds) get_queued_builds; shift ;;\n-        --get_all_builds_of_pr_id) get_all_builds $2; shift ;;\n-\t--help) usage; shift ;;\n-        *) echo \"ERROR\"; exit 1 ;;\n-    esac\n+    if [ $# ] >0; then\n+        case \"$1\" in\n+        --cancel_running_build)\n+            build_id=$2\n+            cancel_running_build $build_id\n+            shift\n+            ;;\n+        --cancel_pending_build)\n+            build_id=$2\n+            cancel_pending_build $build_id\n+            shift\n+            ;;\n+        --show_build_state)\n+            build_id=$2\n+            res=$(show_build_state $build_id)\n+            echo $res\n+            shift\n+            ;;\n+        --show_build_status)\n+            build_id=$2\n+            res=$(show_build_status $build_id)\n+            echo $res\n+            shift\n+            ;;\n+        --show_latest_builds)\n+            get_latest_builds\n+            shift\n+            ;;\n+        --show_queued_builds)\n+            get_queued_builds\n+            shift\n+            ;;\n+        --get_all_builds_of_pr_id)\n+            get_all_builds $2\n+            shift\n+            ;;\n+        --help)\n+            usage\n+            shift\n+            ;;\n+        *)\n+            echo \"ERROR\"\n+            exit 1\n+            ;;\n+        esac\n \n-fi\n+    fi\n }\n \n main $@\n--- teamcity/doris/benchmark/clickbench/common/teamcity_common.sh.orig\n+++ teamcity/doris/benchmark/clickbench/common/teamcity_common.sh\n@@ -11,7 +11,7 @@\n JSON_HEADER=\"--header \\\"Accept: application/json\\\"\"\n \n usage() {\n-  echo \"\n+    echo \"\n Usage: $0 <options>\n   Optional options:\n      --cancel_running_build build_id    cancel a specific running build\n@@ -32,21 +32,21 @@\n     $0 --show_queued_builds             show all queued builds\n     $0 --get_all_builds_of_pr_id 9151   get all 9151 builds\n   \"\n-  exit 1\n+    exit 1\n }\n \n cancel_running_build() {\n     build_id=$1\n     state=$(show_build_state $build_id)\n-    if [[ $state == \"running\" ]];then\n+    if [[ $state == \"running\" ]]; then\n         #curl --header \"Authorization: Bearer eyJ0eXAiOiAiVENWMiJ9.bW1DcHJpRWNCSktnREhLaHd5Y1lndmpycnJ3.NmEwM2E3YTEtMTVmYy00NGU0LWI1OTAtMzU3MzljODE0Njdk\" http://43.129.232.36:8111/app/rest/builds/id:333 -X POST -H 'Content-Type: application/json' -d '{ \"buildCancelRequest\": {       \"comment\": \"Already running builds will be stopped.\",      \"readdIntoQueue\": \"false\"    }  }'\n         cmd=\"/app/rest/builds/id:$build_id\"\n         cmd=$cmd\" -X POST -H \\'Content-Type: application/json\\' -d \\'{ \\\"buildCancelRequest\\\": {       \\\"comment\\\": \\\"Stop obsolete running builds.\\\",      \\\"readdIntoQueue\\\": \\\"false\\\"    }  }'\"\n         url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $TEAMCITY_SERVER/$cmd\"\n         res=$(eval $eval)\n-        check=$(echo $res |grep status=\"UNKNOWN\")\n-        if [[ -z $check ]];then\n-           echo \"cancel fail!\"\n+        check=$(echo $res | grep status=\"UNKNOWN\")\n+        if [[ -z $check ]]; then\n+            echo \"cancel fail!\"\n         fi\n     fi\n \n@@ -55,15 +55,15 @@\n cancel_pending_build() {\n     build_id=$1\n     state=$(show_build_state $build_id)\n-    if [[ $state == \"queued\" ]];then\n+    if [[ $state == \"queued\" ]]; then\n         cmd=\"app/rest/buildQueue/id:$build_id\"\n         cmd=$cmd\" -X POST -H \\'Content-Type: application/json\\' -d \\'{ \\\"buildCancelRequest\\\": {       \\\"comment\\\": \\\"Cancel obsolete queue build.\\\",      \\\"readdIntoQueue\\\": \\\"false\\\"    }  }'\"\n         url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $TEAMCITY_SERVER/$cmd\"\n         #echo $url\n         res=$(eval $eval)\n-        check=$(echo $res |grep status=\"UNKNOWN\")\n-        if [[ -z $check ]];then\n-           echo \"cancel fail!\"\n+        check=$(echo $res | grep status=\"UNKNOWN\")\n+        if [[ -z $check ]]; then\n+            echo \"cancel fail!\"\n         fi\n     fi\n }\n@@ -73,15 +73,15 @@\n     cmd=\"app/rest/builds?locator=id:$build_id\"\n     url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $TEAMCITY_SERVER/$cmd\"\n     #echo $url\n-    res=`eval $url`\n-    \n+    res=$(eval $url)\n+\n     #check build exist or not\n-    check=$(echo $res|grep \"<builds count=\\\"1\\\"\")\n+    check=$(echo $res | grep \"<builds count=\\\"1\\\"\")\n     if [[ -z $check ]]; then\n         return\n     fi\n     #get state\n-    state=`echo $res |awk -F ' ' '{print $9\" \"$10\" \"$11}'|awk -F \"state=\" '{print $2}'|cut -d ' ' -f 1|sed 's/\\\"//g'`\n+    state=$(echo $res | awk -F ' ' '{print $9\" \"$10\" \"$11}' | awk -F \"state=\" '{print $2}' | cut -d ' ' -f 1 | sed 's/\\\"//g')\n     #only 2 state: queued and finished\n     echo $state\n }\n@@ -91,9 +91,9 @@\n     cmd=\"app/rest/builds?locator=id:$build_id\"\n     url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $TEAMCITY_SERVER/$cmd\"\n     #echo $url\n-    res=`eval $url`\n+    res=$(eval $url)\n     #check build exist or not\n-    check1=$(echo $res|grep \"<builds count=\\\"1\\\"\")\n+    check1=$(echo $res | grep \"<builds count=\\\"1\\\"\")\n     if [[ -z $check1 ]]; then\n         return\n     fi\n@@ -102,8 +102,8 @@\n     #if [[ -z $check ]]; then\n     #    return\n     #fi\n-    state=`echo $res |awk -F ' ' '{print $9\" \"$10\" \"$11}'|awk -F \"status=\" '{print $2}'|cut -d ' ' -f 1|sed 's/\\\"//g'`\n-    #only 2 state: \n+    state=$(echo $res | awk -F ' ' '{print $9\" \"$10\" \"$11}' | awk -F \"status=\" '{print $2}' | cut -d ' ' -f 1 | sed 's/\\\"//g')\n+    #only 2 state:\n     echo $state\n }\n \n@@ -111,7 +111,7 @@\n     branch=$1\n     cmd=\"app/rest/builds?locator=branch:$branch\"\n     url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $TEAMCITY_SERVER/$cmd\"\n-    res=`eval $url`\n+    res=$(eval $url)\n }\n \n get_latest_builds() {\n@@ -125,14 +125,12 @@\n     cmd=\"app/rest/buildQueue\"\n     url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $JSON_HEADER $TEAMCITY_SERVER/$cmd\"\n     #echo $url\n-    res=`eval $url`\n+    res=$(eval $url)\n     #a=$(echo $res|grep -oP 'build id=.*'|head -1)\n-    \n-    \n+\n     #a=$res\n     #while [[ \"check\"$a != \"check\" ]]\n     #do\n     #    a=$(echo $a|awk -F 'build id=\"' '{print $2}')\n     #done\n }\n-\n--- teamcity/doris/benchmark/clickbench/common/test.sh.orig\n+++ teamcity/doris/benchmark/clickbench/common/test.sh\n@@ -3,33 +3,29 @@\n repo=doris\n GITHUB_TOKEN=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\n \n-function get_all_change_files(){\n+function get_all_change_files() {\n     pr_id=$1\n     files=()\n \n     page=1\n     per_page=100\n-    while [ 1 -eq 1 ]\n-    do\n-\t#echo \"curl --header 'authorization: Bearer ${GITHUB_TOKEN}' https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files?per_page=$per_page\\&page=$page\"\n-\tres=($(curl --header \"authorization: Bearer ${GITHUB_TOKEN}\" https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files?per_page=$per_page\\&page=$page|jq -r '.[]|select(.status = \"removed\")| .filename'))\n+    while [ 1 -eq 1 ]; do\n+        #echo \"curl --header 'authorization: Bearer ${GITHUB_TOKEN}' https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files?per_page=$per_page\\&page=$page\"\n+        res=($(curl --header \"authorization: Bearer ${GITHUB_TOKEN}\" https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files?per_page=$per_page\\&page=$page | jq -r '.[]|select(.status = \"removed\")| .filename'))\n         res_len=${#res[@]}\n-        if [ ${res_len} -ne 0 ];then\n-\t    let page+=1\n+        if [ ${res_len} -ne 0 ]; then\n+            let page+=1\n             #files=\"${res[@]}\"\"$files\"\n-\t    files=(${res[@]} ${files[*]})\n+            files=(${res[@]} ${files[*]})\n         else\n             break\n         fi\n-\techo \n+        echo\n     done\n     echo \"${files[@]}\"\n }\n \n-\n out=($(get_all_change_files 11154))\n \n-\n-\n echo \"==================\"\n echo \"${out[@]}\"\n--- teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh.orig\n+++ teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh\n@@ -3,9 +3,8 @@\n #res=(`git diff --name-only HEAD~ HEAD`)\n #file_nums=${#res[@]}\n \n-\n usage() {\n-  echo \"\n+    echo \"\n Usage: $0 <options>\n   Optional options:\n \n@@ -14,24 +13,22 @@\n     $0 --is_modify_only_invoved_fe pr_id          if pr changed code only invoved fe doc, fs_brocker, return 0; else return 2\n     $0 --is_modify_only_invoved_doc pr_id         if pr changed code only invoved doc, fs_brocker, return 0; else return 2\n   \"\n-  exit 1\n+    exit 1\n }\n \n-\n function check_all_change_files_is_under_doc() {\n \n     pr_id=$1\n     owner='apache'\n     repo='incubator-doris'\n-    res=($(curl https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files|jq -r '.[]|select(.status != \"removed\")| .filename'))\n+    res=($(curl https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files | jq -r '.[]|select(.status != \"removed\")| .filename'))\n     file_nums=${#res[@]}\n \n     doc_num=0\n-    for file in ${res[@]}\n-    do\n+    for file in ${res[@]}; do\n         #check change file is on docs/fs_brokers or not\n-        file_dir=$(echo $file|cut -d '/' -f 1)\n-        if [[ $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]];then\n+        file_dir=$(echo $file | cut -d '/' -f 1)\n+        if [[ $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]]; then\n             let doc_num+=1\n             continue\n         fi\n@@ -43,7 +40,7 @@\n         #fi\n     done\n \n-    if [[ $doc_num -eq $file_nums ]];then\n+    if [[ $doc_num -eq $file_nums ]]; then\n         echo \"JUST MODIFY DOCUMENT, NO COED CHSNGED, PASSED!\"\n         exit 0\n     else\n@@ -57,21 +54,20 @@\n     pr_id=$1\n     owner='apache'\n     repo='incubator-doris'\n-    res=($(curl https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files|jq -r '.[]|select(.status != \"removed\")| .filename'))\n+    res=($(curl https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files | jq -r '.[]|select(.status != \"removed\")| .filename'))\n     file_nums=${#res[@]}\n \n     doc_num=0\n     echo \"START CHECK CODE IS ONLY RELATED BE OR NOT\"\n-    for file in ${res[@]}\n-    do\n+    for file in ${res[@]}; do\n         #check change file is on be or not\n-        file_dir=$(echo $file|cut -d '/' -f 1)\n-        if [[ $file_dir == \"be\" || $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]];then\n+        file_dir=$(echo $file | cut -d '/' -f 1)\n+        if [[ $file_dir == \"be\" || $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]]; then\n             let doc_num+=1\n             continue\n-\tfi\n+        fi\n     done\n-    if [[ $doc_num -eq $file_nums ]];then\n+    if [[ $doc_num -eq $file_nums ]]; then\n         echo \"JUST MODIFY BE CODE, NO NEED RUN FE UT, PASSED!\"\n         exit 0\n     else\n@@ -85,21 +81,20 @@\n     pr_id=$1\n     owner='apache'\n     repo='incubator-doris'\n-    res=($(curl https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files|jq -r '.[]|select(.status != \"removed\")| .filename'))\n+    res=($(curl https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files | jq -r '.[]|select(.status != \"removed\")| .filename'))\n     file_nums=${#res[@]}\n \n     doc_num=0\n     echo \"START CHECK CODE IS ONLY RELATED FE OR NOT\"\n-    for file in ${res[@]}\n-    do\n+    for file in ${res[@]}; do\n         #check change file is on be or not\n-        file_dir=$(echo $file|cut -d '/' -f 1)\n-        if [[ $file_dir == \"fe\" || $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]];then\n+        file_dir=$(echo $file | cut -d '/' -f 1)\n+        if [[ $file_dir == \"fe\" || $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]]; then\n             let doc_num+=1\n             continue\n         fi\n     done\n-    if [[ $doc_num -eq $file_nums ]];then\n+    if [[ $doc_num -eq $file_nums ]]; then\n         echo \"JUST MODIFY FE CODE, NO NEED RUN BE UT, PASSED!\"\n         exit 0\n     else\n@@ -110,15 +105,28 @@\n \n main() {\n \n-if [ $# > 0 ]; then\n-    case \"$1\" in\n-        --is_modify_only_invoved_be) check_all_change_files_is_under_be $2; shift ;;\n-        --is_modify_only_invoved_fe) check_all_change_files_is_under_fe $2; shift ;;\n-\t--is_modify_only_doc) check_all_change_files_is_under_doc $2; shift ;;\n-        *) echo \"ERROR\"; usage; exit 1 ;;\n-    esac\n+    if [ $# ] >0; then\n+        case \"$1\" in\n+        --is_modify_only_invoved_be)\n+            check_all_change_files_is_under_be $2\n+            shift\n+            ;;\n+        --is_modify_only_invoved_fe)\n+            check_all_change_files_is_under_fe $2\n+            shift\n+            ;;\n+        --is_modify_only_doc)\n+            check_all_change_files_is_under_doc $2\n+            shift\n+            ;;\n+        *)\n+            echo \"ERROR\"\n+            usage\n+            exit 1\n+            ;;\n+        esac\n \n-fi\n+    fi\n }\n \n main $@\n----------\n\nYou can reformat the above files to meet shfmt's requirements by typing:\n\n  shfmt  -w filename\n\n\n```\n</details>\n\n\n","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301601963/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301609961","html_url":"https://github.com/apache/doris/pull/13259#issuecomment-1301609961","issue_url":"https://api.github.com/repos/apache/doris/issues/13259","id":1301609961,"node_id":"IC_kwDOBfSlxs5NlP3p","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-03T03:51:06Z","updated_at":"2022-11-03T03:51:06Z","author_association":"CONTRIBUTOR","body":"#### `sh-checker report`\n\nTo get the full details, please check in the [job](\"https://github.com/apache/doris/actions/runs/3382847456\") output.\n\n<details>\n<summary>shellcheck errors</summary>\n\n```\n\n'shellcheck ' returned error 1 finding the following syntactical issues:\n\n----------\n\nIn teamcity/doris/benchmark/clickbench/common/check_and_kill_deleted_proc.sh line 11:\ncheck=$(lsof -i:$port|awk '{print $2}'|wc -l)\n                ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \ncheck=$(lsof -i:\"$port\"|awk '{print $2}'|wc -l)\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_and_kill_deleted_proc.sh line 12:\nif [ \"check$check\" != \"check0\" ];then\n   ^---------------------------^ SC2292 (style): Prefer [[ ]] over [ ] for tests in Bash/Ksh.\n           ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \nif [[ \"check${check}\" != \"check0\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_and_kill_deleted_proc.sh line 13:\n    if [ \"check\"${case_level} == \"check\" ];then\n       ^-- SC2292 (style): Prefer [[ ]] over [ ] for tests in Bash/Ksh.\n                ^-----------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n    if [[ \"check\"\"${case_level}\" == \"check\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_and_kill_deleted_proc.sh line 14:\n        check_res=$(pwdx `lsof -i:$port|grep -v PID|awk '{print $2}'`|grep $env_name|grep deleted||wc -l)\n                         ^-- SC2046 (warning): Quote this to prevent word splitting.\n                         ^-- SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n                                  ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                  ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                           ^-------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                                                           ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        check_res=$(pwdx $(lsof -i:\"$port\"|grep -v PID|awk '{print $2}')|grep $env_name|grep deleted||wc -l)\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_and_kill_deleted_proc.sh line 16:\n        check_res=$(pwdx `lsof -i:$port|grep -v PID|awk '{print $2}'`|grep $env_name|grep $case_level|grep deleted||wc -l)\n                         ^-- SC2046 (warning): Quote this to prevent word splitting.\n                         ^-- SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n                                  ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                  ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                           ^-------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                                                           ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                                          ^---------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                                                                          ^---------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        check_res=$(pwdx $(lsof -i:\"$port\"|grep -v PID|awk '{print $2}')|grep $env_name|grep $case_level|grep deleted||wc -l)\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_and_kill_deleted_proc.sh line 18:\n    if [ \"check$check_res\" != \"check0\" ];then\n       ^-- SC2292 (style): Prefer [[ ]] over [ ] for tests in Bash/Ksh.\n               ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    if [[ \"check${check_res}\" != \"check0\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_and_kill_deleted_proc.sh line 19:\n        be_pid=(`lsof -i:$port|grep -v PID|awk '{print $2}'`)\n                ^-- SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).\n                ^-- SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n                         ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                         ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        be_pid=($(lsof -i:\"$port\"|grep -v PID|awk '{print $2}'))\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_and_kill_deleted_proc.sh line 20:\n        echo \"Detected residual processes: ${be_pid}\"\n                                           ^-------^ SC2128 (warning): Expanding an array without an index only gives the first element.\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_and_kill_deleted_proc.sh line 21:\n        echo \"kill residual processes: kill -9 ${be_pid}\"\n                                               ^-------^ SC2128 (warning): Expanding an array without an index only gives the first element.\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_and_kill_deleted_proc.sh line 22:\n        kill -9 $be_pid\n                ^-----^ SC2128 (warning): Expanding an array without an index only gives the first element.\n                ^-----^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                ^-----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        kill -9 \"$be_pid\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 29:\n    while [ 1 -eq 1 ]\n          ^---------^ SC2292 (style): Prefer [[ ]] over [ ] for tests in Bash/Ksh.\n              ^-^ SC2050 (warning): This expression is constant. Did you forget the $ on a variable?\n\nDid you mean: \n    while [[ 1 -eq 1 ]]\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 32:\n        res=($(curl --header \"authorization: Bearer ${GITHUB_TOKEN}\" https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files?per_page=$per_page\\&page=$page|jq -r '.[]|select(.status = \"removed\")| .filename'))\n             ^-- SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).\n                                                                                                  ^------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                                                                           ^-----^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                                                                                         ^------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                                                                                                                                 ^-------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                                                                                                                 ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                                                                                                                 ^---^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                                                                                                                                 ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        res=($(curl --header \"authorization: Bearer ${GITHUB_TOKEN}\" https://api.github.com/repos/\"${owner}\"/\"${repo}\"/pulls/\"${pr_id}\"/files?per_page=\"$per_page\"\\&page=$page|jq -r '.[]|select(.status = \"removed\")| .filename'))\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 35:\n        if [ ${res_len} -ne 0 ];then\n           ^------------------^ SC2292 (style): Prefer [[ ]] over [ ] for tests in Bash/Ksh.\n             ^--------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n        if [[ \"${res_len}\" -ne 0 ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 36:\n            let page+=1\n            ^---------^ SC2219 (style): Instead of 'let expr', prefer (( expr )) .\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 38:\n            files=(${res[@]} ${files[*]})\n                   ^-------^ SC2206 (warning): Quote to prevent word splitting/globbing, or split robustly with mapfile or read -a.\n                             ^---------^ SC2206 (warning): Quote to prevent word splitting/globbing, or split robustly with mapfile or read -a.\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 54:\n    res=($(get_all_change_files $pr_id))\n         ^----------------------------^ SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).\n                                ^----^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    res=($(get_all_change_files \"$pr_id\"))\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 58:\n    for file in ${res[@]}\n                ^-------^ SC2068 (error): Double quote array expansions to avoid re-splitting elements.\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 61:\n\tfile_dir=$(echo $file|cut -d '/' -f 1)\n                        ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                        ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n\tfile_dir=$(echo \"$file\"|cut -d '/' -f 1)\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 62:\n        file_type=$(echo $file|rev|cut -d / -f 1|cut -d '.' -f 1|rev)\n                         ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                         ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        file_type=$(echo \"$file\"|rev|cut -d / -f 1|cut -d '.' -f 1|rev)\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 64:\n\tif [[ $file_type == \"cpp\" || $file_type == \"c\" || $file_type == \"java\" || $file_type == \"py\" || $file_type == \"h\" || $file_type == 'js' ]];then\n              ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                     ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                          ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                                  ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                                                        ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                                                                             ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n\tif [[ ${file_type} == \"cpp\" || ${file_type} == \"c\" || ${file_type} == \"java\" || ${file_type} == \"py\" || ${file_type} == \"h\" || ${file_type} == 'js' ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 68:\n\tif [[ \"check$file_dir\" == \"check${module}\" ]];then\n                    ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n\tif [[ \"check${file_dir}\" == \"check${module}\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 69:\n            let module_file+=1\n            ^----------------^ SC2219 (style): Instead of 'let expr', prefer (( expr )) .\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 89:\n    res=($(get_all_change_files $pr_id))\n         ^----------------------------^ SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).\n                                ^----^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    res=($(get_all_change_files \"$pr_id\"))\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 98:\n    for file in ${res[@]}\n                ^-------^ SC2068 (error): Double quote array expansions to avoid re-splitting elements.\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 101:\n\techo \"$file\"\n              ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n\techo \"${file}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 102:\n        file_dir=$(echo $file|cut -d '/' -f 1)\n                        ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                        ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        file_dir=$(echo \"$file\"|cut -d '/' -f 1)\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 103:\n\tif [[ $file_dir == \"docs\" ]];then\n              ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n\tif [[ ${file_dir} == \"docs\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 104:\n            let doc_num+=1\n            ^------------^ SC2219 (style): Instead of 'let expr', prefer (( expr )) .\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 106:\n        if [[ \"$file\" =~ \"docs/zh-CN/docs/sql-manual/\" || \"$file\" =~ \"docs/en/docs/sql-manual/\" ]];then\n               ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                           ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        if [[ \"${file}\" =~ \"docs/zh-CN/docs/sql-manual/\" || \"${file}\" =~ \"docs/en/docs/sql-manual/\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 107:\n            let doc_sql_manual_num+=1\n            ^-----------------------^ SC2219 (style): Instead of 'let expr', prefer (( expr )) .\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 120:\n    echo \"doc_num: $doc_num\"\n                   ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    echo \"doc_num: ${doc_num}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 121:\n    echo \"file_nums: $file_nums\"\n                     ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    echo \"file_nums: ${file_nums}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 122:\n    echo \"doc_sql_manual_num: $doc_sql_manual_num\"\n                              ^-----------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    echo \"doc_sql_manual_num: ${doc_sql_manual_num}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 123:\n    if [[ $doc_num -eq $file_nums && $doc_sql_manual_num -eq 0 ]];then\n          ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                       ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                     ^-----------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    if [[ ${doc_num} -eq ${file_nums} && ${doc_sql_manual_num} -eq 0 ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 138:\n    res=($(get_all_change_files $pr_id))\n         ^----------------------------^ SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).\n                                ^----^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    res=($(get_all_change_files \"$pr_id\"))\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 146:\n    for file in ${res[@]}\n                ^-------^ SC2068 (error): Double quote array expansions to avoid re-splitting elements.\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 148:\n        echo \"$file\"\n              ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        echo \"${file}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 150:\n        file_dir=$(echo $file|cut -d '/' -f 1)\n                        ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                        ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        file_dir=$(echo \"$file\"|cut -d '/' -f 1)\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 151:\n        if [[ $file_dir == \"be\" || $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]];then\n              ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                   ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                          ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        if [[ ${file_dir} == \"be\" || ${file_dir} == \"docs\" || ${file_dir} == \"fs_brokers\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 152:\n            let doc_num+=1\n            ^------------^ SC2219 (style): Instead of 'let expr', prefer (( expr )) .\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 156:\n    if [[ $doc_num -eq $file_nums ]];then\n          ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                       ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    if [[ ${doc_num} -eq ${file_nums} ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 171:\n    res=($(get_all_change_files $pr_id))\n         ^----------------------------^ SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).\n                                ^----^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    res=($(get_all_change_files \"$pr_id\"))\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 179:\n    for file in ${res[@]}\n                ^-------^ SC2068 (error): Double quote array expansions to avoid re-splitting elements.\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 181:\n        echo \"$file\"\n              ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        echo \"${file}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 183:\n        file_dir=$(echo $file|cut -d '/' -f 1)\n                        ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                        ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        file_dir=$(echo \"$file\"|cut -d '/' -f 1)\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 184:\n        if [[ $file_dir == \"fe\" || $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]];then\n              ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                   ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                          ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        if [[ ${file_dir} == \"fe\" || ${file_dir} == \"docs\" || ${file_dir} == \"fs_brokers\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 185:\n            let doc_num+=1\n            ^------------^ SC2219 (style): Instead of 'let expr', prefer (( expr )) .\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 189:\n    if [[ $doc_num -eq $file_nums ]];then\n          ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                       ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    if [[ ${doc_num} -eq ${file_nums} ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 200:\nif [ $# > 0 ]; then\n   ^--------^ SC2292 (style): Prefer [[ ]] over [ ] for tests in Bash/Ksh.\n        ^-- SC2071 (error): > is for string comparisons. Use -gt instead.\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 203:\n\t    check_removed_change_file $2 \"be\"\n                                      ^-- SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n\t    check_removed_change_file \"$2\" \"be\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 205:\n\t    check_all_change_files_is_under_be $2\n                                               ^-- SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n\t    check_all_change_files_is_under_be \"$2\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 207:\n\t    echo ${check_1}\n                 ^--------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n\nDid you mean: \n\t    echo \"${check_1}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 208:\n\t    echo ${check_2}\n                 ^--------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n\nDid you mean: \n\t    echo \"${check_2}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 209:\n\t    res=`expr $check_1 \\* $check_2`\n            ^-^ SC2178 (warning): Variable was used as an array but is now assigned a string.\n                ^-------------------------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n                 ^--^ SC2003 (style): expr is antiquated. Consider rewriting this using $((..)), ${} or [[ ]].\n                      ^------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                      ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                  ^------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                  ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n\t    res=$(expr \"$check_1\" \\* $check_2)\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 210:\n\t    exit $res\n                 ^--^ SC2128 (warning): Expanding an array without an index only gives the first element.\n                 ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                 ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n\t    exit \"$res\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 213:\n\t    check_removed_change_file $2 \"fe\"\n                                      ^-- SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n\t    check_removed_change_file \"$2\" \"fe\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 215:\n\t    check_all_change_files_is_under_fe $2\n                                               ^-- SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n\t    check_all_change_files_is_under_fe \"$2\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 217:\n            res=`expr $check_1 \\* $check_2`\n            ^-^ SC2178 (warning): Variable was used as an array but is now assigned a string.\n                ^-------------------------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n                 ^--^ SC2003 (style): expr is antiquated. Consider rewriting this using $((..)), ${} or [[ ]].\n                      ^------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                      ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                  ^------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                  ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n            res=$(expr \"$check_1\" \\* $check_2)\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 218:\n\t    echo ${check_1}\n                 ^--------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n\nDid you mean: \n\t    echo \"${check_1}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 219:\n\t    echo ${check_2}\n                 ^--------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n\nDid you mean: \n\t    echo \"${check_2}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 220:\n\t    exit $res\n                 ^--^ SC2128 (warning): Expanding an array without an index only gives the first element.\n                 ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                 ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n\t    exit \"$res\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 223:\n\t    check_removed_change_file $2 \"docs\"\n                                      ^-- SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n\t    check_removed_change_file \"$2\" \"docs\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 225:\n\t    check_all_change_files_is_under_doc $2\n                                                ^-- SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n\t    check_all_change_files_is_under_doc \"$2\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 227:\n            res=`expr $check_1 + $check_2`\n            ^-^ SC2178 (warning): Variable was used as an array but is now assigned a string.\n                ^------------------------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n                 ^--^ SC2003 (style): expr is antiquated. Consider rewriting this using $((..)), ${} or [[ ]].\n                      ^------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                      ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                 ^------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                 ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n            res=$(expr \"$check_1\" + $check_2)\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 228:\n\t    echo ${check_1}\n                 ^--------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n\nDid you mean: \n\t    echo \"${check_1}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 229:\n            echo ${check_2}\n                 ^--------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n\nDid you mean: \n            echo \"${check_2}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 230:\n\t    exit $res\n                 ^--^ SC2128 (warning): Expanding an array without an index only gives the first element.\n                 ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                 ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n\t    exit \"$res\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 238:\nmain $@\n     ^-- SC2068 (error): Double quote array expansions to avoid re-splitting elements.\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 6:\necho `date \"+%Y-%m-%d %H:%M:%S\"` \"start to clear oudate file!\"\n     ^-------------------------^ SC2046 (warning): Quote this to prevent word splitting.\n     ^-------------------------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n\nDid you mean: \necho $(date \"+%Y-%m-%d %H:%M:%S\") \"start to clear oudate file!\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 7:\ncd /home/work/teamcity/TeamCity/piplineWork/Compile/\n^-- SC2164 (warning): Use 'cd ... || exit' or 'cd ... || return' in case cd fails.\n\nDid you mean: \ncd /home/work/teamcity/TeamCity/piplineWork/Compile/ || exit\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 8:\nfind /home/work/teamcity/TeamCity/piplineWork/Compile/ -maxdepth 1 -mindepth 1 -mmin +${existsTime} -type d -name \"*_*\" -exec rm -rf {} \\;\n                                                                                      ^-----------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n\nDid you mean: \nfind /home/work/teamcity/TeamCity/piplineWork/Compile/ -maxdepth 1 -mindepth 1 -mmin +\"${existsTime}\" -type d -name \"*_*\" -exec rm -rf {} \\;\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 9:\ncd -\n^--^ SC2164 (warning): Use 'cd ... || exit' or 'cd ... || return' in case cd fails.\n^--^ SC2103 (info): Use a ( subshell ) to avoid having to cd back.\n\nDid you mean: \ncd - || exit\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 10:\ncd /home/work/teamcity/TeamCity/piplineWork/feUt/\n^-- SC2164 (warning): Use 'cd ... || exit' or 'cd ... || return' in case cd fails.\n\nDid you mean: \ncd /home/work/teamcity/TeamCity/piplineWork/feUt/ || exit\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 11:\nfind /home/work/teamcity/TeamCity/piplineWork/feUt/ -maxdepth 1 -mindepth 1 -mmin +${existsTime} -type d -name \"*_*\" -exec rm -rf {} \\;\n                                                                                   ^-----------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n\nDid you mean: \nfind /home/work/teamcity/TeamCity/piplineWork/feUt/ -maxdepth 1 -mindepth 1 -mmin +\"${existsTime}\" -type d -name \"*_*\" -exec rm -rf {} \\;\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 12:\ncd -\n^--^ SC2164 (warning): Use 'cd ... || exit' or 'cd ... || return' in case cd fails.\n\nDid you mean: \ncd - || exit\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 13:\ncd /home/work/teamcity/TeamCity/piplineWork/beUt/\n^-- SC2164 (warning): Use 'cd ... || exit' or 'cd ... || return' in case cd fails.\n\nDid you mean: \ncd /home/work/teamcity/TeamCity/piplineWork/beUt/ || exit\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 14:\nfind /home/work/teamcity/TeamCity/piplineWork/beUt/ -maxdepth 1 -mindepth 1 -mmin +${existsTime} -type d -name \"*_*\" -exec rm -rf {} \\;\n                                                                                   ^-----------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n\nDid you mean: \nfind /home/work/teamcity/TeamCity/piplineWork/beUt/ -maxdepth 1 -mindepth 1 -mmin +\"${existsTime}\" -type d -name \"*_*\" -exec rm -rf {} \\;\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 15:\ncd -\n^--^ SC2164 (warning): Use 'cd ... || exit' or 'cd ... || return' in case cd fails.\n\nDid you mean: \ncd - || exit\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 16:\ncd /mnt/ssd01/teamcity/TeamCity/piplineWork/Compile/\n^-- SC2164 (warning): Use 'cd ... || exit' or 'cd ... || return' in case cd fails.\n\nDid you mean: \ncd /mnt/ssd01/teamcity/TeamCity/piplineWork/Compile/ || exit\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 17:\nfind /mnt/ssd01/teamcity/TeamCity/piplineWork/Compile/ -maxdepth 1 -mindepth 1 -mmin +${existsTime} -type d -name \"*_*\" -exec rm -rf {} \\;\n                                                                                      ^-----------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n\nDid you mean: \nfind /mnt/ssd01/teamcity/TeamCity/piplineWork/Compile/ -maxdepth 1 -mindepth 1 -mmin +\"${existsTime}\" -type d -name \"*_*\" -exec rm -rf {} \\;\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 18:\ncd -\n^--^ SC2164 (warning): Use 'cd ... || exit' or 'cd ... || return' in case cd fails.\n\nDid you mean: \ncd - || exit\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 19:\ncd /mnt/ssd01/teamcity/TeamCity/piplineWork/beUt/\n^-- SC2164 (warning): Use 'cd ... || exit' or 'cd ... || return' in case cd fails.\n\nDid you mean: \ncd /mnt/ssd01/teamcity/TeamCity/piplineWork/beUt/ || exit\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 20:\nfind /mnt/ssd01/teamcity/TeamCity/piplineWork/beUt/ -maxdepth 1 -mindepth 1 -mmin +${existsTime} -type d -name \"*_*\" -exec rm -rf {} \\;\n                                                                                   ^-----------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n\nDid you mean: \nfind /mnt/ssd01/teamcity/TeamCity/piplineWork/beUt/ -maxdepth 1 -mindepth 1 -mmin +\"${existsTime}\" -type d -name \"*_*\" -exec rm -rf {} \\;\n\n\nIn teamcity/doris/benchmark/clickbench/common/docker_compile.sh line 3:\nid=$(echo $RANDOM)\n   ^-------------^ SC2116 (style): Useless echo? Instead of 'cmd $(echo foo)', just use 'cmd foo'.\n          ^-----^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n          ^-----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \nid=$(echo \"$RANDOM\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/docker_compile.sh line 5:\ndocker run -i --rm --name doris-compile-$id -e TZ=Asia/Shanghai -v /etc/localtime:/etc/localtime:ro -v /home/work/.m2:/root/.m2 -v /home/work/.npm:/root/.npm -v $work_path:/root/doris apache/incubator-doris:build-env-ldb-toolchain-latest /bin/bash -c \"cd /root/doris && sh builds.sh\"\n                                        ^-^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                        ^-^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                                                                                                                 ^--------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                                                                                                                                                 ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \ndocker run -i --rm --name doris-compile-\"$id\" -e TZ=Asia/Shanghai -v /etc/localtime:/etc/localtime:ro -v /home/work/.m2:/root/.m2 -v /home/work/.npm:/root/.npm -v $work_path:/root/doris apache/incubator-doris:build-env-ldb-toolchain-latest /bin/bash -c \"cd /root/doris && sh builds.sh\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/docker_trigger_api.sh line 40:\n    docker_name=\"doris-compile-\"$(echo $RANDOM)\n                               ^-- SC1078 (warning): Did you forget to close this double quoted string?\n\n\nIn teamcity/doris/benchmark/clickbench/common/docker_trigger_api.sh line 42:\n    cmd=\"docker run -i --rm --name doris-compile-$id -e TZ=Asia/Shanghai -v /etc/localtime:/etc/localtime:ro -v /home/work/.m2:/root/.m2 -v /home/work/.npm:/root/.npm -v %system.teamcity.build.workingDir%:/root/doris apache/incubator-doris:build-env-ldb-toolchain-latest /bin/bash -c \"cd /root/doris && sh builds.sh\"\n        ^-- SC1079 (info): This is actually an end quote, but due to next char it looks suspect.\n\n\nIn teamcity/doris/benchmark/clickbench/common/docker_trigger_api.sh line 43:\n\"\n^-- SC1073 (error): Couldn't parse this double quoted string. Fix to allow more checks.\n^-- SC1009 (info): The mentioned syntax error was in this simple command.\n\n\nIn teamcity/doris/benchmark/clickbench/common/docker_trigger_api.sh line 45:\n\n^-- SC1072 (error): Expected end of double quoted string. Fix any mentioned problems and try again.\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_api.sh line 5:\n<<'COMMENT'\n^---------^ SC2188 (warning): This redirection doesn't have a command. Move to its command (or use 'true' as no-op).\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_api.sh line 145:\nif [ $# > 0 ]; then\n   ^--------^ SC2292 (style): Prefer [[ ]] over [ ] for tests in Bash/Ksh.\n        ^-- SC2071 (error): > is for string comparisons. Use -gt instead.\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_api.sh line 147:\n        --cancel_running_build) build_id=$2; cancel_running_build $build_id; shift ;;\n                                                                  ^-------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                                                  ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        --cancel_running_build) build_id=$2; cancel_running_build \"$build_id\"; shift ;;\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_api.sh line 148:\n        --cancel_pending_build) build_id=$2; cancel_pending_build $build_id; shift ;;\n                                                                  ^-------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                                                  ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        --cancel_pending_build) build_id=$2; cancel_pending_build \"$build_id\"; shift ;;\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_api.sh line 149:\n        --show_build_state) build_id=$2; res=$(show_build_state $build_id); echo $res; shift ;;\n                                                                ^-------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                                                ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                                 ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                                                                 ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        --show_build_state) build_id=$2; res=$(show_build_state \"$build_id\"); echo $res; shift ;;\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_api.sh line 150:\n        --show_build_status) build_id=$2; res=$(show_build_status $build_id); echo $res; shift ;;\n                                                                  ^-------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                                                  ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                                   ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                                                                   ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        --show_build_status) build_id=$2; res=$(show_build_status \"$build_id\"); echo $res; shift ;;\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_api.sh line 153:\n        --get_all_builds_of_pr_id) get_all_builds $2; shift ;;\n                                                  ^-- SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n        --get_all_builds_of_pr_id) get_all_builds \"$2\"; shift ;;\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_api.sh line 161:\nmain $@\n     ^-- SC2068 (error): Double quote array expansions to avoid re-splitting elements.\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 4:\nzcp_TOKEN=\"eyJ0eXAiOiAiVENWMiJ9.bW1DcHJpRWNCSktnREhLaHd5Y1lndmpycnJ3.NmEwM2E3YTEtMTVmYy00NGU0LWI1OTAtMzU3MzljODE0Njdk\"\n^-------^ SC2034 (warning): zcp_TOKEN appears unused. Verify use (or export if used externally).\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 7:\nzcp_TEAMCITY_SERVER=\"http://43.129.232.36:8111\"\n^-----------------^ SC2034 (warning): zcp_TEAMCITY_SERVER appears unused. Verify use (or export if used externally).\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 40:\n    state=$(show_build_state $build_id)\n                             ^-------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                             ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    state=$(show_build_state \"$build_id\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 41:\n    if [[ $state == \"running\" ]];then\n          ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    if [[ ${state} == \"running\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 43:\n        cmd=\"/app/rest/builds/id:$build_id\"\n                                 ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        cmd=\"/app/rest/builds/id:${build_id}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 44:\n        cmd=$cmd\" -X POST -H \\'Content-Type: application/json\\' -d \\'{ \\\"buildCancelRequest\\\": {       \\\"comment\\\": \\\"Stop obsolete running builds.\\\",      \\\"readdIntoQueue\\\": \\\"false\\\"    }  }'\"\n            ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        cmd=${cmd}\" -X POST -H \\'Content-Type: application/json\\' -d \\'{ \\\"buildCancelRequest\\\": {       \\\"comment\\\": \\\"Stop obsolete running builds.\\\",      \\\"readdIntoQueue\\\": \\\"false\\\"    }  }'\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 45:\n        url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $TEAMCITY_SERVER/$cmd\"\n                     ^-----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                               ^------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                              ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                       ^--------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                        ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        url=\"curl -s ${HEADER} \\\"${AUTHORIZATION} ${TOKEN}\\\" ${TEAMCITY_SERVER}/${cmd}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 46:\n        res=$(eval $eval)\n                   ^---^ SC2154 (warning): eval is referenced but not assigned (for output from commands, use \"$(eval ...)\" ).\n                   ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                   ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        res=$(eval \"$eval\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 47:\n        check=$(echo $res |grep status=\"UNKNOWN\")\n                     ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                     ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        check=$(echo \"$res\" |grep status=\"UNKNOWN\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 48:\n        if [[ -z $check ]];then\n                 ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        if [[ -z ${check} ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 57:\n    state=$(show_build_state $build_id)\n                             ^-------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                             ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    state=$(show_build_state \"$build_id\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 58:\n    if [[ $state == \"queued\" ]];then\n          ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    if [[ ${state} == \"queued\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 59:\n        cmd=\"app/rest/buildQueue/id:$build_id\"\n                                    ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        cmd=\"app/rest/buildQueue/id:${build_id}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 60:\n        cmd=$cmd\" -X POST -H \\'Content-Type: application/json\\' -d \\'{ \\\"buildCancelRequest\\\": {       \\\"comment\\\": \\\"Cancel obsolete queue build.\\\",      \\\"readdIntoQueue\\\": \\\"false\\\"    }  }'\"\n            ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        cmd=${cmd}\" -X POST -H \\'Content-Type: application/json\\' -d \\'{ \\\"buildCancelRequest\\\": {       \\\"comment\\\": \\\"Cancel obsolete queue build.\\\",      \\\"readdIntoQueue\\\": \\\"false\\\"    }  }'\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 61:\n        url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $TEAMCITY_SERVER/$cmd\"\n                     ^-----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                               ^------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                              ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                       ^--------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                        ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        url=\"curl -s ${HEADER} \\\"${AUTHORIZATION} ${TOKEN}\\\" ${TEAMCITY_SERVER}/${cmd}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 63:\n        res=$(eval $eval)\n                   ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                   ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        res=$(eval \"$eval\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 64:\n        check=$(echo $res |grep status=\"UNKNOWN\")\n                     ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                     ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        check=$(echo \"$res\" |grep status=\"UNKNOWN\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 65:\n        if [[ -z $check ]];then\n                 ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        if [[ -z ${check} ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 73:\n    cmd=\"app/rest/builds?locator=id:$build_id\"\n                                    ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    cmd=\"app/rest/builds?locator=id:${build_id}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 74:\n    url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $TEAMCITY_SERVER/$cmd\"\n                 ^-----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                           ^------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                          ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                   ^--------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                    ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    url=\"curl -s ${HEADER} \\\"${AUTHORIZATION} ${TOKEN}\\\" ${TEAMCITY_SERVER}/${cmd}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 76:\n    res=`eval $url`\n        ^---------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n              ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n              ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    res=$(eval \"$url\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 79:\n    check=$(echo $res|grep \"<builds count=\\\"1\\\"\")\n                 ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                 ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    check=$(echo \"$res\"|grep \"<builds count=\\\"1\\\"\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 80:\n    if [[ -z $check ]]; then\n             ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    if [[ -z ${check} ]]; then\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 84:\n    state=`echo $res |awk -F ' ' '{print $9\" \"$10\" \"$11}'|awk -F \"state=\" '{print $2}'|cut -d ' ' -f 1|sed 's/\\\"//g'`\n          ^-- SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n                ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    state=$(echo \"$res\" |awk -F ' ' '{print $9\" \"$10\" \"$11}'|awk -F \"state=\" '{print $2}'|cut -d ' ' -f 1|sed 's/\\\"//g')\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 86:\n    echo $state\n         ^----^ SC2086 (info): Double quote to prevent globbing and word splitting.\n         ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    echo \"$state\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 91:\n    cmd=\"app/rest/builds?locator=id:$build_id\"\n                                    ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    cmd=\"app/rest/builds?locator=id:${build_id}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 92:\n    url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $TEAMCITY_SERVER/$cmd\"\n                 ^-----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                           ^------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                          ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                   ^--------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                    ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    url=\"curl -s ${HEADER} \\\"${AUTHORIZATION} ${TOKEN}\\\" ${TEAMCITY_SERVER}/${cmd}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 94:\n    res=`eval $url`\n        ^---------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n              ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n              ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    res=$(eval \"$url\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 96:\n    check1=$(echo $res|grep \"<builds count=\\\"1\\\"\")\n                  ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                  ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    check1=$(echo \"$res\"|grep \"<builds count=\\\"1\\\"\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 97:\n    if [[ -z $check1 ]]; then\n             ^-----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    if [[ -z ${check1} ]]; then\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 105:\n    state=`echo $res |awk -F ' ' '{print $9\" \"$10\" \"$11}'|awk -F \"status=\" '{print $2}'|cut -d ' ' -f 1|sed 's/\\\"//g'`\n          ^-- SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n                ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    state=$(echo \"$res\" |awk -F ' ' '{print $9\" \"$10\" \"$11}'|awk -F \"status=\" '{print $2}'|cut -d ' ' -f 1|sed 's/\\\"//g')\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 107:\n    echo $state\n         ^----^ SC2086 (info): Double quote to prevent globbing and word splitting.\n         ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    echo \"$state\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 112:\n    cmd=\"app/rest/builds?locator=branch:$branch\"\n                                        ^-----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    cmd=\"app/rest/builds?locator=branch:${branch}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 113:\n    url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $TEAMCITY_SERVER/$cmd\"\n                 ^-----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                           ^------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                          ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                   ^--------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                    ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    url=\"curl -s ${HEADER} \\\"${AUTHORIZATION} ${TOKEN}\\\" ${TEAMCITY_SERVER}/${cmd}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 114:\n    res=`eval $url`\n        ^---------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n              ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n              ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    res=$(eval \"$url\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 119:\n    url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $TEAMCITY_SERVER/$cmd\"\n                 ^-----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                        ^-^ SC2089 (warning): Quotes/backslashes will be treated literally. Use an array.\n                           ^------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                          ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                   ^--------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                    ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    url=\"curl -s ${HEADER} \\\"${AUTHORIZATION} ${TOKEN}\\\" ${TEAMCITY_SERVER}/${cmd}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 121:\n    res=eval $url\n    ^-----------^ SC2209 (warning): Use var=$(command) to assign output (or quote to assign string).\n             ^--^ SC2090 (warning): Quotes/backslashes in this variable will not be respected.\n             ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    res=eval ${url}\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 126:\n    url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $JSON_HEADER $TEAMCITY_SERVER/$cmd\"\n                 ^-----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                           ^------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                          ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                   ^----------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                ^--------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                                 ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    url=\"curl -s ${HEADER} \\\"${AUTHORIZATION} ${TOKEN}\\\" ${JSON_HEADER} ${TEAMCITY_SERVER}/${cmd}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 128:\n    res=`eval $url`\n        ^---------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n              ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n              ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    res=$(eval \"$url\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/test.sh line 12:\n    while [ 1 -eq 1 ]\n          ^---------^ SC2292 (style): Prefer [[ ]] over [ ] for tests in Bash/Ksh.\n              ^-^ SC2050 (warning): This expression is constant. Did you forget the $ on a variable?\n\nDid you mean: \n    while [[ 1 -eq 1 ]]\n\n\nIn teamcity/doris/benchmark/clickbench/common/test.sh line 15:\n\tres=($(curl --header \"authorization: Bearer ${GITHUB_TOKEN}\" https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files?per_page=$per_page\\&page=$page|jq -r '.[]|select(.status = \"removed\")| .filename'))\n             ^-- SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).\n                                                                                                  ^------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                                                                           ^-----^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                                                                                         ^------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                                                                                                                                 ^-------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                                                                                                                 ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                                                                                                                 ^---^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                                                                                                                                 ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n\tres=($(curl --header \"authorization: Bearer ${GITHUB_TOKEN}\" https://api.github.com/repos/\"${owner}\"/\"${repo}\"/pulls/\"${pr_id}\"/files?per_page=\"$per_page\"\\&page=$page|jq -r '.[]|select(.status = \"removed\")| .filename'))\n\n\nIn teamcity/doris/benchmark/clickbench/common/test.sh line 17:\n        if [ ${res_len} -ne 0 ];then\n           ^------------------^ SC2292 (style): Prefer [[ ]] over [ ] for tests in Bash/Ksh.\n             ^--------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n        if [[ \"${res_len}\" -ne 0 ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/test.sh line 18:\n\t    let page+=1\n            ^---------^ SC2219 (style): Instead of 'let expr', prefer (( expr )) .\n\n\nIn teamcity/doris/benchmark/clickbench/common/test.sh line 20:\n\t    files=(${res[@]} ${files[*]})\n                   ^-------^ SC2206 (warning): Quote to prevent word splitting/globbing, or split robustly with mapfile or read -a.\n                             ^---------^ SC2206 (warning): Quote to prevent word splitting/globbing, or split robustly with mapfile or read -a.\n\n\nIn teamcity/doris/benchmark/clickbench/common/test.sh line 30:\nout=($(get_all_change_files 11154))\n     ^---------------------------^ SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check.sh line 3:\n<<'COMMENT'\n^---------^ SC2188 (warning): This redirection doesn't have a command. Move to its command (or use 'true' as no-op).\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 26:\n    res=($(curl https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files|jq -r '.[]|select(.status != \"removed\")| .filename'))\n         ^-- SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).\n                                             ^------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                      ^-----^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                                    ^------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n    res=($(curl https://api.github.com/repos/\"${owner}\"/\"${repo}\"/pulls/\"${pr_id}\"/files|jq -r '.[]|select(.status != \"removed\")| .filename'))\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 30:\n    for file in ${res[@]}\n                ^-------^ SC2068 (error): Double quote array expansions to avoid re-splitting elements.\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 33:\n        file_dir=$(echo $file|cut -d '/' -f 1)\n                        ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                        ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        file_dir=$(echo \"$file\"|cut -d '/' -f 1)\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 34:\n        if [[ $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]];then\n              ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                     ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        if [[ ${file_dir} == \"docs\" || ${file_dir} == \"fs_brokers\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 35:\n            let doc_num+=1\n            ^------------^ SC2219 (style): Instead of 'let expr', prefer (( expr )) .\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 46:\n    if [[ $doc_num -eq $file_nums ]];then\n          ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                       ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    if [[ ${doc_num} -eq ${file_nums} ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 60:\n    res=($(curl https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files|jq -r '.[]|select(.status != \"removed\")| .filename'))\n         ^-- SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).\n                                             ^------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                      ^-----^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                                    ^------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n    res=($(curl https://api.github.com/repos/\"${owner}\"/\"${repo}\"/pulls/\"${pr_id}\"/files|jq -r '.[]|select(.status != \"removed\")| .filename'))\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 65:\n    for file in ${res[@]}\n                ^-------^ SC2068 (error): Double quote array expansions to avoid re-splitting elements.\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 68:\n        file_dir=$(echo $file|cut -d '/' -f 1)\n                        ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                        ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        file_dir=$(echo \"$file\"|cut -d '/' -f 1)\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 69:\n        if [[ $file_dir == \"be\" || $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]];then\n              ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                   ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                          ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        if [[ ${file_dir} == \"be\" || ${file_dir} == \"docs\" || ${file_dir} == \"fs_brokers\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 70:\n            let doc_num+=1\n            ^------------^ SC2219 (style): Instead of 'let expr', prefer (( expr )) .\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 74:\n    if [[ $doc_num -eq $file_nums ]];then\n          ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                       ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    if [[ ${doc_num} -eq ${file_nums} ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 88:\n    res=($(curl https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files|jq -r '.[]|select(.status != \"removed\")| .filename'))\n         ^-- SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).\n                                             ^------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                      ^-----^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                                    ^------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n    res=($(curl https://api.github.com/repos/\"${owner}\"/\"${repo}\"/pulls/\"${pr_id}\"/files|jq -r '.[]|select(.status != \"removed\")| .filename'))\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 93:\n    for file in ${res[@]}\n                ^-------^ SC2068 (error): Double quote array expansions to avoid re-splitting elements.\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 96:\n        file_dir=$(echo $file|cut -d '/' -f 1)\n                        ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                        ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        file_dir=$(echo \"$file\"|cut -d '/' -f 1)\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 97:\n        if [[ $file_dir == \"fe\" || $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]];then\n              ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                   ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                          ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        if [[ ${file_dir} == \"fe\" || ${file_dir} == \"docs\" || ${file_dir} == \"fs_brokers\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 98:\n            let doc_num+=1\n            ^------------^ SC2219 (style): Instead of 'let expr', prefer (( expr )) .\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 102:\n    if [[ $doc_num -eq $file_nums ]];then\n          ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                       ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    if [[ ${doc_num} -eq ${file_nums} ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 113:\nif [ $# > 0 ]; then\n   ^--------^ SC2292 (style): Prefer [[ ]] over [ ] for tests in Bash/Ksh.\n        ^-- SC2071 (error): > is for string comparisons. Use -gt instead.\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 115:\n        --is_modify_only_invoved_be) check_all_change_files_is_under_be $2; shift ;;\n                                                                        ^-- SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n        --is_modify_only_invoved_be) check_all_change_files_is_under_be \"$2\"; shift ;;\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 116:\n        --is_modify_only_invoved_fe) check_all_change_files_is_under_fe $2; shift ;;\n                                                                        ^-- SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n        --is_modify_only_invoved_fe) check_all_change_files_is_under_fe \"$2\"; shift ;;\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 117:\n\t--is_modify_only_doc) check_all_change_files_is_under_doc $2; shift ;;\n                                                                  ^-- SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n\t--is_modify_only_doc) check_all_change_files_is_under_doc \"$2\"; shift ;;\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 124:\nmain $@\n     ^-- SC2068 (error): Double quote array expansions to avoid re-splitting elements.\n\nFor more information:\n  https://www.shellcheck.net/wiki/SC2068 -- Double quote array expansions to ...\n  https://www.shellcheck.net/wiki/SC2071 -- > is for string comparisons. Use ...\n  https://www.shellcheck.net/wiki/SC1078 -- Did you forget to close this doub...\n----------\n\nYou can address the above issues in one of three ways:\n1. Manually correct the issue in the offending shell script;\n2. Disable specific issues by adding the comment:\n  # shellcheck disable=NNNN\nabove the line that contains the issue, where NNNN is the error code;\n3. Add '-e NNNN' to the SHELLCHECK_OPTS setting in your .yml action file.\n\n\n\n```\n</details>\n\n<details>\n<summary>shfmt errors</summary>\n\n```\n\n'shfmt ' returned error 1 finding the following formatting issues:\n\n----------\n--- teamcity/doris/benchmark/clickbench/common/check_and_kill_deleted_proc.sh.orig\n+++ teamcity/doris/benchmark/clickbench/common/check_and_kill_deleted_proc.sh\n@@ -8,23 +8,22 @@\n echo \"====================================\"\n echo \"START TO DETECT RESIDUAL PROCESSES!\"\n \n-check=$(lsof -i:$port|awk '{print $2}'|wc -l)\n-if [ \"check$check\" != \"check0\" ];then\n-    if [ \"check\"${case_level} == \"check\" ];then\n-        check_res=$(pwdx `lsof -i:$port|grep -v PID|awk '{print $2}'`|grep $env_name|grep deleted||wc -l)\n+check=$(lsof -i:$port | awk '{print $2}' | wc -l)\n+if [ \"check$check\" != \"check0\" ]; then\n+    if [ \"check\"${case_level} == \"check\" ]; then\n+        check_res=$(pwdx $(lsof -i:$port | grep -v PID | awk '{print $2}') | grep $env_name | grep deleted || wc -l)\n     else\n-        check_res=$(pwdx `lsof -i:$port|grep -v PID|awk '{print $2}'`|grep $env_name|grep $case_level|grep deleted||wc -l)\n+        check_res=$(pwdx $(lsof -i:$port | grep -v PID | awk '{print $2}') | grep $env_name | grep $case_level | grep deleted || wc -l)\n     fi\n-    if [ \"check$check_res\" != \"check0\" ];then\n-        be_pid=(`lsof -i:$port|grep -v PID|awk '{print $2}'`)\n+    if [ \"check$check_res\" != \"check0\" ]; then\n+        be_pid=($(lsof -i:$port | grep -v PID | awk '{print $2}'))\n         echo \"Detected residual processes: ${be_pid}\"\n         echo \"kill residual processes: kill -9 ${be_pid}\"\n         kill -9 $be_pid\n     fi\n else\n-        echo \"No residual processes\"\n+    echo \"No residual processes\"\n fi\n \n-\n echo \"FINISH DETECT RESIDUAL PROCESSES!\"\n echo \"===================================\"\n--- teamcity/doris/benchmark/clickbench/common/check_change_file.sh.orig\n+++ teamcity/doris/benchmark/clickbench/common/check_change_file.sh\n@@ -7,7 +7,7 @@\n GITHUB_TOKEN=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\n \n usage() {\n-  echo \"\n+    echo \"\n Usage: $0 <options>\n   Optional options:\n \n@@ -16,23 +16,21 @@\n     $0 --is_modify_only_invoved_fe pr_id          if pr changed code only invoved fe doc, fs_brocker, return 0; else return 2\n     $0 --is_modify_only_invoved_doc pr_id         if pr changed code only invoved doc, fs_brocker, return 0; else return 2\n   \"\n-  exit 1\n+    exit 1\n }\n \n-\n-function get_all_change_files(){\n+function get_all_change_files() {\n     pr_id=$1\n     files=()\n \n     page=1\n     per_page=100\n-    while [ 1 -eq 1 ]\n-    do\n+    while [ 1 -eq 1 ]; do\n         #echo \"curl --header 'authorization: Bearer ${GITHUB_TOKEN}' https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files?per_page=$per_page\\&page=$page\"\n-        res=($(curl --header \"authorization: Bearer ${GITHUB_TOKEN}\" https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files?per_page=$per_page\\&page=$page|jq -r '.[]|select(.status = \"removed\")| .filename'))\n+        res=($(curl --header \"authorization: Bearer ${GITHUB_TOKEN}\" https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files?per_page=$per_page\\&page=$page | jq -r '.[]|select(.status = \"removed\")| .filename'))\n         res_len=${#res[@]}\n         #echo \"================\"$res_len\n-        if [ ${res_len} -ne 0 ];then\n+        if [ ${res_len} -ne 0 ]; then\n             let page+=1\n             #files=\"${res[@]}\"\"$files\"\n             files=(${res[@]} ${files[*]})\n@@ -44,8 +42,7 @@\n     echo \"${files[@]}\"\n }\n \n-\n-function check_removed_change_file(){\n+function check_removed_change_file() {\n     pr_id=$1\n     module=$2\n     owner='apache'\n@@ -55,26 +52,25 @@\n     file_nums=${#res[@]}\n     is_code_change_flag=false\n     module_file=0\n-    for file in ${res[@]}\n-    do\n-\t#echo \"$file\"\n-\tfile_dir=$(echo $file|cut -d '/' -f 1)\n-        file_type=$(echo $file|rev|cut -d / -f 1|cut -d '.' -f 1|rev)\n-\t#if [[  \"check$file_dir\" == \"check${module}\" &&  ($file_type == \"cpp\" || $file_type == \"c\" || $file_type == \"java\" || $file_type == \"py\" || $file_type == \"h\" || $file_type == 'js') ]];then\n-\tif [[ $file_type == \"cpp\" || $file_type == \"c\" || $file_type == \"java\" || $file_type == \"py\" || $file_type == \"h\" || $file_type == 'js' ]];then\n-\t    echo \"code has changed, ${file} is deleted\"\n-\t    is_code_change_flag=true\n-\tfi\n-\tif [[ \"check$file_dir\" == \"check${module}\" ]];then\n+    for file in ${res[@]}; do\n+        #echo \"$file\"\n+        file_dir=$(echo $file | cut -d '/' -f 1)\n+        file_type=$(echo $file | rev | cut -d / -f 1 | cut -d '.' -f 1 | rev)\n+        #if [[  \"check$file_dir\" == \"check${module}\" &&  ($file_type == \"cpp\" || $file_type == \"c\" || $file_type == \"java\" || $file_type == \"py\" || $file_type == \"h\" || $file_type == 'js') ]];then\n+        if [[ $file_type == \"cpp\" || $file_type == \"c\" || $file_type == \"java\" || $file_type == \"py\" || $file_type == \"h\" || $file_type == 'js' ]]; then\n+            echo \"code has changed, ${file} is deleted\"\n+            is_code_change_flag=true\n+        fi\n+        if [[ \"check$file_dir\" == \"check${module}\" ]]; then\n             let module_file+=1\n-\tfi\n+        fi\n     done\n \n-    if [[ \"${is_code_change_flag}\" == \"false\" ]];then\n-\techo \"NO CODE FILE DELETED, PASSED!\"\n+    if [[ \"${is_code_change_flag}\" == \"false\" ]]; then\n+        echo \"NO CODE FILE DELETED, PASSED!\"\n         return 0\n     else\n-\techo \"CODE FILE BE DELETED\"\n+        echo \"CODE FILE BE DELETED\"\n         return 2\n     fi\n \n@@ -95,20 +91,18 @@\n \n     doc_num=0\n     doc_sql_manual_num=0\n-    for file in ${res[@]}\n-    do\n+    for file in ${res[@]}; do\n         #check change file is on docs/fs_brokers or not\n-\techo \"$file\"\n-        file_dir=$(echo $file|cut -d '/' -f 1)\n-\tif [[ $file_dir == \"docs\" ]];then\n+        echo \"$file\"\n+        file_dir=$(echo $file | cut -d '/' -f 1)\n+        if [[ $file_dir == \"docs\" ]]; then\n             let doc_num+=1\n-\tfi\n-        if [[ \"$file\" =~ \"docs/zh-CN/docs/sql-manual/\" || \"$file\" =~ \"docs/en/docs/sql-manual/\" ]];then\n+        fi\n+        if [[ \"$file\" =~ \"docs/zh-CN/docs/sql-manual/\" || \"$file\" =~ \"docs/en/docs/sql-manual/\" ]]; then\n             let doc_sql_manual_num+=1\n             continue\n         fi\n \n-\n         #check change file is md/txt/doc file\n         #file_type=$(echo $file|cut -d '.' -f 2)\n         #if [[ $file_type == \"md\" || $file_type == \"txt\" || $file_type == \"doc\" ]];then\n@@ -120,7 +114,7 @@\n     echo \"doc_num: $doc_num\"\n     echo \"file_nums: $file_nums\"\n     echo \"doc_sql_manual_num: $doc_sql_manual_num\"\n-    if [[ $doc_num -eq $file_nums && $doc_sql_manual_num -eq 0 ]];then\n+    if [[ $doc_num -eq $file_nums && $doc_sql_manual_num -eq 0 ]]; then\n         echo \"JUST MODIFY DOCUMENT, NO COED CHSNGED, PASSED!\"\n         return 0\n     else\n@@ -143,17 +137,16 @@\n \n     doc_num=0\n     echo \"START CHECK CODE IS ONLY RELATED BE OR NOT\"\n-    for file in ${res[@]}\n-    do\n+    for file in ${res[@]}; do\n         echo \"$file\"\n         #check change file is on be or not\n-        file_dir=$(echo $file|cut -d '/' -f 1)\n-        if [[ $file_dir == \"be\" || $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]];then\n+        file_dir=$(echo $file | cut -d '/' -f 1)\n+        if [[ $file_dir == \"be\" || $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]]; then\n             let doc_num+=1\n             continue\n-\tfi\n+        fi\n     done\n-    if [[ $doc_num -eq $file_nums ]];then\n+    if [[ $doc_num -eq $file_nums ]]; then\n         echo \"JUST MODIFY BE CODE, NO NEED RUN FE UT, PASSED!\"\n         return 0\n     else\n@@ -176,17 +169,16 @@\n \n     doc_num=0\n     echo \"START CHECK CODE IS ONLY RELATED FE OR NOT\"\n-    for file in ${res[@]}\n-    do\n+    for file in ${res[@]}; do\n         echo \"$file\"\n         #check change file is on be or not\n-        file_dir=$(echo $file|cut -d '/' -f 1)\n-        if [[ $file_dir == \"fe\" || $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]];then\n+        file_dir=$(echo $file | cut -d '/' -f 1)\n+        if [[ $file_dir == \"fe\" || $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]]; then\n             let doc_num+=1\n             continue\n         fi\n     done\n-    if [[ $doc_num -eq $file_nums ]];then\n+    if [[ $doc_num -eq $file_nums ]]; then\n         echo \"JUST MODIFY FE CODE, NO NEED RUN BE UT, PASSED!\"\n         return 0\n     else\n@@ -197,42 +189,49 @@\n \n main() {\n \n-if [ $# > 0 ]; then\n-    case \"$1\" in\n+    if [ $# ] >0; then\n+        case \"$1\" in\n         --is_modify_only_invoved_be)\n-\t    check_removed_change_file $2 \"be\"\n-\t    check_1=$?\n-\t    check_all_change_files_is_under_be $2\n-\t    check_2=$?\n-\t    echo ${check_1}\n-\t    echo ${check_2}\n-\t    res=`expr $check_1 \\* $check_2`\n-\t    exit $res\n-\t    shift ;;\n+            check_removed_change_file $2 \"be\"\n+            check_1=$?\n+            check_all_change_files_is_under_be $2\n+            check_2=$?\n+            echo ${check_1}\n+            echo ${check_2}\n+            res=$(expr $check_1 \\* $check_2)\n+            exit $res\n+            shift\n+            ;;\n         --is_modify_only_invoved_fe)\n-\t    check_removed_change_file $2 \"fe\"\n-\t    check_1=$?\n-\t    check_all_change_files_is_under_fe $2\n-\t    check_2=$?\n-            res=`expr $check_1 \\* $check_2`\n-\t    echo ${check_1}\n-\t    echo ${check_2}\n-\t    exit $res\n-\t    shift ;;\n-\t--is_modify_only_invoved_doc)\n-\t    check_removed_change_file $2 \"docs\"\n-\t    check_1=$?\n-\t    check_all_change_files_is_under_doc $2\n-\t    check_2=$?\n-            res=`expr $check_1 + $check_2`\n-\t    echo ${check_1}\n+            check_removed_change_file $2 \"fe\"\n+            check_1=$?\n+            check_all_change_files_is_under_fe $2\n+            check_2=$?\n+            res=$(expr $check_1 \\* $check_2)\n+            echo ${check_1}\n             echo ${check_2}\n-\t    exit $res\n-\t    shift ;;\n-        *) echo \"ERROR\"; usage; exit 1 ;;\n-    esac\n+            exit $res\n+            shift\n+            ;;\n+        --is_modify_only_invoved_doc)\n+            check_removed_change_file $2 \"docs\"\n+            check_1=$?\n+            check_all_change_files_is_under_doc $2\n+            check_2=$?\n+            res=$(expr $check_1 + $check_2)\n+            echo ${check_1}\n+            echo ${check_2}\n+            exit $res\n+            shift\n+            ;;\n+        *)\n+            echo \"ERROR\"\n+            usage\n+            exit 1\n+            ;;\n+        esac\n \n-fi\n+    fi\n }\n \n main $@\n--- teamcity/doris/benchmark/clickbench/common/clean_disk.sh.orig\n+++ teamcity/doris/benchmark/clickbench/common/clean_disk.sh\n@@ -3,7 +3,7 @@\n df -h\n existsTime=720\n #delete files created 20 hours ago\n-echo `date \"+%Y-%m-%d %H:%M:%S\"` \"start to clear oudate file!\"\n+echo $(date \"+%Y-%m-%d %H:%M:%S\") \"start to clear oudate file!\"\n cd /home/work/teamcity/TeamCity/piplineWork/Compile/\n find /home/work/teamcity/TeamCity/piplineWork/Compile/ -maxdepth 1 -mindepth 1 -mmin +${existsTime} -type d -name \"*_*\" -exec rm -rf {} \\;\n cd -\nteamcity/doris/benchmark/clickbench/common/docker_trigger_api.sh:43:1: reached EOF without closing quote \"\n--- teamcity/doris/benchmark/clickbench/common/teamcity_api.sh.orig\n+++ teamcity/doris/benchmark/clickbench/common/teamcity_api.sh\n@@ -139,23 +139,55 @@\n }\n COMMENT\n \n-\n main() {\n \n-if [ $# > 0 ]; then\n-    case \"$1\" in \n-        --cancel_running_build) build_id=$2; cancel_running_build $build_id; shift ;;\n-        --cancel_pending_build) build_id=$2; cancel_pending_build $build_id; shift ;;\n-        --show_build_state) build_id=$2; res=$(show_build_state $build_id); echo $res; shift ;;\n-        --show_build_status) build_id=$2; res=$(show_build_status $build_id); echo $res; shift ;;\n-        --show_latest_builds) get_latest_builds; shift ;;\n-        --show_queued_builds) get_queued_builds; shift ;;\n-        --get_all_builds_of_pr_id) get_all_builds $2; shift ;;\n-\t--help) usage; shift ;;\n-        *) echo \"ERROR\"; exit 1 ;;\n-    esac\n+    if [ $# ] >0; then\n+        case \"$1\" in\n+        --cancel_running_build)\n+            build_id=$2\n+            cancel_running_build $build_id\n+            shift\n+            ;;\n+        --cancel_pending_build)\n+            build_id=$2\n+            cancel_pending_build $build_id\n+            shift\n+            ;;\n+        --show_build_state)\n+            build_id=$2\n+            res=$(show_build_state $build_id)\n+            echo $res\n+            shift\n+            ;;\n+        --show_build_status)\n+            build_id=$2\n+            res=$(show_build_status $build_id)\n+            echo $res\n+            shift\n+            ;;\n+        --show_latest_builds)\n+            get_latest_builds\n+            shift\n+            ;;\n+        --show_queued_builds)\n+            get_queued_builds\n+            shift\n+            ;;\n+        --get_all_builds_of_pr_id)\n+            get_all_builds $2\n+            shift\n+            ;;\n+        --help)\n+            usage\n+            shift\n+            ;;\n+        *)\n+            echo \"ERROR\"\n+            exit 1\n+            ;;\n+        esac\n \n-fi\n+    fi\n }\n \n main $@\n--- teamcity/doris/benchmark/clickbench/common/teamcity_common.sh.orig\n+++ teamcity/doris/benchmark/clickbench/common/teamcity_common.sh\n@@ -11,7 +11,7 @@\n JSON_HEADER=\"--header \\\"Accept: application/json\\\"\"\n \n usage() {\n-  echo \"\n+    echo \"\n Usage: $0 <options>\n   Optional options:\n      --cancel_running_build build_id    cancel a specific running build\n@@ -32,21 +32,21 @@\n     $0 --show_queued_builds             show all queued builds\n     $0 --get_all_builds_of_pr_id 9151   get all 9151 builds\n   \"\n-  exit 1\n+    exit 1\n }\n \n cancel_running_build() {\n     build_id=$1\n     state=$(show_build_state $build_id)\n-    if [[ $state == \"running\" ]];then\n+    if [[ $state == \"running\" ]]; then\n         #curl --header \"Authorization: Bearer eyJ0eXAiOiAiVENWMiJ9.bW1DcHJpRWNCSktnREhLaHd5Y1lndmpycnJ3.NmEwM2E3YTEtMTVmYy00NGU0LWI1OTAtMzU3MzljODE0Njdk\" http://43.129.232.36:8111/app/rest/builds/id:333 -X POST -H 'Content-Type: application/json' -d '{ \"buildCancelRequest\": {       \"comment\": \"Already running builds will be stopped.\",      \"readdIntoQueue\": \"false\"    }  }'\n         cmd=\"/app/rest/builds/id:$build_id\"\n         cmd=$cmd\" -X POST -H \\'Content-Type: application/json\\' -d \\'{ \\\"buildCancelRequest\\\": {       \\\"comment\\\": \\\"Stop obsolete running builds.\\\",      \\\"readdIntoQueue\\\": \\\"false\\\"    }  }'\"\n         url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $TEAMCITY_SERVER/$cmd\"\n         res=$(eval $eval)\n-        check=$(echo $res |grep status=\"UNKNOWN\")\n-        if [[ -z $check ]];then\n-           echo \"cancel fail!\"\n+        check=$(echo $res | grep status=\"UNKNOWN\")\n+        if [[ -z $check ]]; then\n+            echo \"cancel fail!\"\n         fi\n     fi\n \n@@ -55,15 +55,15 @@\n cancel_pending_build() {\n     build_id=$1\n     state=$(show_build_state $build_id)\n-    if [[ $state == \"queued\" ]];then\n+    if [[ $state == \"queued\" ]]; then\n         cmd=\"app/rest/buildQueue/id:$build_id\"\n         cmd=$cmd\" -X POST -H \\'Content-Type: application/json\\' -d \\'{ \\\"buildCancelRequest\\\": {       \\\"comment\\\": \\\"Cancel obsolete queue build.\\\",      \\\"readdIntoQueue\\\": \\\"false\\\"    }  }'\"\n         url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $TEAMCITY_SERVER/$cmd\"\n         #echo $url\n         res=$(eval $eval)\n-        check=$(echo $res |grep status=\"UNKNOWN\")\n-        if [[ -z $check ]];then\n-           echo \"cancel fail!\"\n+        check=$(echo $res | grep status=\"UNKNOWN\")\n+        if [[ -z $check ]]; then\n+            echo \"cancel fail!\"\n         fi\n     fi\n }\n@@ -73,15 +73,15 @@\n     cmd=\"app/rest/builds?locator=id:$build_id\"\n     url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $TEAMCITY_SERVER/$cmd\"\n     #echo $url\n-    res=`eval $url`\n-    \n+    res=$(eval $url)\n+\n     #check build exist or not\n-    check=$(echo $res|grep \"<builds count=\\\"1\\\"\")\n+    check=$(echo $res | grep \"<builds count=\\\"1\\\"\")\n     if [[ -z $check ]]; then\n         return\n     fi\n     #get state\n-    state=`echo $res |awk -F ' ' '{print $9\" \"$10\" \"$11}'|awk -F \"state=\" '{print $2}'|cut -d ' ' -f 1|sed 's/\\\"//g'`\n+    state=$(echo $res | awk -F ' ' '{print $9\" \"$10\" \"$11}' | awk -F \"state=\" '{print $2}' | cut -d ' ' -f 1 | sed 's/\\\"//g')\n     #only 2 state: queued and finished\n     echo $state\n }\n@@ -91,9 +91,9 @@\n     cmd=\"app/rest/builds?locator=id:$build_id\"\n     url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $TEAMCITY_SERVER/$cmd\"\n     #echo $url\n-    res=`eval $url`\n+    res=$(eval $url)\n     #check build exist or not\n-    check1=$(echo $res|grep \"<builds count=\\\"1\\\"\")\n+    check1=$(echo $res | grep \"<builds count=\\\"1\\\"\")\n     if [[ -z $check1 ]]; then\n         return\n     fi\n@@ -102,8 +102,8 @@\n     #if [[ -z $check ]]; then\n     #    return\n     #fi\n-    state=`echo $res |awk -F ' ' '{print $9\" \"$10\" \"$11}'|awk -F \"status=\" '{print $2}'|cut -d ' ' -f 1|sed 's/\\\"//g'`\n-    #only 2 state: \n+    state=$(echo $res | awk -F ' ' '{print $9\" \"$10\" \"$11}' | awk -F \"status=\" '{print $2}' | cut -d ' ' -f 1 | sed 's/\\\"//g')\n+    #only 2 state:\n     echo $state\n }\n \n@@ -111,7 +111,7 @@\n     branch=$1\n     cmd=\"app/rest/builds?locator=branch:$branch\"\n     url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $TEAMCITY_SERVER/$cmd\"\n-    res=`eval $url`\n+    res=$(eval $url)\n }\n \n get_latest_builds() {\n@@ -125,14 +125,12 @@\n     cmd=\"app/rest/buildQueue\"\n     url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $JSON_HEADER $TEAMCITY_SERVER/$cmd\"\n     #echo $url\n-    res=`eval $url`\n+    res=$(eval $url)\n     #a=$(echo $res|grep -oP 'build id=.*'|head -1)\n-    \n-    \n+\n     #a=$res\n     #while [[ \"check\"$a != \"check\" ]]\n     #do\n     #    a=$(echo $a|awk -F 'build id=\"' '{print $2}')\n     #done\n }\n-\n--- teamcity/doris/benchmark/clickbench/common/test.sh.orig\n+++ teamcity/doris/benchmark/clickbench/common/test.sh\n@@ -3,33 +3,29 @@\n repo=doris\n GITHUB_TOKEN=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\n \n-function get_all_change_files(){\n+function get_all_change_files() {\n     pr_id=$1\n     files=()\n \n     page=1\n     per_page=100\n-    while [ 1 -eq 1 ]\n-    do\n-\t#echo \"curl --header 'authorization: Bearer ${GITHUB_TOKEN}' https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files?per_page=$per_page\\&page=$page\"\n-\tres=($(curl --header \"authorization: Bearer ${GITHUB_TOKEN}\" https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files?per_page=$per_page\\&page=$page|jq -r '.[]|select(.status = \"removed\")| .filename'))\n+    while [ 1 -eq 1 ]; do\n+        #echo \"curl --header 'authorization: Bearer ${GITHUB_TOKEN}' https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files?per_page=$per_page\\&page=$page\"\n+        res=($(curl --header \"authorization: Bearer ${GITHUB_TOKEN}\" https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files?per_page=$per_page\\&page=$page | jq -r '.[]|select(.status = \"removed\")| .filename'))\n         res_len=${#res[@]}\n-        if [ ${res_len} -ne 0 ];then\n-\t    let page+=1\n+        if [ ${res_len} -ne 0 ]; then\n+            let page+=1\n             #files=\"${res[@]}\"\"$files\"\n-\t    files=(${res[@]} ${files[*]})\n+            files=(${res[@]} ${files[*]})\n         else\n             break\n         fi\n-\techo \n+        echo\n     done\n     echo \"${files[@]}\"\n }\n \n-\n out=($(get_all_change_files 11154))\n \n-\n-\n echo \"==================\"\n echo \"${out[@]}\"\n--- teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh.orig\n+++ teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh\n@@ -3,9 +3,8 @@\n #res=(`git diff --name-only HEAD~ HEAD`)\n #file_nums=${#res[@]}\n \n-\n usage() {\n-  echo \"\n+    echo \"\n Usage: $0 <options>\n   Optional options:\n \n@@ -14,24 +13,22 @@\n     $0 --is_modify_only_invoved_fe pr_id          if pr changed code only invoved fe doc, fs_brocker, return 0; else return 2\n     $0 --is_modify_only_invoved_doc pr_id         if pr changed code only invoved doc, fs_brocker, return 0; else return 2\n   \"\n-  exit 1\n+    exit 1\n }\n \n-\n function check_all_change_files_is_under_doc() {\n \n     pr_id=$1\n     owner='apache'\n     repo='incubator-doris'\n-    res=($(curl https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files|jq -r '.[]|select(.status != \"removed\")| .filename'))\n+    res=($(curl https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files | jq -r '.[]|select(.status != \"removed\")| .filename'))\n     file_nums=${#res[@]}\n \n     doc_num=0\n-    for file in ${res[@]}\n-    do\n+    for file in ${res[@]}; do\n         #check change file is on docs/fs_brokers or not\n-        file_dir=$(echo $file|cut -d '/' -f 1)\n-        if [[ $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]];then\n+        file_dir=$(echo $file | cut -d '/' -f 1)\n+        if [[ $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]]; then\n             let doc_num+=1\n             continue\n         fi\n@@ -43,7 +40,7 @@\n         #fi\n     done\n \n-    if [[ $doc_num -eq $file_nums ]];then\n+    if [[ $doc_num -eq $file_nums ]]; then\n         echo \"JUST MODIFY DOCUMENT, NO COED CHSNGED, PASSED!\"\n         exit 0\n     else\n@@ -57,21 +54,20 @@\n     pr_id=$1\n     owner='apache'\n     repo='incubator-doris'\n-    res=($(curl https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files|jq -r '.[]|select(.status != \"removed\")| .filename'))\n+    res=($(curl https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files | jq -r '.[]|select(.status != \"removed\")| .filename'))\n     file_nums=${#res[@]}\n \n     doc_num=0\n     echo \"START CHECK CODE IS ONLY RELATED BE OR NOT\"\n-    for file in ${res[@]}\n-    do\n+    for file in ${res[@]}; do\n         #check change file is on be or not\n-        file_dir=$(echo $file|cut -d '/' -f 1)\n-        if [[ $file_dir == \"be\" || $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]];then\n+        file_dir=$(echo $file | cut -d '/' -f 1)\n+        if [[ $file_dir == \"be\" || $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]]; then\n             let doc_num+=1\n             continue\n-\tfi\n+        fi\n     done\n-    if [[ $doc_num -eq $file_nums ]];then\n+    if [[ $doc_num -eq $file_nums ]]; then\n         echo \"JUST MODIFY BE CODE, NO NEED RUN FE UT, PASSED!\"\n         exit 0\n     else\n@@ -85,21 +81,20 @@\n     pr_id=$1\n     owner='apache'\n     repo='incubator-doris'\n-    res=($(curl https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files|jq -r '.[]|select(.status != \"removed\")| .filename'))\n+    res=($(curl https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files | jq -r '.[]|select(.status != \"removed\")| .filename'))\n     file_nums=${#res[@]}\n \n     doc_num=0\n     echo \"START CHECK CODE IS ONLY RELATED FE OR NOT\"\n-    for file in ${res[@]}\n-    do\n+    for file in ${res[@]}; do\n         #check change file is on be or not\n-        file_dir=$(echo $file|cut -d '/' -f 1)\n-        if [[ $file_dir == \"fe\" || $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]];then\n+        file_dir=$(echo $file | cut -d '/' -f 1)\n+        if [[ $file_dir == \"fe\" || $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]]; then\n             let doc_num+=1\n             continue\n         fi\n     done\n-    if [[ $doc_num -eq $file_nums ]];then\n+    if [[ $doc_num -eq $file_nums ]]; then\n         echo \"JUST MODIFY FE CODE, NO NEED RUN BE UT, PASSED!\"\n         exit 0\n     else\n@@ -110,15 +105,28 @@\n \n main() {\n \n-if [ $# > 0 ]; then\n-    case \"$1\" in\n-        --is_modify_only_invoved_be) check_all_change_files_is_under_be $2; shift ;;\n-        --is_modify_only_invoved_fe) check_all_change_files_is_under_fe $2; shift ;;\n-\t--is_modify_only_doc) check_all_change_files_is_under_doc $2; shift ;;\n-        *) echo \"ERROR\"; usage; exit 1 ;;\n-    esac\n+    if [ $# ] >0; then\n+        case \"$1\" in\n+        --is_modify_only_invoved_be)\n+            check_all_change_files_is_under_be $2\n+            shift\n+            ;;\n+        --is_modify_only_invoved_fe)\n+            check_all_change_files_is_under_fe $2\n+            shift\n+            ;;\n+        --is_modify_only_doc)\n+            check_all_change_files_is_under_doc $2\n+            shift\n+            ;;\n+        *)\n+            echo \"ERROR\"\n+            usage\n+            exit 1\n+            ;;\n+        esac\n \n-fi\n+    fi\n }\n \n main $@\n--- teamcity/doris/benchmark/clickbench/prepare.sh.orig\n+++ teamcity/doris/benchmark/clickbench/prepare.sh\n@@ -22,4 +22,3 @@\n fi\n qa_home=\"${pipeline_home}/selectdb-qa\"\n cd \"${qa_home}\" && git stash && git checkout main && git pull && cd -\n-\n----------\n\nYou can reformat the above files to meet shfmt's requirements by typing:\n\n  shfmt  -w filename\n\n\n```\n</details>\n\n\n","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301609961/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301610732","html_url":"https://github.com/apache/doris/pull/13926#issuecomment-1301610732","issue_url":"https://api.github.com/repos/apache/doris/issues/13926","id":1301610732,"node_id":"IC_kwDOBfSlxs5NlQDs","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-03T03:53:16Z","updated_at":"2022-11-03T03:53:16Z","author_association":"CONTRIBUTOR","body":"PR approved by at least one committer and no changes requested.","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301610732/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301610747","html_url":"https://github.com/apache/doris/pull/13926#issuecomment-1301610747","issue_url":"https://api.github.com/repos/apache/doris/issues/13926","id":1301610747,"node_id":"IC_kwDOBfSlxs5NlQD7","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-03T03:53:19Z","updated_at":"2022-11-03T03:53:19Z","author_association":"CONTRIBUTOR","body":"PR approved by anyone and no changes requested.","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301610747/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301610857","html_url":"https://github.com/apache/doris/pull/13259#issuecomment-1301610857","issue_url":"https://api.github.com/repos/apache/doris/issues/13259","id":1301610857,"node_id":"IC_kwDOBfSlxs5NlQFp","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-03T03:53:35Z","updated_at":"2022-11-03T03:53:35Z","author_association":"CONTRIBUTOR","body":"#### `sh-checker report`\n\nTo get the full details, please check in the [job](\"https://github.com/apache/doris/actions/runs/3382866186\") output.\n\n<details>\n<summary>shellcheck errors</summary>\n\n```\n\n'shellcheck ' returned error 1 finding the following syntactical issues:\n\n----------\n\nIn teamcity/doris/benchmark/clickbench/common/check_and_kill_deleted_proc.sh line 11:\ncheck=$(lsof -i:$port|awk '{print $2}'|wc -l)\n                ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \ncheck=$(lsof -i:\"$port\"|awk '{print $2}'|wc -l)\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_and_kill_deleted_proc.sh line 12:\nif [ \"check$check\" != \"check0\" ];then\n   ^---------------------------^ SC2292 (style): Prefer [[ ]] over [ ] for tests in Bash/Ksh.\n           ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \nif [[ \"check${check}\" != \"check0\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_and_kill_deleted_proc.sh line 13:\n    if [ \"check\"${case_level} == \"check\" ];then\n       ^-- SC2292 (style): Prefer [[ ]] over [ ] for tests in Bash/Ksh.\n                ^-----------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n    if [[ \"check\"\"${case_level}\" == \"check\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_and_kill_deleted_proc.sh line 14:\n        check_res=$(pwdx `lsof -i:$port|grep -v PID|awk '{print $2}'`|grep $env_name|grep deleted||wc -l)\n                         ^-- SC2046 (warning): Quote this to prevent word splitting.\n                         ^-- SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n                                  ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                  ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                           ^-------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                                                           ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        check_res=$(pwdx $(lsof -i:\"$port\"|grep -v PID|awk '{print $2}')|grep $env_name|grep deleted||wc -l)\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_and_kill_deleted_proc.sh line 16:\n        check_res=$(pwdx `lsof -i:$port|grep -v PID|awk '{print $2}'`|grep $env_name|grep $case_level|grep deleted||wc -l)\n                         ^-- SC2046 (warning): Quote this to prevent word splitting.\n                         ^-- SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n                                  ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                  ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                           ^-------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                                                           ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                                          ^---------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                                                                          ^---------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        check_res=$(pwdx $(lsof -i:\"$port\"|grep -v PID|awk '{print $2}')|grep $env_name|grep $case_level|grep deleted||wc -l)\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_and_kill_deleted_proc.sh line 18:\n    if [ \"check$check_res\" != \"check0\" ];then\n       ^-- SC2292 (style): Prefer [[ ]] over [ ] for tests in Bash/Ksh.\n               ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    if [[ \"check${check_res}\" != \"check0\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_and_kill_deleted_proc.sh line 19:\n        be_pid=(`lsof -i:$port|grep -v PID|awk '{print $2}'`)\n                ^-- SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).\n                ^-- SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n                         ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                         ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        be_pid=($(lsof -i:\"$port\"|grep -v PID|awk '{print $2}'))\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_and_kill_deleted_proc.sh line 20:\n        echo \"Detected residual processes: ${be_pid}\"\n                                           ^-------^ SC2128 (warning): Expanding an array without an index only gives the first element.\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_and_kill_deleted_proc.sh line 21:\n        echo \"kill residual processes: kill -9 ${be_pid}\"\n                                               ^-------^ SC2128 (warning): Expanding an array without an index only gives the first element.\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_and_kill_deleted_proc.sh line 22:\n        kill -9 $be_pid\n                ^-----^ SC2128 (warning): Expanding an array without an index only gives the first element.\n                ^-----^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                ^-----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        kill -9 \"$be_pid\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 29:\n    while [ 1 -eq 1 ]\n          ^---------^ SC2292 (style): Prefer [[ ]] over [ ] for tests in Bash/Ksh.\n              ^-^ SC2050 (warning): This expression is constant. Did you forget the $ on a variable?\n\nDid you mean: \n    while [[ 1 -eq 1 ]]\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 32:\n        res=($(curl --header \"authorization: Bearer ${GITHUB_TOKEN}\" https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files?per_page=$per_page\\&page=$page|jq -r '.[]|select(.status = \"removed\")| .filename'))\n             ^-- SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).\n                                                                                                  ^------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                                                                           ^-----^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                                                                                         ^------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                                                                                                                                 ^-------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                                                                                                                 ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                                                                                                                 ^---^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                                                                                                                                 ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        res=($(curl --header \"authorization: Bearer ${GITHUB_TOKEN}\" https://api.github.com/repos/\"${owner}\"/\"${repo}\"/pulls/\"${pr_id}\"/files?per_page=\"$per_page\"\\&page=$page|jq -r '.[]|select(.status = \"removed\")| .filename'))\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 35:\n        if [ ${res_len} -ne 0 ];then\n           ^------------------^ SC2292 (style): Prefer [[ ]] over [ ] for tests in Bash/Ksh.\n             ^--------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n        if [[ \"${res_len}\" -ne 0 ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 36:\n            let page+=1\n            ^---------^ SC2219 (style): Instead of 'let expr', prefer (( expr )) .\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 38:\n            files=(${res[@]} ${files[*]})\n                   ^-------^ SC2206 (warning): Quote to prevent word splitting/globbing, or split robustly with mapfile or read -a.\n                             ^---------^ SC2206 (warning): Quote to prevent word splitting/globbing, or split robustly with mapfile or read -a.\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 54:\n    res=($(get_all_change_files $pr_id))\n         ^----------------------------^ SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).\n                                ^----^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    res=($(get_all_change_files \"$pr_id\"))\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 58:\n    for file in ${res[@]}\n                ^-------^ SC2068 (error): Double quote array expansions to avoid re-splitting elements.\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 61:\n\tfile_dir=$(echo $file|cut -d '/' -f 1)\n                        ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                        ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n\tfile_dir=$(echo \"$file\"|cut -d '/' -f 1)\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 62:\n        file_type=$(echo $file|rev|cut -d / -f 1|cut -d '.' -f 1|rev)\n                         ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                         ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        file_type=$(echo \"$file\"|rev|cut -d / -f 1|cut -d '.' -f 1|rev)\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 64:\n\tif [[ $file_type == \"cpp\" || $file_type == \"c\" || $file_type == \"java\" || $file_type == \"py\" || $file_type == \"h\" || $file_type == 'js' ]];then\n              ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                     ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                          ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                                  ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                                                        ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                                                                             ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n\tif [[ ${file_type} == \"cpp\" || ${file_type} == \"c\" || ${file_type} == \"java\" || ${file_type} == \"py\" || ${file_type} == \"h\" || ${file_type} == 'js' ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 68:\n\tif [[ \"check$file_dir\" == \"check${module}\" ]];then\n                    ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n\tif [[ \"check${file_dir}\" == \"check${module}\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 69:\n            let module_file+=1\n            ^----------------^ SC2219 (style): Instead of 'let expr', prefer (( expr )) .\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 89:\n    res=($(get_all_change_files $pr_id))\n         ^----------------------------^ SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).\n                                ^----^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    res=($(get_all_change_files \"$pr_id\"))\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 98:\n    for file in ${res[@]}\n                ^-------^ SC2068 (error): Double quote array expansions to avoid re-splitting elements.\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 101:\n\techo \"$file\"\n              ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n\techo \"${file}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 102:\n        file_dir=$(echo $file|cut -d '/' -f 1)\n                        ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                        ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        file_dir=$(echo \"$file\"|cut -d '/' -f 1)\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 103:\n\tif [[ $file_dir == \"docs\" ]];then\n              ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n\tif [[ ${file_dir} == \"docs\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 104:\n            let doc_num+=1\n            ^------------^ SC2219 (style): Instead of 'let expr', prefer (( expr )) .\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 106:\n        if [[ \"$file\" =~ \"docs/zh-CN/docs/sql-manual/\" || \"$file\" =~ \"docs/en/docs/sql-manual/\" ]];then\n               ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                           ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        if [[ \"${file}\" =~ \"docs/zh-CN/docs/sql-manual/\" || \"${file}\" =~ \"docs/en/docs/sql-manual/\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 107:\n            let doc_sql_manual_num+=1\n            ^-----------------------^ SC2219 (style): Instead of 'let expr', prefer (( expr )) .\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 120:\n    echo \"doc_num: $doc_num\"\n                   ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    echo \"doc_num: ${doc_num}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 121:\n    echo \"file_nums: $file_nums\"\n                     ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    echo \"file_nums: ${file_nums}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 122:\n    echo \"doc_sql_manual_num: $doc_sql_manual_num\"\n                              ^-----------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    echo \"doc_sql_manual_num: ${doc_sql_manual_num}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 123:\n    if [[ $doc_num -eq $file_nums && $doc_sql_manual_num -eq 0 ]];then\n          ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                       ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                     ^-----------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    if [[ ${doc_num} -eq ${file_nums} && ${doc_sql_manual_num} -eq 0 ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 138:\n    res=($(get_all_change_files $pr_id))\n         ^----------------------------^ SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).\n                                ^----^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    res=($(get_all_change_files \"$pr_id\"))\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 146:\n    for file in ${res[@]}\n                ^-------^ SC2068 (error): Double quote array expansions to avoid re-splitting elements.\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 148:\n        echo \"$file\"\n              ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        echo \"${file}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 150:\n        file_dir=$(echo $file|cut -d '/' -f 1)\n                        ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                        ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        file_dir=$(echo \"$file\"|cut -d '/' -f 1)\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 151:\n        if [[ $file_dir == \"be\" || $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]];then\n              ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                   ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                          ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        if [[ ${file_dir} == \"be\" || ${file_dir} == \"docs\" || ${file_dir} == \"fs_brokers\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 152:\n            let doc_num+=1\n            ^------------^ SC2219 (style): Instead of 'let expr', prefer (( expr )) .\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 156:\n    if [[ $doc_num -eq $file_nums ]];then\n          ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                       ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    if [[ ${doc_num} -eq ${file_nums} ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 171:\n    res=($(get_all_change_files $pr_id))\n         ^----------------------------^ SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).\n                                ^----^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    res=($(get_all_change_files \"$pr_id\"))\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 179:\n    for file in ${res[@]}\n                ^-------^ SC2068 (error): Double quote array expansions to avoid re-splitting elements.\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 181:\n        echo \"$file\"\n              ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        echo \"${file}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 183:\n        file_dir=$(echo $file|cut -d '/' -f 1)\n                        ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                        ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        file_dir=$(echo \"$file\"|cut -d '/' -f 1)\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 184:\n        if [[ $file_dir == \"fe\" || $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]];then\n              ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                   ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                          ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        if [[ ${file_dir} == \"fe\" || ${file_dir} == \"docs\" || ${file_dir} == \"fs_brokers\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 185:\n            let doc_num+=1\n            ^------------^ SC2219 (style): Instead of 'let expr', prefer (( expr )) .\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 189:\n    if [[ $doc_num -eq $file_nums ]];then\n          ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                       ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    if [[ ${doc_num} -eq ${file_nums} ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 200:\nif [ $# > 0 ]; then\n   ^--------^ SC2292 (style): Prefer [[ ]] over [ ] for tests in Bash/Ksh.\n        ^-- SC2071 (error): > is for string comparisons. Use -gt instead.\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 203:\n\t    check_removed_change_file $2 \"be\"\n                                      ^-- SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n\t    check_removed_change_file \"$2\" \"be\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 205:\n\t    check_all_change_files_is_under_be $2\n                                               ^-- SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n\t    check_all_change_files_is_under_be \"$2\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 207:\n\t    echo ${check_1}\n                 ^--------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n\nDid you mean: \n\t    echo \"${check_1}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 208:\n\t    echo ${check_2}\n                 ^--------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n\nDid you mean: \n\t    echo \"${check_2}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 209:\n\t    res=`expr $check_1 \\* $check_2`\n            ^-^ SC2178 (warning): Variable was used as an array but is now assigned a string.\n                ^-------------------------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n                 ^--^ SC2003 (style): expr is antiquated. Consider rewriting this using $((..)), ${} or [[ ]].\n                      ^------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                      ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                  ^------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                  ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n\t    res=$(expr \"$check_1\" \\* $check_2)\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 210:\n\t    exit $res\n                 ^--^ SC2128 (warning): Expanding an array without an index only gives the first element.\n                 ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                 ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n\t    exit \"$res\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 213:\n\t    check_removed_change_file $2 \"fe\"\n                                      ^-- SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n\t    check_removed_change_file \"$2\" \"fe\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 215:\n\t    check_all_change_files_is_under_fe $2\n                                               ^-- SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n\t    check_all_change_files_is_under_fe \"$2\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 217:\n            res=`expr $check_1 \\* $check_2`\n            ^-^ SC2178 (warning): Variable was used as an array but is now assigned a string.\n                ^-------------------------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n                 ^--^ SC2003 (style): expr is antiquated. Consider rewriting this using $((..)), ${} or [[ ]].\n                      ^------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                      ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                  ^------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                  ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n            res=$(expr \"$check_1\" \\* $check_2)\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 218:\n\t    echo ${check_1}\n                 ^--------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n\nDid you mean: \n\t    echo \"${check_1}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 219:\n\t    echo ${check_2}\n                 ^--------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n\nDid you mean: \n\t    echo \"${check_2}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 220:\n\t    exit $res\n                 ^--^ SC2128 (warning): Expanding an array without an index only gives the first element.\n                 ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                 ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n\t    exit \"$res\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 223:\n\t    check_removed_change_file $2 \"docs\"\n                                      ^-- SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n\t    check_removed_change_file \"$2\" \"docs\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 225:\n\t    check_all_change_files_is_under_doc $2\n                                                ^-- SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n\t    check_all_change_files_is_under_doc \"$2\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 227:\n            res=`expr $check_1 + $check_2`\n            ^-^ SC2178 (warning): Variable was used as an array but is now assigned a string.\n                ^------------------------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n                 ^--^ SC2003 (style): expr is antiquated. Consider rewriting this using $((..)), ${} or [[ ]].\n                      ^------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                      ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                 ^------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                 ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n            res=$(expr \"$check_1\" + $check_2)\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 228:\n\t    echo ${check_1}\n                 ^--------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n\nDid you mean: \n\t    echo \"${check_1}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 229:\n            echo ${check_2}\n                 ^--------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n\nDid you mean: \n            echo \"${check_2}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 230:\n\t    exit $res\n                 ^--^ SC2128 (warning): Expanding an array without an index only gives the first element.\n                 ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                 ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n\t    exit \"$res\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 238:\nmain $@\n     ^-- SC2068 (error): Double quote array expansions to avoid re-splitting elements.\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 6:\necho `date \"+%Y-%m-%d %H:%M:%S\"` \"start to clear oudate file!\"\n     ^-------------------------^ SC2046 (warning): Quote this to prevent word splitting.\n     ^-------------------------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n\nDid you mean: \necho $(date \"+%Y-%m-%d %H:%M:%S\") \"start to clear oudate file!\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 7:\ncd /home/work/teamcity/TeamCity/piplineWork/Compile/\n^-- SC2164 (warning): Use 'cd ... || exit' or 'cd ... || return' in case cd fails.\n\nDid you mean: \ncd /home/work/teamcity/TeamCity/piplineWork/Compile/ || exit\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 8:\nfind /home/work/teamcity/TeamCity/piplineWork/Compile/ -maxdepth 1 -mindepth 1 -mmin +${existsTime} -type d -name \"*_*\" -exec rm -rf {} \\;\n                                                                                      ^-----------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n\nDid you mean: \nfind /home/work/teamcity/TeamCity/piplineWork/Compile/ -maxdepth 1 -mindepth 1 -mmin +\"${existsTime}\" -type d -name \"*_*\" -exec rm -rf {} \\;\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 9:\ncd -\n^--^ SC2164 (warning): Use 'cd ... || exit' or 'cd ... || return' in case cd fails.\n^--^ SC2103 (info): Use a ( subshell ) to avoid having to cd back.\n\nDid you mean: \ncd - || exit\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 10:\ncd /home/work/teamcity/TeamCity/piplineWork/feUt/\n^-- SC2164 (warning): Use 'cd ... || exit' or 'cd ... || return' in case cd fails.\n\nDid you mean: \ncd /home/work/teamcity/TeamCity/piplineWork/feUt/ || exit\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 11:\nfind /home/work/teamcity/TeamCity/piplineWork/feUt/ -maxdepth 1 -mindepth 1 -mmin +${existsTime} -type d -name \"*_*\" -exec rm -rf {} \\;\n                                                                                   ^-----------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n\nDid you mean: \nfind /home/work/teamcity/TeamCity/piplineWork/feUt/ -maxdepth 1 -mindepth 1 -mmin +\"${existsTime}\" -type d -name \"*_*\" -exec rm -rf {} \\;\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 12:\ncd -\n^--^ SC2164 (warning): Use 'cd ... || exit' or 'cd ... || return' in case cd fails.\n\nDid you mean: \ncd - || exit\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 13:\ncd /home/work/teamcity/TeamCity/piplineWork/beUt/\n^-- SC2164 (warning): Use 'cd ... || exit' or 'cd ... || return' in case cd fails.\n\nDid you mean: \ncd /home/work/teamcity/TeamCity/piplineWork/beUt/ || exit\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 14:\nfind /home/work/teamcity/TeamCity/piplineWork/beUt/ -maxdepth 1 -mindepth 1 -mmin +${existsTime} -type d -name \"*_*\" -exec rm -rf {} \\;\n                                                                                   ^-----------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n\nDid you mean: \nfind /home/work/teamcity/TeamCity/piplineWork/beUt/ -maxdepth 1 -mindepth 1 -mmin +\"${existsTime}\" -type d -name \"*_*\" -exec rm -rf {} \\;\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 15:\ncd -\n^--^ SC2164 (warning): Use 'cd ... || exit' or 'cd ... || return' in case cd fails.\n\nDid you mean: \ncd - || exit\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 16:\ncd /mnt/ssd01/teamcity/TeamCity/piplineWork/Compile/\n^-- SC2164 (warning): Use 'cd ... || exit' or 'cd ... || return' in case cd fails.\n\nDid you mean: \ncd /mnt/ssd01/teamcity/TeamCity/piplineWork/Compile/ || exit\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 17:\nfind /mnt/ssd01/teamcity/TeamCity/piplineWork/Compile/ -maxdepth 1 -mindepth 1 -mmin +${existsTime} -type d -name \"*_*\" -exec rm -rf {} \\;\n                                                                                      ^-----------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n\nDid you mean: \nfind /mnt/ssd01/teamcity/TeamCity/piplineWork/Compile/ -maxdepth 1 -mindepth 1 -mmin +\"${existsTime}\" -type d -name \"*_*\" -exec rm -rf {} \\;\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 18:\ncd -\n^--^ SC2164 (warning): Use 'cd ... || exit' or 'cd ... || return' in case cd fails.\n\nDid you mean: \ncd - || exit\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 19:\ncd /mnt/ssd01/teamcity/TeamCity/piplineWork/beUt/\n^-- SC2164 (warning): Use 'cd ... || exit' or 'cd ... || return' in case cd fails.\n\nDid you mean: \ncd /mnt/ssd01/teamcity/TeamCity/piplineWork/beUt/ || exit\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 20:\nfind /mnt/ssd01/teamcity/TeamCity/piplineWork/beUt/ -maxdepth 1 -mindepth 1 -mmin +${existsTime} -type d -name \"*_*\" -exec rm -rf {} \\;\n                                                                                   ^-----------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n\nDid you mean: \nfind /mnt/ssd01/teamcity/TeamCity/piplineWork/beUt/ -maxdepth 1 -mindepth 1 -mmin +\"${existsTime}\" -type d -name \"*_*\" -exec rm -rf {} \\;\n\n\nIn teamcity/doris/benchmark/clickbench/common/docker_compile.sh line 3:\nid=$(echo $RANDOM)\n   ^-------------^ SC2116 (style): Useless echo? Instead of 'cmd $(echo foo)', just use 'cmd foo'.\n          ^-----^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n          ^-----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \nid=$(echo \"$RANDOM\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/docker_compile.sh line 5:\ndocker run -i --rm --name doris-compile-$id -e TZ=Asia/Shanghai -v /etc/localtime:/etc/localtime:ro -v /home/work/.m2:/root/.m2 -v /home/work/.npm:/root/.npm -v $work_path:/root/doris apache/incubator-doris:build-env-ldb-toolchain-latest /bin/bash -c \"cd /root/doris && sh builds.sh\"\n                                        ^-^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                        ^-^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                                                                                                                 ^--------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                                                                                                                                                 ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \ndocker run -i --rm --name doris-compile-\"$id\" -e TZ=Asia/Shanghai -v /etc/localtime:/etc/localtime:ro -v /home/work/.m2:/root/.m2 -v /home/work/.npm:/root/.npm -v $work_path:/root/doris apache/incubator-doris:build-env-ldb-toolchain-latest /bin/bash -c \"cd /root/doris && sh builds.sh\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/docker_trigger_api.sh line 40:\n    docker_name=\"doris-compile-\"$(echo $RANDOM)\n                               ^-- SC1078 (warning): Did you forget to close this double quoted string?\n\n\nIn teamcity/doris/benchmark/clickbench/common/docker_trigger_api.sh line 42:\n    cmd=\"docker run -i --rm --name doris-compile-$id -e TZ=Asia/Shanghai -v /etc/localtime:/etc/localtime:ro -v /home/work/.m2:/root/.m2 -v /home/work/.npm:/root/.npm -v %system.teamcity.build.workingDir%:/root/doris apache/incubator-doris:build-env-ldb-toolchain-latest /bin/bash -c \"cd /root/doris && sh builds.sh\"\n        ^-- SC1079 (info): This is actually an end quote, but due to next char it looks suspect.\n\n\nIn teamcity/doris/benchmark/clickbench/common/docker_trigger_api.sh line 43:\n\"\n^-- SC1073 (error): Couldn't parse this double quoted string. Fix to allow more checks.\n^-- SC1009 (info): The mentioned syntax error was in this simple command.\n\n\nIn teamcity/doris/benchmark/clickbench/common/docker_trigger_api.sh line 45:\n\n^-- SC1072 (error): Expected end of double quoted string. Fix any mentioned problems and try again.\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_api.sh line 5:\n<<'COMMENT'\n^---------^ SC2188 (warning): This redirection doesn't have a command. Move to its command (or use 'true' as no-op).\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_api.sh line 145:\nif [ $# > 0 ]; then\n   ^--------^ SC2292 (style): Prefer [[ ]] over [ ] for tests in Bash/Ksh.\n        ^-- SC2071 (error): > is for string comparisons. Use -gt instead.\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_api.sh line 147:\n        --cancel_running_build) build_id=$2; cancel_running_build $build_id; shift ;;\n                                                                  ^-------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                                                  ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        --cancel_running_build) build_id=$2; cancel_running_build \"$build_id\"; shift ;;\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_api.sh line 148:\n        --cancel_pending_build) build_id=$2; cancel_pending_build $build_id; shift ;;\n                                                                  ^-------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                                                  ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        --cancel_pending_build) build_id=$2; cancel_pending_build \"$build_id\"; shift ;;\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_api.sh line 149:\n        --show_build_state) build_id=$2; res=$(show_build_state $build_id); echo $res; shift ;;\n                                                                ^-------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                                                ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                                 ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                                                                 ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        --show_build_state) build_id=$2; res=$(show_build_state \"$build_id\"); echo $res; shift ;;\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_api.sh line 150:\n        --show_build_status) build_id=$2; res=$(show_build_status $build_id); echo $res; shift ;;\n                                                                  ^-------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                                                  ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                                   ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                                                                   ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        --show_build_status) build_id=$2; res=$(show_build_status \"$build_id\"); echo $res; shift ;;\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_api.sh line 153:\n        --get_all_builds_of_pr_id) get_all_builds $2; shift ;;\n                                                  ^-- SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n        --get_all_builds_of_pr_id) get_all_builds \"$2\"; shift ;;\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_api.sh line 161:\nmain $@\n     ^-- SC2068 (error): Double quote array expansions to avoid re-splitting elements.\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 4:\nzcp_TOKEN=\"eyJ0eXAiOiAiVENWMiJ9.bW1DcHJpRWNCSktnREhLaHd5Y1lndmpycnJ3.NmEwM2E3YTEtMTVmYy00NGU0LWI1OTAtMzU3MzljODE0Njdk\"\n^-------^ SC2034 (warning): zcp_TOKEN appears unused. Verify use (or export if used externally).\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 7:\nzcp_TEAMCITY_SERVER=\"http://43.129.232.36:8111\"\n^-----------------^ SC2034 (warning): zcp_TEAMCITY_SERVER appears unused. Verify use (or export if used externally).\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 40:\n    state=$(show_build_state $build_id)\n                             ^-------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                             ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    state=$(show_build_state \"$build_id\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 41:\n    if [[ $state == \"running\" ]];then\n          ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    if [[ ${state} == \"running\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 43:\n        cmd=\"/app/rest/builds/id:$build_id\"\n                                 ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        cmd=\"/app/rest/builds/id:${build_id}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 44:\n        cmd=$cmd\" -X POST -H \\'Content-Type: application/json\\' -d \\'{ \\\"buildCancelRequest\\\": {       \\\"comment\\\": \\\"Stop obsolete running builds.\\\",      \\\"readdIntoQueue\\\": \\\"false\\\"    }  }'\"\n            ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        cmd=${cmd}\" -X POST -H \\'Content-Type: application/json\\' -d \\'{ \\\"buildCancelRequest\\\": {       \\\"comment\\\": \\\"Stop obsolete running builds.\\\",      \\\"readdIntoQueue\\\": \\\"false\\\"    }  }'\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 45:\n        url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $TEAMCITY_SERVER/$cmd\"\n                     ^-----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                               ^------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                              ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                       ^--------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                        ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        url=\"curl -s ${HEADER} \\\"${AUTHORIZATION} ${TOKEN}\\\" ${TEAMCITY_SERVER}/${cmd}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 46:\n        res=$(eval $eval)\n                   ^---^ SC2154 (warning): eval is referenced but not assigned (for output from commands, use \"$(eval ...)\" ).\n                   ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                   ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        res=$(eval \"$eval\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 47:\n        check=$(echo $res |grep status=\"UNKNOWN\")\n                     ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                     ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        check=$(echo \"$res\" |grep status=\"UNKNOWN\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 48:\n        if [[ -z $check ]];then\n                 ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        if [[ -z ${check} ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 57:\n    state=$(show_build_state $build_id)\n                             ^-------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                             ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    state=$(show_build_state \"$build_id\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 58:\n    if [[ $state == \"queued\" ]];then\n          ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    if [[ ${state} == \"queued\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 59:\n        cmd=\"app/rest/buildQueue/id:$build_id\"\n                                    ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        cmd=\"app/rest/buildQueue/id:${build_id}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 60:\n        cmd=$cmd\" -X POST -H \\'Content-Type: application/json\\' -d \\'{ \\\"buildCancelRequest\\\": {       \\\"comment\\\": \\\"Cancel obsolete queue build.\\\",      \\\"readdIntoQueue\\\": \\\"false\\\"    }  }'\"\n            ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        cmd=${cmd}\" -X POST -H \\'Content-Type: application/json\\' -d \\'{ \\\"buildCancelRequest\\\": {       \\\"comment\\\": \\\"Cancel obsolete queue build.\\\",      \\\"readdIntoQueue\\\": \\\"false\\\"    }  }'\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 61:\n        url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $TEAMCITY_SERVER/$cmd\"\n                     ^-----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                               ^------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                              ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                       ^--------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                        ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        url=\"curl -s ${HEADER} \\\"${AUTHORIZATION} ${TOKEN}\\\" ${TEAMCITY_SERVER}/${cmd}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 63:\n        res=$(eval $eval)\n                   ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                   ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        res=$(eval \"$eval\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 64:\n        check=$(echo $res |grep status=\"UNKNOWN\")\n                     ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                     ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        check=$(echo \"$res\" |grep status=\"UNKNOWN\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 65:\n        if [[ -z $check ]];then\n                 ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        if [[ -z ${check} ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 73:\n    cmd=\"app/rest/builds?locator=id:$build_id\"\n                                    ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    cmd=\"app/rest/builds?locator=id:${build_id}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 74:\n    url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $TEAMCITY_SERVER/$cmd\"\n                 ^-----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                           ^------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                          ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                   ^--------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                    ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    url=\"curl -s ${HEADER} \\\"${AUTHORIZATION} ${TOKEN}\\\" ${TEAMCITY_SERVER}/${cmd}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 76:\n    res=`eval $url`\n        ^---------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n              ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n              ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    res=$(eval \"$url\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 79:\n    check=$(echo $res|grep \"<builds count=\\\"1\\\"\")\n                 ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                 ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    check=$(echo \"$res\"|grep \"<builds count=\\\"1\\\"\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 80:\n    if [[ -z $check ]]; then\n             ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    if [[ -z ${check} ]]; then\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 84:\n    state=`echo $res |awk -F ' ' '{print $9\" \"$10\" \"$11}'|awk -F \"state=\" '{print $2}'|cut -d ' ' -f 1|sed 's/\\\"//g'`\n          ^-- SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n                ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    state=$(echo \"$res\" |awk -F ' ' '{print $9\" \"$10\" \"$11}'|awk -F \"state=\" '{print $2}'|cut -d ' ' -f 1|sed 's/\\\"//g')\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 86:\n    echo $state\n         ^----^ SC2086 (info): Double quote to prevent globbing and word splitting.\n         ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    echo \"$state\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 91:\n    cmd=\"app/rest/builds?locator=id:$build_id\"\n                                    ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    cmd=\"app/rest/builds?locator=id:${build_id}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 92:\n    url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $TEAMCITY_SERVER/$cmd\"\n                 ^-----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                           ^------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                          ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                   ^--------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                    ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    url=\"curl -s ${HEADER} \\\"${AUTHORIZATION} ${TOKEN}\\\" ${TEAMCITY_SERVER}/${cmd}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 94:\n    res=`eval $url`\n        ^---------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n              ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n              ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    res=$(eval \"$url\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 96:\n    check1=$(echo $res|grep \"<builds count=\\\"1\\\"\")\n                  ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                  ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    check1=$(echo \"$res\"|grep \"<builds count=\\\"1\\\"\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 97:\n    if [[ -z $check1 ]]; then\n             ^-----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    if [[ -z ${check1} ]]; then\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 105:\n    state=`echo $res |awk -F ' ' '{print $9\" \"$10\" \"$11}'|awk -F \"status=\" '{print $2}'|cut -d ' ' -f 1|sed 's/\\\"//g'`\n          ^-- SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n                ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    state=$(echo \"$res\" |awk -F ' ' '{print $9\" \"$10\" \"$11}'|awk -F \"status=\" '{print $2}'|cut -d ' ' -f 1|sed 's/\\\"//g')\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 107:\n    echo $state\n         ^----^ SC2086 (info): Double quote to prevent globbing and word splitting.\n         ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    echo \"$state\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 112:\n    cmd=\"app/rest/builds?locator=branch:$branch\"\n                                        ^-----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    cmd=\"app/rest/builds?locator=branch:${branch}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 113:\n    url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $TEAMCITY_SERVER/$cmd\"\n                 ^-----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                           ^------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                          ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                   ^--------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                    ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    url=\"curl -s ${HEADER} \\\"${AUTHORIZATION} ${TOKEN}\\\" ${TEAMCITY_SERVER}/${cmd}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 114:\n    res=`eval $url`\n        ^---------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n              ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n              ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    res=$(eval \"$url\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 119:\n    url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $TEAMCITY_SERVER/$cmd\"\n                 ^-----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                        ^-^ SC2089 (warning): Quotes/backslashes will be treated literally. Use an array.\n                           ^------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                          ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                   ^--------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                    ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    url=\"curl -s ${HEADER} \\\"${AUTHORIZATION} ${TOKEN}\\\" ${TEAMCITY_SERVER}/${cmd}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 121:\n    res=eval $url\n    ^-----------^ SC2209 (warning): Use var=$(command) to assign output (or quote to assign string).\n             ^--^ SC2090 (warning): Quotes/backslashes in this variable will not be respected.\n             ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    res=eval ${url}\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 126:\n    url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $JSON_HEADER $TEAMCITY_SERVER/$cmd\"\n                 ^-----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                           ^------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                          ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                   ^----------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                ^--------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                                 ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    url=\"curl -s ${HEADER} \\\"${AUTHORIZATION} ${TOKEN}\\\" ${JSON_HEADER} ${TEAMCITY_SERVER}/${cmd}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 128:\n    res=`eval $url`\n        ^---------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n              ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n              ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    res=$(eval \"$url\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/test.sh line 12:\n    while [ 1 -eq 1 ]\n          ^---------^ SC2292 (style): Prefer [[ ]] over [ ] for tests in Bash/Ksh.\n              ^-^ SC2050 (warning): This expression is constant. Did you forget the $ on a variable?\n\nDid you mean: \n    while [[ 1 -eq 1 ]]\n\n\nIn teamcity/doris/benchmark/clickbench/common/test.sh line 15:\n\tres=($(curl --header \"authorization: Bearer ${GITHUB_TOKEN}\" https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files?per_page=$per_page\\&page=$page|jq -r '.[]|select(.status = \"removed\")| .filename'))\n             ^-- SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).\n                                                                                                  ^------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                                                                           ^-----^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                                                                                         ^------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                                                                                                                                 ^-------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                                                                                                                 ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                                                                                                                 ^---^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                                                                                                                                 ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n\tres=($(curl --header \"authorization: Bearer ${GITHUB_TOKEN}\" https://api.github.com/repos/\"${owner}\"/\"${repo}\"/pulls/\"${pr_id}\"/files?per_page=\"$per_page\"\\&page=$page|jq -r '.[]|select(.status = \"removed\")| .filename'))\n\n\nIn teamcity/doris/benchmark/clickbench/common/test.sh line 17:\n        if [ ${res_len} -ne 0 ];then\n           ^------------------^ SC2292 (style): Prefer [[ ]] over [ ] for tests in Bash/Ksh.\n             ^--------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n        if [[ \"${res_len}\" -ne 0 ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/test.sh line 18:\n\t    let page+=1\n            ^---------^ SC2219 (style): Instead of 'let expr', prefer (( expr )) .\n\n\nIn teamcity/doris/benchmark/clickbench/common/test.sh line 20:\n\t    files=(${res[@]} ${files[*]})\n                   ^-------^ SC2206 (warning): Quote to prevent word splitting/globbing, or split robustly with mapfile or read -a.\n                             ^---------^ SC2206 (warning): Quote to prevent word splitting/globbing, or split robustly with mapfile or read -a.\n\n\nIn teamcity/doris/benchmark/clickbench/common/test.sh line 30:\nout=($(get_all_change_files 11154))\n     ^---------------------------^ SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check.sh line 3:\n<<'COMMENT'\n^---------^ SC2188 (warning): This redirection doesn't have a command. Move to its command (or use 'true' as no-op).\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 26:\n    res=($(curl https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files|jq -r '.[]|select(.status != \"removed\")| .filename'))\n         ^-- SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).\n                                             ^------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                      ^-----^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                                    ^------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n    res=($(curl https://api.github.com/repos/\"${owner}\"/\"${repo}\"/pulls/\"${pr_id}\"/files|jq -r '.[]|select(.status != \"removed\")| .filename'))\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 30:\n    for file in ${res[@]}\n                ^-------^ SC2068 (error): Double quote array expansions to avoid re-splitting elements.\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 33:\n        file_dir=$(echo $file|cut -d '/' -f 1)\n                        ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                        ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        file_dir=$(echo \"$file\"|cut -d '/' -f 1)\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 34:\n        if [[ $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]];then\n              ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                     ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        if [[ ${file_dir} == \"docs\" || ${file_dir} == \"fs_brokers\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 35:\n            let doc_num+=1\n            ^------------^ SC2219 (style): Instead of 'let expr', prefer (( expr )) .\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 46:\n    if [[ $doc_num -eq $file_nums ]];then\n          ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                       ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    if [[ ${doc_num} -eq ${file_nums} ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 60:\n    res=($(curl https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files|jq -r '.[]|select(.status != \"removed\")| .filename'))\n         ^-- SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).\n                                             ^------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                      ^-----^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                                    ^------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n    res=($(curl https://api.github.com/repos/\"${owner}\"/\"${repo}\"/pulls/\"${pr_id}\"/files|jq -r '.[]|select(.status != \"removed\")| .filename'))\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 65:\n    for file in ${res[@]}\n                ^-------^ SC2068 (error): Double quote array expansions to avoid re-splitting elements.\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 68:\n        file_dir=$(echo $file|cut -d '/' -f 1)\n                        ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                        ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        file_dir=$(echo \"$file\"|cut -d '/' -f 1)\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 69:\n        if [[ $file_dir == \"be\" || $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]];then\n              ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                   ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                          ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        if [[ ${file_dir} == \"be\" || ${file_dir} == \"docs\" || ${file_dir} == \"fs_brokers\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 70:\n            let doc_num+=1\n            ^------------^ SC2219 (style): Instead of 'let expr', prefer (( expr )) .\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 74:\n    if [[ $doc_num -eq $file_nums ]];then\n          ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                       ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    if [[ ${doc_num} -eq ${file_nums} ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 88:\n    res=($(curl https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files|jq -r '.[]|select(.status != \"removed\")| .filename'))\n         ^-- SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).\n                                             ^------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                      ^-----^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                                    ^------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n    res=($(curl https://api.github.com/repos/\"${owner}\"/\"${repo}\"/pulls/\"${pr_id}\"/files|jq -r '.[]|select(.status != \"removed\")| .filename'))\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 93:\n    for file in ${res[@]}\n                ^-------^ SC2068 (error): Double quote array expansions to avoid re-splitting elements.\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 96:\n        file_dir=$(echo $file|cut -d '/' -f 1)\n                        ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                        ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        file_dir=$(echo \"$file\"|cut -d '/' -f 1)\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 97:\n        if [[ $file_dir == \"fe\" || $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]];then\n              ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                   ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                          ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        if [[ ${file_dir} == \"fe\" || ${file_dir} == \"docs\" || ${file_dir} == \"fs_brokers\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 98:\n            let doc_num+=1\n            ^------------^ SC2219 (style): Instead of 'let expr', prefer (( expr )) .\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 102:\n    if [[ $doc_num -eq $file_nums ]];then\n          ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                       ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    if [[ ${doc_num} -eq ${file_nums} ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 113:\nif [ $# > 0 ]; then\n   ^--------^ SC2292 (style): Prefer [[ ]] over [ ] for tests in Bash/Ksh.\n        ^-- SC2071 (error): > is for string comparisons. Use -gt instead.\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 115:\n        --is_modify_only_invoved_be) check_all_change_files_is_under_be $2; shift ;;\n                                                                        ^-- SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n        --is_modify_only_invoved_be) check_all_change_files_is_under_be \"$2\"; shift ;;\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 116:\n        --is_modify_only_invoved_fe) check_all_change_files_is_under_fe $2; shift ;;\n                                                                        ^-- SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n        --is_modify_only_invoved_fe) check_all_change_files_is_under_fe \"$2\"; shift ;;\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 117:\n\t--is_modify_only_doc) check_all_change_files_is_under_doc $2; shift ;;\n                                                                  ^-- SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n\t--is_modify_only_doc) check_all_change_files_is_under_doc \"$2\"; shift ;;\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 124:\nmain $@\n     ^-- SC2068 (error): Double quote array expansions to avoid re-splitting elements.\n\nFor more information:\n  https://www.shellcheck.net/wiki/SC2068 -- Double quote array expansions to ...\n  https://www.shellcheck.net/wiki/SC2071 -- > is for string comparisons. Use ...\n  https://www.shellcheck.net/wiki/SC1078 -- Did you forget to close this doub...\n----------\n\nYou can address the above issues in one of three ways:\n1. Manually correct the issue in the offending shell script;\n2. Disable specific issues by adding the comment:\n  # shellcheck disable=NNNN\nabove the line that contains the issue, where NNNN is the error code;\n3. Add '-e NNNN' to the SHELLCHECK_OPTS setting in your .yml action file.\n\n\n\n```\n</details>\n\n<details>\n<summary>shfmt errors</summary>\n\n```\n\n'shfmt ' returned error 1 finding the following formatting issues:\n\n----------\n--- teamcity/doris/benchmark/clickbench/common/check_and_kill_deleted_proc.sh.orig\n+++ teamcity/doris/benchmark/clickbench/common/check_and_kill_deleted_proc.sh\n@@ -8,23 +8,22 @@\n echo \"====================================\"\n echo \"START TO DETECT RESIDUAL PROCESSES!\"\n \n-check=$(lsof -i:$port|awk '{print $2}'|wc -l)\n-if [ \"check$check\" != \"check0\" ];then\n-    if [ \"check\"${case_level} == \"check\" ];then\n-        check_res=$(pwdx `lsof -i:$port|grep -v PID|awk '{print $2}'`|grep $env_name|grep deleted||wc -l)\n+check=$(lsof -i:$port | awk '{print $2}' | wc -l)\n+if [ \"check$check\" != \"check0\" ]; then\n+    if [ \"check\"${case_level} == \"check\" ]; then\n+        check_res=$(pwdx $(lsof -i:$port | grep -v PID | awk '{print $2}') | grep $env_name | grep deleted || wc -l)\n     else\n-        check_res=$(pwdx `lsof -i:$port|grep -v PID|awk '{print $2}'`|grep $env_name|grep $case_level|grep deleted||wc -l)\n+        check_res=$(pwdx $(lsof -i:$port | grep -v PID | awk '{print $2}') | grep $env_name | grep $case_level | grep deleted || wc -l)\n     fi\n-    if [ \"check$check_res\" != \"check0\" ];then\n-        be_pid=(`lsof -i:$port|grep -v PID|awk '{print $2}'`)\n+    if [ \"check$check_res\" != \"check0\" ]; then\n+        be_pid=($(lsof -i:$port | grep -v PID | awk '{print $2}'))\n         echo \"Detected residual processes: ${be_pid}\"\n         echo \"kill residual processes: kill -9 ${be_pid}\"\n         kill -9 $be_pid\n     fi\n else\n-        echo \"No residual processes\"\n+    echo \"No residual processes\"\n fi\n \n-\n echo \"FINISH DETECT RESIDUAL PROCESSES!\"\n echo \"===================================\"\n--- teamcity/doris/benchmark/clickbench/common/check_change_file.sh.orig\n+++ teamcity/doris/benchmark/clickbench/common/check_change_file.sh\n@@ -7,7 +7,7 @@\n GITHUB_TOKEN=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\n \n usage() {\n-  echo \"\n+    echo \"\n Usage: $0 <options>\n   Optional options:\n \n@@ -16,23 +16,21 @@\n     $0 --is_modify_only_invoved_fe pr_id          if pr changed code only invoved fe doc, fs_brocker, return 0; else return 2\n     $0 --is_modify_only_invoved_doc pr_id         if pr changed code only invoved doc, fs_brocker, return 0; else return 2\n   \"\n-  exit 1\n+    exit 1\n }\n \n-\n-function get_all_change_files(){\n+function get_all_change_files() {\n     pr_id=$1\n     files=()\n \n     page=1\n     per_page=100\n-    while [ 1 -eq 1 ]\n-    do\n+    while [ 1 -eq 1 ]; do\n         #echo \"curl --header 'authorization: Bearer ${GITHUB_TOKEN}' https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files?per_page=$per_page\\&page=$page\"\n-        res=($(curl --header \"authorization: Bearer ${GITHUB_TOKEN}\" https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files?per_page=$per_page\\&page=$page|jq -r '.[]|select(.status = \"removed\")| .filename'))\n+        res=($(curl --header \"authorization: Bearer ${GITHUB_TOKEN}\" https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files?per_page=$per_page\\&page=$page | jq -r '.[]|select(.status = \"removed\")| .filename'))\n         res_len=${#res[@]}\n         #echo \"================\"$res_len\n-        if [ ${res_len} -ne 0 ];then\n+        if [ ${res_len} -ne 0 ]; then\n             let page+=1\n             #files=\"${res[@]}\"\"$files\"\n             files=(${res[@]} ${files[*]})\n@@ -44,8 +42,7 @@\n     echo \"${files[@]}\"\n }\n \n-\n-function check_removed_change_file(){\n+function check_removed_change_file() {\n     pr_id=$1\n     module=$2\n     owner='apache'\n@@ -55,26 +52,25 @@\n     file_nums=${#res[@]}\n     is_code_change_flag=false\n     module_file=0\n-    for file in ${res[@]}\n-    do\n-\t#echo \"$file\"\n-\tfile_dir=$(echo $file|cut -d '/' -f 1)\n-        file_type=$(echo $file|rev|cut -d / -f 1|cut -d '.' -f 1|rev)\n-\t#if [[  \"check$file_dir\" == \"check${module}\" &&  ($file_type == \"cpp\" || $file_type == \"c\" || $file_type == \"java\" || $file_type == \"py\" || $file_type == \"h\" || $file_type == 'js') ]];then\n-\tif [[ $file_type == \"cpp\" || $file_type == \"c\" || $file_type == \"java\" || $file_type == \"py\" || $file_type == \"h\" || $file_type == 'js' ]];then\n-\t    echo \"code has changed, ${file} is deleted\"\n-\t    is_code_change_flag=true\n-\tfi\n-\tif [[ \"check$file_dir\" == \"check${module}\" ]];then\n+    for file in ${res[@]}; do\n+        #echo \"$file\"\n+        file_dir=$(echo $file | cut -d '/' -f 1)\n+        file_type=$(echo $file | rev | cut -d / -f 1 | cut -d '.' -f 1 | rev)\n+        #if [[  \"check$file_dir\" == \"check${module}\" &&  ($file_type == \"cpp\" || $file_type == \"c\" || $file_type == \"java\" || $file_type == \"py\" || $file_type == \"h\" || $file_type == 'js') ]];then\n+        if [[ $file_type == \"cpp\" || $file_type == \"c\" || $file_type == \"java\" || $file_type == \"py\" || $file_type == \"h\" || $file_type == 'js' ]]; then\n+            echo \"code has changed, ${file} is deleted\"\n+            is_code_change_flag=true\n+        fi\n+        if [[ \"check$file_dir\" == \"check${module}\" ]]; then\n             let module_file+=1\n-\tfi\n+        fi\n     done\n \n-    if [[ \"${is_code_change_flag}\" == \"false\" ]];then\n-\techo \"NO CODE FILE DELETED, PASSED!\"\n+    if [[ \"${is_code_change_flag}\" == \"false\" ]]; then\n+        echo \"NO CODE FILE DELETED, PASSED!\"\n         return 0\n     else\n-\techo \"CODE FILE BE DELETED\"\n+        echo \"CODE FILE BE DELETED\"\n         return 2\n     fi\n \n@@ -95,20 +91,18 @@\n \n     doc_num=0\n     doc_sql_manual_num=0\n-    for file in ${res[@]}\n-    do\n+    for file in ${res[@]}; do\n         #check change file is on docs/fs_brokers or not\n-\techo \"$file\"\n-        file_dir=$(echo $file|cut -d '/' -f 1)\n-\tif [[ $file_dir == \"docs\" ]];then\n+        echo \"$file\"\n+        file_dir=$(echo $file | cut -d '/' -f 1)\n+        if [[ $file_dir == \"docs\" ]]; then\n             let doc_num+=1\n-\tfi\n-        if [[ \"$file\" =~ \"docs/zh-CN/docs/sql-manual/\" || \"$file\" =~ \"docs/en/docs/sql-manual/\" ]];then\n+        fi\n+        if [[ \"$file\" =~ \"docs/zh-CN/docs/sql-manual/\" || \"$file\" =~ \"docs/en/docs/sql-manual/\" ]]; then\n             let doc_sql_manual_num+=1\n             continue\n         fi\n \n-\n         #check change file is md/txt/doc file\n         #file_type=$(echo $file|cut -d '.' -f 2)\n         #if [[ $file_type == \"md\" || $file_type == \"txt\" || $file_type == \"doc\" ]];then\n@@ -120,7 +114,7 @@\n     echo \"doc_num: $doc_num\"\n     echo \"file_nums: $file_nums\"\n     echo \"doc_sql_manual_num: $doc_sql_manual_num\"\n-    if [[ $doc_num -eq $file_nums && $doc_sql_manual_num -eq 0 ]];then\n+    if [[ $doc_num -eq $file_nums && $doc_sql_manual_num -eq 0 ]]; then\n         echo \"JUST MODIFY DOCUMENT, NO COED CHSNGED, PASSED!\"\n         return 0\n     else\n@@ -143,17 +137,16 @@\n \n     doc_num=0\n     echo \"START CHECK CODE IS ONLY RELATED BE OR NOT\"\n-    for file in ${res[@]}\n-    do\n+    for file in ${res[@]}; do\n         echo \"$file\"\n         #check change file is on be or not\n-        file_dir=$(echo $file|cut -d '/' -f 1)\n-        if [[ $file_dir == \"be\" || $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]];then\n+        file_dir=$(echo $file | cut -d '/' -f 1)\n+        if [[ $file_dir == \"be\" || $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]]; then\n             let doc_num+=1\n             continue\n-\tfi\n+        fi\n     done\n-    if [[ $doc_num -eq $file_nums ]];then\n+    if [[ $doc_num -eq $file_nums ]]; then\n         echo \"JUST MODIFY BE CODE, NO NEED RUN FE UT, PASSED!\"\n         return 0\n     else\n@@ -176,17 +169,16 @@\n \n     doc_num=0\n     echo \"START CHECK CODE IS ONLY RELATED FE OR NOT\"\n-    for file in ${res[@]}\n-    do\n+    for file in ${res[@]}; do\n         echo \"$file\"\n         #check change file is on be or not\n-        file_dir=$(echo $file|cut -d '/' -f 1)\n-        if [[ $file_dir == \"fe\" || $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]];then\n+        file_dir=$(echo $file | cut -d '/' -f 1)\n+        if [[ $file_dir == \"fe\" || $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]]; then\n             let doc_num+=1\n             continue\n         fi\n     done\n-    if [[ $doc_num -eq $file_nums ]];then\n+    if [[ $doc_num -eq $file_nums ]]; then\n         echo \"JUST MODIFY FE CODE, NO NEED RUN BE UT, PASSED!\"\n         return 0\n     else\n@@ -197,42 +189,49 @@\n \n main() {\n \n-if [ $# > 0 ]; then\n-    case \"$1\" in\n+    if [ $# ] >0; then\n+        case \"$1\" in\n         --is_modify_only_invoved_be)\n-\t    check_removed_change_file $2 \"be\"\n-\t    check_1=$?\n-\t    check_all_change_files_is_under_be $2\n-\t    check_2=$?\n-\t    echo ${check_1}\n-\t    echo ${check_2}\n-\t    res=`expr $check_1 \\* $check_2`\n-\t    exit $res\n-\t    shift ;;\n+            check_removed_change_file $2 \"be\"\n+            check_1=$?\n+            check_all_change_files_is_under_be $2\n+            check_2=$?\n+            echo ${check_1}\n+            echo ${check_2}\n+            res=$(expr $check_1 \\* $check_2)\n+            exit $res\n+            shift\n+            ;;\n         --is_modify_only_invoved_fe)\n-\t    check_removed_change_file $2 \"fe\"\n-\t    check_1=$?\n-\t    check_all_change_files_is_under_fe $2\n-\t    check_2=$?\n-            res=`expr $check_1 \\* $check_2`\n-\t    echo ${check_1}\n-\t    echo ${check_2}\n-\t    exit $res\n-\t    shift ;;\n-\t--is_modify_only_invoved_doc)\n-\t    check_removed_change_file $2 \"docs\"\n-\t    check_1=$?\n-\t    check_all_change_files_is_under_doc $2\n-\t    check_2=$?\n-            res=`expr $check_1 + $check_2`\n-\t    echo ${check_1}\n+            check_removed_change_file $2 \"fe\"\n+            check_1=$?\n+            check_all_change_files_is_under_fe $2\n+            check_2=$?\n+            res=$(expr $check_1 \\* $check_2)\n+            echo ${check_1}\n             echo ${check_2}\n-\t    exit $res\n-\t    shift ;;\n-        *) echo \"ERROR\"; usage; exit 1 ;;\n-    esac\n+            exit $res\n+            shift\n+            ;;\n+        --is_modify_only_invoved_doc)\n+            check_removed_change_file $2 \"docs\"\n+            check_1=$?\n+            check_all_change_files_is_under_doc $2\n+            check_2=$?\n+            res=$(expr $check_1 + $check_2)\n+            echo ${check_1}\n+            echo ${check_2}\n+            exit $res\n+            shift\n+            ;;\n+        *)\n+            echo \"ERROR\"\n+            usage\n+            exit 1\n+            ;;\n+        esac\n \n-fi\n+    fi\n }\n \n main $@\n--- teamcity/doris/benchmark/clickbench/common/clean_disk.sh.orig\n+++ teamcity/doris/benchmark/clickbench/common/clean_disk.sh\n@@ -3,7 +3,7 @@\n df -h\n existsTime=720\n #delete files created 20 hours ago\n-echo `date \"+%Y-%m-%d %H:%M:%S\"` \"start to clear oudate file!\"\n+echo $(date \"+%Y-%m-%d %H:%M:%S\") \"start to clear oudate file!\"\n cd /home/work/teamcity/TeamCity/piplineWork/Compile/\n find /home/work/teamcity/TeamCity/piplineWork/Compile/ -maxdepth 1 -mindepth 1 -mmin +${existsTime} -type d -name \"*_*\" -exec rm -rf {} \\;\n cd -\nteamcity/doris/benchmark/clickbench/common/docker_trigger_api.sh:43:1: reached EOF without closing quote \"\n--- teamcity/doris/benchmark/clickbench/common/teamcity_api.sh.orig\n+++ teamcity/doris/benchmark/clickbench/common/teamcity_api.sh\n@@ -139,23 +139,55 @@\n }\n COMMENT\n \n-\n main() {\n \n-if [ $# > 0 ]; then\n-    case \"$1\" in \n-        --cancel_running_build) build_id=$2; cancel_running_build $build_id; shift ;;\n-        --cancel_pending_build) build_id=$2; cancel_pending_build $build_id; shift ;;\n-        --show_build_state) build_id=$2; res=$(show_build_state $build_id); echo $res; shift ;;\n-        --show_build_status) build_id=$2; res=$(show_build_status $build_id); echo $res; shift ;;\n-        --show_latest_builds) get_latest_builds; shift ;;\n-        --show_queued_builds) get_queued_builds; shift ;;\n-        --get_all_builds_of_pr_id) get_all_builds $2; shift ;;\n-\t--help) usage; shift ;;\n-        *) echo \"ERROR\"; exit 1 ;;\n-    esac\n+    if [ $# ] >0; then\n+        case \"$1\" in\n+        --cancel_running_build)\n+            build_id=$2\n+            cancel_running_build $build_id\n+            shift\n+            ;;\n+        --cancel_pending_build)\n+            build_id=$2\n+            cancel_pending_build $build_id\n+            shift\n+            ;;\n+        --show_build_state)\n+            build_id=$2\n+            res=$(show_build_state $build_id)\n+            echo $res\n+            shift\n+            ;;\n+        --show_build_status)\n+            build_id=$2\n+            res=$(show_build_status $build_id)\n+            echo $res\n+            shift\n+            ;;\n+        --show_latest_builds)\n+            get_latest_builds\n+            shift\n+            ;;\n+        --show_queued_builds)\n+            get_queued_builds\n+            shift\n+            ;;\n+        --get_all_builds_of_pr_id)\n+            get_all_builds $2\n+            shift\n+            ;;\n+        --help)\n+            usage\n+            shift\n+            ;;\n+        *)\n+            echo \"ERROR\"\n+            exit 1\n+            ;;\n+        esac\n \n-fi\n+    fi\n }\n \n main $@\n--- teamcity/doris/benchmark/clickbench/common/teamcity_common.sh.orig\n+++ teamcity/doris/benchmark/clickbench/common/teamcity_common.sh\n@@ -11,7 +11,7 @@\n JSON_HEADER=\"--header \\\"Accept: application/json\\\"\"\n \n usage() {\n-  echo \"\n+    echo \"\n Usage: $0 <options>\n   Optional options:\n      --cancel_running_build build_id    cancel a specific running build\n@@ -32,21 +32,21 @@\n     $0 --show_queued_builds             show all queued builds\n     $0 --get_all_builds_of_pr_id 9151   get all 9151 builds\n   \"\n-  exit 1\n+    exit 1\n }\n \n cancel_running_build() {\n     build_id=$1\n     state=$(show_build_state $build_id)\n-    if [[ $state == \"running\" ]];then\n+    if [[ $state == \"running\" ]]; then\n         #curl --header \"Authorization: Bearer eyJ0eXAiOiAiVENWMiJ9.bW1DcHJpRWNCSktnREhLaHd5Y1lndmpycnJ3.NmEwM2E3YTEtMTVmYy00NGU0LWI1OTAtMzU3MzljODE0Njdk\" http://43.129.232.36:8111/app/rest/builds/id:333 -X POST -H 'Content-Type: application/json' -d '{ \"buildCancelRequest\": {       \"comment\": \"Already running builds will be stopped.\",      \"readdIntoQueue\": \"false\"    }  }'\n         cmd=\"/app/rest/builds/id:$build_id\"\n         cmd=$cmd\" -X POST -H \\'Content-Type: application/json\\' -d \\'{ \\\"buildCancelRequest\\\": {       \\\"comment\\\": \\\"Stop obsolete running builds.\\\",      \\\"readdIntoQueue\\\": \\\"false\\\"    }  }'\"\n         url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $TEAMCITY_SERVER/$cmd\"\n         res=$(eval $eval)\n-        check=$(echo $res |grep status=\"UNKNOWN\")\n-        if [[ -z $check ]];then\n-           echo \"cancel fail!\"\n+        check=$(echo $res | grep status=\"UNKNOWN\")\n+        if [[ -z $check ]]; then\n+            echo \"cancel fail!\"\n         fi\n     fi\n \n@@ -55,15 +55,15 @@\n cancel_pending_build() {\n     build_id=$1\n     state=$(show_build_state $build_id)\n-    if [[ $state == \"queued\" ]];then\n+    if [[ $state == \"queued\" ]]; then\n         cmd=\"app/rest/buildQueue/id:$build_id\"\n         cmd=$cmd\" -X POST -H \\'Content-Type: application/json\\' -d \\'{ \\\"buildCancelRequest\\\": {       \\\"comment\\\": \\\"Cancel obsolete queue build.\\\",      \\\"readdIntoQueue\\\": \\\"false\\\"    }  }'\"\n         url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $TEAMCITY_SERVER/$cmd\"\n         #echo $url\n         res=$(eval $eval)\n-        check=$(echo $res |grep status=\"UNKNOWN\")\n-        if [[ -z $check ]];then\n-           echo \"cancel fail!\"\n+        check=$(echo $res | grep status=\"UNKNOWN\")\n+        if [[ -z $check ]]; then\n+            echo \"cancel fail!\"\n         fi\n     fi\n }\n@@ -73,15 +73,15 @@\n     cmd=\"app/rest/builds?locator=id:$build_id\"\n     url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $TEAMCITY_SERVER/$cmd\"\n     #echo $url\n-    res=`eval $url`\n-    \n+    res=$(eval $url)\n+\n     #check build exist or not\n-    check=$(echo $res|grep \"<builds count=\\\"1\\\"\")\n+    check=$(echo $res | grep \"<builds count=\\\"1\\\"\")\n     if [[ -z $check ]]; then\n         return\n     fi\n     #get state\n-    state=`echo $res |awk -F ' ' '{print $9\" \"$10\" \"$11}'|awk -F \"state=\" '{print $2}'|cut -d ' ' -f 1|sed 's/\\\"//g'`\n+    state=$(echo $res | awk -F ' ' '{print $9\" \"$10\" \"$11}' | awk -F \"state=\" '{print $2}' | cut -d ' ' -f 1 | sed 's/\\\"//g')\n     #only 2 state: queued and finished\n     echo $state\n }\n@@ -91,9 +91,9 @@\n     cmd=\"app/rest/builds?locator=id:$build_id\"\n     url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $TEAMCITY_SERVER/$cmd\"\n     #echo $url\n-    res=`eval $url`\n+    res=$(eval $url)\n     #check build exist or not\n-    check1=$(echo $res|grep \"<builds count=\\\"1\\\"\")\n+    check1=$(echo $res | grep \"<builds count=\\\"1\\\"\")\n     if [[ -z $check1 ]]; then\n         return\n     fi\n@@ -102,8 +102,8 @@\n     #if [[ -z $check ]]; then\n     #    return\n     #fi\n-    state=`echo $res |awk -F ' ' '{print $9\" \"$10\" \"$11}'|awk -F \"status=\" '{print $2}'|cut -d ' ' -f 1|sed 's/\\\"//g'`\n-    #only 2 state: \n+    state=$(echo $res | awk -F ' ' '{print $9\" \"$10\" \"$11}' | awk -F \"status=\" '{print $2}' | cut -d ' ' -f 1 | sed 's/\\\"//g')\n+    #only 2 state:\n     echo $state\n }\n \n@@ -111,7 +111,7 @@\n     branch=$1\n     cmd=\"app/rest/builds?locator=branch:$branch\"\n     url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $TEAMCITY_SERVER/$cmd\"\n-    res=`eval $url`\n+    res=$(eval $url)\n }\n \n get_latest_builds() {\n@@ -125,14 +125,12 @@\n     cmd=\"app/rest/buildQueue\"\n     url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $JSON_HEADER $TEAMCITY_SERVER/$cmd\"\n     #echo $url\n-    res=`eval $url`\n+    res=$(eval $url)\n     #a=$(echo $res|grep -oP 'build id=.*'|head -1)\n-    \n-    \n+\n     #a=$res\n     #while [[ \"check\"$a != \"check\" ]]\n     #do\n     #    a=$(echo $a|awk -F 'build id=\"' '{print $2}')\n     #done\n }\n-\n--- teamcity/doris/benchmark/clickbench/common/test.sh.orig\n+++ teamcity/doris/benchmark/clickbench/common/test.sh\n@@ -3,33 +3,29 @@\n repo=doris\n GITHUB_TOKEN=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\n \n-function get_all_change_files(){\n+function get_all_change_files() {\n     pr_id=$1\n     files=()\n \n     page=1\n     per_page=100\n-    while [ 1 -eq 1 ]\n-    do\n-\t#echo \"curl --header 'authorization: Bearer ${GITHUB_TOKEN}' https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files?per_page=$per_page\\&page=$page\"\n-\tres=($(curl --header \"authorization: Bearer ${GITHUB_TOKEN}\" https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files?per_page=$per_page\\&page=$page|jq -r '.[]|select(.status = \"removed\")| .filename'))\n+    while [ 1 -eq 1 ]; do\n+        #echo \"curl --header 'authorization: Bearer ${GITHUB_TOKEN}' https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files?per_page=$per_page\\&page=$page\"\n+        res=($(curl --header \"authorization: Bearer ${GITHUB_TOKEN}\" https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files?per_page=$per_page\\&page=$page | jq -r '.[]|select(.status = \"removed\")| .filename'))\n         res_len=${#res[@]}\n-        if [ ${res_len} -ne 0 ];then\n-\t    let page+=1\n+        if [ ${res_len} -ne 0 ]; then\n+            let page+=1\n             #files=\"${res[@]}\"\"$files\"\n-\t    files=(${res[@]} ${files[*]})\n+            files=(${res[@]} ${files[*]})\n         else\n             break\n         fi\n-\techo \n+        echo\n     done\n     echo \"${files[@]}\"\n }\n \n-\n out=($(get_all_change_files 11154))\n \n-\n-\n echo \"==================\"\n echo \"${out[@]}\"\n--- teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh.orig\n+++ teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh\n@@ -3,9 +3,8 @@\n #res=(`git diff --name-only HEAD~ HEAD`)\n #file_nums=${#res[@]}\n \n-\n usage() {\n-  echo \"\n+    echo \"\n Usage: $0 <options>\n   Optional options:\n \n@@ -14,24 +13,22 @@\n     $0 --is_modify_only_invoved_fe pr_id          if pr changed code only invoved fe doc, fs_brocker, return 0; else return 2\n     $0 --is_modify_only_invoved_doc pr_id         if pr changed code only invoved doc, fs_brocker, return 0; else return 2\n   \"\n-  exit 1\n+    exit 1\n }\n \n-\n function check_all_change_files_is_under_doc() {\n \n     pr_id=$1\n     owner='apache'\n     repo='incubator-doris'\n-    res=($(curl https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files|jq -r '.[]|select(.status != \"removed\")| .filename'))\n+    res=($(curl https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files | jq -r '.[]|select(.status != \"removed\")| .filename'))\n     file_nums=${#res[@]}\n \n     doc_num=0\n-    for file in ${res[@]}\n-    do\n+    for file in ${res[@]}; do\n         #check change file is on docs/fs_brokers or not\n-        file_dir=$(echo $file|cut -d '/' -f 1)\n-        if [[ $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]];then\n+        file_dir=$(echo $file | cut -d '/' -f 1)\n+        if [[ $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]]; then\n             let doc_num+=1\n             continue\n         fi\n@@ -43,7 +40,7 @@\n         #fi\n     done\n \n-    if [[ $doc_num -eq $file_nums ]];then\n+    if [[ $doc_num -eq $file_nums ]]; then\n         echo \"JUST MODIFY DOCUMENT, NO COED CHSNGED, PASSED!\"\n         exit 0\n     else\n@@ -57,21 +54,20 @@\n     pr_id=$1\n     owner='apache'\n     repo='incubator-doris'\n-    res=($(curl https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files|jq -r '.[]|select(.status != \"removed\")| .filename'))\n+    res=($(curl https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files | jq -r '.[]|select(.status != \"removed\")| .filename'))\n     file_nums=${#res[@]}\n \n     doc_num=0\n     echo \"START CHECK CODE IS ONLY RELATED BE OR NOT\"\n-    for file in ${res[@]}\n-    do\n+    for file in ${res[@]}; do\n         #check change file is on be or not\n-        file_dir=$(echo $file|cut -d '/' -f 1)\n-        if [[ $file_dir == \"be\" || $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]];then\n+        file_dir=$(echo $file | cut -d '/' -f 1)\n+        if [[ $file_dir == \"be\" || $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]]; then\n             let doc_num+=1\n             continue\n-\tfi\n+        fi\n     done\n-    if [[ $doc_num -eq $file_nums ]];then\n+    if [[ $doc_num -eq $file_nums ]]; then\n         echo \"JUST MODIFY BE CODE, NO NEED RUN FE UT, PASSED!\"\n         exit 0\n     else\n@@ -85,21 +81,20 @@\n     pr_id=$1\n     owner='apache'\n     repo='incubator-doris'\n-    res=($(curl https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files|jq -r '.[]|select(.status != \"removed\")| .filename'))\n+    res=($(curl https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files | jq -r '.[]|select(.status != \"removed\")| .filename'))\n     file_nums=${#res[@]}\n \n     doc_num=0\n     echo \"START CHECK CODE IS ONLY RELATED FE OR NOT\"\n-    for file in ${res[@]}\n-    do\n+    for file in ${res[@]}; do\n         #check change file is on be or not\n-        file_dir=$(echo $file|cut -d '/' -f 1)\n-        if [[ $file_dir == \"fe\" || $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]];then\n+        file_dir=$(echo $file | cut -d '/' -f 1)\n+        if [[ $file_dir == \"fe\" || $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]]; then\n             let doc_num+=1\n             continue\n         fi\n     done\n-    if [[ $doc_num -eq $file_nums ]];then\n+    if [[ $doc_num -eq $file_nums ]]; then\n         echo \"JUST MODIFY FE CODE, NO NEED RUN BE UT, PASSED!\"\n         exit 0\n     else\n@@ -110,15 +105,28 @@\n \n main() {\n \n-if [ $# > 0 ]; then\n-    case \"$1\" in\n-        --is_modify_only_invoved_be) check_all_change_files_is_under_be $2; shift ;;\n-        --is_modify_only_invoved_fe) check_all_change_files_is_under_fe $2; shift ;;\n-\t--is_modify_only_doc) check_all_change_files_is_under_doc $2; shift ;;\n-        *) echo \"ERROR\"; usage; exit 1 ;;\n-    esac\n+    if [ $# ] >0; then\n+        case \"$1\" in\n+        --is_modify_only_invoved_be)\n+            check_all_change_files_is_under_be $2\n+            shift\n+            ;;\n+        --is_modify_only_invoved_fe)\n+            check_all_change_files_is_under_fe $2\n+            shift\n+            ;;\n+        --is_modify_only_doc)\n+            check_all_change_files_is_under_doc $2\n+            shift\n+            ;;\n+        *)\n+            echo \"ERROR\"\n+            usage\n+            exit 1\n+            ;;\n+        esac\n \n-fi\n+    fi\n }\n \n main $@\n--- teamcity/doris/benchmark/clickbench/prepare.sh.orig\n+++ teamcity/doris/benchmark/clickbench/prepare.sh\n@@ -22,4 +22,3 @@\n fi\n qa_home=\"${pipeline_home}/selectdb-qa\"\n cd \"${qa_home}\" && git stash && git checkout main && git pull && cd -\n-\n----------\n\nYou can reformat the above files to meet shfmt's requirements by typing:\n\n  shfmt  -w filename\n\n\n```\n</details>\n\n\n","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301610857/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301612206","html_url":"https://github.com/apache/doris/pull/13926#issuecomment-1301612206","issue_url":"https://api.github.com/repos/apache/doris/issues/13926","id":1301612206,"node_id":"IC_kwDOBfSlxs5NlQau","user":{"login":"hello-stephen","id":27881198,"node_id":"MDQ6VXNlcjI3ODgxMTk4","avatar_url":"https://avatars.githubusercontent.com/u/27881198?v=4","gravatar_id":"","url":"https://api.github.com/users/hello-stephen","html_url":"https://github.com/hello-stephen","followers_url":"https://api.github.com/users/hello-stephen/followers","following_url":"https://api.github.com/users/hello-stephen/following{/other_user}","gists_url":"https://api.github.com/users/hello-stephen/gists{/gist_id}","starred_url":"https://api.github.com/users/hello-stephen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hello-stephen/subscriptions","organizations_url":"https://api.github.com/users/hello-stephen/orgs","repos_url":"https://api.github.com/users/hello-stephen/repos","events_url":"https://api.github.com/users/hello-stephen/events{/privacy}","received_events_url":"https://api.github.com/users/hello-stephen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-11-03T03:56:59Z","updated_at":"2022-11-03T03:56:59Z","author_association":"CONTRIBUTOR","body":"TeamCity pipeline, clickbench performance test result:\n the sum of best hot time: 37.15 seconds\n load time: 645 seconds\n storage size: 17180392638 Bytes\n https://doris-community-test-1308700295.cos.ap-hongkong.myqcloud.com/tmp/20221103035656_clickbench_pr_38884.html","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301612206/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301616729","html_url":"https://github.com/apache/doris/pull/13259#issuecomment-1301616729","issue_url":"https://api.github.com/repos/apache/doris/issues/13259","id":1301616729,"node_id":"IC_kwDOBfSlxs5NlRhZ","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-03T04:05:56Z","updated_at":"2022-11-03T04:05:56Z","author_association":"CONTRIBUTOR","body":"#### `sh-checker report`\n\nTo get the full details, please check in the [job](\"https://github.com/apache/doris/actions/runs/3382928162\") output.\n\n<details>\n<summary>shellcheck errors</summary>\n\n```\n\n'shellcheck ' returned error 1 finding the following syntactical issues:\n\n----------\n\nIn teamcity/doris/benchmark/clickbench/common/check_and_kill_deleted_proc.sh line 11:\ncheck=$(lsof -i:$port|awk '{print $2}'|wc -l)\n                ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \ncheck=$(lsof -i:\"$port\"|awk '{print $2}'|wc -l)\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_and_kill_deleted_proc.sh line 12:\nif [ \"check$check\" != \"check0\" ];then\n   ^---------------------------^ SC2292 (style): Prefer [[ ]] over [ ] for tests in Bash/Ksh.\n           ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \nif [[ \"check${check}\" != \"check0\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_and_kill_deleted_proc.sh line 13:\n    if [ \"check\"${case_level} == \"check\" ];then\n       ^-- SC2292 (style): Prefer [[ ]] over [ ] for tests in Bash/Ksh.\n                ^-----------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n    if [[ \"check\"\"${case_level}\" == \"check\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_and_kill_deleted_proc.sh line 14:\n        check_res=$(pwdx `lsof -i:$port|grep -v PID|awk '{print $2}'`|grep $env_name|grep deleted||wc -l)\n                         ^-- SC2046 (warning): Quote this to prevent word splitting.\n                         ^-- SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n                                  ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                  ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                           ^-------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                                                           ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        check_res=$(pwdx $(lsof -i:\"$port\"|grep -v PID|awk '{print $2}')|grep $env_name|grep deleted||wc -l)\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_and_kill_deleted_proc.sh line 16:\n        check_res=$(pwdx `lsof -i:$port|grep -v PID|awk '{print $2}'`|grep $env_name|grep $case_level|grep deleted||wc -l)\n                         ^-- SC2046 (warning): Quote this to prevent word splitting.\n                         ^-- SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n                                  ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                  ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                           ^-------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                                                           ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                                          ^---------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                                                                          ^---------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        check_res=$(pwdx $(lsof -i:\"$port\"|grep -v PID|awk '{print $2}')|grep $env_name|grep $case_level|grep deleted||wc -l)\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_and_kill_deleted_proc.sh line 18:\n    if [ \"check$check_res\" != \"check0\" ];then\n       ^-- SC2292 (style): Prefer [[ ]] over [ ] for tests in Bash/Ksh.\n               ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    if [[ \"check${check_res}\" != \"check0\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_and_kill_deleted_proc.sh line 19:\n        be_pid=(`lsof -i:$port|grep -v PID|awk '{print $2}'`)\n                ^-- SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).\n                ^-- SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n                         ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                         ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        be_pid=($(lsof -i:\"$port\"|grep -v PID|awk '{print $2}'))\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_and_kill_deleted_proc.sh line 20:\n        echo \"Detected residual processes: ${be_pid}\"\n                                           ^-------^ SC2128 (warning): Expanding an array without an index only gives the first element.\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_and_kill_deleted_proc.sh line 21:\n        echo \"kill residual processes: kill -9 ${be_pid}\"\n                                               ^-------^ SC2128 (warning): Expanding an array without an index only gives the first element.\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_and_kill_deleted_proc.sh line 22:\n        kill -9 $be_pid\n                ^-----^ SC2128 (warning): Expanding an array without an index only gives the first element.\n                ^-----^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                ^-----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        kill -9 \"$be_pid\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 29:\n    while [ 1 -eq 1 ]\n          ^---------^ SC2292 (style): Prefer [[ ]] over [ ] for tests in Bash/Ksh.\n              ^-^ SC2050 (warning): This expression is constant. Did you forget the $ on a variable?\n\nDid you mean: \n    while [[ 1 -eq 1 ]]\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 32:\n        res=($(curl --header \"authorization: Bearer ${GITHUB_TOKEN}\" https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files?per_page=$per_page\\&page=$page|jq -r '.[]|select(.status = \"removed\")| .filename'))\n             ^-- SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).\n                                                                                                  ^------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                                                                           ^-----^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                                                                                         ^------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                                                                                                                                 ^-------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                                                                                                                 ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                                                                                                                 ^---^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                                                                                                                                 ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        res=($(curl --header \"authorization: Bearer ${GITHUB_TOKEN}\" https://api.github.com/repos/\"${owner}\"/\"${repo}\"/pulls/\"${pr_id}\"/files?per_page=\"$per_page\"\\&page=$page|jq -r '.[]|select(.status = \"removed\")| .filename'))\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 35:\n        if [ ${res_len} -ne 0 ];then\n           ^------------------^ SC2292 (style): Prefer [[ ]] over [ ] for tests in Bash/Ksh.\n             ^--------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n        if [[ \"${res_len}\" -ne 0 ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 36:\n            let page+=1\n            ^---------^ SC2219 (style): Instead of 'let expr', prefer (( expr )) .\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 38:\n            files=(${res[@]} ${files[*]})\n                   ^-------^ SC2206 (warning): Quote to prevent word splitting/globbing, or split robustly with mapfile or read -a.\n                             ^---------^ SC2206 (warning): Quote to prevent word splitting/globbing, or split robustly with mapfile or read -a.\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 54:\n    res=($(get_all_change_files $pr_id))\n         ^----------------------------^ SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).\n                                ^----^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    res=($(get_all_change_files \"$pr_id\"))\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 58:\n    for file in ${res[@]}\n                ^-------^ SC2068 (error): Double quote array expansions to avoid re-splitting elements.\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 61:\n\tfile_dir=$(echo $file|cut -d '/' -f 1)\n                        ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                        ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n\tfile_dir=$(echo \"$file\"|cut -d '/' -f 1)\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 62:\n        file_type=$(echo $file|rev|cut -d / -f 1|cut -d '.' -f 1|rev)\n                         ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                         ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        file_type=$(echo \"$file\"|rev|cut -d / -f 1|cut -d '.' -f 1|rev)\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 64:\n\tif [[ $file_type == \"cpp\" || $file_type == \"c\" || $file_type == \"java\" || $file_type == \"py\" || $file_type == \"h\" || $file_type == 'js' ]];then\n              ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                     ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                          ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                                  ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                                                        ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                                                                             ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n\tif [[ ${file_type} == \"cpp\" || ${file_type} == \"c\" || ${file_type} == \"java\" || ${file_type} == \"py\" || ${file_type} == \"h\" || ${file_type} == 'js' ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 68:\n\tif [[ \"check$file_dir\" == \"check${module}\" ]];then\n                    ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n\tif [[ \"check${file_dir}\" == \"check${module}\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 69:\n            let module_file+=1\n            ^----------------^ SC2219 (style): Instead of 'let expr', prefer (( expr )) .\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 89:\n    res=($(get_all_change_files $pr_id))\n         ^----------------------------^ SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).\n                                ^----^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    res=($(get_all_change_files \"$pr_id\"))\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 98:\n    for file in ${res[@]}\n                ^-------^ SC2068 (error): Double quote array expansions to avoid re-splitting elements.\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 101:\n\techo \"$file\"\n              ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n\techo \"${file}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 102:\n        file_dir=$(echo $file|cut -d '/' -f 1)\n                        ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                        ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        file_dir=$(echo \"$file\"|cut -d '/' -f 1)\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 103:\n\tif [[ $file_dir == \"docs\" ]];then\n              ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n\tif [[ ${file_dir} == \"docs\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 104:\n            let doc_num+=1\n            ^------------^ SC2219 (style): Instead of 'let expr', prefer (( expr )) .\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 106:\n        if [[ \"$file\" =~ \"docs/zh-CN/docs/sql-manual/\" || \"$file\" =~ \"docs/en/docs/sql-manual/\" ]];then\n               ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                           ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        if [[ \"${file}\" =~ \"docs/zh-CN/docs/sql-manual/\" || \"${file}\" =~ \"docs/en/docs/sql-manual/\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 107:\n            let doc_sql_manual_num+=1\n            ^-----------------------^ SC2219 (style): Instead of 'let expr', prefer (( expr )) .\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 120:\n    echo \"doc_num: $doc_num\"\n                   ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    echo \"doc_num: ${doc_num}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 121:\n    echo \"file_nums: $file_nums\"\n                     ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    echo \"file_nums: ${file_nums}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 122:\n    echo \"doc_sql_manual_num: $doc_sql_manual_num\"\n                              ^-----------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    echo \"doc_sql_manual_num: ${doc_sql_manual_num}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 123:\n    if [[ $doc_num -eq $file_nums && $doc_sql_manual_num -eq 0 ]];then\n          ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                       ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                     ^-----------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    if [[ ${doc_num} -eq ${file_nums} && ${doc_sql_manual_num} -eq 0 ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 138:\n    res=($(get_all_change_files $pr_id))\n         ^----------------------------^ SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).\n                                ^----^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    res=($(get_all_change_files \"$pr_id\"))\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 146:\n    for file in ${res[@]}\n                ^-------^ SC2068 (error): Double quote array expansions to avoid re-splitting elements.\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 148:\n        echo \"$file\"\n              ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        echo \"${file}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 150:\n        file_dir=$(echo $file|cut -d '/' -f 1)\n                        ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                        ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        file_dir=$(echo \"$file\"|cut -d '/' -f 1)\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 151:\n        if [[ $file_dir == \"be\" || $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]];then\n              ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                   ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                          ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        if [[ ${file_dir} == \"be\" || ${file_dir} == \"docs\" || ${file_dir} == \"fs_brokers\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 152:\n            let doc_num+=1\n            ^------------^ SC2219 (style): Instead of 'let expr', prefer (( expr )) .\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 156:\n    if [[ $doc_num -eq $file_nums ]];then\n          ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                       ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    if [[ ${doc_num} -eq ${file_nums} ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 171:\n    res=($(get_all_change_files $pr_id))\n         ^----------------------------^ SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).\n                                ^----^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    res=($(get_all_change_files \"$pr_id\"))\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 179:\n    for file in ${res[@]}\n                ^-------^ SC2068 (error): Double quote array expansions to avoid re-splitting elements.\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 181:\n        echo \"$file\"\n              ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        echo \"${file}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 183:\n        file_dir=$(echo $file|cut -d '/' -f 1)\n                        ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                        ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        file_dir=$(echo \"$file\"|cut -d '/' -f 1)\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 184:\n        if [[ $file_dir == \"fe\" || $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]];then\n              ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                   ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                          ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        if [[ ${file_dir} == \"fe\" || ${file_dir} == \"docs\" || ${file_dir} == \"fs_brokers\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 185:\n            let doc_num+=1\n            ^------------^ SC2219 (style): Instead of 'let expr', prefer (( expr )) .\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 189:\n    if [[ $doc_num -eq $file_nums ]];then\n          ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                       ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    if [[ ${doc_num} -eq ${file_nums} ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 200:\nif [ $# > 0 ]; then\n   ^--------^ SC2292 (style): Prefer [[ ]] over [ ] for tests in Bash/Ksh.\n        ^-- SC2071 (error): > is for string comparisons. Use -gt instead.\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 203:\n\t    check_removed_change_file $2 \"be\"\n                                      ^-- SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n\t    check_removed_change_file \"$2\" \"be\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 205:\n\t    check_all_change_files_is_under_be $2\n                                               ^-- SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n\t    check_all_change_files_is_under_be \"$2\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 207:\n\t    echo ${check_1}\n                 ^--------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n\nDid you mean: \n\t    echo \"${check_1}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 208:\n\t    echo ${check_2}\n                 ^--------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n\nDid you mean: \n\t    echo \"${check_2}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 209:\n\t    res=`expr $check_1 \\* $check_2`\n            ^-^ SC2178 (warning): Variable was used as an array but is now assigned a string.\n                ^-------------------------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n                 ^--^ SC2003 (style): expr is antiquated. Consider rewriting this using $((..)), ${} or [[ ]].\n                      ^------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                      ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                  ^------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                  ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n\t    res=$(expr \"$check_1\" \\* $check_2)\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 210:\n\t    exit $res\n                 ^--^ SC2128 (warning): Expanding an array without an index only gives the first element.\n                 ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                 ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n\t    exit \"$res\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 213:\n\t    check_removed_change_file $2 \"fe\"\n                                      ^-- SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n\t    check_removed_change_file \"$2\" \"fe\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 215:\n\t    check_all_change_files_is_under_fe $2\n                                               ^-- SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n\t    check_all_change_files_is_under_fe \"$2\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 217:\n            res=`expr $check_1 \\* $check_2`\n            ^-^ SC2178 (warning): Variable was used as an array but is now assigned a string.\n                ^-------------------------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n                 ^--^ SC2003 (style): expr is antiquated. Consider rewriting this using $((..)), ${} or [[ ]].\n                      ^------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                      ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                  ^------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                  ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n            res=$(expr \"$check_1\" \\* $check_2)\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 218:\n\t    echo ${check_1}\n                 ^--------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n\nDid you mean: \n\t    echo \"${check_1}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 219:\n\t    echo ${check_2}\n                 ^--------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n\nDid you mean: \n\t    echo \"${check_2}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 220:\n\t    exit $res\n                 ^--^ SC2128 (warning): Expanding an array without an index only gives the first element.\n                 ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                 ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n\t    exit \"$res\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 223:\n\t    check_removed_change_file $2 \"docs\"\n                                      ^-- SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n\t    check_removed_change_file \"$2\" \"docs\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 225:\n\t    check_all_change_files_is_under_doc $2\n                                                ^-- SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n\t    check_all_change_files_is_under_doc \"$2\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 227:\n            res=`expr $check_1 + $check_2`\n            ^-^ SC2178 (warning): Variable was used as an array but is now assigned a string.\n                ^------------------------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n                 ^--^ SC2003 (style): expr is antiquated. Consider rewriting this using $((..)), ${} or [[ ]].\n                      ^------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                      ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                 ^------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                 ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n            res=$(expr \"$check_1\" + $check_2)\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 228:\n\t    echo ${check_1}\n                 ^--------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n\nDid you mean: \n\t    echo \"${check_1}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 229:\n            echo ${check_2}\n                 ^--------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n\nDid you mean: \n            echo \"${check_2}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 230:\n\t    exit $res\n                 ^--^ SC2128 (warning): Expanding an array without an index only gives the first element.\n                 ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                 ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n\t    exit \"$res\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 238:\nmain $@\n     ^-- SC2068 (error): Double quote array expansions to avoid re-splitting elements.\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 6:\necho `date \"+%Y-%m-%d %H:%M:%S\"` \"start to clear oudate file!\"\n     ^-------------------------^ SC2046 (warning): Quote this to prevent word splitting.\n     ^-------------------------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n\nDid you mean: \necho $(date \"+%Y-%m-%d %H:%M:%S\") \"start to clear oudate file!\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 7:\ncd /home/work/teamcity/TeamCity/piplineWork/Compile/\n^-- SC2164 (warning): Use 'cd ... || exit' or 'cd ... || return' in case cd fails.\n\nDid you mean: \ncd /home/work/teamcity/TeamCity/piplineWork/Compile/ || exit\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 8:\nfind /home/work/teamcity/TeamCity/piplineWork/Compile/ -maxdepth 1 -mindepth 1 -mmin +${existsTime} -type d -name \"*_*\" -exec rm -rf {} \\;\n                                                                                      ^-----------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n\nDid you mean: \nfind /home/work/teamcity/TeamCity/piplineWork/Compile/ -maxdepth 1 -mindepth 1 -mmin +\"${existsTime}\" -type d -name \"*_*\" -exec rm -rf {} \\;\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 9:\ncd -\n^--^ SC2164 (warning): Use 'cd ... || exit' or 'cd ... || return' in case cd fails.\n^--^ SC2103 (info): Use a ( subshell ) to avoid having to cd back.\n\nDid you mean: \ncd - || exit\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 10:\ncd /home/work/teamcity/TeamCity/piplineWork/feUt/\n^-- SC2164 (warning): Use 'cd ... || exit' or 'cd ... || return' in case cd fails.\n\nDid you mean: \ncd /home/work/teamcity/TeamCity/piplineWork/feUt/ || exit\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 11:\nfind /home/work/teamcity/TeamCity/piplineWork/feUt/ -maxdepth 1 -mindepth 1 -mmin +${existsTime} -type d -name \"*_*\" -exec rm -rf {} \\;\n                                                                                   ^-----------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n\nDid you mean: \nfind /home/work/teamcity/TeamCity/piplineWork/feUt/ -maxdepth 1 -mindepth 1 -mmin +\"${existsTime}\" -type d -name \"*_*\" -exec rm -rf {} \\;\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 12:\ncd -\n^--^ SC2164 (warning): Use 'cd ... || exit' or 'cd ... || return' in case cd fails.\n\nDid you mean: \ncd - || exit\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 13:\ncd /home/work/teamcity/TeamCity/piplineWork/beUt/\n^-- SC2164 (warning): Use 'cd ... || exit' or 'cd ... || return' in case cd fails.\n\nDid you mean: \ncd /home/work/teamcity/TeamCity/piplineWork/beUt/ || exit\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 14:\nfind /home/work/teamcity/TeamCity/piplineWork/beUt/ -maxdepth 1 -mindepth 1 -mmin +${existsTime} -type d -name \"*_*\" -exec rm -rf {} \\;\n                                                                                   ^-----------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n\nDid you mean: \nfind /home/work/teamcity/TeamCity/piplineWork/beUt/ -maxdepth 1 -mindepth 1 -mmin +\"${existsTime}\" -type d -name \"*_*\" -exec rm -rf {} \\;\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 15:\ncd -\n^--^ SC2164 (warning): Use 'cd ... || exit' or 'cd ... || return' in case cd fails.\n\nDid you mean: \ncd - || exit\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 16:\ncd /mnt/ssd01/teamcity/TeamCity/piplineWork/Compile/\n^-- SC2164 (warning): Use 'cd ... || exit' or 'cd ... || return' in case cd fails.\n\nDid you mean: \ncd /mnt/ssd01/teamcity/TeamCity/piplineWork/Compile/ || exit\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 17:\nfind /mnt/ssd01/teamcity/TeamCity/piplineWork/Compile/ -maxdepth 1 -mindepth 1 -mmin +${existsTime} -type d -name \"*_*\" -exec rm -rf {} \\;\n                                                                                      ^-----------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n\nDid you mean: \nfind /mnt/ssd01/teamcity/TeamCity/piplineWork/Compile/ -maxdepth 1 -mindepth 1 -mmin +\"${existsTime}\" -type d -name \"*_*\" -exec rm -rf {} \\;\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 18:\ncd -\n^--^ SC2164 (warning): Use 'cd ... || exit' or 'cd ... || return' in case cd fails.\n\nDid you mean: \ncd - || exit\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 19:\ncd /mnt/ssd01/teamcity/TeamCity/piplineWork/beUt/\n^-- SC2164 (warning): Use 'cd ... || exit' or 'cd ... || return' in case cd fails.\n\nDid you mean: \ncd /mnt/ssd01/teamcity/TeamCity/piplineWork/beUt/ || exit\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 20:\nfind /mnt/ssd01/teamcity/TeamCity/piplineWork/beUt/ -maxdepth 1 -mindepth 1 -mmin +${existsTime} -type d -name \"*_*\" -exec rm -rf {} \\;\n                                                                                   ^-----------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n\nDid you mean: \nfind /mnt/ssd01/teamcity/TeamCity/piplineWork/beUt/ -maxdepth 1 -mindepth 1 -mmin +\"${existsTime}\" -type d -name \"*_*\" -exec rm -rf {} \\;\n\n\nIn teamcity/doris/benchmark/clickbench/common/docker_compile.sh line 3:\nid=$(echo $RANDOM)\n   ^-------------^ SC2116 (style): Useless echo? Instead of 'cmd $(echo foo)', just use 'cmd foo'.\n          ^-----^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n          ^-----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \nid=$(echo \"$RANDOM\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/docker_compile.sh line 5:\ndocker run -i --rm --name doris-compile-$id -e TZ=Asia/Shanghai -v /etc/localtime:/etc/localtime:ro -v /home/work/.m2:/root/.m2 -v /home/work/.npm:/root/.npm -v $work_path:/root/doris apache/incubator-doris:build-env-ldb-toolchain-latest /bin/bash -c \"cd /root/doris && sh builds.sh\"\n                                        ^-^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                        ^-^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                                                                                                                 ^--------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                                                                                                                                                 ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \ndocker run -i --rm --name doris-compile-\"$id\" -e TZ=Asia/Shanghai -v /etc/localtime:/etc/localtime:ro -v /home/work/.m2:/root/.m2 -v /home/work/.npm:/root/.npm -v $work_path:/root/doris apache/incubator-doris:build-env-ldb-toolchain-latest /bin/bash -c \"cd /root/doris && sh builds.sh\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/docker_trigger_api.sh line 40:\n    docker_name=\"doris-compile-\"$(echo $RANDOM)\n                               ^-- SC1078 (warning): Did you forget to close this double quoted string?\n\n\nIn teamcity/doris/benchmark/clickbench/common/docker_trigger_api.sh line 42:\n    cmd=\"docker run -i --rm --name doris-compile-$id -e TZ=Asia/Shanghai -v /etc/localtime:/etc/localtime:ro -v /home/work/.m2:/root/.m2 -v /home/work/.npm:/root/.npm -v %system.teamcity.build.workingDir%:/root/doris apache/incubator-doris:build-env-ldb-toolchain-latest /bin/bash -c \"cd /root/doris && sh builds.sh\"\n        ^-- SC1079 (info): This is actually an end quote, but due to next char it looks suspect.\n\n\nIn teamcity/doris/benchmark/clickbench/common/docker_trigger_api.sh line 43:\n\"\n^-- SC1073 (error): Couldn't parse this double quoted string. Fix to allow more checks.\n^-- SC1009 (info): The mentioned syntax error was in this simple command.\n\n\nIn teamcity/doris/benchmark/clickbench/common/docker_trigger_api.sh line 45:\n\n^-- SC1072 (error): Expected end of double quoted string. Fix any mentioned problems and try again.\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_api.sh line 5:\n<<'COMMENT'\n^---------^ SC2188 (warning): This redirection doesn't have a command. Move to its command (or use 'true' as no-op).\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_api.sh line 145:\nif [ $# > 0 ]; then\n   ^--------^ SC2292 (style): Prefer [[ ]] over [ ] for tests in Bash/Ksh.\n        ^-- SC2071 (error): > is for string comparisons. Use -gt instead.\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_api.sh line 147:\n        --cancel_running_build) build_id=$2; cancel_running_build $build_id; shift ;;\n                                                                  ^-------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                                                  ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        --cancel_running_build) build_id=$2; cancel_running_build \"$build_id\"; shift ;;\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_api.sh line 148:\n        --cancel_pending_build) build_id=$2; cancel_pending_build $build_id; shift ;;\n                                                                  ^-------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                                                  ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        --cancel_pending_build) build_id=$2; cancel_pending_build \"$build_id\"; shift ;;\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_api.sh line 149:\n        --show_build_state) build_id=$2; res=$(show_build_state $build_id); echo $res; shift ;;\n                                                                ^-------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                                                ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                                 ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                                                                 ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        --show_build_state) build_id=$2; res=$(show_build_state \"$build_id\"); echo $res; shift ;;\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_api.sh line 150:\n        --show_build_status) build_id=$2; res=$(show_build_status $build_id); echo $res; shift ;;\n                                                                  ^-------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                                                  ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                                   ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                                                                   ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        --show_build_status) build_id=$2; res=$(show_build_status \"$build_id\"); echo $res; shift ;;\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_api.sh line 153:\n        --get_all_builds_of_pr_id) get_all_builds $2; shift ;;\n                                                  ^-- SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n        --get_all_builds_of_pr_id) get_all_builds \"$2\"; shift ;;\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_api.sh line 161:\nmain $@\n     ^-- SC2068 (error): Double quote array expansions to avoid re-splitting elements.\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 4:\nzcp_TOKEN=\"eyJ0eXAiOiAiVENWMiJ9.bW1DcHJpRWNCSktnREhLaHd5Y1lndmpycnJ3.NmEwM2E3YTEtMTVmYy00NGU0LWI1OTAtMzU3MzljODE0Njdk\"\n^-------^ SC2034 (warning): zcp_TOKEN appears unused. Verify use (or export if used externally).\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 7:\nzcp_TEAMCITY_SERVER=\"http://43.129.232.36:8111\"\n^-----------------^ SC2034 (warning): zcp_TEAMCITY_SERVER appears unused. Verify use (or export if used externally).\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 40:\n    state=$(show_build_state $build_id)\n                             ^-------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                             ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    state=$(show_build_state \"$build_id\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 41:\n    if [[ $state == \"running\" ]];then\n          ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    if [[ ${state} == \"running\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 43:\n        cmd=\"/app/rest/builds/id:$build_id\"\n                                 ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        cmd=\"/app/rest/builds/id:${build_id}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 44:\n        cmd=$cmd\" -X POST -H \\'Content-Type: application/json\\' -d \\'{ \\\"buildCancelRequest\\\": {       \\\"comment\\\": \\\"Stop obsolete running builds.\\\",      \\\"readdIntoQueue\\\": \\\"false\\\"    }  }'\"\n            ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        cmd=${cmd}\" -X POST -H \\'Content-Type: application/json\\' -d \\'{ \\\"buildCancelRequest\\\": {       \\\"comment\\\": \\\"Stop obsolete running builds.\\\",      \\\"readdIntoQueue\\\": \\\"false\\\"    }  }'\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 45:\n        url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $TEAMCITY_SERVER/$cmd\"\n                     ^-----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                               ^------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                              ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                       ^--------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                        ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        url=\"curl -s ${HEADER} \\\"${AUTHORIZATION} ${TOKEN}\\\" ${TEAMCITY_SERVER}/${cmd}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 46:\n        res=$(eval $eval)\n                   ^---^ SC2154 (warning): eval is referenced but not assigned (for output from commands, use \"$(eval ...)\" ).\n                   ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                   ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        res=$(eval \"$eval\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 47:\n        check=$(echo $res |grep status=\"UNKNOWN\")\n                     ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                     ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        check=$(echo \"$res\" |grep status=\"UNKNOWN\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 48:\n        if [[ -z $check ]];then\n                 ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        if [[ -z ${check} ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 57:\n    state=$(show_build_state $build_id)\n                             ^-------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                             ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    state=$(show_build_state \"$build_id\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 58:\n    if [[ $state == \"queued\" ]];then\n          ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    if [[ ${state} == \"queued\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 59:\n        cmd=\"app/rest/buildQueue/id:$build_id\"\n                                    ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        cmd=\"app/rest/buildQueue/id:${build_id}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 60:\n        cmd=$cmd\" -X POST -H \\'Content-Type: application/json\\' -d \\'{ \\\"buildCancelRequest\\\": {       \\\"comment\\\": \\\"Cancel obsolete queue build.\\\",      \\\"readdIntoQueue\\\": \\\"false\\\"    }  }'\"\n            ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        cmd=${cmd}\" -X POST -H \\'Content-Type: application/json\\' -d \\'{ \\\"buildCancelRequest\\\": {       \\\"comment\\\": \\\"Cancel obsolete queue build.\\\",      \\\"readdIntoQueue\\\": \\\"false\\\"    }  }'\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 61:\n        url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $TEAMCITY_SERVER/$cmd\"\n                     ^-----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                               ^------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                              ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                       ^--------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                        ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        url=\"curl -s ${HEADER} \\\"${AUTHORIZATION} ${TOKEN}\\\" ${TEAMCITY_SERVER}/${cmd}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 63:\n        res=$(eval $eval)\n                   ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                   ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        res=$(eval \"$eval\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 64:\n        check=$(echo $res |grep status=\"UNKNOWN\")\n                     ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                     ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        check=$(echo \"$res\" |grep status=\"UNKNOWN\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 65:\n        if [[ -z $check ]];then\n                 ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        if [[ -z ${check} ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 73:\n    cmd=\"app/rest/builds?locator=id:$build_id\"\n                                    ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    cmd=\"app/rest/builds?locator=id:${build_id}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 74:\n    url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $TEAMCITY_SERVER/$cmd\"\n                 ^-----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                           ^------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                          ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                   ^--------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                    ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    url=\"curl -s ${HEADER} \\\"${AUTHORIZATION} ${TOKEN}\\\" ${TEAMCITY_SERVER}/${cmd}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 76:\n    res=`eval $url`\n        ^---------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n              ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n              ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    res=$(eval \"$url\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 79:\n    check=$(echo $res|grep \"<builds count=\\\"1\\\"\")\n                 ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                 ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    check=$(echo \"$res\"|grep \"<builds count=\\\"1\\\"\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 80:\n    if [[ -z $check ]]; then\n             ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    if [[ -z ${check} ]]; then\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 84:\n    state=`echo $res |awk -F ' ' '{print $9\" \"$10\" \"$11}'|awk -F \"state=\" '{print $2}'|cut -d ' ' -f 1|sed 's/\\\"//g'`\n          ^-- SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n                ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    state=$(echo \"$res\" |awk -F ' ' '{print $9\" \"$10\" \"$11}'|awk -F \"state=\" '{print $2}'|cut -d ' ' -f 1|sed 's/\\\"//g')\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 86:\n    echo $state\n         ^----^ SC2086 (info): Double quote to prevent globbing and word splitting.\n         ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    echo \"$state\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 91:\n    cmd=\"app/rest/builds?locator=id:$build_id\"\n                                    ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    cmd=\"app/rest/builds?locator=id:${build_id}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 92:\n    url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $TEAMCITY_SERVER/$cmd\"\n                 ^-----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                           ^------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                          ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                   ^--------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                    ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    url=\"curl -s ${HEADER} \\\"${AUTHORIZATION} ${TOKEN}\\\" ${TEAMCITY_SERVER}/${cmd}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 94:\n    res=`eval $url`\n        ^---------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n              ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n              ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    res=$(eval \"$url\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 96:\n    check1=$(echo $res|grep \"<builds count=\\\"1\\\"\")\n                  ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                  ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    check1=$(echo \"$res\"|grep \"<builds count=\\\"1\\\"\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 97:\n    if [[ -z $check1 ]]; then\n             ^-----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    if [[ -z ${check1} ]]; then\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 105:\n    state=`echo $res |awk -F ' ' '{print $9\" \"$10\" \"$11}'|awk -F \"status=\" '{print $2}'|cut -d ' ' -f 1|sed 's/\\\"//g'`\n          ^-- SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n                ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    state=$(echo \"$res\" |awk -F ' ' '{print $9\" \"$10\" \"$11}'|awk -F \"status=\" '{print $2}'|cut -d ' ' -f 1|sed 's/\\\"//g')\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 107:\n    echo $state\n         ^----^ SC2086 (info): Double quote to prevent globbing and word splitting.\n         ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    echo \"$state\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 112:\n    cmd=\"app/rest/builds?locator=branch:$branch\"\n                                        ^-----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    cmd=\"app/rest/builds?locator=branch:${branch}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 113:\n    url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $TEAMCITY_SERVER/$cmd\"\n                 ^-----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                           ^------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                          ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                   ^--------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                    ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    url=\"curl -s ${HEADER} \\\"${AUTHORIZATION} ${TOKEN}\\\" ${TEAMCITY_SERVER}/${cmd}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 114:\n    res=`eval $url`\n        ^---------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n              ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n              ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    res=$(eval \"$url\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 119:\n    url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $TEAMCITY_SERVER/$cmd\"\n                 ^-----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                        ^-^ SC2089 (warning): Quotes/backslashes will be treated literally. Use an array.\n                           ^------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                          ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                   ^--------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                    ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    url=\"curl -s ${HEADER} \\\"${AUTHORIZATION} ${TOKEN}\\\" ${TEAMCITY_SERVER}/${cmd}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 121:\n    res=eval $url\n    ^-----------^ SC2209 (warning): Use var=$(command) to assign output (or quote to assign string).\n             ^--^ SC2090 (warning): Quotes/backslashes in this variable will not be respected.\n             ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    res=eval ${url}\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 126:\n    url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $JSON_HEADER $TEAMCITY_SERVER/$cmd\"\n                 ^-----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                           ^------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                          ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                   ^----------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                ^--------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                                 ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    url=\"curl -s ${HEADER} \\\"${AUTHORIZATION} ${TOKEN}\\\" ${JSON_HEADER} ${TEAMCITY_SERVER}/${cmd}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 128:\n    res=`eval $url`\n        ^---------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n              ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n              ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    res=$(eval \"$url\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/test.sh line 12:\n    while [ 1 -eq 1 ]\n          ^---------^ SC2292 (style): Prefer [[ ]] over [ ] for tests in Bash/Ksh.\n              ^-^ SC2050 (warning): This expression is constant. Did you forget the $ on a variable?\n\nDid you mean: \n    while [[ 1 -eq 1 ]]\n\n\nIn teamcity/doris/benchmark/clickbench/common/test.sh line 15:\n\tres=($(curl --header \"authorization: Bearer ${GITHUB_TOKEN}\" https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files?per_page=$per_page\\&page=$page|jq -r '.[]|select(.status = \"removed\")| .filename'))\n             ^-- SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).\n                                                                                                  ^------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                                                                           ^-----^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                                                                                         ^------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                                                                                                                                 ^-------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                                                                                                                 ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                                                                                                                 ^---^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                                                                                                                                 ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n\tres=($(curl --header \"authorization: Bearer ${GITHUB_TOKEN}\" https://api.github.com/repos/\"${owner}\"/\"${repo}\"/pulls/\"${pr_id}\"/files?per_page=\"$per_page\"\\&page=$page|jq -r '.[]|select(.status = \"removed\")| .filename'))\n\n\nIn teamcity/doris/benchmark/clickbench/common/test.sh line 17:\n        if [ ${res_len} -ne 0 ];then\n           ^------------------^ SC2292 (style): Prefer [[ ]] over [ ] for tests in Bash/Ksh.\n             ^--------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n        if [[ \"${res_len}\" -ne 0 ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/test.sh line 18:\n\t    let page+=1\n            ^---------^ SC2219 (style): Instead of 'let expr', prefer (( expr )) .\n\n\nIn teamcity/doris/benchmark/clickbench/common/test.sh line 20:\n\t    files=(${res[@]} ${files[*]})\n                   ^-------^ SC2206 (warning): Quote to prevent word splitting/globbing, or split robustly with mapfile or read -a.\n                             ^---------^ SC2206 (warning): Quote to prevent word splitting/globbing, or split robustly with mapfile or read -a.\n\n\nIn teamcity/doris/benchmark/clickbench/common/test.sh line 30:\nout=($(get_all_change_files 11154))\n     ^---------------------------^ SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check.sh line 3:\n<<'COMMENT'\n^---------^ SC2188 (warning): This redirection doesn't have a command. Move to its command (or use 'true' as no-op).\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 26:\n    res=($(curl https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files|jq -r '.[]|select(.status != \"removed\")| .filename'))\n         ^-- SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).\n                                             ^------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                      ^-----^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                                    ^------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n    res=($(curl https://api.github.com/repos/\"${owner}\"/\"${repo}\"/pulls/\"${pr_id}\"/files|jq -r '.[]|select(.status != \"removed\")| .filename'))\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 30:\n    for file in ${res[@]}\n                ^-------^ SC2068 (error): Double quote array expansions to avoid re-splitting elements.\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 33:\n        file_dir=$(echo $file|cut -d '/' -f 1)\n                        ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                        ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        file_dir=$(echo \"$file\"|cut -d '/' -f 1)\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 34:\n        if [[ $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]];then\n              ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                     ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        if [[ ${file_dir} == \"docs\" || ${file_dir} == \"fs_brokers\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 35:\n            let doc_num+=1\n            ^------------^ SC2219 (style): Instead of 'let expr', prefer (( expr )) .\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 46:\n    if [[ $doc_num -eq $file_nums ]];then\n          ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                       ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    if [[ ${doc_num} -eq ${file_nums} ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 60:\n    res=($(curl https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files|jq -r '.[]|select(.status != \"removed\")| .filename'))\n         ^-- SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).\n                                             ^------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                      ^-----^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                                    ^------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n    res=($(curl https://api.github.com/repos/\"${owner}\"/\"${repo}\"/pulls/\"${pr_id}\"/files|jq -r '.[]|select(.status != \"removed\")| .filename'))\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 65:\n    for file in ${res[@]}\n                ^-------^ SC2068 (error): Double quote array expansions to avoid re-splitting elements.\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 68:\n        file_dir=$(echo $file|cut -d '/' -f 1)\n                        ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                        ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        file_dir=$(echo \"$file\"|cut -d '/' -f 1)\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 69:\n        if [[ $file_dir == \"be\" || $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]];then\n              ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                   ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                          ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        if [[ ${file_dir} == \"be\" || ${file_dir} == \"docs\" || ${file_dir} == \"fs_brokers\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 70:\n            let doc_num+=1\n            ^------------^ SC2219 (style): Instead of 'let expr', prefer (( expr )) .\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 74:\n    if [[ $doc_num -eq $file_nums ]];then\n          ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                       ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    if [[ ${doc_num} -eq ${file_nums} ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 88:\n    res=($(curl https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files|jq -r '.[]|select(.status != \"removed\")| .filename'))\n         ^-- SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).\n                                             ^------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                      ^-----^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                                    ^------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n    res=($(curl https://api.github.com/repos/\"${owner}\"/\"${repo}\"/pulls/\"${pr_id}\"/files|jq -r '.[]|select(.status != \"removed\")| .filename'))\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 93:\n    for file in ${res[@]}\n                ^-------^ SC2068 (error): Double quote array expansions to avoid re-splitting elements.\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 96:\n        file_dir=$(echo $file|cut -d '/' -f 1)\n                        ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                        ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        file_dir=$(echo \"$file\"|cut -d '/' -f 1)\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 97:\n        if [[ $file_dir == \"fe\" || $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]];then\n              ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                   ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                          ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        if [[ ${file_dir} == \"fe\" || ${file_dir} == \"docs\" || ${file_dir} == \"fs_brokers\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 98:\n            let doc_num+=1\n            ^------------^ SC2219 (style): Instead of 'let expr', prefer (( expr )) .\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 102:\n    if [[ $doc_num -eq $file_nums ]];then\n          ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                       ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    if [[ ${doc_num} -eq ${file_nums} ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 113:\nif [ $# > 0 ]; then\n   ^--------^ SC2292 (style): Prefer [[ ]] over [ ] for tests in Bash/Ksh.\n        ^-- SC2071 (error): > is for string comparisons. Use -gt instead.\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 115:\n        --is_modify_only_invoved_be) check_all_change_files_is_under_be $2; shift ;;\n                                                                        ^-- SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n        --is_modify_only_invoved_be) check_all_change_files_is_under_be \"$2\"; shift ;;\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 116:\n        --is_modify_only_invoved_fe) check_all_change_files_is_under_fe $2; shift ;;\n                                                                        ^-- SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n        --is_modify_only_invoved_fe) check_all_change_files_is_under_fe \"$2\"; shift ;;\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 117:\n\t--is_modify_only_doc) check_all_change_files_is_under_doc $2; shift ;;\n                                                                  ^-- SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n\t--is_modify_only_doc) check_all_change_files_is_under_doc \"$2\"; shift ;;\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 124:\nmain $@\n     ^-- SC2068 (error): Double quote array expansions to avoid re-splitting elements.\n\nFor more information:\n  https://www.shellcheck.net/wiki/SC2068 -- Double quote array expansions to ...\n  https://www.shellcheck.net/wiki/SC2071 -- > is for string comparisons. Use ...\n  https://www.shellcheck.net/wiki/SC1078 -- Did you forget to close this doub...\n----------\n\nYou can address the above issues in one of three ways:\n1. Manually correct the issue in the offending shell script;\n2. Disable specific issues by adding the comment:\n  # shellcheck disable=NNNN\nabove the line that contains the issue, where NNNN is the error code;\n3. Add '-e NNNN' to the SHELLCHECK_OPTS setting in your .yml action file.\n\n\n\n```\n</details>\n\n<details>\n<summary>shfmt errors</summary>\n\n```\n\n'shfmt ' returned error 1 finding the following formatting issues:\n\n----------\n--- teamcity/doris/benchmark/clickbench/common/check_and_kill_deleted_proc.sh.orig\n+++ teamcity/doris/benchmark/clickbench/common/check_and_kill_deleted_proc.sh\n@@ -8,23 +8,22 @@\n echo \"====================================\"\n echo \"START TO DETECT RESIDUAL PROCESSES!\"\n \n-check=$(lsof -i:$port|awk '{print $2}'|wc -l)\n-if [ \"check$check\" != \"check0\" ];then\n-    if [ \"check\"${case_level} == \"check\" ];then\n-        check_res=$(pwdx `lsof -i:$port|grep -v PID|awk '{print $2}'`|grep $env_name|grep deleted||wc -l)\n+check=$(lsof -i:$port | awk '{print $2}' | wc -l)\n+if [ \"check$check\" != \"check0\" ]; then\n+    if [ \"check\"${case_level} == \"check\" ]; then\n+        check_res=$(pwdx $(lsof -i:$port | grep -v PID | awk '{print $2}') | grep $env_name | grep deleted || wc -l)\n     else\n-        check_res=$(pwdx `lsof -i:$port|grep -v PID|awk '{print $2}'`|grep $env_name|grep $case_level|grep deleted||wc -l)\n+        check_res=$(pwdx $(lsof -i:$port | grep -v PID | awk '{print $2}') | grep $env_name | grep $case_level | grep deleted || wc -l)\n     fi\n-    if [ \"check$check_res\" != \"check0\" ];then\n-        be_pid=(`lsof -i:$port|grep -v PID|awk '{print $2}'`)\n+    if [ \"check$check_res\" != \"check0\" ]; then\n+        be_pid=($(lsof -i:$port | grep -v PID | awk '{print $2}'))\n         echo \"Detected residual processes: ${be_pid}\"\n         echo \"kill residual processes: kill -9 ${be_pid}\"\n         kill -9 $be_pid\n     fi\n else\n-        echo \"No residual processes\"\n+    echo \"No residual processes\"\n fi\n \n-\n echo \"FINISH DETECT RESIDUAL PROCESSES!\"\n echo \"===================================\"\n--- teamcity/doris/benchmark/clickbench/common/check_change_file.sh.orig\n+++ teamcity/doris/benchmark/clickbench/common/check_change_file.sh\n@@ -7,7 +7,7 @@\n GITHUB_TOKEN=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\n \n usage() {\n-  echo \"\n+    echo \"\n Usage: $0 <options>\n   Optional options:\n \n@@ -16,23 +16,21 @@\n     $0 --is_modify_only_invoved_fe pr_id          if pr changed code only invoved fe doc, fs_brocker, return 0; else return 2\n     $0 --is_modify_only_invoved_doc pr_id         if pr changed code only invoved doc, fs_brocker, return 0; else return 2\n   \"\n-  exit 1\n+    exit 1\n }\n \n-\n-function get_all_change_files(){\n+function get_all_change_files() {\n     pr_id=$1\n     files=()\n \n     page=1\n     per_page=100\n-    while [ 1 -eq 1 ]\n-    do\n+    while [ 1 -eq 1 ]; do\n         #echo \"curl --header 'authorization: Bearer ${GITHUB_TOKEN}' https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files?per_page=$per_page\\&page=$page\"\n-        res=($(curl --header \"authorization: Bearer ${GITHUB_TOKEN}\" https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files?per_page=$per_page\\&page=$page|jq -r '.[]|select(.status = \"removed\")| .filename'))\n+        res=($(curl --header \"authorization: Bearer ${GITHUB_TOKEN}\" https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files?per_page=$per_page\\&page=$page | jq -r '.[]|select(.status = \"removed\")| .filename'))\n         res_len=${#res[@]}\n         #echo \"================\"$res_len\n-        if [ ${res_len} -ne 0 ];then\n+        if [ ${res_len} -ne 0 ]; then\n             let page+=1\n             #files=\"${res[@]}\"\"$files\"\n             files=(${res[@]} ${files[*]})\n@@ -44,8 +42,7 @@\n     echo \"${files[@]}\"\n }\n \n-\n-function check_removed_change_file(){\n+function check_removed_change_file() {\n     pr_id=$1\n     module=$2\n     owner='apache'\n@@ -55,26 +52,25 @@\n     file_nums=${#res[@]}\n     is_code_change_flag=false\n     module_file=0\n-    for file in ${res[@]}\n-    do\n-\t#echo \"$file\"\n-\tfile_dir=$(echo $file|cut -d '/' -f 1)\n-        file_type=$(echo $file|rev|cut -d / -f 1|cut -d '.' -f 1|rev)\n-\t#if [[  \"check$file_dir\" == \"check${module}\" &&  ($file_type == \"cpp\" || $file_type == \"c\" || $file_type == \"java\" || $file_type == \"py\" || $file_type == \"h\" || $file_type == 'js') ]];then\n-\tif [[ $file_type == \"cpp\" || $file_type == \"c\" || $file_type == \"java\" || $file_type == \"py\" || $file_type == \"h\" || $file_type == 'js' ]];then\n-\t    echo \"code has changed, ${file} is deleted\"\n-\t    is_code_change_flag=true\n-\tfi\n-\tif [[ \"check$file_dir\" == \"check${module}\" ]];then\n+    for file in ${res[@]}; do\n+        #echo \"$file\"\n+        file_dir=$(echo $file | cut -d '/' -f 1)\n+        file_type=$(echo $file | rev | cut -d / -f 1 | cut -d '.' -f 1 | rev)\n+        #if [[  \"check$file_dir\" == \"check${module}\" &&  ($file_type == \"cpp\" || $file_type == \"c\" || $file_type == \"java\" || $file_type == \"py\" || $file_type == \"h\" || $file_type == 'js') ]];then\n+        if [[ $file_type == \"cpp\" || $file_type == \"c\" || $file_type == \"java\" || $file_type == \"py\" || $file_type == \"h\" || $file_type == 'js' ]]; then\n+            echo \"code has changed, ${file} is deleted\"\n+            is_code_change_flag=true\n+        fi\n+        if [[ \"check$file_dir\" == \"check${module}\" ]]; then\n             let module_file+=1\n-\tfi\n+        fi\n     done\n \n-    if [[ \"${is_code_change_flag}\" == \"false\" ]];then\n-\techo \"NO CODE FILE DELETED, PASSED!\"\n+    if [[ \"${is_code_change_flag}\" == \"false\" ]]; then\n+        echo \"NO CODE FILE DELETED, PASSED!\"\n         return 0\n     else\n-\techo \"CODE FILE BE DELETED\"\n+        echo \"CODE FILE BE DELETED\"\n         return 2\n     fi\n \n@@ -95,20 +91,18 @@\n \n     doc_num=0\n     doc_sql_manual_num=0\n-    for file in ${res[@]}\n-    do\n+    for file in ${res[@]}; do\n         #check change file is on docs/fs_brokers or not\n-\techo \"$file\"\n-        file_dir=$(echo $file|cut -d '/' -f 1)\n-\tif [[ $file_dir == \"docs\" ]];then\n+        echo \"$file\"\n+        file_dir=$(echo $file | cut -d '/' -f 1)\n+        if [[ $file_dir == \"docs\" ]]; then\n             let doc_num+=1\n-\tfi\n-        if [[ \"$file\" =~ \"docs/zh-CN/docs/sql-manual/\" || \"$file\" =~ \"docs/en/docs/sql-manual/\" ]];then\n+        fi\n+        if [[ \"$file\" =~ \"docs/zh-CN/docs/sql-manual/\" || \"$file\" =~ \"docs/en/docs/sql-manual/\" ]]; then\n             let doc_sql_manual_num+=1\n             continue\n         fi\n \n-\n         #check change file is md/txt/doc file\n         #file_type=$(echo $file|cut -d '.' -f 2)\n         #if [[ $file_type == \"md\" || $file_type == \"txt\" || $file_type == \"doc\" ]];then\n@@ -120,7 +114,7 @@\n     echo \"doc_num: $doc_num\"\n     echo \"file_nums: $file_nums\"\n     echo \"doc_sql_manual_num: $doc_sql_manual_num\"\n-    if [[ $doc_num -eq $file_nums && $doc_sql_manual_num -eq 0 ]];then\n+    if [[ $doc_num -eq $file_nums && $doc_sql_manual_num -eq 0 ]]; then\n         echo \"JUST MODIFY DOCUMENT, NO COED CHSNGED, PASSED!\"\n         return 0\n     else\n@@ -143,17 +137,16 @@\n \n     doc_num=0\n     echo \"START CHECK CODE IS ONLY RELATED BE OR NOT\"\n-    for file in ${res[@]}\n-    do\n+    for file in ${res[@]}; do\n         echo \"$file\"\n         #check change file is on be or not\n-        file_dir=$(echo $file|cut -d '/' -f 1)\n-        if [[ $file_dir == \"be\" || $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]];then\n+        file_dir=$(echo $file | cut -d '/' -f 1)\n+        if [[ $file_dir == \"be\" || $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]]; then\n             let doc_num+=1\n             continue\n-\tfi\n+        fi\n     done\n-    if [[ $doc_num -eq $file_nums ]];then\n+    if [[ $doc_num -eq $file_nums ]]; then\n         echo \"JUST MODIFY BE CODE, NO NEED RUN FE UT, PASSED!\"\n         return 0\n     else\n@@ -176,17 +169,16 @@\n \n     doc_num=0\n     echo \"START CHECK CODE IS ONLY RELATED FE OR NOT\"\n-    for file in ${res[@]}\n-    do\n+    for file in ${res[@]}; do\n         echo \"$file\"\n         #check change file is on be or not\n-        file_dir=$(echo $file|cut -d '/' -f 1)\n-        if [[ $file_dir == \"fe\" || $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]];then\n+        file_dir=$(echo $file | cut -d '/' -f 1)\n+        if [[ $file_dir == \"fe\" || $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]]; then\n             let doc_num+=1\n             continue\n         fi\n     done\n-    if [[ $doc_num -eq $file_nums ]];then\n+    if [[ $doc_num -eq $file_nums ]]; then\n         echo \"JUST MODIFY FE CODE, NO NEED RUN BE UT, PASSED!\"\n         return 0\n     else\n@@ -197,42 +189,49 @@\n \n main() {\n \n-if [ $# > 0 ]; then\n-    case \"$1\" in\n+    if [ $# ] >0; then\n+        case \"$1\" in\n         --is_modify_only_invoved_be)\n-\t    check_removed_change_file $2 \"be\"\n-\t    check_1=$?\n-\t    check_all_change_files_is_under_be $2\n-\t    check_2=$?\n-\t    echo ${check_1}\n-\t    echo ${check_2}\n-\t    res=`expr $check_1 \\* $check_2`\n-\t    exit $res\n-\t    shift ;;\n+            check_removed_change_file $2 \"be\"\n+            check_1=$?\n+            check_all_change_files_is_under_be $2\n+            check_2=$?\n+            echo ${check_1}\n+            echo ${check_2}\n+            res=$(expr $check_1 \\* $check_2)\n+            exit $res\n+            shift\n+            ;;\n         --is_modify_only_invoved_fe)\n-\t    check_removed_change_file $2 \"fe\"\n-\t    check_1=$?\n-\t    check_all_change_files_is_under_fe $2\n-\t    check_2=$?\n-            res=`expr $check_1 \\* $check_2`\n-\t    echo ${check_1}\n-\t    echo ${check_2}\n-\t    exit $res\n-\t    shift ;;\n-\t--is_modify_only_invoved_doc)\n-\t    check_removed_change_file $2 \"docs\"\n-\t    check_1=$?\n-\t    check_all_change_files_is_under_doc $2\n-\t    check_2=$?\n-            res=`expr $check_1 + $check_2`\n-\t    echo ${check_1}\n+            check_removed_change_file $2 \"fe\"\n+            check_1=$?\n+            check_all_change_files_is_under_fe $2\n+            check_2=$?\n+            res=$(expr $check_1 \\* $check_2)\n+            echo ${check_1}\n             echo ${check_2}\n-\t    exit $res\n-\t    shift ;;\n-        *) echo \"ERROR\"; usage; exit 1 ;;\n-    esac\n+            exit $res\n+            shift\n+            ;;\n+        --is_modify_only_invoved_doc)\n+            check_removed_change_file $2 \"docs\"\n+            check_1=$?\n+            check_all_change_files_is_under_doc $2\n+            check_2=$?\n+            res=$(expr $check_1 + $check_2)\n+            echo ${check_1}\n+            echo ${check_2}\n+            exit $res\n+            shift\n+            ;;\n+        *)\n+            echo \"ERROR\"\n+            usage\n+            exit 1\n+            ;;\n+        esac\n \n-fi\n+    fi\n }\n \n main $@\n--- teamcity/doris/benchmark/clickbench/common/clean_disk.sh.orig\n+++ teamcity/doris/benchmark/clickbench/common/clean_disk.sh\n@@ -3,7 +3,7 @@\n df -h\n existsTime=720\n #delete files created 20 hours ago\n-echo `date \"+%Y-%m-%d %H:%M:%S\"` \"start to clear oudate file!\"\n+echo $(date \"+%Y-%m-%d %H:%M:%S\") \"start to clear oudate file!\"\n cd /home/work/teamcity/TeamCity/piplineWork/Compile/\n find /home/work/teamcity/TeamCity/piplineWork/Compile/ -maxdepth 1 -mindepth 1 -mmin +${existsTime} -type d -name \"*_*\" -exec rm -rf {} \\;\n cd -\nteamcity/doris/benchmark/clickbench/common/docker_trigger_api.sh:43:1: reached EOF without closing quote \"\n--- teamcity/doris/benchmark/clickbench/common/teamcity_api.sh.orig\n+++ teamcity/doris/benchmark/clickbench/common/teamcity_api.sh\n@@ -139,23 +139,55 @@\n }\n COMMENT\n \n-\n main() {\n \n-if [ $# > 0 ]; then\n-    case \"$1\" in \n-        --cancel_running_build) build_id=$2; cancel_running_build $build_id; shift ;;\n-        --cancel_pending_build) build_id=$2; cancel_pending_build $build_id; shift ;;\n-        --show_build_state) build_id=$2; res=$(show_build_state $build_id); echo $res; shift ;;\n-        --show_build_status) build_id=$2; res=$(show_build_status $build_id); echo $res; shift ;;\n-        --show_latest_builds) get_latest_builds; shift ;;\n-        --show_queued_builds) get_queued_builds; shift ;;\n-        --get_all_builds_of_pr_id) get_all_builds $2; shift ;;\n-\t--help) usage; shift ;;\n-        *) echo \"ERROR\"; exit 1 ;;\n-    esac\n+    if [ $# ] >0; then\n+        case \"$1\" in\n+        --cancel_running_build)\n+            build_id=$2\n+            cancel_running_build $build_id\n+            shift\n+            ;;\n+        --cancel_pending_build)\n+            build_id=$2\n+            cancel_pending_build $build_id\n+            shift\n+            ;;\n+        --show_build_state)\n+            build_id=$2\n+            res=$(show_build_state $build_id)\n+            echo $res\n+            shift\n+            ;;\n+        --show_build_status)\n+            build_id=$2\n+            res=$(show_build_status $build_id)\n+            echo $res\n+            shift\n+            ;;\n+        --show_latest_builds)\n+            get_latest_builds\n+            shift\n+            ;;\n+        --show_queued_builds)\n+            get_queued_builds\n+            shift\n+            ;;\n+        --get_all_builds_of_pr_id)\n+            get_all_builds $2\n+            shift\n+            ;;\n+        --help)\n+            usage\n+            shift\n+            ;;\n+        *)\n+            echo \"ERROR\"\n+            exit 1\n+            ;;\n+        esac\n \n-fi\n+    fi\n }\n \n main $@\n--- teamcity/doris/benchmark/clickbench/common/teamcity_common.sh.orig\n+++ teamcity/doris/benchmark/clickbench/common/teamcity_common.sh\n@@ -11,7 +11,7 @@\n JSON_HEADER=\"--header \\\"Accept: application/json\\\"\"\n \n usage() {\n-  echo \"\n+    echo \"\n Usage: $0 <options>\n   Optional options:\n      --cancel_running_build build_id    cancel a specific running build\n@@ -32,21 +32,21 @@\n     $0 --show_queued_builds             show all queued builds\n     $0 --get_all_builds_of_pr_id 9151   get all 9151 builds\n   \"\n-  exit 1\n+    exit 1\n }\n \n cancel_running_build() {\n     build_id=$1\n     state=$(show_build_state $build_id)\n-    if [[ $state == \"running\" ]];then\n+    if [[ $state == \"running\" ]]; then\n         #curl --header \"Authorization: Bearer eyJ0eXAiOiAiVENWMiJ9.bW1DcHJpRWNCSktnREhLaHd5Y1lndmpycnJ3.NmEwM2E3YTEtMTVmYy00NGU0LWI1OTAtMzU3MzljODE0Njdk\" http://43.129.232.36:8111/app/rest/builds/id:333 -X POST -H 'Content-Type: application/json' -d '{ \"buildCancelRequest\": {       \"comment\": \"Already running builds will be stopped.\",      \"readdIntoQueue\": \"false\"    }  }'\n         cmd=\"/app/rest/builds/id:$build_id\"\n         cmd=$cmd\" -X POST -H \\'Content-Type: application/json\\' -d \\'{ \\\"buildCancelRequest\\\": {       \\\"comment\\\": \\\"Stop obsolete running builds.\\\",      \\\"readdIntoQueue\\\": \\\"false\\\"    }  }'\"\n         url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $TEAMCITY_SERVER/$cmd\"\n         res=$(eval $eval)\n-        check=$(echo $res |grep status=\"UNKNOWN\")\n-        if [[ -z $check ]];then\n-           echo \"cancel fail!\"\n+        check=$(echo $res | grep status=\"UNKNOWN\")\n+        if [[ -z $check ]]; then\n+            echo \"cancel fail!\"\n         fi\n     fi\n \n@@ -55,15 +55,15 @@\n cancel_pending_build() {\n     build_id=$1\n     state=$(show_build_state $build_id)\n-    if [[ $state == \"queued\" ]];then\n+    if [[ $state == \"queued\" ]]; then\n         cmd=\"app/rest/buildQueue/id:$build_id\"\n         cmd=$cmd\" -X POST -H \\'Content-Type: application/json\\' -d \\'{ \\\"buildCancelRequest\\\": {       \\\"comment\\\": \\\"Cancel obsolete queue build.\\\",      \\\"readdIntoQueue\\\": \\\"false\\\"    }  }'\"\n         url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $TEAMCITY_SERVER/$cmd\"\n         #echo $url\n         res=$(eval $eval)\n-        check=$(echo $res |grep status=\"UNKNOWN\")\n-        if [[ -z $check ]];then\n-           echo \"cancel fail!\"\n+        check=$(echo $res | grep status=\"UNKNOWN\")\n+        if [[ -z $check ]]; then\n+            echo \"cancel fail!\"\n         fi\n     fi\n }\n@@ -73,15 +73,15 @@\n     cmd=\"app/rest/builds?locator=id:$build_id\"\n     url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $TEAMCITY_SERVER/$cmd\"\n     #echo $url\n-    res=`eval $url`\n-    \n+    res=$(eval $url)\n+\n     #check build exist or not\n-    check=$(echo $res|grep \"<builds count=\\\"1\\\"\")\n+    check=$(echo $res | grep \"<builds count=\\\"1\\\"\")\n     if [[ -z $check ]]; then\n         return\n     fi\n     #get state\n-    state=`echo $res |awk -F ' ' '{print $9\" \"$10\" \"$11}'|awk -F \"state=\" '{print $2}'|cut -d ' ' -f 1|sed 's/\\\"//g'`\n+    state=$(echo $res | awk -F ' ' '{print $9\" \"$10\" \"$11}' | awk -F \"state=\" '{print $2}' | cut -d ' ' -f 1 | sed 's/\\\"//g')\n     #only 2 state: queued and finished\n     echo $state\n }\n@@ -91,9 +91,9 @@\n     cmd=\"app/rest/builds?locator=id:$build_id\"\n     url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $TEAMCITY_SERVER/$cmd\"\n     #echo $url\n-    res=`eval $url`\n+    res=$(eval $url)\n     #check build exist or not\n-    check1=$(echo $res|grep \"<builds count=\\\"1\\\"\")\n+    check1=$(echo $res | grep \"<builds count=\\\"1\\\"\")\n     if [[ -z $check1 ]]; then\n         return\n     fi\n@@ -102,8 +102,8 @@\n     #if [[ -z $check ]]; then\n     #    return\n     #fi\n-    state=`echo $res |awk -F ' ' '{print $9\" \"$10\" \"$11}'|awk -F \"status=\" '{print $2}'|cut -d ' ' -f 1|sed 's/\\\"//g'`\n-    #only 2 state: \n+    state=$(echo $res | awk -F ' ' '{print $9\" \"$10\" \"$11}' | awk -F \"status=\" '{print $2}' | cut -d ' ' -f 1 | sed 's/\\\"//g')\n+    #only 2 state:\n     echo $state\n }\n \n@@ -111,7 +111,7 @@\n     branch=$1\n     cmd=\"app/rest/builds?locator=branch:$branch\"\n     url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $TEAMCITY_SERVER/$cmd\"\n-    res=`eval $url`\n+    res=$(eval $url)\n }\n \n get_latest_builds() {\n@@ -125,14 +125,12 @@\n     cmd=\"app/rest/buildQueue\"\n     url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $JSON_HEADER $TEAMCITY_SERVER/$cmd\"\n     #echo $url\n-    res=`eval $url`\n+    res=$(eval $url)\n     #a=$(echo $res|grep -oP 'build id=.*'|head -1)\n-    \n-    \n+\n     #a=$res\n     #while [[ \"check\"$a != \"check\" ]]\n     #do\n     #    a=$(echo $a|awk -F 'build id=\"' '{print $2}')\n     #done\n }\n-\n--- teamcity/doris/benchmark/clickbench/common/test.sh.orig\n+++ teamcity/doris/benchmark/clickbench/common/test.sh\n@@ -3,33 +3,29 @@\n repo=doris\n GITHUB_TOKEN=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\n \n-function get_all_change_files(){\n+function get_all_change_files() {\n     pr_id=$1\n     files=()\n \n     page=1\n     per_page=100\n-    while [ 1 -eq 1 ]\n-    do\n-\t#echo \"curl --header 'authorization: Bearer ${GITHUB_TOKEN}' https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files?per_page=$per_page\\&page=$page\"\n-\tres=($(curl --header \"authorization: Bearer ${GITHUB_TOKEN}\" https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files?per_page=$per_page\\&page=$page|jq -r '.[]|select(.status = \"removed\")| .filename'))\n+    while [ 1 -eq 1 ]; do\n+        #echo \"curl --header 'authorization: Bearer ${GITHUB_TOKEN}' https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files?per_page=$per_page\\&page=$page\"\n+        res=($(curl --header \"authorization: Bearer ${GITHUB_TOKEN}\" https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files?per_page=$per_page\\&page=$page | jq -r '.[]|select(.status = \"removed\")| .filename'))\n         res_len=${#res[@]}\n-        if [ ${res_len} -ne 0 ];then\n-\t    let page+=1\n+        if [ ${res_len} -ne 0 ]; then\n+            let page+=1\n             #files=\"${res[@]}\"\"$files\"\n-\t    files=(${res[@]} ${files[*]})\n+            files=(${res[@]} ${files[*]})\n         else\n             break\n         fi\n-\techo \n+        echo\n     done\n     echo \"${files[@]}\"\n }\n \n-\n out=($(get_all_change_files 11154))\n \n-\n-\n echo \"==================\"\n echo \"${out[@]}\"\n--- teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh.orig\n+++ teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh\n@@ -3,9 +3,8 @@\n #res=(`git diff --name-only HEAD~ HEAD`)\n #file_nums=${#res[@]}\n \n-\n usage() {\n-  echo \"\n+    echo \"\n Usage: $0 <options>\n   Optional options:\n \n@@ -14,24 +13,22 @@\n     $0 --is_modify_only_invoved_fe pr_id          if pr changed code only invoved fe doc, fs_brocker, return 0; else return 2\n     $0 --is_modify_only_invoved_doc pr_id         if pr changed code only invoved doc, fs_brocker, return 0; else return 2\n   \"\n-  exit 1\n+    exit 1\n }\n \n-\n function check_all_change_files_is_under_doc() {\n \n     pr_id=$1\n     owner='apache'\n     repo='incubator-doris'\n-    res=($(curl https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files|jq -r '.[]|select(.status != \"removed\")| .filename'))\n+    res=($(curl https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files | jq -r '.[]|select(.status != \"removed\")| .filename'))\n     file_nums=${#res[@]}\n \n     doc_num=0\n-    for file in ${res[@]}\n-    do\n+    for file in ${res[@]}; do\n         #check change file is on docs/fs_brokers or not\n-        file_dir=$(echo $file|cut -d '/' -f 1)\n-        if [[ $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]];then\n+        file_dir=$(echo $file | cut -d '/' -f 1)\n+        if [[ $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]]; then\n             let doc_num+=1\n             continue\n         fi\n@@ -43,7 +40,7 @@\n         #fi\n     done\n \n-    if [[ $doc_num -eq $file_nums ]];then\n+    if [[ $doc_num -eq $file_nums ]]; then\n         echo \"JUST MODIFY DOCUMENT, NO COED CHSNGED, PASSED!\"\n         exit 0\n     else\n@@ -57,21 +54,20 @@\n     pr_id=$1\n     owner='apache'\n     repo='incubator-doris'\n-    res=($(curl https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files|jq -r '.[]|select(.status != \"removed\")| .filename'))\n+    res=($(curl https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files | jq -r '.[]|select(.status != \"removed\")| .filename'))\n     file_nums=${#res[@]}\n \n     doc_num=0\n     echo \"START CHECK CODE IS ONLY RELATED BE OR NOT\"\n-    for file in ${res[@]}\n-    do\n+    for file in ${res[@]}; do\n         #check change file is on be or not\n-        file_dir=$(echo $file|cut -d '/' -f 1)\n-        if [[ $file_dir == \"be\" || $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]];then\n+        file_dir=$(echo $file | cut -d '/' -f 1)\n+        if [[ $file_dir == \"be\" || $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]]; then\n             let doc_num+=1\n             continue\n-\tfi\n+        fi\n     done\n-    if [[ $doc_num -eq $file_nums ]];then\n+    if [[ $doc_num -eq $file_nums ]]; then\n         echo \"JUST MODIFY BE CODE, NO NEED RUN FE UT, PASSED!\"\n         exit 0\n     else\n@@ -85,21 +81,20 @@\n     pr_id=$1\n     owner='apache'\n     repo='incubator-doris'\n-    res=($(curl https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files|jq -r '.[]|select(.status != \"removed\")| .filename'))\n+    res=($(curl https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files | jq -r '.[]|select(.status != \"removed\")| .filename'))\n     file_nums=${#res[@]}\n \n     doc_num=0\n     echo \"START CHECK CODE IS ONLY RELATED FE OR NOT\"\n-    for file in ${res[@]}\n-    do\n+    for file in ${res[@]}; do\n         #check change file is on be or not\n-        file_dir=$(echo $file|cut -d '/' -f 1)\n-        if [[ $file_dir == \"fe\" || $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]];then\n+        file_dir=$(echo $file | cut -d '/' -f 1)\n+        if [[ $file_dir == \"fe\" || $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]]; then\n             let doc_num+=1\n             continue\n         fi\n     done\n-    if [[ $doc_num -eq $file_nums ]];then\n+    if [[ $doc_num -eq $file_nums ]]; then\n         echo \"JUST MODIFY FE CODE, NO NEED RUN BE UT, PASSED!\"\n         exit 0\n     else\n@@ -110,15 +105,28 @@\n \n main() {\n \n-if [ $# > 0 ]; then\n-    case \"$1\" in\n-        --is_modify_only_invoved_be) check_all_change_files_is_under_be $2; shift ;;\n-        --is_modify_only_invoved_fe) check_all_change_files_is_under_fe $2; shift ;;\n-\t--is_modify_only_doc) check_all_change_files_is_under_doc $2; shift ;;\n-        *) echo \"ERROR\"; usage; exit 1 ;;\n-    esac\n+    if [ $# ] >0; then\n+        case \"$1\" in\n+        --is_modify_only_invoved_be)\n+            check_all_change_files_is_under_be $2\n+            shift\n+            ;;\n+        --is_modify_only_invoved_fe)\n+            check_all_change_files_is_under_fe $2\n+            shift\n+            ;;\n+        --is_modify_only_doc)\n+            check_all_change_files_is_under_doc $2\n+            shift\n+            ;;\n+        *)\n+            echo \"ERROR\"\n+            usage\n+            exit 1\n+            ;;\n+        esac\n \n-fi\n+    fi\n }\n \n main $@\n--- teamcity/doris/benchmark/clickbench/prepare.sh.orig\n+++ teamcity/doris/benchmark/clickbench/prepare.sh\n@@ -22,4 +22,3 @@\n fi\n qa_home=\"${pipeline_home}/selectdb-qa\"\n cd \"${qa_home}\" && git stash && git checkout main && git pull && cd -\n-\n----------\n\nYou can reformat the above files to meet shfmt's requirements by typing:\n\n  shfmt  -w filename\n\n\n```\n</details>\n\n\n","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301616729/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301617721","html_url":"https://github.com/apache/doris/pull/13871#issuecomment-1301617721","issue_url":"https://api.github.com/repos/apache/doris/issues/13871","id":1301617721,"node_id":"IC_kwDOBfSlxs5NlRw5","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-03T04:07:53Z","updated_at":"2022-11-03T04:07:53Z","author_association":"CONTRIBUTOR","body":"PR approved by at least one committer and no changes requested.","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301617721/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301617742","html_url":"https://github.com/apache/doris/pull/13871#issuecomment-1301617742","issue_url":"https://api.github.com/repos/apache/doris/issues/13871","id":1301617742,"node_id":"IC_kwDOBfSlxs5NlRxO","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-03T04:07:55Z","updated_at":"2022-11-03T04:07:55Z","author_association":"CONTRIBUTOR","body":"PR approved by anyone and no changes requested.","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301617742/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301619387","html_url":"https://github.com/apache/doris/pull/13259#issuecomment-1301619387","issue_url":"https://api.github.com/repos/apache/doris/issues/13259","id":1301619387,"node_id":"IC_kwDOBfSlxs5NlSK7","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-03T04:10:57Z","updated_at":"2022-11-03T04:10:57Z","author_association":"CONTRIBUTOR","body":"#### `sh-checker report`\n\nTo get the full details, please check in the [job](\"https://github.com/apache/doris/actions/runs/3382940915\") output.\n\n<details>\n<summary>shellcheck errors</summary>\n\n```\n\n'shellcheck ' returned error 1 finding the following syntactical issues:\n\n----------\n\nIn teamcity/doris/benchmark/clickbench/common/check_and_kill_deleted_proc.sh line 11:\ncheck=$(lsof -i:$port|awk '{print $2}'|wc -l)\n                ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \ncheck=$(lsof -i:\"$port\"|awk '{print $2}'|wc -l)\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_and_kill_deleted_proc.sh line 12:\nif [ \"check$check\" != \"check0\" ];then\n   ^---------------------------^ SC2292 (style): Prefer [[ ]] over [ ] for tests in Bash/Ksh.\n           ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \nif [[ \"check${check}\" != \"check0\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_and_kill_deleted_proc.sh line 13:\n    if [ \"check\"${case_level} == \"check\" ];then\n       ^-- SC2292 (style): Prefer [[ ]] over [ ] for tests in Bash/Ksh.\n                ^-----------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n    if [[ \"check\"\"${case_level}\" == \"check\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_and_kill_deleted_proc.sh line 14:\n        check_res=$(pwdx `lsof -i:$port|grep -v PID|awk '{print $2}'`|grep $env_name|grep deleted||wc -l)\n                         ^-- SC2046 (warning): Quote this to prevent word splitting.\n                         ^-- SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n                                  ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                  ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                           ^-------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                                                           ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        check_res=$(pwdx $(lsof -i:\"$port\"|grep -v PID|awk '{print $2}')|grep $env_name|grep deleted||wc -l)\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_and_kill_deleted_proc.sh line 16:\n        check_res=$(pwdx `lsof -i:$port|grep -v PID|awk '{print $2}'`|grep $env_name|grep $case_level|grep deleted||wc -l)\n                         ^-- SC2046 (warning): Quote this to prevent word splitting.\n                         ^-- SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n                                  ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                  ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                           ^-------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                                                           ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                                          ^---------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                                                                          ^---------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        check_res=$(pwdx $(lsof -i:\"$port\"|grep -v PID|awk '{print $2}')|grep $env_name|grep $case_level|grep deleted||wc -l)\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_and_kill_deleted_proc.sh line 18:\n    if [ \"check$check_res\" != \"check0\" ];then\n       ^-- SC2292 (style): Prefer [[ ]] over [ ] for tests in Bash/Ksh.\n               ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    if [[ \"check${check_res}\" != \"check0\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_and_kill_deleted_proc.sh line 19:\n        be_pid=(`lsof -i:$port|grep -v PID|awk '{print $2}'`)\n                ^-- SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).\n                ^-- SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n                         ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                         ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        be_pid=($(lsof -i:\"$port\"|grep -v PID|awk '{print $2}'))\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_and_kill_deleted_proc.sh line 20:\n        echo \"Detected residual processes: ${be_pid}\"\n                                           ^-------^ SC2128 (warning): Expanding an array without an index only gives the first element.\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_and_kill_deleted_proc.sh line 21:\n        echo \"kill residual processes: kill -9 ${be_pid}\"\n                                               ^-------^ SC2128 (warning): Expanding an array without an index only gives the first element.\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_and_kill_deleted_proc.sh line 22:\n        kill -9 $be_pid\n                ^-----^ SC2128 (warning): Expanding an array without an index only gives the first element.\n                ^-----^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                ^-----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        kill -9 \"$be_pid\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 29:\n    while [ 1 -eq 1 ]\n          ^---------^ SC2292 (style): Prefer [[ ]] over [ ] for tests in Bash/Ksh.\n              ^-^ SC2050 (warning): This expression is constant. Did you forget the $ on a variable?\n\nDid you mean: \n    while [[ 1 -eq 1 ]]\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 32:\n        res=($(curl --header \"authorization: Bearer ${GITHUB_TOKEN}\" https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files?per_page=$per_page\\&page=$page|jq -r '.[]|select(.status = \"removed\")| .filename'))\n             ^-- SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).\n                                                                                                  ^------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                                                                           ^-----^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                                                                                         ^------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                                                                                                                                 ^-------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                                                                                                                 ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                                                                                                                 ^---^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                                                                                                                                 ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        res=($(curl --header \"authorization: Bearer ${GITHUB_TOKEN}\" https://api.github.com/repos/\"${owner}\"/\"${repo}\"/pulls/\"${pr_id}\"/files?per_page=\"$per_page\"\\&page=$page|jq -r '.[]|select(.status = \"removed\")| .filename'))\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 35:\n        if [ ${res_len} -ne 0 ];then\n           ^------------------^ SC2292 (style): Prefer [[ ]] over [ ] for tests in Bash/Ksh.\n             ^--------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n        if [[ \"${res_len}\" -ne 0 ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 36:\n            let page+=1\n            ^---------^ SC2219 (style): Instead of 'let expr', prefer (( expr )) .\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 38:\n            files=(${res[@]} ${files[*]})\n                   ^-------^ SC2206 (warning): Quote to prevent word splitting/globbing, or split robustly with mapfile or read -a.\n                             ^---------^ SC2206 (warning): Quote to prevent word splitting/globbing, or split robustly with mapfile or read -a.\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 54:\n    res=($(get_all_change_files $pr_id))\n         ^----------------------------^ SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).\n                                ^----^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    res=($(get_all_change_files \"$pr_id\"))\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 58:\n    for file in ${res[@]}\n                ^-------^ SC2068 (error): Double quote array expansions to avoid re-splitting elements.\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 61:\n\tfile_dir=$(echo $file|cut -d '/' -f 1)\n                        ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                        ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n\tfile_dir=$(echo \"$file\"|cut -d '/' -f 1)\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 62:\n        file_type=$(echo $file|rev|cut -d / -f 1|cut -d '.' -f 1|rev)\n                         ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                         ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        file_type=$(echo \"$file\"|rev|cut -d / -f 1|cut -d '.' -f 1|rev)\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 64:\n\tif [[ $file_type == \"cpp\" || $file_type == \"c\" || $file_type == \"java\" || $file_type == \"py\" || $file_type == \"h\" || $file_type == 'js' ]];then\n              ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                     ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                          ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                                  ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                                                        ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                                                                             ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n\tif [[ ${file_type} == \"cpp\" || ${file_type} == \"c\" || ${file_type} == \"java\" || ${file_type} == \"py\" || ${file_type} == \"h\" || ${file_type} == 'js' ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 68:\n\tif [[ \"check$file_dir\" == \"check${module}\" ]];then\n                    ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n\tif [[ \"check${file_dir}\" == \"check${module}\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 69:\n            let module_file+=1\n            ^----------------^ SC2219 (style): Instead of 'let expr', prefer (( expr )) .\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 89:\n    res=($(get_all_change_files $pr_id))\n         ^----------------------------^ SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).\n                                ^----^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    res=($(get_all_change_files \"$pr_id\"))\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 98:\n    for file in ${res[@]}\n                ^-------^ SC2068 (error): Double quote array expansions to avoid re-splitting elements.\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 101:\n\techo \"$file\"\n              ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n\techo \"${file}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 102:\n        file_dir=$(echo $file|cut -d '/' -f 1)\n                        ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                        ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        file_dir=$(echo \"$file\"|cut -d '/' -f 1)\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 103:\n\tif [[ $file_dir == \"docs\" ]];then\n              ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n\tif [[ ${file_dir} == \"docs\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 104:\n            let doc_num+=1\n            ^------------^ SC2219 (style): Instead of 'let expr', prefer (( expr )) .\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 106:\n        if [[ \"$file\" =~ \"docs/zh-CN/docs/sql-manual/\" || \"$file\" =~ \"docs/en/docs/sql-manual/\" ]];then\n               ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                           ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        if [[ \"${file}\" =~ \"docs/zh-CN/docs/sql-manual/\" || \"${file}\" =~ \"docs/en/docs/sql-manual/\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 107:\n            let doc_sql_manual_num+=1\n            ^-----------------------^ SC2219 (style): Instead of 'let expr', prefer (( expr )) .\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 120:\n    echo \"doc_num: $doc_num\"\n                   ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    echo \"doc_num: ${doc_num}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 121:\n    echo \"file_nums: $file_nums\"\n                     ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    echo \"file_nums: ${file_nums}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 122:\n    echo \"doc_sql_manual_num: $doc_sql_manual_num\"\n                              ^-----------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    echo \"doc_sql_manual_num: ${doc_sql_manual_num}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 123:\n    if [[ $doc_num -eq $file_nums && $doc_sql_manual_num -eq 0 ]];then\n          ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                       ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                     ^-----------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    if [[ ${doc_num} -eq ${file_nums} && ${doc_sql_manual_num} -eq 0 ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 138:\n    res=($(get_all_change_files $pr_id))\n         ^----------------------------^ SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).\n                                ^----^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    res=($(get_all_change_files \"$pr_id\"))\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 146:\n    for file in ${res[@]}\n                ^-------^ SC2068 (error): Double quote array expansions to avoid re-splitting elements.\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 148:\n        echo \"$file\"\n              ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        echo \"${file}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 150:\n        file_dir=$(echo $file|cut -d '/' -f 1)\n                        ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                        ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        file_dir=$(echo \"$file\"|cut -d '/' -f 1)\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 151:\n        if [[ $file_dir == \"be\" || $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]];then\n              ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                   ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                          ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        if [[ ${file_dir} == \"be\" || ${file_dir} == \"docs\" || ${file_dir} == \"fs_brokers\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 152:\n            let doc_num+=1\n            ^------------^ SC2219 (style): Instead of 'let expr', prefer (( expr )) .\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 156:\n    if [[ $doc_num -eq $file_nums ]];then\n          ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                       ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    if [[ ${doc_num} -eq ${file_nums} ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 171:\n    res=($(get_all_change_files $pr_id))\n         ^----------------------------^ SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).\n                                ^----^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    res=($(get_all_change_files \"$pr_id\"))\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 179:\n    for file in ${res[@]}\n                ^-------^ SC2068 (error): Double quote array expansions to avoid re-splitting elements.\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 181:\n        echo \"$file\"\n              ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        echo \"${file}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 183:\n        file_dir=$(echo $file|cut -d '/' -f 1)\n                        ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                        ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        file_dir=$(echo \"$file\"|cut -d '/' -f 1)\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 184:\n        if [[ $file_dir == \"fe\" || $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]];then\n              ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                   ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                          ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        if [[ ${file_dir} == \"fe\" || ${file_dir} == \"docs\" || ${file_dir} == \"fs_brokers\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 185:\n            let doc_num+=1\n            ^------------^ SC2219 (style): Instead of 'let expr', prefer (( expr )) .\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 189:\n    if [[ $doc_num -eq $file_nums ]];then\n          ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                       ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    if [[ ${doc_num} -eq ${file_nums} ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 200:\nif [ $# > 0 ]; then\n   ^--------^ SC2292 (style): Prefer [[ ]] over [ ] for tests in Bash/Ksh.\n        ^-- SC2071 (error): > is for string comparisons. Use -gt instead.\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 203:\n\t    check_removed_change_file $2 \"be\"\n                                      ^-- SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n\t    check_removed_change_file \"$2\" \"be\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 205:\n\t    check_all_change_files_is_under_be $2\n                                               ^-- SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n\t    check_all_change_files_is_under_be \"$2\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 207:\n\t    echo ${check_1}\n                 ^--------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n\nDid you mean: \n\t    echo \"${check_1}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 208:\n\t    echo ${check_2}\n                 ^--------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n\nDid you mean: \n\t    echo \"${check_2}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 209:\n\t    res=`expr $check_1 \\* $check_2`\n            ^-^ SC2178 (warning): Variable was used as an array but is now assigned a string.\n                ^-------------------------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n                 ^--^ SC2003 (style): expr is antiquated. Consider rewriting this using $((..)), ${} or [[ ]].\n                      ^------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                      ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                  ^------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                  ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n\t    res=$(expr \"$check_1\" \\* $check_2)\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 210:\n\t    exit $res\n                 ^--^ SC2128 (warning): Expanding an array without an index only gives the first element.\n                 ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                 ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n\t    exit \"$res\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 213:\n\t    check_removed_change_file $2 \"fe\"\n                                      ^-- SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n\t    check_removed_change_file \"$2\" \"fe\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 215:\n\t    check_all_change_files_is_under_fe $2\n                                               ^-- SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n\t    check_all_change_files_is_under_fe \"$2\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 217:\n            res=`expr $check_1 \\* $check_2`\n            ^-^ SC2178 (warning): Variable was used as an array but is now assigned a string.\n                ^-------------------------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n                 ^--^ SC2003 (style): expr is antiquated. Consider rewriting this using $((..)), ${} or [[ ]].\n                      ^------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                      ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                  ^------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                  ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n            res=$(expr \"$check_1\" \\* $check_2)\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 218:\n\t    echo ${check_1}\n                 ^--------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n\nDid you mean: \n\t    echo \"${check_1}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 219:\n\t    echo ${check_2}\n                 ^--------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n\nDid you mean: \n\t    echo \"${check_2}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 220:\n\t    exit $res\n                 ^--^ SC2128 (warning): Expanding an array without an index only gives the first element.\n                 ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                 ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n\t    exit \"$res\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 223:\n\t    check_removed_change_file $2 \"docs\"\n                                      ^-- SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n\t    check_removed_change_file \"$2\" \"docs\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 225:\n\t    check_all_change_files_is_under_doc $2\n                                                ^-- SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n\t    check_all_change_files_is_under_doc \"$2\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 227:\n            res=`expr $check_1 + $check_2`\n            ^-^ SC2178 (warning): Variable was used as an array but is now assigned a string.\n                ^------------------------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n                 ^--^ SC2003 (style): expr is antiquated. Consider rewriting this using $((..)), ${} or [[ ]].\n                      ^------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                      ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                 ^------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                 ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n            res=$(expr \"$check_1\" + $check_2)\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 228:\n\t    echo ${check_1}\n                 ^--------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n\nDid you mean: \n\t    echo \"${check_1}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 229:\n            echo ${check_2}\n                 ^--------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n\nDid you mean: \n            echo \"${check_2}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 230:\n\t    exit $res\n                 ^--^ SC2128 (warning): Expanding an array without an index only gives the first element.\n                 ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                 ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n\t    exit \"$res\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 238:\nmain $@\n     ^-- SC2068 (error): Double quote array expansions to avoid re-splitting elements.\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 6:\necho `date \"+%Y-%m-%d %H:%M:%S\"` \"start to clear oudate file!\"\n     ^-------------------------^ SC2046 (warning): Quote this to prevent word splitting.\n     ^-------------------------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n\nDid you mean: \necho $(date \"+%Y-%m-%d %H:%M:%S\") \"start to clear oudate file!\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 7:\ncd /home/work/teamcity/TeamCity/piplineWork/Compile/\n^-- SC2164 (warning): Use 'cd ... || exit' or 'cd ... || return' in case cd fails.\n\nDid you mean: \ncd /home/work/teamcity/TeamCity/piplineWork/Compile/ || exit\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 8:\nfind /home/work/teamcity/TeamCity/piplineWork/Compile/ -maxdepth 1 -mindepth 1 -mmin +${existsTime} -type d -name \"*_*\" -exec rm -rf {} \\;\n                                                                                      ^-----------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n\nDid you mean: \nfind /home/work/teamcity/TeamCity/piplineWork/Compile/ -maxdepth 1 -mindepth 1 -mmin +\"${existsTime}\" -type d -name \"*_*\" -exec rm -rf {} \\;\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 9:\ncd -\n^--^ SC2164 (warning): Use 'cd ... || exit' or 'cd ... || return' in case cd fails.\n^--^ SC2103 (info): Use a ( subshell ) to avoid having to cd back.\n\nDid you mean: \ncd - || exit\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 10:\ncd /home/work/teamcity/TeamCity/piplineWork/feUt/\n^-- SC2164 (warning): Use 'cd ... || exit' or 'cd ... || return' in case cd fails.\n\nDid you mean: \ncd /home/work/teamcity/TeamCity/piplineWork/feUt/ || exit\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 11:\nfind /home/work/teamcity/TeamCity/piplineWork/feUt/ -maxdepth 1 -mindepth 1 -mmin +${existsTime} -type d -name \"*_*\" -exec rm -rf {} \\;\n                                                                                   ^-----------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n\nDid you mean: \nfind /home/work/teamcity/TeamCity/piplineWork/feUt/ -maxdepth 1 -mindepth 1 -mmin +\"${existsTime}\" -type d -name \"*_*\" -exec rm -rf {} \\;\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 12:\ncd -\n^--^ SC2164 (warning): Use 'cd ... || exit' or 'cd ... || return' in case cd fails.\n\nDid you mean: \ncd - || exit\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 13:\ncd /home/work/teamcity/TeamCity/piplineWork/beUt/\n^-- SC2164 (warning): Use 'cd ... || exit' or 'cd ... || return' in case cd fails.\n\nDid you mean: \ncd /home/work/teamcity/TeamCity/piplineWork/beUt/ || exit\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 14:\nfind /home/work/teamcity/TeamCity/piplineWork/beUt/ -maxdepth 1 -mindepth 1 -mmin +${existsTime} -type d -name \"*_*\" -exec rm -rf {} \\;\n                                                                                   ^-----------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n\nDid you mean: \nfind /home/work/teamcity/TeamCity/piplineWork/beUt/ -maxdepth 1 -mindepth 1 -mmin +\"${existsTime}\" -type d -name \"*_*\" -exec rm -rf {} \\;\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 15:\ncd -\n^--^ SC2164 (warning): Use 'cd ... || exit' or 'cd ... || return' in case cd fails.\n\nDid you mean: \ncd - || exit\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 16:\ncd /mnt/ssd01/teamcity/TeamCity/piplineWork/Compile/\n^-- SC2164 (warning): Use 'cd ... || exit' or 'cd ... || return' in case cd fails.\n\nDid you mean: \ncd /mnt/ssd01/teamcity/TeamCity/piplineWork/Compile/ || exit\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 17:\nfind /mnt/ssd01/teamcity/TeamCity/piplineWork/Compile/ -maxdepth 1 -mindepth 1 -mmin +${existsTime} -type d -name \"*_*\" -exec rm -rf {} \\;\n                                                                                      ^-----------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n\nDid you mean: \nfind /mnt/ssd01/teamcity/TeamCity/piplineWork/Compile/ -maxdepth 1 -mindepth 1 -mmin +\"${existsTime}\" -type d -name \"*_*\" -exec rm -rf {} \\;\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 18:\ncd -\n^--^ SC2164 (warning): Use 'cd ... || exit' or 'cd ... || return' in case cd fails.\n\nDid you mean: \ncd - || exit\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 19:\ncd /mnt/ssd01/teamcity/TeamCity/piplineWork/beUt/\n^-- SC2164 (warning): Use 'cd ... || exit' or 'cd ... || return' in case cd fails.\n\nDid you mean: \ncd /mnt/ssd01/teamcity/TeamCity/piplineWork/beUt/ || exit\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 20:\nfind /mnt/ssd01/teamcity/TeamCity/piplineWork/beUt/ -maxdepth 1 -mindepth 1 -mmin +${existsTime} -type d -name \"*_*\" -exec rm -rf {} \\;\n                                                                                   ^-----------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n\nDid you mean: \nfind /mnt/ssd01/teamcity/TeamCity/piplineWork/beUt/ -maxdepth 1 -mindepth 1 -mmin +\"${existsTime}\" -type d -name \"*_*\" -exec rm -rf {} \\;\n\n\nIn teamcity/doris/benchmark/clickbench/common/docker_compile.sh line 3:\nid=$(echo $RANDOM)\n   ^-------------^ SC2116 (style): Useless echo? Instead of 'cmd $(echo foo)', just use 'cmd foo'.\n          ^-----^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n          ^-----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \nid=$(echo \"$RANDOM\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/docker_compile.sh line 5:\ndocker run -i --rm --name doris-compile-$id -e TZ=Asia/Shanghai -v /etc/localtime:/etc/localtime:ro -v /home/work/.m2:/root/.m2 -v /home/work/.npm:/root/.npm -v $work_path:/root/doris apache/incubator-doris:build-env-ldb-toolchain-latest /bin/bash -c \"cd /root/doris && sh builds.sh\"\n                                        ^-^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                        ^-^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                                                                                                                 ^--------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                                                                                                                                                 ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \ndocker run -i --rm --name doris-compile-\"$id\" -e TZ=Asia/Shanghai -v /etc/localtime:/etc/localtime:ro -v /home/work/.m2:/root/.m2 -v /home/work/.npm:/root/.npm -v $work_path:/root/doris apache/incubator-doris:build-env-ldb-toolchain-latest /bin/bash -c \"cd /root/doris && sh builds.sh\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/docker_trigger_api.sh line 40:\n    docker_name=\"doris-compile-\"$(echo $RANDOM)\n                               ^-- SC1078 (warning): Did you forget to close this double quoted string?\n\n\nIn teamcity/doris/benchmark/clickbench/common/docker_trigger_api.sh line 42:\n    cmd=\"docker run -i --rm --name doris-compile-$id -e TZ=Asia/Shanghai -v /etc/localtime:/etc/localtime:ro -v /home/work/.m2:/root/.m2 -v /home/work/.npm:/root/.npm -v %system.teamcity.build.workingDir%:/root/doris apache/incubator-doris:build-env-ldb-toolchain-latest /bin/bash -c \"cd /root/doris && sh builds.sh\"\n        ^-- SC1079 (info): This is actually an end quote, but due to next char it looks suspect.\n\n\nIn teamcity/doris/benchmark/clickbench/common/docker_trigger_api.sh line 43:\n\"\n^-- SC1073 (error): Couldn't parse this double quoted string. Fix to allow more checks.\n^-- SC1009 (info): The mentioned syntax error was in this simple command.\n\n\nIn teamcity/doris/benchmark/clickbench/common/docker_trigger_api.sh line 45:\n\n^-- SC1072 (error): Expected end of double quoted string. Fix any mentioned problems and try again.\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_api.sh line 5:\n<<'COMMENT'\n^---------^ SC2188 (warning): This redirection doesn't have a command. Move to its command (or use 'true' as no-op).\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_api.sh line 145:\nif [ $# > 0 ]; then\n   ^--------^ SC2292 (style): Prefer [[ ]] over [ ] for tests in Bash/Ksh.\n        ^-- SC2071 (error): > is for string comparisons. Use -gt instead.\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_api.sh line 147:\n        --cancel_running_build) build_id=$2; cancel_running_build $build_id; shift ;;\n                                                                  ^-------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                                                  ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        --cancel_running_build) build_id=$2; cancel_running_build \"$build_id\"; shift ;;\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_api.sh line 148:\n        --cancel_pending_build) build_id=$2; cancel_pending_build $build_id; shift ;;\n                                                                  ^-------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                                                  ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        --cancel_pending_build) build_id=$2; cancel_pending_build \"$build_id\"; shift ;;\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_api.sh line 149:\n        --show_build_state) build_id=$2; res=$(show_build_state $build_id); echo $res; shift ;;\n                                                                ^-------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                                                ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                                 ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                                                                 ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        --show_build_state) build_id=$2; res=$(show_build_state \"$build_id\"); echo $res; shift ;;\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_api.sh line 150:\n        --show_build_status) build_id=$2; res=$(show_build_status $build_id); echo $res; shift ;;\n                                                                  ^-------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                                                  ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                                   ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                                                                   ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        --show_build_status) build_id=$2; res=$(show_build_status \"$build_id\"); echo $res; shift ;;\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_api.sh line 153:\n        --get_all_builds_of_pr_id) get_all_builds $2; shift ;;\n                                                  ^-- SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n        --get_all_builds_of_pr_id) get_all_builds \"$2\"; shift ;;\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_api.sh line 161:\nmain $@\n     ^-- SC2068 (error): Double quote array expansions to avoid re-splitting elements.\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 4:\nzcp_TOKEN=\"eyJ0eXAiOiAiVENWMiJ9.bW1DcHJpRWNCSktnREhLaHd5Y1lndmpycnJ3.NmEwM2E3YTEtMTVmYy00NGU0LWI1OTAtMzU3MzljODE0Njdk\"\n^-------^ SC2034 (warning): zcp_TOKEN appears unused. Verify use (or export if used externally).\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 7:\nzcp_TEAMCITY_SERVER=\"http://43.129.232.36:8111\"\n^-----------------^ SC2034 (warning): zcp_TEAMCITY_SERVER appears unused. Verify use (or export if used externally).\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 40:\n    state=$(show_build_state $build_id)\n                             ^-------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                             ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    state=$(show_build_state \"$build_id\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 41:\n    if [[ $state == \"running\" ]];then\n          ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    if [[ ${state} == \"running\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 43:\n        cmd=\"/app/rest/builds/id:$build_id\"\n                                 ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        cmd=\"/app/rest/builds/id:${build_id}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 44:\n        cmd=$cmd\" -X POST -H \\'Content-Type: application/json\\' -d \\'{ \\\"buildCancelRequest\\\": {       \\\"comment\\\": \\\"Stop obsolete running builds.\\\",      \\\"readdIntoQueue\\\": \\\"false\\\"    }  }'\"\n            ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        cmd=${cmd}\" -X POST -H \\'Content-Type: application/json\\' -d \\'{ \\\"buildCancelRequest\\\": {       \\\"comment\\\": \\\"Stop obsolete running builds.\\\",      \\\"readdIntoQueue\\\": \\\"false\\\"    }  }'\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 45:\n        url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $TEAMCITY_SERVER/$cmd\"\n                     ^-----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                               ^------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                              ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                       ^--------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                        ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        url=\"curl -s ${HEADER} \\\"${AUTHORIZATION} ${TOKEN}\\\" ${TEAMCITY_SERVER}/${cmd}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 46:\n        res=$(eval $eval)\n                   ^---^ SC2154 (warning): eval is referenced but not assigned (for output from commands, use \"$(eval ...)\" ).\n                   ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                   ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        res=$(eval \"$eval\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 47:\n        check=$(echo $res |grep status=\"UNKNOWN\")\n                     ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                     ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        check=$(echo \"$res\" |grep status=\"UNKNOWN\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 48:\n        if [[ -z $check ]];then\n                 ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        if [[ -z ${check} ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 57:\n    state=$(show_build_state $build_id)\n                             ^-------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                             ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    state=$(show_build_state \"$build_id\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 58:\n    if [[ $state == \"queued\" ]];then\n          ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    if [[ ${state} == \"queued\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 59:\n        cmd=\"app/rest/buildQueue/id:$build_id\"\n                                    ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        cmd=\"app/rest/buildQueue/id:${build_id}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 60:\n        cmd=$cmd\" -X POST -H \\'Content-Type: application/json\\' -d \\'{ \\\"buildCancelRequest\\\": {       \\\"comment\\\": \\\"Cancel obsolete queue build.\\\",      \\\"readdIntoQueue\\\": \\\"false\\\"    }  }'\"\n            ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        cmd=${cmd}\" -X POST -H \\'Content-Type: application/json\\' -d \\'{ \\\"buildCancelRequest\\\": {       \\\"comment\\\": \\\"Cancel obsolete queue build.\\\",      \\\"readdIntoQueue\\\": \\\"false\\\"    }  }'\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 61:\n        url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $TEAMCITY_SERVER/$cmd\"\n                     ^-----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                               ^------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                              ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                       ^--------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                        ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        url=\"curl -s ${HEADER} \\\"${AUTHORIZATION} ${TOKEN}\\\" ${TEAMCITY_SERVER}/${cmd}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 63:\n        res=$(eval $eval)\n                   ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                   ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        res=$(eval \"$eval\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 64:\n        check=$(echo $res |grep status=\"UNKNOWN\")\n                     ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                     ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        check=$(echo \"$res\" |grep status=\"UNKNOWN\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 65:\n        if [[ -z $check ]];then\n                 ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        if [[ -z ${check} ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 73:\n    cmd=\"app/rest/builds?locator=id:$build_id\"\n                                    ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    cmd=\"app/rest/builds?locator=id:${build_id}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 74:\n    url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $TEAMCITY_SERVER/$cmd\"\n                 ^-----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                           ^------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                          ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                   ^--------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                    ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    url=\"curl -s ${HEADER} \\\"${AUTHORIZATION} ${TOKEN}\\\" ${TEAMCITY_SERVER}/${cmd}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 76:\n    res=`eval $url`\n        ^---------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n              ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n              ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    res=$(eval \"$url\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 79:\n    check=$(echo $res|grep \"<builds count=\\\"1\\\"\")\n                 ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                 ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    check=$(echo \"$res\"|grep \"<builds count=\\\"1\\\"\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 80:\n    if [[ -z $check ]]; then\n             ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    if [[ -z ${check} ]]; then\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 84:\n    state=`echo $res |awk -F ' ' '{print $9\" \"$10\" \"$11}'|awk -F \"state=\" '{print $2}'|cut -d ' ' -f 1|sed 's/\\\"//g'`\n          ^-- SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n                ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    state=$(echo \"$res\" |awk -F ' ' '{print $9\" \"$10\" \"$11}'|awk -F \"state=\" '{print $2}'|cut -d ' ' -f 1|sed 's/\\\"//g')\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 86:\n    echo $state\n         ^----^ SC2086 (info): Double quote to prevent globbing and word splitting.\n         ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    echo \"$state\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 91:\n    cmd=\"app/rest/builds?locator=id:$build_id\"\n                                    ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    cmd=\"app/rest/builds?locator=id:${build_id}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 92:\n    url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $TEAMCITY_SERVER/$cmd\"\n                 ^-----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                           ^------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                          ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                   ^--------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                    ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    url=\"curl -s ${HEADER} \\\"${AUTHORIZATION} ${TOKEN}\\\" ${TEAMCITY_SERVER}/${cmd}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 94:\n    res=`eval $url`\n        ^---------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n              ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n              ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    res=$(eval \"$url\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 96:\n    check1=$(echo $res|grep \"<builds count=\\\"1\\\"\")\n                  ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                  ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    check1=$(echo \"$res\"|grep \"<builds count=\\\"1\\\"\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 97:\n    if [[ -z $check1 ]]; then\n             ^-----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    if [[ -z ${check1} ]]; then\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 105:\n    state=`echo $res |awk -F ' ' '{print $9\" \"$10\" \"$11}'|awk -F \"status=\" '{print $2}'|cut -d ' ' -f 1|sed 's/\\\"//g'`\n          ^-- SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n                ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    state=$(echo \"$res\" |awk -F ' ' '{print $9\" \"$10\" \"$11}'|awk -F \"status=\" '{print $2}'|cut -d ' ' -f 1|sed 's/\\\"//g')\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 107:\n    echo $state\n         ^----^ SC2086 (info): Double quote to prevent globbing and word splitting.\n         ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    echo \"$state\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 112:\n    cmd=\"app/rest/builds?locator=branch:$branch\"\n                                        ^-----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    cmd=\"app/rest/builds?locator=branch:${branch}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 113:\n    url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $TEAMCITY_SERVER/$cmd\"\n                 ^-----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                           ^------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                          ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                   ^--------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                    ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    url=\"curl -s ${HEADER} \\\"${AUTHORIZATION} ${TOKEN}\\\" ${TEAMCITY_SERVER}/${cmd}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 114:\n    res=`eval $url`\n        ^---------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n              ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n              ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    res=$(eval \"$url\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 119:\n    url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $TEAMCITY_SERVER/$cmd\"\n                 ^-----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                        ^-^ SC2089 (warning): Quotes/backslashes will be treated literally. Use an array.\n                           ^------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                          ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                   ^--------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                    ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    url=\"curl -s ${HEADER} \\\"${AUTHORIZATION} ${TOKEN}\\\" ${TEAMCITY_SERVER}/${cmd}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 121:\n    res=eval $url\n    ^-----------^ SC2209 (warning): Use var=$(command) to assign output (or quote to assign string).\n             ^--^ SC2090 (warning): Quotes/backslashes in this variable will not be respected.\n             ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    res=eval ${url}\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 126:\n    url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $JSON_HEADER $TEAMCITY_SERVER/$cmd\"\n                 ^-----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                           ^------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                          ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                   ^----------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                ^--------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                                 ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    url=\"curl -s ${HEADER} \\\"${AUTHORIZATION} ${TOKEN}\\\" ${JSON_HEADER} ${TEAMCITY_SERVER}/${cmd}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 128:\n    res=`eval $url`\n        ^---------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n              ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n              ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    res=$(eval \"$url\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/test.sh line 12:\n    while [ 1 -eq 1 ]\n          ^---------^ SC2292 (style): Prefer [[ ]] over [ ] for tests in Bash/Ksh.\n              ^-^ SC2050 (warning): This expression is constant. Did you forget the $ on a variable?\n\nDid you mean: \n    while [[ 1 -eq 1 ]]\n\n\nIn teamcity/doris/benchmark/clickbench/common/test.sh line 15:\n\tres=($(curl --header \"authorization: Bearer ${GITHUB_TOKEN}\" https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files?per_page=$per_page\\&page=$page|jq -r '.[]|select(.status = \"removed\")| .filename'))\n             ^-- SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).\n                                                                                                  ^------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                                                                           ^-----^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                                                                                         ^------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                                                                                                                                 ^-------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                                                                                                                 ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                                                                                                                 ^---^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                                                                                                                                 ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n\tres=($(curl --header \"authorization: Bearer ${GITHUB_TOKEN}\" https://api.github.com/repos/\"${owner}\"/\"${repo}\"/pulls/\"${pr_id}\"/files?per_page=\"$per_page\"\\&page=$page|jq -r '.[]|select(.status = \"removed\")| .filename'))\n\n\nIn teamcity/doris/benchmark/clickbench/common/test.sh line 17:\n        if [ ${res_len} -ne 0 ];then\n           ^------------------^ SC2292 (style): Prefer [[ ]] over [ ] for tests in Bash/Ksh.\n             ^--------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n        if [[ \"${res_len}\" -ne 0 ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/test.sh line 18:\n\t    let page+=1\n            ^---------^ SC2219 (style): Instead of 'let expr', prefer (( expr )) .\n\n\nIn teamcity/doris/benchmark/clickbench/common/test.sh line 20:\n\t    files=(${res[@]} ${files[*]})\n                   ^-------^ SC2206 (warning): Quote to prevent word splitting/globbing, or split robustly with mapfile or read -a.\n                             ^---------^ SC2206 (warning): Quote to prevent word splitting/globbing, or split robustly with mapfile or read -a.\n\n\nIn teamcity/doris/benchmark/clickbench/common/test.sh line 30:\nout=($(get_all_change_files 11154))\n     ^---------------------------^ SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check.sh line 3:\n<<'COMMENT'\n^---------^ SC2188 (warning): This redirection doesn't have a command. Move to its command (or use 'true' as no-op).\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 26:\n    res=($(curl https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files|jq -r '.[]|select(.status != \"removed\")| .filename'))\n         ^-- SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).\n                                             ^------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                      ^-----^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                                    ^------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n    res=($(curl https://api.github.com/repos/\"${owner}\"/\"${repo}\"/pulls/\"${pr_id}\"/files|jq -r '.[]|select(.status != \"removed\")| .filename'))\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 30:\n    for file in ${res[@]}\n                ^-------^ SC2068 (error): Double quote array expansions to avoid re-splitting elements.\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 33:\n        file_dir=$(echo $file|cut -d '/' -f 1)\n                        ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                        ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        file_dir=$(echo \"$file\"|cut -d '/' -f 1)\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 34:\n        if [[ $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]];then\n              ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                     ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        if [[ ${file_dir} == \"docs\" || ${file_dir} == \"fs_brokers\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 35:\n            let doc_num+=1\n            ^------------^ SC2219 (style): Instead of 'let expr', prefer (( expr )) .\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 46:\n    if [[ $doc_num -eq $file_nums ]];then\n          ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                       ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    if [[ ${doc_num} -eq ${file_nums} ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 60:\n    res=($(curl https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files|jq -r '.[]|select(.status != \"removed\")| .filename'))\n         ^-- SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).\n                                             ^------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                      ^-----^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                                    ^------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n    res=($(curl https://api.github.com/repos/\"${owner}\"/\"${repo}\"/pulls/\"${pr_id}\"/files|jq -r '.[]|select(.status != \"removed\")| .filename'))\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 65:\n    for file in ${res[@]}\n                ^-------^ SC2068 (error): Double quote array expansions to avoid re-splitting elements.\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 68:\n        file_dir=$(echo $file|cut -d '/' -f 1)\n                        ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                        ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        file_dir=$(echo \"$file\"|cut -d '/' -f 1)\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 69:\n        if [[ $file_dir == \"be\" || $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]];then\n              ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                   ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                          ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        if [[ ${file_dir} == \"be\" || ${file_dir} == \"docs\" || ${file_dir} == \"fs_brokers\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 70:\n            let doc_num+=1\n            ^------------^ SC2219 (style): Instead of 'let expr', prefer (( expr )) .\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 74:\n    if [[ $doc_num -eq $file_nums ]];then\n          ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                       ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    if [[ ${doc_num} -eq ${file_nums} ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 88:\n    res=($(curl https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files|jq -r '.[]|select(.status != \"removed\")| .filename'))\n         ^-- SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).\n                                             ^------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                      ^-----^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                                    ^------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n    res=($(curl https://api.github.com/repos/\"${owner}\"/\"${repo}\"/pulls/\"${pr_id}\"/files|jq -r '.[]|select(.status != \"removed\")| .filename'))\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 93:\n    for file in ${res[@]}\n                ^-------^ SC2068 (error): Double quote array expansions to avoid re-splitting elements.\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 96:\n        file_dir=$(echo $file|cut -d '/' -f 1)\n                        ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                        ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        file_dir=$(echo \"$file\"|cut -d '/' -f 1)\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 97:\n        if [[ $file_dir == \"fe\" || $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]];then\n              ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                   ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                          ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        if [[ ${file_dir} == \"fe\" || ${file_dir} == \"docs\" || ${file_dir} == \"fs_brokers\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 98:\n            let doc_num+=1\n            ^------------^ SC2219 (style): Instead of 'let expr', prefer (( expr )) .\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 102:\n    if [[ $doc_num -eq $file_nums ]];then\n          ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                       ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    if [[ ${doc_num} -eq ${file_nums} ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 113:\nif [ $# > 0 ]; then\n   ^--------^ SC2292 (style): Prefer [[ ]] over [ ] for tests in Bash/Ksh.\n        ^-- SC2071 (error): > is for string comparisons. Use -gt instead.\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 115:\n        --is_modify_only_invoved_be) check_all_change_files_is_under_be $2; shift ;;\n                                                                        ^-- SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n        --is_modify_only_invoved_be) check_all_change_files_is_under_be \"$2\"; shift ;;\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 116:\n        --is_modify_only_invoved_fe) check_all_change_files_is_under_fe $2; shift ;;\n                                                                        ^-- SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n        --is_modify_only_invoved_fe) check_all_change_files_is_under_fe \"$2\"; shift ;;\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 117:\n\t--is_modify_only_doc) check_all_change_files_is_under_doc $2; shift ;;\n                                                                  ^-- SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n\t--is_modify_only_doc) check_all_change_files_is_under_doc \"$2\"; shift ;;\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 124:\nmain $@\n     ^-- SC2068 (error): Double quote array expansions to avoid re-splitting elements.\n\nFor more information:\n  https://www.shellcheck.net/wiki/SC2068 -- Double quote array expansions to ...\n  https://www.shellcheck.net/wiki/SC2071 -- > is for string comparisons. Use ...\n  https://www.shellcheck.net/wiki/SC1078 -- Did you forget to close this doub...\n----------\n\nYou can address the above issues in one of three ways:\n1. Manually correct the issue in the offending shell script;\n2. Disable specific issues by adding the comment:\n  # shellcheck disable=NNNN\nabove the line that contains the issue, where NNNN is the error code;\n3. Add '-e NNNN' to the SHELLCHECK_OPTS setting in your .yml action file.\n\n\n\n```\n</details>\n\n<details>\n<summary>shfmt errors</summary>\n\n```\n\n'shfmt ' returned error 1 finding the following formatting issues:\n\n----------\n--- teamcity/doris/benchmark/clickbench/common/check_and_kill_deleted_proc.sh.orig\n+++ teamcity/doris/benchmark/clickbench/common/check_and_kill_deleted_proc.sh\n@@ -8,23 +8,22 @@\n echo \"====================================\"\n echo \"START TO DETECT RESIDUAL PROCESSES!\"\n \n-check=$(lsof -i:$port|awk '{print $2}'|wc -l)\n-if [ \"check$check\" != \"check0\" ];then\n-    if [ \"check\"${case_level} == \"check\" ];then\n-        check_res=$(pwdx `lsof -i:$port|grep -v PID|awk '{print $2}'`|grep $env_name|grep deleted||wc -l)\n+check=$(lsof -i:$port | awk '{print $2}' | wc -l)\n+if [ \"check$check\" != \"check0\" ]; then\n+    if [ \"check\"${case_level} == \"check\" ]; then\n+        check_res=$(pwdx $(lsof -i:$port | grep -v PID | awk '{print $2}') | grep $env_name | grep deleted || wc -l)\n     else\n-        check_res=$(pwdx `lsof -i:$port|grep -v PID|awk '{print $2}'`|grep $env_name|grep $case_level|grep deleted||wc -l)\n+        check_res=$(pwdx $(lsof -i:$port | grep -v PID | awk '{print $2}') | grep $env_name | grep $case_level | grep deleted || wc -l)\n     fi\n-    if [ \"check$check_res\" != \"check0\" ];then\n-        be_pid=(`lsof -i:$port|grep -v PID|awk '{print $2}'`)\n+    if [ \"check$check_res\" != \"check0\" ]; then\n+        be_pid=($(lsof -i:$port | grep -v PID | awk '{print $2}'))\n         echo \"Detected residual processes: ${be_pid}\"\n         echo \"kill residual processes: kill -9 ${be_pid}\"\n         kill -9 $be_pid\n     fi\n else\n-        echo \"No residual processes\"\n+    echo \"No residual processes\"\n fi\n \n-\n echo \"FINISH DETECT RESIDUAL PROCESSES!\"\n echo \"===================================\"\n--- teamcity/doris/benchmark/clickbench/common/check_change_file.sh.orig\n+++ teamcity/doris/benchmark/clickbench/common/check_change_file.sh\n@@ -7,7 +7,7 @@\n GITHUB_TOKEN=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\n \n usage() {\n-  echo \"\n+    echo \"\n Usage: $0 <options>\n   Optional options:\n \n@@ -16,23 +16,21 @@\n     $0 --is_modify_only_invoved_fe pr_id          if pr changed code only invoved fe doc, fs_brocker, return 0; else return 2\n     $0 --is_modify_only_invoved_doc pr_id         if pr changed code only invoved doc, fs_brocker, return 0; else return 2\n   \"\n-  exit 1\n+    exit 1\n }\n \n-\n-function get_all_change_files(){\n+function get_all_change_files() {\n     pr_id=$1\n     files=()\n \n     page=1\n     per_page=100\n-    while [ 1 -eq 1 ]\n-    do\n+    while [ 1 -eq 1 ]; do\n         #echo \"curl --header 'authorization: Bearer ${GITHUB_TOKEN}' https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files?per_page=$per_page\\&page=$page\"\n-        res=($(curl --header \"authorization: Bearer ${GITHUB_TOKEN}\" https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files?per_page=$per_page\\&page=$page|jq -r '.[]|select(.status = \"removed\")| .filename'))\n+        res=($(curl --header \"authorization: Bearer ${GITHUB_TOKEN}\" https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files?per_page=$per_page\\&page=$page | jq -r '.[]|select(.status = \"removed\")| .filename'))\n         res_len=${#res[@]}\n         #echo \"================\"$res_len\n-        if [ ${res_len} -ne 0 ];then\n+        if [ ${res_len} -ne 0 ]; then\n             let page+=1\n             #files=\"${res[@]}\"\"$files\"\n             files=(${res[@]} ${files[*]})\n@@ -44,8 +42,7 @@\n     echo \"${files[@]}\"\n }\n \n-\n-function check_removed_change_file(){\n+function check_removed_change_file() {\n     pr_id=$1\n     module=$2\n     owner='apache'\n@@ -55,26 +52,25 @@\n     file_nums=${#res[@]}\n     is_code_change_flag=false\n     module_file=0\n-    for file in ${res[@]}\n-    do\n-\t#echo \"$file\"\n-\tfile_dir=$(echo $file|cut -d '/' -f 1)\n-        file_type=$(echo $file|rev|cut -d / -f 1|cut -d '.' -f 1|rev)\n-\t#if [[  \"check$file_dir\" == \"check${module}\" &&  ($file_type == \"cpp\" || $file_type == \"c\" || $file_type == \"java\" || $file_type == \"py\" || $file_type == \"h\" || $file_type == 'js') ]];then\n-\tif [[ $file_type == \"cpp\" || $file_type == \"c\" || $file_type == \"java\" || $file_type == \"py\" || $file_type == \"h\" || $file_type == 'js' ]];then\n-\t    echo \"code has changed, ${file} is deleted\"\n-\t    is_code_change_flag=true\n-\tfi\n-\tif [[ \"check$file_dir\" == \"check${module}\" ]];then\n+    for file in ${res[@]}; do\n+        #echo \"$file\"\n+        file_dir=$(echo $file | cut -d '/' -f 1)\n+        file_type=$(echo $file | rev | cut -d / -f 1 | cut -d '.' -f 1 | rev)\n+        #if [[  \"check$file_dir\" == \"check${module}\" &&  ($file_type == \"cpp\" || $file_type == \"c\" || $file_type == \"java\" || $file_type == \"py\" || $file_type == \"h\" || $file_type == 'js') ]];then\n+        if [[ $file_type == \"cpp\" || $file_type == \"c\" || $file_type == \"java\" || $file_type == \"py\" || $file_type == \"h\" || $file_type == 'js' ]]; then\n+            echo \"code has changed, ${file} is deleted\"\n+            is_code_change_flag=true\n+        fi\n+        if [[ \"check$file_dir\" == \"check${module}\" ]]; then\n             let module_file+=1\n-\tfi\n+        fi\n     done\n \n-    if [[ \"${is_code_change_flag}\" == \"false\" ]];then\n-\techo \"NO CODE FILE DELETED, PASSED!\"\n+    if [[ \"${is_code_change_flag}\" == \"false\" ]]; then\n+        echo \"NO CODE FILE DELETED, PASSED!\"\n         return 0\n     else\n-\techo \"CODE FILE BE DELETED\"\n+        echo \"CODE FILE BE DELETED\"\n         return 2\n     fi\n \n@@ -95,20 +91,18 @@\n \n     doc_num=0\n     doc_sql_manual_num=0\n-    for file in ${res[@]}\n-    do\n+    for file in ${res[@]}; do\n         #check change file is on docs/fs_brokers or not\n-\techo \"$file\"\n-        file_dir=$(echo $file|cut -d '/' -f 1)\n-\tif [[ $file_dir == \"docs\" ]];then\n+        echo \"$file\"\n+        file_dir=$(echo $file | cut -d '/' -f 1)\n+        if [[ $file_dir == \"docs\" ]]; then\n             let doc_num+=1\n-\tfi\n-        if [[ \"$file\" =~ \"docs/zh-CN/docs/sql-manual/\" || \"$file\" =~ \"docs/en/docs/sql-manual/\" ]];then\n+        fi\n+        if [[ \"$file\" =~ \"docs/zh-CN/docs/sql-manual/\" || \"$file\" =~ \"docs/en/docs/sql-manual/\" ]]; then\n             let doc_sql_manual_num+=1\n             continue\n         fi\n \n-\n         #check change file is md/txt/doc file\n         #file_type=$(echo $file|cut -d '.' -f 2)\n         #if [[ $file_type == \"md\" || $file_type == \"txt\" || $file_type == \"doc\" ]];then\n@@ -120,7 +114,7 @@\n     echo \"doc_num: $doc_num\"\n     echo \"file_nums: $file_nums\"\n     echo \"doc_sql_manual_num: $doc_sql_manual_num\"\n-    if [[ $doc_num -eq $file_nums && $doc_sql_manual_num -eq 0 ]];then\n+    if [[ $doc_num -eq $file_nums && $doc_sql_manual_num -eq 0 ]]; then\n         echo \"JUST MODIFY DOCUMENT, NO COED CHSNGED, PASSED!\"\n         return 0\n     else\n@@ -143,17 +137,16 @@\n \n     doc_num=0\n     echo \"START CHECK CODE IS ONLY RELATED BE OR NOT\"\n-    for file in ${res[@]}\n-    do\n+    for file in ${res[@]}; do\n         echo \"$file\"\n         #check change file is on be or not\n-        file_dir=$(echo $file|cut -d '/' -f 1)\n-        if [[ $file_dir == \"be\" || $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]];then\n+        file_dir=$(echo $file | cut -d '/' -f 1)\n+        if [[ $file_dir == \"be\" || $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]]; then\n             let doc_num+=1\n             continue\n-\tfi\n+        fi\n     done\n-    if [[ $doc_num -eq $file_nums ]];then\n+    if [[ $doc_num -eq $file_nums ]]; then\n         echo \"JUST MODIFY BE CODE, NO NEED RUN FE UT, PASSED!\"\n         return 0\n     else\n@@ -176,17 +169,16 @@\n \n     doc_num=0\n     echo \"START CHECK CODE IS ONLY RELATED FE OR NOT\"\n-    for file in ${res[@]}\n-    do\n+    for file in ${res[@]}; do\n         echo \"$file\"\n         #check change file is on be or not\n-        file_dir=$(echo $file|cut -d '/' -f 1)\n-        if [[ $file_dir == \"fe\" || $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]];then\n+        file_dir=$(echo $file | cut -d '/' -f 1)\n+        if [[ $file_dir == \"fe\" || $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]]; then\n             let doc_num+=1\n             continue\n         fi\n     done\n-    if [[ $doc_num -eq $file_nums ]];then\n+    if [[ $doc_num -eq $file_nums ]]; then\n         echo \"JUST MODIFY FE CODE, NO NEED RUN BE UT, PASSED!\"\n         return 0\n     else\n@@ -197,42 +189,49 @@\n \n main() {\n \n-if [ $# > 0 ]; then\n-    case \"$1\" in\n+    if [ $# ] >0; then\n+        case \"$1\" in\n         --is_modify_only_invoved_be)\n-\t    check_removed_change_file $2 \"be\"\n-\t    check_1=$?\n-\t    check_all_change_files_is_under_be $2\n-\t    check_2=$?\n-\t    echo ${check_1}\n-\t    echo ${check_2}\n-\t    res=`expr $check_1 \\* $check_2`\n-\t    exit $res\n-\t    shift ;;\n+            check_removed_change_file $2 \"be\"\n+            check_1=$?\n+            check_all_change_files_is_under_be $2\n+            check_2=$?\n+            echo ${check_1}\n+            echo ${check_2}\n+            res=$(expr $check_1 \\* $check_2)\n+            exit $res\n+            shift\n+            ;;\n         --is_modify_only_invoved_fe)\n-\t    check_removed_change_file $2 \"fe\"\n-\t    check_1=$?\n-\t    check_all_change_files_is_under_fe $2\n-\t    check_2=$?\n-            res=`expr $check_1 \\* $check_2`\n-\t    echo ${check_1}\n-\t    echo ${check_2}\n-\t    exit $res\n-\t    shift ;;\n-\t--is_modify_only_invoved_doc)\n-\t    check_removed_change_file $2 \"docs\"\n-\t    check_1=$?\n-\t    check_all_change_files_is_under_doc $2\n-\t    check_2=$?\n-            res=`expr $check_1 + $check_2`\n-\t    echo ${check_1}\n+            check_removed_change_file $2 \"fe\"\n+            check_1=$?\n+            check_all_change_files_is_under_fe $2\n+            check_2=$?\n+            res=$(expr $check_1 \\* $check_2)\n+            echo ${check_1}\n             echo ${check_2}\n-\t    exit $res\n-\t    shift ;;\n-        *) echo \"ERROR\"; usage; exit 1 ;;\n-    esac\n+            exit $res\n+            shift\n+            ;;\n+        --is_modify_only_invoved_doc)\n+            check_removed_change_file $2 \"docs\"\n+            check_1=$?\n+            check_all_change_files_is_under_doc $2\n+            check_2=$?\n+            res=$(expr $check_1 + $check_2)\n+            echo ${check_1}\n+            echo ${check_2}\n+            exit $res\n+            shift\n+            ;;\n+        *)\n+            echo \"ERROR\"\n+            usage\n+            exit 1\n+            ;;\n+        esac\n \n-fi\n+    fi\n }\n \n main $@\n--- teamcity/doris/benchmark/clickbench/common/clean_disk.sh.orig\n+++ teamcity/doris/benchmark/clickbench/common/clean_disk.sh\n@@ -3,7 +3,7 @@\n df -h\n existsTime=720\n #delete files created 20 hours ago\n-echo `date \"+%Y-%m-%d %H:%M:%S\"` \"start to clear oudate file!\"\n+echo $(date \"+%Y-%m-%d %H:%M:%S\") \"start to clear oudate file!\"\n cd /home/work/teamcity/TeamCity/piplineWork/Compile/\n find /home/work/teamcity/TeamCity/piplineWork/Compile/ -maxdepth 1 -mindepth 1 -mmin +${existsTime} -type d -name \"*_*\" -exec rm -rf {} \\;\n cd -\nteamcity/doris/benchmark/clickbench/common/docker_trigger_api.sh:43:1: reached EOF without closing quote \"\n--- teamcity/doris/benchmark/clickbench/common/teamcity_api.sh.orig\n+++ teamcity/doris/benchmark/clickbench/common/teamcity_api.sh\n@@ -139,23 +139,55 @@\n }\n COMMENT\n \n-\n main() {\n \n-if [ $# > 0 ]; then\n-    case \"$1\" in \n-        --cancel_running_build) build_id=$2; cancel_running_build $build_id; shift ;;\n-        --cancel_pending_build) build_id=$2; cancel_pending_build $build_id; shift ;;\n-        --show_build_state) build_id=$2; res=$(show_build_state $build_id); echo $res; shift ;;\n-        --show_build_status) build_id=$2; res=$(show_build_status $build_id); echo $res; shift ;;\n-        --show_latest_builds) get_latest_builds; shift ;;\n-        --show_queued_builds) get_queued_builds; shift ;;\n-        --get_all_builds_of_pr_id) get_all_builds $2; shift ;;\n-\t--help) usage; shift ;;\n-        *) echo \"ERROR\"; exit 1 ;;\n-    esac\n+    if [ $# ] >0; then\n+        case \"$1\" in\n+        --cancel_running_build)\n+            build_id=$2\n+            cancel_running_build $build_id\n+            shift\n+            ;;\n+        --cancel_pending_build)\n+            build_id=$2\n+            cancel_pending_build $build_id\n+            shift\n+            ;;\n+        --show_build_state)\n+            build_id=$2\n+            res=$(show_build_state $build_id)\n+            echo $res\n+            shift\n+            ;;\n+        --show_build_status)\n+            build_id=$2\n+            res=$(show_build_status $build_id)\n+            echo $res\n+            shift\n+            ;;\n+        --show_latest_builds)\n+            get_latest_builds\n+            shift\n+            ;;\n+        --show_queued_builds)\n+            get_queued_builds\n+            shift\n+            ;;\n+        --get_all_builds_of_pr_id)\n+            get_all_builds $2\n+            shift\n+            ;;\n+        --help)\n+            usage\n+            shift\n+            ;;\n+        *)\n+            echo \"ERROR\"\n+            exit 1\n+            ;;\n+        esac\n \n-fi\n+    fi\n }\n \n main $@\n--- teamcity/doris/benchmark/clickbench/common/teamcity_common.sh.orig\n+++ teamcity/doris/benchmark/clickbench/common/teamcity_common.sh\n@@ -11,7 +11,7 @@\n JSON_HEADER=\"--header \\\"Accept: application/json\\\"\"\n \n usage() {\n-  echo \"\n+    echo \"\n Usage: $0 <options>\n   Optional options:\n      --cancel_running_build build_id    cancel a specific running build\n@@ -32,21 +32,21 @@\n     $0 --show_queued_builds             show all queued builds\n     $0 --get_all_builds_of_pr_id 9151   get all 9151 builds\n   \"\n-  exit 1\n+    exit 1\n }\n \n cancel_running_build() {\n     build_id=$1\n     state=$(show_build_state $build_id)\n-    if [[ $state == \"running\" ]];then\n+    if [[ $state == \"running\" ]]; then\n         #curl --header \"Authorization: Bearer eyJ0eXAiOiAiVENWMiJ9.bW1DcHJpRWNCSktnREhLaHd5Y1lndmpycnJ3.NmEwM2E3YTEtMTVmYy00NGU0LWI1OTAtMzU3MzljODE0Njdk\" http://43.129.232.36:8111/app/rest/builds/id:333 -X POST -H 'Content-Type: application/json' -d '{ \"buildCancelRequest\": {       \"comment\": \"Already running builds will be stopped.\",      \"readdIntoQueue\": \"false\"    }  }'\n         cmd=\"/app/rest/builds/id:$build_id\"\n         cmd=$cmd\" -X POST -H \\'Content-Type: application/json\\' -d \\'{ \\\"buildCancelRequest\\\": {       \\\"comment\\\": \\\"Stop obsolete running builds.\\\",      \\\"readdIntoQueue\\\": \\\"false\\\"    }  }'\"\n         url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $TEAMCITY_SERVER/$cmd\"\n         res=$(eval $eval)\n-        check=$(echo $res |grep status=\"UNKNOWN\")\n-        if [[ -z $check ]];then\n-           echo \"cancel fail!\"\n+        check=$(echo $res | grep status=\"UNKNOWN\")\n+        if [[ -z $check ]]; then\n+            echo \"cancel fail!\"\n         fi\n     fi\n \n@@ -55,15 +55,15 @@\n cancel_pending_build() {\n     build_id=$1\n     state=$(show_build_state $build_id)\n-    if [[ $state == \"queued\" ]];then\n+    if [[ $state == \"queued\" ]]; then\n         cmd=\"app/rest/buildQueue/id:$build_id\"\n         cmd=$cmd\" -X POST -H \\'Content-Type: application/json\\' -d \\'{ \\\"buildCancelRequest\\\": {       \\\"comment\\\": \\\"Cancel obsolete queue build.\\\",      \\\"readdIntoQueue\\\": \\\"false\\\"    }  }'\"\n         url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $TEAMCITY_SERVER/$cmd\"\n         #echo $url\n         res=$(eval $eval)\n-        check=$(echo $res |grep status=\"UNKNOWN\")\n-        if [[ -z $check ]];then\n-           echo \"cancel fail!\"\n+        check=$(echo $res | grep status=\"UNKNOWN\")\n+        if [[ -z $check ]]; then\n+            echo \"cancel fail!\"\n         fi\n     fi\n }\n@@ -73,15 +73,15 @@\n     cmd=\"app/rest/builds?locator=id:$build_id\"\n     url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $TEAMCITY_SERVER/$cmd\"\n     #echo $url\n-    res=`eval $url`\n-    \n+    res=$(eval $url)\n+\n     #check build exist or not\n-    check=$(echo $res|grep \"<builds count=\\\"1\\\"\")\n+    check=$(echo $res | grep \"<builds count=\\\"1\\\"\")\n     if [[ -z $check ]]; then\n         return\n     fi\n     #get state\n-    state=`echo $res |awk -F ' ' '{print $9\" \"$10\" \"$11}'|awk -F \"state=\" '{print $2}'|cut -d ' ' -f 1|sed 's/\\\"//g'`\n+    state=$(echo $res | awk -F ' ' '{print $9\" \"$10\" \"$11}' | awk -F \"state=\" '{print $2}' | cut -d ' ' -f 1 | sed 's/\\\"//g')\n     #only 2 state: queued and finished\n     echo $state\n }\n@@ -91,9 +91,9 @@\n     cmd=\"app/rest/builds?locator=id:$build_id\"\n     url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $TEAMCITY_SERVER/$cmd\"\n     #echo $url\n-    res=`eval $url`\n+    res=$(eval $url)\n     #check build exist or not\n-    check1=$(echo $res|grep \"<builds count=\\\"1\\\"\")\n+    check1=$(echo $res | grep \"<builds count=\\\"1\\\"\")\n     if [[ -z $check1 ]]; then\n         return\n     fi\n@@ -102,8 +102,8 @@\n     #if [[ -z $check ]]; then\n     #    return\n     #fi\n-    state=`echo $res |awk -F ' ' '{print $9\" \"$10\" \"$11}'|awk -F \"status=\" '{print $2}'|cut -d ' ' -f 1|sed 's/\\\"//g'`\n-    #only 2 state: \n+    state=$(echo $res | awk -F ' ' '{print $9\" \"$10\" \"$11}' | awk -F \"status=\" '{print $2}' | cut -d ' ' -f 1 | sed 's/\\\"//g')\n+    #only 2 state:\n     echo $state\n }\n \n@@ -111,7 +111,7 @@\n     branch=$1\n     cmd=\"app/rest/builds?locator=branch:$branch\"\n     url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $TEAMCITY_SERVER/$cmd\"\n-    res=`eval $url`\n+    res=$(eval $url)\n }\n \n get_latest_builds() {\n@@ -125,14 +125,12 @@\n     cmd=\"app/rest/buildQueue\"\n     url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $JSON_HEADER $TEAMCITY_SERVER/$cmd\"\n     #echo $url\n-    res=`eval $url`\n+    res=$(eval $url)\n     #a=$(echo $res|grep -oP 'build id=.*'|head -1)\n-    \n-    \n+\n     #a=$res\n     #while [[ \"check\"$a != \"check\" ]]\n     #do\n     #    a=$(echo $a|awk -F 'build id=\"' '{print $2}')\n     #done\n }\n-\n--- teamcity/doris/benchmark/clickbench/common/test.sh.orig\n+++ teamcity/doris/benchmark/clickbench/common/test.sh\n@@ -3,33 +3,29 @@\n repo=doris\n GITHUB_TOKEN=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\n \n-function get_all_change_files(){\n+function get_all_change_files() {\n     pr_id=$1\n     files=()\n \n     page=1\n     per_page=100\n-    while [ 1 -eq 1 ]\n-    do\n-\t#echo \"curl --header 'authorization: Bearer ${GITHUB_TOKEN}' https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files?per_page=$per_page\\&page=$page\"\n-\tres=($(curl --header \"authorization: Bearer ${GITHUB_TOKEN}\" https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files?per_page=$per_page\\&page=$page|jq -r '.[]|select(.status = \"removed\")| .filename'))\n+    while [ 1 -eq 1 ]; do\n+        #echo \"curl --header 'authorization: Bearer ${GITHUB_TOKEN}' https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files?per_page=$per_page\\&page=$page\"\n+        res=($(curl --header \"authorization: Bearer ${GITHUB_TOKEN}\" https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files?per_page=$per_page\\&page=$page | jq -r '.[]|select(.status = \"removed\")| .filename'))\n         res_len=${#res[@]}\n-        if [ ${res_len} -ne 0 ];then\n-\t    let page+=1\n+        if [ ${res_len} -ne 0 ]; then\n+            let page+=1\n             #files=\"${res[@]}\"\"$files\"\n-\t    files=(${res[@]} ${files[*]})\n+            files=(${res[@]} ${files[*]})\n         else\n             break\n         fi\n-\techo \n+        echo\n     done\n     echo \"${files[@]}\"\n }\n \n-\n out=($(get_all_change_files 11154))\n \n-\n-\n echo \"==================\"\n echo \"${out[@]}\"\n--- teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh.orig\n+++ teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh\n@@ -3,9 +3,8 @@\n #res=(`git diff --name-only HEAD~ HEAD`)\n #file_nums=${#res[@]}\n \n-\n usage() {\n-  echo \"\n+    echo \"\n Usage: $0 <options>\n   Optional options:\n \n@@ -14,24 +13,22 @@\n     $0 --is_modify_only_invoved_fe pr_id          if pr changed code only invoved fe doc, fs_brocker, return 0; else return 2\n     $0 --is_modify_only_invoved_doc pr_id         if pr changed code only invoved doc, fs_brocker, return 0; else return 2\n   \"\n-  exit 1\n+    exit 1\n }\n \n-\n function check_all_change_files_is_under_doc() {\n \n     pr_id=$1\n     owner='apache'\n     repo='incubator-doris'\n-    res=($(curl https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files|jq -r '.[]|select(.status != \"removed\")| .filename'))\n+    res=($(curl https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files | jq -r '.[]|select(.status != \"removed\")| .filename'))\n     file_nums=${#res[@]}\n \n     doc_num=0\n-    for file in ${res[@]}\n-    do\n+    for file in ${res[@]}; do\n         #check change file is on docs/fs_brokers or not\n-        file_dir=$(echo $file|cut -d '/' -f 1)\n-        if [[ $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]];then\n+        file_dir=$(echo $file | cut -d '/' -f 1)\n+        if [[ $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]]; then\n             let doc_num+=1\n             continue\n         fi\n@@ -43,7 +40,7 @@\n         #fi\n     done\n \n-    if [[ $doc_num -eq $file_nums ]];then\n+    if [[ $doc_num -eq $file_nums ]]; then\n         echo \"JUST MODIFY DOCUMENT, NO COED CHSNGED, PASSED!\"\n         exit 0\n     else\n@@ -57,21 +54,20 @@\n     pr_id=$1\n     owner='apache'\n     repo='incubator-doris'\n-    res=($(curl https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files|jq -r '.[]|select(.status != \"removed\")| .filename'))\n+    res=($(curl https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files | jq -r '.[]|select(.status != \"removed\")| .filename'))\n     file_nums=${#res[@]}\n \n     doc_num=0\n     echo \"START CHECK CODE IS ONLY RELATED BE OR NOT\"\n-    for file in ${res[@]}\n-    do\n+    for file in ${res[@]}; do\n         #check change file is on be or not\n-        file_dir=$(echo $file|cut -d '/' -f 1)\n-        if [[ $file_dir == \"be\" || $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]];then\n+        file_dir=$(echo $file | cut -d '/' -f 1)\n+        if [[ $file_dir == \"be\" || $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]]; then\n             let doc_num+=1\n             continue\n-\tfi\n+        fi\n     done\n-    if [[ $doc_num -eq $file_nums ]];then\n+    if [[ $doc_num -eq $file_nums ]]; then\n         echo \"JUST MODIFY BE CODE, NO NEED RUN FE UT, PASSED!\"\n         exit 0\n     else\n@@ -85,21 +81,20 @@\n     pr_id=$1\n     owner='apache'\n     repo='incubator-doris'\n-    res=($(curl https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files|jq -r '.[]|select(.status != \"removed\")| .filename'))\n+    res=($(curl https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files | jq -r '.[]|select(.status != \"removed\")| .filename'))\n     file_nums=${#res[@]}\n \n     doc_num=0\n     echo \"START CHECK CODE IS ONLY RELATED FE OR NOT\"\n-    for file in ${res[@]}\n-    do\n+    for file in ${res[@]}; do\n         #check change file is on be or not\n-        file_dir=$(echo $file|cut -d '/' -f 1)\n-        if [[ $file_dir == \"fe\" || $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]];then\n+        file_dir=$(echo $file | cut -d '/' -f 1)\n+        if [[ $file_dir == \"fe\" || $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]]; then\n             let doc_num+=1\n             continue\n         fi\n     done\n-    if [[ $doc_num -eq $file_nums ]];then\n+    if [[ $doc_num -eq $file_nums ]]; then\n         echo \"JUST MODIFY FE CODE, NO NEED RUN BE UT, PASSED!\"\n         exit 0\n     else\n@@ -110,15 +105,28 @@\n \n main() {\n \n-if [ $# > 0 ]; then\n-    case \"$1\" in\n-        --is_modify_only_invoved_be) check_all_change_files_is_under_be $2; shift ;;\n-        --is_modify_only_invoved_fe) check_all_change_files_is_under_fe $2; shift ;;\n-\t--is_modify_only_doc) check_all_change_files_is_under_doc $2; shift ;;\n-        *) echo \"ERROR\"; usage; exit 1 ;;\n-    esac\n+    if [ $# ] >0; then\n+        case \"$1\" in\n+        --is_modify_only_invoved_be)\n+            check_all_change_files_is_under_be $2\n+            shift\n+            ;;\n+        --is_modify_only_invoved_fe)\n+            check_all_change_files_is_under_fe $2\n+            shift\n+            ;;\n+        --is_modify_only_doc)\n+            check_all_change_files_is_under_doc $2\n+            shift\n+            ;;\n+        *)\n+            echo \"ERROR\"\n+            usage\n+            exit 1\n+            ;;\n+        esac\n \n-fi\n+    fi\n }\n \n main $@\n--- teamcity/doris/benchmark/clickbench/prepare.sh.orig\n+++ teamcity/doris/benchmark/clickbench/prepare.sh\n@@ -22,4 +22,3 @@\n fi\n qa_home=\"${pipeline_home}/selectdb-qa\"\n cd \"${qa_home}\" && git stash && git checkout main && git pull && cd -\n-\n----------\n\nYou can reformat the above files to meet shfmt's requirements by typing:\n\n  shfmt  -w filename\n\n\n```\n</details>\n\n\n","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301619387/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301620156","html_url":"https://github.com/apache/doris/pull/13046#issuecomment-1301620156","issue_url":"https://api.github.com/repos/apache/doris/issues/13046","id":1301620156,"node_id":"IC_kwDOBfSlxs5NlSW8","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-03T04:12:14Z","updated_at":"2022-11-03T04:12:14Z","author_association":"CONTRIBUTOR","body":"PR approved by at least one committer and no changes requested.","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301620156/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301620180","html_url":"https://github.com/apache/doris/pull/13046#issuecomment-1301620180","issue_url":"https://api.github.com/repos/apache/doris/issues/13046","id":1301620180,"node_id":"IC_kwDOBfSlxs5NlSXU","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-03T04:12:16Z","updated_at":"2022-11-03T04:12:16Z","author_association":"CONTRIBUTOR","body":"PR approved by anyone and no changes requested.","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301620180/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301627172","html_url":"https://github.com/apache/doris/pull/13927#issuecomment-1301627172","issue_url":"https://api.github.com/repos/apache/doris/issues/13927","id":1301627172,"node_id":"IC_kwDOBfSlxs5NlUEk","user":{"login":"hello-stephen","id":27881198,"node_id":"MDQ6VXNlcjI3ODgxMTk4","avatar_url":"https://avatars.githubusercontent.com/u/27881198?v=4","gravatar_id":"","url":"https://api.github.com/users/hello-stephen","html_url":"https://github.com/hello-stephen","followers_url":"https://api.github.com/users/hello-stephen/followers","following_url":"https://api.github.com/users/hello-stephen/following{/other_user}","gists_url":"https://api.github.com/users/hello-stephen/gists{/gist_id}","starred_url":"https://api.github.com/users/hello-stephen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hello-stephen/subscriptions","organizations_url":"https://api.github.com/users/hello-stephen/orgs","repos_url":"https://api.github.com/users/hello-stephen/repos","events_url":"https://api.github.com/users/hello-stephen/events{/privacy}","received_events_url":"https://api.github.com/users/hello-stephen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-11-03T04:25:42Z","updated_at":"2022-11-03T04:25:42Z","author_association":"CONTRIBUTOR","body":"TeamCity pipeline, clickbench performance test result:\n the sum of best hot time: 37.87 seconds\n load time: 573 seconds\n storage size: 17154655362 Bytes\n https://doris-community-test-1308700295.cos.ap-hongkong.myqcloud.com/tmp/20221103042539_clickbench_pr_38911.html","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301627172/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301630974","html_url":"https://github.com/apache/doris/pull/13920#issuecomment-1301630974","issue_url":"https://api.github.com/repos/apache/doris/issues/13920","id":1301630974,"node_id":"IC_kwDOBfSlxs5NlU_-","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-03T04:34:57Z","updated_at":"2022-11-03T04:34:57Z","author_association":"CONTRIBUTOR","body":"PR approved by at least one committer and no changes requested.","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301630974/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301630995","html_url":"https://github.com/apache/doris/pull/13920#issuecomment-1301630995","issue_url":"https://api.github.com/repos/apache/doris/issues/13920","id":1301630995,"node_id":"IC_kwDOBfSlxs5NlVAT","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-03T04:34:59Z","updated_at":"2022-11-03T04:34:59Z","author_association":"CONTRIBUTOR","body":"PR approved by anyone and no changes requested.","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301630995/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301633267","html_url":"https://github.com/apache/doris/pull/13928#issuecomment-1301633267","issue_url":"https://api.github.com/repos/apache/doris/issues/13928","id":1301633267,"node_id":"IC_kwDOBfSlxs5NlVjz","user":{"login":"hello-stephen","id":27881198,"node_id":"MDQ6VXNlcjI3ODgxMTk4","avatar_url":"https://avatars.githubusercontent.com/u/27881198?v=4","gravatar_id":"","url":"https://api.github.com/users/hello-stephen","html_url":"https://github.com/hello-stephen","followers_url":"https://api.github.com/users/hello-stephen/followers","following_url":"https://api.github.com/users/hello-stephen/following{/other_user}","gists_url":"https://api.github.com/users/hello-stephen/gists{/gist_id}","starred_url":"https://api.github.com/users/hello-stephen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hello-stephen/subscriptions","organizations_url":"https://api.github.com/users/hello-stephen/orgs","repos_url":"https://api.github.com/users/hello-stephen/repos","events_url":"https://api.github.com/users/hello-stephen/events{/privacy}","received_events_url":"https://api.github.com/users/hello-stephen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-11-03T04:41:04Z","updated_at":"2022-11-14T15:22:50Z","author_association":"CONTRIBUTOR","body":"TeamCity pipeline, clickbench performance test result:\n the sum of best hot time: 34.27 seconds\n load time: 443 seconds\n storage size: 17170468483 Bytes\n https://doris-community-test-1308700295.cos.ap-hongkong.myqcloud.com/tmp/20221114152247_clickbench_pr_45872.html","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301633267/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301663579","html_url":"https://github.com/apache/doris/pull/13792#issuecomment-1301663579","issue_url":"https://api.github.com/repos/apache/doris/issues/13792","id":1301663579,"node_id":"IC_kwDOBfSlxs5Nlc9b","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-03T05:30:30Z","updated_at":"2022-11-03T05:30:30Z","author_association":"CONTRIBUTOR","body":"PR approved by at least one committer and no changes requested.","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301663579/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301663650","html_url":"https://github.com/apache/doris/pull/13792#issuecomment-1301663650","issue_url":"https://api.github.com/repos/apache/doris/issues/13792","id":1301663650,"node_id":"IC_kwDOBfSlxs5Nlc-i","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-03T05:30:33Z","updated_at":"2022-11-03T05:30:33Z","author_association":"CONTRIBUTOR","body":"PR approved by anyone and no changes requested.","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301663650/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301697320","html_url":"https://github.com/apache/doris/pull/13935#issuecomment-1301697320","issue_url":"https://api.github.com/repos/apache/doris/issues/13935","id":1301697320,"node_id":"IC_kwDOBfSlxs5NllMo","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-03T06:30:44Z","updated_at":"2022-11-03T06:30:44Z","author_association":"CONTRIBUTOR","body":"PR approved by at least one committer and no changes requested.","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301697320/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301697344","html_url":"https://github.com/apache/doris/pull/13935#issuecomment-1301697344","issue_url":"https://api.github.com/repos/apache/doris/issues/13935","id":1301697344,"node_id":"IC_kwDOBfSlxs5NllNA","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-03T06:30:47Z","updated_at":"2022-11-03T06:30:47Z","author_association":"CONTRIBUTOR","body":"PR approved by anyone and no changes requested.","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301697344/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301700505","html_url":"https://github.com/apache/doris/pull/13925#issuecomment-1301700505","issue_url":"https://api.github.com/repos/apache/doris/issues/13925","id":1301700505,"node_id":"IC_kwDOBfSlxs5Nll-Z","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-03T06:37:11Z","updated_at":"2022-11-03T06:37:11Z","author_association":"CONTRIBUTOR","body":"PR approved by at least one committer and no changes requested.","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301700505/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301700523","html_url":"https://github.com/apache/doris/pull/13925#issuecomment-1301700523","issue_url":"https://api.github.com/repos/apache/doris/issues/13925","id":1301700523,"node_id":"IC_kwDOBfSlxs5Nll-r","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-03T06:37:14Z","updated_at":"2022-11-03T06:37:14Z","author_association":"CONTRIBUTOR","body":"PR approved by anyone and no changes requested.","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301700523/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301714116","html_url":"https://github.com/apache/doris/pull/13920#issuecomment-1301714116","issue_url":"https://api.github.com/repos/apache/doris/issues/13920","id":1301714116,"node_id":"IC_kwDOBfSlxs5NlpTE","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-03T07:03:02Z","updated_at":"2022-11-03T07:03:02Z","author_association":"CONTRIBUTOR","body":"PR approved by at least one committer and no changes requested.","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301714116/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301733283","html_url":"https://github.com/apache/doris/pull/13935#issuecomment-1301733283","issue_url":"https://api.github.com/repos/apache/doris/issues/13935","id":1301733283,"node_id":"IC_kwDOBfSlxs5Nlt-j","user":{"login":"hello-stephen","id":27881198,"node_id":"MDQ6VXNlcjI3ODgxMTk4","avatar_url":"https://avatars.githubusercontent.com/u/27881198?v=4","gravatar_id":"","url":"https://api.github.com/users/hello-stephen","html_url":"https://github.com/hello-stephen","followers_url":"https://api.github.com/users/hello-stephen/followers","following_url":"https://api.github.com/users/hello-stephen/following{/other_user}","gists_url":"https://api.github.com/users/hello-stephen/gists{/gist_id}","starred_url":"https://api.github.com/users/hello-stephen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hello-stephen/subscriptions","organizations_url":"https://api.github.com/users/hello-stephen/orgs","repos_url":"https://api.github.com/users/hello-stephen/repos","events_url":"https://api.github.com/users/hello-stephen/events{/privacy}","received_events_url":"https://api.github.com/users/hello-stephen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-11-03T07:31:53Z","updated_at":"2022-11-03T11:11:06Z","author_association":"CONTRIBUTOR","body":"TeamCity pipeline, clickbench performance test result:\n the sum of best hot time: 37.48 seconds\n load time: 612 seconds\n storage size: 17184809267 Bytes\n https://doris-community-test-1308700295.cos.ap-hongkong.myqcloud.com/tmp/20221103111103_clickbench_pr_39190.html","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301733283/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301748589","html_url":"https://github.com/apache/doris/pull/13730#issuecomment-1301748589","issue_url":"https://api.github.com/repos/apache/doris/issues/13730","id":1301748589,"node_id":"IC_kwDOBfSlxs5Nlxtt","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-03T07:54:12Z","updated_at":"2022-11-03T07:54:12Z","author_association":"CONTRIBUTOR","body":"PR approved by at least one committer and no changes requested.","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301748589/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301748618","html_url":"https://github.com/apache/doris/pull/13730#issuecomment-1301748618","issue_url":"https://api.github.com/repos/apache/doris/issues/13730","id":1301748618,"node_id":"IC_kwDOBfSlxs5NlxuK","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-03T07:54:15Z","updated_at":"2022-11-03T07:54:15Z","author_association":"CONTRIBUTOR","body":"PR approved by anyone and no changes requested.","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301748618/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301757757","html_url":"https://github.com/apache/doris/pull/13259#issuecomment-1301757757","issue_url":"https://api.github.com/repos/apache/doris/issues/13259","id":1301757757,"node_id":"IC_kwDOBfSlxs5Nlz89","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-03T08:05:38Z","updated_at":"2022-11-03T08:05:38Z","author_association":"CONTRIBUTOR","body":"#### `sh-checker report`\n\nTo get the full details, please check in the [job](\"https://github.com/apache/doris/actions/runs/3383943218\") output.\n\n<details>\n<summary>shellcheck errors</summary>\n\n```\n\n'shellcheck ' returned error 1 finding the following syntactical issues:\n\n----------\n\nIn teamcity/doris/benchmark/clickbench/common/check_and_kill_deleted_proc.sh line 11:\ncheck=$(lsof -i:$port|awk '{print $2}'|wc -l)\n                ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \ncheck=$(lsof -i:\"$port\"|awk '{print $2}'|wc -l)\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_and_kill_deleted_proc.sh line 12:\nif [ \"check$check\" != \"check0\" ];then\n   ^---------------------------^ SC2292 (style): Prefer [[ ]] over [ ] for tests in Bash/Ksh.\n           ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \nif [[ \"check${check}\" != \"check0\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_and_kill_deleted_proc.sh line 13:\n    if [ \"check\"${case_level} == \"check\" ];then\n       ^-- SC2292 (style): Prefer [[ ]] over [ ] for tests in Bash/Ksh.\n                ^-----------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n    if [[ \"check\"\"${case_level}\" == \"check\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_and_kill_deleted_proc.sh line 14:\n        check_res=$(pwdx `lsof -i:$port|grep -v PID|awk '{print $2}'`|grep $env_name|grep deleted||wc -l)\n                         ^-- SC2046 (warning): Quote this to prevent word splitting.\n                         ^-- SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n                                  ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                  ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                           ^-------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                                                           ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        check_res=$(pwdx $(lsof -i:\"$port\"|grep -v PID|awk '{print $2}')|grep $env_name|grep deleted||wc -l)\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_and_kill_deleted_proc.sh line 16:\n        check_res=$(pwdx `lsof -i:$port|grep -v PID|awk '{print $2}'`|grep $env_name|grep $case_level|grep deleted||wc -l)\n                         ^-- SC2046 (warning): Quote this to prevent word splitting.\n                         ^-- SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n                                  ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                  ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                           ^-------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                                                           ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                                          ^---------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                                                                          ^---------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        check_res=$(pwdx $(lsof -i:\"$port\"|grep -v PID|awk '{print $2}')|grep $env_name|grep $case_level|grep deleted||wc -l)\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_and_kill_deleted_proc.sh line 18:\n    if [ \"check$check_res\" != \"check0\" ];then\n       ^-- SC2292 (style): Prefer [[ ]] over [ ] for tests in Bash/Ksh.\n               ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    if [[ \"check${check_res}\" != \"check0\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_and_kill_deleted_proc.sh line 19:\n        be_pid=(`lsof -i:$port|grep -v PID|awk '{print $2}'`)\n                ^-- SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).\n                ^-- SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n                         ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                         ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        be_pid=($(lsof -i:\"$port\"|grep -v PID|awk '{print $2}'))\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_and_kill_deleted_proc.sh line 20:\n        echo \"Detected residual processes: ${be_pid}\"\n                                           ^-------^ SC2128 (warning): Expanding an array without an index only gives the first element.\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_and_kill_deleted_proc.sh line 21:\n        echo \"kill residual processes: kill -9 ${be_pid}\"\n                                               ^-------^ SC2128 (warning): Expanding an array without an index only gives the first element.\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_and_kill_deleted_proc.sh line 22:\n        kill -9 $be_pid\n                ^-----^ SC2128 (warning): Expanding an array without an index only gives the first element.\n                ^-----^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                ^-----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        kill -9 \"$be_pid\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 29:\n    while [ 1 -eq 1 ]\n          ^---------^ SC2292 (style): Prefer [[ ]] over [ ] for tests in Bash/Ksh.\n              ^-^ SC2050 (warning): This expression is constant. Did you forget the $ on a variable?\n\nDid you mean: \n    while [[ 1 -eq 1 ]]\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 32:\n        res=($(curl --header \"authorization: Bearer ${GITHUB_TOKEN}\" https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files?per_page=$per_page\\&page=$page|jq -r '.[]|select(.status = \"removed\")| .filename'))\n             ^-- SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).\n                                                                                                  ^------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                                                                           ^-----^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                                                                                         ^------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                                                                                                                                 ^-------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                                                                                                                 ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                                                                                                                 ^---^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                                                                                                                                 ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        res=($(curl --header \"authorization: Bearer ${GITHUB_TOKEN}\" https://api.github.com/repos/\"${owner}\"/\"${repo}\"/pulls/\"${pr_id}\"/files?per_page=\"$per_page\"\\&page=$page|jq -r '.[]|select(.status = \"removed\")| .filename'))\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 35:\n        if [ ${res_len} -ne 0 ];then\n           ^------------------^ SC2292 (style): Prefer [[ ]] over [ ] for tests in Bash/Ksh.\n             ^--------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n        if [[ \"${res_len}\" -ne 0 ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 36:\n            let page+=1\n            ^---------^ SC2219 (style): Instead of 'let expr', prefer (( expr )) .\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 38:\n            files=(${res[@]} ${files[*]})\n                   ^-------^ SC2206 (warning): Quote to prevent word splitting/globbing, or split robustly with mapfile or read -a.\n                             ^---------^ SC2206 (warning): Quote to prevent word splitting/globbing, or split robustly with mapfile or read -a.\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 54:\n    res=($(get_all_change_files $pr_id))\n         ^----------------------------^ SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).\n                                ^----^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    res=($(get_all_change_files \"$pr_id\"))\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 58:\n    for file in ${res[@]}\n                ^-------^ SC2068 (error): Double quote array expansions to avoid re-splitting elements.\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 61:\n\tfile_dir=$(echo $file|cut -d '/' -f 1)\n                        ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                        ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n\tfile_dir=$(echo \"$file\"|cut -d '/' -f 1)\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 62:\n        file_type=$(echo $file|rev|cut -d / -f 1|cut -d '.' -f 1|rev)\n                         ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                         ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        file_type=$(echo \"$file\"|rev|cut -d / -f 1|cut -d '.' -f 1|rev)\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 64:\n\tif [[ $file_type == \"cpp\" || $file_type == \"c\" || $file_type == \"java\" || $file_type == \"py\" || $file_type == \"h\" || $file_type == 'js' ]];then\n              ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                     ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                          ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                                  ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                                                        ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                                                                             ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n\tif [[ ${file_type} == \"cpp\" || ${file_type} == \"c\" || ${file_type} == \"java\" || ${file_type} == \"py\" || ${file_type} == \"h\" || ${file_type} == 'js' ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 68:\n\tif [[ \"check$file_dir\" == \"check${module}\" ]];then\n                    ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n\tif [[ \"check${file_dir}\" == \"check${module}\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 69:\n            let module_file+=1\n            ^----------------^ SC2219 (style): Instead of 'let expr', prefer (( expr )) .\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 89:\n    res=($(get_all_change_files $pr_id))\n         ^----------------------------^ SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).\n                                ^----^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    res=($(get_all_change_files \"$pr_id\"))\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 98:\n    for file in ${res[@]}\n                ^-------^ SC2068 (error): Double quote array expansions to avoid re-splitting elements.\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 101:\n\techo \"$file\"\n              ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n\techo \"${file}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 102:\n        file_dir=$(echo $file|cut -d '/' -f 1)\n                        ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                        ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        file_dir=$(echo \"$file\"|cut -d '/' -f 1)\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 103:\n\tif [[ $file_dir == \"docs\" ]];then\n              ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n\tif [[ ${file_dir} == \"docs\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 104:\n            let doc_num+=1\n            ^------------^ SC2219 (style): Instead of 'let expr', prefer (( expr )) .\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 106:\n        if [[ \"$file\" =~ \"docs/zh-CN/docs/sql-manual/\" || \"$file\" =~ \"docs/en/docs/sql-manual/\" ]];then\n               ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                           ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        if [[ \"${file}\" =~ \"docs/zh-CN/docs/sql-manual/\" || \"${file}\" =~ \"docs/en/docs/sql-manual/\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 107:\n            let doc_sql_manual_num+=1\n            ^-----------------------^ SC2219 (style): Instead of 'let expr', prefer (( expr )) .\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 120:\n    echo \"doc_num: $doc_num\"\n                   ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    echo \"doc_num: ${doc_num}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 121:\n    echo \"file_nums: $file_nums\"\n                     ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    echo \"file_nums: ${file_nums}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 122:\n    echo \"doc_sql_manual_num: $doc_sql_manual_num\"\n                              ^-----------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    echo \"doc_sql_manual_num: ${doc_sql_manual_num}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 123:\n    if [[ $doc_num -eq $file_nums && $doc_sql_manual_num -eq 0 ]];then\n          ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                       ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                     ^-----------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    if [[ ${doc_num} -eq ${file_nums} && ${doc_sql_manual_num} -eq 0 ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 138:\n    res=($(get_all_change_files $pr_id))\n         ^----------------------------^ SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).\n                                ^----^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    res=($(get_all_change_files \"$pr_id\"))\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 146:\n    for file in ${res[@]}\n                ^-------^ SC2068 (error): Double quote array expansions to avoid re-splitting elements.\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 148:\n        echo \"$file\"\n              ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        echo \"${file}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 150:\n        file_dir=$(echo $file|cut -d '/' -f 1)\n                        ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                        ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        file_dir=$(echo \"$file\"|cut -d '/' -f 1)\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 151:\n        if [[ $file_dir == \"be\" || $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]];then\n              ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                   ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                          ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        if [[ ${file_dir} == \"be\" || ${file_dir} == \"docs\" || ${file_dir} == \"fs_brokers\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 152:\n            let doc_num+=1\n            ^------------^ SC2219 (style): Instead of 'let expr', prefer (( expr )) .\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 156:\n    if [[ $doc_num -eq $file_nums ]];then\n          ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                       ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    if [[ ${doc_num} -eq ${file_nums} ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 171:\n    res=($(get_all_change_files $pr_id))\n         ^----------------------------^ SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).\n                                ^----^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    res=($(get_all_change_files \"$pr_id\"))\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 179:\n    for file in ${res[@]}\n                ^-------^ SC2068 (error): Double quote array expansions to avoid re-splitting elements.\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 181:\n        echo \"$file\"\n              ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        echo \"${file}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 183:\n        file_dir=$(echo $file|cut -d '/' -f 1)\n                        ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                        ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        file_dir=$(echo \"$file\"|cut -d '/' -f 1)\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 184:\n        if [[ $file_dir == \"fe\" || $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]];then\n              ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                   ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                          ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        if [[ ${file_dir} == \"fe\" || ${file_dir} == \"docs\" || ${file_dir} == \"fs_brokers\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 185:\n            let doc_num+=1\n            ^------------^ SC2219 (style): Instead of 'let expr', prefer (( expr )) .\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 189:\n    if [[ $doc_num -eq $file_nums ]];then\n          ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                       ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    if [[ ${doc_num} -eq ${file_nums} ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 200:\nif [ $# > 0 ]; then\n   ^--------^ SC2292 (style): Prefer [[ ]] over [ ] for tests in Bash/Ksh.\n        ^-- SC2071 (error): > is for string comparisons. Use -gt instead.\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 203:\n\t    check_removed_change_file $2 \"be\"\n                                      ^-- SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n\t    check_removed_change_file \"$2\" \"be\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 205:\n\t    check_all_change_files_is_under_be $2\n                                               ^-- SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n\t    check_all_change_files_is_under_be \"$2\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 207:\n\t    echo ${check_1}\n                 ^--------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n\nDid you mean: \n\t    echo \"${check_1}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 208:\n\t    echo ${check_2}\n                 ^--------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n\nDid you mean: \n\t    echo \"${check_2}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 209:\n\t    res=`expr $check_1 \\* $check_2`\n            ^-^ SC2178 (warning): Variable was used as an array but is now assigned a string.\n                ^-------------------------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n                 ^--^ SC2003 (style): expr is antiquated. Consider rewriting this using $((..)), ${} or [[ ]].\n                      ^------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                      ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                  ^------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                  ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n\t    res=$(expr \"$check_1\" \\* $check_2)\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 210:\n\t    exit $res\n                 ^--^ SC2128 (warning): Expanding an array without an index only gives the first element.\n                 ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                 ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n\t    exit \"$res\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 213:\n\t    check_removed_change_file $2 \"fe\"\n                                      ^-- SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n\t    check_removed_change_file \"$2\" \"fe\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 215:\n\t    check_all_change_files_is_under_fe $2\n                                               ^-- SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n\t    check_all_change_files_is_under_fe \"$2\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 217:\n            res=`expr $check_1 \\* $check_2`\n            ^-^ SC2178 (warning): Variable was used as an array but is now assigned a string.\n                ^-------------------------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n                 ^--^ SC2003 (style): expr is antiquated. Consider rewriting this using $((..)), ${} or [[ ]].\n                      ^------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                      ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                  ^------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                  ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n            res=$(expr \"$check_1\" \\* $check_2)\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 218:\n\t    echo ${check_1}\n                 ^--------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n\nDid you mean: \n\t    echo \"${check_1}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 219:\n\t    echo ${check_2}\n                 ^--------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n\nDid you mean: \n\t    echo \"${check_2}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 220:\n\t    exit $res\n                 ^--^ SC2128 (warning): Expanding an array without an index only gives the first element.\n                 ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                 ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n\t    exit \"$res\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 223:\n\t    check_removed_change_file $2 \"docs\"\n                                      ^-- SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n\t    check_removed_change_file \"$2\" \"docs\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 225:\n\t    check_all_change_files_is_under_doc $2\n                                                ^-- SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n\t    check_all_change_files_is_under_doc \"$2\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 227:\n            res=`expr $check_1 + $check_2`\n            ^-^ SC2178 (warning): Variable was used as an array but is now assigned a string.\n                ^------------------------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n                 ^--^ SC2003 (style): expr is antiquated. Consider rewriting this using $((..)), ${} or [[ ]].\n                      ^------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                      ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                 ^------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                 ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n            res=$(expr \"$check_1\" + $check_2)\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 228:\n\t    echo ${check_1}\n                 ^--------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n\nDid you mean: \n\t    echo \"${check_1}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 229:\n            echo ${check_2}\n                 ^--------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n\nDid you mean: \n            echo \"${check_2}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 230:\n\t    exit $res\n                 ^--^ SC2128 (warning): Expanding an array without an index only gives the first element.\n                 ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                 ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n\t    exit \"$res\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/check_change_file.sh line 238:\nmain $@\n     ^-- SC2068 (error): Double quote array expansions to avoid re-splitting elements.\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 6:\necho `date \"+%Y-%m-%d %H:%M:%S\"` \"start to clear oudate file!\"\n     ^-------------------------^ SC2046 (warning): Quote this to prevent word splitting.\n     ^-------------------------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n\nDid you mean: \necho $(date \"+%Y-%m-%d %H:%M:%S\") \"start to clear oudate file!\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 7:\ncd /home/work/teamcity/TeamCity/piplineWork/Compile/\n^-- SC2164 (warning): Use 'cd ... || exit' or 'cd ... || return' in case cd fails.\n\nDid you mean: \ncd /home/work/teamcity/TeamCity/piplineWork/Compile/ || exit\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 8:\nfind /home/work/teamcity/TeamCity/piplineWork/Compile/ -maxdepth 1 -mindepth 1 -mmin +${existsTime} -type d -name \"*_*\" -exec rm -rf {} \\;\n                                                                                      ^-----------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n\nDid you mean: \nfind /home/work/teamcity/TeamCity/piplineWork/Compile/ -maxdepth 1 -mindepth 1 -mmin +\"${existsTime}\" -type d -name \"*_*\" -exec rm -rf {} \\;\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 9:\ncd -\n^--^ SC2164 (warning): Use 'cd ... || exit' or 'cd ... || return' in case cd fails.\n^--^ SC2103 (info): Use a ( subshell ) to avoid having to cd back.\n\nDid you mean: \ncd - || exit\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 10:\ncd /home/work/teamcity/TeamCity/piplineWork/feUt/\n^-- SC2164 (warning): Use 'cd ... || exit' or 'cd ... || return' in case cd fails.\n\nDid you mean: \ncd /home/work/teamcity/TeamCity/piplineWork/feUt/ || exit\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 11:\nfind /home/work/teamcity/TeamCity/piplineWork/feUt/ -maxdepth 1 -mindepth 1 -mmin +${existsTime} -type d -name \"*_*\" -exec rm -rf {} \\;\n                                                                                   ^-----------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n\nDid you mean: \nfind /home/work/teamcity/TeamCity/piplineWork/feUt/ -maxdepth 1 -mindepth 1 -mmin +\"${existsTime}\" -type d -name \"*_*\" -exec rm -rf {} \\;\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 12:\ncd -\n^--^ SC2164 (warning): Use 'cd ... || exit' or 'cd ... || return' in case cd fails.\n\nDid you mean: \ncd - || exit\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 13:\ncd /home/work/teamcity/TeamCity/piplineWork/beUt/\n^-- SC2164 (warning): Use 'cd ... || exit' or 'cd ... || return' in case cd fails.\n\nDid you mean: \ncd /home/work/teamcity/TeamCity/piplineWork/beUt/ || exit\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 14:\nfind /home/work/teamcity/TeamCity/piplineWork/beUt/ -maxdepth 1 -mindepth 1 -mmin +${existsTime} -type d -name \"*_*\" -exec rm -rf {} \\;\n                                                                                   ^-----------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n\nDid you mean: \nfind /home/work/teamcity/TeamCity/piplineWork/beUt/ -maxdepth 1 -mindepth 1 -mmin +\"${existsTime}\" -type d -name \"*_*\" -exec rm -rf {} \\;\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 15:\ncd -\n^--^ SC2164 (warning): Use 'cd ... || exit' or 'cd ... || return' in case cd fails.\n\nDid you mean: \ncd - || exit\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 16:\ncd /mnt/ssd01/teamcity/TeamCity/piplineWork/Compile/\n^-- SC2164 (warning): Use 'cd ... || exit' or 'cd ... || return' in case cd fails.\n\nDid you mean: \ncd /mnt/ssd01/teamcity/TeamCity/piplineWork/Compile/ || exit\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 17:\nfind /mnt/ssd01/teamcity/TeamCity/piplineWork/Compile/ -maxdepth 1 -mindepth 1 -mmin +${existsTime} -type d -name \"*_*\" -exec rm -rf {} \\;\n                                                                                      ^-----------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n\nDid you mean: \nfind /mnt/ssd01/teamcity/TeamCity/piplineWork/Compile/ -maxdepth 1 -mindepth 1 -mmin +\"${existsTime}\" -type d -name \"*_*\" -exec rm -rf {} \\;\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 18:\ncd -\n^--^ SC2164 (warning): Use 'cd ... || exit' or 'cd ... || return' in case cd fails.\n\nDid you mean: \ncd - || exit\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 19:\ncd /mnt/ssd01/teamcity/TeamCity/piplineWork/beUt/\n^-- SC2164 (warning): Use 'cd ... || exit' or 'cd ... || return' in case cd fails.\n\nDid you mean: \ncd /mnt/ssd01/teamcity/TeamCity/piplineWork/beUt/ || exit\n\n\nIn teamcity/doris/benchmark/clickbench/common/clean_disk.sh line 20:\nfind /mnt/ssd01/teamcity/TeamCity/piplineWork/beUt/ -maxdepth 1 -mindepth 1 -mmin +${existsTime} -type d -name \"*_*\" -exec rm -rf {} \\;\n                                                                                   ^-----------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n\nDid you mean: \nfind /mnt/ssd01/teamcity/TeamCity/piplineWork/beUt/ -maxdepth 1 -mindepth 1 -mmin +\"${existsTime}\" -type d -name \"*_*\" -exec rm -rf {} \\;\n\n\nIn teamcity/doris/benchmark/clickbench/common/docker_compile.sh line 3:\nid=$(echo $RANDOM)\n   ^-------------^ SC2116 (style): Useless echo? Instead of 'cmd $(echo foo)', just use 'cmd foo'.\n          ^-----^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n          ^-----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \nid=$(echo \"$RANDOM\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/docker_compile.sh line 5:\ndocker run -i --rm --name doris-compile-$id -e TZ=Asia/Shanghai -v /etc/localtime:/etc/localtime:ro -v /home/work/.m2:/root/.m2 -v /home/work/.npm:/root/.npm -v $work_path:/root/doris apache/incubator-doris:build-env-ldb-toolchain-latest /bin/bash -c \"cd /root/doris && sh builds.sh\"\n                                        ^-^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                        ^-^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                                                                                                                 ^--------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                                                                                                                                                 ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \ndocker run -i --rm --name doris-compile-\"$id\" -e TZ=Asia/Shanghai -v /etc/localtime:/etc/localtime:ro -v /home/work/.m2:/root/.m2 -v /home/work/.npm:/root/.npm -v $work_path:/root/doris apache/incubator-doris:build-env-ldb-toolchain-latest /bin/bash -c \"cd /root/doris && sh builds.sh\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/docker_trigger_api.sh line 40:\n    docker_name=\"doris-compile-\"$(echo $RANDOM)\n                               ^-- SC1078 (warning): Did you forget to close this double quoted string?\n\n\nIn teamcity/doris/benchmark/clickbench/common/docker_trigger_api.sh line 42:\n    cmd=\"docker run -i --rm --name doris-compile-$id -e TZ=Asia/Shanghai -v /etc/localtime:/etc/localtime:ro -v /home/work/.m2:/root/.m2 -v /home/work/.npm:/root/.npm -v %system.teamcity.build.workingDir%:/root/doris apache/incubator-doris:build-env-ldb-toolchain-latest /bin/bash -c \"cd /root/doris && sh builds.sh\"\n        ^-- SC1079 (info): This is actually an end quote, but due to next char it looks suspect.\n\n\nIn teamcity/doris/benchmark/clickbench/common/docker_trigger_api.sh line 43:\n\"\n^-- SC1073 (error): Couldn't parse this double quoted string. Fix to allow more checks.\n^-- SC1009 (info): The mentioned syntax error was in this simple command.\n\n\nIn teamcity/doris/benchmark/clickbench/common/docker_trigger_api.sh line 45:\n\n^-- SC1072 (error): Expected end of double quoted string. Fix any mentioned problems and try again.\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_api.sh line 5:\n<<'COMMENT'\n^---------^ SC2188 (warning): This redirection doesn't have a command. Move to its command (or use 'true' as no-op).\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_api.sh line 145:\nif [ $# > 0 ]; then\n   ^--------^ SC2292 (style): Prefer [[ ]] over [ ] for tests in Bash/Ksh.\n        ^-- SC2071 (error): > is for string comparisons. Use -gt instead.\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_api.sh line 147:\n        --cancel_running_build) build_id=$2; cancel_running_build $build_id; shift ;;\n                                                                  ^-------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                                                  ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        --cancel_running_build) build_id=$2; cancel_running_build \"$build_id\"; shift ;;\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_api.sh line 148:\n        --cancel_pending_build) build_id=$2; cancel_pending_build $build_id; shift ;;\n                                                                  ^-------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                                                  ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        --cancel_pending_build) build_id=$2; cancel_pending_build \"$build_id\"; shift ;;\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_api.sh line 149:\n        --show_build_state) build_id=$2; res=$(show_build_state $build_id); echo $res; shift ;;\n                                                                ^-------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                                                ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                                 ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                                                                 ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        --show_build_state) build_id=$2; res=$(show_build_state \"$build_id\"); echo $res; shift ;;\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_api.sh line 150:\n        --show_build_status) build_id=$2; res=$(show_build_status $build_id); echo $res; shift ;;\n                                                                  ^-------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                                                  ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                                   ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                                                                   ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        --show_build_status) build_id=$2; res=$(show_build_status \"$build_id\"); echo $res; shift ;;\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_api.sh line 153:\n        --get_all_builds_of_pr_id) get_all_builds $2; shift ;;\n                                                  ^-- SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n        --get_all_builds_of_pr_id) get_all_builds \"$2\"; shift ;;\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_api.sh line 161:\nmain $@\n     ^-- SC2068 (error): Double quote array expansions to avoid re-splitting elements.\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 4:\nzcp_TOKEN=\"eyJ0eXAiOiAiVENWMiJ9.bW1DcHJpRWNCSktnREhLaHd5Y1lndmpycnJ3.NmEwM2E3YTEtMTVmYy00NGU0LWI1OTAtMzU3MzljODE0Njdk\"\n^-------^ SC2034 (warning): zcp_TOKEN appears unused. Verify use (or export if used externally).\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 7:\nzcp_TEAMCITY_SERVER=\"http://43.129.232.36:8111\"\n^-----------------^ SC2034 (warning): zcp_TEAMCITY_SERVER appears unused. Verify use (or export if used externally).\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 40:\n    state=$(show_build_state $build_id)\n                             ^-------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                             ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    state=$(show_build_state \"$build_id\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 41:\n    if [[ $state == \"running\" ]];then\n          ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    if [[ ${state} == \"running\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 43:\n        cmd=\"/app/rest/builds/id:$build_id\"\n                                 ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        cmd=\"/app/rest/builds/id:${build_id}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 44:\n        cmd=$cmd\" -X POST -H \\'Content-Type: application/json\\' -d \\'{ \\\"buildCancelRequest\\\": {       \\\"comment\\\": \\\"Stop obsolete running builds.\\\",      \\\"readdIntoQueue\\\": \\\"false\\\"    }  }'\"\n            ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        cmd=${cmd}\" -X POST -H \\'Content-Type: application/json\\' -d \\'{ \\\"buildCancelRequest\\\": {       \\\"comment\\\": \\\"Stop obsolete running builds.\\\",      \\\"readdIntoQueue\\\": \\\"false\\\"    }  }'\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 45:\n        url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $TEAMCITY_SERVER/$cmd\"\n                     ^-----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                               ^------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                              ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                       ^--------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                        ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        url=\"curl -s ${HEADER} \\\"${AUTHORIZATION} ${TOKEN}\\\" ${TEAMCITY_SERVER}/${cmd}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 46:\n        res=$(eval $eval)\n                   ^---^ SC2154 (warning): eval is referenced but not assigned (for output from commands, use \"$(eval ...)\" ).\n                   ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                   ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        res=$(eval \"$eval\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 47:\n        check=$(echo $res |grep status=\"UNKNOWN\")\n                     ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                     ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        check=$(echo \"$res\" |grep status=\"UNKNOWN\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 48:\n        if [[ -z $check ]];then\n                 ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        if [[ -z ${check} ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 57:\n    state=$(show_build_state $build_id)\n                             ^-------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                             ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    state=$(show_build_state \"$build_id\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 58:\n    if [[ $state == \"queued\" ]];then\n          ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    if [[ ${state} == \"queued\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 59:\n        cmd=\"app/rest/buildQueue/id:$build_id\"\n                                    ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        cmd=\"app/rest/buildQueue/id:${build_id}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 60:\n        cmd=$cmd\" -X POST -H \\'Content-Type: application/json\\' -d \\'{ \\\"buildCancelRequest\\\": {       \\\"comment\\\": \\\"Cancel obsolete queue build.\\\",      \\\"readdIntoQueue\\\": \\\"false\\\"    }  }'\"\n            ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        cmd=${cmd}\" -X POST -H \\'Content-Type: application/json\\' -d \\'{ \\\"buildCancelRequest\\\": {       \\\"comment\\\": \\\"Cancel obsolete queue build.\\\",      \\\"readdIntoQueue\\\": \\\"false\\\"    }  }'\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 61:\n        url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $TEAMCITY_SERVER/$cmd\"\n                     ^-----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                               ^------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                              ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                       ^--------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                        ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        url=\"curl -s ${HEADER} \\\"${AUTHORIZATION} ${TOKEN}\\\" ${TEAMCITY_SERVER}/${cmd}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 63:\n        res=$(eval $eval)\n                   ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                   ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        res=$(eval \"$eval\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 64:\n        check=$(echo $res |grep status=\"UNKNOWN\")\n                     ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                     ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        check=$(echo \"$res\" |grep status=\"UNKNOWN\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 65:\n        if [[ -z $check ]];then\n                 ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        if [[ -z ${check} ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 73:\n    cmd=\"app/rest/builds?locator=id:$build_id\"\n                                    ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    cmd=\"app/rest/builds?locator=id:${build_id}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 74:\n    url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $TEAMCITY_SERVER/$cmd\"\n                 ^-----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                           ^------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                          ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                   ^--------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                    ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    url=\"curl -s ${HEADER} \\\"${AUTHORIZATION} ${TOKEN}\\\" ${TEAMCITY_SERVER}/${cmd}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 76:\n    res=`eval $url`\n        ^---------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n              ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n              ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    res=$(eval \"$url\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 79:\n    check=$(echo $res|grep \"<builds count=\\\"1\\\"\")\n                 ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                 ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    check=$(echo \"$res\"|grep \"<builds count=\\\"1\\\"\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 80:\n    if [[ -z $check ]]; then\n             ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    if [[ -z ${check} ]]; then\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 84:\n    state=`echo $res |awk -F ' ' '{print $9\" \"$10\" \"$11}'|awk -F \"state=\" '{print $2}'|cut -d ' ' -f 1|sed 's/\\\"//g'`\n          ^-- SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n                ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    state=$(echo \"$res\" |awk -F ' ' '{print $9\" \"$10\" \"$11}'|awk -F \"state=\" '{print $2}'|cut -d ' ' -f 1|sed 's/\\\"//g')\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 86:\n    echo $state\n         ^----^ SC2086 (info): Double quote to prevent globbing and word splitting.\n         ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    echo \"$state\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 91:\n    cmd=\"app/rest/builds?locator=id:$build_id\"\n                                    ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    cmd=\"app/rest/builds?locator=id:${build_id}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 92:\n    url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $TEAMCITY_SERVER/$cmd\"\n                 ^-----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                           ^------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                          ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                   ^--------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                    ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    url=\"curl -s ${HEADER} \\\"${AUTHORIZATION} ${TOKEN}\\\" ${TEAMCITY_SERVER}/${cmd}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 94:\n    res=`eval $url`\n        ^---------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n              ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n              ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    res=$(eval \"$url\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 96:\n    check1=$(echo $res|grep \"<builds count=\\\"1\\\"\")\n                  ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                  ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    check1=$(echo \"$res\"|grep \"<builds count=\\\"1\\\"\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 97:\n    if [[ -z $check1 ]]; then\n             ^-----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    if [[ -z ${check1} ]]; then\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 105:\n    state=`echo $res |awk -F ' ' '{print $9\" \"$10\" \"$11}'|awk -F \"status=\" '{print $2}'|cut -d ' ' -f 1|sed 's/\\\"//g'`\n          ^-- SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n                ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    state=$(echo \"$res\" |awk -F ' ' '{print $9\" \"$10\" \"$11}'|awk -F \"status=\" '{print $2}'|cut -d ' ' -f 1|sed 's/\\\"//g')\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 107:\n    echo $state\n         ^----^ SC2086 (info): Double quote to prevent globbing and word splitting.\n         ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    echo \"$state\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 112:\n    cmd=\"app/rest/builds?locator=branch:$branch\"\n                                        ^-----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    cmd=\"app/rest/builds?locator=branch:${branch}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 113:\n    url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $TEAMCITY_SERVER/$cmd\"\n                 ^-----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                           ^------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                          ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                   ^--------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                    ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    url=\"curl -s ${HEADER} \\\"${AUTHORIZATION} ${TOKEN}\\\" ${TEAMCITY_SERVER}/${cmd}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 114:\n    res=`eval $url`\n        ^---------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n              ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n              ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    res=$(eval \"$url\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 119:\n    url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $TEAMCITY_SERVER/$cmd\"\n                 ^-----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                        ^-^ SC2089 (warning): Quotes/backslashes will be treated literally. Use an array.\n                           ^------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                          ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                   ^--------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                    ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    url=\"curl -s ${HEADER} \\\"${AUTHORIZATION} ${TOKEN}\\\" ${TEAMCITY_SERVER}/${cmd}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 121:\n    res=eval $url\n    ^-----------^ SC2209 (warning): Use var=$(command) to assign output (or quote to assign string).\n             ^--^ SC2090 (warning): Quotes/backslashes in this variable will not be respected.\n             ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    res=eval ${url}\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 126:\n    url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $JSON_HEADER $TEAMCITY_SERVER/$cmd\"\n                 ^-----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                           ^------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                          ^----^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                   ^----------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                ^--------------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                                 ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    url=\"curl -s ${HEADER} \\\"${AUTHORIZATION} ${TOKEN}\\\" ${JSON_HEADER} ${TEAMCITY_SERVER}/${cmd}\"\n\n\nIn teamcity/doris/benchmark/clickbench/common/teamcity_common.sh line 128:\n    res=`eval $url`\n        ^---------^ SC2006 (style): Use $(...) notation instead of legacy backticks `...`.\n              ^--^ SC2086 (info): Double quote to prevent globbing and word splitting.\n              ^--^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    res=$(eval \"$url\")\n\n\nIn teamcity/doris/benchmark/clickbench/common/test.sh line 12:\n    while [ 1 -eq 1 ]\n          ^---------^ SC2292 (style): Prefer [[ ]] over [ ] for tests in Bash/Ksh.\n              ^-^ SC2050 (warning): This expression is constant. Did you forget the $ on a variable?\n\nDid you mean: \n    while [[ 1 -eq 1 ]]\n\n\nIn teamcity/doris/benchmark/clickbench/common/test.sh line 15:\n\tres=($(curl --header \"authorization: Bearer ${GITHUB_TOKEN}\" https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files?per_page=$per_page\\&page=$page|jq -r '.[]|select(.status = \"removed\")| .filename'))\n             ^-- SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).\n                                                                                                  ^------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                                                                           ^-----^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                                                                                         ^------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                                                                                                                                                 ^-------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                                                                                                                 ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                                                                                                                                 ^---^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                                                                                                                                 ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n\tres=($(curl --header \"authorization: Bearer ${GITHUB_TOKEN}\" https://api.github.com/repos/\"${owner}\"/\"${repo}\"/pulls/\"${pr_id}\"/files?per_page=\"$per_page\"\\&page=$page|jq -r '.[]|select(.status = \"removed\")| .filename'))\n\n\nIn teamcity/doris/benchmark/clickbench/common/test.sh line 17:\n        if [ ${res_len} -ne 0 ];then\n           ^------------------^ SC2292 (style): Prefer [[ ]] over [ ] for tests in Bash/Ksh.\n             ^--------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n        if [[ \"${res_len}\" -ne 0 ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/test.sh line 18:\n\t    let page+=1\n            ^---------^ SC2219 (style): Instead of 'let expr', prefer (( expr )) .\n\n\nIn teamcity/doris/benchmark/clickbench/common/test.sh line 20:\n\t    files=(${res[@]} ${files[*]})\n                   ^-------^ SC2206 (warning): Quote to prevent word splitting/globbing, or split robustly with mapfile or read -a.\n                             ^---------^ SC2206 (warning): Quote to prevent word splitting/globbing, or split robustly with mapfile or read -a.\n\n\nIn teamcity/doris/benchmark/clickbench/common/test.sh line 30:\nout=($(get_all_change_files 11154))\n     ^---------------------------^ SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check.sh line 3:\n<<'COMMENT'\n^---------^ SC2188 (warning): This redirection doesn't have a command. Move to its command (or use 'true' as no-op).\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 26:\n    res=($(curl https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files|jq -r '.[]|select(.status != \"removed\")| .filename'))\n         ^-- SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).\n                                             ^------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                      ^-----^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                                    ^------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n    res=($(curl https://api.github.com/repos/\"${owner}\"/\"${repo}\"/pulls/\"${pr_id}\"/files|jq -r '.[]|select(.status != \"removed\")| .filename'))\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 30:\n    for file in ${res[@]}\n                ^-------^ SC2068 (error): Double quote array expansions to avoid re-splitting elements.\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 33:\n        file_dir=$(echo $file|cut -d '/' -f 1)\n                        ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                        ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        file_dir=$(echo \"$file\"|cut -d '/' -f 1)\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 34:\n        if [[ $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]];then\n              ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                     ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        if [[ ${file_dir} == \"docs\" || ${file_dir} == \"fs_brokers\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 35:\n            let doc_num+=1\n            ^------------^ SC2219 (style): Instead of 'let expr', prefer (( expr )) .\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 46:\n    if [[ $doc_num -eq $file_nums ]];then\n          ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                       ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    if [[ ${doc_num} -eq ${file_nums} ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 60:\n    res=($(curl https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files|jq -r '.[]|select(.status != \"removed\")| .filename'))\n         ^-- SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).\n                                             ^------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                      ^-----^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                                    ^------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n    res=($(curl https://api.github.com/repos/\"${owner}\"/\"${repo}\"/pulls/\"${pr_id}\"/files|jq -r '.[]|select(.status != \"removed\")| .filename'))\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 65:\n    for file in ${res[@]}\n                ^-------^ SC2068 (error): Double quote array expansions to avoid re-splitting elements.\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 68:\n        file_dir=$(echo $file|cut -d '/' -f 1)\n                        ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                        ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        file_dir=$(echo \"$file\"|cut -d '/' -f 1)\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 69:\n        if [[ $file_dir == \"be\" || $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]];then\n              ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                   ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                          ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        if [[ ${file_dir} == \"be\" || ${file_dir} == \"docs\" || ${file_dir} == \"fs_brokers\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 70:\n            let doc_num+=1\n            ^------------^ SC2219 (style): Instead of 'let expr', prefer (( expr )) .\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 74:\n    if [[ $doc_num -eq $file_nums ]];then\n          ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                       ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    if [[ ${doc_num} -eq ${file_nums} ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 88:\n    res=($(curl https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files|jq -r '.[]|select(.status != \"removed\")| .filename'))\n         ^-- SC2207 (warning): Prefer mapfile or read -a to split command output (or quote to avoid splitting).\n                                             ^------^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                      ^-----^ SC2248 (style): Prefer double quoting even when variables don't contain special characters.\n                                                                    ^------^ SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n    res=($(curl https://api.github.com/repos/\"${owner}\"/\"${repo}\"/pulls/\"${pr_id}\"/files|jq -r '.[]|select(.status != \"removed\")| .filename'))\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 93:\n    for file in ${res[@]}\n                ^-------^ SC2068 (error): Double quote array expansions to avoid re-splitting elements.\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 96:\n        file_dir=$(echo $file|cut -d '/' -f 1)\n                        ^---^ SC2086 (info): Double quote to prevent globbing and word splitting.\n                        ^---^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        file_dir=$(echo \"$file\"|cut -d '/' -f 1)\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 97:\n        if [[ $file_dir == \"fe\" || $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]];then\n              ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                   ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                                                          ^-------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n        if [[ ${file_dir} == \"fe\" || ${file_dir} == \"docs\" || ${file_dir} == \"fs_brokers\" ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 98:\n            let doc_num+=1\n            ^------------^ SC2219 (style): Instead of 'let expr', prefer (( expr )) .\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 102:\n    if [[ $doc_num -eq $file_nums ]];then\n          ^------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n                       ^--------^ SC2250 (style): Prefer putting braces around variable references even when not strictly required.\n\nDid you mean: \n    if [[ ${doc_num} -eq ${file_nums} ]];then\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 113:\nif [ $# > 0 ]; then\n   ^--------^ SC2292 (style): Prefer [[ ]] over [ ] for tests in Bash/Ksh.\n        ^-- SC2071 (error): > is for string comparisons. Use -gt instead.\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 115:\n        --is_modify_only_invoved_be) check_all_change_files_is_under_be $2; shift ;;\n                                                                        ^-- SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n        --is_modify_only_invoved_be) check_all_change_files_is_under_be \"$2\"; shift ;;\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 116:\n        --is_modify_only_invoved_fe) check_all_change_files_is_under_fe $2; shift ;;\n                                                                        ^-- SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n        --is_modify_only_invoved_fe) check_all_change_files_is_under_fe \"$2\"; shift ;;\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 117:\n\t--is_modify_only_doc) check_all_change_files_is_under_doc $2; shift ;;\n                                                                  ^-- SC2086 (info): Double quote to prevent globbing and word splitting.\n\nDid you mean: \n\t--is_modify_only_doc) check_all_change_files_is_under_doc \"$2\"; shift ;;\n\n\nIn teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh line 124:\nmain $@\n     ^-- SC2068 (error): Double quote array expansions to avoid re-splitting elements.\n\nFor more information:\n  https://www.shellcheck.net/wiki/SC2068 -- Double quote array expansions to ...\n  https://www.shellcheck.net/wiki/SC2071 -- > is for string comparisons. Use ...\n  https://www.shellcheck.net/wiki/SC1078 -- Did you forget to close this doub...\n----------\n\nYou can address the above issues in one of three ways:\n1. Manually correct the issue in the offending shell script;\n2. Disable specific issues by adding the comment:\n  # shellcheck disable=NNNN\nabove the line that contains the issue, where NNNN is the error code;\n3. Add '-e NNNN' to the SHELLCHECK_OPTS setting in your .yml action file.\n\n\n\n```\n</details>\n\n<details>\n<summary>shfmt errors</summary>\n\n```\n\n'shfmt ' returned error 1 finding the following formatting issues:\n\n----------\n--- teamcity/doris/benchmark/clickbench/common/check_and_kill_deleted_proc.sh.orig\n+++ teamcity/doris/benchmark/clickbench/common/check_and_kill_deleted_proc.sh\n@@ -8,23 +8,22 @@\n echo \"====================================\"\n echo \"START TO DETECT RESIDUAL PROCESSES!\"\n \n-check=$(lsof -i:$port|awk '{print $2}'|wc -l)\n-if [ \"check$check\" != \"check0\" ];then\n-    if [ \"check\"${case_level} == \"check\" ];then\n-        check_res=$(pwdx `lsof -i:$port|grep -v PID|awk '{print $2}'`|grep $env_name|grep deleted||wc -l)\n+check=$(lsof -i:$port | awk '{print $2}' | wc -l)\n+if [ \"check$check\" != \"check0\" ]; then\n+    if [ \"check\"${case_level} == \"check\" ]; then\n+        check_res=$(pwdx $(lsof -i:$port | grep -v PID | awk '{print $2}') | grep $env_name | grep deleted || wc -l)\n     else\n-        check_res=$(pwdx `lsof -i:$port|grep -v PID|awk '{print $2}'`|grep $env_name|grep $case_level|grep deleted||wc -l)\n+        check_res=$(pwdx $(lsof -i:$port | grep -v PID | awk '{print $2}') | grep $env_name | grep $case_level | grep deleted || wc -l)\n     fi\n-    if [ \"check$check_res\" != \"check0\" ];then\n-        be_pid=(`lsof -i:$port|grep -v PID|awk '{print $2}'`)\n+    if [ \"check$check_res\" != \"check0\" ]; then\n+        be_pid=($(lsof -i:$port | grep -v PID | awk '{print $2}'))\n         echo \"Detected residual processes: ${be_pid}\"\n         echo \"kill residual processes: kill -9 ${be_pid}\"\n         kill -9 $be_pid\n     fi\n else\n-        echo \"No residual processes\"\n+    echo \"No residual processes\"\n fi\n \n-\n echo \"FINISH DETECT RESIDUAL PROCESSES!\"\n echo \"===================================\"\n--- teamcity/doris/benchmark/clickbench/common/check_change_file.sh.orig\n+++ teamcity/doris/benchmark/clickbench/common/check_change_file.sh\n@@ -7,7 +7,7 @@\n GITHUB_TOKEN=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\n \n usage() {\n-  echo \"\n+    echo \"\n Usage: $0 <options>\n   Optional options:\n \n@@ -16,23 +16,21 @@\n     $0 --is_modify_only_invoved_fe pr_id          if pr changed code only invoved fe doc, fs_brocker, return 0; else return 2\n     $0 --is_modify_only_invoved_doc pr_id         if pr changed code only invoved doc, fs_brocker, return 0; else return 2\n   \"\n-  exit 1\n+    exit 1\n }\n \n-\n-function get_all_change_files(){\n+function get_all_change_files() {\n     pr_id=$1\n     files=()\n \n     page=1\n     per_page=100\n-    while [ 1 -eq 1 ]\n-    do\n+    while [ 1 -eq 1 ]; do\n         #echo \"curl --header 'authorization: Bearer ${GITHUB_TOKEN}' https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files?per_page=$per_page\\&page=$page\"\n-        res=($(curl --header \"authorization: Bearer ${GITHUB_TOKEN}\" https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files?per_page=$per_page\\&page=$page|jq -r '.[]|select(.status = \"removed\")| .filename'))\n+        res=($(curl --header \"authorization: Bearer ${GITHUB_TOKEN}\" https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files?per_page=$per_page\\&page=$page | jq -r '.[]|select(.status = \"removed\")| .filename'))\n         res_len=${#res[@]}\n         #echo \"================\"$res_len\n-        if [ ${res_len} -ne 0 ];then\n+        if [ ${res_len} -ne 0 ]; then\n             let page+=1\n             #files=\"${res[@]}\"\"$files\"\n             files=(${res[@]} ${files[*]})\n@@ -44,8 +42,7 @@\n     echo \"${files[@]}\"\n }\n \n-\n-function check_removed_change_file(){\n+function check_removed_change_file() {\n     pr_id=$1\n     module=$2\n     owner='apache'\n@@ -55,26 +52,25 @@\n     file_nums=${#res[@]}\n     is_code_change_flag=false\n     module_file=0\n-    for file in ${res[@]}\n-    do\n-\t#echo \"$file\"\n-\tfile_dir=$(echo $file|cut -d '/' -f 1)\n-        file_type=$(echo $file|rev|cut -d / -f 1|cut -d '.' -f 1|rev)\n-\t#if [[  \"check$file_dir\" == \"check${module}\" &&  ($file_type == \"cpp\" || $file_type == \"c\" || $file_type == \"java\" || $file_type == \"py\" || $file_type == \"h\" || $file_type == 'js') ]];then\n-\tif [[ $file_type == \"cpp\" || $file_type == \"c\" || $file_type == \"java\" || $file_type == \"py\" || $file_type == \"h\" || $file_type == 'js' ]];then\n-\t    echo \"code has changed, ${file} is deleted\"\n-\t    is_code_change_flag=true\n-\tfi\n-\tif [[ \"check$file_dir\" == \"check${module}\" ]];then\n+    for file in ${res[@]}; do\n+        #echo \"$file\"\n+        file_dir=$(echo $file | cut -d '/' -f 1)\n+        file_type=$(echo $file | rev | cut -d / -f 1 | cut -d '.' -f 1 | rev)\n+        #if [[  \"check$file_dir\" == \"check${module}\" &&  ($file_type == \"cpp\" || $file_type == \"c\" || $file_type == \"java\" || $file_type == \"py\" || $file_type == \"h\" || $file_type == 'js') ]];then\n+        if [[ $file_type == \"cpp\" || $file_type == \"c\" || $file_type == \"java\" || $file_type == \"py\" || $file_type == \"h\" || $file_type == 'js' ]]; then\n+            echo \"code has changed, ${file} is deleted\"\n+            is_code_change_flag=true\n+        fi\n+        if [[ \"check$file_dir\" == \"check${module}\" ]]; then\n             let module_file+=1\n-\tfi\n+        fi\n     done\n \n-    if [[ \"${is_code_change_flag}\" == \"false\" ]];then\n-\techo \"NO CODE FILE DELETED, PASSED!\"\n+    if [[ \"${is_code_change_flag}\" == \"false\" ]]; then\n+        echo \"NO CODE FILE DELETED, PASSED!\"\n         return 0\n     else\n-\techo \"CODE FILE BE DELETED\"\n+        echo \"CODE FILE BE DELETED\"\n         return 2\n     fi\n \n@@ -95,20 +91,18 @@\n \n     doc_num=0\n     doc_sql_manual_num=0\n-    for file in ${res[@]}\n-    do\n+    for file in ${res[@]}; do\n         #check change file is on docs/fs_brokers or not\n-\techo \"$file\"\n-        file_dir=$(echo $file|cut -d '/' -f 1)\n-\tif [[ $file_dir == \"docs\" ]];then\n+        echo \"$file\"\n+        file_dir=$(echo $file | cut -d '/' -f 1)\n+        if [[ $file_dir == \"docs\" ]]; then\n             let doc_num+=1\n-\tfi\n-        if [[ \"$file\" =~ \"docs/zh-CN/docs/sql-manual/\" || \"$file\" =~ \"docs/en/docs/sql-manual/\" ]];then\n+        fi\n+        if [[ \"$file\" =~ \"docs/zh-CN/docs/sql-manual/\" || \"$file\" =~ \"docs/en/docs/sql-manual/\" ]]; then\n             let doc_sql_manual_num+=1\n             continue\n         fi\n \n-\n         #check change file is md/txt/doc file\n         #file_type=$(echo $file|cut -d '.' -f 2)\n         #if [[ $file_type == \"md\" || $file_type == \"txt\" || $file_type == \"doc\" ]];then\n@@ -120,7 +114,7 @@\n     echo \"doc_num: $doc_num\"\n     echo \"file_nums: $file_nums\"\n     echo \"doc_sql_manual_num: $doc_sql_manual_num\"\n-    if [[ $doc_num -eq $file_nums && $doc_sql_manual_num -eq 0 ]];then\n+    if [[ $doc_num -eq $file_nums && $doc_sql_manual_num -eq 0 ]]; then\n         echo \"JUST MODIFY DOCUMENT, NO COED CHSNGED, PASSED!\"\n         return 0\n     else\n@@ -143,17 +137,16 @@\n \n     doc_num=0\n     echo \"START CHECK CODE IS ONLY RELATED BE OR NOT\"\n-    for file in ${res[@]}\n-    do\n+    for file in ${res[@]}; do\n         echo \"$file\"\n         #check change file is on be or not\n-        file_dir=$(echo $file|cut -d '/' -f 1)\n-        if [[ $file_dir == \"be\" || $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]];then\n+        file_dir=$(echo $file | cut -d '/' -f 1)\n+        if [[ $file_dir == \"be\" || $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]]; then\n             let doc_num+=1\n             continue\n-\tfi\n+        fi\n     done\n-    if [[ $doc_num -eq $file_nums ]];then\n+    if [[ $doc_num -eq $file_nums ]]; then\n         echo \"JUST MODIFY BE CODE, NO NEED RUN FE UT, PASSED!\"\n         return 0\n     else\n@@ -176,17 +169,16 @@\n \n     doc_num=0\n     echo \"START CHECK CODE IS ONLY RELATED FE OR NOT\"\n-    for file in ${res[@]}\n-    do\n+    for file in ${res[@]}; do\n         echo \"$file\"\n         #check change file is on be or not\n-        file_dir=$(echo $file|cut -d '/' -f 1)\n-        if [[ $file_dir == \"fe\" || $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]];then\n+        file_dir=$(echo $file | cut -d '/' -f 1)\n+        if [[ $file_dir == \"fe\" || $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]]; then\n             let doc_num+=1\n             continue\n         fi\n     done\n-    if [[ $doc_num -eq $file_nums ]];then\n+    if [[ $doc_num -eq $file_nums ]]; then\n         echo \"JUST MODIFY FE CODE, NO NEED RUN BE UT, PASSED!\"\n         return 0\n     else\n@@ -197,42 +189,49 @@\n \n main() {\n \n-if [ $# > 0 ]; then\n-    case \"$1\" in\n+    if [ $# ] >0; then\n+        case \"$1\" in\n         --is_modify_only_invoved_be)\n-\t    check_removed_change_file $2 \"be\"\n-\t    check_1=$?\n-\t    check_all_change_files_is_under_be $2\n-\t    check_2=$?\n-\t    echo ${check_1}\n-\t    echo ${check_2}\n-\t    res=`expr $check_1 \\* $check_2`\n-\t    exit $res\n-\t    shift ;;\n+            check_removed_change_file $2 \"be\"\n+            check_1=$?\n+            check_all_change_files_is_under_be $2\n+            check_2=$?\n+            echo ${check_1}\n+            echo ${check_2}\n+            res=$(expr $check_1 \\* $check_2)\n+            exit $res\n+            shift\n+            ;;\n         --is_modify_only_invoved_fe)\n-\t    check_removed_change_file $2 \"fe\"\n-\t    check_1=$?\n-\t    check_all_change_files_is_under_fe $2\n-\t    check_2=$?\n-            res=`expr $check_1 \\* $check_2`\n-\t    echo ${check_1}\n-\t    echo ${check_2}\n-\t    exit $res\n-\t    shift ;;\n-\t--is_modify_only_invoved_doc)\n-\t    check_removed_change_file $2 \"docs\"\n-\t    check_1=$?\n-\t    check_all_change_files_is_under_doc $2\n-\t    check_2=$?\n-            res=`expr $check_1 + $check_2`\n-\t    echo ${check_1}\n+            check_removed_change_file $2 \"fe\"\n+            check_1=$?\n+            check_all_change_files_is_under_fe $2\n+            check_2=$?\n+            res=$(expr $check_1 \\* $check_2)\n+            echo ${check_1}\n             echo ${check_2}\n-\t    exit $res\n-\t    shift ;;\n-        *) echo \"ERROR\"; usage; exit 1 ;;\n-    esac\n+            exit $res\n+            shift\n+            ;;\n+        --is_modify_only_invoved_doc)\n+            check_removed_change_file $2 \"docs\"\n+            check_1=$?\n+            check_all_change_files_is_under_doc $2\n+            check_2=$?\n+            res=$(expr $check_1 + $check_2)\n+            echo ${check_1}\n+            echo ${check_2}\n+            exit $res\n+            shift\n+            ;;\n+        *)\n+            echo \"ERROR\"\n+            usage\n+            exit 1\n+            ;;\n+        esac\n \n-fi\n+    fi\n }\n \n main $@\n--- teamcity/doris/benchmark/clickbench/common/clean_disk.sh.orig\n+++ teamcity/doris/benchmark/clickbench/common/clean_disk.sh\n@@ -3,7 +3,7 @@\n df -h\n existsTime=720\n #delete files created 20 hours ago\n-echo `date \"+%Y-%m-%d %H:%M:%S\"` \"start to clear oudate file!\"\n+echo $(date \"+%Y-%m-%d %H:%M:%S\") \"start to clear oudate file!\"\n cd /home/work/teamcity/TeamCity/piplineWork/Compile/\n find /home/work/teamcity/TeamCity/piplineWork/Compile/ -maxdepth 1 -mindepth 1 -mmin +${existsTime} -type d -name \"*_*\" -exec rm -rf {} \\;\n cd -\nteamcity/doris/benchmark/clickbench/common/docker_trigger_api.sh:43:1: reached EOF without closing quote \"\n--- teamcity/doris/benchmark/clickbench/common/teamcity_api.sh.orig\n+++ teamcity/doris/benchmark/clickbench/common/teamcity_api.sh\n@@ -139,23 +139,55 @@\n }\n COMMENT\n \n-\n main() {\n \n-if [ $# > 0 ]; then\n-    case \"$1\" in \n-        --cancel_running_build) build_id=$2; cancel_running_build $build_id; shift ;;\n-        --cancel_pending_build) build_id=$2; cancel_pending_build $build_id; shift ;;\n-        --show_build_state) build_id=$2; res=$(show_build_state $build_id); echo $res; shift ;;\n-        --show_build_status) build_id=$2; res=$(show_build_status $build_id); echo $res; shift ;;\n-        --show_latest_builds) get_latest_builds; shift ;;\n-        --show_queued_builds) get_queued_builds; shift ;;\n-        --get_all_builds_of_pr_id) get_all_builds $2; shift ;;\n-\t--help) usage; shift ;;\n-        *) echo \"ERROR\"; exit 1 ;;\n-    esac\n+    if [ $# ] >0; then\n+        case \"$1\" in\n+        --cancel_running_build)\n+            build_id=$2\n+            cancel_running_build $build_id\n+            shift\n+            ;;\n+        --cancel_pending_build)\n+            build_id=$2\n+            cancel_pending_build $build_id\n+            shift\n+            ;;\n+        --show_build_state)\n+            build_id=$2\n+            res=$(show_build_state $build_id)\n+            echo $res\n+            shift\n+            ;;\n+        --show_build_status)\n+            build_id=$2\n+            res=$(show_build_status $build_id)\n+            echo $res\n+            shift\n+            ;;\n+        --show_latest_builds)\n+            get_latest_builds\n+            shift\n+            ;;\n+        --show_queued_builds)\n+            get_queued_builds\n+            shift\n+            ;;\n+        --get_all_builds_of_pr_id)\n+            get_all_builds $2\n+            shift\n+            ;;\n+        --help)\n+            usage\n+            shift\n+            ;;\n+        *)\n+            echo \"ERROR\"\n+            exit 1\n+            ;;\n+        esac\n \n-fi\n+    fi\n }\n \n main $@\n--- teamcity/doris/benchmark/clickbench/common/teamcity_common.sh.orig\n+++ teamcity/doris/benchmark/clickbench/common/teamcity_common.sh\n@@ -11,7 +11,7 @@\n JSON_HEADER=\"--header \\\"Accept: application/json\\\"\"\n \n usage() {\n-  echo \"\n+    echo \"\n Usage: $0 <options>\n   Optional options:\n      --cancel_running_build build_id    cancel a specific running build\n@@ -32,21 +32,21 @@\n     $0 --show_queued_builds             show all queued builds\n     $0 --get_all_builds_of_pr_id 9151   get all 9151 builds\n   \"\n-  exit 1\n+    exit 1\n }\n \n cancel_running_build() {\n     build_id=$1\n     state=$(show_build_state $build_id)\n-    if [[ $state == \"running\" ]];then\n+    if [[ $state == \"running\" ]]; then\n         #curl --header \"Authorization: Bearer eyJ0eXAiOiAiVENWMiJ9.bW1DcHJpRWNCSktnREhLaHd5Y1lndmpycnJ3.NmEwM2E3YTEtMTVmYy00NGU0LWI1OTAtMzU3MzljODE0Njdk\" http://43.129.232.36:8111/app/rest/builds/id:333 -X POST -H 'Content-Type: application/json' -d '{ \"buildCancelRequest\": {       \"comment\": \"Already running builds will be stopped.\",      \"readdIntoQueue\": \"false\"    }  }'\n         cmd=\"/app/rest/builds/id:$build_id\"\n         cmd=$cmd\" -X POST -H \\'Content-Type: application/json\\' -d \\'{ \\\"buildCancelRequest\\\": {       \\\"comment\\\": \\\"Stop obsolete running builds.\\\",      \\\"readdIntoQueue\\\": \\\"false\\\"    }  }'\"\n         url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $TEAMCITY_SERVER/$cmd\"\n         res=$(eval $eval)\n-        check=$(echo $res |grep status=\"UNKNOWN\")\n-        if [[ -z $check ]];then\n-           echo \"cancel fail!\"\n+        check=$(echo $res | grep status=\"UNKNOWN\")\n+        if [[ -z $check ]]; then\n+            echo \"cancel fail!\"\n         fi\n     fi\n \n@@ -55,15 +55,15 @@\n cancel_pending_build() {\n     build_id=$1\n     state=$(show_build_state $build_id)\n-    if [[ $state == \"queued\" ]];then\n+    if [[ $state == \"queued\" ]]; then\n         cmd=\"app/rest/buildQueue/id:$build_id\"\n         cmd=$cmd\" -X POST -H \\'Content-Type: application/json\\' -d \\'{ \\\"buildCancelRequest\\\": {       \\\"comment\\\": \\\"Cancel obsolete queue build.\\\",      \\\"readdIntoQueue\\\": \\\"false\\\"    }  }'\"\n         url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $TEAMCITY_SERVER/$cmd\"\n         #echo $url\n         res=$(eval $eval)\n-        check=$(echo $res |grep status=\"UNKNOWN\")\n-        if [[ -z $check ]];then\n-           echo \"cancel fail!\"\n+        check=$(echo $res | grep status=\"UNKNOWN\")\n+        if [[ -z $check ]]; then\n+            echo \"cancel fail!\"\n         fi\n     fi\n }\n@@ -73,15 +73,15 @@\n     cmd=\"app/rest/builds?locator=id:$build_id\"\n     url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $TEAMCITY_SERVER/$cmd\"\n     #echo $url\n-    res=`eval $url`\n-    \n+    res=$(eval $url)\n+\n     #check build exist or not\n-    check=$(echo $res|grep \"<builds count=\\\"1\\\"\")\n+    check=$(echo $res | grep \"<builds count=\\\"1\\\"\")\n     if [[ -z $check ]]; then\n         return\n     fi\n     #get state\n-    state=`echo $res |awk -F ' ' '{print $9\" \"$10\" \"$11}'|awk -F \"state=\" '{print $2}'|cut -d ' ' -f 1|sed 's/\\\"//g'`\n+    state=$(echo $res | awk -F ' ' '{print $9\" \"$10\" \"$11}' | awk -F \"state=\" '{print $2}' | cut -d ' ' -f 1 | sed 's/\\\"//g')\n     #only 2 state: queued and finished\n     echo $state\n }\n@@ -91,9 +91,9 @@\n     cmd=\"app/rest/builds?locator=id:$build_id\"\n     url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $TEAMCITY_SERVER/$cmd\"\n     #echo $url\n-    res=`eval $url`\n+    res=$(eval $url)\n     #check build exist or not\n-    check1=$(echo $res|grep \"<builds count=\\\"1\\\"\")\n+    check1=$(echo $res | grep \"<builds count=\\\"1\\\"\")\n     if [[ -z $check1 ]]; then\n         return\n     fi\n@@ -102,8 +102,8 @@\n     #if [[ -z $check ]]; then\n     #    return\n     #fi\n-    state=`echo $res |awk -F ' ' '{print $9\" \"$10\" \"$11}'|awk -F \"status=\" '{print $2}'|cut -d ' ' -f 1|sed 's/\\\"//g'`\n-    #only 2 state: \n+    state=$(echo $res | awk -F ' ' '{print $9\" \"$10\" \"$11}' | awk -F \"status=\" '{print $2}' | cut -d ' ' -f 1 | sed 's/\\\"//g')\n+    #only 2 state:\n     echo $state\n }\n \n@@ -111,7 +111,7 @@\n     branch=$1\n     cmd=\"app/rest/builds?locator=branch:$branch\"\n     url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $TEAMCITY_SERVER/$cmd\"\n-    res=`eval $url`\n+    res=$(eval $url)\n }\n \n get_latest_builds() {\n@@ -125,14 +125,12 @@\n     cmd=\"app/rest/buildQueue\"\n     url=\"curl -s $HEADER \\\"$AUTHORIZATION $TOKEN\\\" $JSON_HEADER $TEAMCITY_SERVER/$cmd\"\n     #echo $url\n-    res=`eval $url`\n+    res=$(eval $url)\n     #a=$(echo $res|grep -oP 'build id=.*'|head -1)\n-    \n-    \n+\n     #a=$res\n     #while [[ \"check\"$a != \"check\" ]]\n     #do\n     #    a=$(echo $a|awk -F 'build id=\"' '{print $2}')\n     #done\n }\n-\n--- teamcity/doris/benchmark/clickbench/common/test.sh.orig\n+++ teamcity/doris/benchmark/clickbench/common/test.sh\n@@ -3,33 +3,29 @@\n repo=doris\n GITHUB_TOKEN=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\n \n-function get_all_change_files(){\n+function get_all_change_files() {\n     pr_id=$1\n     files=()\n \n     page=1\n     per_page=100\n-    while [ 1 -eq 1 ]\n-    do\n-\t#echo \"curl --header 'authorization: Bearer ${GITHUB_TOKEN}' https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files?per_page=$per_page\\&page=$page\"\n-\tres=($(curl --header \"authorization: Bearer ${GITHUB_TOKEN}\" https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files?per_page=$per_page\\&page=$page|jq -r '.[]|select(.status = \"removed\")| .filename'))\n+    while [ 1 -eq 1 ]; do\n+        #echo \"curl --header 'authorization: Bearer ${GITHUB_TOKEN}' https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files?per_page=$per_page\\&page=$page\"\n+        res=($(curl --header \"authorization: Bearer ${GITHUB_TOKEN}\" https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files?per_page=$per_page\\&page=$page | jq -r '.[]|select(.status = \"removed\")| .filename'))\n         res_len=${#res[@]}\n-        if [ ${res_len} -ne 0 ];then\n-\t    let page+=1\n+        if [ ${res_len} -ne 0 ]; then\n+            let page+=1\n             #files=\"${res[@]}\"\"$files\"\n-\t    files=(${res[@]} ${files[*]})\n+            files=(${res[@]} ${files[*]})\n         else\n             break\n         fi\n-\techo \n+        echo\n     done\n     echo \"${files[@]}\"\n }\n \n-\n out=($(get_all_change_files 11154))\n \n-\n-\n echo \"==================\"\n echo \"${out[@]}\"\n--- teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh.orig\n+++ teamcity/doris/benchmark/clickbench/common/zcp_check_change_file.sh\n@@ -3,9 +3,8 @@\n #res=(`git diff --name-only HEAD~ HEAD`)\n #file_nums=${#res[@]}\n \n-\n usage() {\n-  echo \"\n+    echo \"\n Usage: $0 <options>\n   Optional options:\n \n@@ -14,24 +13,22 @@\n     $0 --is_modify_only_invoved_fe pr_id          if pr changed code only invoved fe doc, fs_brocker, return 0; else return 2\n     $0 --is_modify_only_invoved_doc pr_id         if pr changed code only invoved doc, fs_brocker, return 0; else return 2\n   \"\n-  exit 1\n+    exit 1\n }\n \n-\n function check_all_change_files_is_under_doc() {\n \n     pr_id=$1\n     owner='apache'\n     repo='incubator-doris'\n-    res=($(curl https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files|jq -r '.[]|select(.status != \"removed\")| .filename'))\n+    res=($(curl https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files | jq -r '.[]|select(.status != \"removed\")| .filename'))\n     file_nums=${#res[@]}\n \n     doc_num=0\n-    for file in ${res[@]}\n-    do\n+    for file in ${res[@]}; do\n         #check change file is on docs/fs_brokers or not\n-        file_dir=$(echo $file|cut -d '/' -f 1)\n-        if [[ $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]];then\n+        file_dir=$(echo $file | cut -d '/' -f 1)\n+        if [[ $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]]; then\n             let doc_num+=1\n             continue\n         fi\n@@ -43,7 +40,7 @@\n         #fi\n     done\n \n-    if [[ $doc_num -eq $file_nums ]];then\n+    if [[ $doc_num -eq $file_nums ]]; then\n         echo \"JUST MODIFY DOCUMENT, NO COED CHSNGED, PASSED!\"\n         exit 0\n     else\n@@ -57,21 +54,20 @@\n     pr_id=$1\n     owner='apache'\n     repo='incubator-doris'\n-    res=($(curl https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files|jq -r '.[]|select(.status != \"removed\")| .filename'))\n+    res=($(curl https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files | jq -r '.[]|select(.status != \"removed\")| .filename'))\n     file_nums=${#res[@]}\n \n     doc_num=0\n     echo \"START CHECK CODE IS ONLY RELATED BE OR NOT\"\n-    for file in ${res[@]}\n-    do\n+    for file in ${res[@]}; do\n         #check change file is on be or not\n-        file_dir=$(echo $file|cut -d '/' -f 1)\n-        if [[ $file_dir == \"be\" || $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]];then\n+        file_dir=$(echo $file | cut -d '/' -f 1)\n+        if [[ $file_dir == \"be\" || $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]]; then\n             let doc_num+=1\n             continue\n-\tfi\n+        fi\n     done\n-    if [[ $doc_num -eq $file_nums ]];then\n+    if [[ $doc_num -eq $file_nums ]]; then\n         echo \"JUST MODIFY BE CODE, NO NEED RUN FE UT, PASSED!\"\n         exit 0\n     else\n@@ -85,21 +81,20 @@\n     pr_id=$1\n     owner='apache'\n     repo='incubator-doris'\n-    res=($(curl https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files|jq -r '.[]|select(.status != \"removed\")| .filename'))\n+    res=($(curl https://api.github.com/repos/${owner}/${repo}/pulls/${pr_id}/files | jq -r '.[]|select(.status != \"removed\")| .filename'))\n     file_nums=${#res[@]}\n \n     doc_num=0\n     echo \"START CHECK CODE IS ONLY RELATED FE OR NOT\"\n-    for file in ${res[@]}\n-    do\n+    for file in ${res[@]}; do\n         #check change file is on be or not\n-        file_dir=$(echo $file|cut -d '/' -f 1)\n-        if [[ $file_dir == \"fe\" || $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]];then\n+        file_dir=$(echo $file | cut -d '/' -f 1)\n+        if [[ $file_dir == \"fe\" || $file_dir == \"docs\" || $file_dir == \"fs_brokers\" ]]; then\n             let doc_num+=1\n             continue\n         fi\n     done\n-    if [[ $doc_num -eq $file_nums ]];then\n+    if [[ $doc_num -eq $file_nums ]]; then\n         echo \"JUST MODIFY FE CODE, NO NEED RUN BE UT, PASSED!\"\n         exit 0\n     else\n@@ -110,15 +105,28 @@\n \n main() {\n \n-if [ $# > 0 ]; then\n-    case \"$1\" in\n-        --is_modify_only_invoved_be) check_all_change_files_is_under_be $2; shift ;;\n-        --is_modify_only_invoved_fe) check_all_change_files_is_under_fe $2; shift ;;\n-\t--is_modify_only_doc) check_all_change_files_is_under_doc $2; shift ;;\n-        *) echo \"ERROR\"; usage; exit 1 ;;\n-    esac\n+    if [ $# ] >0; then\n+        case \"$1\" in\n+        --is_modify_only_invoved_be)\n+            check_all_change_files_is_under_be $2\n+            shift\n+            ;;\n+        --is_modify_only_invoved_fe)\n+            check_all_change_files_is_under_fe $2\n+            shift\n+            ;;\n+        --is_modify_only_doc)\n+            check_all_change_files_is_under_doc $2\n+            shift\n+            ;;\n+        *)\n+            echo \"ERROR\"\n+            usage\n+            exit 1\n+            ;;\n+        esac\n \n-fi\n+    fi\n }\n \n main $@\n--- teamcity/doris/benchmark/clickbench/prepare.sh.orig\n+++ teamcity/doris/benchmark/clickbench/prepare.sh\n@@ -22,6 +22,3 @@\n fi\n qa_home=\"${pipeline_home}/selectdb-qa\"\n cd \"${qa_home}\" && git stash && git checkout main && git pull && cd -\n-\n-\n-\n----------\n\nYou can reformat the above files to meet shfmt's requirements by typing:\n\n  shfmt  -w filename\n\n\n```\n</details>\n\n\n","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301757757/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301786261","html_url":"https://github.com/apache/doris/pull/13936#issuecomment-1301786261","issue_url":"https://api.github.com/repos/apache/doris/issues/13936","id":1301786261,"node_id":"IC_kwDOBfSlxs5Nl66V","user":{"login":"hello-stephen","id":27881198,"node_id":"MDQ6VXNlcjI3ODgxMTk4","avatar_url":"https://avatars.githubusercontent.com/u/27881198?v=4","gravatar_id":"","url":"https://api.github.com/users/hello-stephen","html_url":"https://github.com/hello-stephen","followers_url":"https://api.github.com/users/hello-stephen/followers","following_url":"https://api.github.com/users/hello-stephen/following{/other_user}","gists_url":"https://api.github.com/users/hello-stephen/gists{/gist_id}","starred_url":"https://api.github.com/users/hello-stephen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hello-stephen/subscriptions","organizations_url":"https://api.github.com/users/hello-stephen/orgs","repos_url":"https://api.github.com/users/hello-stephen/repos","events_url":"https://api.github.com/users/hello-stephen/events{/privacy}","received_events_url":"https://api.github.com/users/hello-stephen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-11-03T08:38:18Z","updated_at":"2022-11-03T23:01:33Z","author_association":"CONTRIBUTOR","body":"TeamCity pipeline, clickbench performance test result:\n the sum of best hot time: 38.14 seconds\n load time: 672 seconds\n storage size: 17179364447 Bytes\n https://doris-community-test-1308700295.cos.ap-hongkong.myqcloud.com/tmp/20221103230130_clickbench_pr_39617.html","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301786261/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301805012","html_url":"https://github.com/apache/doris/pull/13909#issuecomment-1301805012","issue_url":"https://api.github.com/repos/apache/doris/issues/13909","id":1301805012,"node_id":"IC_kwDOBfSlxs5Nl_fU","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-03T08:58:52Z","updated_at":"2022-11-03T08:58:52Z","author_association":"CONTRIBUTOR","body":"PR approved by at least one committer and no changes requested.","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301805012/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301823814","html_url":"https://github.com/apache/doris/pull/13641#issuecomment-1301823814","issue_url":"https://api.github.com/repos/apache/doris/issues/13641","id":1301823814,"node_id":"IC_kwDOBfSlxs5NmEFG","user":{"login":"xy720","id":22125576,"node_id":"MDQ6VXNlcjIyMTI1NTc2","avatar_url":"https://avatars.githubusercontent.com/u/22125576?v=4","gravatar_id":"","url":"https://api.github.com/users/xy720","html_url":"https://github.com/xy720","followers_url":"https://api.github.com/users/xy720/followers","following_url":"https://api.github.com/users/xy720/following{/other_user}","gists_url":"https://api.github.com/users/xy720/gists{/gist_id}","starred_url":"https://api.github.com/users/xy720/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xy720/subscriptions","organizations_url":"https://api.github.com/users/xy720/orgs","repos_url":"https://api.github.com/users/xy720/repos","events_url":"https://api.github.com/users/xy720/events{/privacy}","received_events_url":"https://api.github.com/users/xy720/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-11-03T09:16:19Z","updated_at":"2022-11-03T09:16:19Z","author_association":"MEMBER","body":"It seems that P1 regression is failed, please rebase master.","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301823814/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301836831","html_url":"https://github.com/apache/doris/pull/13948#issuecomment-1301836831","issue_url":"https://api.github.com/repos/apache/doris/issues/13948","id":1301836831,"node_id":"IC_kwDOBfSlxs5NmHQf","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-03T09:29:35Z","updated_at":"2022-11-03T09:29:35Z","author_association":"CONTRIBUTOR","body":"PR approved by at least one committer and no changes requested.","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301836831/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301836876","html_url":"https://github.com/apache/doris/pull/13948#issuecomment-1301836876","issue_url":"https://api.github.com/repos/apache/doris/issues/13948","id":1301836876,"node_id":"IC_kwDOBfSlxs5NmHRM","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-03T09:29:38Z","updated_at":"2022-11-03T09:29:38Z","author_association":"CONTRIBUTOR","body":"PR approved by anyone and no changes requested.","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301836876/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301850835","html_url":"https://github.com/apache/doris/pull/13938#issuecomment-1301850835","issue_url":"https://api.github.com/repos/apache/doris/issues/13938","id":1301850835,"node_id":"IC_kwDOBfSlxs5NmKrT","user":{"login":"hello-stephen","id":27881198,"node_id":"MDQ6VXNlcjI3ODgxMTk4","avatar_url":"https://avatars.githubusercontent.com/u/27881198?v=4","gravatar_id":"","url":"https://api.github.com/users/hello-stephen","html_url":"https://github.com/hello-stephen","followers_url":"https://api.github.com/users/hello-stephen/followers","following_url":"https://api.github.com/users/hello-stephen/following{/other_user}","gists_url":"https://api.github.com/users/hello-stephen/gists{/gist_id}","starred_url":"https://api.github.com/users/hello-stephen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hello-stephen/subscriptions","organizations_url":"https://api.github.com/users/hello-stephen/orgs","repos_url":"https://api.github.com/users/hello-stephen/repos","events_url":"https://api.github.com/users/hello-stephen/events{/privacy}","received_events_url":"https://api.github.com/users/hello-stephen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-11-03T09:43:12Z","updated_at":"2022-11-03T09:43:12Z","author_association":"CONTRIBUTOR","body":"TeamCity pipeline, clickbench performance test result:\n the sum of best hot time: 38.04 seconds\n load time: 614 seconds\n storage size: 17179492211 Bytes\n https://doris-community-test-1308700295.cos.ap-hongkong.myqcloud.com/tmp/20221103094309_clickbench_pr_39177.html","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301850835/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301853343","html_url":"https://github.com/apache/doris/pull/13641#issuecomment-1301853343","issue_url":"https://api.github.com/repos/apache/doris/issues/13641","id":1301853343,"node_id":"IC_kwDOBfSlxs5NmLSf","user":{"login":"eldenmoon","id":64513324,"node_id":"MDQ6VXNlcjY0NTEzMzI0","avatar_url":"https://avatars.githubusercontent.com/u/64513324?v=4","gravatar_id":"","url":"https://api.github.com/users/eldenmoon","html_url":"https://github.com/eldenmoon","followers_url":"https://api.github.com/users/eldenmoon/followers","following_url":"https://api.github.com/users/eldenmoon/following{/other_user}","gists_url":"https://api.github.com/users/eldenmoon/gists{/gist_id}","starred_url":"https://api.github.com/users/eldenmoon/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/eldenmoon/subscriptions","organizations_url":"https://api.github.com/users/eldenmoon/orgs","repos_url":"https://api.github.com/users/eldenmoon/repos","events_url":"https://api.github.com/users/eldenmoon/events{/privacy}","received_events_url":"https://api.github.com/users/eldenmoon/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-11-03T09:45:36Z","updated_at":"2022-11-03T09:45:36Z","author_association":"MEMBER","body":"rebased","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301853343/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301883766","html_url":"https://github.com/apache/doris/pull/13950#issuecomment-1301883766","issue_url":"https://api.github.com/repos/apache/doris/issues/13950","id":1301883766,"node_id":"IC_kwDOBfSlxs5NmSt2","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-03T10:13:16Z","updated_at":"2022-11-03T10:13:16Z","author_association":"CONTRIBUTOR","body":"PR approved by at least one committer and no changes requested.","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301883766/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301883808","html_url":"https://github.com/apache/doris/pull/13950#issuecomment-1301883808","issue_url":"https://api.github.com/repos/apache/doris/issues/13950","id":1301883808,"node_id":"IC_kwDOBfSlxs5NmSug","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-03T10:13:18Z","updated_at":"2022-11-03T10:13:18Z","author_association":"CONTRIBUTOR","body":"PR approved by anyone and no changes requested.","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301883808/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301893717","html_url":"https://github.com/apache/doris/pull/13761#issuecomment-1301893717","issue_url":"https://api.github.com/repos/apache/doris/issues/13761","id":1301893717,"node_id":"IC_kwDOBfSlxs5NmVJV","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-03T10:22:39Z","updated_at":"2022-11-03T10:22:39Z","author_association":"CONTRIBUTOR","body":"PR approved by at least one committer and no changes requested.","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301893717/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301893766","html_url":"https://github.com/apache/doris/pull/13761#issuecomment-1301893766","issue_url":"https://api.github.com/repos/apache/doris/issues/13761","id":1301893766,"node_id":"IC_kwDOBfSlxs5NmVKG","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-03T10:22:42Z","updated_at":"2022-11-03T10:22:42Z","author_association":"CONTRIBUTOR","body":"PR approved by anyone and no changes requested.","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301893766/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301893967","html_url":"https://github.com/apache/doris/pull/13916#issuecomment-1301893967","issue_url":"https://api.github.com/repos/apache/doris/issues/13916","id":1301893967,"node_id":"IC_kwDOBfSlxs5NmVNP","user":{"login":"ByteYue","id":43750022,"node_id":"MDQ6VXNlcjQzNzUwMDIy","avatar_url":"https://avatars.githubusercontent.com/u/43750022?v=4","gravatar_id":"","url":"https://api.github.com/users/ByteYue","html_url":"https://github.com/ByteYue","followers_url":"https://api.github.com/users/ByteYue/followers","following_url":"https://api.github.com/users/ByteYue/following{/other_user}","gists_url":"https://api.github.com/users/ByteYue/gists{/gist_id}","starred_url":"https://api.github.com/users/ByteYue/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ByteYue/subscriptions","organizations_url":"https://api.github.com/users/ByteYue/orgs","repos_url":"https://api.github.com/users/ByteYue/repos","events_url":"https://api.github.com/users/ByteYue/events{/privacy}","received_events_url":"https://api.github.com/users/ByteYue/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-11-03T10:22:53Z","updated_at":"2022-11-03T10:22:53Z","author_association":"CONTRIBUTOR","body":"> Please add sql based regression test.\n\nAlready added.","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301893967/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301934345","html_url":"https://github.com/apache/doris/pull/13940#issuecomment-1301934345","issue_url":"https://api.github.com/repos/apache/doris/issues/13940","id":1301934345,"node_id":"IC_kwDOBfSlxs5NmfEJ","user":{"login":"hello-stephen","id":27881198,"node_id":"MDQ6VXNlcjI3ODgxMTk4","avatar_url":"https://avatars.githubusercontent.com/u/27881198?v=4","gravatar_id":"","url":"https://api.github.com/users/hello-stephen","html_url":"https://github.com/hello-stephen","followers_url":"https://api.github.com/users/hello-stephen/followers","following_url":"https://api.github.com/users/hello-stephen/following{/other_user}","gists_url":"https://api.github.com/users/hello-stephen/gists{/gist_id}","starred_url":"https://api.github.com/users/hello-stephen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hello-stephen/subscriptions","organizations_url":"https://api.github.com/users/hello-stephen/orgs","repos_url":"https://api.github.com/users/hello-stephen/repos","events_url":"https://api.github.com/users/hello-stephen/events{/privacy}","received_events_url":"https://api.github.com/users/hello-stephen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-11-03T11:01:22Z","updated_at":"2022-11-04T03:48:21Z","author_association":"CONTRIBUTOR","body":"TeamCity pipeline, clickbench performance test result:\n the sum of best hot time: 38.41 seconds\n load time: 655 seconds\n storage size: 17184836193 Bytes\n https://doris-community-test-1308700295.cos.ap-hongkong.myqcloud.com/tmp/20221104034818_clickbench_pr_39718.html","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301934345/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301980801","html_url":"https://github.com/apache/doris/pull/13941#issuecomment-1301980801","issue_url":"https://api.github.com/repos/apache/doris/issues/13941","id":1301980801,"node_id":"IC_kwDOBfSlxs5NmqaB","user":{"login":"hello-stephen","id":27881198,"node_id":"MDQ6VXNlcjI3ODgxMTk4","avatar_url":"https://avatars.githubusercontent.com/u/27881198?v=4","gravatar_id":"","url":"https://api.github.com/users/hello-stephen","html_url":"https://github.com/hello-stephen","followers_url":"https://api.github.com/users/hello-stephen/followers","following_url":"https://api.github.com/users/hello-stephen/following{/other_user}","gists_url":"https://api.github.com/users/hello-stephen/gists{/gist_id}","starred_url":"https://api.github.com/users/hello-stephen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hello-stephen/subscriptions","organizations_url":"https://api.github.com/users/hello-stephen/orgs","repos_url":"https://api.github.com/users/hello-stephen/repos","events_url":"https://api.github.com/users/hello-stephen/events{/privacy}","received_events_url":"https://api.github.com/users/hello-stephen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-11-03T11:44:15Z","updated_at":"2022-11-07T07:13:46Z","author_association":"CONTRIBUTOR","body":"TeamCity pipeline, clickbench performance test result:\n the sum of best hot time: 34.5 seconds\n load time: 447 seconds\n storage size: 17181400918 Bytes\n https://doris-community-test-1308700295.cos.ap-hongkong.myqcloud.com/tmp/20221107071343_clickbench_pr_40922.html","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301980801/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301984568","html_url":"https://github.com/apache/doris/pull/13954#issuecomment-1301984568","issue_url":"https://api.github.com/repos/apache/doris/issues/13954","id":1301984568,"node_id":"IC_kwDOBfSlxs5NmrU4","user":{"login":"Gabriel39","id":37700562,"node_id":"MDQ6VXNlcjM3NzAwNTYy","avatar_url":"https://avatars.githubusercontent.com/u/37700562?v=4","gravatar_id":"","url":"https://api.github.com/users/Gabriel39","html_url":"https://github.com/Gabriel39","followers_url":"https://api.github.com/users/Gabriel39/followers","following_url":"https://api.github.com/users/Gabriel39/following{/other_user}","gists_url":"https://api.github.com/users/Gabriel39/gists{/gist_id}","starred_url":"https://api.github.com/users/Gabriel39/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Gabriel39/subscriptions","organizations_url":"https://api.github.com/users/Gabriel39/orgs","repos_url":"https://api.github.com/users/Gabriel39/repos","events_url":"https://api.github.com/users/Gabriel39/events{/privacy}","received_events_url":"https://api.github.com/users/Gabriel39/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-11-03T11:48:26Z","updated_at":"2022-11-03T11:48:26Z","author_association":"CONTRIBUTOR","body":"Any differences between those two?","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301984568/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301988520","html_url":"https://github.com/apache/doris/pull/13861#issuecomment-1301988520","issue_url":"https://api.github.com/repos/apache/doris/issues/13861","id":1301988520,"node_id":"IC_kwDOBfSlxs5NmsSo","user":{"login":"hello-stephen","id":27881198,"node_id":"MDQ6VXNlcjI3ODgxMTk4","avatar_url":"https://avatars.githubusercontent.com/u/27881198?v=4","gravatar_id":"","url":"https://api.github.com/users/hello-stephen","html_url":"https://github.com/hello-stephen","followers_url":"https://api.github.com/users/hello-stephen/followers","following_url":"https://api.github.com/users/hello-stephen/following{/other_user}","gists_url":"https://api.github.com/users/hello-stephen/gists{/gist_id}","starred_url":"https://api.github.com/users/hello-stephen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hello-stephen/subscriptions","organizations_url":"https://api.github.com/users/hello-stephen/orgs","repos_url":"https://api.github.com/users/hello-stephen/repos","events_url":"https://api.github.com/users/hello-stephen/events{/privacy}","received_events_url":"https://api.github.com/users/hello-stephen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-11-03T11:52:38Z","updated_at":"2022-11-03T11:52:38Z","author_association":"CONTRIBUTOR","body":"LGTM","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1301988520/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1302015017","html_url":"https://github.com/apache/doris/pull/13942#issuecomment-1302015017","issue_url":"https://api.github.com/repos/apache/doris/issues/13942","id":1302015017,"node_id":"IC_kwDOBfSlxs5Nmywp","user":{"login":"hello-stephen","id":27881198,"node_id":"MDQ6VXNlcjI3ODgxMTk4","avatar_url":"https://avatars.githubusercontent.com/u/27881198?v=4","gravatar_id":"","url":"https://api.github.com/users/hello-stephen","html_url":"https://github.com/hello-stephen","followers_url":"https://api.github.com/users/hello-stephen/followers","following_url":"https://api.github.com/users/hello-stephen/following{/other_user}","gists_url":"https://api.github.com/users/hello-stephen/gists{/gist_id}","starred_url":"https://api.github.com/users/hello-stephen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hello-stephen/subscriptions","organizations_url":"https://api.github.com/users/hello-stephen/orgs","repos_url":"https://api.github.com/users/hello-stephen/repos","events_url":"https://api.github.com/users/hello-stephen/events{/privacy}","received_events_url":"https://api.github.com/users/hello-stephen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-11-03T12:16:07Z","updated_at":"2022-11-03T12:16:07Z","author_association":"CONTRIBUTOR","body":"TeamCity pipeline, clickbench performance test result:\n the sum of best hot time: 38.41 seconds\n load time: 576 seconds\n storage size: 17154644880 Bytes\n https://doris-community-test-1308700295.cos.ap-hongkong.myqcloud.com/tmp/20221103121604_clickbench_pr_39250.html","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1302015017/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1302032559","html_url":"https://github.com/apache/doris/pull/13948#issuecomment-1302032559","issue_url":"https://api.github.com/repos/apache/doris/issues/13948","id":1302032559,"node_id":"IC_kwDOBfSlxs5Nm3Cv","user":{"login":"hello-stephen","id":27881198,"node_id":"MDQ6VXNlcjI3ODgxMTk4","avatar_url":"https://avatars.githubusercontent.com/u/27881198?v=4","gravatar_id":"","url":"https://api.github.com/users/hello-stephen","html_url":"https://github.com/hello-stephen","followers_url":"https://api.github.com/users/hello-stephen/followers","following_url":"https://api.github.com/users/hello-stephen/following{/other_user}","gists_url":"https://api.github.com/users/hello-stephen/gists{/gist_id}","starred_url":"https://api.github.com/users/hello-stephen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hello-stephen/subscriptions","organizations_url":"https://api.github.com/users/hello-stephen/orgs","repos_url":"https://api.github.com/users/hello-stephen/repos","events_url":"https://api.github.com/users/hello-stephen/events{/privacy}","received_events_url":"https://api.github.com/users/hello-stephen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-11-03T12:33:40Z","updated_at":"2022-11-03T12:33:40Z","author_association":"CONTRIBUTOR","body":"TeamCity pipeline, clickbench performance test result:\n the sum of best hot time: 37.64 seconds\n load time: 609 seconds\n storage size: 17183585730 Bytes\n https://doris-community-test-1308700295.cos.ap-hongkong.myqcloud.com/tmp/20221103123326_clickbench_pr_39287.html","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1302032559/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1302046139","html_url":"https://github.com/apache/doris/pull/13941#issuecomment-1302046139","issue_url":"https://api.github.com/repos/apache/doris/issues/13941","id":1302046139,"node_id":"IC_kwDOBfSlxs5Nm6W7","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-03T12:46:41Z","updated_at":"2022-11-03T12:46:41Z","author_association":"CONTRIBUTOR","body":"PR approved by at least one committer and no changes requested.","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1302046139/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1302046187","html_url":"https://github.com/apache/doris/pull/13941#issuecomment-1302046187","issue_url":"https://api.github.com/repos/apache/doris/issues/13941","id":1302046187,"node_id":"IC_kwDOBfSlxs5Nm6Xr","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-03T12:46:44Z","updated_at":"2022-11-03T12:46:44Z","author_association":"CONTRIBUTOR","body":"PR approved by anyone and no changes requested.","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1302046187/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1302049958","html_url":"https://github.com/apache/doris/pull/13896#issuecomment-1302049958","issue_url":"https://api.github.com/repos/apache/doris/issues/13896","id":1302049958,"node_id":"IC_kwDOBfSlxs5Nm7Sm","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-03T12:50:14Z","updated_at":"2022-11-03T12:50:14Z","author_association":"CONTRIBUTOR","body":"PR approved by at least one committer and no changes requested.","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1302049958/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1302050012","html_url":"https://github.com/apache/doris/pull/13896#issuecomment-1302050012","issue_url":"https://api.github.com/repos/apache/doris/issues/13896","id":1302050012,"node_id":"IC_kwDOBfSlxs5Nm7Tc","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-03T12:50:17Z","updated_at":"2022-11-03T12:50:17Z","author_association":"CONTRIBUTOR","body":"PR approved by anyone and no changes requested.","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1302050012/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1302052130","html_url":"https://github.com/apache/doris/issues/13910#issuecomment-1302052130","issue_url":"https://api.github.com/repos/apache/doris/issues/13910","id":1302052130,"node_id":"IC_kwDOBfSlxs5Nm70i","user":{"login":"dataalive","id":99398130,"node_id":"U_kgDOBeyx8g","avatar_url":"https://avatars.githubusercontent.com/u/99398130?v=4","gravatar_id":"","url":"https://api.github.com/users/dataalive","html_url":"https://github.com/dataalive","followers_url":"https://api.github.com/users/dataalive/followers","following_url":"https://api.github.com/users/dataalive/following{/other_user}","gists_url":"https://api.github.com/users/dataalive/gists{/gist_id}","starred_url":"https://api.github.com/users/dataalive/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dataalive/subscriptions","organizations_url":"https://api.github.com/users/dataalive/orgs","repos_url":"https://api.github.com/users/dataalive/repos","events_url":"https://api.github.com/users/dataalive/events{/privacy}","received_events_url":"https://api.github.com/users/dataalive/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-11-03T12:52:10Z","updated_at":"2022-11-03T12:52:10Z","author_association":"CONTRIBUTOR","body":"use ARM as FE , and others as BE ","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1302052130/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1302105687","html_url":"https://github.com/apache/doris/pull/13949#issuecomment-1302105687","issue_url":"https://api.github.com/repos/apache/doris/issues/13949","id":1302105687,"node_id":"IC_kwDOBfSlxs5NnI5X","user":{"login":"hello-stephen","id":27881198,"node_id":"MDQ6VXNlcjI3ODgxMTk4","avatar_url":"https://avatars.githubusercontent.com/u/27881198?v=4","gravatar_id":"","url":"https://api.github.com/users/hello-stephen","html_url":"https://github.com/hello-stephen","followers_url":"https://api.github.com/users/hello-stephen/followers","following_url":"https://api.github.com/users/hello-stephen/following{/other_user}","gists_url":"https://api.github.com/users/hello-stephen/gists{/gist_id}","starred_url":"https://api.github.com/users/hello-stephen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hello-stephen/subscriptions","organizations_url":"https://api.github.com/users/hello-stephen/orgs","repos_url":"https://api.github.com/users/hello-stephen/repos","events_url":"https://api.github.com/users/hello-stephen/events{/privacy}","received_events_url":"https://api.github.com/users/hello-stephen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-11-03T13:19:08Z","updated_at":"2022-11-08T17:00:10Z","author_association":"CONTRIBUTOR","body":"TeamCity pipeline, clickbench performance test result:\n the sum of best hot time: 33.99 seconds\n load time: 449 seconds\n storage size: 17179552175 Bytes\n https://doris-community-test-1308700295.cos.ap-hongkong.myqcloud.com/tmp/20221108170008_clickbench_pr_42262.html","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1302105687/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1302162448","html_url":"https://github.com/apache/doris/pull/13932#issuecomment-1302162448","issue_url":"https://api.github.com/repos/apache/doris/issues/13932","id":1302162448,"node_id":"IC_kwDOBfSlxs5NnWwQ","user":{"login":"hello-stephen","id":27881198,"node_id":"MDQ6VXNlcjI3ODgxMTk4","avatar_url":"https://avatars.githubusercontent.com/u/27881198?v=4","gravatar_id":"","url":"https://api.github.com/users/hello-stephen","html_url":"https://github.com/hello-stephen","followers_url":"https://api.github.com/users/hello-stephen/followers","following_url":"https://api.github.com/users/hello-stephen/following{/other_user}","gists_url":"https://api.github.com/users/hello-stephen/gists{/gist_id}","starred_url":"https://api.github.com/users/hello-stephen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hello-stephen/subscriptions","organizations_url":"https://api.github.com/users/hello-stephen/orgs","repos_url":"https://api.github.com/users/hello-stephen/repos","events_url":"https://api.github.com/users/hello-stephen/events{/privacy}","received_events_url":"https://api.github.com/users/hello-stephen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-11-03T14:02:57Z","updated_at":"2022-11-04T13:56:04Z","author_association":"CONTRIBUTOR","body":"TeamCity pipeline, clickbench performance test result:\n the sum of best hot time: 34.15 seconds\n load time: 460 seconds\n storage size: 17178953209 Bytes\n https://doris-community-test-1308700295.cos.ap-hongkong.myqcloud.com/tmp/20221104135601_clickbench_pr_40171.html","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1302162448/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1302162673","html_url":"https://github.com/apache/doris/pull/13912#issuecomment-1302162673","issue_url":"https://api.github.com/repos/apache/doris/issues/13912","id":1302162673,"node_id":"IC_kwDOBfSlxs5NnWzx","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-03T14:03:08Z","updated_at":"2022-11-03T14:03:08Z","author_association":"CONTRIBUTOR","body":"PR approved by anyone and no changes requested.","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1302162673/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1302175082","html_url":"https://github.com/apache/doris/pull/13950#issuecomment-1302175082","issue_url":"https://api.github.com/repos/apache/doris/issues/13950","id":1302175082,"node_id":"IC_kwDOBfSlxs5NnZ1q","user":{"login":"hello-stephen","id":27881198,"node_id":"MDQ6VXNlcjI3ODgxMTk4","avatar_url":"https://avatars.githubusercontent.com/u/27881198?v=4","gravatar_id":"","url":"https://api.github.com/users/hello-stephen","html_url":"https://github.com/hello-stephen","followers_url":"https://api.github.com/users/hello-stephen/followers","following_url":"https://api.github.com/users/hello-stephen/following{/other_user}","gists_url":"https://api.github.com/users/hello-stephen/gists{/gist_id}","starred_url":"https://api.github.com/users/hello-stephen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hello-stephen/subscriptions","organizations_url":"https://api.github.com/users/hello-stephen/orgs","repos_url":"https://api.github.com/users/hello-stephen/repos","events_url":"https://api.github.com/users/hello-stephen/events{/privacy}","received_events_url":"https://api.github.com/users/hello-stephen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-11-03T14:12:08Z","updated_at":"2022-11-03T14:12:08Z","author_association":"CONTRIBUTOR","body":"TeamCity pipeline, clickbench performance test result:\n the sum of best hot time: 37.7 seconds\n load time: 602 seconds\n storage size: 17183785136 Bytes\n https://doris-community-test-1308700295.cos.ap-hongkong.myqcloud.com/tmp/20221103141204_clickbench_pr_39346.html","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1302175082/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1302224409","html_url":"https://github.com/apache/doris/issues/13952#issuecomment-1302224409","issue_url":"https://api.github.com/repos/apache/doris/issues/13952","id":1302224409,"node_id":"IC_kwDOBfSlxs5Nnl4Z","user":{"login":"zy-kkk","id":70795751,"node_id":"MDQ6VXNlcjcwNzk1NzUx","avatar_url":"https://avatars.githubusercontent.com/u/70795751?v=4","gravatar_id":"","url":"https://api.github.com/users/zy-kkk","html_url":"https://github.com/zy-kkk","followers_url":"https://api.github.com/users/zy-kkk/followers","following_url":"https://api.github.com/users/zy-kkk/following{/other_user}","gists_url":"https://api.github.com/users/zy-kkk/gists{/gist_id}","starred_url":"https://api.github.com/users/zy-kkk/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zy-kkk/subscriptions","organizations_url":"https://api.github.com/users/zy-kkk/orgs","repos_url":"https://api.github.com/users/zy-kkk/repos","events_url":"https://api.github.com/users/zy-kkk/events{/privacy}","received_events_url":"https://api.github.com/users/zy-kkk/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-11-03T14:46:23Z","updated_at":"2022-11-03T14:46:23Z","author_association":"MEMBER","body":"Hello, the array type was not supported in version 1.1.x. It will be supported in the upcoming 1.2 release","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1302224409/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1302319251","html_url":"https://github.com/apache/doris/pull/13953#issuecomment-1302319251","issue_url":"https://api.github.com/repos/apache/doris/issues/13953","id":1302319251,"node_id":"IC_kwDOBfSlxs5Nn9CT","user":{"login":"hello-stephen","id":27881198,"node_id":"MDQ6VXNlcjI3ODgxMTk4","avatar_url":"https://avatars.githubusercontent.com/u/27881198?v=4","gravatar_id":"","url":"https://api.github.com/users/hello-stephen","html_url":"https://github.com/hello-stephen","followers_url":"https://api.github.com/users/hello-stephen/followers","following_url":"https://api.github.com/users/hello-stephen/following{/other_user}","gists_url":"https://api.github.com/users/hello-stephen/gists{/gist_id}","starred_url":"https://api.github.com/users/hello-stephen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hello-stephen/subscriptions","organizations_url":"https://api.github.com/users/hello-stephen/orgs","repos_url":"https://api.github.com/users/hello-stephen/repos","events_url":"https://api.github.com/users/hello-stephen/events{/privacy}","received_events_url":"https://api.github.com/users/hello-stephen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-11-03T15:53:43Z","updated_at":"2022-11-07T03:35:45Z","author_association":"CONTRIBUTOR","body":"TeamCity pipeline, clickbench performance test result:\n the sum of best hot time: 33.95 seconds\n load time: 453 seconds\n storage size: 17179173453 Bytes\n https://doris-community-test-1308700295.cos.ap-hongkong.myqcloud.com/tmp/20221107033543_clickbench_pr_40745.html","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1302319251/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1302393306","html_url":"https://github.com/apache/doris/pull/13954#issuecomment-1302393306","issue_url":"https://api.github.com/repos/apache/doris/issues/13954","id":1302393306,"node_id":"IC_kwDOBfSlxs5NoPHa","user":{"login":"hello-stephen","id":27881198,"node_id":"MDQ6VXNlcjI3ODgxMTk4","avatar_url":"https://avatars.githubusercontent.com/u/27881198?v=4","gravatar_id":"","url":"https://api.github.com/users/hello-stephen","html_url":"https://github.com/hello-stephen","followers_url":"https://api.github.com/users/hello-stephen/followers","following_url":"https://api.github.com/users/hello-stephen/following{/other_user}","gists_url":"https://api.github.com/users/hello-stephen/gists{/gist_id}","starred_url":"https://api.github.com/users/hello-stephen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hello-stephen/subscriptions","organizations_url":"https://api.github.com/users/hello-stephen/orgs","repos_url":"https://api.github.com/users/hello-stephen/repos","events_url":"https://api.github.com/users/hello-stephen/events{/privacy}","received_events_url":"https://api.github.com/users/hello-stephen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-11-03T16:49:55Z","updated_at":"2022-11-04T07:09:00Z","author_association":"CONTRIBUTOR","body":"TeamCity pipeline, clickbench performance test result:\n the sum of best hot time: 37.68 seconds\n load time: 624 seconds\n storage size: 17183361009 Bytes\n https://doris-community-test-1308700295.cos.ap-hongkong.myqcloud.com/tmp/20221104070858_clickbench_pr_39904.html","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1302393306/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1302426696","html_url":"https://github.com/apache/doris/pull/13957#issuecomment-1302426696","issue_url":"https://api.github.com/repos/apache/doris/issues/13957","id":1302426696,"node_id":"IC_kwDOBfSlxs5NoXRI","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-03T17:14:00Z","updated_at":"2022-11-03T17:14:00Z","author_association":"CONTRIBUTOR","body":"PR approved by at least one committer and no changes requested.","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1302426696/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1302426751","html_url":"https://github.com/apache/doris/pull/13957#issuecomment-1302426751","issue_url":"https://api.github.com/repos/apache/doris/issues/13957","id":1302426751,"node_id":"IC_kwDOBfSlxs5NoXR_","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-03T17:14:03Z","updated_at":"2022-11-03T17:14:03Z","author_association":"CONTRIBUTOR","body":"PR approved by anyone and no changes requested.","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1302426751/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1302502953","html_url":"https://github.com/apache/doris/pull/13883#issuecomment-1302502953","issue_url":"https://api.github.com/repos/apache/doris/issues/13883","id":1302502953,"node_id":"IC_kwDOBfSlxs5Nop4p","user":{"login":"hello-stephen","id":27881198,"node_id":"MDQ6VXNlcjI3ODgxMTk4","avatar_url":"https://avatars.githubusercontent.com/u/27881198?v=4","gravatar_id":"","url":"https://api.github.com/users/hello-stephen","html_url":"https://github.com/hello-stephen","followers_url":"https://api.github.com/users/hello-stephen/followers","following_url":"https://api.github.com/users/hello-stephen/following{/other_user}","gists_url":"https://api.github.com/users/hello-stephen/gists{/gist_id}","starred_url":"https://api.github.com/users/hello-stephen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hello-stephen/subscriptions","organizations_url":"https://api.github.com/users/hello-stephen/orgs","repos_url":"https://api.github.com/users/hello-stephen/repos","events_url":"https://api.github.com/users/hello-stephen/events{/privacy}","received_events_url":"https://api.github.com/users/hello-stephen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-11-03T18:19:34Z","updated_at":"2022-11-10T11:14:48Z","author_association":"CONTRIBUTOR","body":"TeamCity pipeline, clickbench performance test result:\n the sum of best hot time: 34.47 seconds\n load time: 444 seconds\n storage size: 17179053088 Bytes\n https://doris-community-test-1308700295.cos.ap-hongkong.myqcloud.com/tmp/20221110111445_clickbench_pr_43589.html","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1302502953/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1302530092","html_url":"https://github.com/apache/doris/pull/13746#issuecomment-1302530092","issue_url":"https://api.github.com/repos/apache/doris/issues/13746","id":1302530092,"node_id":"IC_kwDOBfSlxs5Nowgs","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-03T18:46:33Z","updated_at":"2022-11-03T18:46:33Z","author_association":"CONTRIBUTOR","body":"PR approved by at least one committer and no changes requested.","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1302530092/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1302530150","html_url":"https://github.com/apache/doris/pull/13746#issuecomment-1302530150","issue_url":"https://api.github.com/repos/apache/doris/issues/13746","id":1302530150,"node_id":"IC_kwDOBfSlxs5Nowhm","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-03T18:46:36Z","updated_at":"2022-11-03T18:46:36Z","author_association":"CONTRIBUTOR","body":"PR approved by anyone and no changes requested.","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1302530150/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1302549093","html_url":"https://github.com/apache/doris/pull/13957#issuecomment-1302549093","issue_url":"https://api.github.com/repos/apache/doris/issues/13957","id":1302549093,"node_id":"IC_kwDOBfSlxs5No1Jl","user":{"login":"hello-stephen","id":27881198,"node_id":"MDQ6VXNlcjI3ODgxMTk4","avatar_url":"https://avatars.githubusercontent.com/u/27881198?v=4","gravatar_id":"","url":"https://api.github.com/users/hello-stephen","html_url":"https://github.com/hello-stephen","followers_url":"https://api.github.com/users/hello-stephen/followers","following_url":"https://api.github.com/users/hello-stephen/following{/other_user}","gists_url":"https://api.github.com/users/hello-stephen/gists{/gist_id}","starred_url":"https://api.github.com/users/hello-stephen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hello-stephen/subscriptions","organizations_url":"https://api.github.com/users/hello-stephen/orgs","repos_url":"https://api.github.com/users/hello-stephen/repos","events_url":"https://api.github.com/users/hello-stephen/events{/privacy}","received_events_url":"https://api.github.com/users/hello-stephen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2022-11-03T19:05:16Z","updated_at":"2022-11-04T05:23:00Z","author_association":"CONTRIBUTOR","body":"TeamCity pipeline, clickbench performance test result:\n the sum of best hot time: 38.34 seconds\n load time: 647 seconds\n storage size: 17183166383 Bytes\n https://doris-community-test-1308700295.cos.ap-hongkong.myqcloud.com/tmp/20221104052257_clickbench_pr_39848.html","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1302549093/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/doris/issues/comments/1302803508","html_url":"https://github.com/apache/doris/pull/13883#issuecomment-1302803508","issue_url":"https://api.github.com/repos/apache/doris/issues/13883","id":1302803508,"node_id":"IC_kwDOBfSlxs5NpzQ0","user":{"login":"github-actions[bot]","id":41898282,"node_id":"MDM6Qm90NDE4OTgyODI=","avatar_url":"https://avatars.githubusercontent.com/in/15368?v=4","gravatar_id":"","url":"https://api.github.com/users/github-actions%5Bbot%5D","html_url":"https://github.com/apps/github-actions","followers_url":"https://api.github.com/users/github-actions%5Bbot%5D/followers","following_url":"https://api.github.com/users/github-actions%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/github-actions%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/github-actions%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/github-actions%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/github-actions%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/github-actions%5Bbot%5D/repos","events_url":"https://api.github.com/users/github-actions%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/github-actions%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2022-11-03T23:56:20Z","updated_at":"2022-11-03T23:56:20Z","author_association":"CONTRIBUTOR","body":"PR approved by anyone and no changes requested.","reactions":{"url":"https://api.github.com/repos/apache/doris/issues/comments/1302803508/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]