[{"url":"https://api.github.com/repos/apache/storm/issues/comments/169267211","html_url":"https://github.com/apache/storm/pull/977#issuecomment-169267211","issue_url":"https://api.github.com/repos/apache/storm/issues/977","id":169267211,"node_id":"MDEyOklzc3VlQ29tbWVudDE2OTI2NzIxMQ==","user":{"login":"HeartSaVioR","id":1317309,"node_id":"MDQ6VXNlcjEzMTczMDk=","avatar_url":"https://avatars.githubusercontent.com/u/1317309?v=4","gravatar_id":"","url":"https://api.github.com/users/HeartSaVioR","html_url":"https://github.com/HeartSaVioR","followers_url":"https://api.github.com/users/HeartSaVioR/followers","following_url":"https://api.github.com/users/HeartSaVioR/following{/other_user}","gists_url":"https://api.github.com/users/HeartSaVioR/gists{/gist_id}","starred_url":"https://api.github.com/users/HeartSaVioR/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HeartSaVioR/subscriptions","organizations_url":"https://api.github.com/users/HeartSaVioR/orgs","repos_url":"https://api.github.com/users/HeartSaVioR/repos","events_url":"https://api.github.com/users/HeartSaVioR/events{/privacy}","received_events_url":"https://api.github.com/users/HeartSaVioR/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-06T08:38:30Z","updated_at":"2016-01-06T08:38:30Z","author_association":"CONTRIBUTOR","body":"@vesense \nPlease read https://github.com/apache/storm/pull/977#issuecomment-169101930 and https://github.com/apache/storm/pull/977#issuecomment-169146734.\n\nEasily thinkable edge case is, Solr can commit pending requests internally, but SolrUpdateBolt still has tuples in pending state for ack. It means we should always set tick tuple to commit externally.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/169267211/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612692830","html_url":"https://github.com/apache/storm/issues/5254#issuecomment-2612692830","issue_url":"https://api.github.com/repos/apache/storm/issues/5254","id":2612692830,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTI4MzA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-06T08:38:31Z","updated_at":"2025-01-24T14:41:12Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user HeartSaVioR commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/977#issuecomment-169267211\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/977#issuecomment-169267211</a></p>\n\n<p>    @vesense <br/>\n    Please read <a href=\"https://github.com/apache/storm/pull/977#issuecomment-169101930\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/977#issuecomment-169101930</a> and <a href=\"https://github.com/apache/storm/pull/977#issuecomment-169146734\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/977#issuecomment-169146734</a>.</p>\n\n<p>    Easily thinkable edge case is, Solr can commit pending requests internally, but SolrUpdateBolt still has tuples in pending state for ack. It means we should always set tick tuple to commit externally.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612692830/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612688830","html_url":"https://github.com/apache/storm/issues/5227#issuecomment-2612688830","issue_url":"https://api.github.com/repos/apache/storm/issues/5227","id":2612688830,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2ODg4MzA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-06T08:44:54Z","updated_at":"2025-01-24T14:39:25Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=kabhwan\">kabhwan</a>:</i>\n<p><a href=\"https://github.com/jsevellec/cassandra-unit/pull/132\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/jsevellec/cassandra-unit/pull/132</a><br/>\nMaybe it is related to this issue. <br/>\n<a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=dagit\" class=\"user-hover\" rel=\"dagit\">Derek Dagit</a> Do you have link to log file for failed build?</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612688830/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612690569","html_url":"https://github.com/apache/storm/issues/5239#issuecomment-2612690569","issue_url":"https://api.github.com/repos/apache/storm/issues/5239","id":2612690569,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTA1Njk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-06T08:56:16Z","updated_at":"2025-01-24T14:40:13Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=kabhwan\">kabhwan</a>:</i>\n<p>It is not easy to track cause it doesn't leave any logs. Just calling reportError() doesn't help Travis CI.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612690569/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612690846","html_url":"https://github.com/apache/storm/issues/5241#issuecomment-2612690846","issue_url":"https://api.github.com/repos/apache/storm/issues/5241","id":2612690846,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTA4NDY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-06T08:58:52Z","updated_at":"2025-01-24T14:40:20Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user satishd commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/991#discussion_r48937870\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/991#discussion_r48937870</a></p>\n\n<p>    &#8212; Diff: external/storm-mqtt/core/src/main/java/org/apache/storm/mqtt/common/MqttPublisher.java &#8212;<br/>\n    @@ -0,0 +1,101 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.mqtt.common;<br/>\n    +<br/>\n    +<br/>\n    +import org.apache.storm.mqtt.MqttLogger;<br/>\n    +import org.apache.storm.mqtt.MqttMessage;<br/>\n    +import org.apache.storm.mqtt.ssl.KeyStoreLoader;<br/>\n    +import org.fusesource.mqtt.client.BlockingConnection;<br/>\n    +import org.fusesource.mqtt.client.MQTT;<br/>\n    +import org.fusesource.mqtt.client.QoS;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +import java.net.URI;<br/>\n    +<br/>\n    +public class MqttPublisher {<br/>\n    +    private static final Logger LOG = LoggerFactory.getLogger(MqttPublisher.class);<br/>\n    +<br/>\n    +    private MqttOptions options;<br/>\n    +    private transient BlockingConnection connection;<br/>\n    +    private KeyStoreLoader keyStoreLoader;<br/>\n    +    private QoS qos;<br/>\n    +    private boolean retain = false;<br/>\n    +<br/>\n    +<br/>\n    +    public MqttPublisher(MqttOptions options)</p>\n{\n    +this(options, null, false);\n    +    }\n<p>    +<br/>\n    +    public MqttPublisher(MqttOptions options, boolean retain)</p>\n{\n    +this(options, null, retain);\n    +    }\n<p>    +<br/>\n    +    public MqttPublisher(MqttOptions options, KeyStoreLoader keyStoreLoader, boolean retain)</p>\n{\n    +this.retain = retain;\n    +this.options = options;\n    +this.keyStoreLoader = keyStoreLoader;\n    +SslUtils.checkSslConfig(this.options.getUrl(), keyStoreLoader);\n    +this.qos = MqttUtils.qosFromInt(this.options.getQos());\n    +    }\n<p>    +<br/>\n    +    public void publish(MqttMessage message, boolean retain) throws Exception {<br/>\n    +this.connection.publish(message.getTopic(), message.getMessage(), this.qos, this.retain);<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    passed 'retain' argument is ignored. You may want to remove that parameter as it is not used or  <br/>\n    you can introduce one more method without 'retain' argument and pass 'retain' object received in constructor.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612690846/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612690852","html_url":"https://github.com/apache/storm/issues/5241#issuecomment-2612690852","issue_url":"https://api.github.com/repos/apache/storm/issues/5241","id":2612690852,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTA4NTI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-06T08:59:41Z","updated_at":"2025-01-24T14:40:21Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user satishd commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/991#discussion_r48937909\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/991#discussion_r48937909</a></p>\n\n<p>    &#8212; Diff: external/storm-mqtt/core/src/main/java/org/apache/storm/mqtt/common/MqttPublisher.java &#8212;<br/>\n    @@ -0,0 +1,101 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.mqtt.common;<br/>\n    +<br/>\n    +<br/>\n    +import org.apache.storm.mqtt.MqttLogger;<br/>\n    +import org.apache.storm.mqtt.MqttMessage;<br/>\n    +import org.apache.storm.mqtt.ssl.KeyStoreLoader;<br/>\n    +import org.fusesource.mqtt.client.BlockingConnection;<br/>\n    +import org.fusesource.mqtt.client.MQTT;<br/>\n    +import org.fusesource.mqtt.client.QoS;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +import java.net.URI;<br/>\n    +<br/>\n    +public class MqttPublisher {<br/>\n    +    private static final Logger LOG = LoggerFactory.getLogger(MqttPublisher.class);<br/>\n    +<br/>\n    +    private MqttOptions options;<br/>\n    +    private transient BlockingConnection connection;<br/>\n    +    private KeyStoreLoader keyStoreLoader;<br/>\n    +    private QoS qos;<br/>\n    +    private boolean retain = false;<br/>\n    +<br/>\n    +<br/>\n    +    public MqttPublisher(MqttOptions options)</p>\n{\n    +this(options, null, false);\n    +    }\n<p>    +<br/>\n    +    public MqttPublisher(MqttOptions options, boolean retain)</p>\n{\n    +this(options, null, retain);\n    +    }\n<p>    +<br/>\n    +    public MqttPublisher(MqttOptions options, KeyStoreLoader keyStoreLoader, boolean retain)</p>\n{\n    +this.retain = retain;\n    +this.options = options;\n    +this.keyStoreLoader = keyStoreLoader;\n    +SslUtils.checkSslConfig(this.options.getUrl(), keyStoreLoader);\n    +this.qos = MqttUtils.qosFromInt(this.options.getQos());\n    +    }\n<p>    +<br/>\n    +    public void publish(MqttMessage message, boolean retain) throws Exception </p>\n{\n    +this.connection.publish(message.getTopic(), message.getMessage(), this.qos, this.retain);\n    +    }\n<p>    +<br/>\n    +<br/>\n    +<br/>\n    +    public void connectMqtt(String clientId) throws Exception {<br/>\n    +MQTT client = new MQTT();<br/>\n    +URI uri = URI.create(this.options.getUrl());<br/>\n    +<br/>\n    +client.setHost(uri);<br/>\n    +if(!uri.getScheme().toLowerCase().equals(\"tcp\"))</p>\n{\n    +    client.setSslContext(SslUtils.sslContext(uri.getScheme(), this.keyStoreLoader));\n    +}\n<p>    +client.setClientId(clientId);<br/>\n    +LOG.info(\"MQTT ClientID: \" + client.getClientId().toString());<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Can we use formatted strings for logging instead of stringbuilders?</p>\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612690852/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612690862","html_url":"https://github.com/apache/storm/issues/5241#issuecomment-2612690862","issue_url":"https://api.github.com/repos/apache/storm/issues/5241","id":2612690862,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTA4NjI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-06T09:01:00Z","updated_at":"2025-01-24T14:40:21Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user satishd commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/991#discussion_r48937973\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/991#discussion_r48937973</a></p>\n\n<p>    &#8212; Diff: external/storm-mqtt/core/src/main/java/org/apache/storm/mqtt/MqttLogger.java &#8212;<br/>\n    @@ -0,0 +1,45 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.mqtt;<br/>\n    +<br/>\n    +import org.fusesource.mqtt.client.Tracer;<br/>\n    +import org.fusesource.mqtt.codec.MQTTFrame;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +/**<br/>\n    + * Wrapper around SLF4J logger that allows MQTT messages to be logged.<br/>\n    + */<br/>\n    +public class MqttLogger extends Tracer {<br/>\n    +    private static final Logger LOG = LoggerFactory.getLogger(MqttLogger.class);<br/>\n    +<br/>\n    +    @Override<br/>\n    +    public void debug(String message, Object... args) </p>\n{\n    +LOG.debug(String.format(message, args));\n    +    }\n<p>    +<br/>\n    +    @Override<br/>\n    +    public void onSend(MQTTFrame frame) {<br/>\n    +super.onSend(frame);<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    You may want to remove this method as it calls only super.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612690862/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612690863","html_url":"https://github.com/apache/storm/issues/5241#issuecomment-2612690863","issue_url":"https://api.github.com/repos/apache/storm/issues/5241","id":2612690863,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTA4NjM=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-06T09:01:06Z","updated_at":"2025-01-24T14:40:21Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user satishd commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/991#discussion_r48937981\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/991#discussion_r48937981</a></p>\n\n<p>    &#8212; Diff: external/storm-mqtt/core/src/main/java/org/apache/storm/mqtt/MqttLogger.java &#8212;<br/>\n    @@ -0,0 +1,45 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.mqtt;<br/>\n    +<br/>\n    +import org.fusesource.mqtt.client.Tracer;<br/>\n    +import org.fusesource.mqtt.codec.MQTTFrame;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +/**<br/>\n    + * Wrapper around SLF4J logger that allows MQTT messages to be logged.<br/>\n    + */<br/>\n    +public class MqttLogger extends Tracer {<br/>\n    +    private static final Logger LOG = LoggerFactory.getLogger(MqttLogger.class);<br/>\n    +<br/>\n    +    @Override<br/>\n    +    public void debug(String message, Object... args) </p>\n{\n    +LOG.debug(String.format(message, args));\n    +    }\n<p>    +<br/>\n    +    @Override<br/>\n    +    public void onSend(MQTTFrame frame) </p>\n{\n    +super.onSend(frame);\n    +    }\n<p>    +<br/>\n    +    @Override<br/>\n    +    public void onReceive(MQTTFrame frame) {<br/>\n    +super.onReceive(frame);<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    You may want to remove this method as it calls only super.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612690863/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612690868","html_url":"https://github.com/apache/storm/issues/5241#issuecomment-2612690868","issue_url":"https://api.github.com/repos/apache/storm/issues/5241","id":2612690868,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTA4Njg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-06T09:04:33Z","updated_at":"2025-01-24T14:40:21Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user satishd commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/991#discussion_r48938232\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/991#discussion_r48938232</a></p>\n\n<p>    &#8212; Diff: external/storm-mqtt/core/src/main/java/org/apache/storm/mqtt/common/MqttUtils.java &#8212;<br/>\n    @@ -0,0 +1,44 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.mqtt.common;<br/>\n    +<br/>\n    +<br/>\n    +import org.fusesource.mqtt.client.QoS;<br/>\n    +<br/>\n    +public class MqttUtils {<br/>\n    +<br/>\n    +    private MqttUtils(){}<br/>\n    +<br/>\n    +    public static QoS qosFromInt(int i){<br/>\n    +QoS qos = null;<br/>\n    +switch<img class=\"emoticon\" src=\"https://issues.apache.org/jira/images/icons/emoticons/information.png\" height=\"16\" width=\"16\" align=\"absmiddle\" alt=\"\" border=\"0\"/> {<br/>\n    +    case 0:<br/>\n    +qos = QoS.AT_MOST_ONCE;<br/>\n    +break;<br/>\n    +    case 1:<br/>\n    +qos = QoS.AT_LEAST_ONCE;<br/>\n    +break;<br/>\n    +    case 2:<br/>\n    +qos = QoS.EXACTLY_ONCE;<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Why are we taking int and converting into Qos enum instance? Can not we use Qos enum directly in Options instead of int? enum is serializable, so it can be passed as argument to spout and bolt constructors. </p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612690868/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612690874","html_url":"https://github.com/apache/storm/issues/5241#issuecomment-2612690874","issue_url":"https://api.github.com/repos/apache/storm/issues/5241","id":2612690874,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTA4NzQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-06T09:05:42Z","updated_at":"2025-01-24T14:40:21Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user satishd commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/991#discussion_r48938311\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/991#discussion_r48938311</a></p>\n\n<p>    &#8212; Diff: external/storm-mqtt/core/src/main/java/org/apache/storm/mqtt/common/MqttOptions.java &#8212;<br/>\n    @@ -0,0 +1,334 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.mqtt.common;<br/>\n    +<br/>\n    +import java.io.Serializable;<br/>\n    +import java.util.List;<br/>\n    +<br/>\n    +/**<br/>\n    + * MQTT Configuration Options<br/>\n    + */<br/>\n    +public class MqttOptions implements Serializable {<br/>\n    +    private String url = \"tcp://localhost:1883\";<br/>\n    +    private List<String> topics = null;<br/>\n    +    private boolean cleanConnection = false;<br/>\n    +<br/>\n    +    private String willTopic;<br/>\n    +    private String willPayload;<br/>\n    +    private int willQos = 1;<br/>\n    +    private boolean willRetain = false;<br/>\n    +<br/>\n    +    private long reconnectDelay = 10;<br/>\n    +    private long reconnectDelayMax = 30*1000;<br/>\n    +    private double reconnectBackOffMultiplier = 2.0f;<br/>\n    +    private long reconnectAttemptsMax = -1;<br/>\n    +    private long connectAttemptsMax = -1;<br/>\n    +<br/>\n    +    private String userName = \"\";<br/>\n    +    private String password = \"\";<br/>\n    +<br/>\n    +    private int qos = 1;<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Why are we avoiding Qos instance and using int? same for willQos.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612690874/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612690880","html_url":"https://github.com/apache/storm/issues/5241#issuecomment-2612690880","issue_url":"https://api.github.com/repos/apache/storm/issues/5241","id":2612690880,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTA4ODA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-06T09:07:05Z","updated_at":"2025-01-24T14:40:21Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user satishd commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/991#discussion_r48938394\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/991#discussion_r48938394</a></p>\n\n<p>    &#8212; Diff: external/storm-mqtt/core/src/test/java/org/apache/storm/mqtt/StormMqttIntegrationTest.java &#8212;<br/>\n    @@ -0,0 +1,132 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.mqtt;<br/>\n    +<br/>\n    +import backtype.storm.Config;<br/>\n    +import backtype.storm.LocalCluster;<br/>\n    +import backtype.storm.generated.StormTopology;<br/>\n    +import backtype.storm.testing.IntegrationTest;<br/>\n    +import backtype.storm.topology.TopologyBuilder;<br/>\n    +import backtype.storm.tuple.ITuple;<br/>\n    +import org.apache.activemq.broker.BrokerService;<br/>\n    +import org.apache.storm.mqtt.bolt.MqttBolt;<br/>\n    +import org.apache.storm.mqtt.common.MqttOptions;<br/>\n    +import org.apache.storm.mqtt.common.MqttPublisher;<br/>\n    +import org.apache.storm.mqtt.mappers.StringMessageMapper;<br/>\n    +import org.apache.storm.mqtt.spout.MqttSpout;<br/>\n    +import org.fusesource.mqtt.client.BlockingConnection;<br/>\n    +import org.fusesource.mqtt.client.MQTT;<br/>\n    +import org.fusesource.mqtt.client.Message;<br/>\n    +import org.fusesource.mqtt.client.QoS;<br/>\n    +import org.fusesource.mqtt.client.Topic;<br/>\n    +import org.junit.AfterClass;<br/>\n    +import org.junit.Assert;<br/>\n    +import org.junit.BeforeClass;<br/>\n    +import org.junit.Test;<br/>\n    +import org.junit.experimental.categories.Category;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +import java.io.Serializable;<br/>\n    +import java.net.URI;<br/>\n    +import java.util.Arrays;<br/>\n    +<br/>\n    +@Category(IntegrationTest.class)<br/>\n    +public class StormMqttIntegrationTest implements Serializable{<br/>\n    +    private static final Logger LOG = LoggerFactory.getLogger(StormMqttIntegrationTest.class);<br/>\n    +    private static BrokerService broker;<br/>\n    +<br/>\n    +<br/>\n    +    @AfterClass<br/>\n    +    public static void cleanup() throws Exception </p>\n{\n    +broker.stop();\n    +    }\n<p>    +<br/>\n    +    @BeforeClass<br/>\n    +    public static void start() throws Exception </p>\n{\n    +LOG.warn(\"Starting broker...\");\n    +broker = new BrokerService();\n    +broker.addConnector(\"mqtt://localhost:1883\");\n    +broker.setDataDirectory(\"target\");\n    +broker.start();\n    +LOG.debug(\"MQTT broker started\");\n    +    }\n<p>    +<br/>\n    +<br/>\n    +    @Test<br/>\n    +    public void testMqttTopology() throws Exception {<br/>\n    +MQTT client = new MQTT();<br/>\n    +client.setTracer(new MqttLogger());<br/>\n    +URI uri = URI.create(\"tcp://localhost:1883\");<br/>\n    +client.setHost(uri);<br/>\n    +<br/>\n    +client.setClientId(\"MQTTSubscriber\");<br/>\n    +client.setCleanSession(false);<br/>\n    +BlockingConnection connection = client.blockingConnection();<br/>\n    +connection.connect();<br/>\n    +Topic[] topics = </p>\n{new Topic(\"/integration-result\", QoS.AT_LEAST_ONCE)}\n<p>;<br/>\n    +byte[] qoses = connection.subscribe(topics);<br/>\n    +<br/>\n    +LocalCluster cluster = new LocalCluster();<br/>\n    +cluster.submitTopology(\"test\", new Config(), buildMqttTopology());<br/>\n    +<br/>\n    +System.out.println(\"topology started\");<br/>\n    +Thread.sleep(10000);<br/>\n    +<br/>\n    +// publish a retained message to the broker<br/>\n    +MqttOptions options = new MqttOptions();<br/>\n    +options.setCleanConnection(false);<br/>\n    +MqttPublisher publisher = new MqttPublisher(options);<br/>\n    +publisher.connectMqtt(\"MqttPublisher\");<br/>\n    +publisher.publish(new MqttMessage(\"/mqtt-topology\", \"test\".getBytes()), true);<br/>\n    +<br/>\n    +LOG.info(\"published message\");<br/>\n    +<br/>\n    +Message message = connection.receive();<br/>\n    +LOG.info(\"Message recieved on topic: \" + message.getTopic());<br/>\n    +LOG.info(\"Payload: \" + new String(message.getPayload()));<br/>\n    +message.ack();<br/>\n    +<br/>\n    +Assert.assertArrayEquals(message.getPayload(), \"hello mqtt\".getBytes());<br/>\n    +Assert.assertEquals(message.getTopic(), \"/integration-result\");<br/>\n    +cluster.shutdown();<br/>\n    +    }<br/>\n    +<br/>\n    +    public StormTopology buildMqttTopology(){<br/>\n    +TopologyBuilder builder = new TopologyBuilder();<br/>\n    +<br/>\n    +MqttOptions options = new MqttOptions();<br/>\n    +options.setTopics(Arrays.asList(\"/mqtt-topology\"));<br/>\n    +options.setCleanConnection(false);<br/>\n    +MqttSpout spout = new MqttSpout(new StringMessageMapper(), options);<br/>\n    +<br/>\n    +MqttBolt bolt = new MqttBolt(options, new MqttTupleMapper() {<br/>\n    +    @Override<br/>\n    +    public MqttMessage toMessage(ITuple tuple) {<br/>\n    +LOG.info(\"Received: \" + tuple);<br/>\n    +return new MqttMessage(\"/integration-result\", \"hello mqtt\".getBytes());<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    You may want to extract constants for topic names like \"/integration-result\", \"/mqtt-topology\"  as they are used at multiple places.</p>\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612690880/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/169271860","html_url":"https://github.com/apache/storm/pull/991#issuecomment-169271860","issue_url":"https://api.github.com/repos/apache/storm/issues/991","id":169271860,"node_id":"MDEyOklzc3VlQ29tbWVudDE2OTI3MTg2MA==","user":{"login":"satishd","id":2577761,"node_id":"MDQ6VXNlcjI1Nzc3NjE=","avatar_url":"https://avatars.githubusercontent.com/u/2577761?v=4","gravatar_id":"","url":"https://api.github.com/users/satishd","html_url":"https://github.com/satishd","followers_url":"https://api.github.com/users/satishd/followers","following_url":"https://api.github.com/users/satishd/following{/other_user}","gists_url":"https://api.github.com/users/satishd/gists{/gist_id}","starred_url":"https://api.github.com/users/satishd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/satishd/subscriptions","organizations_url":"https://api.github.com/users/satishd/orgs","repos_url":"https://api.github.com/users/satishd/repos","events_url":"https://api.github.com/users/satishd/events{/privacy}","received_events_url":"https://api.github.com/users/satishd/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-06T09:08:26Z","updated_at":"2016-01-06T14:47:03Z","author_association":"MEMBER","body":"Minor nitpicks, +1 LGTM.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/169271860/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612690887","html_url":"https://github.com/apache/storm/issues/5241#issuecomment-2612690887","issue_url":"https://api.github.com/repos/apache/storm/issues/5241","id":2612690887,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTA4ODc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-06T09:08:27Z","updated_at":"2025-01-24T14:40:21Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user satishd commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/991#issuecomment-169271860\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/991#issuecomment-169271860</a></p>\n\n<p>    +1 LGTM.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612690887/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612695499","html_url":"https://github.com/apache/storm/issues/5271#issuecomment-2612695499","issue_url":"https://api.github.com/repos/apache/storm/issues/5271","id":2612695499,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTU0OTk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-06T10:02:58Z","updated_at":"2025-01-24T14:42:19Z","author_association":"COLLABORATOR","body":"Subtask of parent task STORM-915","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612695499/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612695656","html_url":"https://github.com/apache/storm/issues/5272#issuecomment-2612695656","issue_url":"https://api.github.com/repos/apache/storm/issues/5272","id":2612695656,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTU2NTY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-06T10:08:45Z","updated_at":"2025-01-24T14:42:23Z","author_association":"COLLABORATOR","body":"Subtask of parent task STORM-915","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612695656/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612695798","html_url":"https://github.com/apache/storm/issues/5273#issuecomment-2612695798","issue_url":"https://api.github.com/repos/apache/storm/issues/5273","id":2612695798,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTU3OTg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-06T10:11:59Z","updated_at":"2025-01-24T14:42:26Z","author_association":"COLLABORATOR","body":"Subtask of parent task STORM-915","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612695798/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612695928","html_url":"https://github.com/apache/storm/issues/5274#issuecomment-2612695928","issue_url":"https://api.github.com/repos/apache/storm/issues/5274","id":2612695928,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTU5Mjg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-06T10:14:17Z","updated_at":"2025-01-24T14:42:30Z","author_association":"COLLABORATOR","body":"Subtask of parent task STORM-915","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612695928/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612526523","html_url":"https://github.com/apache/storm/issues/4517#issuecomment-2612526523","issue_url":"https://api.github.com/repos/apache/storm/issues/4517","id":2612526523,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1MjY1MjM=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-06T10:21:44Z","updated_at":"2025-01-24T13:25:25Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=satish.duggana\">satish.duggana</a>:</i>\n<p><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=revans2\" class=\"user-hover\" rel=\"revans2\">Robert Joseph Evans</a>, <a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=dagit\" class=\"user-hover\" rel=\"dagit\">Derek Dagit</a> , I am working on adding windowing capability to trident streams. I am new to storm-trident code. Can you please go through the attached doc and let me know your suggestions?</p>\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612526523/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612696076","html_url":"https://github.com/apache/storm/issues/5275#issuecomment-2612696076","issue_url":"https://api.github.com/repos/apache/storm/issues/5275","id":2612696076,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTYwNzY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-06T11:45:41Z","updated_at":"2025-01-24T14:42:34Z","author_association":"COLLABORATOR","body":"Subtask of parent task STORM-915","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612696076/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612696212","html_url":"https://github.com/apache/storm/issues/5276#issuecomment-2612696212","issue_url":"https://api.github.com/repos/apache/storm/issues/5276","id":2612696212,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTYyMTI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-06T11:49:29Z","updated_at":"2025-01-24T14:42:37Z","author_association":"COLLABORATOR","body":"Subtask of parent task STORM-915","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612696212/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612690890","html_url":"https://github.com/apache/storm/issues/5241#issuecomment-2612690890","issue_url":"https://api.github.com/repos/apache/storm/issues/5241","id":2612690890,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTA4OTA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-06T13:46:13Z","updated_at":"2025-01-24T14:40:21Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user HeartSaVioR commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/991#discussion_r48957659\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/991#discussion_r48957659</a></p>\n\n<p>    &#8212; Diff: external/storm-mqtt/core/src/main/java/org/apache/storm/mqtt/bolt/MqttBolt.java &#8212;<br/>\n    @@ -0,0 +1,108 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.mqtt.bolt;<br/>\n    +<br/>\n    +import backtype.storm.Config;<br/>\n    +import backtype.storm.task.OutputCollector;<br/>\n    +import backtype.storm.task.TopologyContext;<br/>\n    +import backtype.storm.topology.OutputFieldsDeclarer;<br/>\n    +import backtype.storm.topology.base.BaseRichBolt;<br/>\n    +import backtype.storm.tuple.Tuple;<br/>\n    +import backtype.storm.utils.TupleUtils;<br/>\n    +import org.apache.storm.mqtt.MqttMessage;<br/>\n    +import org.apache.storm.mqtt.common.MqttOptions;<br/>\n    +import org.apache.storm.mqtt.MqttTupleMapper;<br/>\n    +import org.apache.storm.mqtt.common.MqttPublisher;<br/>\n    +import org.apache.storm.mqtt.common.SslUtils;<br/>\n    +import org.apache.storm.mqtt.ssl.KeyStoreLoader;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +import java.util.Map;<br/>\n    +<br/>\n    +<br/>\n    +public class MqttBolt extends BaseRichBolt {<br/>\n    +    private static final Logger LOG = LoggerFactory.getLogger(MqttBolt.class);<br/>\n    +    private MqttTupleMapper mapper;<br/>\n    +    private transient MqttPublisher publisher;<br/>\n    +    private boolean retain = false;<br/>\n    +    private transient OutputCollector collector;<br/>\n    +    private MqttOptions options;<br/>\n    +    private KeyStoreLoader keyStoreLoader;<br/>\n    +    private transient String topologyName;<br/>\n    +<br/>\n    +<br/>\n    +    public MqttBolt(MqttOptions options, MqttTupleMapper mapper)</p>\n{\n    +this(options, mapper, null, false);\n    +    }\n<p>    +<br/>\n    +    public MqttBolt(MqttOptions options, MqttTupleMapper mapper, boolean retain)</p>\n{\n    +this(options, mapper, null, retain);\n    +    }\n<p>    +<br/>\n    +    public MqttBolt(MqttOptions options, MqttTupleMapper mapper, KeyStoreLoader keyStoreLoader)</p>\n{\n    +this(options, mapper, keyStoreLoader, false);\n    +    }\n<p>    +<br/>\n    +    public MqttBolt(MqttOptions options, MqttTupleMapper mapper, KeyStoreLoader keyStoreLoader, boolean retain)</p>\n{\n    +this.options = options;\n    +this.mapper = mapper;\n    +this.retain = retain;\n    +this.keyStoreLoader = keyStoreLoader;\n    +// the following code is duplicated in the constructor of MqttPublisher\n    +// we reproduce it here so we fail on the client side if SSL is misconfigured, rather than when the topology\n    +// is deployed to the cluster\n    +SslUtils.checkSslConfig(this.options.getUrl(), keyStoreLoader);\n    +    }\n<p>    +<br/>\n    +    @Override<br/>\n    +    public void prepare(Map conf, TopologyContext context, OutputCollector collector) {<br/>\n    +this.collector = collector;<br/>\n    +this.topologyName = (String)conf.get(Config.TOPOLOGY_NAME);<br/>\n    +this.publisher = new MqttPublisher(this.options, this.keyStoreLoader, this.retain);<br/>\n    +try </p>\n{\n    +    this.publisher.connectMqtt(this.topologyName + \"-\" + context.getThisComponentId() + \"-\" + context.getThisTaskId());\n    +}\n<p> catch (Exception e) </p>\n{\n    +    LOG.error(\"Unable to connect to MQTT Broker.\", e);\n    +    throw new RuntimeException(\"Unable to connect to MQTT Broker.\", e);\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    @Override<br/>\n    +    public void execute(Tuple input) {<br/>\n    +//ignore tick tuples<br/>\n    +if(!TupleUtils.isTick(input)){<br/>\n    +    MqttMessage message = this.mapper.toMessage(input);<br/>\n    +    try </p>\n{\n    +this.publisher.publish(message, this.retain);\n    +this.collector.ack(input);\n    +    }\n<p> catch (Exception e) {<br/>\n    +LOG.warn(\"Error publishing MQTT message. Failing tuple.\", e);<br/>\n    +// should we fail the tuple or kill the worker?<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Maybe we want to add `collector.reportError(e);`</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612690890/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/169330085","html_url":"https://github.com/apache/storm/pull/977#issuecomment-169330085","issue_url":"https://api.github.com/repos/apache/storm/issues/977","id":169330085,"node_id":"MDEyOklzc3VlQ29tbWVudDE2OTMzMDA4NQ==","user":{"login":"dossett","id":7207582,"node_id":"MDQ6VXNlcjcyMDc1ODI=","avatar_url":"https://avatars.githubusercontent.com/u/7207582?v=4","gravatar_id":"","url":"https://api.github.com/users/dossett","html_url":"https://github.com/dossett","followers_url":"https://api.github.com/users/dossett/followers","following_url":"https://api.github.com/users/dossett/following{/other_user}","gists_url":"https://api.github.com/users/dossett/gists{/gist_id}","starred_url":"https://api.github.com/users/dossett/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dossett/subscriptions","organizations_url":"https://api.github.com/users/dossett/orgs","repos_url":"https://api.github.com/users/dossett/repos","events_url":"https://api.github.com/users/dossett/events{/privacy}","received_events_url":"https://api.github.com/users/dossett/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-06T14:01:34Z","updated_at":"2016-01-06T14:01:34Z","author_association":"CONTRIBUTOR","body":"@vesense Thanks for the info about the global configuration. Aside from the issues @HeartSaVioR brings up, I think adding bolt-level option for tick tuples to the solr bolt is necessary. Without that, the only way for a user to enable ticks for the solr bolt is to enable them for the entire topology.  That's very different than the other output bolts (hdfs, hive) that support ticks.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/169330085/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612692833","html_url":"https://github.com/apache/storm/issues/5254#issuecomment-2612692833","issue_url":"https://api.github.com/repos/apache/storm/issues/5254","id":2612692833,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTI4MzM=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-06T14:01:35Z","updated_at":"2025-01-24T14:41:12Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user dossett commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/977#issuecomment-169330085\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/977#issuecomment-169330085</a></p>\n\n<p>    @vesense Thanks for the info about the global configuration. Aside from the issues @HeartSaVioR brings up, I think adding bolt-level option for tick tuples to the solr bolt is necessary. Without that, the only way for a user to enable ticks for the solr bolt is to enable them for the entire topology.  That's very different than the other output bolts (hdfs, hive) that support ticks.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612692833/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612690895","html_url":"https://github.com/apache/storm/issues/5241#issuecomment-2612690895","issue_url":"https://api.github.com/repos/apache/storm/issues/5241","id":2612690895,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTA4OTU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-06T14:15:56Z","updated_at":"2025-01-24T14:40:22Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user HeartSaVioR commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/991#discussion_r48960421\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/991#discussion_r48960421</a></p>\n\n<p>    &#8212; Diff: external/storm-mqtt/core/src/main/java/org/apache/storm/mqtt/spout/MqttSpout.java &#8212;<br/>\n    @@ -0,0 +1,291 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.mqtt.spout;<br/>\n    +<br/>\n    +import backtype.storm.Config;<br/>\n    +import backtype.storm.spout.SpoutOutputCollector;<br/>\n    +import backtype.storm.task.TopologyContext;<br/>\n    +import backtype.storm.topology.IRichSpout;<br/>\n    +import backtype.storm.topology.OutputFieldsDeclarer;<br/>\n    +import org.apache.storm.mqtt.MqttLogger;<br/>\n    +import org.apache.storm.mqtt.MqttMessageMapper;<br/>\n    +import org.apache.storm.mqtt.common.MqttOptions;<br/>\n    +import org.apache.storm.mqtt.common.MqttUtils;<br/>\n    +import org.apache.storm.mqtt.common.SslUtils;<br/>\n    +import org.apache.storm.mqtt.ssl.KeyStoreLoader;<br/>\n    +import org.fusesource.hawtbuf.Buffer;<br/>\n    +import org.fusesource.hawtbuf.UTF8Buffer;<br/>\n    +import org.fusesource.mqtt.client.Callback;<br/>\n    +import org.fusesource.mqtt.client.CallbackConnection;<br/>\n    +import org.fusesource.mqtt.client.Listener;<br/>\n    +import org.fusesource.mqtt.client.MQTT;<br/>\n    +import org.fusesource.mqtt.client.QoS;<br/>\n    +import org.fusesource.mqtt.client.Topic;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +import java.net.URI;<br/>\n    +import java.util.HashMap;<br/>\n    +import java.util.List;<br/>\n    +import java.util.Map;<br/>\n    +import java.util.concurrent.LinkedBlockingQueue;<br/>\n    +<br/>\n    +public class MqttSpout implements IRichSpout, Listener {<br/>\n    +    private static final Logger LOG = LoggerFactory.getLogger(MqttSpout.class);<br/>\n    +<br/>\n    +    private String topologyName;<br/>\n    +<br/>\n    +<br/>\n    +    private CallbackConnection connection;<br/>\n    +<br/>\n    +    protected transient SpoutOutputCollector collector;<br/>\n    +    protected transient TopologyContext context;<br/>\n    +    protected transient LinkedBlockingQueue<AckableMessage> incoming;<br/>\n    +    protected transient HashMap<Long, AckableMessage> pending;<br/>\n    +    private transient Map conf;<br/>\n    +    protected MqttMessageMapper type;<br/>\n    +    protected MqttOptions options;<br/>\n    +    protected KeyStoreLoader keyStoreLoader;<br/>\n    +<br/>\n    +    private boolean mqttConnected = false;<br/>\n    +    private boolean mqttConnectFailed = false;<br/>\n    +<br/>\n    +<br/>\n    +    private Long sequence = Long.MIN_VALUE;<br/>\n    +<br/>\n    +    private Long nextId(){<br/>\n    +this.sequence++;<br/>\n    +if(this.sequence == Long.MAX_VALUE)</p>\n{\n    +    this.sequence = Long.MIN_VALUE;\n    +}\n<p>    +return this.sequence;<br/>\n    +    }<br/>\n    +<br/>\n    +<br/>\n    +    public MqttSpout(MqttMessageMapper type, MqttOptions options)</p>\n{\n    +this(type, options, null);\n    +    }\n<p>    +<br/>\n    +    public MqttSpout(MqttMessageMapper type, MqttOptions options, KeyStoreLoader keyStoreLoader)</p>\n{\n    +this.type = type;\n    +this.options = options;\n    +this.keyStoreLoader = keyStoreLoader;\n    +SslUtils.checkSslConfig(this.options.getUrl(), this.keyStoreLoader);\n    +    }\n<p>    +<br/>\n    +    public void declareOutputFields(OutputFieldsDeclarer declarer) </p>\n{\n    +declarer.declare(this.type.outputFields());\n    +    }\n<p>    +<br/>\n    +    public Map<String, Object> getComponentConfiguration() </p>\n{\n    +return null;\n    +    }\n<p>    +<br/>\n    +    public void open(Map conf, TopologyContext context, SpoutOutputCollector collector) {<br/>\n    +this.topologyName = (String)conf.get(Config.TOPOLOGY_NAME);<br/>\n    +<br/>\n    +this.collector = collector;<br/>\n    +this.context = context;<br/>\n    +this.conf = conf;<br/>\n    +<br/>\n    +this.incoming = new LinkedBlockingQueue<>();<br/>\n    +this.pending = new HashMap<>();<br/>\n    +<br/>\n    +try </p>\n{\n    +    connectMqtt();\n    +}\n<p> catch (Exception e) </p>\n{\n    +    this.collector.reportError(e);\n    +    throw new RuntimeException(\"MQTT Connection failed.\", e);\n    +}\n<p>    +<br/>\n    +    }<br/>\n    +<br/>\n    +    private void connectMqtt() throws Exception {<br/>\n    +MQTT client = new MQTT();<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Code block from L119 to L148 is duplicated by MqttPublisher.connectMqtt(), L65 to L93, except setting up client id.<br/>\n    We may want to extract duplicated codes to method of another new (util?) class.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612690895/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612690899","html_url":"https://github.com/apache/storm/issues/5241#issuecomment-2612690899","issue_url":"https://api.github.com/repos/apache/storm/issues/5241","id":2612690899,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTA4OTk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-06T14:37:38Z","updated_at":"2025-01-24T14:40:22Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user HeartSaVioR commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/991#discussion_r48962915\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/991#discussion_r48962915</a></p>\n\n<p>    &#8212; Diff: external/storm-mqtt/core/pom.xml &#8212;<br/>\n    @@ -0,0 +1,153 @@<br/>\n    +<!--<br/>\n    + Licensed to the Apache Software Foundation (ASF) under one or more<br/>\n    + contributor license agreements.  See the NOTICE file distributed with<br/>\n    + this work for additional information regarding copyright ownership.<br/>\n    + The ASF licenses this file to You under the Apache License, Version 2.0<br/>\n    + (the \"License\"); you may not use this file except in compliance with<br/>\n    + the License.  You may obtain a copy of the License at<br/>\n    +<br/>\n    +     <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    +<br/>\n    + Unless required by applicable law or agreed to in writing, software<br/>\n    + distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + See the License for the specific language governing permissions and<br/>\n    + limitations under the License.<br/>\n    +--><br/>\n    +<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"<br/>\n    +  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 <a href=\"http://maven.apache.org/xsd/maven-4.0.0.xsd\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://maven.apache.org/xsd/maven-4.0.0.xsd</a>\"><br/>\n    +  <modelVersion>4.0.0</modelVersion><br/>\n    +<br/>\n    +  <artifactId>storm-mqtt</artifactId><br/>\n    +  <packaging>jar</packaging><br/>\n    +<br/>\n    +  <name>storm-mqtt</name><br/>\n    +<br/>\n    +  <parent><br/>\n    +    <groupId>org.apache.storm</groupId><br/>\n    +    <artifactId>storm-mqtt-parent</artifactId><br/>\n    +      <version>0.11.0-SNAPSHOT</version><br/>\n    +    <relativePath>../pom.xml</relativePath><br/>\n    +  </parent><br/>\n    +<br/>\n    +  <properties><br/>\n    +    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><br/>\n    +  </properties><br/>\n    +<br/>\n    +  <repositories><br/>\n    +    <repository><br/>\n    +      <id>bintray</id><br/>\n    +      <url><a href=\"http://dl.bintray.com/andsel/maven/\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://dl.bintray.com/andsel/maven/</a></url><br/>\n    +      <releases><br/>\n    +<enabled>true</enabled><br/>\n    +      </releases><br/>\n    +      <snapshots><br/>\n    +<enabled>false</enabled><br/>\n    +      </snapshots><br/>\n    +    </repository><br/>\n    +  </repositories><br/>\n    +<br/>\n    +  <dependencies><br/>\n    +      <dependency><br/>\n    +  <groupId>org.apache.activemq</groupId><br/>\n    +  <artifactId>activemq-broker</artifactId><br/>\n    +  <version>5.9.0</version><br/>\n    +  <scope>test</scope><br/>\n    +      </dependency><br/>\n    +      <dependency><br/>\n    +  <groupId>org.apache.activemq</groupId><br/>\n    +  <artifactId>activemq-mqtt</artifactId><br/>\n    +  <version>5.9.0</version><br/>\n    +  <scope>test</scope><br/>\n    +      </dependency><br/>\n    +      <dependency><br/>\n    +  <groupId>org.apache.activemq</groupId><br/>\n    +  <artifactId>activemq-kahadb-store</artifactId><br/>\n    +  <version>5.9.0</version><br/>\n    +  <scope>test</scope><br/>\n    +      </dependency><br/>\n    +<br/>\n    +      <dependency><br/>\n    +      <groupId>org.apache.storm</groupId><br/>\n    +      <artifactId>storm-core</artifactId><br/>\n    +      <version>${project.version}</version><br/>\n    +      <scope>provided</scope><br/>\n    +    </dependency><br/>\n    +    <dependency><br/>\n    +      <groupId>org.apache.storm</groupId><br/>\n    +      <artifactId>flux-core</artifactId><br/>\n    +      <version>${project.version}</version><br/>\n    +    </dependency><br/>\n    +    <dependency><br/>\n    +      <groupId>org.fusesource.mqtt-client</groupId><br/>\n    +      <artifactId>mqtt-client</artifactId><br/>\n    +      <version>1.10</version><br/>\n    +    </dependency><br/>\n    +    <dependency><br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Maybe we don't need to add storm-hdfs as dependency since it is not used.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612690899/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612690906","html_url":"https://github.com/apache/storm/issues/5241#issuecomment-2612690906","issue_url":"https://api.github.com/repos/apache/storm/issues/5241","id":2612690906,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTA5MDY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-06T14:39:01Z","updated_at":"2025-01-24T14:40:22Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user HeartSaVioR commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/991#discussion_r48963061\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/991#discussion_r48963061</a></p>\n\n<p>    &#8212; Diff: external/storm-mqtt/core/pom.xml &#8212;<br/>\n    @@ -0,0 +1,153 @@<br/>\n    +<!--<br/>\n    + Licensed to the Apache Software Foundation (ASF) under one or more<br/>\n    + contributor license agreements.  See the NOTICE file distributed with<br/>\n    + this work for additional information regarding copyright ownership.<br/>\n    + The ASF licenses this file to You under the Apache License, Version 2.0<br/>\n    + (the \"License\"); you may not use this file except in compliance with<br/>\n    + the License.  You may obtain a copy of the License at<br/>\n    +<br/>\n    +     <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    +<br/>\n    + Unless required by applicable law or agreed to in writing, software<br/>\n    + distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + See the License for the specific language governing permissions and<br/>\n    + limitations under the License.<br/>\n    +--><br/>\n    +<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"<br/>\n    +  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 <a href=\"http://maven.apache.org/xsd/maven-4.0.0.xsd\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://maven.apache.org/xsd/maven-4.0.0.xsd</a>\"><br/>\n    +  <modelVersion>4.0.0</modelVersion><br/>\n    +<br/>\n    +  <artifactId>storm-mqtt</artifactId><br/>\n    +  <packaging>jar</packaging><br/>\n    +<br/>\n    +  <name>storm-mqtt</name><br/>\n    +<br/>\n    +  <parent><br/>\n    +    <groupId>org.apache.storm</groupId><br/>\n    +    <artifactId>storm-mqtt-parent</artifactId><br/>\n    +      <version>0.11.0-SNAPSHOT</version><br/>\n    +    <relativePath>../pom.xml</relativePath><br/>\n    +  </parent><br/>\n    +<br/>\n    +  <properties><br/>\n    +    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><br/>\n    +  </properties><br/>\n    +<br/>\n    +  <repositories><br/>\n    +    <repository><br/>\n    +      <id>bintray</id><br/>\n    +      <url><a href=\"http://dl.bintray.com/andsel/maven/\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://dl.bintray.com/andsel/maven/</a></url><br/>\n    +      <releases><br/>\n    +<enabled>true</enabled><br/>\n    +      </releases><br/>\n    +      <snapshots><br/>\n    +<enabled>false</enabled><br/>\n    +      </snapshots><br/>\n    +    </repository><br/>\n    +  </repositories><br/>\n    +<br/>\n    +  <dependencies><br/>\n    +      <dependency><br/>\n    +  <groupId>org.apache.activemq</groupId><br/>\n    +  <artifactId>activemq-broker</artifactId><br/>\n    +  <version>5.9.0</version><br/>\n    +  <scope>test</scope><br/>\n    +      </dependency><br/>\n    +      <dependency><br/>\n    +  <groupId>org.apache.activemq</groupId><br/>\n    +  <artifactId>activemq-mqtt</artifactId><br/>\n    +  <version>5.9.0</version><br/>\n    +  <scope>test</scope><br/>\n    +      </dependency><br/>\n    +      <dependency><br/>\n    +  <groupId>org.apache.activemq</groupId><br/>\n    +  <artifactId>activemq-kahadb-store</artifactId><br/>\n    +  <version>5.9.0</version><br/>\n    +  <scope>test</scope><br/>\n    +      </dependency><br/>\n    +<br/>\n    +      <dependency><br/>\n    +      <groupId>org.apache.storm</groupId><br/>\n    +      <artifactId>storm-core</artifactId><br/>\n    +      <version>${project.version}</version><br/>\n    +      <scope>provided</scope><br/>\n    +    </dependency><br/>\n    +    <dependency><br/>\n    +      <groupId>org.apache.storm</groupId><br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Moving dependency of flux-core to mqtt-example module would be more sense.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612690906/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/169343216","html_url":"https://github.com/apache/storm/pull/991#issuecomment-169343216","issue_url":"https://api.github.com/repos/apache/storm/issues/991","id":169343216,"node_id":"MDEyOklzc3VlQ29tbWVudDE2OTM0MzIxNg==","user":{"login":"HeartSaVioR","id":1317309,"node_id":"MDQ6VXNlcjEzMTczMDk=","avatar_url":"https://avatars.githubusercontent.com/u/1317309?v=4","gravatar_id":"","url":"https://api.github.com/users/HeartSaVioR","html_url":"https://github.com/HeartSaVioR","followers_url":"https://api.github.com/users/HeartSaVioR/followers","following_url":"https://api.github.com/users/HeartSaVioR/following{/other_user}","gists_url":"https://api.github.com/users/HeartSaVioR/gists{/gist_id}","starred_url":"https://api.github.com/users/HeartSaVioR/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HeartSaVioR/subscriptions","organizations_url":"https://api.github.com/users/HeartSaVioR/orgs","repos_url":"https://api.github.com/users/HeartSaVioR/repos","events_url":"https://api.github.com/users/HeartSaVioR/events{/privacy}","received_events_url":"https://api.github.com/users/HeartSaVioR/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-06T14:50:07Z","updated_at":"2016-01-06T14:50:07Z","author_association":"CONTRIBUTOR","body":"As we know, flux-example contains other external modules.\nIn this PR storm-mqtt-example contains flux-core, which direction is opponent.\nIMHO making it consistent would be more appreciated.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/169343216/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612690911","html_url":"https://github.com/apache/storm/issues/5241#issuecomment-2612690911","issue_url":"https://api.github.com/repos/apache/storm/issues/5241","id":2612690911,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTA5MTE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-06T14:50:08Z","updated_at":"2025-01-24T14:40:22Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user HeartSaVioR commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/991#issuecomment-169343216\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/991#issuecomment-169343216</a></p>\n\n<p>    As we know, flux-example contains other external modules.<br/>\n    In this PR storm-mqtt-example contains flux-core, which direction is opponent.<br/>\n    IMHO making it consistent would be more appreciated.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612690911/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/169343376","html_url":"https://github.com/apache/storm/pull/991#issuecomment-169343376","issue_url":"https://api.github.com/repos/apache/storm/issues/991","id":169343376,"node_id":"MDEyOklzc3VlQ29tbWVudDE2OTM0MzM3Ng==","user":{"login":"HeartSaVioR","id":1317309,"node_id":"MDQ6VXNlcjEzMTczMDk=","avatar_url":"https://avatars.githubusercontent.com/u/1317309?v=4","gravatar_id":"","url":"https://api.github.com/users/HeartSaVioR","html_url":"https://github.com/HeartSaVioR","followers_url":"https://api.github.com/users/HeartSaVioR/followers","following_url":"https://api.github.com/users/HeartSaVioR/following{/other_user}","gists_url":"https://api.github.com/users/HeartSaVioR/gists{/gist_id}","starred_url":"https://api.github.com/users/HeartSaVioR/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HeartSaVioR/subscriptions","organizations_url":"https://api.github.com/users/HeartSaVioR/orgs","repos_url":"https://api.github.com/users/HeartSaVioR/repos","events_url":"https://api.github.com/users/HeartSaVioR/events{/privacy}","received_events_url":"https://api.github.com/users/HeartSaVioR/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-06T14:50:34Z","updated_at":"2016-01-06T14:50:34Z","author_association":"CONTRIBUTOR","body":"Left some comments, but looks great overall.\nActually I don't know about MQTT protocol for now, but mqtt-client abstracts it so I didn't have inconvenience to review this PR. Just I can't test it with real IoT machine.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/169343376/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612690917","html_url":"https://github.com/apache/storm/issues/5241#issuecomment-2612690917","issue_url":"https://api.github.com/repos/apache/storm/issues/5241","id":2612690917,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTA5MTc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-06T14:50:35Z","updated_at":"2025-01-24T14:40:22Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user HeartSaVioR commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/991#issuecomment-169343376\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/991#issuecomment-169343376</a></p>\n\n<p>    Left some comments, but looks great overall.<br/>\n    Actually I don't know about MQTT protocol for now, but mqtt-client abstracts it so I didn't have inconvenience to review this PR. Just I can't test it with real IoT machine.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612690917/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612526526","html_url":"https://github.com/apache/storm/issues/4517#issuecomment-2612526526","issue_url":"https://api.github.com/repos/apache/storm/issues/4517","id":2612526526,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1MjY1MjY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-06T15:43:53Z","updated_at":"2025-01-24T13:25:25Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=revans2\">revans2</a>:</i>\n<p><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=satish.duggana\" class=\"user-hover\" rel=\"satish.duggana\">Satish Duggana</a>,</p>\n\n<p>The document seems to make since, but it is at a very high level.  It says you have a working prototype for windowing.  Could you post something describing the changes you had to make to the coordinators or how the coordination works to support the windowing operations.  Also an explanation of how the windowed state will be stored would be very good. I would like to see both the format and how the bolts communicate the state to the state store.  Will there be any aggregation before writing the state?  How will you handle a topology coming down and a new one with a different parallelism of bolts/spouts coming back up?  I would suspect that it should not be a problem as we can aggregate over the old parallelism + the new parallelism, but I want to be sure we take that into account.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612526526/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612690923","html_url":"https://github.com/apache/storm/issues/5241#issuecomment-2612690923","issue_url":"https://api.github.com/repos/apache/storm/issues/5241","id":2612690923,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTA5MjM=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-06T16:27:21Z","updated_at":"2025-01-24T14:40:22Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user ptgoetz commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/991#discussion_r48976202\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/991#discussion_r48976202</a></p>\n\n<p>    &#8212; Diff: external/storm-mqtt/core/src/main/java/org/apache/storm/mqtt/common/MqttUtils.java &#8212;<br/>\n    @@ -0,0 +1,44 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.mqtt.common;<br/>\n    +<br/>\n    +<br/>\n    +import org.fusesource.mqtt.client.QoS;<br/>\n    +<br/>\n    +public class MqttUtils {<br/>\n    +<br/>\n    +    private MqttUtils(){}<br/>\n    +<br/>\n    +    public static QoS qosFromInt(int i){<br/>\n    +QoS qos = null;<br/>\n    +switch<img class=\"emoticon\" src=\"https://issues.apache.org/jira/images/icons/emoticons/information.png\" height=\"16\" width=\"16\" align=\"absmiddle\" alt=\"\" border=\"0\"/> {<br/>\n    +    case 0:<br/>\n    +qos = QoS.AT_MOST_ONCE;<br/>\n    +break;<br/>\n    +    case 1:<br/>\n    +qos = QoS.AT_LEAST_ONCE;<br/>\n    +break;<br/>\n    +    case 2:<br/>\n    +qos = QoS.EXACTLY_ONCE;<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    I wanted to shield users from the underlying MQTT client implementation. The `QoS` enum is in the `org.fusesource.mqtt.client` package, which users would have to import. If for some reason we switched the MQTT client implementation, it would break existing user code. With this approach we can avoid that.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612690923/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612690933","html_url":"https://github.com/apache/storm/issues/5241#issuecomment-2612690933","issue_url":"https://api.github.com/repos/apache/storm/issues/5241","id":2612690933,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTA5MzM=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-06T16:27:37Z","updated_at":"2025-01-24T14:40:22Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user ptgoetz commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/991#discussion_r48976235\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/991#discussion_r48976235</a></p>\n\n<p>    &#8212; Diff: external/storm-mqtt/core/src/main/java/org/apache/storm/mqtt/common/MqttOptions.java &#8212;<br/>\n    @@ -0,0 +1,334 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.mqtt.common;<br/>\n    +<br/>\n    +import java.io.Serializable;<br/>\n    +import java.util.List;<br/>\n    +<br/>\n    +/**<br/>\n    + * MQTT Configuration Options<br/>\n    + */<br/>\n    +public class MqttOptions implements Serializable {<br/>\n    +    private String url = \"tcp://localhost:1883\";<br/>\n    +    private List<String> topics = null;<br/>\n    +    private boolean cleanConnection = false;<br/>\n    +<br/>\n    +    private String willTopic;<br/>\n    +    private String willPayload;<br/>\n    +    private int willQos = 1;<br/>\n    +    private boolean willRetain = false;<br/>\n    +<br/>\n    +    private long reconnectDelay = 10;<br/>\n    +    private long reconnectDelayMax = 30*1000;<br/>\n    +    private double reconnectBackOffMultiplier = 2.0f;<br/>\n    +    private long reconnectAttemptsMax = -1;<br/>\n    +    private long connectAttemptsMax = -1;<br/>\n    +<br/>\n    +    private String userName = \"\";<br/>\n    +    private String password = \"\";<br/>\n    +<br/>\n    +    private int qos = 1;<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    See above comment.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612690933/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612690942","html_url":"https://github.com/apache/storm/issues/5241#issuecomment-2612690942","issue_url":"https://api.github.com/repos/apache/storm/issues/5241","id":2612690942,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTA5NDI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-06T16:28:45Z","updated_at":"2025-01-24T14:40:22Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user ptgoetz commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/991#discussion_r48976364\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/991#discussion_r48976364</a></p>\n\n<p>    &#8212; Diff: external/storm-mqtt/core/src/main/java/org/apache/storm/mqtt/MqttLogger.java &#8212;<br/>\n    @@ -0,0 +1,45 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.mqtt;<br/>\n    +<br/>\n    +import org.fusesource.mqtt.client.Tracer;<br/>\n    +import org.fusesource.mqtt.codec.MQTTFrame;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +/**<br/>\n    + * Wrapper around SLF4J logger that allows MQTT messages to be logged.<br/>\n    + */<br/>\n    +public class MqttLogger extends Tracer {<br/>\n    +    private static final Logger LOG = LoggerFactory.getLogger(MqttLogger.class);<br/>\n    +<br/>\n    +    @Override<br/>\n    +    public void debug(String message, Object... args) </p>\n{\n    +LOG.debug(String.format(message, args));\n    +    }\n<p>    +<br/>\n    +    @Override<br/>\n    +    public void onSend(MQTTFrame frame) {<br/>\n    +super.onSend(frame);<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Will do.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612690942/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612690946","html_url":"https://github.com/apache/storm/issues/5241#issuecomment-2612690946","issue_url":"https://api.github.com/repos/apache/storm/issues/5241","id":2612690946,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTA5NDY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-06T16:29:14Z","updated_at":"2025-01-24T14:40:23Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user ptgoetz commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/991#discussion_r48976420\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/991#discussion_r48976420</a></p>\n\n<p>    &#8212; Diff: external/storm-mqtt/core/src/main/java/org/apache/storm/mqtt/bolt/MqttBolt.java &#8212;<br/>\n    @@ -0,0 +1,108 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.mqtt.bolt;<br/>\n    +<br/>\n    +import backtype.storm.Config;<br/>\n    +import backtype.storm.task.OutputCollector;<br/>\n    +import backtype.storm.task.TopologyContext;<br/>\n    +import backtype.storm.topology.OutputFieldsDeclarer;<br/>\n    +import backtype.storm.topology.base.BaseRichBolt;<br/>\n    +import backtype.storm.tuple.Tuple;<br/>\n    +import backtype.storm.utils.TupleUtils;<br/>\n    +import org.apache.storm.mqtt.MqttMessage;<br/>\n    +import org.apache.storm.mqtt.common.MqttOptions;<br/>\n    +import org.apache.storm.mqtt.MqttTupleMapper;<br/>\n    +import org.apache.storm.mqtt.common.MqttPublisher;<br/>\n    +import org.apache.storm.mqtt.common.SslUtils;<br/>\n    +import org.apache.storm.mqtt.ssl.KeyStoreLoader;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +import java.util.Map;<br/>\n    +<br/>\n    +<br/>\n    +public class MqttBolt extends BaseRichBolt {<br/>\n    +    private static final Logger LOG = LoggerFactory.getLogger(MqttBolt.class);<br/>\n    +    private MqttTupleMapper mapper;<br/>\n    +    private transient MqttPublisher publisher;<br/>\n    +    private boolean retain = false;<br/>\n    +    private transient OutputCollector collector;<br/>\n    +    private MqttOptions options;<br/>\n    +    private KeyStoreLoader keyStoreLoader;<br/>\n    +    private transient String topologyName;<br/>\n    +<br/>\n    +<br/>\n    +    public MqttBolt(MqttOptions options, MqttTupleMapper mapper)</p>\n{\n    +this(options, mapper, null, false);\n    +    }\n<p>    +<br/>\n    +    public MqttBolt(MqttOptions options, MqttTupleMapper mapper, boolean retain)</p>\n{\n    +this(options, mapper, null, retain);\n    +    }\n<p>    +<br/>\n    +    public MqttBolt(MqttOptions options, MqttTupleMapper mapper, KeyStoreLoader keyStoreLoader)</p>\n{\n    +this(options, mapper, keyStoreLoader, false);\n    +    }\n<p>    +<br/>\n    +    public MqttBolt(MqttOptions options, MqttTupleMapper mapper, KeyStoreLoader keyStoreLoader, boolean retain)</p>\n{\n    +this.options = options;\n    +this.mapper = mapper;\n    +this.retain = retain;\n    +this.keyStoreLoader = keyStoreLoader;\n    +// the following code is duplicated in the constructor of MqttPublisher\n    +// we reproduce it here so we fail on the client side if SSL is misconfigured, rather than when the topology\n    +// is deployed to the cluster\n    +SslUtils.checkSslConfig(this.options.getUrl(), keyStoreLoader);\n    +    }\n<p>    +<br/>\n    +    @Override<br/>\n    +    public void prepare(Map conf, TopologyContext context, OutputCollector collector) {<br/>\n    +this.collector = collector;<br/>\n    +this.topologyName = (String)conf.get(Config.TOPOLOGY_NAME);<br/>\n    +this.publisher = new MqttPublisher(this.options, this.keyStoreLoader, this.retain);<br/>\n    +try </p>\n{\n    +    this.publisher.connectMqtt(this.topologyName + \"-\" + context.getThisComponentId() + \"-\" + context.getThisTaskId());\n    +}\n<p> catch (Exception e) </p>\n{\n    +    LOG.error(\"Unable to connect to MQTT Broker.\", e);\n    +    throw new RuntimeException(\"Unable to connect to MQTT Broker.\", e);\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    @Override<br/>\n    +    public void execute(Tuple input) {<br/>\n    +//ignore tick tuples<br/>\n    +if(!TupleUtils.isTick(input)){<br/>\n    +    MqttMessage message = this.mapper.toMessage(input);<br/>\n    +    try </p>\n{\n    +this.publisher.publish(message, this.retain);\n    +this.collector.ack(input);\n    +    }\n<p> catch (Exception e) {<br/>\n    +LOG.warn(\"Error publishing MQTT message. Failing tuple.\", e);<br/>\n    +// should we fail the tuple or kill the worker?<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Good call.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612690946/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612690950","html_url":"https://github.com/apache/storm/issues/5241#issuecomment-2612690950","issue_url":"https://api.github.com/repos/apache/storm/issues/5241","id":2612690950,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTA5NTA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-06T17:58:14Z","updated_at":"2025-01-24T14:40:23Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user ptgoetz commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/991#discussion_r48987203\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/991#discussion_r48987203</a></p>\n\n<p>    &#8212; Diff: external/storm-mqtt/core/pom.xml &#8212;<br/>\n    @@ -0,0 +1,153 @@<br/>\n    +<!--<br/>\n    + Licensed to the Apache Software Foundation (ASF) under one or more<br/>\n    + contributor license agreements.  See the NOTICE file distributed with<br/>\n    + this work for additional information regarding copyright ownership.<br/>\n    + The ASF licenses this file to You under the Apache License, Version 2.0<br/>\n    + (the \"License\"); you may not use this file except in compliance with<br/>\n    + the License.  You may obtain a copy of the License at<br/>\n    +<br/>\n    +     <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    +<br/>\n    + Unless required by applicable law or agreed to in writing, software<br/>\n    + distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + See the License for the specific language governing permissions and<br/>\n    + limitations under the License.<br/>\n    +--><br/>\n    +<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"<br/>\n    +  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 <a href=\"http://maven.apache.org/xsd/maven-4.0.0.xsd\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://maven.apache.org/xsd/maven-4.0.0.xsd</a>\"><br/>\n    +  <modelVersion>4.0.0</modelVersion><br/>\n    +<br/>\n    +  <artifactId>storm-mqtt</artifactId><br/>\n    +  <packaging>jar</packaging><br/>\n    +<br/>\n    +  <name>storm-mqtt</name><br/>\n    +<br/>\n    +  <parent><br/>\n    +    <groupId>org.apache.storm</groupId><br/>\n    +    <artifactId>storm-mqtt-parent</artifactId><br/>\n    +      <version>0.11.0-SNAPSHOT</version><br/>\n    +    <relativePath>../pom.xml</relativePath><br/>\n    +  </parent><br/>\n    +<br/>\n    +  <properties><br/>\n    +    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding><br/>\n    +  </properties><br/>\n    +<br/>\n    +  <repositories><br/>\n    +    <repository><br/>\n    +      <id>bintray</id><br/>\n    +      <url><a href=\"http://dl.bintray.com/andsel/maven/\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://dl.bintray.com/andsel/maven/</a></url><br/>\n    +      <releases><br/>\n    +<enabled>true</enabled><br/>\n    +      </releases><br/>\n    +      <snapshots><br/>\n    +<enabled>false</enabled><br/>\n    +      </snapshots><br/>\n    +    </repository><br/>\n    +  </repositories><br/>\n    +<br/>\n    +  <dependencies><br/>\n    +      <dependency><br/>\n    +  <groupId>org.apache.activemq</groupId><br/>\n    +  <artifactId>activemq-broker</artifactId><br/>\n    +  <version>5.9.0</version><br/>\n    +  <scope>test</scope><br/>\n    +      </dependency><br/>\n    +      <dependency><br/>\n    +  <groupId>org.apache.activemq</groupId><br/>\n    +  <artifactId>activemq-mqtt</artifactId><br/>\n    +  <version>5.9.0</version><br/>\n    +  <scope>test</scope><br/>\n    +      </dependency><br/>\n    +      <dependency><br/>\n    +  <groupId>org.apache.activemq</groupId><br/>\n    +  <artifactId>activemq-kahadb-store</artifactId><br/>\n    +  <version>5.9.0</version><br/>\n    +  <scope>test</scope><br/>\n    +      </dependency><br/>\n    +<br/>\n    +      <dependency><br/>\n    +      <groupId>org.apache.storm</groupId><br/>\n    +      <artifactId>storm-core</artifactId><br/>\n    +      <version>${project.version}</version><br/>\n    +      <scope>provided</scope><br/>\n    +    </dependency><br/>\n    +    <dependency><br/>\n    +      <groupId>org.apache.storm</groupId><br/>\n    +      <artifactId>flux-core</artifactId><br/>\n    +      <version>${project.version}</version><br/>\n    +    </dependency><br/>\n    +    <dependency><br/>\n    +      <groupId>org.fusesource.mqtt-client</groupId><br/>\n    +      <artifactId>mqtt-client</artifactId><br/>\n    +      <version>1.10</version><br/>\n    +    </dependency><br/>\n    +    <dependency><br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Good catch. That a remnant from the original example that used HDFS.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612690950/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/169436285","html_url":"https://github.com/apache/storm/pull/977#issuecomment-169436285","issue_url":"https://api.github.com/repos/apache/storm/issues/977","id":169436285,"node_id":"MDEyOklzc3VlQ29tbWVudDE2OTQzNjI4NQ==","user":{"login":"hmcl","id":10284328,"node_id":"MDQ6VXNlcjEwMjg0MzI4","avatar_url":"https://avatars.githubusercontent.com/u/10284328?v=4","gravatar_id":"","url":"https://api.github.com/users/hmcl","html_url":"https://github.com/hmcl","followers_url":"https://api.github.com/users/hmcl/followers","following_url":"https://api.github.com/users/hmcl/following{/other_user}","gists_url":"https://api.github.com/users/hmcl/gists{/gist_id}","starred_url":"https://api.github.com/users/hmcl/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hmcl/subscriptions","organizations_url":"https://api.github.com/users/hmcl/orgs","repos_url":"https://api.github.com/users/hmcl/repos","events_url":"https://api.github.com/users/hmcl/events{/privacy}","received_events_url":"https://api.github.com/users/hmcl/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-06T19:39:32Z","updated_at":"2016-01-06T19:39:32Z","author_association":"CONTRIBUTOR","body":"I would like to suggest that we address the tick tuples as follows: \n![screen shot 2016-01-06 at 11 35 23 am](https://cloud.githubusercontent.com/assets/10284328/12152537/24eaab12-b46a-11e5-8513-aa568d3b2093.png)\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/169436285/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612692840","html_url":"https://github.com/apache/storm/issues/5254#issuecomment-2612692840","issue_url":"https://api.github.com/repos/apache/storm/issues/5254","id":2612692840,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTI4NDA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-06T19:39:34Z","updated_at":"2025-01-24T14:41:12Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user hmcl commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/977#issuecomment-169436285\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/977#issuecomment-169436285</a></p>\n\n<p>    I would like to suggest that we address the tick tuples as follows: <br/>\n    !<span class=\"error\">&#91;screen shot 2016-01-06 at 11 35 23 am&#93;</span>(<a href=\"https://cloud.githubusercontent.com/assets/10284328/12152537/24eaab12-b46a-11e5-8513-aa568d3b2093.png\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://cloud.githubusercontent.com/assets/10284328/12152537/24eaab12-b46a-11e5-8513-aa568d3b2093.png</a>)</p>\n\n\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612692840/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/169437074","html_url":"https://github.com/apache/storm/pull/977#issuecomment-169437074","issue_url":"https://api.github.com/repos/apache/storm/issues/977","id":169437074,"node_id":"MDEyOklzc3VlQ29tbWVudDE2OTQzNzA3NA==","user":{"login":"HeartSaVioR","id":1317309,"node_id":"MDQ6VXNlcjEzMTczMDk=","avatar_url":"https://avatars.githubusercontent.com/u/1317309?v=4","gravatar_id":"","url":"https://api.github.com/users/HeartSaVioR","html_url":"https://github.com/HeartSaVioR","followers_url":"https://api.github.com/users/HeartSaVioR/followers","following_url":"https://api.github.com/users/HeartSaVioR/following{/other_user}","gists_url":"https://api.github.com/users/HeartSaVioR/gists{/gist_id}","starred_url":"https://api.github.com/users/HeartSaVioR/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HeartSaVioR/subscriptions","organizations_url":"https://api.github.com/users/HeartSaVioR/orgs","repos_url":"https://api.github.com/users/HeartSaVioR/repos","events_url":"https://api.github.com/users/HeartSaVioR/events{/privacy}","received_events_url":"https://api.github.com/users/HeartSaVioR/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-06T19:42:37Z","updated_at":"2016-01-06T19:42:37Z","author_association":"CONTRIBUTOR","body":"@hmcl \nIf we think we don't need to ack tick tuple, ignoring tick tuple from execute() first would be more clearer.\nThen we don't need to take care of tick tuple from ack().\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/169437074/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612692849","html_url":"https://github.com/apache/storm/issues/5254#issuecomment-2612692849","issue_url":"https://api.github.com/repos/apache/storm/issues/5254","id":2612692849,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTI4NDk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-06T19:42:38Z","updated_at":"2025-01-24T14:41:12Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user HeartSaVioR commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/977#issuecomment-169437074\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/977#issuecomment-169437074</a></p>\n\n<p>    @hmcl <br/>\n    If we think we don't need to ack tick tuple, ignoring tick tuple from execute() first would be more clearer.<br/>\n    Then we don't need to take care of tick tuple from ack().</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612692849/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/169437497","html_url":"https://github.com/apache/storm/pull/986#issuecomment-169437497","issue_url":"https://api.github.com/repos/apache/storm/issues/986","id":169437497,"node_id":"MDEyOklzc3VlQ29tbWVudDE2OTQzNzQ5Nw==","user":{"login":"connieyang","id":810950,"node_id":"MDQ6VXNlcjgxMDk1MA==","avatar_url":"https://avatars.githubusercontent.com/u/810950?v=4","gravatar_id":"","url":"https://api.github.com/users/connieyang","html_url":"https://github.com/connieyang","followers_url":"https://api.github.com/users/connieyang/followers","following_url":"https://api.github.com/users/connieyang/following{/other_user}","gists_url":"https://api.github.com/users/connieyang/gists{/gist_id}","starred_url":"https://api.github.com/users/connieyang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/connieyang/subscriptions","organizations_url":"https://api.github.com/users/connieyang/orgs","repos_url":"https://api.github.com/users/connieyang/repos","events_url":"https://api.github.com/users/connieyang/events{/privacy}","received_events_url":"https://api.github.com/users/connieyang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-06T19:44:26Z","updated_at":"2016-01-06T19:53:15Z","author_association":"NONE","body":"That's great!  When will this pull request be merged to master?  Also, will the Trident API work with the latest chagnes?\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/169437497/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612683606","html_url":"https://github.com/apache/storm/issues/5201#issuecomment-2612683606","issue_url":"https://api.github.com/repos/apache/storm/issues/5201","id":2612683606,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2ODM2MDY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-06T19:47:16Z","updated_at":"2025-01-24T14:37:29Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user haohui commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/931#discussion_r49000550\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/931#discussion_r49000550</a></p>\n\n<p>    &#8212; Diff: documentation/storm-sql-internal.md &#8212;<br/>\n    @@ -0,0 +1,55 @@<br/>\n    +---<br/>\n    +title: The Internals of Storm SQL<br/>\n    +layout: documentation<br/>\n    +documentation: true<br/>\n    +---<br/>\n    +<br/>\n    +This page describes the design and the implementation of the Storm SQL integration.<br/>\n    +<br/>\n    +## Overview<br/>\n    +<br/>\n    +SQL is a well-adopted yet complicated standard. Several projects including Drill, Hive, Phoenix and Spark have invested significantly in their SQL layers. One of the main design goal of StormSQL is to leverage the existing investments for these projects. StormSQL leverages <span class=\"error\">&#91;Apache Calcite&#93;</span>(///calcite.apache.org) to implement the SQL standard. StormSQL focuses on compiling the SQL statements to Storm / Trident topologies so that they can be executed in Storm clusters.<br/>\n    +<br/>\n    +Figure 1 describes the workflow of executing a SQL query in StormSQL. First, users provide a sequence of SQL statements. StormSQL parses the SQL statements and translates them to a Calcite logical plan. A logical plan consists of a sequence of SQL logical operators that describe how the query should be executed irrespective to the underlying execution engines. Some examples of logical operators include `TableScan`, `Filter`, `Projection` and `GroupBy`.<br/>\n    +<br/>\n    +<div align=\"center\"><br/>\n    +<img title=\"Workflow of StormSQL\" src=\"images/storm-sql-internal-workflow.png\" style=\"max-width: 80rem\"/><br/>\n    +<br/>\n    +<p>Figure 1: Workflow of StormSQL.</p><br/>\n    +</div><br/>\n    +<br/>\n    +The next step is to compile the logical execution plan down to a physical execution plan. A physical plan consists of physical operators that describes how to execute the SQL query in <b>StormSQL</b>. Physical operators such as `Filter`, `Projection`, and `GroupBy` are directly mapped to operations in Trident topologies. StormSQL also compiles expressions in the SQL statements into Java byte codes and plugs them into the Trident topologies.<br/>\n    +<br/>\n    +Finally, StormSQL packages both the Java byte codes and the topology into a JAR and submits it to the Storm cluster. Storm schedules and executes the JAR in the same way of it executes other Storm topologies.<br/>\n    +<br/>\n    +The follow code blocks show an example query that filters and projects results from a Kafka stream.<br/>\n    +<br/>\n    +```<br/>\n    +CREATE EXTERNAL TABLE ORDERS (ID INT PRIMARY KEY, UNIT_PRICE INT, QUANTITY INT) LOCATION 'kafka://localhost:2181/brokers?topic=orders' ...<br/>\n    +<br/>\n    +CREATE EXTERNAL TABLE LARGE_ORDERS (ID INT PRIMARY KEY, TOTAL INT) LOCATION 'kafka://localhost:2181/brokers?topic=large_orders' ...<br/>\n    +<br/>\n    +INSERT INTO LARGE_ORDERS SELECT ID, UNIT_PRICE * QUANTITY AS TOTAL FROM ORDERS WHERE UNIT_PRICE * QUANTITY > 50<br/>\n    +```<br/>\n    +<br/>\n    +The first two SQL statements define the inputs and outputs of external data. Figure 2 describes the processes of how StormSQL takes the last `SELECT` query and compiles it down to Trident topology.<br/>\n    +<br/>\n    +<div align=\"center\"><br/>\n    +<img title=\"Compiling the example query to Trident topology\" src=\"images/storm-sql-internal-example.png\" style=\"max-width: 80rem\"/><br/>\n    +<br/>\n    +<p>Figure 2: Compiling the example query to Trident topology.</p><br/>\n    +</div><br/>\n    +<br/>\n    +<br/>\n    +## Constraints of querying streaming tables<br/>\n    +<br/>\n    +There are several constraints when querying tables that represent a real-time data stream:<br/>\n    +<br/>\n    +* The `ORDER BY` clause cannot be applied to a stream.<br/>\n    +* There is at least one monotonic field in the `GROUP BY` clauses to allow StormSQL bounds the size of the buffer.<br/>\n    +<br/>\n    +For more information please refer to <a href=\"https://calcite.incubator.apache.org/docs/stream.html\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://calcite.incubator.apache.org/docs/stream.html</a>.<br/>\n    +<br/>\n    +## Dependency<br/>\n    +<br/>\n    +StormSQL does not ship the dependency of the external data sources in the packaged JAR. The users have to provide the dependency in the `extlib` directory of the worker node.<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    This is yet to be implemented as it requires figuring out the transitive dependency of jars. Filed <a href=\"https://issues.apache.org/jira/browse/STORM-1435\" title=\"Build a single jar with dependency for StormSQL dependency\" class=\"issue-link\" data-issue-key=\"STORM-1435\"><del>STORM-1435</del></a> to track the effort.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612683606/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/169438537","html_url":"https://github.com/apache/storm/pull/977#issuecomment-169438537","issue_url":"https://api.github.com/repos/apache/storm/issues/977","id":169438537,"node_id":"MDEyOklzc3VlQ29tbWVudDE2OTQzODUzNw==","user":{"login":"hmcl","id":10284328,"node_id":"MDQ6VXNlcjEwMjg0MzI4","avatar_url":"https://avatars.githubusercontent.com/u/10284328?v=4","gravatar_id":"","url":"https://api.github.com/users/hmcl","html_url":"https://github.com/hmcl","followers_url":"https://api.github.com/users/hmcl/followers","following_url":"https://api.github.com/users/hmcl/following{/other_user}","gists_url":"https://api.github.com/users/hmcl/gists{/gist_id}","starred_url":"https://api.github.com/users/hmcl/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hmcl/subscriptions","organizations_url":"https://api.github.com/users/hmcl/orgs","repos_url":"https://api.github.com/users/hmcl/repos","events_url":"https://api.github.com/users/hmcl/events{/privacy}","received_events_url":"https://api.github.com/users/hmcl/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-06T19:48:09Z","updated_at":"2016-01-06T19:49:24Z","author_association":"CONTRIBUTOR","body":"@HeartSaVioR All the tuples that have already been batched will still need to be acked, therefore we cannot simply ignore the tick tuple. All I am doing is that when calling ack() I don't add the tick tuple to the queue of tuples that need to be acked.\n\nThe key is that tick tuples are not added to the SolrRequest\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/169438537/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612692854","html_url":"https://github.com/apache/storm/issues/5254#issuecomment-2612692854","issue_url":"https://api.github.com/repos/apache/storm/issues/5254","id":2612692854,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTI4NTQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-06T19:48:10Z","updated_at":"2025-01-24T14:41:12Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user hmcl commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/977#issuecomment-169438537\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/977#issuecomment-169438537</a></p>\n\n<p>    @HeartSaVioR All the tuples that have already been batched will still need to be acked, therefore we cannot simply ignore the tick tuple. All I am doing is that when calling ack() I don't add the tick tuple to the queue of tuples that need to be acked.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612692854/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/169439287","html_url":"https://github.com/apache/storm/pull/977#issuecomment-169439287","issue_url":"https://api.github.com/repos/apache/storm/issues/977","id":169439287,"node_id":"MDEyOklzc3VlQ29tbWVudDE2OTQzOTI4Nw==","user":{"login":"HeartSaVioR","id":1317309,"node_id":"MDQ6VXNlcjEzMTczMDk=","avatar_url":"https://avatars.githubusercontent.com/u/1317309?v=4","gravatar_id":"","url":"https://api.github.com/users/HeartSaVioR","html_url":"https://github.com/HeartSaVioR","followers_url":"https://api.github.com/users/HeartSaVioR/followers","following_url":"https://api.github.com/users/HeartSaVioR/following{/other_user}","gists_url":"https://api.github.com/users/HeartSaVioR/gists{/gist_id}","starred_url":"https://api.github.com/users/HeartSaVioR/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HeartSaVioR/subscriptions","organizations_url":"https://api.github.com/users/HeartSaVioR/orgs","repos_url":"https://api.github.com/users/HeartSaVioR/repos","events_url":"https://api.github.com/users/HeartSaVioR/events{/privacy}","received_events_url":"https://api.github.com/users/HeartSaVioR/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-06T19:50:37Z","updated_at":"2016-01-06T19:50:37Z","author_association":"CONTRIBUTOR","body":"@hmcl You're right. My bad. :)\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/169439287/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612692862","html_url":"https://github.com/apache/storm/issues/5254#issuecomment-2612692862","issue_url":"https://api.github.com/repos/apache/storm/issues/5254","id":2612692862,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTI4NjI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-06T19:50:38Z","updated_at":"2025-01-24T14:41:13Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user HeartSaVioR commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/977#issuecomment-169439287\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/977#issuecomment-169439287</a></p>\n\n<p>    @hmcl You're right. My bad. <img class=\"emoticon\" src=\"https://issues.apache.org/jira/images/icons/emoticons/smile.png\" height=\"16\" width=\"16\" align=\"absmiddle\" alt=\"\" border=\"0\"/></p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612692862/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/169440883","html_url":"https://github.com/apache/storm/pull/977#issuecomment-169440883","issue_url":"https://api.github.com/repos/apache/storm/issues/977","id":169440883,"node_id":"MDEyOklzc3VlQ29tbWVudDE2OTQ0MDg4Mw==","user":{"login":"HeartSaVioR","id":1317309,"node_id":"MDQ6VXNlcjEzMTczMDk=","avatar_url":"https://avatars.githubusercontent.com/u/1317309?v=4","gravatar_id":"","url":"https://api.github.com/users/HeartSaVioR","html_url":"https://github.com/HeartSaVioR","followers_url":"https://api.github.com/users/HeartSaVioR/followers","following_url":"https://api.github.com/users/HeartSaVioR/following{/other_user}","gists_url":"https://api.github.com/users/HeartSaVioR/gists{/gist_id}","starred_url":"https://api.github.com/users/HeartSaVioR/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HeartSaVioR/subscriptions","organizations_url":"https://api.github.com/users/HeartSaVioR/orgs","repos_url":"https://api.github.com/users/HeartSaVioR/repos","events_url":"https://api.github.com/users/HeartSaVioR/events{/privacy}","received_events_url":"https://api.github.com/users/HeartSaVioR/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-06T19:57:02Z","updated_at":"2016-01-06T19:57:02Z","author_association":"CONTRIBUTOR","body":"What @hmcl is suggesting also fixes the bug that trying to convert tick tuple to Solr request and do actual request. Great finding.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/169440883/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612692868","html_url":"https://github.com/apache/storm/issues/5254#issuecomment-2612692868","issue_url":"https://api.github.com/repos/apache/storm/issues/5254","id":2612692868,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTI4Njg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-06T19:57:03Z","updated_at":"2025-01-24T14:41:13Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user HeartSaVioR commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/977#issuecomment-169440883\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/977#issuecomment-169440883</a></p>\n\n<p>    What @hmcl is suggesting also fixes the bug that trying to convert tick tuple to Solr request and do actual request. Great finding.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612692868/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612683627","html_url":"https://github.com/apache/storm/issues/5201#issuecomment-2612683627","issue_url":"https://api.github.com/repos/apache/storm/issues/5201","id":2612683627,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2ODM2Mjc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-06T19:57:18Z","updated_at":"2025-01-24T14:37:29Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user haohui commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/931#discussion_r49001896\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/931#discussion_r49001896</a></p>\n\n<p>    &#8212; Diff: documentation/storm-sql.md &#8212;<br/>\n    @@ -0,0 +1,87 @@<br/>\n    +---<br/>\n    +title: Storm SQL integration<br/>\n    +layout: documentation<br/>\n    +documentation: true<br/>\n    +---<br/>\n    +<br/>\n    +The Storm SQL integration allows users to run SQL queries over streaming data in Storm. Not only the SQL interface allows faster development cycles on streaming analytics, but also opens up the opportunities to unify batch data processing like <span class=\"error\">&#91;Apache Hive&#93;</span>(///hive.apache.org) and real-time streaming data analytics.<br/>\n    +<br/>\n    +At a very high level StormSQL compiles the SQL queries to <span class=\"error\">&#91;Trident&#93;</span>(Trident-API-Overview.html) topologies and executes them in Storm clusters. This document provides information of how to use StormSQL as end users. For people that are interested in more details in the design and the implementation of StormSQL please refer to the <span class=\"error\">&#91;this&#93;</span>(storm-sql-internal.html) page.<br/>\n    +<br/>\n    +## Usage<br/>\n    +<br/>\n    +Run the ``storm sql`` command to compile SQL statements into Trident topology, and submit it to the Storm cluster<br/>\n    +<br/>\n    +```<br/>\n    +$ bin/storm sql <sql-file> <topo-name><br/>\n    +```<br/>\n    +<br/>\n    +In which `sql-file` contains a list of SQL statements to be executed, and `topo-name` is the name of the topology.<br/>\n    +<br/>\n    +<br/>\n    +## Supported Features<br/>\n    +<br/>\n    +The following features are supported in the current repository:<br/>\n    +<br/>\n    +* Streaming from and to external data sources<br/>\n    +* Filtering tuples<br/>\n    +* Projections<br/>\n    +<br/>\n    +## Specifying External Data Sources<br/>\n    +<br/>\n    +In StormSQL data is represented by external tables. Users can specify data sources using the `CREATE EXTERNAL TABLE` statement. For example, the following statement specifies a Kafka spouts and sink:<br/>\n    +<br/>\n    +```<br/>\n    +CREATE EXTERNAL TABLE FOO (ID INT PRIMARY KEY) LOCATION 'kafka://localhost:2181/brokers?topic=test' TBLPROPERTIES '{\"producer\":{\"bootstrap.servers\":\"localhost:9092\",\"acks\":\"1\",\"key.serializer\":\"storm.kafka.IntSerializer\",\"value.serializer\":\"storm.kafka.ByteBufferSerializer\"}}'<br/>\n    +```<br/>\n    +<br/>\n    +The syntax of `CREATE EXTERNAL TABLE` closely follows the one defined in <span class=\"error\">&#91;Hive Data Definition Language&#93;</span>(<a href=\"https://cwiki.apache.org/confluence/display/Hive/LanguageManual+DDL\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://cwiki.apache.org/confluence/display/Hive/LanguageManual+DDL</a>).<br/>\n    +<br/>\n    +## Plugging in External Data Sources<br/>\n    +<br/>\n    +Users plug in external data sources through implementing the `ISqlTridentDataSource` interface and registers them using the mechanisms of Java's service loader. The external data source will be chosen based on the scheme of the URI of the tables. Please refer to the implementation of `storm-sql-kafka` for more details.<br/>\n    +<br/>\n    +## Example: Filtering Kafka Stream<br/>\n    +<br/>\n    +Let's say there is a Kafka stream that represents the transactions of orders. Each message in the stream contains the id of the order, the unit price of the product and the quantity of the orders. The goal is to filter orders where the transactions are significant and to insert these orders into another Kafka stream for further analysis.<br/>\n    +<br/>\n    +The user can specify the following SQL statements in the SQL file:<br/>\n    +<br/>\n    +```<br/>\n    +CREATE EXTERNAL TABLE ORDERS (ID INT PRIMARY KEY, UNIT_PRICE INT, QUANTITY INT) LOCATION 'kafka://localhost:2181/brokers?topic=orders' TBLPROPERTIES '{\"producer\":{\"bootstrap.servers\":\"localhost:9092\",\"acks\":\"1\",\"key.serializer\":\"storm.kafka.IntSerializer\",\"value.serializer\":\"storm.kafka.ByteBufferSerializer\"}}'<br/>\n    +<br/>\n    +CREATE EXTERNAL TABLE LARGE_ORDERS (ID INT PRIMARY KEY, TOTAL INT) LOCATION 'kafka://localhost:2181/brokers?topic=large_orders' TBLPROPERTIES '{\"producer\":{\"bootstrap.servers\":\"localhost:9092\",\"acks\":\"1\",\"key.serializer\":\"storm.kafka.IntSerializer\",\"value.serializer\":\"storm.kafka.ByteBufferSerializer\"}}'<br/>\n    +<br/>\n    +INSERT INTO LARGE_ORDERS SELECT ID, UNIT_PRICE * QUANTITY AS TOTAL FROM ORDERS WHERE UNIT_PRICE * QUANTITY > 50<br/>\n    +```<br/>\n    +<br/>\n    +The first statement defines the table `ORDER` which represents the input stream. The `LOCATION` clause specifies the ZkHost (`localhost:2181`), the path of the brokers in ZooKeeper (`/brokers`) and the topic (`orders`). The `TBLPROPERTIES` clause specifies the configuration of <span class=\"error\">&#91;KafkaProducer&#93;</span>(<a href=\"http://kafka.apache.org/documentation.html#newproducerconfigs\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://kafka.apache.org/documentation.html#newproducerconfigs</a>).<br/>\n    +Current implementation of `storm-sql-kafka` requires specifying both `LOCATION` and `TBLPROPERTIES` clauses even though the table is read-only or write-only.<br/>\n    +<br/>\n    +Similarly, the second statement specifies the table `LARGE_ORDERS` which represents the output stream. The third statement is a `SELECT` statement which defines the topology: it instructs StormSQL to filter all orders in the external table `ORDERS`, calculates the total price and inserts matching records into the Kafka stream specified by `LARGE_ORDER`.<br/>\n    +<br/>\n    +To run this example, users need to include the data sources (`storm-sql-kafka` in this case) and its dependency in the class path. One approach is to put the required jars into the `extlib` directory:<br/>\n    +<br/>\n    +```<br/>\n    +$ cp curator-client-2.5.0.jar curator-framework-2.5.0.jar zookeeper-3.4.6.jar<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    The above jars are shaded in the storm-core jar. They have to be placed in the `extlib` directory so that the topology jar can access them.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612683627/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/169441633","html_url":"https://github.com/apache/storm/pull/977#issuecomment-169441633","issue_url":"https://api.github.com/repos/apache/storm/issues/977","id":169441633,"node_id":"MDEyOklzc3VlQ29tbWVudDE2OTQ0MTYzMw==","user":{"login":"hmcl","id":10284328,"node_id":"MDQ6VXNlcjEwMjg0MzI4","avatar_url":"https://avatars.githubusercontent.com/u/10284328?v=4","gravatar_id":"","url":"https://api.github.com/users/hmcl","html_url":"https://github.com/hmcl","followers_url":"https://api.github.com/users/hmcl/followers","following_url":"https://api.github.com/users/hmcl/following{/other_user}","gists_url":"https://api.github.com/users/hmcl/gists{/gist_id}","starred_url":"https://api.github.com/users/hmcl/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hmcl/subscriptions","organizations_url":"https://api.github.com/users/hmcl/orgs","repos_url":"https://api.github.com/users/hmcl/repos","events_url":"https://api.github.com/users/hmcl/events{/privacy}","received_events_url":"https://api.github.com/users/hmcl/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-06T20:00:22Z","updated_at":"2016-01-06T20:00:22Z","author_association":"CONTRIBUTOR","body":"@revans2 your points are valid, as there may be scenarios where we may end up committing very small batches, which may cause some performance degradation, but in my opinion that would only be a concern if they are likely to happen. Nevertheless, to address your points I have created https://issues.apache.org/jira/browse/STORM-1442\n\nConcerning your comment \" It looks like the commitStgy.commit() is not needed at all. \" I believe we still need it to address the cases where the batch is complete, no tick tuples came in, and we want to commit the batch.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/169441633/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612692872","html_url":"https://github.com/apache/storm/issues/5254#issuecomment-2612692872","issue_url":"https://api.github.com/repos/apache/storm/issues/5254","id":2612692872,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTI4NzI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-06T20:00:24Z","updated_at":"2025-01-24T14:41:13Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user hmcl commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/977#issuecomment-169441633\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/977#issuecomment-169441633</a></p>\n\n<p>    @revans2 your points are valid, as there may be scenarios where we may end up committing very small batches, which may cause some performance degradation, but in my opinion that would only be a concern if they are likely to happen. Nevertheless, to address your points I have created <a href=\"https://issues.apache.org/jira/browse/STORM-1442\" class=\"external-link\" rel=\"nofollow\">https://issues.apache.org/jira/browse/STORM-1442</a></p>\n\n<p>    Concerning your comment \" It looks like the commitStgy.commit() is not needed at all. \" I believe we still need it to address the cases where the batch is complete, no tick tuples came in, and we want to commit the batch.</p>\n\n\n\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612692872/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612696488","html_url":"https://github.com/apache/storm/issues/5278#issuecomment-2612696488","issue_url":"https://api.github.com/repos/apache/storm/issues/5278","id":2612696488,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTY0ODg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-06T20:02:40Z","updated_at":"2025-01-24T14:42:45Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=wheat9\">wheat9</a>:</i>\n<p>One possible approach is to allow users to set the parallelism through the `SET` statements in StormSQL. For example:</p>\n\n<div class=\"code panel\" style=\"border-width: 1px;\"><div class=\"codeContent panelContent\">\n<pre class=\"code-java\">SET @select.stage0.parallelism=4;\nSELECT * FROM ...;\n</pre>\n</div></div>\n\n<p>User can get the name of the stage through a `EXPLAIN` statement.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612696488/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612690954","html_url":"https://github.com/apache/storm/issues/5241#issuecomment-2612690954","issue_url":"https://api.github.com/repos/apache/storm/issues/5241","id":2612690954,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTA5NTQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-06T20:27:48Z","updated_at":"2025-01-24T14:40:23Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user HeartSaVioR commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/991#discussion_r49005341\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/991#discussion_r49005341</a></p>\n\n<p>    &#8212; Diff: external/storm-mqtt/core/src/main/java/org/apache/storm/mqtt/common/MqttUtils.java &#8212;<br/>\n    @@ -0,0 +1,44 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.mqtt.common;<br/>\n    +<br/>\n    +<br/>\n    +import org.fusesource.mqtt.client.QoS;<br/>\n    +<br/>\n    +public class MqttUtils {<br/>\n    +<br/>\n    +    private MqttUtils(){}<br/>\n    +<br/>\n    +    public static QoS qosFromInt(int i){<br/>\n    +QoS qos = null;<br/>\n    +switch<img class=\"emoticon\" src=\"https://issues.apache.org/jira/images/icons/emoticons/information.png\" height=\"16\" width=\"16\" align=\"absmiddle\" alt=\"\" border=\"0\"/> {<br/>\n    +    case 0:<br/>\n    +qos = QoS.AT_MOST_ONCE;<br/>\n    +break;<br/>\n    +    case 1:<br/>\n    +qos = QoS.AT_LEAST_ONCE;<br/>\n    +break;<br/>\n    +    case 2:<br/>\n    +qos = QoS.EXACTLY_ONCE;<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    I'm with the approach what @ptgoetz is intended.<br/>\n    But it is still not intuitive for user side, since that numbers doesn't make sense to match actual meaning of QoS.<br/>\n    If we guarantee that we always support AT_MOST_ONCE, AT_LEAST_ONCE, EXACTLY_ONCE as QoS (I mean we will not drop QoS when switching the MQTT client), we can make our own enum to wrap.<br/>\n    If those numbers are a part of MQTT protocol then I'm fine to leave as it is.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612690954/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/169452092","html_url":"https://github.com/apache/storm/pull/986#issuecomment-169452092","issue_url":"https://api.github.com/repos/apache/storm/issues/986","id":169452092,"node_id":"MDEyOklzc3VlQ29tbWVudDE2OTQ1MjA5Mg==","user":{"login":"revans2","id":3441321,"node_id":"MDQ6VXNlcjM0NDEzMjE=","avatar_url":"https://avatars.githubusercontent.com/u/3441321?v=4","gravatar_id":"","url":"https://api.github.com/users/revans2","html_url":"https://github.com/revans2","followers_url":"https://api.github.com/users/revans2/followers","following_url":"https://api.github.com/users/revans2/following{/other_user}","gists_url":"https://api.github.com/users/revans2/gists{/gist_id}","starred_url":"https://api.github.com/users/revans2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/revans2/subscriptions","organizations_url":"https://api.github.com/users/revans2/orgs","repos_url":"https://api.github.com/users/revans2/repos","events_url":"https://api.github.com/users/revans2/events{/privacy}","received_events_url":"https://api.github.com/users/revans2/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-06T20:30:01Z","updated_at":"2016-01-06T20:30:01Z","author_association":"CONTRIBUTOR","body":"CI seems to be failing with a trident kafka test hanging.\n\nThe code appears to provide a best effort replay, but that is neither at least once nor at most once, so it is likely to cause issues for some topologies that don't expect this a-typical behavior.   I am not an expert on the kafka API, but it looks like auto.commit.enable is inherently incompatible with what storm wants from a well behaved spout.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/169452092/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612690958","html_url":"https://github.com/apache/storm/issues/5241#issuecomment-2612690958","issue_url":"https://api.github.com/repos/apache/storm/issues/5241","id":2612690958,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTA5NTg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-06T20:37:40Z","updated_at":"2025-01-24T14:40:23Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user ptgoetz commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/991#discussion_r49006394\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/991#discussion_r49006394</a></p>\n\n<p>    &#8212; Diff: external/storm-mqtt/core/src/main/java/org/apache/storm/mqtt/common/MqttUtils.java &#8212;<br/>\n    @@ -0,0 +1,44 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.mqtt.common;<br/>\n    +<br/>\n    +<br/>\n    +import org.fusesource.mqtt.client.QoS;<br/>\n    +<br/>\n    +public class MqttUtils {<br/>\n    +<br/>\n    +    private MqttUtils(){}<br/>\n    +<br/>\n    +    public static QoS qosFromInt(int i){<br/>\n    +QoS qos = null;<br/>\n    +switch<img class=\"emoticon\" src=\"https://issues.apache.org/jira/images/icons/emoticons/information.png\" height=\"16\" width=\"16\" align=\"absmiddle\" alt=\"\" border=\"0\"/> {<br/>\n    +    case 0:<br/>\n    +qos = QoS.AT_MOST_ONCE;<br/>\n    +break;<br/>\n    +    case 1:<br/>\n    +qos = QoS.AT_LEAST_ONCE;<br/>\n    +break;<br/>\n    +    case 2:<br/>\n    +qos = QoS.EXACTLY_ONCE;<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Those number are part of the MQTT protocol and are well known.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612690958/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612690966","html_url":"https://github.com/apache/storm/issues/5241#issuecomment-2612690966","issue_url":"https://api.github.com/repos/apache/storm/issues/5241","id":2612690966,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTA5NjY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-06T20:41:00Z","updated_at":"2025-01-24T14:40:23Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user HeartSaVioR commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/991#discussion_r49006727\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/991#discussion_r49006727</a></p>\n\n<p>    &#8212; Diff: external/storm-mqtt/core/src/main/java/org/apache/storm/mqtt/common/MqttUtils.java &#8212;<br/>\n    @@ -0,0 +1,44 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.mqtt.common;<br/>\n    +<br/>\n    +<br/>\n    +import org.fusesource.mqtt.client.QoS;<br/>\n    +<br/>\n    +public class MqttUtils {<br/>\n    +<br/>\n    +    private MqttUtils(){}<br/>\n    +<br/>\n    +    public static QoS qosFromInt(int i){<br/>\n    +QoS qos = null;<br/>\n    +switch<img class=\"emoticon\" src=\"https://issues.apache.org/jira/images/icons/emoticons/information.png\" height=\"16\" width=\"16\" align=\"absmiddle\" alt=\"\" border=\"0\"/> {<br/>\n    +    case 0:<br/>\n    +qos = QoS.AT_MOST_ONCE;<br/>\n    +break;<br/>\n    +    case 1:<br/>\n    +qos = QoS.AT_LEAST_ONCE;<br/>\n    +break;<br/>\n    +    case 2:<br/>\n    +qos = QoS.EXACTLY_ONCE;<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Slightly late. <img class=\"emoticon\" src=\"https://issues.apache.org/jira/images/icons/emoticons/wink.png\" height=\"16\" width=\"16\" align=\"absmiddle\" alt=\"\" border=\"0\"/> <br/>\n    <a href=\"http://www.hivemq.com/blog/mqtt-essentials-part-6-mqtt-quality-of-service-levels\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.hivemq.com/blog/mqtt-essentials-part-6-mqtt-quality-of-service-levels</a><br/>\n    Then I'm +1 to MqttUtils.qosFromInt().</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612690966/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/169456370","html_url":"https://github.com/apache/storm/pull/986#issuecomment-169456370","issue_url":"https://api.github.com/repos/apache/storm/issues/986","id":169456370,"node_id":"MDEyOklzc3VlQ29tbWVudDE2OTQ1NjM3MA==","user":{"login":"harshach","id":38649,"node_id":"MDQ6VXNlcjM4NjQ5","avatar_url":"https://avatars.githubusercontent.com/u/38649?v=4","gravatar_id":"","url":"https://api.github.com/users/harshach","html_url":"https://github.com/harshach","followers_url":"https://api.github.com/users/harshach/followers","following_url":"https://api.github.com/users/harshach/following{/other_user}","gists_url":"https://api.github.com/users/harshach/gists{/gist_id}","starred_url":"https://api.github.com/users/harshach/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/harshach/subscriptions","organizations_url":"https://api.github.com/users/harshach/orgs","repos_url":"https://api.github.com/users/harshach/repos","events_url":"https://api.github.com/users/harshach/events{/privacy}","received_events_url":"https://api.github.com/users/harshach/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-06T20:46:48Z","updated_at":"2016-01-06T20:46:48Z","author_association":"CONTRIBUTOR","body":"@revans2 @connieyang although this is a good start I don't see it handles lot of cases that current storm-kafka handles. @hmcl is working on a full-fledged integration of new kafka consumer api. You should see his PR soon.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/169456370/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/169458814","html_url":"https://github.com/apache/storm/pull/986#issuecomment-169458814","issue_url":"https://api.github.com/repos/apache/storm/issues/986","id":169458814,"node_id":"MDEyOklzc3VlQ29tbWVudDE2OTQ1ODgxNA==","user":{"login":"connieyang","id":810950,"node_id":"MDQ6VXNlcjgxMDk1MA==","avatar_url":"https://avatars.githubusercontent.com/u/810950?v=4","gravatar_id":"","url":"https://api.github.com/users/connieyang","html_url":"https://github.com/connieyang","followers_url":"https://api.github.com/users/connieyang/followers","following_url":"https://api.github.com/users/connieyang/following{/other_user}","gists_url":"https://api.github.com/users/connieyang/gists{/gist_id}","starred_url":"https://api.github.com/users/connieyang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/connieyang/subscriptions","organizations_url":"https://api.github.com/users/connieyang/orgs","repos_url":"https://api.github.com/users/connieyang/repos","events_url":"https://api.github.com/users/connieyang/events{/privacy}","received_events_url":"https://api.github.com/users/connieyang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-06T20:58:02Z","updated_at":"2016-01-06T20:58:02Z","author_association":"NONE","body":"Excellent!  I will follow @hmcl for his PR.  Thanks for the update!\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/169458814/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612689497","html_url":"https://github.com/apache/storm/issues/5231#issuecomment-2612689497","issue_url":"https://api.github.com/repos/apache/storm/issues/5231","id":2612689497,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2ODk0OTc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-06T21:07:46Z","updated_at":"2025-01-24T14:39:43Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user asfgit closed the pull request at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/952\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/952</a></p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612689497/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612689500","html_url":"https://github.com/apache/storm/issues/5231#issuecomment-2612689500","issue_url":"https://api.github.com/repos/apache/storm/issues/5231","id":2612689500,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2ODk1MDA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-06T21:08:38Z","updated_at":"2025-01-24T14:39:43Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=revans2\">revans2</a>:</i>\n<p>Thanks <a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=sanket991\" class=\"user-hover\" rel=\"sanket991\">Sanket Reddy</a>,</p>\n\n<p>I merged this into master.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612689500/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/169469162","html_url":"https://github.com/apache/storm/pull/465#issuecomment-169469162","issue_url":"https://api.github.com/repos/apache/storm/issues/465","id":169469162,"node_id":"MDEyOklzc3VlQ29tbWVudDE2OTQ2OTE2Mg==","user":{"login":"revans2","id":3441321,"node_id":"MDQ6VXNlcjM0NDEzMjE=","avatar_url":"https://avatars.githubusercontent.com/u/3441321?v=4","gravatar_id":"","url":"https://api.github.com/users/revans2","html_url":"https://github.com/revans2","followers_url":"https://api.github.com/users/revans2/followers","following_url":"https://api.github.com/users/revans2/following{/other_user}","gists_url":"https://api.github.com/users/revans2/gists{/gist_id}","starred_url":"https://api.github.com/users/revans2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/revans2/subscriptions","organizations_url":"https://api.github.com/users/revans2/orgs","repos_url":"https://api.github.com/users/revans2/repos","events_url":"https://api.github.com/users/revans2/events{/privacy}","received_events_url":"https://api.github.com/users/revans2/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-06T21:30:54Z","updated_at":"2016-01-06T21:30:54Z","author_association":"CONTRIBUTOR","body":"+1\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/169469162/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612530873","html_url":"https://github.com/apache/storm/issues/4547#issuecomment-2612530873","issue_url":"https://api.github.com/repos/apache/storm/issues/4547","id":2612530873,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1MzA4NzM=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-06T21:30:55Z","updated_at":"2025-01-24T13:27:34Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/465#issuecomment-169469162\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/465#issuecomment-169469162</a></p>\n\n<p>    +1</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612530873/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612530877","html_url":"https://github.com/apache/storm/issues/4547#issuecomment-2612530877","issue_url":"https://api.github.com/repos/apache/storm/issues/4547","id":2612530877,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1MzA4Nzc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-06T21:31:40Z","updated_at":"2025-01-24T13:27:34Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user asfgit closed the pull request at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/465\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/465</a></p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612530877/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612530886","html_url":"https://github.com/apache/storm/issues/4547#issuecomment-2612530886","issue_url":"https://api.github.com/repos/apache/storm/issues/4547","id":2612530886,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1MzA4ODY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-06T21:32:40Z","updated_at":"2025-01-24T13:27:35Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=revans2\">revans2</a>:</i>\n<p>Thanks <a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=jayunit100\" class=\"user-hover\" rel=\"jayunit100\">jay vyas</a>,</p>\n\n<p>I merged this into master.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612530886/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612683649","html_url":"https://github.com/apache/storm/issues/5201#issuecomment-2612683649","issue_url":"https://api.github.com/repos/apache/storm/issues/5201","id":2612683649,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2ODM2NDk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-06T21:54:43Z","updated_at":"2025-01-24T14:37:29Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user haohui commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/931#discussion_r49015121\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/931#discussion_r49015121</a></p>\n\n<p>    &#8212; Diff: documentation/storm-sql.md &#8212;<br/>\n    @@ -0,0 +1,87 @@<br/>\n    +---<br/>\n    +title: Storm SQL integration<br/>\n    +layout: documentation<br/>\n    +documentation: true<br/>\n    +---<br/>\n    +<br/>\n    +The Storm SQL integration allows users to run SQL queries over streaming data in Storm. Not only the SQL interface allows faster development cycles on streaming analytics, but also opens up the opportunities to unify batch data processing like <span class=\"error\">&#91;Apache Hive&#93;</span>(///hive.apache.org) and real-time streaming data analytics.<br/>\n    +<br/>\n    +At a very high level StormSQL compiles the SQL queries to <span class=\"error\">&#91;Trident&#93;</span>(Trident-API-Overview.html) topologies and executes them in Storm clusters. This document provides information of how to use StormSQL as end users. For people that are interested in more details in the design and the implementation of StormSQL please refer to the <span class=\"error\">&#91;this&#93;</span>(storm-sql-internal.html) page.<br/>\n    +<br/>\n    +## Usage<br/>\n    +<br/>\n    +Run the ``storm sql`` command to compile SQL statements into Trident topology, and submit it to the Storm cluster<br/>\n    +<br/>\n    +```<br/>\n    +$ bin/storm sql <sql-file> <topo-name><br/>\n    +```<br/>\n    +<br/>\n    +In which `sql-file` contains a list of SQL statements to be executed, and `topo-name` is the name of the topology.<br/>\n    +<br/>\n    +<br/>\n    +## Supported Features<br/>\n    +<br/>\n    +The following features are supported in the current repository:<br/>\n    +<br/>\n    +* Streaming from and to external data sources<br/>\n    +* Filtering tuples<br/>\n    +* Projections<br/>\n    +<br/>\n    +## Specifying External Data Sources<br/>\n    +<br/>\n    +In StormSQL data is represented by external tables. Users can specify data sources using the `CREATE EXTERNAL TABLE` statement. For example, the following statement specifies a Kafka spouts and sink:<br/>\n    +<br/>\n    +```<br/>\n    +CREATE EXTERNAL TABLE FOO (ID INT PRIMARY KEY) LOCATION 'kafka://localhost:2181/brokers?topic=test' TBLPROPERTIES '{\"producer\":{\"bootstrap.servers\":\"localhost:9092\",\"acks\":\"1\",\"key.serializer\":\"storm.kafka.IntSerializer\",\"value.serializer\":\"storm.kafka.ByteBufferSerializer\"}}'<br/>\n    +```<br/>\n    +<br/>\n    +The syntax of `CREATE EXTERNAL TABLE` closely follows the one defined in <span class=\"error\">&#91;Hive Data Definition Language&#93;</span>(<a href=\"https://cwiki.apache.org/confluence/display/Hive/LanguageManual+DDL\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://cwiki.apache.org/confluence/display/Hive/LanguageManual+DDL</a>).<br/>\n    +<br/>\n    +## Plugging in External Data Sources<br/>\n    +<br/>\n    +Users plug in external data sources through implementing the `ISqlTridentDataSource` interface and registers them using the mechanisms of Java's service loader. The external data source will be chosen based on the scheme of the URI of the tables. Please refer to the implementation of `storm-sql-kafka` for more details.<br/>\n    +<br/>\n    +## Example: Filtering Kafka Stream<br/>\n    +<br/>\n    +Let's say there is a Kafka stream that represents the transactions of orders. Each message in the stream contains the id of the order, the unit price of the product and the quantity of the orders. The goal is to filter orders where the transactions are significant and to insert these orders into another Kafka stream for further analysis.<br/>\n    +<br/>\n    +The user can specify the following SQL statements in the SQL file:<br/>\n    +<br/>\n    +```<br/>\n    +CREATE EXTERNAL TABLE ORDERS (ID INT PRIMARY KEY, UNIT_PRICE INT, QUANTITY INT) LOCATION 'kafka://localhost:2181/brokers?topic=orders' TBLPROPERTIES '{\"producer\":{\"bootstrap.servers\":\"localhost:9092\",\"acks\":\"1\",\"key.serializer\":\"storm.kafka.IntSerializer\",\"value.serializer\":\"storm.kafka.ByteBufferSerializer\"}}'<br/>\n    +<br/>\n    +CREATE EXTERNAL TABLE LARGE_ORDERS (ID INT PRIMARY KEY, TOTAL INT) LOCATION 'kafka://localhost:2181/brokers?topic=large_orders' TBLPROPERTIES '{\"producer\":{\"bootstrap.servers\":\"localhost:9092\",\"acks\":\"1\",\"key.serializer\":\"storm.kafka.IntSerializer\",\"value.serializer\":\"storm.kafka.ByteBufferSerializer\"}}'<br/>\n    +<br/>\n    +INSERT INTO LARGE_ORDERS SELECT ID, UNIT_PRICE * QUANTITY AS TOTAL FROM ORDERS WHERE UNIT_PRICE * QUANTITY > 50<br/>\n    +```<br/>\n    +<br/>\n    +The first statement defines the table `ORDER` which represents the input stream. The `LOCATION` clause specifies the ZkHost (`localhost:2181`), the path of the brokers in ZooKeeper (`/brokers`) and the topic (`orders`). The `TBLPROPERTIES` clause specifies the configuration of <span class=\"error\">&#91;KafkaProducer&#93;</span>(<a href=\"http://kafka.apache.org/documentation.html#newproducerconfigs\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://kafka.apache.org/documentation.html#newproducerconfigs</a>).<br/>\n    +Current implementation of `storm-sql-kafka` requires specifying both `LOCATION` and `TBLPROPERTIES` clauses even though the table is read-only or write-only.<br/>\n    +<br/>\n    +Similarly, the second statement specifies the table `LARGE_ORDERS` which represents the output stream. The third statement is a `SELECT` statement which defines the topology: it instructs StormSQL to filter all orders in the external table `ORDERS`, calculates the total price and inserts matching records into the Kafka stream specified by `LARGE_ORDER`.<br/>\n    +<br/>\n    +To run this example, users need to include the data sources (`storm-sql-kafka` in this case) and its dependency in the class path. One approach is to put the required jars into the `extlib` directory:<br/>\n    +<br/>\n    +```<br/>\n    +$ cp curator-client-2.5.0.jar curator-framework-2.5.0.jar zookeeper-3.4.6.jar<br/>\n    + extlib/<br/>\n    +$ cp scala-library-2.10.4.jar kafka-clients-0.8.2.1.jar kafka_2.10-0.8.2.1.jar metrics-core-2.2.0.jar extlib/<br/>\n    +$ cp json-simple-1.1.1.jar extlib/<br/>\n    +$ cp storm-kafka-<b>.jar storm-sql-kafka-</b>.jar storm-sql-runtime-*.jar extlib/<br/>\n    +```<br/>\n    +<br/>\n    +The next step is to submit the SQL statements to StormSQL:<br/>\n    +<br/>\n    +```<br/>\n    +$ bin/storm sql order_filtering order_filtering.sql<br/>\n    +```<br/>\n    +<br/>\n    +By now you should be able to see the `order_filtering` topology in the Storm UI.<br/>\n    +<br/>\n    +## Current Limitations<br/>\n    +<br/>\n    +Aggregation, windowing and joining tables are yet to be implemented. Specifying parallelism hints in the topology is not yet supported.<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Currently all parallelism is set to 1. Filed <a href=\"https://issues.apache.org/jira/browse/STORM-1443\" title=\"Support customizing parallelism in StormSQL\" class=\"issue-link\" data-issue-key=\"STORM-1443\"><del>STORM-1443</del></a> to track the improvement.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612683649/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612683664","html_url":"https://github.com/apache/storm/issues/5201#issuecomment-2612683664","issue_url":"https://api.github.com/repos/apache/storm/issues/5201","id":2612683664,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2ODM2NjQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-06T22:20:59Z","updated_at":"2025-01-24T14:37:29Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user haohui commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/931#discussion_r49017930\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/931#discussion_r49017930</a></p>\n\n<p>    &#8212; Diff: documentation/storm-sql.md &#8212;<br/>\n    @@ -0,0 +1,87 @@<br/>\n    +---<br/>\n    +title: Storm SQL integration<br/>\n    +layout: documentation<br/>\n    +documentation: true<br/>\n    +---<br/>\n    +<br/>\n    +The Storm SQL integration allows users to run SQL queries over streaming data in Storm. Not only the SQL interface allows faster development cycles on streaming analytics, but also opens up the opportunities to unify batch data processing like <span class=\"error\">&#91;Apache Hive&#93;</span>(///hive.apache.org) and real-time streaming data analytics.<br/>\n    +<br/>\n    +At a very high level StormSQL compiles the SQL queries to <span class=\"error\">&#91;Trident&#93;</span>(Trident-API-Overview.html) topologies and executes them in Storm clusters. This document provides information of how to use StormSQL as end users. For people that are interested in more details in the design and the implementation of StormSQL please refer to the <span class=\"error\">&#91;this&#93;</span>(storm-sql-internal.html) page.<br/>\n    +<br/>\n    +## Usage<br/>\n    +<br/>\n    +Run the ``storm sql`` command to compile SQL statements into Trident topology, and submit it to the Storm cluster<br/>\n    +<br/>\n    +```<br/>\n    +$ bin/storm sql <sql-file> <topo-name><br/>\n    +```<br/>\n    +<br/>\n    +In which `sql-file` contains a list of SQL statements to be executed, and `topo-name` is the name of the topology.<br/>\n    +<br/>\n    +<br/>\n    +## Supported Features<br/>\n    +<br/>\n    +The following features are supported in the current repository:<br/>\n    +<br/>\n    +* Streaming from and to external data sources<br/>\n    +* Filtering tuples<br/>\n    +* Projections<br/>\n    +<br/>\n    +## Specifying External Data Sources<br/>\n    +<br/>\n    +In StormSQL data is represented by external tables. Users can specify data sources using the `CREATE EXTERNAL TABLE` statement. For example, the following statement specifies a Kafka spouts and sink:<br/>\n    +<br/>\n    +```<br/>\n    +CREATE EXTERNAL TABLE FOO (ID INT PRIMARY KEY) LOCATION 'kafka://localhost:2181/brokers?topic=test' TBLPROPERTIES '{\"producer\":{\"bootstrap.servers\":\"localhost:9092\",\"acks\":\"1\",\"key.serializer\":\"storm.kafka.IntSerializer\",\"value.serializer\":\"storm.kafka.ByteBufferSerializer\"}}'<br/>\n    +```<br/>\n    +<br/>\n    +The syntax of `CREATE EXTERNAL TABLE` closely follows the one defined in <span class=\"error\">&#91;Hive Data Definition Language&#93;</span>(<a href=\"https://cwiki.apache.org/confluence/display/Hive/LanguageManual+DDL\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://cwiki.apache.org/confluence/display/Hive/LanguageManual+DDL</a>).<br/>\n    +<br/>\n    +## Plugging in External Data Sources<br/>\n    +<br/>\n    +Users plug in external data sources through implementing the `ISqlTridentDataSource` interface and registers them using the mechanisms of Java's service loader. The external data source will be chosen based on the scheme of the URI of the tables. Please refer to the implementation of `storm-sql-kafka` for more details.<br/>\n    +<br/>\n    +## Example: Filtering Kafka Stream<br/>\n    +<br/>\n    +Let's say there is a Kafka stream that represents the transactions of orders. Each message in the stream contains the id of the order, the unit price of the product and the quantity of the orders. The goal is to filter orders where the transactions are significant and to insert these orders into another Kafka stream for further analysis.<br/>\n    +<br/>\n    +The user can specify the following SQL statements in the SQL file:<br/>\n    +<br/>\n    +```<br/>\n    +CREATE EXTERNAL TABLE ORDERS (ID INT PRIMARY KEY, UNIT_PRICE INT, QUANTITY INT) LOCATION 'kafka://localhost:2181/brokers?topic=orders' TBLPROPERTIES '{\"producer\":{\"bootstrap.servers\":\"localhost:9092\",\"acks\":\"1\",\"key.serializer\":\"storm.kafka.IntSerializer\",\"value.serializer\":\"storm.kafka.ByteBufferSerializer\"}}'<br/>\n    +<br/>\n    +CREATE EXTERNAL TABLE LARGE_ORDERS (ID INT PRIMARY KEY, TOTAL INT) LOCATION 'kafka://localhost:2181/brokers?topic=large_orders' TBLPROPERTIES '{\"producer\":{\"bootstrap.servers\":\"localhost:9092\",\"acks\":\"1\",\"key.serializer\":\"storm.kafka.IntSerializer\",\"value.serializer\":\"storm.kafka.ByteBufferSerializer\"}}'<br/>\n    +<br/>\n    +INSERT INTO LARGE_ORDERS SELECT ID, UNIT_PRICE * QUANTITY AS TOTAL FROM ORDERS WHERE UNIT_PRICE * QUANTITY > 50<br/>\n    +```<br/>\n    +<br/>\n    +The first statement defines the table `ORDER` which represents the input stream. The `LOCATION` clause specifies the ZkHost (`localhost:2181`), the path of the brokers in ZooKeeper (`/brokers`) and the topic (`orders`). The `TBLPROPERTIES` clause specifies the configuration of <span class=\"error\">&#91;KafkaProducer&#93;</span>(<a href=\"http://kafka.apache.org/documentation.html#newproducerconfigs\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://kafka.apache.org/documentation.html#newproducerconfigs</a>).<br/>\n    +Current implementation of `storm-sql-kafka` requires specifying both `LOCATION` and `TBLPROPERTIES` clauses even though the table is read-only or write-only.<br/>\n    +<br/>\n    +Similarly, the second statement specifies the table `LARGE_ORDERS` which represents the output stream. The third statement is a `SELECT` statement which defines the topology: it instructs StormSQL to filter all orders in the external table `ORDERS`, calculates the total price and inserts matching records into the Kafka stream specified by `LARGE_ORDER`.<br/>\n    +<br/>\n    +To run this example, users need to include the data sources (`storm-sql-kafka` in this case) and its dependency in the class path. One approach is to put the required jars into the `extlib` directory:<br/>\n    +<br/>\n    +```<br/>\n    +$ cp curator-client-2.5.0.jar curator-framework-2.5.0.jar zookeeper-3.4.6.jar<br/>\n    + extlib/<br/>\n    +$ cp scala-library-2.10.4.jar kafka-clients-0.8.2.1.jar kafka_2.10-0.8.2.1.jar metrics-core-2.2.0.jar extlib/<br/>\n    +$ cp json-simple-1.1.1.jar extlib/<br/>\n    +$ cp storm-kafka-<b>.jar storm-sql-kafka-</b>.jar storm-sql-runtime-*.jar extlib/<br/>\n    +```<br/>\n    +<br/>\n    +The next step is to submit the SQL statements to StormSQL:<br/>\n    +<br/>\n    +```<br/>\n    +$ bin/storm sql order_filtering order_filtering.sql<br/>\n    +```<br/>\n    +<br/>\n    +By now you should be able to see the `order_filtering` topology in the Storm UI.<br/>\n    +<br/>\n    +## Current Limitations<br/>\n    +<br/>\n    +Aggregation, windowing and joining tables are yet to be implemented. Specifying parallelism hints in the topology is not yet supported.<br/>\n    +<br/>\n    +Users also need to provide the dependency of the external data sources in the `extlib` directory. Otherwise the topology will fail to run because of `ClassNotFoundException`.<br/>\n    +<br/>\n    +The current implementation of the Kafka connector in StormSQL assumes both the int=put and the output are in JSON formats. The connector has not yet recognized the `INPUTFORMAT` and `OUTPUTFORMAT` clauses yet.<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    StormSQL plans to support the full algebra provided by Calcite. There are subtle differences in terms of relational algebras between running SQL queries over a regular table and a streaming table. More details can be found at <a href=\"http://calcite.apache.org/docs/stream.html\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://calcite.apache.org/docs/stream.html</a></p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612683664/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/169482130","html_url":"https://github.com/apache/storm/pull/882#issuecomment-169482130","issue_url":"https://api.github.com/repos/apache/storm/issues/882","id":169482130,"node_id":"MDEyOklzc3VlQ29tbWVudDE2OTQ4MjEzMA==","user":{"login":"haohui","id":1192828,"node_id":"MDQ6VXNlcjExOTI4Mjg=","avatar_url":"https://avatars.githubusercontent.com/u/1192828?v=4","gravatar_id":"","url":"https://api.github.com/users/haohui","html_url":"https://github.com/haohui","followers_url":"https://api.github.com/users/haohui/followers","following_url":"https://api.github.com/users/haohui/following{/other_user}","gists_url":"https://api.github.com/users/haohui/gists{/gist_id}","starred_url":"https://api.github.com/users/haohui/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/haohui/subscriptions","organizations_url":"https://api.github.com/users/haohui/orgs","repos_url":"https://api.github.com/users/haohui/repos","events_url":"https://api.github.com/users/haohui/events{/privacy}","received_events_url":"https://api.github.com/users/haohui/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-06T22:25:16Z","updated_at":"2016-01-06T22:25:16Z","author_association":"NONE","body":"+1 can you please squash the two commits into one?\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/169482130/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612593799","html_url":"https://github.com/apache/storm/issues/4847#issuecomment-2612593799","issue_url":"https://api.github.com/repos/apache/storm/issues/4847","id":2612593799,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1OTM3OTk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-06T22:25:17Z","updated_at":"2025-01-24T13:58:04Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user haohui commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/882#issuecomment-169482130\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/882#issuecomment-169482130</a></p>\n\n<p>    +1 can you please squash the two commits into one?</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612593799/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/169487103","html_url":"https://github.com/apache/storm/pull/705#issuecomment-169487103","issue_url":"https://api.github.com/repos/apache/storm/issues/705","id":169487103,"node_id":"MDEyOklzc3VlQ29tbWVudDE2OTQ4NzEwMw==","user":{"login":"ooasis","id":10720176,"node_id":"MDQ6VXNlcjEwNzIwMTc2","avatar_url":"https://avatars.githubusercontent.com/u/10720176?v=4","gravatar_id":"","url":"https://api.github.com/users/ooasis","html_url":"https://github.com/ooasis","followers_url":"https://api.github.com/users/ooasis/followers","following_url":"https://api.github.com/users/ooasis/following{/other_user}","gists_url":"https://api.github.com/users/ooasis/gists{/gist_id}","starred_url":"https://api.github.com/users/ooasis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ooasis/subscriptions","organizations_url":"https://api.github.com/users/ooasis/orgs","repos_url":"https://api.github.com/users/ooasis/repos","events_url":"https://api.github.com/users/ooasis/events{/privacy}","received_events_url":"https://api.github.com/users/ooasis/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-06T22:48:45Z","updated_at":"2016-01-06T22:48:45Z","author_association":"NONE","body":"@choang changes are made and latest code from master merged in. Please review whenever you have time.   -thanks\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/169487103/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612595035","html_url":"https://github.com/apache/storm/issues/4853#issuecomment-2612595035","issue_url":"https://api.github.com/repos/apache/storm/issues/4853","id":2612595035,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1OTUwMzU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-06T22:48:46Z","updated_at":"2025-01-24T13:58:35Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user hsun-cnnxty commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/705#issuecomment-169487103\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/705#issuecomment-169487103</a></p>\n\n<p>    @choang changes are made and latest code from master merged in. Please review whenever you have time.   -thanks</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612595035/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612690974","html_url":"https://github.com/apache/storm/issues/5241#issuecomment-2612690974","issue_url":"https://api.github.com/repos/apache/storm/issues/5241","id":2612690974,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTA5NzQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-07T01:28:38Z","updated_at":"2025-01-24T14:40:23Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user satishd commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/991#discussion_r49033112\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/991#discussion_r49033112</a></p>\n\n<p>    &#8212; Diff: external/storm-mqtt/core/src/main/java/org/apache/storm/mqtt/common/MqttUtils.java &#8212;<br/>\n    @@ -0,0 +1,44 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.mqtt.common;<br/>\n    +<br/>\n    +<br/>\n    +import org.fusesource.mqtt.client.QoS;<br/>\n    +<br/>\n    +public class MqttUtils {<br/>\n    +<br/>\n    +    private MqttUtils(){}<br/>\n    +<br/>\n    +    public static QoS qosFromInt(int i){<br/>\n    +QoS qos = null;<br/>\n    +switch<img class=\"emoticon\" src=\"https://issues.apache.org/jira/images/icons/emoticons/information.png\" height=\"16\" width=\"16\" align=\"absmiddle\" alt=\"\" border=\"0\"/> {<br/>\n    +    case 0:<br/>\n    +qos = QoS.AT_MOST_ONCE;<br/>\n    +break;<br/>\n    +    case 1:<br/>\n    +qos = QoS.AT_LEAST_ONCE;<br/>\n    +break;<br/>\n    +    case 2:<br/>\n    +qos = QoS.EXACTLY_ONCE;<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    That makes sense. Assuming all other options are also part of mqtt protocol. So, there is no real dependency of underlying client for user APIs. </p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612690974/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612690573","html_url":"https://github.com/apache/storm/issues/5239#issuecomment-2612690573","issue_url":"https://api.github.com/repos/apache/storm/issues/5239","id":2612690573,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTA1NzM=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-07T02:05:31Z","updated_at":"2025-01-24T14:40:13Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>GitHub user haohui opened a pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/993\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/993</a></p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1404\" title=\"Fix Mockito test failures in storm-kafka\" class=\"issue-link\" data-issue-key=\"STORM-1404\"><del>STORM-1404</del></a>. Mockito test failures in storm-kafka.</p>\n\n<p>    This PR fixes the failed test reported in <a href=\"https://issues.apache.org/jira/browse/STORM-1404\" title=\"Fix Mockito test failures in storm-kafka\" class=\"issue-link\" data-issue-key=\"STORM-1404\"><del>STORM-1404</del></a>. It replaces the unreliable `Thread.sleep()` with comprehensive mocking to make sure the tests are reliable.</p>\n\n<p>You can merge this pull request into a Git repository by running:</p>\n\n<p>    $ git pull <a href=\"https://github.com/haohui/storm\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/haohui/storm</a> <a href=\"https://issues.apache.org/jira/browse/STORM-1404\" title=\"Fix Mockito test failures in storm-kafka\" class=\"issue-link\" data-issue-key=\"STORM-1404\"><del>STORM-1404</del></a></p>\n\n<p>Alternatively you can review and apply these changes as the patch at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/993.patch\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/993.patch</a></p>\n\n<p>To close this pull request, make a commit to your master/trunk branch<br/>\nwith (at least) the following in the commit message:</p>\n\n<p>    This closes #993</p>\n\n<hr />\n<p>commit de90b185c4976522562dc6f161ed88dbedd2a0fa<br/>\nAuthor: Haohui Mai <wheat9@apache.org><br/>\nDate:   2016-01-07T02:04:13Z</p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1404\" title=\"Fix Mockito test failures in storm-kafka\" class=\"issue-link\" data-issue-key=\"STORM-1404\"><del>STORM-1404</del></a>. Mockito test failures in storm-kafka.</p>\n\n<hr />","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612690573/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/169525901","html_url":"https://github.com/apache/storm/pull/477#issuecomment-169525901","issue_url":"https://api.github.com/repos/apache/storm/issues/477","id":169525901,"node_id":"MDEyOklzc3VlQ29tbWVudDE2OTUyNTkwMQ==","user":{"login":"jangie","id":698291,"node_id":"MDQ6VXNlcjY5ODI5MQ==","avatar_url":"https://avatars.githubusercontent.com/u/698291?v=4","gravatar_id":"","url":"https://api.github.com/users/jangie","html_url":"https://github.com/jangie","followers_url":"https://api.github.com/users/jangie/followers","following_url":"https://api.github.com/users/jangie/following{/other_user}","gists_url":"https://api.github.com/users/jangie/gists{/gist_id}","starred_url":"https://api.github.com/users/jangie/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jangie/subscriptions","organizations_url":"https://api.github.com/users/jangie/orgs","repos_url":"https://api.github.com/users/jangie/repos","events_url":"https://api.github.com/users/jangie/events{/privacy}","received_events_url":"https://api.github.com/users/jangie/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-07T02:27:06Z","updated_at":"2016-01-07T02:27:06Z","author_association":"CONTRIBUTOR","body":"@dossett At initial time of the PR, I believe that the NotSerializableException was wrapped inside of a RuntimeException (and may very well still be).\n\nFor what it's worth, I believe I've addressed the other comments, I guess we'll see what Travis says.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/169525901/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612486279","html_url":"https://github.com/apache/storm/issues/4310#issuecomment-2612486279","issue_url":"https://api.github.com/repos/apache/storm/issues/4310","id":2612486279,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0ODYyNzk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-07T02:27:08Z","updated_at":"2025-01-24T13:04:25Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user jangie commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/477#issuecomment-169525901\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/477#issuecomment-169525901</a></p>\n\n<p>    @dossett At initial time of the PR, I believe that the NotSerializableException was wrapped inside of a RuntimeException (and may very well still be).</p>\n\n<p>    For what it's worth, I believe I've addressed the other comments, I guess we'll see what Travis says.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612486279/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/169537568","html_url":"https://github.com/apache/storm/pull/936#issuecomment-169537568","issue_url":"https://api.github.com/repos/apache/storm/issues/936","id":169537568,"node_id":"MDEyOklzc3VlQ29tbWVudDE2OTUzNzU2OA==","user":{"login":"harshach","id":38649,"node_id":"MDQ6VXNlcjM4NjQ5","avatar_url":"https://avatars.githubusercontent.com/u/38649?v=4","gravatar_id":"","url":"https://api.github.com/users/harshach","html_url":"https://github.com/harshach","followers_url":"https://api.github.com/users/harshach/followers","following_url":"https://api.github.com/users/harshach/following{/other_user}","gists_url":"https://api.github.com/users/harshach/gists{/gist_id}","starred_url":"https://api.github.com/users/harshach/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/harshach/subscriptions","organizations_url":"https://api.github.com/users/harshach/orgs","repos_url":"https://api.github.com/users/harshach/repos","events_url":"https://api.github.com/users/harshach/events{/privacy}","received_events_url":"https://api.github.com/users/harshach/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-07T03:17:26Z","updated_at":"2016-01-07T03:17:26Z","author_association":"CONTRIBUTOR","body":"+1\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/169537568/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612631127","html_url":"https://github.com/apache/storm/issues/5037#issuecomment-2612631127","issue_url":"https://api.github.com/repos/apache/storm/issues/5037","id":2612631127,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MzExMjc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-07T03:17:27Z","updated_at":"2025-01-24T14:14:08Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user harshach commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/936#issuecomment-169537568\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/936#issuecomment-169537568</a></p>\n\n<p>    +1</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612631127/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/169539886","html_url":"https://github.com/apache/storm/pull/993#issuecomment-169539886","issue_url":"https://api.github.com/repos/apache/storm/issues/993","id":169539886,"node_id":"MDEyOklzc3VlQ29tbWVudDE2OTUzOTg4Ng==","user":{"login":"harshach","id":38649,"node_id":"MDQ6VXNlcjM4NjQ5","avatar_url":"https://avatars.githubusercontent.com/u/38649?v=4","gravatar_id":"","url":"https://api.github.com/users/harshach","html_url":"https://github.com/harshach","followers_url":"https://api.github.com/users/harshach/followers","following_url":"https://api.github.com/users/harshach/following{/other_user}","gists_url":"https://api.github.com/users/harshach/gists{/gist_id}","starred_url":"https://api.github.com/users/harshach/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/harshach/subscriptions","organizations_url":"https://api.github.com/users/harshach/orgs","repos_url":"https://api.github.com/users/harshach/repos","events_url":"https://api.github.com/users/harshach/events{/privacy}","received_events_url":"https://api.github.com/users/harshach/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-07T03:37:49Z","updated_at":"2016-01-07T03:37:49Z","author_association":"CONTRIBUTOR","body":"+1\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/169539886/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612690583","html_url":"https://github.com/apache/storm/issues/5239#issuecomment-2612690583","issue_url":"https://api.github.com/repos/apache/storm/issues/5239","id":2612690583,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTA1ODM=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-07T03:37:50Z","updated_at":"2025-01-24T14:40:13Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user harshach commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/993#issuecomment-169539886\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/993#issuecomment-169539886</a></p>\n\n<p>    +1</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612690583/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/169542517","html_url":"https://github.com/apache/storm/pull/936#issuecomment-169542517","issue_url":"https://api.github.com/repos/apache/storm/issues/936","id":169542517,"node_id":"MDEyOklzc3VlQ29tbWVudDE2OTU0MjUxNw==","user":{"login":"satishd","id":2577761,"node_id":"MDQ6VXNlcjI1Nzc3NjE=","avatar_url":"https://avatars.githubusercontent.com/u/2577761?v=4","gravatar_id":"","url":"https://api.github.com/users/satishd","html_url":"https://github.com/satishd","followers_url":"https://api.github.com/users/satishd/followers","following_url":"https://api.github.com/users/satishd/following{/other_user}","gists_url":"https://api.github.com/users/satishd/gists{/gist_id}","starred_url":"https://api.github.com/users/satishd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/satishd/subscriptions","organizations_url":"https://api.github.com/users/satishd/orgs","repos_url":"https://api.github.com/users/satishd/repos","events_url":"https://api.github.com/users/satishd/events{/privacy}","received_events_url":"https://api.github.com/users/satishd/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-07T04:04:19Z","updated_at":"2016-01-07T04:04:19Z","author_association":"MEMBER","body":"+1\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/169542517/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612631134","html_url":"https://github.com/apache/storm/issues/5037#issuecomment-2612631134","issue_url":"https://api.github.com/repos/apache/storm/issues/5037","id":2612631134,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MzExMzQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-07T04:04:20Z","updated_at":"2025-01-24T14:14:08Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user satishd commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/936#issuecomment-169542517\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/936#issuecomment-169542517</a></p>\n\n<p>    +1</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612631134/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612690979","html_url":"https://github.com/apache/storm/issues/5241#issuecomment-2612690979","issue_url":"https://api.github.com/repos/apache/storm/issues/5241","id":2612690979,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTA5Nzk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-07T05:23:58Z","updated_at":"2025-01-24T14:40:23Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user arunmahadevan commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/991#discussion_r49043039\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/991#discussion_r49043039</a></p>\n\n<p>    &#8212; Diff: external/storm-mqtt/core/src/main/java/org/apache/storm/mqtt/trident/MqttPublishFunction.java &#8212;<br/>\n    @@ -0,0 +1,84 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.mqtt.trident;<br/>\n    +<br/>\n    +import backtype.storm.Config;<br/>\n    +import backtype.storm.task.OutputCollector;<br/>\n    +import backtype.storm.topology.FailedException;<br/>\n    +import org.apache.storm.mqtt.MqttMessage;<br/>\n    +import org.apache.storm.mqtt.common.MqttOptions;<br/>\n    +import org.apache.storm.mqtt.MqttTupleMapper;<br/>\n    +import org.apache.storm.mqtt.common.MqttPublisher;<br/>\n    +import org.apache.storm.mqtt.common.SslUtils;<br/>\n    +import org.apache.storm.mqtt.ssl.KeyStoreLoader;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +import storm.trident.operation.BaseFunction;<br/>\n    +import storm.trident.operation.TridentCollector;<br/>\n    +import storm.trident.operation.TridentOperationContext;<br/>\n    +import storm.trident.tuple.TridentTuple;<br/>\n    +<br/>\n    +import java.util.Map;<br/>\n    +<br/>\n    +public class MqttPublishFunction extends BaseFunction {<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    This looks like more of a trident sink than an pure function. So it might be better to follow the `StateUpdater/StateFactory` pattern (like `HdfsState` and `HdfsStatefactory`) and be used with `partitionPersist`.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612690979/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/169555291","html_url":"https://github.com/apache/storm/pull/705#issuecomment-169555291","issue_url":"https://api.github.com/repos/apache/storm/issues/705","id":169555291,"node_id":"MDEyOklzc3VlQ29tbWVudDE2OTU1NTI5MQ==","user":{"login":"choang","id":602917,"node_id":"MDQ6VXNlcjYwMjkxNw==","avatar_url":"https://avatars.githubusercontent.com/u/602917?v=4","gravatar_id":"","url":"https://api.github.com/users/choang","html_url":"https://github.com/choang","followers_url":"https://api.github.com/users/choang/followers","following_url":"https://api.github.com/users/choang/following{/other_user}","gists_url":"https://api.github.com/users/choang/gists{/gist_id}","starred_url":"https://api.github.com/users/choang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/choang/subscriptions","organizations_url":"https://api.github.com/users/choang/orgs","repos_url":"https://api.github.com/users/choang/repos","events_url":"https://api.github.com/users/choang/events{/privacy}","received_events_url":"https://api.github.com/users/choang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-07T05:27:42Z","updated_at":"2016-01-07T05:27:42Z","author_association":"NONE","body":"this looks good enough\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/169555291/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612595040","html_url":"https://github.com/apache/storm/issues/4853#issuecomment-2612595040","issue_url":"https://api.github.com/repos/apache/storm/issues/4853","id":2612595040,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI1OTUwNDA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-07T05:27:43Z","updated_at":"2025-01-24T13:58:35Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user choang commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/705#issuecomment-169555291\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/705#issuecomment-169555291</a></p>\n\n<p>    this looks good enough</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612595040/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612631138","html_url":"https://github.com/apache/storm/issues/5037#issuecomment-2612631138","issue_url":"https://api.github.com/repos/apache/storm/issues/5037","id":2612631138,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MzExMzg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-07T07:12:33Z","updated_at":"2025-01-24T14:14:08Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user arunmahadevan commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/936#discussion_r49047059\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/936#discussion_r49047059</a></p>\n\n<p>    &#8212; Diff: external/storm-hdfs/src/main/java/org/apache/storm/hdfs/spout/DirLock.java &#8212;<br/>\n    @@ -0,0 +1,133 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + * <p/><br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + * <p/><br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +<br/>\n    +package org.apache.storm.hdfs.spout;<br/>\n    +<br/>\n    +import org.apache.hadoop.fs.FSDataOutputStream;<br/>\n    +import org.apache.hadoop.fs.FileSystem;<br/>\n    +import org.apache.hadoop.fs.Path;<br/>\n    +import org.apache.hadoop.hdfs.DistributedFileSystem;<br/>\n    +import org.apache.storm.hdfs.common.HdfsUtils;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +import java.io.IOException;<br/>\n    +<br/>\n    +/**<br/>\n    + * Facility to synchronize access to HDFS directory. The lock itself is represented<br/>\n    + * as a file in the same directory. Relies on atomic file creation.<br/>\n    + */<br/>\n    +public class DirLock {<br/>\n    +  private FileSystem fs;<br/>\n    +  private final Path lockFile;<br/>\n    +  public static final String DIR_LOCK_FILE = \"DIRLOCK\";<br/>\n    +  private static final Logger LOG = LoggerFactory.getLogger(DirLock.class);<br/>\n    +  private DirLock(FileSystem fs, Path lockFile) throws IOException {<br/>\n    +    if( fs.isDirectory(lockFile) ) </p>\n{\n    +      throw new IllegalArgumentException(lockFile.toString() + \" is not a directory\");\n    +    }\n<p>    +    this.fs = fs;<br/>\n    +    this.lockFile = lockFile;<br/>\n    +  }<br/>\n    +<br/>\n    +  /** Get a lock on file if not already locked<br/>\n    +   *<br/>\n    +   * @param fs<br/>\n    +   * @param dir  the dir on which to get a lock<br/>\n    +   * @return The lock object if it the lock was acquired. Returns null if the dir is already locked.<br/>\n    +   * @throws IOException if there were errors<br/>\n    +   */<br/>\n    +  public static DirLock tryLock(FileSystem fs, Path dir) throws IOException {<br/>\n    +    Path lockFile = getDirLockFile(dir);<br/>\n    +<br/>\n    +    try {<br/>\n    +      FSDataOutputStream ostream = HdfsUtils.tryCreateFile(fs, lockFile);<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    This relies on `create(path, overwrite)` to atomically create the file if it does not exist. The notes for FSDataOutputStream create from this <span class=\"error\">&#91;link&#93;</span> (<a href=\"https://hadoop.apache.org/docs/stable/hadoop-project-dist/hadoop-common/filesystem/filesystem.html\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://hadoop.apache.org/docs/stable/hadoop-project-dist/hadoop-common/filesystem/filesystem.html</a>) says `Some implementations split the create into a check for the file existing from the actual creation. This means the operation is NOT atomic`. Can you check?. If create is not atomic you will have to rely on `rename` which must be atomic as per that doc.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612631138/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612631146","html_url":"https://github.com/apache/storm/issues/5037#issuecomment-2612631146","issue_url":"https://api.github.com/repos/apache/storm/issues/5037","id":2612631146,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MzExNDY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-07T07:24:36Z","updated_at":"2025-01-24T14:14:08Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user arunmahadevan commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/936#discussion_r49047484\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/936#discussion_r49047484</a></p>\n\n<p>    &#8212; Diff: external/storm-hdfs/src/main/java/org/apache/storm/hdfs/spout/HdfsSpout.java &#8212;<br/>\n    @@ -0,0 +1,702 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + * <p/><br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + * <p/><br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +<br/>\n    +package org.apache.storm.hdfs.spout;<br/>\n    +<br/>\n    +import java.io.IOException;<br/>\n    +import java.lang.reflect.Constructor;<br/>\n    +import java.net.URI;<br/>\n    +import java.util.Collection;<br/>\n    +import java.util.HashMap;<br/>\n    +import java.util.List;<br/>\n    +import java.util.Map;<br/>\n    +import java.util.Timer;<br/>\n    +import java.util.TimerTask;<br/>\n    +import java.util.concurrent.LinkedBlockingQueue;<br/>\n    +import java.util.concurrent.atomic.AtomicBoolean;<br/>\n    +<br/>\n    +import backtype.storm.Config;<br/>\n    +import org.apache.hadoop.conf.Configuration;<br/>\n    +import org.apache.hadoop.fs.FileSystem;<br/>\n    +import org.apache.hadoop.fs.Path;<br/>\n    +import org.apache.storm.hdfs.common.HdfsUtils;<br/>\n    +import org.apache.storm.hdfs.common.security.HdfsSecurityUtil;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +import backtype.storm.spout.SpoutOutputCollector;<br/>\n    +import backtype.storm.task.TopologyContext;<br/>\n    +import backtype.storm.topology.OutputFieldsDeclarer;<br/>\n    +import backtype.storm.topology.base.BaseRichSpout;<br/>\n    +import backtype.storm.tuple.Fields;<br/>\n    +<br/>\n    +public class HdfsSpout extends BaseRichSpout {<br/>\n    +<br/>\n    +  // user configurable<br/>\n    +  private String hdfsUri;    // required<br/>\n    +  private String readerType; // required<br/>\n    +  private Fields outputFields;       // required<br/>\n    +  private Path sourceDirPath;// required<br/>\n    +  private Path archiveDirPath;       // required<br/>\n    +  private Path badFilesDirPath;      // required<br/>\n    +  private Path lockDirPath;<br/>\n    +<br/>\n    +  private int commitFrequencyCount = Configs.DEFAULT_COMMIT_FREQ_COUNT;<br/>\n    +  private int commitFrequencySec = Configs.DEFAULT_COMMIT_FREQ_SEC;<br/>\n    +  private int maxOutstanding = Configs.DEFAULT_MAX_OUTSTANDING;<br/>\n    +  private int lockTimeoutSec = Configs.DEFAULT_LOCK_TIMEOUT;<br/>\n    +  private boolean clocksInSync = true;<br/>\n    +<br/>\n    +  private String inprogress_suffix = \".inprogress\";<br/>\n    +  private String ignoreSuffix = \".ignore\";<br/>\n    +<br/>\n    +  // other members<br/>\n    +  private static final Logger LOG = LoggerFactory.getLogger(HdfsSpout.class);<br/>\n    +<br/>\n    +  private ProgressTracker tracker = null;<br/>\n    +<br/>\n    +  private FileSystem hdfs;<br/>\n    +  private FileReader reader;<br/>\n    +<br/>\n    +  private SpoutOutputCollector collector;<br/>\n    +  HashMap<MessageId, List<Object> > inflight = new HashMap<>();<br/>\n    +  LinkedBlockingQueue<HdfsUtils.Pair<MessageId, List<Object>>> retryList = new LinkedBlockingQueue<>();<br/>\n    +<br/>\n    +  private Configuration hdfsConfig;<br/>\n    +<br/>\n    +  private Map conf = null;<br/>\n    +  private FileLock lock;<br/>\n    +  private String spoutId = null;<br/>\n    +<br/>\n    +  HdfsUtils.Pair<Path,FileLock.LogEntry> lastExpiredLock = null;<br/>\n    +  private long lastExpiredLockTime = 0;<br/>\n    +<br/>\n    +  private long tupleCounter = 0;<br/>\n    +  private boolean ackEnabled = false;<br/>\n    +  private int acksSinceLastCommit = 0 ;<br/>\n    +  private final AtomicBoolean commitTimeElapsed = new AtomicBoolean(false);<br/>\n    +  private Timer commitTimer;<br/>\n    +  private boolean fileReadCompletely = true;<br/>\n    +<br/>\n    +  private String configKey = Configs.DEFAULT_HDFS_CONFIG_KEY; // key for hdfs Kerberos configs<br/>\n    +<br/>\n    +  public HdfsSpout() </p>\n{\n    +  }\n<p>    +  /** Name of the output field names. Number of fields depends upon the reader type */<br/>\n    +  public HdfsSpout withOutputFields(String... fields) </p>\n{\n    +    outputFields = new Fields(fields);\n    +    return this;\n    +  }\n<p>    +<br/>\n    +  /** set key name under which HDFS options are placed. (similar to HDFS bolt).<br/>\n    +   * default key name is 'hdfs.config' */<br/>\n    +  public HdfsSpout withConfigKey(String configKey) </p>\n{\n    +    this.configKey = configKey;\n    +    return this;\n    +  }\n<p>    +<br/>\n    +  public Path getLockDirPath() </p>\n{\n    +    return lockDirPath;\n    +  }\n<p>    +<br/>\n    +  public SpoutOutputCollector getCollector() </p>\n{\n    +    return collector;\n    +  }\n<p>    +<br/>\n    +  public void nextTuple() {<br/>\n    +    LOG.trace(\"Next Tuple {}\", spoutId);<br/>\n    +    // 1) First re-emit any previously failed tuples (from retryList)<br/>\n    +    if (!retryList.isEmpty()) </p>\n{\n    +      LOG.debug(\"Sending tuple from retry list\");\n    +      HdfsUtils.Pair<MessageId, List<Object>> pair = retryList.remove();\n    +      emitData(pair.getValue(), pair.getKey());\n    +      return;\n    +    }\n<p>    +<br/>\n    +    if( ackEnabled  &&  tracker.size()>= maxOutstanding) {<br/>\n    +      LOG.warn(\"Waiting for more ACKs before generating new tuples. \" +<br/>\n    +      \"Progress tracker size has reached limit {}, SpoutID {}\"<br/>\n    +      , maxOutstanding, spoutId);<br/>\n    +      // Don't emit anything .. allow configured spout wait strategy to kick in<br/>\n    +      return;<br/>\n    +    }<br/>\n    +<br/>\n    +    // 2) If no failed tuples to be retried, then send tuples from hdfs<br/>\n    +    while (true) {<br/>\n    +      try {<br/>\n    +// 3) Select a new file if one is not open already<br/>\n    +if (reader == null) {<br/>\n    +  reader = pickNextFile();<br/>\n    +  if (reader == null) </p>\n{\n    +    LOG.debug(\"Currently no new files to process under : \" + sourceDirPath);\n    +    return;\n    +  }\n<p> else </p>\n{\n    +    fileReadCompletely=false;\n    +  }\n<p>    +}<br/>\n    +if( fileReadCompletely ) </p>\n{ // wait for more ACKs before proceeding\n    +  return;\n    +}\n<p>    +// 4) Read record from file, emit to collector and record progress<br/>\n    +List<Object> tuple = reader.next();<br/>\n    +if (tuple != null) {<br/>\n    +  fileReadCompletely= false;<br/>\n    +  ++tupleCounter;<br/>\n    +  MessageId msgId = new MessageId(tupleCounter, reader.getFilePath(), reader.getFileOffset());<br/>\n    +  emitData(tuple, msgId);<br/>\n    +<br/>\n    +  if(!ackEnabled) </p>\n{\n    +    ++acksSinceLastCommit; // assume message is immediately ACKed in non-ack mode\n    +    commitProgress(reader.getFileOffset());\n    +  }\n<p> else </p>\n{\n    +    commitProgress(tracker.getCommitPosition());\n    +  }\n<p>    +  return;<br/>\n    +} else {<br/>\n    +  fileReadCompletely = true;<br/>\n    +  if(!ackEnabled) </p>\n{\n    +    markFileAsDone(reader.getFilePath());\n    +  }\n<p>    +}<br/>\n    +      } catch (IOException e) </p>\n{\n    +LOG.error(\"I/O Error processing at file location \" + getFileProgress(reader), e);\n    +// don't emit anything .. allow configured spout wait strategy to kick in\n    +return;\n    +      }\n<p> catch (ParseException e) </p>\n{\n    +LOG.error(\"Parsing error when processing at file location \" + getFileProgress(reader) +\n    +\". Skipping remainder of file.\", e);\n    +markFileAsBad(reader.getFilePath());\n    +// Note: We don't return from this method on ParseException to avoid triggering the\n    +// spout wait strategy (due to no emits). Instead we go back into the loop and\n    +// generate a tuple from next file\n    +      }\n<p>    +    } // while<br/>\n    +  }<br/>\n    +<br/>\n    +  // will commit progress into lock file if commit threshold is reached<br/>\n    +  private void commitProgress(FileOffset position) {<br/>\n    +    if(position==null) </p>\n{\n    +      return;\n    +    }<br/>\n    +    if ( lock!=null && canCommitNow() ) {<br/>\n    +      try {<br/>\n    +String pos = position.toString();<br/>\n    +lock.heartbeat(pos);<br/>\n    +LOG.debug(\"{} Committed progress. {}\", spoutId, pos);<br/>\n    +acksSinceLastCommit = 0;<br/>\n    +commitTimeElapsed.set(false);<br/>\n    +setupCommitElapseTimer();<br/>\n    +      } catch (IOException e) {\n    +LOG.error(\"Unable to commit progress Will retry later. Spout ID = \" + spoutId, e);\n    +      }<br/>\n    +    }<br/>\n    +  }<br/>\n    +<br/>\n    +  private void setupCommitElapseTimer() {<br/>\n    +    if(commitFrequencySec<=0) {    +      return;    +    }\n<p>    +    TimerTask timerTask = new TimerTask() {<br/>\n    +      @Override<br/>\n    +      public void run() </p>\n{\n    +commitTimeElapsed.set(true);\n    +      }\n<p>    +    };<br/>\n    +    commitTimer.schedule(timerTask, commitFrequencySec * 1000);<br/>\n    +  }<br/>\n    +<br/>\n    +  private static String getFileProgress(FileReader reader) </p>\n{\n    +    return reader.getFilePath() + \" \" + reader.getFileOffset();\n    +  }\n<p>    +<br/>\n    +  private void markFileAsDone(Path filePath) {<br/>\n    +    try {<br/>\n    +      Path newFile = renameCompletedFile(reader.getFilePath());<br/>\n    +      LOG.info(\"Completed processing {}. Spout Id = {}\", newFile, spoutId);<br/>\n    +    } catch (IOException e) </p>\n{\n    +      LOG.error(\"Unable to archive completed file\" + filePath + \" Spout ID \" + spoutId, e);\n    +    }\n<p>    +    closeReaderAndResetTrackers();<br/>\n    +  }<br/>\n    +<br/>\n    +  private void markFileAsBad(Path file) {<br/>\n    +    String fileName = file.toString();<br/>\n    +    String fileNameMinusSuffix = fileName.substring(0, fileName.indexOf(inprogress_suffix));<br/>\n    +    String originalName = new Path(fileNameMinusSuffix).getName();<br/>\n    +    Path  newFile = new Path( badFilesDirPath + Path.SEPARATOR + originalName);<br/>\n    +<br/>\n    +    LOG.info(\"Moving bad file {} to {}. Processed it till offset {}. SpoutID= {}\", originalName, newFile, tracker.getCommitPosition(), spoutId);<br/>\n    +    try {<br/>\n    +      if (!hdfs.rename(file, newFile) ) </p>\n{ // seems this can fail by returning false or throwing exception\n    +throw new IOException(\"Move failed for bad file: \" + file); // convert false ret value to exception\n    +      }\n<p>    +    } catch (IOException e) </p>\n{\n    +      LOG.warn(\"Error moving bad file: \" + file + \" to destination \" + newFile + \" SpoutId =\" + spoutId, e);\n    +    }\n<p>    +    closeReaderAndResetTrackers();<br/>\n    +  }<br/>\n    +<br/>\n    +  private void closeReaderAndResetTrackers() {<br/>\n    +    inflight.clear();<br/>\n    +    tracker.offsets.clear();<br/>\n    +    retryList.clear();<br/>\n    +<br/>\n    +    reader.close();<br/>\n    +    reader = null;<br/>\n    +    try {<br/>\n    +      lock.release();<br/>\n    +      LOG.debug(\"Spout {} released FileLock. SpoutId = {}\", lock.getLockFile(), spoutId);<br/>\n    +    } catch (IOException e) </p>\n{\n    +      LOG.error(\"Unable to delete lock file : \" + this.lock.getLockFile() + \" SpoutId =\" + spoutId, e);\n    +    }\n<p>    +    lock = null;<br/>\n    +  }<br/>\n    +<br/>\n    +  protected void emitData(List<Object> tuple, MessageId id) {<br/>\n    +    LOG.trace(\"Emitting - {}\", id);<br/>\n    +    this.collector.emit(tuple, id);<br/>\n    +    inflight.put(id, tuple);<br/>\n    +  }<br/>\n    +<br/>\n    +  public void open(Map conf, TopologyContext context, SpoutOutputCollector collector) {<br/>\n    +    LOG.info(\"Opening HDFS Spout\");<br/>\n    +    this.conf = conf;<br/>\n    +    this.commitTimer = new Timer();<br/>\n    +    this.tracker = new ProgressTracker();<br/>\n    +    this.hdfsConfig = new Configuration();<br/>\n    +<br/>\n    +    this.collector = collector;<br/>\n    +    this.hdfsConfig = new Configuration();<br/>\n    +    this.tupleCounter = 0;<br/>\n    +<br/>\n    +    // Hdfs related settings<br/>\n    +    if( conf.containsKey(Configs.HDFS_URI)) </p>\n{\n    +      this.hdfsUri = conf.get(Configs.HDFS_URI).toString();\n    +    }\n<p> else </p>\n{\n    +      throw new RuntimeException(Configs.HDFS_URI + \" setting is required\");\n    +    }\n<p>    +<br/>\n    +    try </p>\n{\n    +      this.hdfs = FileSystem.get(URI.create(hdfsUri), hdfsConfig);\n    +    }\n<p> catch (IOException e) </p>\n{\n    +      LOG.error(\"Unable to instantiate file system\", e);\n    +      throw new RuntimeException(\"Unable to instantiate file system\", e);\n    +    }\n<p>    +<br/>\n    +<br/>\n    +    if ( conf.containsKey(configKey) ) {<br/>\n    +      Map<String, Object> map = (Map<String, Object>)conf.get(configKey);<br/>\n    +if(map != null) {<br/>\n    +  for(String keyName : map.keySet())</p>\n{\n    +    LOG.info(\"HDFS Config override : \" + keyName + \" = \" + String.valueOf(map.get(keyName)));\n    +    this.hdfsConfig.set(keyName, String.valueOf(map.get(keyName)));\n    +  }\n<p>    +  try </p>\n{\n    +    HdfsSecurityUtil.login(conf, hdfsConfig);\n    +  }\n<p> catch (IOException e) </p>\n{\n    +    LOG.error(\"HDFS Login failed \", e);\n    +    throw new RuntimeException(e);\n    +  }\n<p>    +} // if(map != null)<br/>\n    +      }<br/>\n    +<br/>\n    +    // Reader type config<br/>\n    +    if( conf.containsKey(Configs.READER_TYPE) ) </p>\n{\n    +      readerType = conf.get(Configs.READER_TYPE).toString();\n    +      checkValidReader(readerType);\n    +    }\n<p>    +<br/>\n    +    // &#8211; source dir config<br/>\n    +    if ( !conf.containsKey(Configs.SOURCE_DIR) ) </p>\n{\n    +      LOG.error(Configs.SOURCE_DIR + \" setting is required\");\n    +      throw new RuntimeException(Configs.SOURCE_DIR + \" setting is required\");\n    +    }\n<p>    +    this.sourceDirPath = new Path( conf.get(Configs.SOURCE_DIR).toString() );<br/>\n    +<br/>\n    +    // &#8211; archive dir config<br/>\n    +    if ( !conf.containsKey(Configs.ARCHIVE_DIR) ) </p>\n{\n    +      LOG.error(Configs.ARCHIVE_DIR + \" setting is required\");\n    +      throw new RuntimeException(Configs.ARCHIVE_DIR + \" setting is required\");\n    +    }\n<p>    +    this.archiveDirPath = new Path( conf.get(Configs.ARCHIVE_DIR).toString() );<br/>\n    +    validateOrMakeDir(hdfs, archiveDirPath, \"Archive\");<br/>\n    +<br/>\n    +    // &#8211; bad files dir config<br/>\n    +    if ( !conf.containsKey(Configs.BAD_DIR) ) </p>\n{\n    +      LOG.error(Configs.BAD_DIR + \" setting is required\");\n    +      throw new RuntimeException(Configs.BAD_DIR + \" setting is required\");\n    +    }\n<p>    +<br/>\n    +    this.badFilesDirPath = new Path(conf.get(Configs.BAD_DIR).toString());<br/>\n    +    validateOrMakeDir(hdfs, badFilesDirPath, \"bad files\");<br/>\n    +<br/>\n    +    // &#8211; ignore file names config<br/>\n    +    if ( conf.containsKey(Configs.IGNORE_SUFFIX) ) </p>\n{\n    +      this.ignoreSuffix = conf.get(Configs.IGNORE_SUFFIX).toString();\n    +    }\n<p>    +<br/>\n    +    // &#8211; lock dir config<br/>\n    +    String lockDir = !conf.containsKey(Configs.LOCK_DIR) ? getDefaultLockDir(sourceDirPath) : conf.get(Configs.LOCK_DIR).toString() ;<br/>\n    +    this.lockDirPath = new Path(lockDir);<br/>\n    +    validateOrMakeDir(hdfs,lockDirPath,\"locks\");<br/>\n    +<br/>\n    +    // &#8211; lock timeout<br/>\n    +    if( conf.get(Configs.LOCK_TIMEOUT) !=null ) </p>\n{\n    +      this.lockTimeoutSec = Integer.parseInt(conf.get(Configs.LOCK_TIMEOUT).toString());\n    +    }\n<p>    +<br/>\n    +    // &#8211; enable/disable ACKing<br/>\n    +    Object ackers = conf.get(Config.TOPOLOGY_ACKER_EXECUTORS);<br/>\n    +    if( ackers!=null ) {<br/>\n    +      int ackerCount = Integer.parseInt(ackers.toString());<br/>\n    +      this.ackEnabled = (ackerCount>0);<br/>\n    +      LOG.debug(\"ACKer count = {}\", ackerCount);<br/>\n    +    }<br/>\n    +    else </p>\n{\n    +      this.ackEnabled = false;\n    +      LOG.debug(\"No ACKers config found\");\n    +    }\n<p>    +<br/>\n    +    LOG.info(\"ACK mode is {}\", ackEnabled ? \"enabled\" : \"disabled\");<br/>\n    +<br/>\n    +    // &#8211; commit frequency - count<br/>\n    +    if( conf.get(Configs.COMMIT_FREQ_COUNT) != null ) </p>\n{\n    +      commitFrequencyCount = Integer.parseInt(conf.get(Configs.COMMIT_FREQ_COUNT).toString());\n    +    }\n<p>    +<br/>\n    +    // &#8211; commit frequency - seconds<br/>\n    +    if( conf.get(Configs.COMMIT_FREQ_SEC) != null ) {<br/>\n    +      commitFrequencySec = Integer.parseInt(conf.get(Configs.COMMIT_FREQ_SEC).toString());<br/>\n    +      if(commitFrequencySec<=0) </p>\n{\n    +throw new RuntimeException(Configs.COMMIT_FREQ_SEC + \" setting must be greater than 0\");\n    +      }\n<p>    +    }<br/>\n    +<br/>\n    +    // &#8211; max duplicate<br/>\n    +    if( conf.get(Configs.MAX_OUTSTANDING) !=null )<br/>\n    +      maxOutstanding = Integer.parseInt( conf.get(Configs.MAX_OUTSTANDING).toString() );<br/>\n    +<br/>\n    +    // &#8211; clocks in sync<br/>\n    +    if( conf.get(Configs.CLOCKS_INSYNC) !=null )<br/>\n    +      clocksInSync = Boolean.parseBoolean(conf.get(Configs.CLOCKS_INSYNC).toString());<br/>\n    +<br/>\n    +    // &#8211; spout id<br/>\n    +    spoutId = context.getThisComponentId();<br/>\n    +<br/>\n    +    // setup timer for commit elapse time tracking<br/>\n    +    setupCommitElapseTimer();<br/>\n    +  }<br/>\n    +<br/>\n    +  private static void validateOrMakeDir(FileSystem fs, Path dir, String dirDescription) {<br/>\n    +    try {<br/>\n    +      if(fs.exists(dir)) {<br/>\n    +if(! fs.isDirectory(dir) ) </p>\n{\n    +  LOG.error(dirDescription + \" directory is a file, not a dir. \" + dir);\n    +  throw new RuntimeException(dirDescription + \" directory is a file, not a dir. \" + dir);\n    +}\n<p>    +      } else if(! fs.mkdirs(dir) ) </p>\n{\n    +LOG.error(\"Unable to create \" + dirDescription + \" directory \" + dir);\n    +throw new RuntimeException(\"Unable to create \" + dirDescription + \" directory \" + dir);\n    +      }\n<p>    +    } catch (IOException e) </p>\n{\n    +      LOG.error(\"Unable to create \" + dirDescription + \" directory \" + dir, e);\n    +      throw new RuntimeException(\"Unable to create \" + dirDescription + \" directory \" + dir, e);\n    +    }\n<p>    +  }<br/>\n    +<br/>\n    +  private String getDefaultLockDir(Path sourceDirPath) </p>\n{\n    +    return sourceDirPath.toString() + Path.SEPARATOR + Configs.DEFAULT_LOCK_DIR;\n    +  }\n<p>    +<br/>\n    +  private static void checkValidReader(String readerType) {<br/>\n    +    if(readerType.equalsIgnoreCase(Configs.TEXT)  || readerType.equalsIgnoreCase(Configs.SEQ) )<br/>\n    +      return;<br/>\n    +    try </p>\n{\n    +      Class<?> classType = Class.forName(readerType);\n    +      classType.getConstructor(FileSystem.class, Path.class, Map.class);\n    +      return;\n    +    }\n<p> catch (ClassNotFoundException e) </p>\n{\n    +      LOG.error(readerType + \" not found in classpath.\", e);\n    +      throw new IllegalArgumentException(readerType + \" not found in classpath.\", e);\n    +    }\n<p> catch (NoSuchMethodException e) </p>\n{\n    +      LOG.error(readerType + \" is missing the expected constructor for Readers.\", e);\n    +      throw new IllegalArgumentException(readerType + \" is missing the expected constuctor for Readers.\");\n    +    }\n<p>    +  }<br/>\n    +<br/>\n    +  @Override<br/>\n    +  public void ack(Object msgId) {<br/>\n    +    LOG.trace(\"Ack received for msg {} on spout {}\", msgId, spoutId);<br/>\n    +    if(!ackEnabled) </p>\n{\n    +      return;\n    +    }\n<p>    +    MessageId id = (MessageId) msgId;<br/>\n    +    inflight.remove(id);<br/>\n    +    ++acksSinceLastCommit;<br/>\n    +    tracker.recordAckedOffset(id.offset);<br/>\n    +    commitProgress(tracker.getCommitPosition());<br/>\n    +    if(fileReadCompletely && inflight.isEmpty()) </p>\n{\n    +      markFileAsDone(reader.getFilePath());\n    +      reader = null;\n    +    }\n<p>    +    super.ack(msgId);<br/>\n    +  }<br/>\n    +<br/>\n    +  private boolean canCommitNow() {<br/>\n    +<br/>\n    +    if( commitFrequencyCount>0 &&  acksSinceLastCommit >= commitFrequencyCount ) </p>\n{\n    +      return true;\n    +    }\n<p>    +    return commitTimeElapsed.get();<br/>\n    +  }<br/>\n    +<br/>\n    +  @Override<br/>\n    +  public void fail(Object msgId) {<br/>\n    +    LOG.trace(\"Fail received for msg id {} on spout {}\", msgId, spoutId);<br/>\n    +    super.fail(msgId);<br/>\n    +    if(ackEnabled) </p>\n{\n    +      HdfsUtils.Pair<MessageId, List<Object>> item = HdfsUtils.Pair.of(msgId, inflight.remove(msgId));\n    +      retryList.add(item);\n    +    }\n<p>    +  }<br/>\n    +<br/>\n    +  private FileReader pickNextFile()  {<br/>\n    +    try {<br/>\n    +      // 1) If there are any abandoned files, pick oldest one<br/>\n    +      lock = getOldestExpiredLock();<br/>\n    +      if (lock != null) {<br/>\n    +LOG.debug(\"Spout {} now took over ownership of abandoned FileLock {}\", spoutId, lock.getLockFile());<br/>\n    +Path file = getFileForLockFile(lock.getLockFile(), sourceDirPath);<br/>\n    +String resumeFromOffset = lock.getLastLogEntry().fileOffset;<br/>\n    +LOG.info(\"Resuming processing of abandoned file : {}\", file);<br/>\n    +return createFileReader(file, resumeFromOffset);<br/>\n    +      }<br/>\n    +<br/>\n    +      // 2) If no abandoned files, then pick oldest file in sourceDirPath, lock it and rename it<br/>\n    +      Collection<Path> listing = HdfsUtils.listFilesByModificationTime(hdfs, sourceDirPath, 0);<br/>\n    +<br/>\n    +      for (Path file : listing) {<br/>\n    +if( file.getName().endsWith(inprogress_suffix) ) </p>\n{\n    +  continue;\n    +}<br/>\n    +if( file.getName().endsWith(ignoreSuffix) ) {    +  continue;    +}\n<p>    +lock = FileLock.tryLock(hdfs, file, lockDirPath, spoutId);<br/>\n    +if( lock==null ) {<br/>\n    +  LOG.debug(\"Unable to get FileLock for {}, so skipping it.\", file);<br/>\n    +  continue; // could not lock, so try another file.<br/>\n    +}<br/>\n    +LOG.info(\"Processing : {} \", file);<br/>\n    +Path newFile = renameSelectedFile(file);<br/>\n    +return createFileReader(newFile);<br/>\n    +      }<br/>\n    +<br/>\n    +      return null;<br/>\n    +    } catch (IOException e) {<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Shouldnt the filelock get released in case of IOException and any other Exception?</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612631146/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612631150","html_url":"https://github.com/apache/storm/issues/5037#issuecomment-2612631150","issue_url":"https://api.github.com/repos/apache/storm/issues/5037","id":2612631150,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MzExNTA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-07T07:26:28Z","updated_at":"2025-01-24T14:14:08Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user arunmahadevan commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/936#discussion_r49047558\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/936#discussion_r49047558</a></p>\n\n<p>    &#8212; Diff: external/storm-hdfs/README.md &#8212;<br/>\n    @@ -405,7 +410,123 @@ On worker hosts the bolt/trident-state code will use the keytab file with princi<br/>\n     Namenode. This method is little dangerous as you need to ensure all workers have the keytab file at the same location and you need<br/>\n     to remember this as you bring up new hosts in the cluster.</p>\n\n<ul class=\"alternate\" type=\"square\">\n\t<li>\n\t<ol>\n\t\t<li>\n\t\t<ol>\n\t\t\t<li>License<br/>\n    +---<br/>\n    +<br/>\n    +# HDFS Spout<br/>\n    +<br/>\n    +Hdfs spout is intended to allow feeding data into Storm from a HDFS directory. <br/>\n    +It will actively monitor the directory to consume any new files that appear in the directory.<br/>\n    +HDFS spout does not support Trident currently.<br/>\n    +<br/>\n    +*<b>Impt</b>*: Hdfs spout assumes that the files being made visible to it in the monitored directory <br/>\n    +are NOT actively being written to. Only after a file is completely written should it be made<br/>\n    +visible to the spout. This can be achieved by either writing the files out to another directory <br/>\n    +and once completely written, move it to the monitored directory. Alternatively the file<br/>\n    +can be created with a '.ignore' suffix in the monitored directory and after data is completely <br/>\n    +written, rename it without the suffix. File names with a '.ignore' suffix are ignored<br/>\n    +by the spout.<br/>\n    +<br/>\n    +When the spout is actively consuming a file, it renames the file with a '.inprogress' suffix.<br/>\n    +After consuming all the contents in the file, the file will be moved to a configurable <b>done</b> <br/>\n    +directory and the '.inprogress' suffix will be dropped.<br/>\n    +<br/>\n    +*<b>Concurrency</b>* If multiple spout instances are used in the topology, each instance will consume<br/>\n    +a different file. Synchronization among spout instances is done using lock files created in a <br/>\n    +(by default) '.lock' subdirectory under the monitored directory. A file with the same name<br/>\n    +as the file being consumed (without the in progress suffix) is created in the lock directory.<br/>\n    +Once the file is completely consumed, the corresponding lock file is deleted.<br/>\n    +<br/>\n    +*<b>Recovery from failure</b>*<br/>\n    +Periodically, the spout also records progress information wrt to how much of the file has been<br/>\n    +consumed in the lock file. In case of an crash of the spout instance (or force kill of topology) <br/>\n    +another spout can take over the file and resume from the location recorded in the lock file.<br/>\n    +<br/>\n    +Certain error conditions (such spout crashing) can leave behind lock files without deleting them. <br/>\n    +Such a stale lock file also indicates that the corresponding input file has also not been completely <br/>\n    +processed. When detected, ownership of such stale lock files will be transferred to another spout.   <br/>\n    +The configuration 'hdfsspout.lock.timeout.sec' is used to specify the duration of inactivity after <br/>\n    +which lock files should be considered stale. For lock file ownership transfer to succeed, the HDFS<br/>\n    +lease on the file (from prev lock owner) should have expired. Spouts scan for stale lock files<br/>\n    +before selecting the next file for consumption.<br/>\n    +<br/>\n    +*<b>Lock on *.lock</b> Directory**<br/>\n    +Hdfs spout instances create a <b>DIRLOCK</b> file in the .lock directory to co-ordinate certain accesses to <br/>\n    +the .lock dir itself. A spout will try to create it when it needs access to the .lock directory and<br/>\n    +then delete it when done.  In case of a topology crash or force kill, this file may not get deleted.</li>\n\t\t</ol>\n\t\t<ul class=\"alternate\" type=\"square\">\n\t\t\t<li>End diff &#8211;</li>\n\t\t</ul>\n\t\t</li>\n\t</ol>\n\t</li>\n</ul>\n\n\n<p>    Isn't this automatically handled by lock expiry timeout ? So why should one manually delete the dir lock file ?</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612631150/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/169585108","html_url":"https://github.com/apache/storm/pull/936#issuecomment-169585108","issue_url":"https://api.github.com/repos/apache/storm/issues/936","id":169585108,"node_id":"MDEyOklzc3VlQ29tbWVudDE2OTU4NTEwOA==","user":{"login":"arunmahadevan","id":6792890,"node_id":"MDQ6VXNlcjY3OTI4OTA=","avatar_url":"https://avatars.githubusercontent.com/u/6792890?v=4","gravatar_id":"","url":"https://api.github.com/users/arunmahadevan","html_url":"https://github.com/arunmahadevan","followers_url":"https://api.github.com/users/arunmahadevan/followers","following_url":"https://api.github.com/users/arunmahadevan/following{/other_user}","gists_url":"https://api.github.com/users/arunmahadevan/gists{/gist_id}","starred_url":"https://api.github.com/users/arunmahadevan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/arunmahadevan/subscriptions","organizations_url":"https://api.github.com/users/arunmahadevan/orgs","repos_url":"https://api.github.com/users/arunmahadevan/repos","events_url":"https://api.github.com/users/arunmahadevan/events{/privacy}","received_events_url":"https://api.github.com/users/arunmahadevan/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-07T07:28:15Z","updated_at":"2016-01-07T07:28:15Z","author_association":"CONTRIBUTOR","body":"Looks good overall but have a few questions/comments around the locking. Once addressed I am +1.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/169585108/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612631153","html_url":"https://github.com/apache/storm/issues/5037#issuecomment-2612631153","issue_url":"https://api.github.com/repos/apache/storm/issues/5037","id":2612631153,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MzExNTM=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-07T07:28:16Z","updated_at":"2025-01-24T14:14:08Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user arunmahadevan commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/936#issuecomment-169585108\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/936#issuecomment-169585108</a></p>\n\n<p>    Looks good overall but have a few questions/comments around the locking. Once addressed I am +1.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612631153/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612631725","html_url":"https://github.com/apache/storm/issues/5040#issuecomment-2612631725","issue_url":"https://api.github.com/repos/apache/storm/issues/5040","id":2612631725,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MzE3MjU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-07T14:42:51Z","updated_at":"2025-01-24T14:14:24Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user d2r commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/889#discussion_r49078953\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/889#discussion_r49078953</a></p>\n\n<p>    &#8212; Diff: storm-rename-hack/pom.xml &#8212;<br/>\n    @@ -0,0 +1,107 @@<br/>\n    +<?xml version=\"1.0\" encoding=\"UTF-8\"?><br/>\n    +<!--<br/>\n    + Licensed to the Apache Software Foundation (ASF) under one or more<br/>\n    + contributor license agreements.  See the NOTICE file distributed with<br/>\n    + this work for additional information regarding copyright ownership.<br/>\n    + The ASF licenses this file to You under the Apache License, Version 2.0<br/>\n    + (the \"License\"); you may not use this file except in compliance with<br/>\n    + the License.  You may obtain a copy of the License at<br/>\n    +<br/>\n    +     <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    +<br/>\n    + Unless required by applicable law or agreed to in writing, software<br/>\n    + distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + See the License for the specific language governing permissions and<br/>\n    + limitations under the License.<br/>\n    +--><br/>\n    +<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 <a href=\"http://maven.apache.org/xsd/maven-4.0.0.xsd\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://maven.apache.org/xsd/maven-4.0.0.xsd</a>\"><br/>\n    +  <modelVersion>4.0.0</modelVersion><br/>\n    +  <parent><br/>\n    +      <artifactId>storm</artifactId><br/>\n    +      <groupId>org.apache.storm</groupId><br/>\n    +      <version>0.11.0-SNAPSHOT</version><br/>\n    +      <relativePath>../pom.xml</relativePath><br/>\n    +  </parent><br/>\n    +<br/>\n    +  <groupId>org.apache.storm</groupId><br/>\n    +  <artifactId>storm-rename-hack</artifactId><br/>\n    +  <packaging>jar</packaging><br/>\n    +<br/>\n    +  <name>storm-rename-hack</name><br/>\n    +<br/>\n    +  <properties><br/>\n    +    <mavenVersion>3.0</mavenVersion><br/>\n    +    <asmVersion>5.0.2</asmVersion><br/>\n    +  </properties><br/>\n    +<br/>\n    +  <dependencies><br/>\n    +    <dependency><br/>\n    +      <groupId>org.apache.storm</groupId><br/>\n    +      <artifactId>storm-core</artifactId><br/>\n    +      <version>${project.version}</version><br/>\n    +      <scope>provided</scope><br/>\n    +    </dependency><br/>\n    +    <dependency><br/>\n    +      <groupId>com.google.guava</groupId><br/>\n    +      <artifactId>guava</artifactId><br/>\n    +    </dependency><br/>\n    +    <dependency><br/>\n    +      <groupId>org.ow2.asm</groupId><br/>\n    +      <artifactId>asm</artifactId><br/>\n    +      <version>${asmVersion}</version><br/>\n    +    </dependency><br/>\n    +    <dependency><br/>\n    +      <groupId>org.ow2.asm</groupId><br/>\n    +      <artifactId>asm-commons</artifactId><br/>\n    +      <version>${asmVersion}</version><br/>\n    +    </dependency><br/>\n    +  </dependencies><br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    nit: check indentation</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612631725/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/169690819","html_url":"https://github.com/apache/storm/pull/889#issuecomment-169690819","issue_url":"https://api.github.com/repos/apache/storm/issues/889","id":169690819,"node_id":"MDEyOklzc3VlQ29tbWVudDE2OTY5MDgxOQ==","user":{"login":"d2r","id":905298,"node_id":"MDQ6VXNlcjkwNTI5OA==","avatar_url":"https://avatars.githubusercontent.com/u/905298?v=4","gravatar_id":"","url":"https://api.github.com/users/d2r","html_url":"https://github.com/d2r","followers_url":"https://api.github.com/users/d2r/followers","following_url":"https://api.github.com/users/d2r/following{/other_user}","gists_url":"https://api.github.com/users/d2r/gists{/gist_id}","starred_url":"https://api.github.com/users/d2r/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/d2r/subscriptions","organizations_url":"https://api.github.com/users/d2r/orgs","repos_url":"https://api.github.com/users/d2r/repos","events_url":"https://api.github.com/users/d2r/events{/privacy}","received_events_url":"https://api.github.com/users/d2r/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-07T15:15:47Z","updated_at":"2016-01-07T15:15:47Z","author_association":"NONE","body":"Looks OK to me overall.\n\nIt would be nice to have a follow-on Jira Issue or Sub-Task to remove/revert the changes we need to bootstrap the testing for this (dev-tools, etc.).\n\n> I have tested this by running a 0.10.0-SNAPSHOT storm starter topologies against a cluster running this patch (along with the move_package.sh executed).\n\nWe found that with word_count, the .clj source file had been removed from the transformed jar, but we expected that this .clj would be present, but transformed.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/169690819/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612631735","html_url":"https://github.com/apache/storm/issues/5040#issuecomment-2612631735","issue_url":"https://api.github.com/repos/apache/storm/issues/5040","id":2612631735,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MzE3MzU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-07T15:15:48Z","updated_at":"2025-01-24T14:14:24Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user d2r commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/889#issuecomment-169690819\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/889#issuecomment-169690819</a></p>\n\n<p>    Looks OK to me overall.</p>\n\n<p>    It would be nice to have a follow-on Jira Issue or Sub-Task to remove/revert the changes we need to bootstrap the testing for this (dev-tools, etc.).</p>\n\n<p>    > I have tested this by running a 0.10.0-SNAPSHOT storm starter topologies against a cluster running this patch (along with the move_package.sh executed).</p>\n\n<p>    We found that with word_count, the .clj source file had been removed from the transformed jar, but we expected that this .clj would be present, but transformed.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612631735/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/169775907","html_url":"https://github.com/apache/storm/pull/889#issuecomment-169775907","issue_url":"https://api.github.com/repos/apache/storm/issues/889","id":169775907,"node_id":"MDEyOklzc3VlQ29tbWVudDE2OTc3NTkwNw==","user":{"login":"revans2","id":3441321,"node_id":"MDQ6VXNlcjM0NDEzMjE=","avatar_url":"https://avatars.githubusercontent.com/u/3441321?v=4","gravatar_id":"","url":"https://api.github.com/users/revans2","html_url":"https://github.com/revans2","followers_url":"https://api.github.com/users/revans2/followers","following_url":"https://api.github.com/users/revans2/following{/other_user}","gists_url":"https://api.github.com/users/revans2/gists{/gist_id}","starred_url":"https://api.github.com/users/revans2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/revans2/subscriptions","organizations_url":"https://api.github.com/users/revans2/orgs","repos_url":"https://api.github.com/users/revans2/repos","events_url":"https://api.github.com/users/revans2/events{/privacy}","received_events_url":"https://api.github.com/users/revans2/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-07T19:06:43Z","updated_at":"2016-01-07T19:06:43Z","author_association":"CONTRIBUTOR","body":"OK I finally tracked down some intermittent failures I was seeing when running the clojure word count example.  It looks like there is an issue in clojure where how we are doing the require does not seem to be thread safe.\n\nWe should be good to go now if @d2r you want to take a final look.  The previous failure is not related and is one of the random storm-kafka failures.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/169775907/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612631742","html_url":"https://github.com/apache/storm/issues/5040#issuecomment-2612631742","issue_url":"https://api.github.com/repos/apache/storm/issues/5040","id":2612631742,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MzE3NDI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-07T19:06:44Z","updated_at":"2025-01-24T14:14:24Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/889#issuecomment-169775907\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/889#issuecomment-169775907</a></p>\n\n<p>    OK I finally tracked down some intermittent failures I was seeing when running the clojure word count example.  It looks like there is an issue in clojure where how we are doing the require does not seem to be thread safe.</p>\n\n<p>    We should be good to go now if @d2r you want to take a final look.  The previous failure is not related and is one of the random storm-kafka failures.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612631742/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/169778180","html_url":"https://github.com/apache/storm/pull/477#issuecomment-169778180","issue_url":"https://api.github.com/repos/apache/storm/issues/477","id":169778180,"node_id":"MDEyOklzc3VlQ29tbWVudDE2OTc3ODE4MA==","user":{"login":"dossett","id":7207582,"node_id":"MDQ6VXNlcjcyMDc1ODI=","avatar_url":"https://avatars.githubusercontent.com/u/7207582?v=4","gravatar_id":"","url":"https://api.github.com/users/dossett","html_url":"https://github.com/dossett","followers_url":"https://api.github.com/users/dossett/followers","following_url":"https://api.github.com/users/dossett/following{/other_user}","gists_url":"https://api.github.com/users/dossett/gists{/gist_id}","starred_url":"https://api.github.com/users/dossett/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dossett/subscriptions","organizations_url":"https://api.github.com/users/dossett/orgs","repos_url":"https://api.github.com/users/dossett/repos","events_url":"https://api.github.com/users/dossett/events{/privacy}","received_events_url":"https://api.github.com/users/dossett/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-07T19:16:14Z","updated_at":"2016-01-07T19:16:14Z","author_association":"CONTRIBUTOR","body":"@jangie Yes, my comment was based a sloppy reading of your PR.  Nice work!\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/169778180/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612486282","html_url":"https://github.com/apache/storm/issues/4310#issuecomment-2612486282","issue_url":"https://api.github.com/repos/apache/storm/issues/4310","id":2612486282,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI0ODYyODI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-07T19:16:15Z","updated_at":"2025-01-24T13:04:25Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user dossett commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/477#issuecomment-169778180\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/477#issuecomment-169778180</a></p>\n\n<p>    @jangie Yes, my comment was based a sloppy reading of your PR.  Nice work!</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612486282/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/169778882","html_url":"https://github.com/apache/storm/pull/868#issuecomment-169778882","issue_url":"https://api.github.com/repos/apache/storm/issues/868","id":169778882,"node_id":"MDEyOklzc3VlQ29tbWVudDE2OTc3ODg4Mg==","user":{"login":"YuChem","id":58654,"node_id":"MDQ6VXNlcjU4NjU0","avatar_url":"https://avatars.githubusercontent.com/u/58654?v=4","gravatar_id":"","url":"https://api.github.com/users/YuChem","html_url":"https://github.com/YuChem","followers_url":"https://api.github.com/users/YuChem/followers","following_url":"https://api.github.com/users/YuChem/following{/other_user}","gists_url":"https://api.github.com/users/YuChem/gists{/gist_id}","starred_url":"https://api.github.com/users/YuChem/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/YuChem/subscriptions","organizations_url":"https://api.github.com/users/YuChem/orgs","repos_url":"https://api.github.com/users/YuChem/repos","events_url":"https://api.github.com/users/YuChem/events{/privacy}","received_events_url":"https://api.github.com/users/YuChem/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-07T19:19:11Z","updated_at":"2016-01-07T19:19:11Z","author_association":"NONE","body":"@spicoflorin: I have encountered the same issue. Did you get it resolved? Would you mind get some tips on how to workaround?\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/169778882/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612629037","html_url":"https://github.com/apache/storm/issues/5027#issuecomment-2612629037","issue_url":"https://api.github.com/repos/apache/storm/issues/5027","id":2612629037,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MjkwMzc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-07T19:19:12Z","updated_at":"2025-01-24T14:13:14Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user YuChem commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/868#issuecomment-169778882\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/868#issuecomment-169778882</a></p>\n\n<p>    @spicoflorin: I have encountered the same issue. Did you get it resolved? Would you mind get some tips on how to workaround?</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612629037/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/169780775","html_url":"https://github.com/apache/storm/pull/889#issuecomment-169780775","issue_url":"https://api.github.com/repos/apache/storm/issues/889","id":169780775,"node_id":"MDEyOklzc3VlQ29tbWVudDE2OTc4MDc3NQ==","user":{"login":"revans2","id":3441321,"node_id":"MDQ6VXNlcjM0NDEzMjE=","avatar_url":"https://avatars.githubusercontent.com/u/3441321?v=4","gravatar_id":"","url":"https://api.github.com/users/revans2","html_url":"https://github.com/revans2","followers_url":"https://api.github.com/users/revans2/followers","following_url":"https://api.github.com/users/revans2/following{/other_user}","gists_url":"https://api.github.com/users/revans2/gists{/gist_id}","starred_url":"https://api.github.com/users/revans2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/revans2/subscriptions","organizations_url":"https://api.github.com/users/revans2/orgs","repos_url":"https://api.github.com/users/revans2/repos","events_url":"https://api.github.com/users/revans2/events{/privacy}","received_events_url":"https://api.github.com/users/revans2/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-07T19:24:36Z","updated_at":"2016-01-07T19:24:36Z","author_association":"CONTRIBUTOR","body":"I just filed http://dev.clojure.org/jira/browse/CLJ-1876 for the issue I was seeing with the require.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/169780775/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612631749","html_url":"https://github.com/apache/storm/issues/5040#issuecomment-2612631749","issue_url":"https://api.github.com/repos/apache/storm/issues/5040","id":2612631749,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MzE3NDk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-07T19:24:37Z","updated_at":"2025-01-24T14:14:24Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/889#issuecomment-169780775\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/889#issuecomment-169780775</a></p>\n\n<p>    I just filed <a href=\"http://dev.clojure.org/jira/browse/CLJ-1876\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://dev.clojure.org/jira/browse/CLJ-1876</a> for the issue I was seeing with the require.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612631749/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612631157","html_url":"https://github.com/apache/storm/issues/5037#issuecomment-2612631157","issue_url":"https://api.github.com/repos/apache/storm/issues/5037","id":2612631157,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MzExNTc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2016-01-07T21:22:59Z","updated_at":"2025-01-24T14:14:08Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user roshannaik commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/936#discussion_r49127649\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/936#discussion_r49127649</a></p>\n\n<p>    &#8212; Diff: external/storm-hdfs/src/main/java/org/apache/storm/hdfs/spout/DirLock.java &#8212;<br/>\n    @@ -0,0 +1,133 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + * <p/><br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + * <p/><br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +<br/>\n    +package org.apache.storm.hdfs.spout;<br/>\n    +<br/>\n    +import org.apache.hadoop.fs.FSDataOutputStream;<br/>\n    +import org.apache.hadoop.fs.FileSystem;<br/>\n    +import org.apache.hadoop.fs.Path;<br/>\n    +import org.apache.hadoop.hdfs.DistributedFileSystem;<br/>\n    +import org.apache.storm.hdfs.common.HdfsUtils;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +import java.io.IOException;<br/>\n    +<br/>\n    +/**<br/>\n    + * Facility to synchronize access to HDFS directory. The lock itself is represented<br/>\n    + * as a file in the same directory. Relies on atomic file creation.<br/>\n    + */<br/>\n    +public class DirLock {<br/>\n    +  private FileSystem fs;<br/>\n    +  private final Path lockFile;<br/>\n    +  public static final String DIR_LOCK_FILE = \"DIRLOCK\";<br/>\n    +  private static final Logger LOG = LoggerFactory.getLogger(DirLock.class);<br/>\n    +  private DirLock(FileSystem fs, Path lockFile) throws IOException {<br/>\n    +    if( fs.isDirectory(lockFile) ) </p>\n{\n    +      throw new IllegalArgumentException(lockFile.toString() + \" is not a directory\");\n    +    }\n<p>    +    this.fs = fs;<br/>\n    +    this.lockFile = lockFile;<br/>\n    +  }<br/>\n    +<br/>\n    +  /** Get a lock on file if not already locked<br/>\n    +   *<br/>\n    +   * @param fs<br/>\n    +   * @param dir  the dir on which to get a lock<br/>\n    +   * @return The lock object if it the lock was acquired. Returns null if the dir is already locked.<br/>\n    +   * @throws IOException if there were errors<br/>\n    +   */<br/>\n    +  public static DirLock tryLock(FileSystem fs, Path dir) throws IOException {<br/>\n    +    Path lockFile = getDirLockFile(dir);<br/>\n    +<br/>\n    +    try {<br/>\n    +      FSDataOutputStream ostream = HdfsUtils.tryCreateFile(fs, lockFile);<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    I believe that is for other file systems (such as AWS) that are supported via that class. I double checked on on HDFS semantics by talking to some HDFS committers. Have also added UTs to check for the requisite Hdfs atomicity/other semantics related to create, append and delete as an added safeguard. We will see failures in these tests if the guarantees are being violated. These are the relevant UT tests:  TestHdfsSemantics.*   TestFileLock.testConcurrentLocking,  TestDirLock.testConcurrentLocking</p>\n\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612631157/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]