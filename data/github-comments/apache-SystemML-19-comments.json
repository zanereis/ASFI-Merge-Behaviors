[{"url":"https://api.github.com/repos/apache/systemds/issues/comments/272716623","html_url":"https://github.com/apache/systemds/pull/344#issuecomment-272716623","issue_url":"https://api.github.com/repos/apache/systemds/issues/344","id":272716623,"node_id":"MDEyOklzc3VlQ29tbWVudDI3MjcxNjYyMw==","user":{"login":"nakul02","id":5394361,"node_id":"MDQ6VXNlcjUzOTQzNjE=","avatar_url":"https://avatars.githubusercontent.com/u/5394361?v=4","gravatar_id":"","url":"https://api.github.com/users/nakul02","html_url":"https://github.com/nakul02","followers_url":"https://api.github.com/users/nakul02/followers","following_url":"https://api.github.com/users/nakul02/following{/other_user}","gists_url":"https://api.github.com/users/nakul02/gists{/gist_id}","starred_url":"https://api.github.com/users/nakul02/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nakul02/subscriptions","organizations_url":"https://api.github.com/users/nakul02/orgs","repos_url":"https://api.github.com/users/nakul02/repos","events_url":"https://api.github.com/users/nakul02/events{/privacy}","received_events_url":"https://api.github.com/users/nakul02/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-15T19:14:36Z","updated_at":"2017-01-15T19:14:36Z","author_association":"MEMBER","body":"Will we produce different jar releases for different platforms? If so, it might help with JCuda as well. \r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/272716623/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/272717597","html_url":"https://github.com/apache/systemds/pull/344#issuecomment-272717597","issue_url":"https://api.github.com/repos/apache/systemds/issues/344","id":272717597,"node_id":"MDEyOklzc3VlQ29tbWVudDI3MjcxNzU5Nw==","user":{"login":"niketanpansare","id":11686380,"node_id":"MDQ6VXNlcjExNjg2Mzgw","avatar_url":"https://avatars.githubusercontent.com/u/11686380?v=4","gravatar_id":"","url":"https://api.github.com/users/niketanpansare","html_url":"https://github.com/niketanpansare","followers_url":"https://api.github.com/users/niketanpansare/followers","following_url":"https://api.github.com/users/niketanpansare/following{/other_user}","gists_url":"https://api.github.com/users/niketanpansare/gists{/gist_id}","starred_url":"https://api.github.com/users/niketanpansare/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/niketanpansare/subscriptions","organizations_url":"https://api.github.com/users/niketanpansare/orgs","repos_url":"https://api.github.com/users/niketanpansare/repos","events_url":"https://api.github.com/users/niketanpansare/events{/privacy}","received_events_url":"https://api.github.com/users/niketanpansare/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-15T19:29:50Z","updated_at":"2017-01-15T19:29:50Z","author_association":"CONTRIBUTOR","body":"No, I would recommend packaging .so, .dll, etc in single jar similar to JCuda approach. Since the JNI API is extremely lightweight, the overhead would be minimal.","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/272717597/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/272743666","html_url":"https://github.com/apache/systemds/pull/345#issuecomment-272743666","issue_url":"https://api.github.com/repos/apache/systemds/issues/345","id":272743666,"node_id":"MDEyOklzc3VlQ29tbWVudDI3Mjc0MzY2Ng==","user":{"login":"deroneriksson","id":12634533,"node_id":"MDQ6VXNlcjEyNjM0NTMz","avatar_url":"https://avatars.githubusercontent.com/u/12634533?v=4","gravatar_id":"","url":"https://api.github.com/users/deroneriksson","html_url":"https://github.com/deroneriksson","followers_url":"https://api.github.com/users/deroneriksson/followers","following_url":"https://api.github.com/users/deroneriksson/following{/other_user}","gists_url":"https://api.github.com/users/deroneriksson/gists{/gist_id}","starred_url":"https://api.github.com/users/deroneriksson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/deroneriksson/subscriptions","organizations_url":"https://api.github.com/users/deroneriksson/orgs","repos_url":"https://api.github.com/users/deroneriksson/repos","events_url":"https://api.github.com/users/deroneriksson/events{/privacy}","received_events_url":"https://api.github.com/users/deroneriksson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-15T22:37:43Z","updated_at":"2017-01-15T22:37:43Z","author_association":"MEMBER","body":"Example OutputStatement (using univariate stats):\r\n\r\nBefore PR:\r\n```\r\nwrite ( baseStats,   );\r\n```\r\n\r\nAfter PR:\r\n```\r\nWRITE(id=baseStats, iofilename=\" \");\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/272743666/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/272808487","html_url":"https://github.com/apache/systemds/pull/344#issuecomment-272808487","issue_url":"https://api.github.com/repos/apache/systemds/issues/344","id":272808487,"node_id":"MDEyOklzc3VlQ29tbWVudDI3MjgwODQ4Nw==","user":{"login":"asurve","id":13441665,"node_id":"MDQ6VXNlcjEzNDQxNjY1","avatar_url":"https://avatars.githubusercontent.com/u/13441665?v=4","gravatar_id":"","url":"https://api.github.com/users/asurve","html_url":"https://github.com/asurve","followers_url":"https://api.github.com/users/asurve/followers","following_url":"https://api.github.com/users/asurve/following{/other_user}","gists_url":"https://api.github.com/users/asurve/gists{/gist_id}","starred_url":"https://api.github.com/users/asurve/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/asurve/subscriptions","organizations_url":"https://api.github.com/users/asurve/orgs","repos_url":"https://api.github.com/users/asurve/repos","events_url":"https://api.github.com/users/asurve/events{/privacy}","received_events_url":"https://api.github.com/users/asurve/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-16T09:12:41Z","updated_at":"2017-01-16T09:12:41Z","author_association":"MEMBER","body":"Thanks @niketanpansare  for sharing your proposal.\r\n\r\nCan you share benefits of using native based BLAS over Java-based BLAS, other than two below?  \r\n    - One you mentioned about possible hardware improvements made in other BLAS can benefit SystemML.\r\n   - Second you mentioned, Simplifies testing\r\n \r\nHow much performance improvement from native BLAS over Java based BLAS?\r\n\r\nIn my opinion, we have to write CPP interface for every BLAS for every needed functionality on top of JNI code to interact with generic SystemML Matrix CPP which will burden SystemML in development and increase test effort. If there is significant performance improvement then its worth.\r\n\r\nOther thing to consider if there is a benefit from hardware improvements in other BLAS, either those could be available in Java based BLAS or we can add them in Java based BLAS (assuming those are open source library).\r\n\r\nWhy can't Java based BLAS supports different type of BLAS? If its not supporting, shouldn't it be the place to have such code.\r\n\r\nI would be cautious to understand whole proposal before we can take this into consideration.","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/272808487/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/272901832","html_url":"https://github.com/apache/systemds/pull/344#issuecomment-272901832","issue_url":"https://api.github.com/repos/apache/systemds/issues/344","id":272901832,"node_id":"MDEyOklzc3VlQ29tbWVudDI3MjkwMTgzMg==","user":{"login":"niketanpansare","id":11686380,"node_id":"MDQ6VXNlcjExNjg2Mzgw","avatar_url":"https://avatars.githubusercontent.com/u/11686380?v=4","gravatar_id":"","url":"https://api.github.com/users/niketanpansare","html_url":"https://github.com/niketanpansare","followers_url":"https://api.github.com/users/niketanpansare/followers","following_url":"https://api.github.com/users/niketanpansare/following{/other_user}","gists_url":"https://api.github.com/users/niketanpansare/gists{/gist_id}","starred_url":"https://api.github.com/users/niketanpansare/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/niketanpansare/subscriptions","organizations_url":"https://api.github.com/users/niketanpansare/orgs","repos_url":"https://api.github.com/users/niketanpansare/repos","events_url":"https://api.github.com/users/niketanpansare/events{/privacy}","received_events_url":"https://api.github.com/users/niketanpansare/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-16T16:07:36Z","updated_at":"2017-01-16T16:07:36Z","author_association":"CONTRIBUTOR","body":"Please see PR 307 for the performance number. The difference is about 2x to 5x for matrix multiplication and about 3x for conv2d.\r\n\r\nIf the concern is about development overhead, there are two solutions:\r\n1. Only support and test with the community version of Intel MKL.\r\n2. The only code that varies with different BLAS is threading logic to enforce sequential BLAS. If necessary we can factor that out but it would still require as many shared libraries as types of BLAS.\r\n\r\nLet me re-emphasize that development overhead of maintaining the JNI overhead is far less than continuously supporting Java based BLAS.\r\n\r\nIf you can concerned about testing, in fact adding native BLAS simplifies it as Intel would have already done performance testing on different shapes n sizes on different CPUs. Think about testing interfaces vs rigorous performance testing for mat multiplication, tsmm, etc.\r\n\r\nI don't understand few of your questions:\r\nWhy can Java based blas support different type of blas ?\r\nAdding hardware improvements to Java based blas ? (May be we are not on same page. I would encourage you to look at LibMatrixMult code and how people support avx, fma, numa awareness, etc in C++. I actually think our Java based BLAS is much better than any other Java based BLAS out there (especially in cache friendliness), but there is a cost of maintaining it with evolving hardware improvement.)","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/272901832/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/272912711","html_url":"https://github.com/apache/systemds/pull/344#issuecomment-272912711","issue_url":"https://api.github.com/repos/apache/systemds/issues/344","id":272912711,"node_id":"MDEyOklzc3VlQ29tbWVudDI3MjkxMjcxMQ==","user":{"login":"mboehm7","id":13721609,"node_id":"MDQ6VXNlcjEzNzIxNjA5","avatar_url":"https://avatars.githubusercontent.com/u/13721609?v=4","gravatar_id":"","url":"https://api.github.com/users/mboehm7","html_url":"https://github.com/mboehm7","followers_url":"https://api.github.com/users/mboehm7/followers","following_url":"https://api.github.com/users/mboehm7/following{/other_user}","gists_url":"https://api.github.com/users/mboehm7/gists{/gist_id}","starred_url":"https://api.github.com/users/mboehm7/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mboehm7/subscriptions","organizations_url":"https://api.github.com/users/mboehm7/orgs","repos_url":"https://api.github.com/users/mboehm7/repos","events_url":"https://api.github.com/users/mboehm7/events{/privacy}","received_events_url":"https://api.github.com/users/mboehm7/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-16T16:50:27Z","updated_at":"2017-01-16T16:50:27Z","author_association":"CONTRIBUTOR","body":"I see that you've put a lot of effort in here but I'm still not convinced by the experiments conducted so far. \r\n\r\nInstead of trying many combinations of small row/column dimensions (that have limited impact on real workloads), could we please select four representative scenarios and thoroughly evaluate them (incl local and distributed operations, different BLAS libraries, different sparse representations, etc)? Let's use the following scenarios (where (1) and (2) are supposed to be memory-bandwidth bound, whereas (3)-(5) are compute-bound; (1) and (2) are representative for regression and binomial classification, (3) and (4) are representative for multinomial classification, and (5) represents deep learning): \r\n\r\n(1) Matrix-vector/vector-matrix 1M x 1K, dense (~8GB)\r\n(2) Matrix-vector/vector-matrix 1M x 10K, sparsity=0.1 (~12GB) \r\n(3) Matrix-matrix/matrix-Matrix 1M x 1K x 20, dense (40GFLOPs)\r\n(4) Matrix-matrix/matrix-Matrix 1M x 10K (sparsity=0.1) x 20, (40 GFLOPs)\r\n(5) Squared matrix 3K x 3K, dense (54 GFLOPs) ","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/272912711/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/272919860","html_url":"https://github.com/apache/systemds/pull/344#issuecomment-272919860","issue_url":"https://api.github.com/repos/apache/systemds/issues/344","id":272919860,"node_id":"MDEyOklzc3VlQ29tbWVudDI3MjkxOTg2MA==","user":{"login":"niketanpansare","id":11686380,"node_id":"MDQ6VXNlcjExNjg2Mzgw","avatar_url":"https://avatars.githubusercontent.com/u/11686380?v=4","gravatar_id":"","url":"https://api.github.com/users/niketanpansare","html_url":"https://github.com/niketanpansare","followers_url":"https://api.github.com/users/niketanpansare/followers","following_url":"https://api.github.com/users/niketanpansare/following{/other_user}","gists_url":"https://api.github.com/users/niketanpansare/gists{/gist_id}","starred_url":"https://api.github.com/users/niketanpansare/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/niketanpansare/subscriptions","organizations_url":"https://api.github.com/users/niketanpansare/orgs","repos_url":"https://api.github.com/users/niketanpansare/repos","events_url":"https://api.github.com/users/niketanpansare/events{/privacy}","received_events_url":"https://api.github.com/users/niketanpansare/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-16T17:22:04Z","updated_at":"2017-01-16T17:22:04Z","author_association":"CONTRIBUTOR","body":"Sure, I will run experiments for shapes (1) to (5). Since I am proposing only supporting dense local BLAS and fall back to Java, sparsity will be not useful as I will end up reporting the same numbers. Also since we are officially supporting Intel MKL for performance to simplify testing (I am ok with removing support for openblas btw), using it as baseline makes more sense; else we might end up circling around the argument that our blas is better than blas X on certain scenarios Y but not Z and not make much progress here. \r\n\r\nBefore we invest time in these and possibly some more experiments, let's agree on the end goal: \r\n1. We want to switch to Intel MKL BLAS if the performance is ?? X. If this is the case, let's agree that what is the number we would feel comfortable to consider switching.\r\n2. We want to switch to Intel MKL BLAS because it simplifies development and performance testing overhead as Intel would have done those for us. All we need to write/test are JNI wrappers not each individual matrix case.","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/272919860/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/272923481","html_url":"https://github.com/apache/systemds/pull/344#issuecomment-272923481","issue_url":"https://api.github.com/repos/apache/systemds/issues/344","id":272923481,"node_id":"MDEyOklzc3VlQ29tbWVudDI3MjkyMzQ4MQ==","user":{"login":"mboehm7","id":13721609,"node_id":"MDQ6VXNlcjEzNzIxNjA5","avatar_url":"https://avatars.githubusercontent.com/u/13721609?v=4","gravatar_id":"","url":"https://api.github.com/users/mboehm7","html_url":"https://github.com/mboehm7","followers_url":"https://api.github.com/users/mboehm7/followers","following_url":"https://api.github.com/users/mboehm7/following{/other_user}","gists_url":"https://api.github.com/users/mboehm7/gists{/gist_id}","starred_url":"https://api.github.com/users/mboehm7/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mboehm7/subscriptions","organizations_url":"https://api.github.com/users/mboehm7/orgs","repos_url":"https://api.github.com/users/mboehm7/repos","events_url":"https://api.github.com/users/mboehm7/events{/privacy}","received_events_url":"https://api.github.com/users/mboehm7/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-16T17:39:10Z","updated_at":"2017-01-16T17:39:10Z","author_association":"CONTRIBUTOR","body":"Let's run all five scenarios (with left/right exchange, and local/distributed operations) - if we would add support for BLAS libraries then anyway for both dense and sparse. Also let's run at least with MKL and OpenBLAS as it would ensure that the integration is sufficiently general. Personally, I would be fine with adding BLAS support (enabled by default) if it consistently achieves speedups by more than 2-3x.  If the results are a mixed bag, we might still consider it as an optional feature (disabled by default) but it would certainly not yield simplifications as we would still need to maintain over own java-based library.","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/272923481/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/272929611","html_url":"https://github.com/apache/systemds/pull/344#issuecomment-272929611","issue_url":"https://api.github.com/repos/apache/systemds/issues/344","id":272929611,"node_id":"MDEyOklzc3VlQ29tbWVudDI3MjkyOTYxMQ==","user":{"login":"niketanpansare","id":11686380,"node_id":"MDQ6VXNlcjExNjg2Mzgw","avatar_url":"https://avatars.githubusercontent.com/u/11686380?v=4","gravatar_id":"","url":"https://api.github.com/users/niketanpansare","html_url":"https://github.com/niketanpansare","followers_url":"https://api.github.com/users/niketanpansare/followers","following_url":"https://api.github.com/users/niketanpansare/following{/other_user}","gists_url":"https://api.github.com/users/niketanpansare/gists{/gist_id}","starred_url":"https://api.github.com/users/niketanpansare/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/niketanpansare/subscriptions","organizations_url":"https://api.github.com/users/niketanpansare/orgs","repos_url":"https://api.github.com/users/niketanpansare/repos","events_url":"https://api.github.com/users/niketanpansare/events{/privacy}","received_events_url":"https://api.github.com/users/niketanpansare/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-16T18:09:37Z","updated_at":"2017-01-16T18:09:37Z","author_association":"CONTRIBUTOR","body":"Thanks, that clarifies a lot. 2x to 3x seems reasonable to decide whether to keep it as optional or default. I will work on the experiments today. Since this PR does not change sparse matmult, would you still want me to test with sparsity=0.1 ?","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/272929611/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/272931179","html_url":"https://github.com/apache/systemds/pull/344#issuecomment-272931179","issue_url":"https://api.github.com/repos/apache/systemds/issues/344","id":272931179,"node_id":"MDEyOklzc3VlQ29tbWVudDI3MjkzMTE3OQ==","user":{"login":"mboehm7","id":13721609,"node_id":"MDQ6VXNlcjEzNzIxNjA5","avatar_url":"https://avatars.githubusercontent.com/u/13721609?v=4","gravatar_id":"","url":"https://api.github.com/users/mboehm7","html_url":"https://github.com/mboehm7","followers_url":"https://api.github.com/users/mboehm7/followers","following_url":"https://api.github.com/users/mboehm7/following{/other_user}","gists_url":"https://api.github.com/users/mboehm7/gists{/gist_id}","starred_url":"https://api.github.com/users/mboehm7/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mboehm7/subscriptions","organizations_url":"https://api.github.com/users/mboehm7/orgs","repos_url":"https://api.github.com/users/mboehm7/repos","events_url":"https://api.github.com/users/mboehm7/events{/privacy}","received_events_url":"https://api.github.com/users/mboehm7/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-16T18:17:33Z","updated_at":"2017-01-16T18:17:33Z","author_association":"CONTRIBUTOR","body":"right now, we're talking only about micro benchmarks - I would recommend to integrate the calls to sparse BLAS operations over a CSR representation just to be able to run these experiments. This should be pretty straightforward and not much effort, right? ","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/272931179/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/272944474","html_url":"https://github.com/apache/systemds/pull/340#issuecomment-272944474","issue_url":"https://api.github.com/repos/apache/systemds/issues/340","id":272944474,"node_id":"MDEyOklzc3VlQ29tbWVudDI3Mjk0NDQ3NA==","user":{"login":"asurve","id":13441665,"node_id":"MDQ6VXNlcjEzNDQxNjY1","avatar_url":"https://avatars.githubusercontent.com/u/13441665?v=4","gravatar_id":"","url":"https://api.github.com/users/asurve","html_url":"https://github.com/asurve","followers_url":"https://api.github.com/users/asurve/followers","following_url":"https://api.github.com/users/asurve/following{/other_user}","gists_url":"https://api.github.com/users/asurve/gists{/gist_id}","starred_url":"https://api.github.com/users/asurve/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/asurve/subscriptions","organizations_url":"https://api.github.com/users/asurve/orgs","repos_url":"https://api.github.com/users/asurve/repos","events_url":"https://api.github.com/users/asurve/events{/privacy}","received_events_url":"https://api.github.com/users/asurve/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-16T19:28:45Z","updated_at":"2017-01-16T19:28:45Z","author_association":"MEMBER","body":"LGTM\r\n\r\nDo we need to create artifacts with Spark version going forward? May be separate thread we can have discussion on.","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/272944474/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/272946661","html_url":"https://github.com/apache/systemds/pull/340#issuecomment-272946661","issue_url":"https://api.github.com/repos/apache/systemds/issues/340","id":272946661,"node_id":"MDEyOklzc3VlQ29tbWVudDI3Mjk0NjY2MQ==","user":{"login":"gweidner","id":12058879,"node_id":"MDQ6VXNlcjEyMDU4ODc5","avatar_url":"https://avatars.githubusercontent.com/u/12058879?v=4","gravatar_id":"","url":"https://api.github.com/users/gweidner","html_url":"https://github.com/gweidner","followers_url":"https://api.github.com/users/gweidner/followers","following_url":"https://api.github.com/users/gweidner/following{/other_user}","gists_url":"https://api.github.com/users/gweidner/gists{/gist_id}","starred_url":"https://api.github.com/users/gweidner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gweidner/subscriptions","organizations_url":"https://api.github.com/users/gweidner/orgs","repos_url":"https://api.github.com/users/gweidner/repos","events_url":"https://api.github.com/users/gweidner/events{/privacy}","received_events_url":"https://api.github.com/users/gweidner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-16T19:40:42Z","updated_at":"2017-01-16T19:40:42Z","author_association":"MEMBER","body":"Thank you Arvind for reviewing!","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/272946661/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/272963004","html_url":"https://github.com/apache/systemds/pull/340#issuecomment-272963004","issue_url":"https://api.github.com/repos/apache/systemds/issues/340","id":272963004,"node_id":"MDEyOklzc3VlQ29tbWVudDI3Mjk2MzAwNA==","user":{"login":"gweidner","id":12058879,"node_id":"MDQ6VXNlcjEyMDU4ODc5","avatar_url":"https://avatars.githubusercontent.com/u/12058879?v=4","gravatar_id":"","url":"https://api.github.com/users/gweidner","html_url":"https://github.com/gweidner","followers_url":"https://api.github.com/users/gweidner/followers","following_url":"https://api.github.com/users/gweidner/following{/other_user}","gists_url":"https://api.github.com/users/gweidner/gists{/gist_id}","starred_url":"https://api.github.com/users/gweidner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gweidner/subscriptions","organizations_url":"https://api.github.com/users/gweidner/orgs","repos_url":"https://api.github.com/users/gweidner/repos","events_url":"https://api.github.com/users/gweidner/events{/privacy}","received_events_url":"https://api.github.com/users/gweidner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-16T21:11:45Z","updated_at":"2017-01-17T00:59:20Z","author_association":"MEMBER","body":"Tests passed:\r\nhttps://sparktc.ibmcloud.com/jenkins/job/SystemML-PullRequestBuilder/1021/","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/272963004/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/272967630","html_url":"https://github.com/apache/systemds/pull/344#issuecomment-272967630","issue_url":"https://api.github.com/repos/apache/systemds/issues/344","id":272967630,"node_id":"MDEyOklzc3VlQ29tbWVudDI3Mjk2NzYzMA==","user":{"login":"asurve","id":13441665,"node_id":"MDQ6VXNlcjEzNDQxNjY1","avatar_url":"https://avatars.githubusercontent.com/u/13441665?v=4","gravatar_id":"","url":"https://api.github.com/users/asurve","html_url":"https://github.com/asurve","followers_url":"https://api.github.com/users/asurve/followers","following_url":"https://api.github.com/users/asurve/following{/other_user}","gists_url":"https://api.github.com/users/asurve/gists{/gist_id}","starred_url":"https://api.github.com/users/asurve/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/asurve/subscriptions","organizations_url":"https://api.github.com/users/asurve/orgs","repos_url":"https://api.github.com/users/asurve/repos","events_url":"https://api.github.com/users/asurve/events{/privacy}","received_events_url":"https://api.github.com/users/asurve/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-16T21:37:03Z","updated_at":"2017-01-16T21:37:03Z","author_association":"MEMBER","body":"OK, I don't see any BLAS specific interface. I am assuming these BLAS libraries have common interfaces. So my concern over maintenance of code specific to BLAS has resolved,'\r\n \r\nBased on code change, you have checked in generated library files (*.so).\r\nI would not prefer to check in generated output (*.so) in the repository, rather there should be build process to generate these library on a required platform. \r\nIf someone does not have access to target platform to build such library they can get release version of library from Maven repository.\r\nAgain, this is not to be worried at this point until you finalize the approach. \r\nBut then first step would be to provide instructions and/or scripts to build such libraries and next step  to automate running script as a part of build process.\r\n\r\nThanks\r\nArvind","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/272967630/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/273001150","html_url":"https://github.com/apache/systemds/pull/344#issuecomment-273001150","issue_url":"https://api.github.com/repos/apache/systemds/issues/344","id":273001150,"node_id":"MDEyOklzc3VlQ29tbWVudDI3MzAwMTE1MA==","user":{"login":"niketanpansare","id":11686380,"node_id":"MDQ6VXNlcjExNjg2Mzgw","avatar_url":"https://avatars.githubusercontent.com/u/11686380?v=4","gravatar_id":"","url":"https://api.github.com/users/niketanpansare","html_url":"https://github.com/niketanpansare","followers_url":"https://api.github.com/users/niketanpansare/followers","following_url":"https://api.github.com/users/niketanpansare/following{/other_user}","gists_url":"https://api.github.com/users/niketanpansare/gists{/gist_id}","starred_url":"https://api.github.com/users/niketanpansare/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/niketanpansare/subscriptions","organizations_url":"https://api.github.com/users/niketanpansare/orgs","repos_url":"https://api.github.com/users/niketanpansare/repos","events_url":"https://api.github.com/users/niketanpansare/events{/privacy}","received_events_url":"https://api.github.com/users/niketanpansare/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-17T01:48:32Z","updated_at":"2017-01-17T01:50:34Z","author_association":"CONTRIBUTOR","body":"@mboehm7 I would prefer to first get this PR (with dense BLAS) in first before starting to work on sparse BLAS and/or add other operations (such as solve, dsyrk, etc). \r\n\r\n```bash\r\nFor 10 operations:\r\n\r\nMatrix-vector/vector-matrix: 1M x 1K, dense: \r\nJava BLAS: 2.252 sec, MKL: 5.403 sec and OpenBLAS: 23.477 sec\r\n\r\nMatrix-matrix/matrix-Matrix 1M x 1K x 20, dense:\r\nJava BLAS: 12.204 sec, MKL: 18.927 sec and OpenBLAS: 33.840 sec\r\n\r\nMatrix-matrix/matrix-Matrix 1M x 1K x 100, dense (just out of curiousity):\r\nJava BLAS: 53.218 sec, MKL: 17.090 sec and OpenBLAS: 102.779 sec\r\n\r\nMatrix-matrix/matrix-Matrix 3K x 3K x 3K, dense:\r\nJava BLAS: 12.948 sec, MKL: 2.612 sec and OpenBLAS: 2.828 sec\r\n```","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/273001150/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/273135378","html_url":"https://github.com/apache/systemds/pull/344#issuecomment-273135378","issue_url":"https://api.github.com/repos/apache/systemds/issues/344","id":273135378,"node_id":"MDEyOklzc3VlQ29tbWVudDI3MzEzNTM3OA==","user":{"login":"mboehm7","id":13721609,"node_id":"MDQ6VXNlcjEzNzIxNjA5","avatar_url":"https://avatars.githubusercontent.com/u/13721609?v=4","gravatar_id":"","url":"https://api.github.com/users/mboehm7","html_url":"https://github.com/mboehm7","followers_url":"https://api.github.com/users/mboehm7/followers","following_url":"https://api.github.com/users/mboehm7/following{/other_user}","gists_url":"https://api.github.com/users/mboehm7/gists{/gist_id}","starred_url":"https://api.github.com/users/mboehm7/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mboehm7/subscriptions","organizations_url":"https://api.github.com/users/mboehm7/orgs","repos_url":"https://api.github.com/users/mboehm7/repos","events_url":"https://api.github.com/users/mboehm7/events{/privacy}","received_events_url":"https://api.github.com/users/mboehm7/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-17T12:45:25Z","updated_at":"2017-01-17T12:45:25Z","author_association":"CONTRIBUTOR","body":"thanks for the initial results. Couple of comments: \r\n* Could you please specify what kind of HW you ran these experiments? \r\n* Please don't call it Java BLAS as we're not implementing the BLAS interface\r\n* Let's add the sparse operations - otherwise we cannot make an informed decision whether or not we want to integrate BLAS at all.","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/273135378/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/273274963","html_url":"https://github.com/apache/systemds/pull/344#issuecomment-273274963","issue_url":"https://api.github.com/repos/apache/systemds/issues/344","id":273274963,"node_id":"MDEyOklzc3VlQ29tbWVudDI3MzI3NDk2Mw==","user":{"login":"bertholdreinwald","id":10200727,"node_id":"MDQ6VXNlcjEwMjAwNzI3","avatar_url":"https://avatars.githubusercontent.com/u/10200727?v=4","gravatar_id":"","url":"https://api.github.com/users/bertholdreinwald","html_url":"https://github.com/bertholdreinwald","followers_url":"https://api.github.com/users/bertholdreinwald/followers","following_url":"https://api.github.com/users/bertholdreinwald/following{/other_user}","gists_url":"https://api.github.com/users/bertholdreinwald/gists{/gist_id}","starred_url":"https://api.github.com/users/bertholdreinwald/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bertholdreinwald/subscriptions","organizations_url":"https://api.github.com/users/bertholdreinwald/orgs","repos_url":"https://api.github.com/users/bertholdreinwald/repos","events_url":"https://api.github.com/users/bertholdreinwald/events{/privacy}","received_events_url":"https://api.github.com/users/bertholdreinwald/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-17T19:35:54Z","updated_at":"2017-01-17T19:35:54Z","author_association":"CONTRIBUTOR","body":"Additional considerations are:\r\n- for high dimensional matrices that are compute intensive, the benefits of using MKL/OpenBLAS seem to be there. However for smaller matrices/vectors (m <=20 in your posting), they are slower. What will be the heuristic for switching?\r\n- it would be good to see single threaded experiments as well to decide whether there could be any benefits of using MKL in our distributed operations.\r\n- I am a little concerned that MKL operations will use memory that is not reflected in our memory estimates, and hence may lead to OOMs.\r\n-I am ok with initially doing it for dense matrices only as sparse ops have much more variety and will require more effort for which we may not have the bandwidth right now.","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/273274963/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/273315262","html_url":"https://github.com/apache/systemds/pull/344#issuecomment-273315262","issue_url":"https://api.github.com/repos/apache/systemds/issues/344","id":273315262,"node_id":"MDEyOklzc3VlQ29tbWVudDI3MzMxNTI2Mg==","user":{"login":"mboehm7","id":13721609,"node_id":"MDQ6VXNlcjEzNzIxNjA5","avatar_url":"https://avatars.githubusercontent.com/u/13721609?v=4","gravatar_id":"","url":"https://api.github.com/users/mboehm7","html_url":"https://github.com/mboehm7","followers_url":"https://api.github.com/users/mboehm7/followers","following_url":"https://api.github.com/users/mboehm7/following{/other_user}","gists_url":"https://api.github.com/users/mboehm7/gists{/gist_id}","starred_url":"https://api.github.com/users/mboehm7/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mboehm7/subscriptions","organizations_url":"https://api.github.com/users/mboehm7/orgs","repos_url":"https://api.github.com/users/mboehm7/repos","events_url":"https://api.github.com/users/mboehm7/events{/privacy}","received_events_url":"https://api.github.com/users/mboehm7/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-17T22:05:48Z","updated_at":"2017-01-17T22:05:48Z","author_association":"CONTRIBUTOR","body":"while thinking about potential \"heuristics for switching\", we should also ask ourselves if these compute-intensive cases are not already covered by the in-progress GPU backend. ","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/273315262/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/273316292","html_url":"https://github.com/apache/systemds/pull/344#issuecomment-273316292","issue_url":"https://api.github.com/repos/apache/systemds/issues/344","id":273316292,"node_id":"MDEyOklzc3VlQ29tbWVudDI3MzMxNjI5Mg==","user":{"login":"nakul02","id":5394361,"node_id":"MDQ6VXNlcjUzOTQzNjE=","avatar_url":"https://avatars.githubusercontent.com/u/5394361?v=4","gravatar_id":"","url":"https://api.github.com/users/nakul02","html_url":"https://github.com/nakul02","followers_url":"https://api.github.com/users/nakul02/followers","following_url":"https://api.github.com/users/nakul02/following{/other_user}","gists_url":"https://api.github.com/users/nakul02/gists{/gist_id}","starred_url":"https://api.github.com/users/nakul02/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nakul02/subscriptions","organizations_url":"https://api.github.com/users/nakul02/orgs","repos_url":"https://api.github.com/users/nakul02/repos","events_url":"https://api.github.com/users/nakul02/events{/privacy}","received_events_url":"https://api.github.com/users/nakul02/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-17T22:09:41Z","updated_at":"2017-01-17T22:09:41Z","author_association":"MEMBER","body":"@mboehm7 - we should keep in mind that a GPU may not be as ubiquitous or easy to find as an installed BLAS library (or MKL)","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/273316292/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/273317453","html_url":"https://github.com/apache/systemds/pull/344#issuecomment-273317453","issue_url":"https://api.github.com/repos/apache/systemds/issues/344","id":273317453,"node_id":"MDEyOklzc3VlQ29tbWVudDI3MzMxNzQ1Mw==","user":{"login":"mboehm7","id":13721609,"node_id":"MDQ6VXNlcjEzNzIxNjA5","avatar_url":"https://avatars.githubusercontent.com/u/13721609?v=4","gravatar_id":"","url":"https://api.github.com/users/mboehm7","html_url":"https://github.com/mboehm7","followers_url":"https://api.github.com/users/mboehm7/followers","following_url":"https://api.github.com/users/mboehm7/following{/other_user}","gists_url":"https://api.github.com/users/mboehm7/gists{/gist_id}","starred_url":"https://api.github.com/users/mboehm7/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mboehm7/subscriptions","organizations_url":"https://api.github.com/users/mboehm7/orgs","repos_url":"https://api.github.com/users/mboehm7/repos","events_url":"https://api.github.com/users/mboehm7/events{/privacy}","received_events_url":"https://api.github.com/users/mboehm7/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-17T22:14:02Z","updated_at":"2017-01-17T22:14:02Z","author_association":"CONTRIBUTOR","body":"yes, but with more and more workloads being migrated to the could this becomes less of an issue as we can actually request preferred node types.","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/273317453/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/273333697","html_url":"https://github.com/apache/systemds/pull/344#issuecomment-273333697","issue_url":"https://api.github.com/repos/apache/systemds/issues/344","id":273333697,"node_id":"MDEyOklzc3VlQ29tbWVudDI3MzMzMzY5Nw==","user":{"login":"niketanpansare","id":11686380,"node_id":"MDQ6VXNlcjExNjg2Mzgw","avatar_url":"https://avatars.githubusercontent.com/u/11686380?v=4","gravatar_id":"","url":"https://api.github.com/users/niketanpansare","html_url":"https://github.com/niketanpansare","followers_url":"https://api.github.com/users/niketanpansare/followers","following_url":"https://api.github.com/users/niketanpansare/following{/other_user}","gists_url":"https://api.github.com/users/niketanpansare/gists{/gist_id}","starred_url":"https://api.github.com/users/niketanpansare/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/niketanpansare/subscriptions","organizations_url":"https://api.github.com/users/niketanpansare/orgs","repos_url":"https://api.github.com/users/niketanpansare/repos","events_url":"https://api.github.com/users/niketanpansare/events{/privacy}","received_events_url":"https://api.github.com/users/niketanpansare/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-17T23:24:05Z","updated_at":"2017-01-17T23:24:05Z","author_association":"CONTRIBUTOR","body":"1. For simplifying the performance testing, I am OK with paying the penalty for few cases where we are better optimized than Intel MKL. At best, we can push matrix-vector operation to Java matmult and rest to Intel MKL.\r\n\r\n2. Since we officially support compute-intensive operators on CP (eg: deep learning builtin functions, matrix multiplication in case of autoencoder, etc), we should definitely try to optimize these cases (either by improving java matmult or by adding support for Intel MKL). \r\n\r\n3. Regarding OOMs, I don't think MKL makes a copy (atleast the specification doesn't say it does). Whether a certain JDK makes a copy or not for JNI call, is a fair concern. The specification for JDK (as well as IBM JDK) specifies that they don't create a copy; if a certain JDK disregards that specification and if because of that we get OOM, then its a JDK bug. ","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/273333697/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/273335373","html_url":"https://github.com/apache/systemds/pull/344#issuecomment-273335373","issue_url":"https://api.github.com/repos/apache/systemds/issues/344","id":273335373,"node_id":"MDEyOklzc3VlQ29tbWVudDI3MzMzNTM3Mw==","user":{"login":"mboehm7","id":13721609,"node_id":"MDQ6VXNlcjEzNzIxNjA5","avatar_url":"https://avatars.githubusercontent.com/u/13721609?v=4","gravatar_id":"","url":"https://api.github.com/users/mboehm7","html_url":"https://github.com/mboehm7","followers_url":"https://api.github.com/users/mboehm7/followers","following_url":"https://api.github.com/users/mboehm7/following{/other_user}","gists_url":"https://api.github.com/users/mboehm7/gists{/gist_id}","starred_url":"https://api.github.com/users/mboehm7/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mboehm7/subscriptions","organizations_url":"https://api.github.com/users/mboehm7/orgs","repos_url":"https://api.github.com/users/mboehm7/repos","events_url":"https://api.github.com/users/mboehm7/events{/privacy}","received_events_url":"https://api.github.com/users/mboehm7/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-17T23:32:57Z","updated_at":"2017-01-17T23:32:57Z","author_association":"CONTRIBUTOR","body":"Where did you get that the JNI call would not create a copy? Of course it does (and the numbers reflect that). Since the JVM is free to compose a logical array from multiple physical fragments, the JVM must do so; otherwise, it could not provide a contiguous array. Even if the array is not fragmented, it is likely always copied, because the asynchronous garbage collector is free to re-arrange the array at any time.   ","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/273335373/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/273341267","html_url":"https://github.com/apache/systemds/pull/344#issuecomment-273341267","issue_url":"https://api.github.com/repos/apache/systemds/issues/344","id":273341267,"node_id":"MDEyOklzc3VlQ29tbWVudDI3MzM0MTI2Nw==","user":{"login":"nakul02","id":5394361,"node_id":"MDQ6VXNlcjUzOTQzNjE=","avatar_url":"https://avatars.githubusercontent.com/u/5394361?v=4","gravatar_id":"","url":"https://api.github.com/users/nakul02","html_url":"https://github.com/nakul02","followers_url":"https://api.github.com/users/nakul02/followers","following_url":"https://api.github.com/users/nakul02/following{/other_user}","gists_url":"https://api.github.com/users/nakul02/gists{/gist_id}","starred_url":"https://api.github.com/users/nakul02/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nakul02/subscriptions","organizations_url":"https://api.github.com/users/nakul02/orgs","repos_url":"https://api.github.com/users/nakul02/repos","events_url":"https://api.github.com/users/nakul02/events{/privacy}","received_events_url":"https://api.github.com/users/nakul02/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-18T00:04:44Z","updated_at":"2017-01-18T00:04:44Z","author_association":"MEMBER","body":"@mboehm7 - Please take a look at [this](http://docs.oracle.com/javase/7/docs/technotes/guides/jni/spec/functions.html) page.\r\nThere is a note there which clearly says:\r\n\r\n```\r\nAs of JDK/JRE 1.1, programmers can use Get/Release<primitivetype>ArrayElements functions to obtain a pointer to primitive array elements. If the VM supports pinning, the pointer to the original data is returned; otherwise, a copy is made.\r\n\r\nNew functions introduced as of JDK/JRE 1.3 allow native code to obtain a direct pointer to array elements even if the VM does not support pinning.\r\n```","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/273341267/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/273360896","html_url":"https://github.com/apache/systemds/pull/344#issuecomment-273360896","issue_url":"https://api.github.com/repos/apache/systemds/issues/344","id":273360896,"node_id":"MDEyOklzc3VlQ29tbWVudDI3MzM2MDg5Ng==","user":{"login":"mboehm7","id":13721609,"node_id":"MDQ6VXNlcjEzNzIxNjA5","avatar_url":"https://avatars.githubusercontent.com/u/13721609?v=4","gravatar_id":"","url":"https://api.github.com/users/mboehm7","html_url":"https://github.com/mboehm7","followers_url":"https://api.github.com/users/mboehm7/followers","following_url":"https://api.github.com/users/mboehm7/following{/other_user}","gists_url":"https://api.github.com/users/mboehm7/gists{/gist_id}","starred_url":"https://api.github.com/users/mboehm7/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mboehm7/subscriptions","organizations_url":"https://api.github.com/users/mboehm7/orgs","repos_url":"https://api.github.com/users/mboehm7/repos","events_url":"https://api.github.com/users/mboehm7/events{/privacy}","received_events_url":"https://api.github.com/users/mboehm7/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-18T02:01:53Z","updated_at":"2017-01-18T02:01:53Z","author_association":"CONTRIBUTOR","body":"So how many JVMs do you think actually support pinning of large arrays? I tend to believe that all major JVMs actually store arrays in multiple fragments. Take a look at http://www.ibm.com/support/knowledgecenter/SSYKE2_7.0.0/com.ibm.java.aix.70.doc/diag/understanding/jni_copypin.html and https://www.ibm.com/developerworks/library/j-jni/ - usually only small arrays are returned as a direct pointer due to the issues mentioned above. How else would you explain the 2.5x slowdown for matrix-vector, which is a trivial operation?","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/273360896/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/273446202","html_url":"https://github.com/apache/systemds/pull/350#issuecomment-273446202","issue_url":"https://api.github.com/repos/apache/systemds/issues/350","id":273446202,"node_id":"MDEyOklzc3VlQ29tbWVudDI3MzQ0NjIwMg==","user":{"login":"ckadner","id":12246093,"node_id":"MDQ6VXNlcjEyMjQ2MDkz","avatar_url":"https://avatars.githubusercontent.com/u/12246093?v=4","gravatar_id":"","url":"https://api.github.com/users/ckadner","html_url":"https://github.com/ckadner","followers_url":"https://api.github.com/users/ckadner/followers","following_url":"https://api.github.com/users/ckadner/following{/other_user}","gists_url":"https://api.github.com/users/ckadner/gists{/gist_id}","starred_url":"https://api.github.com/users/ckadner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ckadner/subscriptions","organizations_url":"https://api.github.com/users/ckadner/orgs","repos_url":"https://api.github.com/users/ckadner/repos","events_url":"https://api.github.com/users/ckadner/events{/privacy}","received_events_url":"https://api.github.com/users/ckadner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-18T10:59:35Z","updated_at":"2017-01-18T10:59:35Z","author_association":"MEMBER","body":"@lresende - same fix as for the [Apache Bahir release script](https://github.com/apache/bahir/pull/34)\r\n\r\n@asurve - this should save yourself some key strokes when preparing your next release ;-)","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/273446202/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/273743595","html_url":"https://github.com/apache/systemds/pull/351#issuecomment-273743595","issue_url":"https://api.github.com/repos/apache/systemds/issues/351","id":273743595,"node_id":"MDEyOklzc3VlQ29tbWVudDI3Mzc0MzU5NQ==","user":{"login":"mboehm7","id":13721609,"node_id":"MDQ6VXNlcjEzNzIxNjA5","avatar_url":"https://avatars.githubusercontent.com/u/13721609?v=4","gravatar_id":"","url":"https://api.github.com/users/mboehm7","html_url":"https://github.com/mboehm7","followers_url":"https://api.github.com/users/mboehm7/followers","following_url":"https://api.github.com/users/mboehm7/following{/other_user}","gists_url":"https://api.github.com/users/mboehm7/gists{/gist_id}","starred_url":"https://api.github.com/users/mboehm7/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mboehm7/subscriptions","organizations_url":"https://api.github.com/users/mboehm7/orgs","repos_url":"https://api.github.com/users/mboehm7/repos","events_url":"https://api.github.com/users/mboehm7/events{/privacy}","received_events_url":"https://api.github.com/users/mboehm7/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-19T10:53:39Z","updated_at":"2017-01-19T10:53:39Z","author_association":"CONTRIBUTOR","body":"Please also fix it for MR - you can simply use instruction patching as done for rows and cols. ","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/273743595/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/273862795","html_url":"https://github.com/apache/systemds/pull/351#issuecomment-273862795","issue_url":"https://api.github.com/repos/apache/systemds/issues/351","id":273862795,"node_id":"MDEyOklzc3VlQ29tbWVudDI3Mzg2Mjc5NQ==","user":{"login":"niketanpansare","id":11686380,"node_id":"MDQ6VXNlcjExNjg2Mzgw","avatar_url":"https://avatars.githubusercontent.com/u/11686380?v=4","gravatar_id":"","url":"https://api.github.com/users/niketanpansare","html_url":"https://github.com/niketanpansare","followers_url":"https://api.github.com/users/niketanpansare/followers","following_url":"https://api.github.com/users/niketanpansare/following{/other_user}","gists_url":"https://api.github.com/users/niketanpansare/gists{/gist_id}","starred_url":"https://api.github.com/users/niketanpansare/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/niketanpansare/subscriptions","organizations_url":"https://api.github.com/users/niketanpansare/orgs","repos_url":"https://api.github.com/users/niketanpansare/repos","events_url":"https://api.github.com/users/niketanpansare/events{/privacy}","received_events_url":"https://api.github.com/users/niketanpansare/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-19T18:48:27Z","updated_at":"2017-01-19T18:48:27Z","author_association":"CONTRIBUTOR","body":"@mboehm7 @dusenberrymw Incorporated your comments, please review it.\r\n\r\n@dusenberrymw Instead of generating random seed in DML, we can let rand chose a random seed instead by not providing it an argument :)","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/273862795/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/273871353","html_url":"https://github.com/apache/systemds/pull/351#issuecomment-273871353","issue_url":"https://api.github.com/repos/apache/systemds/issues/351","id":273871353,"node_id":"MDEyOklzc3VlQ29tbWVudDI3Mzg3MTM1Mw==","user":{"login":"niketanpansare","id":11686380,"node_id":"MDQ6VXNlcjExNjg2Mzgw","avatar_url":"https://avatars.githubusercontent.com/u/11686380?v=4","gravatar_id":"","url":"https://api.github.com/users/niketanpansare","html_url":"https://github.com/niketanpansare","followers_url":"https://api.github.com/users/niketanpansare/followers","following_url":"https://api.github.com/users/niketanpansare/following{/other_user}","gists_url":"https://api.github.com/users/niketanpansare/gists{/gist_id}","starred_url":"https://api.github.com/users/niketanpansare/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/niketanpansare/subscriptions","organizations_url":"https://api.github.com/users/niketanpansare/orgs","repos_url":"https://api.github.com/users/niketanpansare/repos","events_url":"https://api.github.com/users/niketanpansare/events{/privacy}","received_events_url":"https://api.github.com/users/niketanpansare/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-19T19:20:07Z","updated_at":"2017-01-19T19:20:07Z","author_association":"CONTRIBUTOR","body":"The [integration tests](https://sparktc.ibmcloud.com/jenkins/job/SystemML-PullRequestBuilder/1030/) passed as well.","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/273871353/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/273883009","html_url":"https://github.com/apache/systemds/pull/349#issuecomment-273883009","issue_url":"https://api.github.com/repos/apache/systemds/issues/349","id":273883009,"node_id":"MDEyOklzc3VlQ29tbWVudDI3Mzg4MzAwOQ==","user":{"login":"niketanpansare","id":11686380,"node_id":"MDQ6VXNlcjExNjg2Mzgw","avatar_url":"https://avatars.githubusercontent.com/u/11686380?v=4","gravatar_id":"","url":"https://api.github.com/users/niketanpansare","html_url":"https://github.com/niketanpansare","followers_url":"https://api.github.com/users/niketanpansare/followers","following_url":"https://api.github.com/users/niketanpansare/following{/other_user}","gists_url":"https://api.github.com/users/niketanpansare/gists{/gist_id}","starred_url":"https://api.github.com/users/niketanpansare/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/niketanpansare/subscriptions","organizations_url":"https://api.github.com/users/niketanpansare/orgs","repos_url":"https://api.github.com/users/niketanpansare/repos","events_url":"https://api.github.com/users/niketanpansare/events{/privacy}","received_events_url":"https://api.github.com/users/niketanpansare/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-19T20:03:41Z","updated_at":"2017-01-19T20:03:41Z","author_association":"CONTRIBUTOR","body":"@fschueler Please see the design documentation for this feature: https://github.com/niketanpansare/incubator-systemml/blob/00fab86aa6a7577b6efe9aa0f0ad249b10e1b1c9/src/main/scala/org/apache/sysml/api/ExternalUDFRegistration.scala#L36","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/273883009/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/273899447","html_url":"https://github.com/apache/systemds/pull/344#issuecomment-273899447","issue_url":"https://api.github.com/repos/apache/systemds/issues/344","id":273899447,"node_id":"MDEyOklzc3VlQ29tbWVudDI3Mzg5OTQ0Nw==","user":{"login":"niketanpansare","id":11686380,"node_id":"MDQ6VXNlcjExNjg2Mzgw","avatar_url":"https://avatars.githubusercontent.com/u/11686380?v=4","gravatar_id":"","url":"https://api.github.com/users/niketanpansare","html_url":"https://github.com/niketanpansare","followers_url":"https://api.github.com/users/niketanpansare/followers","following_url":"https://api.github.com/users/niketanpansare/following{/other_user}","gists_url":"https://api.github.com/users/niketanpansare/gists{/gist_id}","starred_url":"https://api.github.com/users/niketanpansare/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/niketanpansare/subscriptions","organizations_url":"https://api.github.com/users/niketanpansare/orgs","repos_url":"https://api.github.com/users/niketanpansare/repos","events_url":"https://api.github.com/users/niketanpansare/events{/privacy}","received_events_url":"https://api.github.com/users/niketanpansare/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-19T21:10:03Z","updated_at":"2017-01-19T21:10:03Z","author_association":"CONTRIBUTOR","body":"@bertholdreinwald Please see below for the results of single-threaded implementation:\r\n\r\nFor 10 operations (single-threaded):\r\n\r\nMatrix-vector/vector-matrix: 1M x 1K, dense: \r\nLibMatrixMult: 75.753 sec, MKL: 71.533 sec and OpenBLAS: 62.354 sec\r\n\r\nMatrix-matrix/matrix-Matrix 1M x 1K x 20, dense:\r\nLibMatrixMult: 209.818 sec, MKL: 93.709 sec and OpenBLAS: 91.460 sec\r\n\r\nMatrix-matrix/matrix-Matrix 1M x 1K x 100, dense (just out of curiousity):\r\nLibMatrixMult: 648.379 sec, MKL: 146.276 sec and OpenBLAS: 161.662 sec\r\n\r\nMatrix-matrix/matrix-Matrix 3K x 3K x 3K, dense:\r\nLibMatrixMult: 138.946 sec, MKL: 15.938 sec and OpenBLAS: 16.843 sec","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/273899447/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/273901167","html_url":"https://github.com/apache/systemds/pull/344#issuecomment-273901167","issue_url":"https://api.github.com/repos/apache/systemds/issues/344","id":273901167,"node_id":"MDEyOklzc3VlQ29tbWVudDI3MzkwMTE2Nw==","user":{"login":"mboehm7","id":13721609,"node_id":"MDQ6VXNlcjEzNzIxNjA5","avatar_url":"https://avatars.githubusercontent.com/u/13721609?v=4","gravatar_id":"","url":"https://api.github.com/users/mboehm7","html_url":"https://github.com/mboehm7","followers_url":"https://api.github.com/users/mboehm7/followers","following_url":"https://api.github.com/users/mboehm7/following{/other_user}","gists_url":"https://api.github.com/users/mboehm7/gists{/gist_id}","starred_url":"https://api.github.com/users/mboehm7/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mboehm7/subscriptions","organizations_url":"https://api.github.com/users/mboehm7/orgs","repos_url":"https://api.github.com/users/mboehm7/repos","events_url":"https://api.github.com/users/mboehm7/events{/privacy}","received_events_url":"https://api.github.com/users/mboehm7/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-19T21:16:43Z","updated_at":"2017-01-19T21:16:43Z","author_association":"CONTRIBUTOR","body":"As I said before, please specify the HW; otherwise we can't really interpret these numbers.","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/273901167/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/273902503","html_url":"https://github.com/apache/systemds/pull/344#issuecomment-273902503","issue_url":"https://api.github.com/repos/apache/systemds/issues/344","id":273902503,"node_id":"MDEyOklzc3VlQ29tbWVudDI3MzkwMjUwMw==","user":{"login":"niketanpansare","id":11686380,"node_id":"MDQ6VXNlcjExNjg2Mzgw","avatar_url":"https://avatars.githubusercontent.com/u/11686380?v=4","gravatar_id":"","url":"https://api.github.com/users/niketanpansare","html_url":"https://github.com/niketanpansare","followers_url":"https://api.github.com/users/niketanpansare/followers","following_url":"https://api.github.com/users/niketanpansare/following{/other_user}","gists_url":"https://api.github.com/users/niketanpansare/gists{/gist_id}","starred_url":"https://api.github.com/users/niketanpansare/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/niketanpansare/subscriptions","organizations_url":"https://api.github.com/users/niketanpansare/orgs","repos_url":"https://api.github.com/users/niketanpansare/repos","events_url":"https://api.github.com/users/niketanpansare/events{/privacy}","received_events_url":"https://api.github.com/users/niketanpansare/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-19T21:22:04Z","updated_at":"2017-01-19T21:22:04Z","author_association":"CONTRIBUTOR","body":"Please see below the hardware specification:\r\n\r\n```bash\r\nIntel(R) Xeon(R) CPU E5-2620 v3 @ 2.40GHz\r\nCPU(s):                24\r\nThread(s) per core:    2\r\nCore(s) per socket:    6\r\nSocket(s):             2\r\nNUMA node(s):          2\r\nL1d cache:             32K\r\nL1i cache:             32K\r\nL2 cache:              256K\r\nL3 cache:              15360K\r\n```\r\n\r\nMemory allocated in the above tests: 20G","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/273902503/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/273905500","html_url":"https://github.com/apache/systemds/pull/347#issuecomment-273905500","issue_url":"https://api.github.com/repos/apache/systemds/issues/347","id":273905500,"node_id":"MDEyOklzc3VlQ29tbWVudDI3MzkwNTUwMA==","user":{"login":"dusenberrymw","id":5431337,"node_id":"MDQ6VXNlcjU0MzEzMzc=","avatar_url":"https://avatars.githubusercontent.com/u/5431337?v=4","gravatar_id":"","url":"https://api.github.com/users/dusenberrymw","html_url":"https://github.com/dusenberrymw","followers_url":"https://api.github.com/users/dusenberrymw/followers","following_url":"https://api.github.com/users/dusenberrymw/following{/other_user}","gists_url":"https://api.github.com/users/dusenberrymw/gists{/gist_id}","starred_url":"https://api.github.com/users/dusenberrymw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dusenberrymw/subscriptions","organizations_url":"https://api.github.com/users/dusenberrymw/orgs","repos_url":"https://api.github.com/users/dusenberrymw/repos","events_url":"https://api.github.com/users/dusenberrymw/events{/privacy}","received_events_url":"https://api.github.com/users/dusenberrymw/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-19T21:33:47Z","updated_at":"2017-01-19T21:33:47Z","author_association":"CONTRIBUTOR","body":"cc @frreiss, @bertholdreinwald, @niketanpansare, @deroneriksson, @MadisonJMyers","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/273905500/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/273906285","html_url":"https://github.com/apache/systemds/pull/344#issuecomment-273906285","issue_url":"https://api.github.com/repos/apache/systemds/issues/344","id":273906285,"node_id":"MDEyOklzc3VlQ29tbWVudDI3MzkwNjI4NQ==","user":{"login":"mboehm7","id":13721609,"node_id":"MDQ6VXNlcjEzNzIxNjA5","avatar_url":"https://avatars.githubusercontent.com/u/13721609?v=4","gravatar_id":"","url":"https://api.github.com/users/mboehm7","html_url":"https://github.com/mboehm7","followers_url":"https://api.github.com/users/mboehm7/followers","following_url":"https://api.github.com/users/mboehm7/following{/other_user}","gists_url":"https://api.github.com/users/mboehm7/gists{/gist_id}","starred_url":"https://api.github.com/users/mboehm7/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mboehm7/subscriptions","organizations_url":"https://api.github.com/users/mboehm7/orgs","repos_url":"https://api.github.com/users/mboehm7/repos","events_url":"https://api.github.com/users/mboehm7/events{/privacy}","received_events_url":"https://api.github.com/users/mboehm7/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-19T21:36:53Z","updated_at":"2017-01-19T21:36:53Z","author_association":"CONTRIBUTOR","body":"Thanks @niketanpansare  that helps. However, it also shows measurement errors: how do you explain for Java matrix-vector a speed-up of 34 given 24 virtual cores?\r\n\r\nFurthermore, and just to avoid that people draw wrong conclusions here: distributed operations will look very similar to the multi-threaded (not single-threaded!) operations because both become memory-bandwidth bound. In any case, we need to run the distributed operations as well - there are no shortcuts. ","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/273906285/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/273911067","html_url":"https://github.com/apache/systemds/pull/344#issuecomment-273911067","issue_url":"https://api.github.com/repos/apache/systemds/issues/344","id":273911067,"node_id":"MDEyOklzc3VlQ29tbWVudDI3MzkxMTA2Nw==","user":{"login":"niketanpansare","id":11686380,"node_id":"MDQ6VXNlcjExNjg2Mzgw","avatar_url":"https://avatars.githubusercontent.com/u/11686380?v=4","gravatar_id":"","url":"https://api.github.com/users/niketanpansare","html_url":"https://github.com/niketanpansare","followers_url":"https://api.github.com/users/niketanpansare/followers","following_url":"https://api.github.com/users/niketanpansare/following{/other_user}","gists_url":"https://api.github.com/users/niketanpansare/gists{/gist_id}","starred_url":"https://api.github.com/users/niketanpansare/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/niketanpansare/subscriptions","organizations_url":"https://api.github.com/users/niketanpansare/orgs","repos_url":"https://api.github.com/users/niketanpansare/repos","events_url":"https://api.github.com/users/niketanpansare/events{/privacy}","received_events_url":"https://api.github.com/users/niketanpansare/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-19T21:55:46Z","updated_at":"2017-01-19T21:55:46Z","author_association":"CONTRIBUTOR","body":">> Thanks @niketanpansare that helps. However, it also shows measurement errors: how do you explain for Java matrix-vector a speed-up of 34 given 24 virtual cores?\r\n\r\nThe numbers reported here are execution time for b+* from our Statistics and are fairly easy to reproduce. All I did was redirect [matrixMult(MatrixBlock m1, MatrixBlock m2, MatrixBlock ret, int k)](https://github.com/apache/incubator-systemml/blob/master/src/main/java/org/apache/sysml/runtime/matrix/data/LibMatrixMult.java#L191) to [matrixMult(MatrixBlock m1, MatrixBlock m2, MatrixBlock ret)](https://github.com/apache/incubator-systemml/blob/master/src/main/java/org/apache/sysml/runtime/matrix/data/LibMatrixMult.java#L96) ... Since there is fairly complicated logic (for example: recomputeNonZeros in parallel vs sequential, interleaving of memory access), I would not be suspicious of the speedup.\r\n\r\n>> Furthermore, and just to avoid that people draw wrong conclusions here: distributed operations will look very similar to the multi-threaded (not single-threaded!) operations because both become memory-bandwidth bound. In any case, we need to run the distributed operations as well - there are no shortcuts.\r\n\r\nThat is a fair point, one cannot directly correlate single-threaded performance with distributed performance. However, as I said earlier, \"For simplifying the performance testing, I am OK with paying the penalty for few cases where we are better optimized than Intel MKL.\"","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/273911067/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/273912932","html_url":"https://github.com/apache/systemds/pull/344#issuecomment-273912932","issue_url":"https://api.github.com/repos/apache/systemds/issues/344","id":273912932,"node_id":"MDEyOklzc3VlQ29tbWVudDI3MzkxMjkzMg==","user":{"login":"mboehm7","id":13721609,"node_id":"MDQ6VXNlcjEzNzIxNjA5","avatar_url":"https://avatars.githubusercontent.com/u/13721609?v=4","gravatar_id":"","url":"https://api.github.com/users/mboehm7","html_url":"https://github.com/mboehm7","followers_url":"https://api.github.com/users/mboehm7/followers","following_url":"https://api.github.com/users/mboehm7/following{/other_user}","gists_url":"https://api.github.com/users/mboehm7/gists{/gist_id}","starred_url":"https://api.github.com/users/mboehm7/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mboehm7/subscriptions","organizations_url":"https://api.github.com/users/mboehm7/orgs","repos_url":"https://api.github.com/users/mboehm7/repos","events_url":"https://api.github.com/users/mboehm7/events{/privacy}","received_events_url":"https://api.github.com/users/mboehm7/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-19T22:03:04Z","updated_at":"2017-01-19T22:03:04Z","author_association":"CONTRIBUTOR","body":"well I'm not fine with it because a 2-3x slowdown on scenario (1) and (2) directly affects end-to-end performance of common algorithms such as LinregCG, GLM, L2SVM, MSVM, MLogreg, Kmeans, and PageRank.","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/273912932/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/273914998","html_url":"https://github.com/apache/systemds/pull/344#issuecomment-273914998","issue_url":"https://api.github.com/repos/apache/systemds/issues/344","id":273914998,"node_id":"MDEyOklzc3VlQ29tbWVudDI3MzkxNDk5OA==","user":{"login":"niketanpansare","id":11686380,"node_id":"MDQ6VXNlcjExNjg2Mzgw","avatar_url":"https://avatars.githubusercontent.com/u/11686380?v=4","gravatar_id":"","url":"https://api.github.com/users/niketanpansare","html_url":"https://github.com/niketanpansare","followers_url":"https://api.github.com/users/niketanpansare/followers","following_url":"https://api.github.com/users/niketanpansare/following{/other_user}","gists_url":"https://api.github.com/users/niketanpansare/gists{/gist_id}","starred_url":"https://api.github.com/users/niketanpansare/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/niketanpansare/subscriptions","organizations_url":"https://api.github.com/users/niketanpansare/orgs","repos_url":"https://api.github.com/users/niketanpansare/repos","events_url":"https://api.github.com/users/niketanpansare/events{/privacy}","received_events_url":"https://api.github.com/users/niketanpansare/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-19T22:11:33Z","updated_at":"2017-01-19T22:11:33Z","author_association":"CONTRIBUTOR","body":"Then, please feel free to update the [memory bound logic](https://github.com/apache/incubator-systemml/pull/344/files#diff-65fdeb6ba7fe62d1c334a06aba872f28R132) when the PR is merged. Though slightly tricky, [Statistics](https://github.com/apache/incubator-systemml/pull/344/files#diff-2e51204c944d1745fca2d44bf80edc45R643) will still help us with performance debugging. I hope we both agree on the fact that Intel MKL is much-better optimized than our LibMatrixMult.","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/273914998/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/273915070","html_url":"https://github.com/apache/systemds/pull/344#issuecomment-273915070","issue_url":"https://api.github.com/repos/apache/systemds/issues/344","id":273915070,"node_id":"MDEyOklzc3VlQ29tbWVudDI3MzkxNTA3MA==","user":{"login":"mboehm7","id":13721609,"node_id":"MDQ6VXNlcjEzNzIxNjA5","avatar_url":"https://avatars.githubusercontent.com/u/13721609?v=4","gravatar_id":"","url":"https://api.github.com/users/mboehm7","html_url":"https://github.com/mboehm7","followers_url":"https://api.github.com/users/mboehm7/followers","following_url":"https://api.github.com/users/mboehm7/following{/other_user}","gists_url":"https://api.github.com/users/mboehm7/gists{/gist_id}","starred_url":"https://api.github.com/users/mboehm7/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mboehm7/subscriptions","organizations_url":"https://api.github.com/users/mboehm7/orgs","repos_url":"https://api.github.com/users/mboehm7/repos","events_url":"https://api.github.com/users/mboehm7/events{/privacy}","received_events_url":"https://api.github.com/users/mboehm7/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-19T22:11:49Z","updated_at":"2017-01-19T22:11:49Z","author_association":"CONTRIBUTOR","body":"Also, seeing a speedup of 34 for matrix-vector on 24 virtual cores should raise red flags. Usually, we only see very moderate speedups of 3-5x for matrix-vector because again, at one point this operation becomes memory-bandwidth bound. \r\n\r\nI suspect that garbage collection, or just-in-time compilation to interfere with the measurement here. Hence, I would recommend to setup a proper micro-benchmark, with isolated block operations, a number of warm-up runs for just-in-time compilation, and verbose GC flag to exclude runs that overlapped with GC. ","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/273915070/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/273915773","html_url":"https://github.com/apache/systemds/pull/344#issuecomment-273915773","issue_url":"https://api.github.com/repos/apache/systemds/issues/344","id":273915773,"node_id":"MDEyOklzc3VlQ29tbWVudDI3MzkxNTc3Mw==","user":{"login":"niketanpansare","id":11686380,"node_id":"MDQ6VXNlcjExNjg2Mzgw","avatar_url":"https://avatars.githubusercontent.com/u/11686380?v=4","gravatar_id":"","url":"https://api.github.com/users/niketanpansare","html_url":"https://github.com/niketanpansare","followers_url":"https://api.github.com/users/niketanpansare/followers","following_url":"https://api.github.com/users/niketanpansare/following{/other_user}","gists_url":"https://api.github.com/users/niketanpansare/gists{/gist_id}","starred_url":"https://api.github.com/users/niketanpansare/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/niketanpansare/subscriptions","organizations_url":"https://api.github.com/users/niketanpansare/orgs","repos_url":"https://api.github.com/users/niketanpansare/repos","events_url":"https://api.github.com/users/niketanpansare/events{/privacy}","received_events_url":"https://api.github.com/users/niketanpansare/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-19T22:14:49Z","updated_at":"2017-01-19T22:14:49Z","author_association":"CONTRIBUTOR","body":"That could be the case. Again, I don't dispute that LibMatrixMult is better option for memory-bound cases and identifying those cases should not stop us from integrating Intel MKL.","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/273915773/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/273918542","html_url":"https://github.com/apache/systemds/pull/344#issuecomment-273918542","issue_url":"https://api.github.com/repos/apache/systemds/issues/344","id":273918542,"node_id":"MDEyOklzc3VlQ29tbWVudDI3MzkxODU0Mg==","user":{"login":"mboehm7","id":13721609,"node_id":"MDQ6VXNlcjEzNzIxNjA5","avatar_url":"https://avatars.githubusercontent.com/u/13721609?v=4","gravatar_id":"","url":"https://api.github.com/users/mboehm7","html_url":"https://github.com/mboehm7","followers_url":"https://api.github.com/users/mboehm7/followers","following_url":"https://api.github.com/users/mboehm7/following{/other_user}","gists_url":"https://api.github.com/users/mboehm7/gists{/gist_id}","starred_url":"https://api.github.com/users/mboehm7/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mboehm7/subscriptions","organizations_url":"https://api.github.com/users/mboehm7/orgs","repos_url":"https://api.github.com/users/mboehm7/repos","events_url":"https://api.github.com/users/mboehm7/events{/privacy}","received_events_url":"https://api.github.com/users/mboehm7/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-19T22:26:21Z","updated_at":"2017-01-19T22:26:21Z","author_association":"CONTRIBUTOR","body":"Absolutely, for scenarios like (5), we should definitely consider it. However, modifying a core operation like matrix multiplication requires a thorough experimental analysis of individual operations and their integration. Right now, I would be very uncomfortable merging this PR in its current form into SystemML master.","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/273918542/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/273919749","html_url":"https://github.com/apache/systemds/pull/344#issuecomment-273919749","issue_url":"https://api.github.com/repos/apache/systemds/issues/344","id":273919749,"node_id":"MDEyOklzc3VlQ29tbWVudDI3MzkxOTc0OQ==","user":{"login":"dusenberrymw","id":5431337,"node_id":"MDQ6VXNlcjU0MzEzMzc=","avatar_url":"https://avatars.githubusercontent.com/u/5431337?v=4","gravatar_id":"","url":"https://api.github.com/users/dusenberrymw","html_url":"https://github.com/dusenberrymw","followers_url":"https://api.github.com/users/dusenberrymw/followers","following_url":"https://api.github.com/users/dusenberrymw/following{/other_user}","gists_url":"https://api.github.com/users/dusenberrymw/gists{/gist_id}","starred_url":"https://api.github.com/users/dusenberrymw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dusenberrymw/subscriptions","organizations_url":"https://api.github.com/users/dusenberrymw/orgs","repos_url":"https://api.github.com/users/dusenberrymw/repos","events_url":"https://api.github.com/users/dusenberrymw/events{/privacy}","received_events_url":"https://api.github.com/users/dusenberrymw/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-19T22:31:26Z","updated_at":"2017-01-19T22:33:20Z","author_association":"CONTRIBUTOR","body":"Could we also run a larger matrix-matrix test?  How about n rows x 196,608 columns %\\*% 196,608 x 512, where 196,608 is the number of pixels in a single 256\\*256\\*3 H\\*W\\*C image.  Given recent results from the breast cancer project, it would be good to test scenarios that aren't the traditional skinny matrices.","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/273919749/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/273920126","html_url":"https://github.com/apache/systemds/pull/347#issuecomment-273920126","issue_url":"https://api.github.com/repos/apache/systemds/issues/347","id":273920126,"node_id":"MDEyOklzc3VlQ29tbWVudDI3MzkyMDEyNg==","user":{"login":"MadisonJMyers","id":13260205,"node_id":"MDQ6VXNlcjEzMjYwMjA1","avatar_url":"https://avatars.githubusercontent.com/u/13260205?v=4","gravatar_id":"","url":"https://api.github.com/users/MadisonJMyers","html_url":"https://github.com/MadisonJMyers","followers_url":"https://api.github.com/users/MadisonJMyers/followers","following_url":"https://api.github.com/users/MadisonJMyers/following{/other_user}","gists_url":"https://api.github.com/users/MadisonJMyers/gists{/gist_id}","starred_url":"https://api.github.com/users/MadisonJMyers/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/MadisonJMyers/subscriptions","organizations_url":"https://api.github.com/users/MadisonJMyers/orgs","repos_url":"https://api.github.com/users/MadisonJMyers/repos","events_url":"https://api.github.com/users/MadisonJMyers/events{/privacy}","received_events_url":"https://api.github.com/users/MadisonJMyers/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-19T22:33:13Z","updated_at":"2017-01-19T22:33:13Z","author_association":"CONTRIBUTOR","body":"LGTM. Excited to bring the SystemML breast cancer project to the community!","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/273920126/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/273920216","html_url":"https://github.com/apache/systemds/pull/344#issuecomment-273920216","issue_url":"https://api.github.com/repos/apache/systemds/issues/344","id":273920216,"node_id":"MDEyOklzc3VlQ29tbWVudDI3MzkyMDIxNg==","user":{"login":"niketanpansare","id":11686380,"node_id":"MDQ6VXNlcjExNjg2Mzgw","avatar_url":"https://avatars.githubusercontent.com/u/11686380?v=4","gravatar_id":"","url":"https://api.github.com/users/niketanpansare","html_url":"https://github.com/niketanpansare","followers_url":"https://api.github.com/users/niketanpansare/followers","following_url":"https://api.github.com/users/niketanpansare/following{/other_user}","gists_url":"https://api.github.com/users/niketanpansare/gists{/gist_id}","starred_url":"https://api.github.com/users/niketanpansare/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/niketanpansare/subscriptions","organizations_url":"https://api.github.com/users/niketanpansare/orgs","repos_url":"https://api.github.com/users/niketanpansare/repos","events_url":"https://api.github.com/users/niketanpansare/events{/privacy}","received_events_url":"https://api.github.com/users/niketanpansare/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-19T22:33:35Z","updated_at":"2017-01-19T22:33:35Z","author_association":"CONTRIBUTOR","body":"@mboehm7  I am worried we have spent too much time on this without making any progress. Would you be comfortable with the following proposal:\r\n1. We start by keeping BLAS support optional. That is, one has to explicitly enable it by setting the environment variable \"SYSTEMML_BLAS=mkl\".\r\n2. Then we create a manageable list of experiments along with a precise specification beforehand and we distribute the experiments among the committers. \r\n3. Then, depending on the results of the experiments we decide to enable it by default.","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/273920216/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/273924079","html_url":"https://github.com/apache/systemds/pull/344#issuecomment-273924079","issue_url":"https://api.github.com/repos/apache/systemds/issues/344","id":273924079,"node_id":"MDEyOklzc3VlQ29tbWVudDI3MzkyNDA3OQ==","user":{"login":"niketanpansare","id":11686380,"node_id":"MDQ6VXNlcjExNjg2Mzgw","avatar_url":"https://avatars.githubusercontent.com/u/11686380?v=4","gravatar_id":"","url":"https://api.github.com/users/niketanpansare","html_url":"https://github.com/niketanpansare","followers_url":"https://api.github.com/users/niketanpansare/followers","following_url":"https://api.github.com/users/niketanpansare/following{/other_user}","gists_url":"https://api.github.com/users/niketanpansare/gists{/gist_id}","starred_url":"https://api.github.com/users/niketanpansare/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/niketanpansare/subscriptions","organizations_url":"https://api.github.com/users/niketanpansare/orgs","repos_url":"https://api.github.com/users/niketanpansare/repos","events_url":"https://api.github.com/users/niketanpansare/events{/privacy}","received_events_url":"https://api.github.com/users/niketanpansare/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-19T22:50:55Z","updated_at":"2017-01-19T22:50:55Z","author_association":"CONTRIBUTOR","body":"@dusenberrymw The results of 10 matrix multiplication for n rows x 196,608 columns %*% 196,608 x 512 are as follows:\r\n\r\n```bash\r\nSingle-threaded performance:\r\nn = 64 => LibMatrixMult: 36.783 sec, MKL: 6.196 sec, OpenBLAS: 6.900 sec\r\nn = 512 => LibMatrixMult: 284.322  sec, MKL: 33.440 sec, OpenBLAS: 35.167 sec \r\n\r\nMulti-threaded performance:\r\nn = 64 => LibMatrixMult: 5.487 sec, MKL: 1.142  sec, OpenBLAS: 6.771 sec\r\nn = 512 => LibMatrixMult: 24.260 sec, MKL: 4.780 sec, OpenBLAS: 7.482 sec\r\nn = 1024 => LibMatrixMult: 47.501 sec, MKL: 10.037 sec, OpenBLAS: 13.068 sec\r\n```\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/273924079/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/273925781","html_url":"https://github.com/apache/systemds/pull/344#issuecomment-273925781","issue_url":"https://api.github.com/repos/apache/systemds/issues/344","id":273925781,"node_id":"MDEyOklzc3VlQ29tbWVudDI3MzkyNTc4MQ==","user":{"login":"mboehm7","id":13721609,"node_id":"MDQ6VXNlcjEzNzIxNjA5","avatar_url":"https://avatars.githubusercontent.com/u/13721609?v=4","gravatar_id":"","url":"https://api.github.com/users/mboehm7","html_url":"https://github.com/mboehm7","followers_url":"https://api.github.com/users/mboehm7/followers","following_url":"https://api.github.com/users/mboehm7/following{/other_user}","gists_url":"https://api.github.com/users/mboehm7/gists{/gist_id}","starred_url":"https://api.github.com/users/mboehm7/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mboehm7/subscriptions","organizations_url":"https://api.github.com/users/mboehm7/orgs","repos_url":"https://api.github.com/users/mboehm7/repos","events_url":"https://api.github.com/users/mboehm7/events{/privacy}","received_events_url":"https://api.github.com/users/mboehm7/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-19T22:58:57Z","updated_at":"2017-01-19T22:58:57Z","author_association":"CONTRIBUTOR","body":"@Mike sure let's use this as a sixth scenario. I've seen both squared and rectangular matrix multiplications as common operations across different applications of text, image and speech. \r\n\r\n@niketanpansare sorry no; at a bare minimum we should remove the integration from LibMatrixMult because these block operations apply implicitly to all backends. Having not tested distributed operations, sparse operations and the break-even points of performance, would only leave us the option to integrate it into AggregateBinaryCPInstruction, for dense inputs, and with very conservative assumptions. However, given the status of many experimental features and recently integrated workarounds (like sparse and caching flags), I'm really concerned that such an unfinished integration would stay for long time. Instead of spending our time arguing about it, why could we not simply create a prototype and test this out?","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/273925781/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/273938576","html_url":"https://github.com/apache/systemds/pull/344#issuecomment-273938576","issue_url":"https://api.github.com/repos/apache/systemds/issues/344","id":273938576,"node_id":"MDEyOklzc3VlQ29tbWVudDI3MzkzODU3Ng==","user":{"login":"niketanpansare","id":11686380,"node_id":"MDQ6VXNlcjExNjg2Mzgw","avatar_url":"https://avatars.githubusercontent.com/u/11686380?v=4","gravatar_id":"","url":"https://api.github.com/users/niketanpansare","html_url":"https://github.com/niketanpansare","followers_url":"https://api.github.com/users/niketanpansare/followers","following_url":"https://api.github.com/users/niketanpansare/following{/other_user}","gists_url":"https://api.github.com/users/niketanpansare/gists{/gist_id}","starred_url":"https://api.github.com/users/niketanpansare/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/niketanpansare/subscriptions","organizations_url":"https://api.github.com/users/niketanpansare/orgs","repos_url":"https://api.github.com/users/niketanpansare/repos","events_url":"https://api.github.com/users/niketanpansare/events{/privacy}","received_events_url":"https://api.github.com/users/niketanpansare/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-20T00:06:56Z","updated_at":"2017-01-20T02:24:46Z","author_association":"CONTRIBUTOR","body":"@bertholdreinwald  @mboehm7 Please see below points:\r\n1. Right now, we are working in performance testing of rc1. I can perform experiments on distributed operations once the cluster is free. \r\n2. I would not prefer to implement sparse operations in this PR as I am spread too thin. But I am not against supporting sparse operations, so if someone has free cycles, I would really appreciate the help.\r\n3. Regarding the break-even points, I am OK with keeping it at matrix-vector operations.\r\n4. I ran 1M X 1K %*% 1K X 1K matrix multiplication with MKL with 20GB JVM and didnot get an OOM. I cannot conclusively answer whether JNI makes a copy or not.\r\n\r\nTo summarize, I have completed following experiments:\r\n```bash\r\n(1) Matrix-vector/vector-matrix 1M x 1K, dense (~8GB)\r\n(3) Matrix-matrix/matrix-Matrix 1M x 1K x 20, dense (40GFLOPs)\r\n(5) Squared matrix 3K x 3K, dense (54 GFLOPs)\r\n(6) n rows x 196,608 columns %*% 196,608 x 512\r\n```\r\n\r\nFollowing experiments are remaining:\r\n```bash\r\n(2) Matrix-vector/vector-matrix 1M x 10K, sparsity=0.1 (~12GB)\r\n(4) Matrix-matrix/matrix-Matrix 1M x 10K (sparsity=0.1) x 20, (40 GFLOPs)\r\n(7) Distributed Experiments ==> where we increase the number of rows such that LHS matrix in above cases doesnot fit in the driver.\r\n```","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/273938576/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/273956086","html_url":"https://github.com/apache/systemds/pull/344#issuecomment-273956086","issue_url":"https://api.github.com/repos/apache/systemds/issues/344","id":273956086,"node_id":"MDEyOklzc3VlQ29tbWVudDI3Mzk1NjA4Ng==","user":{"login":"mboehm7","id":13721609,"node_id":"MDQ6VXNlcjEzNzIxNjA5","avatar_url":"https://avatars.githubusercontent.com/u/13721609?v=4","gravatar_id":"","url":"https://api.github.com/users/mboehm7","html_url":"https://github.com/mboehm7","followers_url":"https://api.github.com/users/mboehm7/followers","following_url":"https://api.github.com/users/mboehm7/following{/other_user}","gists_url":"https://api.github.com/users/mboehm7/gists{/gist_id}","starred_url":"https://api.github.com/users/mboehm7/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mboehm7/subscriptions","organizations_url":"https://api.github.com/users/mboehm7/orgs","repos_url":"https://api.github.com/users/mboehm7/repos","events_url":"https://api.github.com/users/mboehm7/events{/privacy}","received_events_url":"https://api.github.com/users/mboehm7/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-20T01:58:54Z","updated_at":"2017-01-20T01:58:54Z","author_association":"CONTRIBUTOR","body":"(2) Well, for me sparse operations are a must-have.\r\n\r\n(3) We should come up with something better than matrix-vector/vector-matrix as a heuristic because otherwise common algorithms like Kmeans or Mlogreg will get a slowdown for common scenarios of number of clusters or number of classes <=20. \r\n\r\n(4) Regarding OOMs: of course you will not see an OOM from Java; the risk here is swapping because you allocate native memory. Our TensorFlow comparison last year  (which copied data from TF data structures out to Eigen) showed exactly this problem once you're in a space where your matrix does not fit twice into physical memory. In our case, it would mean that we always have to leave headroom (above JVM heap size) for the largest matrix. \r\n\r\nFinally, what's the purpose of scenario (7), once you increase the RHS while increasing the LHS you end up with shuffle-based implementations that dominate everything, because any broadcast-based operator would need to hold the broadcast data at the driver too. Please increase the number of rows in the LHS for scenarios (1)-(4) while keeping all other parameters constant. For scenario (5) and (6) you might want to use PMAPMM; otherwise you're again bound by shuffle.","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/273956086/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/273956631","html_url":"https://github.com/apache/systemds/pull/349#issuecomment-273956631","issue_url":"https://api.github.com/repos/apache/systemds/issues/349","id":273956631,"node_id":"MDEyOklzc3VlQ29tbWVudDI3Mzk1NjYzMQ==","user":{"login":"fschueler","id":4837217,"node_id":"MDQ6VXNlcjQ4MzcyMTc=","avatar_url":"https://avatars.githubusercontent.com/u/4837217?v=4","gravatar_id":"","url":"https://api.github.com/users/fschueler","html_url":"https://github.com/fschueler","followers_url":"https://api.github.com/users/fschueler/followers","following_url":"https://api.github.com/users/fschueler/following{/other_user}","gists_url":"https://api.github.com/users/fschueler/gists{/gist_id}","starred_url":"https://api.github.com/users/fschueler/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fschueler/subscriptions","organizations_url":"https://api.github.com/users/fschueler/orgs","repos_url":"https://api.github.com/users/fschueler/repos","events_url":"https://api.github.com/users/fschueler/events{/privacy}","received_events_url":"https://api.github.com/users/fschueler/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-20T02:02:20Z","updated_at":"2017-01-20T02:02:20Z","author_association":"NONE","body":"I like the idea of this function registry but I am a little bit concerned with the current approach. We might want to coordinate the further development of any Scala parts so that it fits nicely into a whole concept and we don't end up with three half-finished prototypes that have all incompatible types. \r\nThat includes defining a `Matrix` type that is used wherever possible in Scala (in the mlcontext, macro DSL and as a return type of any `MLContext.get(...)` calls). This could then also be used instead of Array[Double].\r\n\r\nOne way to do this is to do the definition of functions outside the macro and generate the dml external function stubs inside. To do this, we might need to add macro annotations - but I was planning on this anyways.\r\n\r\nFor now the registration on the mlcontext might work. In the macro version, the defined scala function could actually be called directly and so we would at least get the typechecking in Scala and not in DML (I think that's possible).\r\n\r\nI think we should outline a general roadmap for our Scala interface and make sure that we remove everything else that is not really supported. I am in the process of preparing a PR for the macro DSL and once that is ready, we could think about how to integrate it with all the other things that are currently there in Scala (especially unifying the Matrix types).","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/273956631/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/273959885","html_url":"https://github.com/apache/systemds/pull/344#issuecomment-273959885","issue_url":"https://api.github.com/repos/apache/systemds/issues/344","id":273959885,"node_id":"MDEyOklzc3VlQ29tbWVudDI3Mzk1OTg4NQ==","user":{"login":"niketanpansare","id":11686380,"node_id":"MDQ6VXNlcjExNjg2Mzgw","avatar_url":"https://avatars.githubusercontent.com/u/11686380?v=4","gravatar_id":"","url":"https://api.github.com/users/niketanpansare","html_url":"https://github.com/niketanpansare","followers_url":"https://api.github.com/users/niketanpansare/followers","following_url":"https://api.github.com/users/niketanpansare/following{/other_user}","gists_url":"https://api.github.com/users/niketanpansare/gists{/gist_id}","starred_url":"https://api.github.com/users/niketanpansare/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/niketanpansare/subscriptions","organizations_url":"https://api.github.com/users/niketanpansare/orgs","repos_url":"https://api.github.com/users/niketanpansare/repos","events_url":"https://api.github.com/users/niketanpansare/events{/privacy}","received_events_url":"https://api.github.com/users/niketanpansare/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-20T02:24:38Z","updated_at":"2017-01-20T02:24:38Z","author_association":"CONTRIBUTOR","body":">> (3) We should come up with something better than matrix-vector/vector-matrix as a heuristic because otherwise common algorithms like Kmeans or Mlogreg will get a slowdown for common scenarios of number of clusters or number of classes <=20.\r\n\r\nIf you are suggesting that the break-even point should be 20, I am OK with that. The above numbers also support this hypothesis.\r\n\r\n>> (4) Regarding OOMs\r\n\r\nThis was just for sanity check so that this PR doesnot break the existing script.\r\n\r\n>> Finally, what's the purpose of scenario (7), once you increase the RHS\r\n\r\nSorry, there is a type: it should have been LHS :)","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/273959885/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/273971402","html_url":"https://github.com/apache/systemds/pull/349#issuecomment-273971402","issue_url":"https://api.github.com/repos/apache/systemds/issues/349","id":273971402,"node_id":"MDEyOklzc3VlQ29tbWVudDI3Mzk3MTQwMg==","user":{"login":"niketanpansare","id":11686380,"node_id":"MDQ6VXNlcjExNjg2Mzgw","avatar_url":"https://avatars.githubusercontent.com/u/11686380?v=4","gravatar_id":"","url":"https://api.github.com/users/niketanpansare","html_url":"https://github.com/niketanpansare","followers_url":"https://api.github.com/users/niketanpansare/followers","following_url":"https://api.github.com/users/niketanpansare/following{/other_user}","gists_url":"https://api.github.com/users/niketanpansare/gists{/gist_id}","starred_url":"https://api.github.com/users/niketanpansare/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/niketanpansare/subscriptions","organizations_url":"https://api.github.com/users/niketanpansare/orgs","repos_url":"https://api.github.com/users/niketanpansare/repos","events_url":"https://api.github.com/users/niketanpansare/events{/privacy}","received_events_url":"https://api.github.com/users/niketanpansare/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-20T03:54:15Z","updated_at":"2017-01-20T03:54:15Z","author_association":"CONTRIBUTOR","body":"Thanks for your comments @fschueler \r\n\r\n>> We might want to coordinate the further development of any Scala parts so that it fits nicely into a whole concept and we don't end up with three half-finished prototypes that have all incompatible types.\r\nThat includes defining a Matrix type that is used wherever possible in Scala (in the mlcontext, macro DSL and as a return type of any MLContext.get(...) calls). This could then also be used instead of Array[Double].\r\n\r\nInfact, I delibrately decided not to add any additional types and kept the focus of the PR very limited: \"Allow external builtin function invocation via scala udf\". Since double[][] is the default type of our [external function framework](https://github.com/niketanpansare/incubator-systemml/tree/00fab86aa6a7577b6efe9aa0f0ad249b10e1b1c9/src/main/java/org/apache/sysml/udf), I decided to stick with it. When we integrate Matrix type in our external function framework, then you can support it with only two lines of change: [Line 1](https://github.com/niketanpansare/incubator-systemml/blob/00fab86aa6a7577b6efe9aa0f0ad249b10e1b1c9/src/main/scala/org/apache/sysml/api/ExternalUDFRegistration.scala#L459) and [Line 2](https://github.com/niketanpansare/incubator-systemml/blob/00fab86aa6a7577b6efe9aa0f0ad249b10e1b1c9/src/main/scala/org/apache/sysml/api/ExternalUDFRegistration.scala#L125). \r\n\r\nI don't fully understand the macro implementation. But if you feel that is more suitable approach, I am OK with closing this PR in favor of your approach :)\r\n\r\nAlso, +1 for unifying the various Matrix representation in SystemML.","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/273971402/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/273993803","html_url":"https://github.com/apache/systemds/pull/349#issuecomment-273993803","issue_url":"https://api.github.com/repos/apache/systemds/issues/349","id":273993803,"node_id":"MDEyOklzc3VlQ29tbWVudDI3Mzk5MzgwMw==","user":{"login":"fschueler","id":4837217,"node_id":"MDQ6VXNlcjQ4MzcyMTc=","avatar_url":"https://avatars.githubusercontent.com/u/4837217?v=4","gravatar_id":"","url":"https://api.github.com/users/fschueler","html_url":"https://github.com/fschueler","followers_url":"https://api.github.com/users/fschueler/followers","following_url":"https://api.github.com/users/fschueler/following{/other_user}","gists_url":"https://api.github.com/users/fschueler/gists{/gist_id}","starred_url":"https://api.github.com/users/fschueler/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fschueler/subscriptions","organizations_url":"https://api.github.com/users/fschueler/orgs","repos_url":"https://api.github.com/users/fschueler/repos","events_url":"https://api.github.com/users/fschueler/events{/privacy}","received_events_url":"https://api.github.com/users/fschueler/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-20T07:13:24Z","updated_at":"2017-01-20T07:13:24Z","author_association":"NONE","body":"I'm not 100% sure at this time what the best approach would be. \r\n\r\nFor the future work on the Scala part we should probably think about drafting some design doc or talk about a general direction and features. Another side of this is always consistency with potential Python APIs/DSLs.\r\n\r\nI think your approach is very non-invasive and if you need that feature now it can probably be merged.","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/273993803/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/274001431","html_url":"https://github.com/apache/systemds/pull/344#issuecomment-274001431","issue_url":"https://api.github.com/repos/apache/systemds/issues/344","id":274001431,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NDAwMTQzMQ==","user":{"login":"bertholdreinwald","id":10200727,"node_id":"MDQ6VXNlcjEwMjAwNzI3","avatar_url":"https://avatars.githubusercontent.com/u/10200727?v=4","gravatar_id":"","url":"https://api.github.com/users/bertholdreinwald","html_url":"https://github.com/bertholdreinwald","followers_url":"https://api.github.com/users/bertholdreinwald/followers","following_url":"https://api.github.com/users/bertholdreinwald/following{/other_user}","gists_url":"https://api.github.com/users/bertholdreinwald/gists{/gist_id}","starred_url":"https://api.github.com/users/bertholdreinwald/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bertholdreinwald/subscriptions","organizations_url":"https://api.github.com/users/bertholdreinwald/orgs","repos_url":"https://api.github.com/users/bertholdreinwald/repos","events_url":"https://api.github.com/users/bertholdreinwald/events{/privacy}","received_events_url":"https://api.github.com/users/bertholdreinwald/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-20T07:57:25Z","updated_at":"2017-01-20T07:57:25Z","author_association":"CONTRIBUTOR","body":"several arguments got misinterpreted in this long thread. Will set up a phone conversation in the next couple of days to resolve this and define the next steps.","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/274001431/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/274105394","html_url":"https://github.com/apache/systemds/pull/349#issuecomment-274105394","issue_url":"https://api.github.com/repos/apache/systemds/issues/349","id":274105394,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NDEwNTM5NA==","user":{"login":"niketanpansare","id":11686380,"node_id":"MDQ6VXNlcjExNjg2Mzgw","avatar_url":"https://avatars.githubusercontent.com/u/11686380?v=4","gravatar_id":"","url":"https://api.github.com/users/niketanpansare","html_url":"https://github.com/niketanpansare","followers_url":"https://api.github.com/users/niketanpansare/followers","following_url":"https://api.github.com/users/niketanpansare/following{/other_user}","gists_url":"https://api.github.com/users/niketanpansare/gists{/gist_id}","starred_url":"https://api.github.com/users/niketanpansare/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/niketanpansare/subscriptions","organizations_url":"https://api.github.com/users/niketanpansare/orgs","repos_url":"https://api.github.com/users/niketanpansare/repos","events_url":"https://api.github.com/users/niketanpansare/events{/privacy}","received_events_url":"https://api.github.com/users/niketanpansare/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-20T15:50:52Z","updated_at":"2017-01-20T15:50:52Z","author_association":"CONTRIBUTOR","body":"Since this is a user facing API, I am OK with keeping this PR open until we draft the design document :) You might want to take this opportunity and extend the external functions framework to add Spark related data structures (RDD[(MI, MB)], DataFrame, or the unified Matrix, ...) in your design doc. ","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/274105394/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/274162743","html_url":"https://github.com/apache/systemds/pull/347#issuecomment-274162743","issue_url":"https://api.github.com/repos/apache/systemds/issues/347","id":274162743,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NDE2Mjc0Mw==","user":{"login":"deroneriksson","id":12634533,"node_id":"MDQ6VXNlcjEyNjM0NTMz","avatar_url":"https://avatars.githubusercontent.com/u/12634533?v=4","gravatar_id":"","url":"https://api.github.com/users/deroneriksson","html_url":"https://github.com/deroneriksson","followers_url":"https://api.github.com/users/deroneriksson/followers","following_url":"https://api.github.com/users/deroneriksson/following{/other_user}","gists_url":"https://api.github.com/users/deroneriksson/gists{/gist_id}","starred_url":"https://api.github.com/users/deroneriksson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/deroneriksson/subscriptions","organizations_url":"https://api.github.com/users/deroneriksson/orgs","repos_url":"https://api.github.com/users/deroneriksson/repos","events_url":"https://api.github.com/users/deroneriksson/events{/privacy}","received_events_url":"https://api.github.com/users/deroneriksson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-20T19:47:08Z","updated_at":"2017-01-20T19:47:08Z","author_association":"MEMBER","body":"This work is really great @dusenberrymw! LGTM!\r\n","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/274162743/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/274386912","html_url":"https://github.com/apache/systemds/pull/349#issuecomment-274386912","issue_url":"https://api.github.com/repos/apache/systemds/issues/349","id":274386912,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NDM4NjkxMg==","user":{"login":"niketanpansare","id":11686380,"node_id":"MDQ6VXNlcjExNjg2Mzgw","avatar_url":"https://avatars.githubusercontent.com/u/11686380?v=4","gravatar_id":"","url":"https://api.github.com/users/niketanpansare","html_url":"https://github.com/niketanpansare","followers_url":"https://api.github.com/users/niketanpansare/followers","following_url":"https://api.github.com/users/niketanpansare/following{/other_user}","gists_url":"https://api.github.com/users/niketanpansare/gists{/gist_id}","starred_url":"https://api.github.com/users/niketanpansare/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/niketanpansare/subscriptions","organizations_url":"https://api.github.com/users/niketanpansare/orgs","repos_url":"https://api.github.com/users/niketanpansare/repos","events_url":"https://api.github.com/users/niketanpansare/events{/privacy}","received_events_url":"https://api.github.com/users/niketanpansare/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-23T02:54:08Z","updated_at":"2017-01-23T02:54:08Z","author_association":"CONTRIBUTOR","body":"@fschueler As per our offline discussion, I guess you are OK with merging this PR in.\r\n@deroneriksson Since this affects MLContext, can you please give this PR a LGTM before I merge it in ?","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/274386912/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/274576304","html_url":"https://github.com/apache/systemds/pull/349#issuecomment-274576304","issue_url":"https://api.github.com/repos/apache/systemds/issues/349","id":274576304,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NDU3NjMwNA==","user":{"login":"deroneriksson","id":12634533,"node_id":"MDQ6VXNlcjEyNjM0NTMz","avatar_url":"https://avatars.githubusercontent.com/u/12634533?v=4","gravatar_id":"","url":"https://api.github.com/users/deroneriksson","html_url":"https://github.com/deroneriksson","followers_url":"https://api.github.com/users/deroneriksson/followers","following_url":"https://api.github.com/users/deroneriksson/following{/other_user}","gists_url":"https://api.github.com/users/deroneriksson/gists{/gist_id}","starred_url":"https://api.github.com/users/deroneriksson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/deroneriksson/subscriptions","organizations_url":"https://api.github.com/users/deroneriksson/orgs","repos_url":"https://api.github.com/users/deroneriksson/repos","events_url":"https://api.github.com/users/deroneriksson/events{/privacy}","received_events_url":"https://api.github.com/users/deroneriksson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-23T18:35:17Z","updated_at":"2017-01-23T18:35:17Z","author_association":"MEMBER","body":"@niketanpansare \r\nI do see an issue here that might require some further discussion. I believe this is the first time that Java classes in the project have referenced a Scala-based class (org.apache.sysml.api.ExternalUDFRegistration). This could potentially cause some issues for Eclipse users (in the MLContext API, I wrote everything in Java rather than Java and Scala to avoid confronting this issue). For example, I use the maven-eclipse-plugin to manage my classpath in Eclipse. If I run \"eclipse:eclipse\", my classpath breaks here because this plugin doesn't generate the Scala-based classes in the target directory. I can get around this problem by creating a folder and placing the Scala classes in the folder and referencing the folder on the classpath, although this is a bit of a hack. Do you have any advice for Eclipse users how to cleanly manage the classpath here? I ran into issues the last time I tried the Eclipse Scala IDE.\r\n\r\n@mboehm7 @frreiss @bertholdreinwald @gweidner \r\n","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/274576304/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/274583351","html_url":"https://github.com/apache/systemds/pull/349#issuecomment-274583351","issue_url":"https://api.github.com/repos/apache/systemds/issues/349","id":274583351,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NDU4MzM1MQ==","user":{"login":"niketanpansare","id":11686380,"node_id":"MDQ6VXNlcjExNjg2Mzgw","avatar_url":"https://avatars.githubusercontent.com/u/11686380?v=4","gravatar_id":"","url":"https://api.github.com/users/niketanpansare","html_url":"https://github.com/niketanpansare","followers_url":"https://api.github.com/users/niketanpansare/followers","following_url":"https://api.github.com/users/niketanpansare/following{/other_user}","gists_url":"https://api.github.com/users/niketanpansare/gists{/gist_id}","starred_url":"https://api.github.com/users/niketanpansare/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/niketanpansare/subscriptions","organizations_url":"https://api.github.com/users/niketanpansare/orgs","repos_url":"https://api.github.com/users/niketanpansare/repos","events_url":"https://api.github.com/users/niketanpansare/events{/privacy}","received_events_url":"https://api.github.com/users/niketanpansare/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-23T18:59:59Z","updated_at":"2017-01-23T18:59:59Z","author_association":"CONTRIBUTOR","body":"@deroneriksson Good point. Though SystemML have both scala and java files, we somehow avoided this issue by never invoking scala classes from java; thereby requiring only scala developers to modify the IDE setup. May be, we ought to revisit this restriction as the project evolves given that our primary backend (i.e. Spark) is written in Scala. For time being, if this is a blocking issue, we can still support UDF functionality by decoupling UDF and MLContext with a different API (not so elegant as the current one):\r\n  \r\n```scala\r\nimport org.apache.sysml.api.mlcontext._\r\nimport org.apache.sysml.api.mlcontext.ScriptFactory._\r\nimport org.apache.sysml.api.mlcontext.UDFRegistry\r\nval ml = new MLContext(sc)\r\nval udfRegistry = new UDFRegistry(ml)\r\n\r\n// Demonstrates how to pass a simple scala UDF to SystemML\r\ndef addOne(x:Double):Double = x + 1\r\nudfRegistry.register(\"addOne\", addOne)\r\nval script1 = dml(\"v = addOne(2.0); print(v)\")\r\nml.execute(script1)\r\n```\r\n\r\nMy setup:\r\nI am using [Scala IDE](http://scala-ide.org/) and it works out of the box (If not, all you have to do is Right click on the project -> Configure -> Add Scala Nature. This will add the Scala nature declaration to your .project file: <nature>org.scala-ide.sdt.core.scalanature</nature>). ","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/274583351/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/274585312","html_url":"https://github.com/apache/systemds/pull/349#issuecomment-274585312","issue_url":"https://api.github.com/repos/apache/systemds/issues/349","id":274585312,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NDU4NTMxMg==","user":{"login":"deroneriksson","id":12634533,"node_id":"MDQ6VXNlcjEyNjM0NTMz","avatar_url":"https://avatars.githubusercontent.com/u/12634533?v=4","gravatar_id":"","url":"https://api.github.com/users/deroneriksson","html_url":"https://github.com/deroneriksson","followers_url":"https://api.github.com/users/deroneriksson/followers","following_url":"https://api.github.com/users/deroneriksson/following{/other_user}","gists_url":"https://api.github.com/users/deroneriksson/gists{/gist_id}","starred_url":"https://api.github.com/users/deroneriksson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/deroneriksson/subscriptions","organizations_url":"https://api.github.com/users/deroneriksson/orgs","repos_url":"https://api.github.com/users/deroneriksson/repos","events_url":"https://api.github.com/users/deroneriksson/events{/privacy}","received_events_url":"https://api.github.com/users/deroneriksson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-23T19:07:05Z","updated_at":"2017-01-23T19:07:05Z","author_association":"MEMBER","body":"@niketanpansare I agree that this move towards Scala support is really a necessary step in the evolution of the project since we run on Spark, and it is a step that we need to take. I just wanted other Eclipse developers to be aware that this PR represents taking that step.\r\n\r\nAlso, thank you for the Scala IDE setup information. It is good to hear that the integration is clean.\r\n","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/274585312/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/274588051","html_url":"https://github.com/apache/systemds/pull/349#issuecomment-274588051","issue_url":"https://api.github.com/repos/apache/systemds/issues/349","id":274588051,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NDU4ODA1MQ==","user":{"login":"mboehm7","id":13721609,"node_id":"MDQ6VXNlcjEzNzIxNjA5","avatar_url":"https://avatars.githubusercontent.com/u/13721609?v=4","gravatar_id":"","url":"https://api.github.com/users/mboehm7","html_url":"https://github.com/mboehm7","followers_url":"https://api.github.com/users/mboehm7/followers","following_url":"https://api.github.com/users/mboehm7/following{/other_user}","gists_url":"https://api.github.com/users/mboehm7/gists{/gist_id}","starred_url":"https://api.github.com/users/mboehm7/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mboehm7/subscriptions","organizations_url":"https://api.github.com/users/mboehm7/orgs","repos_url":"https://api.github.com/users/mboehm7/repos","events_url":"https://api.github.com/users/mboehm7/events{/privacy}","received_events_url":"https://api.github.com/users/mboehm7/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-23T19:16:57Z","updated_at":"2017-01-23T19:16:57Z","author_association":"CONTRIBUTOR","body":"well, just to clarify: we invoke, and inherit from, scala classes in quite a number of places already. If I remember correctly, the problem is the automatic build of our own scala code under eclipse.","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/274588051/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/274589991","html_url":"https://github.com/apache/systemds/pull/349#issuecomment-274589991","issue_url":"https://api.github.com/repos/apache/systemds/issues/349","id":274589991,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NDU4OTk5MQ==","user":{"login":"deroneriksson","id":12634533,"node_id":"MDQ6VXNlcjEyNjM0NTMz","avatar_url":"https://avatars.githubusercontent.com/u/12634533?v=4","gravatar_id":"","url":"https://api.github.com/users/deroneriksson","html_url":"https://github.com/deroneriksson","followers_url":"https://api.github.com/users/deroneriksson/followers","following_url":"https://api.github.com/users/deroneriksson/following{/other_user}","gists_url":"https://api.github.com/users/deroneriksson/gists{/gist_id}","starred_url":"https://api.github.com/users/deroneriksson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/deroneriksson/subscriptions","organizations_url":"https://api.github.com/users/deroneriksson/orgs","repos_url":"https://api.github.com/users/deroneriksson/repos","events_url":"https://api.github.com/users/deroneriksson/events{/privacy}","received_events_url":"https://api.github.com/users/deroneriksson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-23T19:23:46Z","updated_at":"2017-01-23T19:23:46Z","author_association":"MEMBER","body":"@mboehm7 Yes, that is correct. I should have said calling Scala classes within the project from Java classes within the project. We do extensively use Scala already. Also, Scala integration in the maven builds is handled perfectly.","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/274589991/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/274593827","html_url":"https://github.com/apache/systemds/pull/349#issuecomment-274593827","issue_url":"https://api.github.com/repos/apache/systemds/issues/349","id":274593827,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NDU5MzgyNw==","user":{"login":"deroneriksson","id":12634533,"node_id":"MDQ6VXNlcjEyNjM0NTMz","avatar_url":"https://avatars.githubusercontent.com/u/12634533?v=4","gravatar_id":"","url":"https://api.github.com/users/deroneriksson","html_url":"https://github.com/deroneriksson","followers_url":"https://api.github.com/users/deroneriksson/followers","following_url":"https://api.github.com/users/deroneriksson/following{/other_user}","gists_url":"https://api.github.com/users/deroneriksson/gists{/gist_id}","starred_url":"https://api.github.com/users/deroneriksson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/deroneriksson/subscriptions","organizations_url":"https://api.github.com/users/deroneriksson/orgs","repos_url":"https://api.github.com/users/deroneriksson/repos","events_url":"https://api.github.com/users/deroneriksson/events{/privacy}","received_events_url":"https://api.github.com/users/deroneriksson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-23T19:37:31Z","updated_at":"2017-01-23T19:37:31Z","author_association":"MEMBER","body":"@niketanpansare LGTM. Thank you.","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/274593827/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/274642826","html_url":"https://github.com/apache/systemds/pull/349#issuecomment-274642826","issue_url":"https://api.github.com/repos/apache/systemds/issues/349","id":274642826,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NDY0MjgyNg==","user":{"login":"mboehm7","id":13721609,"node_id":"MDQ6VXNlcjEzNzIxNjA5","avatar_url":"https://avatars.githubusercontent.com/u/13721609?v=4","gravatar_id":"","url":"https://api.github.com/users/mboehm7","html_url":"https://github.com/mboehm7","followers_url":"https://api.github.com/users/mboehm7/followers","following_url":"https://api.github.com/users/mboehm7/following{/other_user}","gists_url":"https://api.github.com/users/mboehm7/gists{/gist_id}","starred_url":"https://api.github.com/users/mboehm7/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mboehm7/subscriptions","organizations_url":"https://api.github.com/users/mboehm7/orgs","repos_url":"https://api.github.com/users/mboehm7/repos","events_url":"https://api.github.com/users/mboehm7/events{/privacy}","received_events_url":"https://api.github.com/users/mboehm7/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-23T22:47:59Z","updated_at":"2017-01-23T22:47:59Z","author_association":"CONTRIBUTOR","body":"Why does this PR introduce an additional mechanism for UDF meta data directories? I would strongly recommend to remove ExternalUDFRegistration and rather fix the integration with the existing directory in DMLProgram/Program. There are a number of places (IPA, parfor, explain, etc) that explicitly have to deal with UDFs; if not integrated, we would have to systematically test and potentially modify them. Furthermore, it would also solve the issue that these Scala UDFs currently cannot be registered on script level nor used in non-default namespaces. ","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/274642826/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/274654196","html_url":"https://github.com/apache/systemds/pull/349#issuecomment-274654196","issue_url":"https://api.github.com/repos/apache/systemds/issues/349","id":274654196,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NDY1NDE5Ng==","user":{"login":"niketanpansare","id":11686380,"node_id":"MDQ6VXNlcjExNjg2Mzgw","avatar_url":"https://avatars.githubusercontent.com/u/11686380?v=4","gravatar_id":"","url":"https://api.github.com/users/niketanpansare","html_url":"https://github.com/niketanpansare","followers_url":"https://api.github.com/users/niketanpansare/followers","following_url":"https://api.github.com/users/niketanpansare/following{/other_user}","gists_url":"https://api.github.com/users/niketanpansare/gists{/gist_id}","starred_url":"https://api.github.com/users/niketanpansare/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/niketanpansare/subscriptions","organizations_url":"https://api.github.com/users/niketanpansare/orgs","repos_url":"https://api.github.com/users/niketanpansare/repos","events_url":"https://api.github.com/users/niketanpansare/events{/privacy}","received_events_url":"https://api.github.com/users/niketanpansare/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-23T23:41:39Z","updated_at":"2017-01-23T23:41:39Z","author_association":"CONTRIBUTOR","body":"@mboehm7  I don't fully understand your concern. ExternalUDFRegistration is only an API level class (similar to MLContext) that simplifies usage of our external built-in function. All it does it constructs the [external UDF headers](https://github.com/apache/incubator-systemml/commit/5d84a095aadc1d6f1e2e4c06439589591ca24aec#diff-aa48616e7f61866cff633a265f15b48cR457) and wraps the Scala UDF into [GenericFunction which extends PackageFunction](https://github.com/apache/incubator-systemml/blob/5d84a095aadc1d6f1e2e4c06439589591ca24aec/src/main/java/org/apache/sysml/udf/lib/GenericFunction.java). After parsing phase, all the existing UDF mechanism (IPA, parfor, explain, etc) remains unchanged.","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/274654196/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/274654231","html_url":"https://github.com/apache/systemds/pull/352#issuecomment-274654231","issue_url":"https://api.github.com/repos/apache/systemds/issues/352","id":274654231,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NDY1NDIzMQ==","user":{"login":"deroneriksson","id":12634533,"node_id":"MDQ6VXNlcjEyNjM0NTMz","avatar_url":"https://avatars.githubusercontent.com/u/12634533?v=4","gravatar_id":"","url":"https://api.github.com/users/deroneriksson","html_url":"https://github.com/deroneriksson","followers_url":"https://api.github.com/users/deroneriksson/followers","following_url":"https://api.github.com/users/deroneriksson/following{/other_user}","gists_url":"https://api.github.com/users/deroneriksson/gists{/gist_id}","starred_url":"https://api.github.com/users/deroneriksson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/deroneriksson/subscriptions","organizations_url":"https://api.github.com/users/deroneriksson/orgs","repos_url":"https://api.github.com/users/deroneriksson/repos","events_url":"https://api.github.com/users/deroneriksson/events{/privacy}","received_events_url":"https://api.github.com/users/deroneriksson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-23T23:41:51Z","updated_at":"2017-01-23T23:41:51Z","author_association":"MEMBER","body":"Example:\r\n```\r\nscala> val ml = new MLContext(sc)\r\n\r\nWelcome to Apache SystemML!\r\n\r\nml: org.apache.sysml.api.mlcontext.MLContext = org.apache.sysml.api.mlcontext.MLContext@2dec57c5\r\n\r\nscala> val script = dml(\"A = matrix('1 2 3 4', rows=2, cols=2); print(toString(A));\")\r\nscript: org.apache.sysml.api.mlcontext.Script =\r\nInputs:\r\nNone\r\n\r\nOutputs:\r\nNone\r\n\r\nscala> ml.execute(script)\r\n1.000 2.000\r\n3.000 4.000\r\n\r\nres0: org.apache.sysml.api.mlcontext.MLResults =\r\nNone\r\nscala> script.displaySymbolTable\r\nres1: String =\r\n\"Symbol Table:\r\n  [1] (String) _Var3: 1.000 2.000\r\n3.000 4.000\r\n\r\n  [2] (String) _Var2: 1.000 2.000\r\n3.000 4.000\r\n\r\n  [3] (Matrix) _mVar1: MatrixObject: scratch_space//_p61451_192.168.1.103//_t0/temp1_1, [2 x 2, nnz=4, blocks (1000 x 1000)], binaryblock, dirty\r\n\"\r\n","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/274654231/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/274656477","html_url":"https://github.com/apache/systemds/pull/352#issuecomment-274656477","issue_url":"https://api.github.com/repos/apache/systemds/issues/352","id":274656477,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NDY1NjQ3Nw==","user":{"login":"deroneriksson","id":12634533,"node_id":"MDQ6VXNlcjEyNjM0NTMz","avatar_url":"https://avatars.githubusercontent.com/u/12634533?v=4","gravatar_id":"","url":"https://api.github.com/users/deroneriksson","html_url":"https://github.com/deroneriksson","followers_url":"https://api.github.com/users/deroneriksson/followers","following_url":"https://api.github.com/users/deroneriksson/following{/other_user}","gists_url":"https://api.github.com/users/deroneriksson/gists{/gist_id}","starred_url":"https://api.github.com/users/deroneriksson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/deroneriksson/subscriptions","organizations_url":"https://api.github.com/users/deroneriksson/orgs","repos_url":"https://api.github.com/users/deroneriksson/repos","events_url":"https://api.github.com/users/deroneriksson/events{/privacy}","received_events_url":"https://api.github.com/users/deroneriksson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-23T23:52:51Z","updated_at":"2017-01-23T23:52:51Z","author_association":"MEMBER","body":"@mboehm7 Do you think this is OK in its current state (default on), or do you think this should by default be off (due to potential performance/memory issues), but have a MLContext flag that can be set to turn it on? Note that Script does have a clearSymbolTable() method.","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/274656477/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/274657715","html_url":"https://github.com/apache/systemds/pull/352#issuecomment-274657715","issue_url":"https://api.github.com/repos/apache/systemds/issues/352","id":274657715,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NDY1NzcxNQ==","user":{"login":"nakul02","id":5394361,"node_id":"MDQ6VXNlcjUzOTQzNjE=","avatar_url":"https://avatars.githubusercontent.com/u/5394361?v=4","gravatar_id":"","url":"https://api.github.com/users/nakul02","html_url":"https://github.com/nakul02","followers_url":"https://api.github.com/users/nakul02/followers","following_url":"https://api.github.com/users/nakul02/following{/other_user}","gists_url":"https://api.github.com/users/nakul02/gists{/gist_id}","starred_url":"https://api.github.com/users/nakul02/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nakul02/subscriptions","organizations_url":"https://api.github.com/users/nakul02/orgs","repos_url":"https://api.github.com/users/nakul02/repos","events_url":"https://api.github.com/users/nakul02/events{/privacy}","received_events_url":"https://api.github.com/users/nakul02/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-23T23:59:32Z","updated_at":"2017-01-23T23:59:32Z","author_association":"MEMBER","body":"@deroneriksson - as we discussed offline, maybe this is useful for debugging.\r\nMaybe we could disable `rmvar` via a flag (from the command line options) to aid in debugging, \r\nas opposed to disabling it by default.","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/274657715/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/274658150","html_url":"https://github.com/apache/systemds/pull/352#issuecomment-274658150","issue_url":"https://api.github.com/repos/apache/systemds/issues/352","id":274658150,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NDY1ODE1MA==","user":{"login":"deroneriksson","id":12634533,"node_id":"MDQ6VXNlcjEyNjM0NTMz","avatar_url":"https://avatars.githubusercontent.com/u/12634533?v=4","gravatar_id":"","url":"https://api.github.com/users/deroneriksson","html_url":"https://github.com/deroneriksson","followers_url":"https://api.github.com/users/deroneriksson/followers","following_url":"https://api.github.com/users/deroneriksson/following{/other_user}","gists_url":"https://api.github.com/users/deroneriksson/gists{/gist_id}","starred_url":"https://api.github.com/users/deroneriksson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/deroneriksson/subscriptions","organizations_url":"https://api.github.com/users/deroneriksson/orgs","repos_url":"https://api.github.com/users/deroneriksson/repos","events_url":"https://api.github.com/users/deroneriksson/events{/privacy}","received_events_url":"https://api.github.com/users/deroneriksson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-24T00:01:55Z","updated_at":"2017-01-24T00:01:55Z","author_association":"MEMBER","body":"@nakul02 That sounds like a good idea. It can be quite useful for debugging but I was a bit concerned about performance and memory requirements. I'll update to by default use the existing behavior.","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/274658150/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/274663532","html_url":"https://github.com/apache/systemds/pull/352#issuecomment-274663532","issue_url":"https://api.github.com/repos/apache/systemds/issues/352","id":274663532,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NDY2MzUzMg==","user":{"login":"deroneriksson","id":12634533,"node_id":"MDQ6VXNlcjEyNjM0NTMz","avatar_url":"https://avatars.githubusercontent.com/u/12634533?v=4","gravatar_id":"","url":"https://api.github.com/users/deroneriksson","html_url":"https://github.com/deroneriksson","followers_url":"https://api.github.com/users/deroneriksson/followers","following_url":"https://api.github.com/users/deroneriksson/following{/other_user}","gists_url":"https://api.github.com/users/deroneriksson/gists{/gist_id}","starred_url":"https://api.github.com/users/deroneriksson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/deroneriksson/subscriptions","organizations_url":"https://api.github.com/users/deroneriksson/orgs","repos_url":"https://api.github.com/users/deroneriksson/repos","events_url":"https://api.github.com/users/deroneriksson/events{/privacy}","received_events_url":"https://api.github.com/users/deroneriksson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-24T00:30:45Z","updated_at":"2017-01-24T00:30:45Z","author_association":"MEMBER","body":"Updated to by default use existing behavior (only maintain symbol table values for outputs). Added ability to turn on maintaining symbol table values.\r\n\r\nExample:\r\n```\r\nWelcome to\r\n      ____              __\r\n     / __/__  ___ _____/ /__\r\n    _\\ \\/ _ \\/ _ `/ __/  '_/\r\n   /___/ .__/\\_,_/_/ /_/\\_\\   version 2.1.0\r\n      /_/\r\n         \r\nUsing Scala version 2.11.8 (Java HotSpot(TM) 64-Bit Server VM, Java 1.8.0_60)\r\nType in expressions to have them evaluated.\r\nType :help for more information.\r\n\r\nscala> import org.apache.sysml.api.mlcontext._\r\nimport org.apache.sysml.api.mlcontext._\r\n\r\nscala> import org.apache.sysml.api.mlcontext.ScriptFactory._\r\nimport org.apache.sysml.api.mlcontext.ScriptFactory._\r\n\r\nscala> val ml = new MLContext(sc)\r\n\r\nWelcome to Apache SystemML!\r\n\r\nml: org.apache.sysml.api.mlcontext.MLContext = org.apache.sysml.api.mlcontext.MLContext@f1e1d66\r\n\r\nscala> val script = dml(\"A = matrix('1 2 3 4', rows=2, cols=2); print(toString(A));\")\r\nscript: org.apache.sysml.api.mlcontext.Script =\r\nInputs:\r\nNone\r\n\r\nOutputs:\r\nNone\r\n\r\nscala> ml.execute(script)\r\n1.000 2.000\r\n3.000 4.000\r\n\r\nres0: org.apache.sysml.api.mlcontext.MLResults =\r\nNone\r\n\r\nscala> script.displaySymbolTable\r\nres1: String =\r\n\"Symbol Table:\r\nNone\r\n\"\r\n\r\nscala> ml.setMaintainSymbolTable(true)\r\n\r\nscala> ml.execute(script)\r\n1.000 2.000\r\n3.000 4.000\r\n\r\nres3: org.apache.sysml.api.mlcontext.MLResults =\r\nNone\r\n\r\nscala> script.displaySymbolTable\r\nres4: String =\r\n\"Symbol Table:\r\n  [1] (String) _Var6: 1.000 2.000\r\n3.000 4.000\r\n\r\n  [2] (String) _Var5: 1.000 2.000\r\n3.000 4.000\r\n\r\n  [3] (Matrix) _mVar4: MatrixObject: scratch_space//_p63600_192.168.1.103//_t0/temp2_2, [2 x 2, nnz=4, blocks (1000 x 1000)], binaryblock, dirty\r\n\"\r\n```","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/274663532/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/274664707","html_url":"https://github.com/apache/systemds/pull/352#issuecomment-274664707","issue_url":"https://api.github.com/repos/apache/systemds/issues/352","id":274664707,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NDY2NDcwNw==","user":{"login":"nakul02","id":5394361,"node_id":"MDQ6VXNlcjUzOTQzNjE=","avatar_url":"https://avatars.githubusercontent.com/u/5394361?v=4","gravatar_id":"","url":"https://api.github.com/users/nakul02","html_url":"https://github.com/nakul02","followers_url":"https://api.github.com/users/nakul02/followers","following_url":"https://api.github.com/users/nakul02/following{/other_user}","gists_url":"https://api.github.com/users/nakul02/gists{/gist_id}","starred_url":"https://api.github.com/users/nakul02/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nakul02/subscriptions","organizations_url":"https://api.github.com/users/nakul02/orgs","repos_url":"https://api.github.com/users/nakul02/repos","events_url":"https://api.github.com/users/nakul02/events{/privacy}","received_events_url":"https://api.github.com/users/nakul02/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-24T00:37:27Z","updated_at":"2017-01-24T00:37:27Z","author_association":"MEMBER","body":"@niketanpansare - thoughts?\r\n","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/274664707/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/274666831","html_url":"https://github.com/apache/systemds/pull/352#issuecomment-274666831","issue_url":"https://api.github.com/repos/apache/systemds/issues/352","id":274666831,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NDY2NjgzMQ==","user":{"login":"niketanpansare","id":11686380,"node_id":"MDQ6VXNlcjExNjg2Mzgw","avatar_url":"https://avatars.githubusercontent.com/u/11686380?v=4","gravatar_id":"","url":"https://api.github.com/users/niketanpansare","html_url":"https://github.com/niketanpansare","followers_url":"https://api.github.com/users/niketanpansare/followers","following_url":"https://api.github.com/users/niketanpansare/following{/other_user}","gists_url":"https://api.github.com/users/niketanpansare/gists{/gist_id}","starred_url":"https://api.github.com/users/niketanpansare/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/niketanpansare/subscriptions","organizations_url":"https://api.github.com/users/niketanpansare/orgs","repos_url":"https://api.github.com/users/niketanpansare/repos","events_url":"https://api.github.com/users/niketanpansare/events{/privacy}","received_events_url":"https://api.github.com/users/niketanpansare/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-24T00:49:31Z","updated_at":"2017-01-24T00:49:31Z","author_association":"CONTRIBUTOR","body":"Conceptually, it feels a bit odd that 'script' has 'symbol table', shouldn't it be part of MLResults or MLContext ?","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/274666831/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/274670735","html_url":"https://github.com/apache/systemds/pull/353#issuecomment-274670735","issue_url":"https://api.github.com/repos/apache/systemds/issues/353","id":274670735,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NDY3MDczNQ==","user":{"login":"gweidner","id":12058879,"node_id":"MDQ6VXNlcjEyMDU4ODc5","avatar_url":"https://avatars.githubusercontent.com/u/12058879?v=4","gravatar_id":"","url":"https://api.github.com/users/gweidner","html_url":"https://github.com/gweidner","followers_url":"https://api.github.com/users/gweidner/followers","following_url":"https://api.github.com/users/gweidner/following{/other_user}","gists_url":"https://api.github.com/users/gweidner/gists{/gist_id}","starred_url":"https://api.github.com/users/gweidner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gweidner/subscriptions","organizations_url":"https://api.github.com/users/gweidner/orgs","repos_url":"https://api.github.com/users/gweidner/repos","events_url":"https://api.github.com/users/gweidner/events{/privacy}","received_events_url":"https://api.github.com/users/gweidner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-24T01:12:10Z","updated_at":"2017-01-24T01:12:30Z","author_association":"MEMBER","body":"Below was the observed error mentioned in JIRA:\r\n\r\nERROR api.DMLScript: ../algorithms/naive-bayes-predict.dml line 58:13 The parameter $probabilities either needs to be passed through commandline or initialized to default value.\r\n\r\nThe following parse issue was encountered:\r\n../algorithms/naive-bayes-predict.dml [line 58:13] [Validation error] -> write(probs, $probabilities, format=cmdLine_fmt)\r\n   The parameter $probabilities either needs to be passed through commandline or initialized to default value.\r\n\r\nSuccessfully ran the performance test with updated naive-bayes-predict.dml.","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/274670735/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/274672990","html_url":"https://github.com/apache/systemds/pull/352#issuecomment-274672990","issue_url":"https://api.github.com/repos/apache/systemds/issues/352","id":274672990,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NDY3Mjk5MA==","user":{"login":"deroneriksson","id":12634533,"node_id":"MDQ6VXNlcjEyNjM0NTMz","avatar_url":"https://avatars.githubusercontent.com/u/12634533?v=4","gravatar_id":"","url":"https://api.github.com/users/deroneriksson","html_url":"https://github.com/deroneriksson","followers_url":"https://api.github.com/users/deroneriksson/followers","following_url":"https://api.github.com/users/deroneriksson/following{/other_user}","gists_url":"https://api.github.com/users/deroneriksson/gists{/gist_id}","starred_url":"https://api.github.com/users/deroneriksson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/deroneriksson/subscriptions","organizations_url":"https://api.github.com/users/deroneriksson/orgs","repos_url":"https://api.github.com/users/deroneriksson/repos","events_url":"https://api.github.com/users/deroneriksson/events{/privacy}","received_events_url":"https://api.github.com/users/deroneriksson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-24T01:25:01Z","updated_at":"2017-01-24T01:25:01Z","author_association":"MEMBER","body":"When the new MLContext API was created, the symbol table for a DML script was moved to the Script object, thus allowing multiple scripts to each have their own symbol table. The Script object is what is 'executed' by ScriptExecutor via the new MLContext and the resulting execution has an associated symbol table of values. Conceptually, I agree about MLResults, since an MLResults is associated with the results of an executed script, and MLResults is indeed passed a copy of the symbol table after execution.\r\n\r\nThis PR simply optionally allows the option of keeping symbol table values around after execution (by default it uses the old behavior). This can be useful when debugging (which I am currently doing via some UI tools).\r\n","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/274672990/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/274673818","html_url":"https://github.com/apache/systemds/pull/352#issuecomment-274673818","issue_url":"https://api.github.com/repos/apache/systemds/issues/352","id":274673818,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NDY3MzgxOA==","user":{"login":"niketanpansare","id":11686380,"node_id":"MDQ6VXNlcjExNjg2Mzgw","avatar_url":"https://avatars.githubusercontent.com/u/11686380?v=4","gravatar_id":"","url":"https://api.github.com/users/niketanpansare","html_url":"https://github.com/niketanpansare","followers_url":"https://api.github.com/users/niketanpansare/followers","following_url":"https://api.github.com/users/niketanpansare/following{/other_user}","gists_url":"https://api.github.com/users/niketanpansare/gists{/gist_id}","starred_url":"https://api.github.com/users/niketanpansare/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/niketanpansare/subscriptions","organizations_url":"https://api.github.com/users/niketanpansare/orgs","repos_url":"https://api.github.com/users/niketanpansare/repos","events_url":"https://api.github.com/users/niketanpansare/events{/privacy}","received_events_url":"https://api.github.com/users/niketanpansare/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-24T01:29:53Z","updated_at":"2017-01-24T01:29:53Z","author_association":"CONTRIBUTOR","body":"LGTM and also +1 for adding any debugging feature :)","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/274673818/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/274707444","html_url":"https://github.com/apache/systemds/pull/354#issuecomment-274707444","issue_url":"https://api.github.com/repos/apache/systemds/issues/354","id":274707444,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NDcwNzQ0NA==","user":{"login":"gweidner","id":12058879,"node_id":"MDQ6VXNlcjEyMDU4ODc5","avatar_url":"https://avatars.githubusercontent.com/u/12058879?v=4","gravatar_id":"","url":"https://api.github.com/users/gweidner","html_url":"https://github.com/gweidner","followers_url":"https://api.github.com/users/gweidner/followers","following_url":"https://api.github.com/users/gweidner/following{/other_user}","gists_url":"https://api.github.com/users/gweidner/gists{/gist_id}","starred_url":"https://api.github.com/users/gweidner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gweidner/subscriptions","organizations_url":"https://api.github.com/users/gweidner/orgs","repos_url":"https://api.github.com/users/gweidner/repos","events_url":"https://api.github.com/users/gweidner/events{/privacy}","received_events_url":"https://api.github.com/users/gweidner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-24T04:34:03Z","updated_at":"2017-01-24T04:34:52Z","author_association":"MEMBER","body":"All tests passed at:\r\nhttps://sparktc.ibmcloud.com/jenkins/job/SystemML-OnDemand/246/\r\n\r\nThis change is intended to help potentially reduce intermittent FullReblockTest failures but does not restrict any test outside the package from running in parallel.","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/274707444/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/274739131","html_url":"https://github.com/apache/systemds/pull/352#issuecomment-274739131","issue_url":"https://api.github.com/repos/apache/systemds/issues/352","id":274739131,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NDczOTEzMQ==","user":{"login":"bertholdreinwald","id":10200727,"node_id":"MDQ6VXNlcjEwMjAwNzI3","avatar_url":"https://avatars.githubusercontent.com/u/10200727?v=4","gravatar_id":"","url":"https://api.github.com/users/bertholdreinwald","html_url":"https://github.com/bertholdreinwald","followers_url":"https://api.github.com/users/bertholdreinwald/followers","following_url":"https://api.github.com/users/bertholdreinwald/following{/other_user}","gists_url":"https://api.github.com/users/bertholdreinwald/gists{/gist_id}","starred_url":"https://api.github.com/users/bertholdreinwald/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bertholdreinwald/subscriptions","organizations_url":"https://api.github.com/users/bertholdreinwald/orgs","repos_url":"https://api.github.com/users/bertholdreinwald/repos","events_url":"https://api.github.com/users/bertholdreinwald/events{/privacy}","received_events_url":"https://api.github.com/users/bertholdreinwald/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-24T08:27:31Z","updated_at":"2017-01-24T08:27:31Z","author_association":"CONTRIBUTOR","body":"Thanks, Deron. I guess that this feature is useful for debugging scenarios. However, removing all rmvars is too coarse. \r\n\r\nWhat you want to accomplish here is to carry vars from 1 DML invocation to the next, which is useful. However, I think that a user needs to specify which vars to hold on to as only the user knows the larger flow in this interactive scenario. Honestly, I thought that the JMLC API has already a method to \"pin\" vars. Will try to find it tomorrow. Holding on too many vars will make subsequent memory estimates and optimizations challenging. \r\n\r\nThoughts?","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/274739131/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/274765146","html_url":"https://github.com/apache/systemds/pull/349#issuecomment-274765146","issue_url":"https://api.github.com/repos/apache/systemds/issues/349","id":274765146,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NDc2NTE0Ng==","user":{"login":"mboehm7","id":13721609,"node_id":"MDQ6VXNlcjEzNzIxNjA5","avatar_url":"https://avatars.githubusercontent.com/u/13721609?v=4","gravatar_id":"","url":"https://api.github.com/users/mboehm7","html_url":"https://github.com/mboehm7","followers_url":"https://api.github.com/users/mboehm7/followers","following_url":"https://api.github.com/users/mboehm7/following{/other_user}","gists_url":"https://api.github.com/users/mboehm7/gists{/gist_id}","starred_url":"https://api.github.com/users/mboehm7/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mboehm7/subscriptions","organizations_url":"https://api.github.com/users/mboehm7/orgs","repos_url":"https://api.github.com/users/mboehm7/repos","events_url":"https://api.github.com/users/mboehm7/events{/privacy}","received_events_url":"https://api.github.com/users/mboehm7/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-24T10:26:35Z","updated_at":"2017-01-24T10:26:35Z","author_association":"CONTRIBUTOR","body":"1) Since you call ExternalUDFRegistration from within this GenericFunction, these Scala UDFs cannot be used on script level as they're never registered.\r\n2) Right now, we assume external functions to be in the class path, in a parfor context even on all workers (which is the case for functions that we package into our jar). However, this will obviously fail for user-provided functions. Here you would have to serialize the UDF, distribute it via task closures, and deserialize them at the executors as Spark's task closures refer to classes by name. Extending these kinds of features now would get really ugly because we would have to handle two different directories for functions.","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/274765146/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/274768079","html_url":"https://github.com/apache/systemds/pull/352#issuecomment-274768079","issue_url":"https://api.github.com/repos/apache/systemds/issues/352","id":274768079,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NDc2ODA3OQ==","user":{"login":"mboehm7","id":13721609,"node_id":"MDQ6VXNlcjEzNzIxNjA5","avatar_url":"https://avatars.githubusercontent.com/u/13721609?v=4","gravatar_id":"","url":"https://api.github.com/users/mboehm7","html_url":"https://github.com/mboehm7","followers_url":"https://api.github.com/users/mboehm7/followers","following_url":"https://api.github.com/users/mboehm7/following{/other_user}","gists_url":"https://api.github.com/users/mboehm7/gists{/gist_id}","starred_url":"https://api.github.com/users/mboehm7/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mboehm7/subscriptions","organizations_url":"https://api.github.com/users/mboehm7/orgs","repos_url":"https://api.github.com/users/mboehm7/repos","events_url":"https://api.github.com/users/mboehm7/events{/privacy}","received_events_url":"https://api.github.com/users/mboehm7/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-24T10:40:12Z","updated_at":"2017-01-24T10:40:12Z","author_association":"CONTRIBUTOR","body":"Overall, there can indeed be memory leaks and performance issues but this really depends on the used API. For MLContext, which runs with caching enabled, unnecessary variables are simply spilled out to disk; variables below 4KB are not subject to caching but it would require tens of thousands of intermediates before this becomes a problem. For JMLC, caching is disabled, and hence we cannot apply it there.\r\n\r\nHowever, I agree with Berthold that removing all rmvar instructions is anyway too coarse-grained. The majority of rmvar instructions refers to intermediates of a DAG which are never bound to logical variables names and hence not accessible for a user. To create a whitelist of variables you want to keep, you can simply iterate over all DAGs and collect the names of transient_write root nodes. ","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/274768079/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/274844221","html_url":"https://github.com/apache/systemds/pull/354#issuecomment-274844221","issue_url":"https://api.github.com/repos/apache/systemds/issues/354","id":274844221,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NDg0NDIyMQ==","user":{"login":"gweidner","id":12058879,"node_id":"MDQ6VXNlcjEyMDU4ODc5","avatar_url":"https://avatars.githubusercontent.com/u/12058879?v=4","gravatar_id":"","url":"https://api.github.com/users/gweidner","html_url":"https://github.com/gweidner","followers_url":"https://api.github.com/users/gweidner/followers","following_url":"https://api.github.com/users/gweidner/following{/other_user}","gists_url":"https://api.github.com/users/gweidner/gists{/gist_id}","starred_url":"https://api.github.com/users/gweidner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gweidner/subscriptions","organizations_url":"https://api.github.com/users/gweidner/orgs","repos_url":"https://api.github.com/users/gweidner/repos","events_url":"https://api.github.com/users/gweidner/events{/privacy}","received_events_url":"https://api.github.com/users/gweidner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-24T15:53:44Z","updated_at":"2017-01-24T15:53:44Z","author_association":"MEMBER","body":"Great catch Deron - thank you for reviewing!  I pushed commit to correct the exclude statement.\r\nTests in progress:\r\nhttps://sparktc.ibmcloud.com/jenkins/job/SystemML-PullRequestBuilder/1041/\r\nPrevious successful PR build results here:\r\nhttps://sparktc.ibmcloud.com/jenkins/job/SystemML-PullRequestBuilder/1040/","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/274844221/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/274857751","html_url":"https://github.com/apache/systemds/pull/350#issuecomment-274857751","issue_url":"https://api.github.com/repos/apache/systemds/issues/350","id":274857751,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NDg1Nzc1MQ==","user":{"login":"lresende","id":382917,"node_id":"MDQ6VXNlcjM4MjkxNw==","avatar_url":"https://avatars.githubusercontent.com/u/382917?v=4","gravatar_id":"","url":"https://api.github.com/users/lresende","html_url":"https://github.com/lresende","followers_url":"https://api.github.com/users/lresende/followers","following_url":"https://api.github.com/users/lresende/following{/other_user}","gists_url":"https://api.github.com/users/lresende/gists{/gist_id}","starred_url":"https://api.github.com/users/lresende/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/lresende/subscriptions","organizations_url":"https://api.github.com/users/lresende/orgs","repos_url":"https://api.github.com/users/lresende/repos","events_url":"https://api.github.com/users/lresende/events{/privacy}","received_events_url":"https://api.github.com/users/lresende/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-24T16:34:49Z","updated_at":"2017-01-24T16:34:49Z","author_association":"MEMBER","body":"Merged into Master. @asurve feel free to merge into 0.12 branch if you need this fix.","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/274857751/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/274858995","html_url":"https://github.com/apache/systemds/pull/352#issuecomment-274858995","issue_url":"https://api.github.com/repos/apache/systemds/issues/352","id":274858995,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NDg1ODk5NQ==","user":{"login":"deroneriksson","id":12634533,"node_id":"MDQ6VXNlcjEyNjM0NTMz","avatar_url":"https://avatars.githubusercontent.com/u/12634533?v=4","gravatar_id":"","url":"https://api.github.com/users/deroneriksson","html_url":"https://github.com/deroneriksson","followers_url":"https://api.github.com/users/deroneriksson/followers","following_url":"https://api.github.com/users/deroneriksson/following{/other_user}","gists_url":"https://api.github.com/users/deroneriksson/gists{/gist_id}","starred_url":"https://api.github.com/users/deroneriksson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/deroneriksson/subscriptions","organizations_url":"https://api.github.com/users/deroneriksson/orgs","repos_url":"https://api.github.com/users/deroneriksson/repos","events_url":"https://api.github.com/users/deroneriksson/events{/privacy}","received_events_url":"https://api.github.com/users/deroneriksson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-24T16:38:19Z","updated_at":"2017-01-24T16:38:19Z","author_association":"MEMBER","body":"@bertholdreinwald @mboehm7 \r\nThis is meant as a debugging tool for developers, who can actually care about the intermediate variables that get created. SystemML often does lots of hidden magic, and being able to see the intermediates and their values can shed light on some of that. Anyway, if you would prefer not to have this feature in master, I can keep it in my own branch so that I can use it.\r\n","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/274858995/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/274900840","html_url":"https://github.com/apache/systemds/pull/353#issuecomment-274900840","issue_url":"https://api.github.com/repos/apache/systemds/issues/353","id":274900840,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NDkwMDg0MA==","user":{"login":"deroneriksson","id":12634533,"node_id":"MDQ6VXNlcjEyNjM0NTMz","avatar_url":"https://avatars.githubusercontent.com/u/12634533?v=4","gravatar_id":"","url":"https://api.github.com/users/deroneriksson","html_url":"https://github.com/deroneriksson","followers_url":"https://api.github.com/users/deroneriksson/followers","following_url":"https://api.github.com/users/deroneriksson/following{/other_user}","gists_url":"https://api.github.com/users/deroneriksson/gists{/gist_id}","starred_url":"https://api.github.com/users/deroneriksson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/deroneriksson/subscriptions","organizations_url":"https://api.github.com/users/deroneriksson/orgs","repos_url":"https://api.github.com/users/deroneriksson/repos","events_url":"https://api.github.com/users/deroneriksson/events{/privacy}","received_events_url":"https://api.github.com/users/deroneriksson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-24T18:58:32Z","updated_at":"2017-01-24T18:58:32Z","author_association":"MEMBER","body":"LGTM","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/274900840/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/274901055","html_url":"https://github.com/apache/systemds/pull/354#issuecomment-274901055","issue_url":"https://api.github.com/repos/apache/systemds/issues/354","id":274901055,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NDkwMTA1NQ==","user":{"login":"deroneriksson","id":12634533,"node_id":"MDQ6VXNlcjEyNjM0NTMz","avatar_url":"https://avatars.githubusercontent.com/u/12634533?v=4","gravatar_id":"","url":"https://api.github.com/users/deroneriksson","html_url":"https://github.com/deroneriksson","followers_url":"https://api.github.com/users/deroneriksson/followers","following_url":"https://api.github.com/users/deroneriksson/following{/other_user}","gists_url":"https://api.github.com/users/deroneriksson/gists{/gist_id}","starred_url":"https://api.github.com/users/deroneriksson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/deroneriksson/subscriptions","organizations_url":"https://api.github.com/users/deroneriksson/orgs","repos_url":"https://api.github.com/users/deroneriksson/repos","events_url":"https://api.github.com/users/deroneriksson/events{/privacy}","received_events_url":"https://api.github.com/users/deroneriksson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-24T18:59:18Z","updated_at":"2017-01-24T18:59:18Z","author_association":"MEMBER","body":"LGTM. All tests passed: https://sparktc.ibmcloud.com/jenkins/job/SystemML-PullRequestBuilder/1041/","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/274901055/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/274926120","html_url":"https://github.com/apache/systemds/pull/349#issuecomment-274926120","issue_url":"https://api.github.com/repos/apache/systemds/issues/349","id":274926120,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NDkyNjEyMA==","user":{"login":"niketanpansare","id":11686380,"node_id":"MDQ6VXNlcjExNjg2Mzgw","avatar_url":"https://avatars.githubusercontent.com/u/11686380?v=4","gravatar_id":"","url":"https://api.github.com/users/niketanpansare","html_url":"https://github.com/niketanpansare","followers_url":"https://api.github.com/users/niketanpansare/followers","following_url":"https://api.github.com/users/niketanpansare/following{/other_user}","gists_url":"https://api.github.com/users/niketanpansare/gists{/gist_id}","starred_url":"https://api.github.com/users/niketanpansare/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/niketanpansare/subscriptions","organizations_url":"https://api.github.com/users/niketanpansare/orgs","repos_url":"https://api.github.com/users/niketanpansare/repos","events_url":"https://api.github.com/users/niketanpansare/events{/privacy}","received_events_url":"https://api.github.com/users/niketanpansare/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-24T20:18:39Z","updated_at":"2017-01-24T20:18:39Z","author_association":"CONTRIBUTOR","body":">> Since you call ExternalUDFRegistration from within this GenericFunction, these Scala UDFs cannot be used on script level as they're never registered.\r\n\r\nI do register \"GenericFunction\" [here](https://github.com/apache/incubator-systemml/blob/master/src/main/scala/org/apache/sysml/api/ExternalUDFRegistration.scala#L152) which calls ExternalUDFRegistration, else the above scala example will not work.\r\n\r\n>> Right now, we assume external functions to be in the class path, in a parfor context even on all workers (which is the case for functions that we package into our jar). However, this will obviously fail for user-provided functions. Here you would have to serialize the UDF, distribute it via task closures, and deserialize them at the executors as Spark's task closures refer to classes by name. Extending these kinds of features now would get really ugly because we would have to handle two different directories for functions.\r\n\r\nSince the closure is already created and put into the HashMap, wouldn't it be as simple as performing a broadcast of the [HashMaps](https://github.com/apache/incubator-systemml/blob/master/src/main/scala/org/apache/sysml/api/ExternalUDFRegistration.scala#L94) and setting a static variable [here](https://github.com/apache/incubator-systemml/blob/master/src/main/java/org/apache/sysml/runtime/controlprogram/parfor/RemoteParForSpark.java#L72). If this works for you, I can add it to the parfor. If not, I can remove the UDF registration code.","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/274926120/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/274929985","html_url":"https://github.com/apache/systemds/pull/349#issuecomment-274929985","issue_url":"https://api.github.com/repos/apache/systemds/issues/349","id":274929985,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NDkyOTk4NQ==","user":{"login":"mboehm7","id":13721609,"node_id":"MDQ6VXNlcjEzNzIxNjA5","avatar_url":"https://avatars.githubusercontent.com/u/13721609?v=4","gravatar_id":"","url":"https://api.github.com/users/mboehm7","html_url":"https://github.com/mboehm7","followers_url":"https://api.github.com/users/mboehm7/followers","following_url":"https://api.github.com/users/mboehm7/following{/other_user}","gists_url":"https://api.github.com/users/mboehm7/gists{/gist_id}","starred_url":"https://api.github.com/users/mboehm7/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mboehm7/subscriptions","organizations_url":"https://api.github.com/users/mboehm7/orgs","repos_url":"https://api.github.com/users/mboehm7/repos","events_url":"https://api.github.com/users/mboehm7/events{/privacy}","received_events_url":"https://api.github.com/users/mboehm7/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-24T20:33:56Z","updated_at":"2017-01-24T20:33:56Z","author_association":"CONTRIBUTOR","body":"1) What I'm saying is that a proper integration would allow the registration of Scala UDFs on script level without the need to go through MLContext.\r\n2) As said before, no, this will not work if the class of your UDF is unknown at the executors - in that case you need to serialize the class as well; the point is, it's beneficial to have a single directory for UDF meta data.","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/274929985/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/274933277","html_url":"https://github.com/apache/systemds/pull/355#issuecomment-274933277","issue_url":"https://api.github.com/repos/apache/systemds/issues/355","id":274933277,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NDkzMzI3Nw==","user":{"login":"mboehm7","id":13721609,"node_id":"MDQ6VXNlcjEzNzIxNjA5","avatar_url":"https://avatars.githubusercontent.com/u/13721609?v=4","gravatar_id":"","url":"https://api.github.com/users/mboehm7","html_url":"https://github.com/mboehm7","followers_url":"https://api.github.com/users/mboehm7/followers","following_url":"https://api.github.com/users/mboehm7/following{/other_user}","gists_url":"https://api.github.com/users/mboehm7/gists{/gist_id}","starred_url":"https://api.github.com/users/mboehm7/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mboehm7/subscriptions","organizations_url":"https://api.github.com/users/mboehm7/orgs","repos_url":"https://api.github.com/users/mboehm7/repos","events_url":"https://api.github.com/users/mboehm7/events{/privacy}","received_events_url":"https://api.github.com/users/mboehm7/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-24T20:46:31Z","updated_at":"2017-01-24T20:46:31Z","author_association":"CONTRIBUTOR","body":"Thanks for asking but I'm against the proposed language feature because it's R-incompatible and it can be easily done automatically. \r\n\r\nThis scenario is a classic workload that benefits from data partitioning. So far, we do automatic column/row partitioning in PARFOR but should extend this to block partitioning (there should be an existing JIRA) and to FOR loops as well. Apart from data partitioning, and as a first step, the blocking should be relatively easy to integrate via a new rewrite.  ","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/274933277/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/274941760","html_url":"https://github.com/apache/systemds/pull/356#issuecomment-274941760","issue_url":"https://api.github.com/repos/apache/systemds/issues/356","id":274941760,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NDk0MTc2MA==","user":{"login":"gweidner","id":12058879,"node_id":"MDQ6VXNlcjEyMDU4ODc5","avatar_url":"https://avatars.githubusercontent.com/u/12058879?v=4","gravatar_id":"","url":"https://api.github.com/users/gweidner","html_url":"https://github.com/gweidner","followers_url":"https://api.github.com/users/gweidner/followers","following_url":"https://api.github.com/users/gweidner/following{/other_user}","gists_url":"https://api.github.com/users/gweidner/gists{/gist_id}","starred_url":"https://api.github.com/users/gweidner/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gweidner/subscriptions","organizations_url":"https://api.github.com/users/gweidner/orgs","repos_url":"https://api.github.com/users/gweidner/repos","events_url":"https://api.github.com/users/gweidner/events{/privacy}","received_events_url":"https://api.github.com/users/gweidner/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-24T21:18:37Z","updated_at":"2017-01-24T21:18:37Z","author_association":"MEMBER","body":"Thank you Deron for updating the pom and for checking tests.\r\nLGTM","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/274941760/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/274942119","html_url":"https://github.com/apache/systemds/pull/355#issuecomment-274942119","issue_url":"https://api.github.com/repos/apache/systemds/issues/355","id":274942119,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NDk0MjExOQ==","user":{"login":"niketanpansare","id":11686380,"node_id":"MDQ6VXNlcjExNjg2Mzgw","avatar_url":"https://avatars.githubusercontent.com/u/11686380?v=4","gravatar_id":"","url":"https://api.github.com/users/niketanpansare","html_url":"https://github.com/niketanpansare","followers_url":"https://api.github.com/users/niketanpansare/followers","following_url":"https://api.github.com/users/niketanpansare/following{/other_user}","gists_url":"https://api.github.com/users/niketanpansare/gists{/gist_id}","starred_url":"https://api.github.com/users/niketanpansare/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/niketanpansare/subscriptions","organizations_url":"https://api.github.com/users/niketanpansare/orgs","repos_url":"https://api.github.com/users/niketanpansare/repos","events_url":"https://api.github.com/users/niketanpansare/events{/privacy}","received_events_url":"https://api.github.com/users/niketanpansare/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-24T21:20:01Z","updated_at":"2017-01-24T21:20:01Z","author_association":"CONTRIBUTOR","body":"Thanks @mboehm7 for your reply. I will close this PR in favor of the approach you mentioned :)","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/274942119/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/274942594","html_url":"https://github.com/apache/systemds/pull/349#issuecomment-274942594","issue_url":"https://api.github.com/repos/apache/systemds/issues/349","id":274942594,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NDk0MjU5NA==","user":{"login":"niketanpansare","id":11686380,"node_id":"MDQ6VXNlcjExNjg2Mzgw","avatar_url":"https://avatars.githubusercontent.com/u/11686380?v=4","gravatar_id":"","url":"https://api.github.com/users/niketanpansare","html_url":"https://github.com/niketanpansare","followers_url":"https://api.github.com/users/niketanpansare/followers","following_url":"https://api.github.com/users/niketanpansare/following{/other_user}","gists_url":"https://api.github.com/users/niketanpansare/gists{/gist_id}","starred_url":"https://api.github.com/users/niketanpansare/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/niketanpansare/subscriptions","organizations_url":"https://api.github.com/users/niketanpansare/orgs","repos_url":"https://api.github.com/users/niketanpansare/repos","events_url":"https://api.github.com/users/niketanpansare/events{/privacy}","received_events_url":"https://api.github.com/users/niketanpansare/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-24T21:21:53Z","updated_at":"2017-01-24T21:21:53Z","author_association":"CONTRIBUTOR","body":"Ok. I will cleanup the UDF invocation in the next commit :+1: ","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/274942594/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/274953166","html_url":"https://github.com/apache/systemds/pull/355#issuecomment-274953166","issue_url":"https://api.github.com/repos/apache/systemds/issues/355","id":274953166,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NDk1MzE2Ng==","user":{"login":"dusenberrymw","id":5431337,"node_id":"MDQ6VXNlcjU0MzEzMzc=","avatar_url":"https://avatars.githubusercontent.com/u/5431337?v=4","gravatar_id":"","url":"https://api.github.com/users/dusenberrymw","html_url":"https://github.com/dusenberrymw","followers_url":"https://api.github.com/users/dusenberrymw/followers","following_url":"https://api.github.com/users/dusenberrymw/following{/other_user}","gists_url":"https://api.github.com/users/dusenberrymw/gists{/gist_id}","starred_url":"https://api.github.com/users/dusenberrymw/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dusenberrymw/subscriptions","organizations_url":"https://api.github.com/users/dusenberrymw/orgs","repos_url":"https://api.github.com/users/dusenberrymw/repos","events_url":"https://api.github.com/users/dusenberrymw/events{/privacy}","received_events_url":"https://api.github.com/users/dusenberrymw/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-24T22:01:26Z","updated_at":"2017-01-24T22:01:26Z","author_association":"CONTRIBUTOR","body":"@mboehm7 Thanks for weighing in!  Will we be able to interleave computation and data fetching with that approach?","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/274953166/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/274954987","html_url":"https://github.com/apache/systemds/pull/355#issuecomment-274954987","issue_url":"https://api.github.com/repos/apache/systemds/issues/355","id":274954987,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NDk1NDk4Nw==","user":{"login":"mboehm7","id":13721609,"node_id":"MDQ6VXNlcjEzNzIxNjA5","avatar_url":"https://avatars.githubusercontent.com/u/13721609?v=4","gravatar_id":"","url":"https://api.github.com/users/mboehm7","html_url":"https://github.com/mboehm7","followers_url":"https://api.github.com/users/mboehm7/followers","following_url":"https://api.github.com/users/mboehm7/following{/other_user}","gists_url":"https://api.github.com/users/mboehm7/gists{/gist_id}","starred_url":"https://api.github.com/users/mboehm7/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mboehm7/subscriptions","organizations_url":"https://api.github.com/users/mboehm7/orgs","repos_url":"https://api.github.com/users/mboehm7/repos","events_url":"https://api.github.com/users/mboehm7/events{/privacy}","received_events_url":"https://api.github.com/users/mboehm7/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-24T22:08:27Z","updated_at":"2017-01-24T22:08:51Z","author_association":"CONTRIBUTOR","body":"@niketanpansare no need to immediately close it - let's have the discussion here.\r\n\r\n@dusenberrymw With the full data partitioning, we could actually make the batch slicing a no_op after spending some time for initial partitioning, and hence there would be no need to interleave fetching. With blocking, there is still the slice operation at roughly 2GB/s, so roughly 50ms for a batch of 64*200K, which should be negligible compared to the remaining computation. ","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/274954987/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/274957346","html_url":"https://github.com/apache/systemds/pull/357#issuecomment-274957346","issue_url":"https://api.github.com/repos/apache/systemds/issues/357","id":274957346,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NDk1NzM0Ng==","user":{"login":"mboehm7","id":13721609,"node_id":"MDQ6VXNlcjEzNzIxNjA5","avatar_url":"https://avatars.githubusercontent.com/u/13721609?v=4","gravatar_id":"","url":"https://api.github.com/users/mboehm7","html_url":"https://github.com/mboehm7","followers_url":"https://api.github.com/users/mboehm7/followers","following_url":"https://api.github.com/users/mboehm7/following{/other_user}","gists_url":"https://api.github.com/users/mboehm7/gists{/gist_id}","starred_url":"https://api.github.com/users/mboehm7/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mboehm7/subscriptions","organizations_url":"https://api.github.com/users/mboehm7/orgs","repos_url":"https://api.github.com/users/mboehm7/repos","events_url":"https://api.github.com/users/mboehm7/events{/privacy}","received_events_url":"https://api.github.com/users/mboehm7/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-24T22:17:46Z","updated_at":"2017-01-24T22:17:46Z","author_association":"CONTRIBUTOR","body":"thanks Niketan - I do appreciate it. Could we keep as a requirement for future work on integrating Scala UDFs that there should be unique directory of functions (and their meta data) at optimization/runtime level, no matter through which API we're coming? I really believe this will make our lives much easier.","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/274957346/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/274957829","html_url":"https://github.com/apache/systemds/pull/355#issuecomment-274957829","issue_url":"https://api.github.com/repos/apache/systemds/issues/355","id":274957829,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NDk1NzgyOQ==","user":{"login":"niketanpansare","id":11686380,"node_id":"MDQ6VXNlcjExNjg2Mzgw","avatar_url":"https://avatars.githubusercontent.com/u/11686380?v=4","gravatar_id":"","url":"https://api.github.com/users/niketanpansare","html_url":"https://github.com/niketanpansare","followers_url":"https://api.github.com/users/niketanpansare/followers","following_url":"https://api.github.com/users/niketanpansare/following{/other_user}","gists_url":"https://api.github.com/users/niketanpansare/gists{/gist_id}","starred_url":"https://api.github.com/users/niketanpansare/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/niketanpansare/subscriptions","organizations_url":"https://api.github.com/users/niketanpansare/orgs","repos_url":"https://api.github.com/users/niketanpansare/repos","events_url":"https://api.github.com/users/niketanpansare/events{/privacy}","received_events_url":"https://api.github.com/users/niketanpansare/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-24T22:19:42Z","updated_at":"2017-01-24T22:19:42Z","author_association":"CONTRIBUTOR","body":"Sure, let's use this thread for discussion. I closed the PR as it introduces iterator based for loop and had not started any work on prefetching.","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/274957829/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/274958479","html_url":"https://github.com/apache/systemds/pull/357#issuecomment-274958479","issue_url":"https://api.github.com/repos/apache/systemds/issues/357","id":274958479,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NDk1ODQ3OQ==","user":{"login":"niketanpansare","id":11686380,"node_id":"MDQ6VXNlcjExNjg2Mzgw","avatar_url":"https://avatars.githubusercontent.com/u/11686380?v=4","gravatar_id":"","url":"https://api.github.com/users/niketanpansare","html_url":"https://github.com/niketanpansare","followers_url":"https://api.github.com/users/niketanpansare/followers","following_url":"https://api.github.com/users/niketanpansare/following{/other_user}","gists_url":"https://api.github.com/users/niketanpansare/gists{/gist_id}","starred_url":"https://api.github.com/users/niketanpansare/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/niketanpansare/subscriptions","organizations_url":"https://api.github.com/users/niketanpansare/orgs","repos_url":"https://api.github.com/users/niketanpansare/repos","events_url":"https://api.github.com/users/niketanpansare/events{/privacy}","received_events_url":"https://api.github.com/users/niketanpansare/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-24T22:22:15Z","updated_at":"2017-01-24T22:22:15Z","author_association":"CONTRIBUTOR","body":"Sure, @fschueler can you please update your design document to add the requirement ?","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/274958479/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/275203559","html_url":"https://github.com/apache/systemds/pull/359#issuecomment-275203559","issue_url":"https://api.github.com/repos/apache/systemds/issues/359","id":275203559,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NTIwMzU1OQ==","user":{"login":"fschueler","id":4837217,"node_id":"MDQ6VXNlcjQ4MzcyMTc=","avatar_url":"https://avatars.githubusercontent.com/u/4837217?v=4","gravatar_id":"","url":"https://api.github.com/users/fschueler","html_url":"https://github.com/fschueler","followers_url":"https://api.github.com/users/fschueler/followers","following_url":"https://api.github.com/users/fschueler/following{/other_user}","gists_url":"https://api.github.com/users/fschueler/gists{/gist_id}","starred_url":"https://api.github.com/users/fschueler/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fschueler/subscriptions","organizations_url":"https://api.github.com/users/fschueler/orgs","repos_url":"https://api.github.com/users/fschueler/repos","events_url":"https://api.github.com/users/fschueler/events{/privacy}","received_events_url":"https://api.github.com/users/fschueler/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-25T19:13:13Z","updated_at":"2017-01-25T19:13:13Z","author_association":"NONE","body":"Good catch! Could you squash the two commits into one to get rid of the merge commit?","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/275203559/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/275206586","html_url":"https://github.com/apache/systemds/pull/359#issuecomment-275206586","issue_url":"https://api.github.com/repos/apache/systemds/issues/359","id":275206586,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NTIwNjU4Ng==","user":{"login":"sandeep-n","id":9966925,"node_id":"MDQ6VXNlcjk5NjY5MjU=","avatar_url":"https://avatars.githubusercontent.com/u/9966925?v=4","gravatar_id":"","url":"https://api.github.com/users/sandeep-n","html_url":"https://github.com/sandeep-n","followers_url":"https://api.github.com/users/sandeep-n/followers","following_url":"https://api.github.com/users/sandeep-n/following{/other_user}","gists_url":"https://api.github.com/users/sandeep-n/gists{/gist_id}","starred_url":"https://api.github.com/users/sandeep-n/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sandeep-n/subscriptions","organizations_url":"https://api.github.com/users/sandeep-n/orgs","repos_url":"https://api.github.com/users/sandeep-n/repos","events_url":"https://api.github.com/users/sandeep-n/events{/privacy}","received_events_url":"https://api.github.com/users/sandeep-n/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-25T19:24:07Z","updated_at":"2017-01-25T19:24:07Z","author_association":"CONTRIBUTOR","body":"@fschueler Squashed. (Hope I did that right.)","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/275206586/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/275207169","html_url":"https://github.com/apache/systemds/pull/359#issuecomment-275207169","issue_url":"https://api.github.com/repos/apache/systemds/issues/359","id":275207169,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NTIwNzE2OQ==","user":{"login":"fschueler","id":4837217,"node_id":"MDQ6VXNlcjQ4MzcyMTc=","avatar_url":"https://avatars.githubusercontent.com/u/4837217?v=4","gravatar_id":"","url":"https://api.github.com/users/fschueler","html_url":"https://github.com/fschueler","followers_url":"https://api.github.com/users/fschueler/followers","following_url":"https://api.github.com/users/fschueler/following{/other_user}","gists_url":"https://api.github.com/users/fschueler/gists{/gist_id}","starred_url":"https://api.github.com/users/fschueler/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fschueler/subscriptions","organizations_url":"https://api.github.com/users/fschueler/orgs","repos_url":"https://api.github.com/users/fschueler/repos","events_url":"https://api.github.com/users/fschueler/events{/privacy}","received_events_url":"https://api.github.com/users/fschueler/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-25T19:26:15Z","updated_at":"2017-01-25T19:26:15Z","author_association":"NONE","body":"Yes, perfect, thank you! ","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/275207169/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/275225993","html_url":"https://github.com/apache/systemds/pull/357#issuecomment-275225993","issue_url":"https://api.github.com/repos/apache/systemds/issues/357","id":275225993,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NTIyNTk5Mw==","user":{"login":"fschueler","id":4837217,"node_id":"MDQ6VXNlcjQ4MzcyMTc=","avatar_url":"https://avatars.githubusercontent.com/u/4837217?v=4","gravatar_id":"","url":"https://api.github.com/users/fschueler","html_url":"https://github.com/fschueler","followers_url":"https://api.github.com/users/fschueler/followers","following_url":"https://api.github.com/users/fschueler/following{/other_user}","gists_url":"https://api.github.com/users/fschueler/gists{/gist_id}","starred_url":"https://api.github.com/users/fschueler/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fschueler/subscriptions","organizations_url":"https://api.github.com/users/fschueler/orgs","repos_url":"https://api.github.com/users/fschueler/repos","events_url":"https://api.github.com/users/fschueler/events{/privacy}","received_events_url":"https://api.github.com/users/fschueler/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-25T20:38:14Z","updated_at":"2017-01-25T20:38:14Z","author_association":"NONE","body":"I updated the document. I see that your approach is still in our documentation and probably should be removed for now.","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/275225993/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/275226612","html_url":"https://github.com/apache/systemds/pull/357#issuecomment-275226612","issue_url":"https://api.github.com/repos/apache/systemds/issues/357","id":275226612,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NTIyNjYxMg==","user":{"login":"niketanpansare","id":11686380,"node_id":"MDQ6VXNlcjExNjg2Mzgw","avatar_url":"https://avatars.githubusercontent.com/u/11686380?v=4","gravatar_id":"","url":"https://api.github.com/users/niketanpansare","html_url":"https://github.com/niketanpansare","followers_url":"https://api.github.com/users/niketanpansare/followers","following_url":"https://api.github.com/users/niketanpansare/following{/other_user}","gists_url":"https://api.github.com/users/niketanpansare/gists{/gist_id}","starred_url":"https://api.github.com/users/niketanpansare/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/niketanpansare/subscriptions","organizations_url":"https://api.github.com/users/niketanpansare/orgs","repos_url":"https://api.github.com/users/niketanpansare/repos","events_url":"https://api.github.com/users/niketanpansare/events{/privacy}","received_events_url":"https://api.github.com/users/niketanpansare/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-25T20:40:48Z","updated_at":"2017-01-25T20:40:48Z","author_association":"CONTRIBUTOR","body":"I will push the gh branch today.","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/275226612/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/275229624","html_url":"https://github.com/apache/systemds/pull/358#issuecomment-275229624","issue_url":"https://api.github.com/repos/apache/systemds/issues/358","id":275229624,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NTIyOTYyNA==","user":{"login":"nakul02","id":5394361,"node_id":"MDQ6VXNlcjUzOTQzNjE=","avatar_url":"https://avatars.githubusercontent.com/u/5394361?v=4","gravatar_id":"","url":"https://api.github.com/users/nakul02","html_url":"https://github.com/nakul02","followers_url":"https://api.github.com/users/nakul02/followers","following_url":"https://api.github.com/users/nakul02/following{/other_user}","gists_url":"https://api.github.com/users/nakul02/gists{/gist_id}","starred_url":"https://api.github.com/users/nakul02/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nakul02/subscriptions","organizations_url":"https://api.github.com/users/nakul02/orgs","repos_url":"https://api.github.com/users/nakul02/repos","events_url":"https://api.github.com/users/nakul02/events{/privacy}","received_events_url":"https://api.github.com/users/nakul02/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-25T20:53:28Z","updated_at":"2017-01-25T20:53:28Z","author_association":"MEMBER","body":"LGTM :+1:","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/275229624/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/systemds/issues/comments/275229635","html_url":"https://github.com/apache/systemds/pull/360#issuecomment-275229635","issue_url":"https://api.github.com/repos/apache/systemds/issues/360","id":275229635,"node_id":"MDEyOklzc3VlQ29tbWVudDI3NTIyOTYzNQ==","user":{"login":"fschueler","id":4837217,"node_id":"MDQ6VXNlcjQ4MzcyMTc=","avatar_url":"https://avatars.githubusercontent.com/u/4837217?v=4","gravatar_id":"","url":"https://api.github.com/users/fschueler","html_url":"https://github.com/fschueler","followers_url":"https://api.github.com/users/fschueler/followers","following_url":"https://api.github.com/users/fschueler/following{/other_user}","gists_url":"https://api.github.com/users/fschueler/gists{/gist_id}","starred_url":"https://api.github.com/users/fschueler/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/fschueler/subscriptions","organizations_url":"https://api.github.com/users/fschueler/orgs","repos_url":"https://api.github.com/users/fschueler/repos","events_url":"https://api.github.com/users/fschueler/events{/privacy}","received_events_url":"https://api.github.com/users/fschueler/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2017-01-25T20:53:32Z","updated_at":"2017-01-25T20:53:32Z","author_association":"NONE","body":"I think you forgot the `MLContext.getMLMatrix(...)` method?","reactions":{"url":"https://api.github.com/repos/apache/systemds/issues/comments/275229635/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]