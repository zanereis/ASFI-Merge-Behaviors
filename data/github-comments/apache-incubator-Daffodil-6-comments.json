[{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/765410234","html_url":"https://github.com/apache/daffodil/pull/477#issuecomment-765410234","issue_url":"https://api.github.com/repos/apache/daffodil/issues/477","id":765410234,"node_id":"MDEyOklzc3VlQ29tbWVudDc2NTQxMDIzNA==","user":{"login":"jw3","id":1545372,"node_id":"MDQ6VXNlcjE1NDUzNzI=","avatar_url":"https://avatars.githubusercontent.com/u/1545372?v=4","gravatar_id":"","url":"https://api.github.com/users/jw3","html_url":"https://github.com/jw3","followers_url":"https://api.github.com/users/jw3/followers","following_url":"https://api.github.com/users/jw3/following{/other_user}","gists_url":"https://api.github.com/users/jw3/gists{/gist_id}","starred_url":"https://api.github.com/users/jw3/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jw3/subscriptions","organizations_url":"https://api.github.com/users/jw3/orgs","repos_url":"https://api.github.com/users/jw3/repos","events_url":"https://api.github.com/users/jw3/events{/privacy}","received_events_url":"https://api.github.com/users/jw3/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-01-22T13:50:09Z","updated_at":"2021-01-22T13:50:09Z","author_association":"MEMBER","body":"Ill take a look at that failure.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/765410234/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/765474324","html_url":"https://github.com/apache/daffodil/pull/479#issuecomment-765474324","issue_url":"https://api.github.com/repos/apache/daffodil/issues/479","id":765474324,"node_id":"MDEyOklzc3VlQ29tbWVudDc2NTQ3NDMyNA==","user":{"login":"jw3","id":1545372,"node_id":"MDQ6VXNlcjE1NDUzNzI=","avatar_url":"https://avatars.githubusercontent.com/u/1545372?v=4","gravatar_id":"","url":"https://api.github.com/users/jw3","html_url":"https://github.com/jw3","followers_url":"https://api.github.com/users/jw3/followers","following_url":"https://api.github.com/users/jw3/following{/other_user}","gists_url":"https://api.github.com/users/jw3/gists{/gist_id}","starred_url":"https://api.github.com/users/jw3/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jw3/subscriptions","organizations_url":"https://api.github.com/users/jw3/orgs","repos_url":"https://api.github.com/users/jw3/repos","events_url":"https://api.github.com/users/jw3/events{/privacy}","received_events_url":"https://api.github.com/users/jw3/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-01-22T15:14:37Z","updated_at":"2021-01-22T15:15:13Z","author_association":"MEMBER","body":"It appeared that getInput would allow additional characters to be returned after the match position.\r\n\r\nI had previously avoided using getBefore  because it consumed the ec.  Solved that using a look behind in the regex.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/765474324/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/765544590","html_url":"https://github.com/apache/daffodil/pull/479#issuecomment-765544590","issue_url":"https://api.github.com/repos/apache/daffodil/issues/479","id":765544590,"node_id":"MDEyOklzc3VlQ29tbWVudDc2NTU0NDU5MA==","user":{"login":"jw3","id":1545372,"node_id":"MDQ6VXNlcjE1NDUzNzI=","avatar_url":"https://avatars.githubusercontent.com/u/1545372?v=4","gravatar_id":"","url":"https://api.github.com/users/jw3","html_url":"https://github.com/jw3","followers_url":"https://api.github.com/users/jw3/followers","following_url":"https://api.github.com/users/jw3/following{/other_user}","gists_url":"https://api.github.com/users/jw3/gists{/gist_id}","starred_url":"https://api.github.com/users/jw3/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jw3/subscriptions","organizations_url":"https://api.github.com/users/jw3/orgs","repos_url":"https://api.github.com/users/jw3/repos","events_url":"https://api.github.com/users/jw3/events{/privacy}","received_events_url":"https://api.github.com/users/jw3/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-01-22T16:47:16Z","updated_at":"2021-01-22T17:03:09Z","author_association":"MEMBER","body":"> Probably CRLF vs. LF related. I think of '\\n' as being LF, not CRLF. I think modern regex has \\R which is \\n or \\r\\n.\r\n\r\nYeah I wonder if it is the filter that is applied to the shell\r\n\r\n`.withInputFilters(replaceInString(\"\\r\\n\", \"\\n\"))`\r\n\r\nwhere the regex `$` would be platform specific `\\r\\n` and that filter changes the stream before it gets to the match.\r\n\r\nNothing to do here right now.  Needs some experimentation, it can be addressed in the CLI integrations ticket.  Ill document that thought on the line in question here..","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/765544590/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/765557490","html_url":"https://github.com/apache/daffodil/pull/479#issuecomment-765557490","issue_url":"https://api.github.com/repos/apache/daffodil/issues/479","id":765557490,"node_id":"MDEyOklzc3VlQ29tbWVudDc2NTU1NzQ5MA==","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-01-22T17:05:39Z","updated_at":"2021-01-22T17:05:39Z","author_association":"MEMBER","body":"+1 thanks for looking into this so quickly!","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/765557490/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/765577031","html_url":"https://github.com/apache/daffodil/pull/479#issuecomment-765577031","issue_url":"https://api.github.com/repos/apache/daffodil/issues/479","id":765577031,"node_id":"MDEyOklzc3VlQ29tbWVudDc2NTU3NzAzMQ==","user":{"login":"jw3","id":1545372,"node_id":"MDQ6VXNlcjE1NDUzNzI=","avatar_url":"https://avatars.githubusercontent.com/u/1545372?v=4","gravatar_id":"","url":"https://api.github.com/users/jw3","html_url":"https://github.com/jw3","followers_url":"https://api.github.com/users/jw3/followers","following_url":"https://api.github.com/users/jw3/following{/other_user}","gists_url":"https://api.github.com/users/jw3/gists{/gist_id}","starred_url":"https://api.github.com/users/jw3/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jw3/subscriptions","organizations_url":"https://api.github.com/users/jw3/orgs","repos_url":"https://api.github.com/users/jw3/repos","events_url":"https://api.github.com/users/jw3/events{/privacy}","received_events_url":"https://api.github.com/users/jw3/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-01-22T17:41:04Z","updated_at":"2021-01-22T17:41:04Z","author_association":"MEMBER","body":"Sure thing.  Hate to break the build, especially with intermittent things, now gun-shy of CI runs  :fearful: \r\n\r\nSpeaking of... looks like we are at 14 minutes of generating a coverage report...  ","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/765577031/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/765582172","html_url":"https://github.com/apache/daffodil/pull/479#issuecomment-765582172","issue_url":"https://api.github.com/repos/apache/daffodil/issues/479","id":765582172,"node_id":"MDEyOklzc3VlQ29tbWVudDc2NTU4MjE3Mg==","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-01-22T17:50:21Z","updated_at":"2021-01-22T17:50:21Z","author_association":"MEMBER","body":"Not to worry, this isn't the first time we've had intermitting errors cause build failures. Glad this one was at least reproducable. That's often difficult with this CI failures.\r\n\r\nThough, looks like something is stuck in either github actions or in the coverage report. I have no idea what the issue could be, but it's almost certainly not a Daffodil issue. Unfortunately, these errors aren't all that uncommon either. I usually just cancel the workflow and re-run.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/765582172/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/765737882","html_url":"https://github.com/apache/daffodil/pull/480#issuecomment-765737882","issue_url":"https://api.github.com/repos/apache/daffodil/issues/480","id":765737882,"node_id":"MDEyOklzc3VlQ29tbWVudDc2NTczNzg4Mg==","user":{"login":"bsloane1650","id":1839120,"node_id":"MDQ6VXNlcjE4MzkxMjA=","avatar_url":"https://avatars.githubusercontent.com/u/1839120?v=4","gravatar_id":"","url":"https://api.github.com/users/bsloane1650","html_url":"https://github.com/bsloane1650","followers_url":"https://api.github.com/users/bsloane1650/followers","following_url":"https://api.github.com/users/bsloane1650/following{/other_user}","gists_url":"https://api.github.com/users/bsloane1650/gists{/gist_id}","starred_url":"https://api.github.com/users/bsloane1650/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bsloane1650/subscriptions","organizations_url":"https://api.github.com/users/bsloane1650/orgs","repos_url":"https://api.github.com/users/bsloane1650/repos","events_url":"https://api.github.com/users/bsloane1650/events{/privacy}","received_events_url":"https://api.github.com/users/bsloane1650/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-01-22T23:14:54Z","updated_at":"2021-01-22T23:14:54Z","author_association":"CONTRIBUTOR","body":"Some high level comments:\r\n\r\n1) It feels like we should ship schema for our self defined ZIP header type, so the user schema can be something like:\r\n\r\n```\r\n<xs:element name=\"zipEntry\" maxOccurs=\"unbounded\" dfdl:occursCountKind=\"implicit\">\r\n  <xs:complexType>\r\n    <xs:sequence>\r\n      <xs:element name=\"header\" type=\"dfdlx:ZipHeader\"/>\r\n       ...\r\n    </xs:sequence>\r\n  </xs:complexType>\r\n</xs:element>\r\n```\r\n\r\nIn addition to being generally easier for the user, this should also allow us to make changes with a bit more backwards compatibility.\r\n\r\nIt also feels wrong that we are passing the metadata in-band in the first place; but I don't see any way around that without redesigning DFDL somewhat.\r\n\r\n2) Silently dropping deleted entries seems like a limitation to me as well. From a DFDL interface standpoint supporting deleted entries is straightforward: just add a boolean field to the entry header indicating if the file was deleted. From an implementation standpoint, this probably means we would need to roll our own ZIP implementation.\r\nNot something we need to address, but worth explicitly listing as a limitation.\r\n\r\n3) Similar to (2), we silently drop dead space from the ZIP file. Probably less even less important than (2), but still a limitation if anyone wants to use this for forensic purposes.\r\n\r\n4) If I understand the ZIP format correctly, there is a global comment in the that applies to the entire ZIP which we do not expose. We may want to include a global ZIP header before the first entry header.\r\n\r\n5) A maliciously crafted ZIP file might be able to cause all sorts of interesting issues.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/765737882/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/766999733","html_url":"https://github.com/apache/daffodil/pull/481#issuecomment-766999733","issue_url":"https://api.github.com/repos/apache/daffodil/issues/481","id":766999733,"node_id":"MDEyOklzc3VlQ29tbWVudDc2Njk5OTczMw==","user":{"login":"regetom","id":11149210,"node_id":"MDQ6VXNlcjExMTQ5MjEw","avatar_url":"https://avatars.githubusercontent.com/u/11149210?v=4","gravatar_id":"","url":"https://api.github.com/users/regetom","html_url":"https://github.com/regetom","followers_url":"https://api.github.com/users/regetom/followers","following_url":"https://api.github.com/users/regetom/following{/other_user}","gists_url":"https://api.github.com/users/regetom/gists{/gist_id}","starred_url":"https://api.github.com/users/regetom/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/regetom/subscriptions","organizations_url":"https://api.github.com/users/regetom/orgs","repos_url":"https://api.github.com/users/regetom/repos","events_url":"https://api.github.com/users/regetom/events{/privacy}","received_events_url":"https://api.github.com/users/regetom/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-01-25T17:55:00Z","updated_at":"2021-01-25T17:55:00Z","author_association":"NONE","body":"I am a newbie to Daffodil and Scala.  I'm not sure if this was the best way to handle this request.  Also not sure if I should have had the if statement wrap the other 4 strings in the function.  Any feedback or suggestions are welcome.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/766999733/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/767008815","html_url":"https://github.com/apache/daffodil/pull/481#issuecomment-767008815","issue_url":"https://api.github.com/repos/apache/daffodil/issues/481","id":767008815,"node_id":"MDEyOklzc3VlQ29tbWVudDc2NzAwODgxNQ==","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-01-25T18:08:58Z","updated_at":"2021-01-25T18:08:58Z","author_association":"MEMBER","body":"Welcome!\r\n\r\nThough, it looks like this pull request only includes ``.idea/`` files created by IntelliJ. Did you forget to add your changes to the scala files?\r\n\r\nAlso, as a rule, we don't commit files created by IDEs so we don't have to keep track of everyone's unique editor configurations. Instead, we recommend that you globally ignore those files so you don't accidentally commit them. The default git ignore files to do this are ``$XDG_CONFIG_HOME/git/ignore`` or ``$HOME/.config/git/ignore``. So you could just add ``.idea`` to one of those files.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/767008815/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/767492246","html_url":"https://github.com/apache/daffodil/pull/481#issuecomment-767492246","issue_url":"https://api.github.com/repos/apache/daffodil/issues/481","id":767492246,"node_id":"MDEyOklzc3VlQ29tbWVudDc2NzQ5MjI0Ng==","user":{"login":"regetom","id":11149210,"node_id":"MDQ6VXNlcjExMTQ5MjEw","avatar_url":"https://avatars.githubusercontent.com/u/11149210?v=4","gravatar_id":"","url":"https://api.github.com/users/regetom","html_url":"https://github.com/regetom","followers_url":"https://api.github.com/users/regetom/followers","following_url":"https://api.github.com/users/regetom/following{/other_user}","gists_url":"https://api.github.com/users/regetom/gists{/gist_id}","starred_url":"https://api.github.com/users/regetom/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/regetom/subscriptions","organizations_url":"https://api.github.com/users/regetom/orgs","repos_url":"https://api.github.com/users/regetom/repos","events_url":"https://api.github.com/users/regetom/events{/privacy}","received_events_url":"https://api.github.com/users/regetom/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-01-26T11:50:11Z","updated_at":"2021-01-26T11:50:11Z","author_association":"NONE","body":"Not sure why the Run Rat Check ran 5 hours 48 minutes and 49 seconds and had to be canceled for Java15, Scala2.12.11, Windows-latest test. All other Run RAT Check tests completed in less than 34 seconds.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/767492246/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/768277769","html_url":"https://github.com/apache/daffodil/pull/481#issuecomment-768277769","issue_url":"https://api.github.com/repos/apache/daffodil/issues/481","id":768277769,"node_id":"MDEyOklzc3VlQ29tbWVudDc2ODI3Nzc2OQ==","user":{"login":"regetom","id":11149210,"node_id":"MDQ6VXNlcjExMTQ5MjEw","avatar_url":"https://avatars.githubusercontent.com/u/11149210?v=4","gravatar_id":"","url":"https://api.github.com/users/regetom","html_url":"https://github.com/regetom","followers_url":"https://api.github.com/users/regetom/followers","following_url":"https://api.github.com/users/regetom/following{/other_user}","gists_url":"https://api.github.com/users/regetom/gists{/gist_id}","starred_url":"https://api.github.com/users/regetom/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/regetom/subscriptions","organizations_url":"https://api.github.com/users/regetom/orgs","repos_url":"https://api.github.com/users/regetom/repos","events_url":"https://api.github.com/users/regetom/events{/privacy}","received_events_url":"https://api.github.com/users/regetom/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-01-27T13:15:36Z","updated_at":"2021-01-27T13:15:36Z","author_association":"NONE","body":"I wasn't sure how to accomplish the even/odd requirement with regex, but I did come up with this:  context.schemaDefinitionUnless((!raw.contains(\"%NL;\")) && !(raw.count(_ == '%') % 2 ==0)), str = \"Property dfdl:%s cannot contain %%NL;\", proprName)\r\n\r\nI tested the results with this simple scala snippet:\r\nobject DfdlTest {\r\n  def main(args: Array[String]) {\r\n    val raw1 = \"%%%NL\";\r\n    val raw2 = \"%%%%NL\";\r\n  \r\n    if(!(raw1.count(_== '%') % 2 == 0) && !(raw1.contains(\"%NL;\")))\r\n      println(\"raw1 = \" + raw1 + \" allowed\")\r\n    else\r\n      println(\"raw1 = \" + raw1 + \" not allowed\")\r\n\r\n    if(!(raw2.count(_== '%') % 2 == 0) && !(raw2.contains(\"%NL;\")))\r\n      println(\"raw2 = \" + raw2 + \" allowed\")\r\n    else\r\n      println(\"raw2 = \" + raw2 + \" not allowed\")\r\n  }\r\n}\r\nLet me know if this would be an acceptable solution or if I should do some further research toward a regex solution.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/768277769/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/768295894","html_url":"https://github.com/apache/daffodil/pull/481#issuecomment-768295894","issue_url":"https://api.github.com/repos/apache/daffodil/issues/481","id":768295894,"node_id":"MDEyOklzc3VlQ29tbWVudDc2ODI5NTg5NA==","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-01-27T13:46:52Z","updated_at":"2021-01-27T13:46:52Z","author_association":"MEMBER","body":"I think an issue with that approach is that you can have multiple character classes in these property strings. For example:\r\n```xml\r\n<xs:element ... dfdl:textStandardZeroRep=\"%SP;%NL;\" />\r\n```\r\nThis is a space character followed by a newline. This shouldn't be allowed because ``%NL;`` is an unescaped newline, but in this case the count of ``%``'s is even so will be incorrectly allowed. So it's not just the count of ``%``'s that matters, but the count of all ``%``'s immediately preceeding an ``%NL;``. I think the following regex will do that (though, not heavily tested):\r\n```regex\r\n(^|[^%])(%%)*%NL;\r\n```\r\nSo first we look for either the beginning of the string or a non-``%`` character with ``(^|[^%])``. Following that, we look for an even number of ``%``'s with ``(%%)*``. And finally following that we look for a ``%NL;``. I think that should match any ``%NL;`` not immediately preceeded by an even number of ``%``'s, in other words, an unescaped ``%NL;``.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/768295894/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/768342231","html_url":"https://github.com/apache/daffodil/pull/481#issuecomment-768342231","issue_url":"https://api.github.com/repos/apache/daffodil/issues/481","id":768342231,"node_id":"MDEyOklzc3VlQ29tbWVudDc2ODM0MjIzMQ==","user":{"login":"mbeckerle","id":1524099,"node_id":"MDQ6VXNlcjE1MjQwOTk=","avatar_url":"https://avatars.githubusercontent.com/u/1524099?v=4","gravatar_id":"","url":"https://api.github.com/users/mbeckerle","html_url":"https://github.com/mbeckerle","followers_url":"https://api.github.com/users/mbeckerle/followers","following_url":"https://api.github.com/users/mbeckerle/following{/other_user}","gists_url":"https://api.github.com/users/mbeckerle/gists{/gist_id}","starred_url":"https://api.github.com/users/mbeckerle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbeckerle/subscriptions","organizations_url":"https://api.github.com/users/mbeckerle/orgs","repos_url":"https://api.github.com/users/mbeckerle/repos","events_url":"https://api.github.com/users/mbeckerle/events{/privacy}","received_events_url":"https://api.github.com/users/mbeckerle/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-01-27T14:57:40Z","updated_at":"2021-01-27T14:57:40Z","author_association":"CONTRIBUTOR","body":"Yeah, regex are really hard without myregextester, and the explain regex site tools. \r\n\r\nHere's a regex that matches even number of % followed by single % followed by either NL or ES followed by \";\"\r\nThat is, it matches an \"unescaped NL\" or \"unescaped ES\".\r\n\r\n```\r\n(?:%%)*(%(?:NL|ES)\\;)\r\n```\r\nYou can of course generalize the NL|ES to the set of DFDL entities you want it to exclude. \r\n\r\nHere's a test string:\r\n```\r\n%NL;abcd%%ES;efgh%NLijkl%%%%%NL;mnop\r\n```\r\nAnd here's the matchAll output as described by myregextester.com\r\n```\r\n$matches Array:\r\n(\r\n    [0] => Array\r\n        (\r\n            [0] => %NL;\r\n            [1] => %ES;\r\n            [2] => %%%%%NL;\r\n        )\r\n\r\n    [1] => Array\r\n        (\r\n            [0] => %NL;\r\n            [1] => %ES;\r\n            [2] => %NL;\r\n        )\r\n\r\n)\r\n```\r\nAnd here's the explanation of this per \r\nhttp://rick.measham.id.au/paste/explain.pl?regex=%28%3F%3A%25%25%29*%28%25%28%3F%3ANL%7CES%29%5C%3B%29\r\n```\r\nNODE                     EXPLANATION\r\n--------------------------------------------------------------------------------\r\n  (?:                      group, but do not capture (0 or more times\r\n                           (matching the most amount possible)):\r\n--------------------------------------------------------------------------------\r\n    %%                       '%%'\r\n--------------------------------------------------------------------------------\r\n  )*                       end of grouping\r\n--------------------------------------------------------------------------------\r\n  (                        group and capture to \\1:\r\n--------------------------------------------------------------------------------\r\n    %                        '%'\r\n--------------------------------------------------------------------------------\r\n    (?:                      group, but do not capture:\r\n--------------------------------------------------------------------------------\r\n      NL                       'NL'\r\n--------------------------------------------------------------------------------\r\n     |                        OR\r\n--------------------------------------------------------------------------------\r\n      ES                       'ES'\r\n--------------------------------------------------------------------------------\r\n    )                        end of grouping\r\n--------------------------------------------------------------------------------\r\n    \\;                       ';'\r\n--------------------------------------------------------------------------------\r\n  )                        end of \\1\r\n```","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/768342231/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/768371619","html_url":"https://github.com/apache/daffodil/pull/481#issuecomment-768371619","issue_url":"https://api.github.com/repos/apache/daffodil/issues/481","id":768371619,"node_id":"MDEyOklzc3VlQ29tbWVudDc2ODM3MTYxOQ==","user":{"login":"regetom","id":11149210,"node_id":"MDQ6VXNlcjExMTQ5MjEw","avatar_url":"https://avatars.githubusercontent.com/u/11149210?v=4","gravatar_id":"","url":"https://api.github.com/users/regetom","html_url":"https://github.com/regetom","followers_url":"https://api.github.com/users/regetom/followers","following_url":"https://api.github.com/users/regetom/following{/other_user}","gists_url":"https://api.github.com/users/regetom/gists{/gist_id}","starred_url":"https://api.github.com/users/regetom/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/regetom/subscriptions","organizations_url":"https://api.github.com/users/regetom/orgs","repos_url":"https://api.github.com/users/regetom/repos","events_url":"https://api.github.com/users/regetom/events{/privacy}","received_events_url":"https://api.github.com/users/regetom/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-01-27T15:39:02Z","updated_at":"2021-01-27T15:39:02Z","author_association":"NONE","body":"Results from regex: (^|[^%])(%%)*%NL\r\n![image](https://user-images.githubusercontent.com/11149210/106014424-7be11000-608b-11eb-8187-91ada67136a7.png)\r\n\r\nResults from regex:  (?:%%)*(%(?:NL|ES)\\;)\r\n![image](https://user-images.githubusercontent.com/11149210/106014665-afbc3580-608b-11eb-91c3-b3ffd44c4b4e.png)\r\n\r\nPossible change:\r\ncontext.schemaDefinitionUnless((\"(^|[^%])(%%)*%NL\".r findFirstIn raw) != None)), str = \"Property dfdl:%s cannot contain %%NL;\", proprName)\r\n\r\nScala Test:\r\nimport scala.util.matching.Regex\r\n\r\nobject DfdlTest {\r\n  def main(args: Array[String]) {\r\n    val rawA = Array(\"%SP,%NL\",\"%%SP,%%NL\",\"%SP,%%NL\",\"%%SP,%%%NL\",\"%SP,%%%NL\",\"%%SP,%%%%NL\",\"%NL\",\"%%NL\",\"%NL;abcd%%ES;efgh%NLijkl%%%%%NL;mnop\")\r\n\r\n    for( raw <- rawA ){\r\n      println(raw + \" FFI Result = \" + (\"(^|[^%])(%%)*%NL\".r findFirstIn raw))\r\n\r\n      if((\"(^|[^%])(%%)*%NL\".r findFirstIn raw) != None)\r\n        println(raw + \" send to SDE\")\r\n      else\r\n        println(raw + \" allowed\")\r\n    }\r\n  }\r\n}\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/768371619/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/768374198","html_url":"https://github.com/apache/daffodil/pull/481#issuecomment-768374198","issue_url":"https://api.github.com/repos/apache/daffodil/issues/481","id":768374198,"node_id":"MDEyOklzc3VlQ29tbWVudDc2ODM3NDE5OA==","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-01-27T15:42:54Z","updated_at":"2021-01-27T15:42:54Z","author_association":"MEMBER","body":"Mike, nice improvement, the non-capture group stuff is nice and makes it easy to find and extract all unescaped character classes in a single regex. Could avoid a lot of duplication. Though, I think in your example the ``%ES;`` shouldn't be matched since that percent is escaped? The ``(^|[^%])`` trick should fix that I think? Adding that in and making it a non-capture group gives this regex:\r\n```\r\n(?:^|[^%])(?:%%)*(%(?:NL|ES)\\;)\r\n```\r\nIt's a bit ugly, but a single regex to capture all relevant information is nice, and documenting this isn't too terrible.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/768374198/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/768384545","html_url":"https://github.com/apache/daffodil/pull/481#issuecomment-768384545","issue_url":"https://api.github.com/repos/apache/daffodil/issues/481","id":768384545,"node_id":"MDEyOklzc3VlQ29tbWVudDc2ODM4NDU0NQ==","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-01-27T15:57:16Z","updated_at":"2021-01-27T15:57:16Z","author_association":"MEMBER","body":"@regetom yep, I think something like that is the right approach. Note that with Mike's technique of finding all illegal character classes in a single regex, I think we could use ``findAllIn`` instead of just finding the first with ``findFirstIn``. That way we can gather all the capture groups and output an error that includes all of them rather than just erroring on the first one found, maybe something like this (untested):\r\n\r\n```scala\r\nval matchedGroups = regex.findAllIn(raw).map { _.group(1) }\r\nschemaDefinitionUnless(\r\n  matchedGroups.isEmpty,\r\n  \"Property dfdl:%s contains disallowed character classes: %s\",\r\n  propName,\r\n  matchedGroups.mkString(\", \"))\r\n```","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/768384545/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/768386004","html_url":"https://github.com/apache/daffodil/pull/481#issuecomment-768386004","issue_url":"https://api.github.com/repos/apache/daffodil/issues/481","id":768386004,"node_id":"MDEyOklzc3VlQ29tbWVudDc2ODM4NjAwNA==","user":{"login":"regetom","id":11149210,"node_id":"MDQ6VXNlcjExMTQ5MjEw","avatar_url":"https://avatars.githubusercontent.com/u/11149210?v=4","gravatar_id":"","url":"https://api.github.com/users/regetom","html_url":"https://github.com/regetom","followers_url":"https://api.github.com/users/regetom/followers","following_url":"https://api.github.com/users/regetom/following{/other_user}","gists_url":"https://api.github.com/users/regetom/gists{/gist_id}","starred_url":"https://api.github.com/users/regetom/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/regetom/subscriptions","organizations_url":"https://api.github.com/users/regetom/orgs","repos_url":"https://api.github.com/users/regetom/repos","events_url":"https://api.github.com/users/regetom/events{/privacy}","received_events_url":"https://api.github.com/users/regetom/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-01-27T15:59:21Z","updated_at":"2021-01-27T15:59:21Z","author_association":"NONE","body":"when  I use (?:^|[^%])(?:%%)*(%(?:NL|ES)\\;) I get this:\r\n![image](https://user-images.githubusercontent.com/11149210/106017335-599cc180-608e-11eb-9f64-39574bfc474f.png)\r\nThis works though (\"(?:^|[^%])(?:%%)*(%(?:NL|ES))\r\n![image](https://user-images.githubusercontent.com/11149210/106017634-a7b1c500-608e-11eb-8d09-2701197306e0.png)\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/768386004/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/768389313","html_url":"https://github.com/apache/daffodil/pull/481#issuecomment-768389313","issue_url":"https://api.github.com/repos/apache/daffodil/issues/481","id":768389313,"node_id":"MDEyOklzc3VlQ29tbWVudDc2ODM4OTMxMw==","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-01-27T16:03:59Z","updated_at":"2021-01-27T16:03:59Z","author_association":"MEMBER","body":"I think that semicolon just shouldn't be escaped. That's not a special character in regex so doesn't need escaping:\r\n```\r\n(?:^|[^%])(?:%%)*(%(?:NL|ES);)\r\n```","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/768389313/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/768393256","html_url":"https://github.com/apache/daffodil/pull/481#issuecomment-768393256","issue_url":"https://api.github.com/repos/apache/daffodil/issues/481","id":768393256,"node_id":"MDEyOklzc3VlQ29tbWVudDc2ODM5MzI1Ng==","user":{"login":"regetom","id":11149210,"node_id":"MDQ6VXNlcjExMTQ5MjEw","avatar_url":"https://avatars.githubusercontent.com/u/11149210?v=4","gravatar_id":"","url":"https://api.github.com/users/regetom","html_url":"https://github.com/regetom","followers_url":"https://api.github.com/users/regetom/followers","following_url":"https://api.github.com/users/regetom/following{/other_user}","gists_url":"https://api.github.com/users/regetom/gists{/gist_id}","starred_url":"https://api.github.com/users/regetom/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/regetom/subscriptions","organizations_url":"https://api.github.com/users/regetom/orgs","repos_url":"https://api.github.com/users/regetom/repos","events_url":"https://api.github.com/users/regetom/events{/privacy}","received_events_url":"https://api.github.com/users/regetom/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-01-27T16:10:10Z","updated_at":"2021-01-27T16:10:10Z","author_association":"NONE","body":"If I use this (?:^|[^%])(?:%%)*(%(?:NL|ES);), only the last item in the test comes back with Some().\r\n![image](https://user-images.githubusercontent.com/11149210/106018784-eac06800-608f-11eb-971c-6d727cb39db5.png)\r\nIs that the desired behavior? Will there always be a ';'?","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/768393256/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/768397840","html_url":"https://github.com/apache/daffodil/pull/481#issuecomment-768397840","issue_url":"https://api.github.com/repos/apache/daffodil/issues/481","id":768397840,"node_id":"MDEyOklzc3VlQ29tbWVudDc2ODM5Nzg0MA==","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-01-27T16:16:50Z","updated_at":"2021-01-27T16:16:50Z","author_association":"MEMBER","body":"Yes, there will also be a semicolon for a character class to be seen as a character class. If you just had something like ``%NLfoo``, you'll get a different error somewhere else that's something like ``found a ` that isn't followed by a valid character class``. That check happens elsewhere, so you shouldn't have to worry about that in this check. For this regex, you can assume the semicolon always exists since we're only looking for known character classes that aren't allowed.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/768397840/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/768404665","html_url":"https://github.com/apache/daffodil/pull/481#issuecomment-768404665","issue_url":"https://api.github.com/repos/apache/daffodil/issues/481","id":768404665,"node_id":"MDEyOklzc3VlQ29tbWVudDc2ODQwNDY2NQ==","user":{"login":"mbeckerle","id":1524099,"node_id":"MDQ6VXNlcjE1MjQwOTk=","avatar_url":"https://avatars.githubusercontent.com/u/1524099?v=4","gravatar_id":"","url":"https://api.github.com/users/mbeckerle","html_url":"https://github.com/mbeckerle","followers_url":"https://api.github.com/users/mbeckerle/followers","following_url":"https://api.github.com/users/mbeckerle/following{/other_user}","gists_url":"https://api.github.com/users/mbeckerle/gists{/gist_id}","starred_url":"https://api.github.com/users/mbeckerle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbeckerle/subscriptions","organizations_url":"https://api.github.com/users/mbeckerle/orgs","repos_url":"https://api.github.com/users/mbeckerle/repos","events_url":"https://api.github.com/users/mbeckerle/events{/privacy}","received_events_url":"https://api.github.com/users/mbeckerle/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-01-27T16:26:56Z","updated_at":"2021-01-27T16:26:56Z","author_association":"CONTRIBUTOR","body":"Suggestion for not only this PR, but in the future, I think we should cut/paste the result of the regex explain into comments in the code to document the intention of the regex. \r\n\r\nThe regex explanation is from http://rick.measham.id.au/paste/explain.pl","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/768404665/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/768413213","html_url":"https://github.com/apache/daffodil/pull/481#issuecomment-768413213","issue_url":"https://api.github.com/repos/apache/daffodil/issues/481","id":768413213,"node_id":"MDEyOklzc3VlQ29tbWVudDc2ODQxMzIxMw==","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-01-27T16:40:22Z","updated_at":"2021-01-27T16:40:22Z","author_association":"MEMBER","body":"I'd actually prefer to see a more human description, for example the description I gave above\r\n\r\n> So first we look for either the beginning of the string or a non-% character with (^|[^%]). Following that, we look for an even number of %'s with (%%)*. And finally following that we look for a %NL;. I think that should match any %NL; not immediately preceeded by an even number of %'s, in other words, an unescaped %NL;.\r\n\r\nThis could definitely use improvment, but I think it's more clear what the regex is actually testing, and can give additional information about why we are looking for things (e.g. we need even number of %'s). If that explanation isn't clear, someone can always copy/paste the regex into a regex explainer tool and get a symbol by symbol breakdown.\r\n\r\nAlso, there might be some potential licensing issues? Not sure if those explains have a license for that output (or if it's even licensable). But always somethign to consider when copy/pasting something off the web. ","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/768413213/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/768461099","html_url":"https://github.com/apache/daffodil/pull/481#issuecomment-768461099","issue_url":"https://api.github.com/repos/apache/daffodil/issues/481","id":768461099,"node_id":"MDEyOklzc3VlQ29tbWVudDc2ODQ2MTA5OQ==","user":{"login":"regetom","id":11149210,"node_id":"MDQ6VXNlcjExMTQ5MjEw","avatar_url":"https://avatars.githubusercontent.com/u/11149210?v=4","gravatar_id":"","url":"https://api.github.com/users/regetom","html_url":"https://github.com/regetom","followers_url":"https://api.github.com/users/regetom/followers","following_url":"https://api.github.com/users/regetom/following{/other_user}","gists_url":"https://api.github.com/users/regetom/gists{/gist_id}","starred_url":"https://api.github.com/users/regetom/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/regetom/subscriptions","organizations_url":"https://api.github.com/users/regetom/orgs","repos_url":"https://api.github.com/users/regetom/repos","events_url":"https://api.github.com/users/regetom/events{/privacy}","received_events_url":"https://api.github.com/users/regetom/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-01-27T17:51:32Z","updated_at":"2021-01-27T17:51:32Z","author_association":"NONE","body":"I get this error:\r\n![image](https://user-images.githubusercontent.com/11149210/106030643-61fbf900-609c-11eb-89dd-a5ac94723235.png)\r\nThe compile is successful if I remove \".map { _.group(1) }\"\r\nIn testing (with \".map { _.group }\" removed) I get results like:\r\n![image](https://user-images.githubusercontent.com/11149210/106031232-0a11c200-609d-11eb-994c-c3adc0702e4c.png)\r\nThe original function calls hardcoded the character classes like \"%%NL;\" or \"%%ES;\" in the parameters.\r\nIn the test result instances smoetimes there is only one '%\". Other times there can be more than two.  Should I format the results to take only the last three character (ex \"NL;\") and prepend two '%'?","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/768461099/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/768467142","html_url":"https://github.com/apache/daffodil/pull/481#issuecomment-768467142","issue_url":"https://api.github.com/repos/apache/daffodil/issues/481","id":768467142,"node_id":"MDEyOklzc3VlQ29tbWVudDc2ODQ2NzE0Mg==","user":{"login":"mbeckerle","id":1524099,"node_id":"MDQ6VXNlcjE1MjQwOTk=","avatar_url":"https://avatars.githubusercontent.com/u/1524099?v=4","gravatar_id":"","url":"https://api.github.com/users/mbeckerle","html_url":"https://github.com/mbeckerle","followers_url":"https://api.github.com/users/mbeckerle/followers","following_url":"https://api.github.com/users/mbeckerle/following{/other_user}","gists_url":"https://api.github.com/users/mbeckerle/gists{/gist_id}","starred_url":"https://api.github.com/users/mbeckerle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbeckerle/subscriptions","organizations_url":"https://api.github.com/users/mbeckerle/orgs","repos_url":"https://api.github.com/users/mbeckerle/repos","events_url":"https://api.github.com/users/mbeckerle/events{/privacy}","received_events_url":"https://api.github.com/users/mbeckerle/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-01-27T18:00:58Z","updated_at":"2021-01-27T18:00:58Z","author_association":"CONTRIBUTOR","body":"I think you need to call findAllMatchIn, not findAllIn. I think findAllIn has to be used with an iterator pattern because there is just one Match object that is being advanced. Whereas findAllMatchIn provides separate match objects with disjoint state. ","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/768467142/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/768510159","html_url":"https://github.com/apache/daffodil/pull/481#issuecomment-768510159","issue_url":"https://api.github.com/repos/apache/daffodil/issues/481","id":768510159,"node_id":"MDEyOklzc3VlQ29tbWVudDc2ODUxMDE1OQ==","user":{"login":"regetom","id":11149210,"node_id":"MDQ6VXNlcjExMTQ5MjEw","avatar_url":"https://avatars.githubusercontent.com/u/11149210?v=4","gravatar_id":"","url":"https://api.github.com/users/regetom","html_url":"https://github.com/regetom","followers_url":"https://api.github.com/users/regetom/followers","following_url":"https://api.github.com/users/regetom/following{/other_user}","gists_url":"https://api.github.com/users/regetom/gists{/gist_id}","starred_url":"https://api.github.com/users/regetom/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/regetom/subscriptions","organizations_url":"https://api.github.com/users/regetom/orgs","repos_url":"https://api.github.com/users/regetom/repos","events_url":"https://api.github.com/users/regetom/events{/privacy}","received_events_url":"https://api.github.com/users/regetom/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-01-27T19:09:48Z","updated_at":"2021-01-27T19:09:48Z","author_association":"NONE","body":"findAllMatchIn works with .map { _.group(1) }\r\ntest results now look like this:\r\nProperty dfdl:test contains disallowed character classes: %NL;, %NL;\r\nProperty dfdl:test contains disallowed character classes: %ES;\r\nProperty dfdl:test contains disallowed character classes: %NL;, %WSP;, %NL;\r\nby changing:\r\n  \"Property dfdl:%s contains disallowed character classes: %s\", propName, matchedGroups.mkString(\", \"))\r\nto\r\n  \"Property dfdl:%s contains disallowed character classes: %%%s\", propName, matchedGroups.mkString(\", %\"))\r\nI was able to get this:\r\nProperty dfdl:test contains disallowed character classes: %%NL;, %%NL;\r\nProperty dfdl:test contains disallowed character classes: %%ES;\r\nProperty dfdl:test contains disallowed character classes: %%NL;, %%WSP;, %%NL;","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/768510159/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/768517115","html_url":"https://github.com/apache/daffodil/pull/481#issuecomment-768517115","issue_url":"https://api.github.com/repos/apache/daffodil/issues/481","id":768517115,"node_id":"MDEyOklzc3VlQ29tbWVudDc2ODUxNzExNQ==","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-01-27T19:20:20Z","updated_at":"2021-01-27T19:20:20Z","author_association":"MEMBER","body":"What you have first looks right to me. I'm not sure we need the double %% in the error message. The issue is that there is an invalid character class. That fact that there are a zero or more escaped percents preceeding it doesn't really matter. The ``%NL;`` is the only invalid part.\r\n\r\nThere is maybe an argument that if there were a bunch of extra percents, that maybe the user just messed up their escaping, so we could give a warning to that effect, but I'm not sure that's really necessary and adds more complication--we would then need to capture the extra percents as well.\r\n\r\nAlso, it might make sense to use ``.distinct`` so we don't show the same character class multiple times in the warning, e.g.:\r\n```scala\r\nr.findAllMatchIn(raw).map { _.group(1) }.distinct\r\n```\r\nI'm not sure the duplication adds value and is potential confusing.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/768517115/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/768527948","html_url":"https://github.com/apache/daffodil/pull/481#issuecomment-768527948","issue_url":"https://api.github.com/repos/apache/daffodil/issues/481","id":768527948,"node_id":"MDEyOklzc3VlQ29tbWVudDc2ODUyNzk0OA==","user":{"login":"regetom","id":11149210,"node_id":"MDQ6VXNlcjExMTQ5MjEw","avatar_url":"https://avatars.githubusercontent.com/u/11149210?v=4","gravatar_id":"","url":"https://api.github.com/users/regetom","html_url":"https://github.com/regetom","followers_url":"https://api.github.com/users/regetom/followers","following_url":"https://api.github.com/users/regetom/following{/other_user}","gists_url":"https://api.github.com/users/regetom/gists{/gist_id}","starred_url":"https://api.github.com/users/regetom/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/regetom/subscriptions","organizations_url":"https://api.github.com/users/regetom/orgs","repos_url":"https://api.github.com/users/regetom/repos","events_url":"https://api.github.com/users/regetom/events{/privacy}","received_events_url":"https://api.github.com/users/regetom/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-01-27T19:37:38Z","updated_at":"2021-01-27T19:37:38Z","author_association":"NONE","body":"I thought it was there so the SDE prints properly.  \r\ncontext.schemaDefinitionUnless(!raw.contans(\"%NL;\"), \"Property dfdl:%s cannot contain %%NL;\", propName)\r\nIt was in the string passed to schemDefinitionUnless in the current code.\r\n","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/768527948/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/768533939","html_url":"https://github.com/apache/daffodil/pull/481#issuecomment-768533939","issue_url":"https://api.github.com/repos/apache/daffodil/issues/481","id":768533939,"node_id":"MDEyOklzc3VlQ29tbWVudDc2ODUzMzkzOQ==","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-01-27T19:47:21Z","updated_at":"2021-01-27T19:47:21Z","author_association":"MEMBER","body":"Yep, in that case you do need to escape the % because the second paramater of schemaDefinitionUnless is a format string. But when you this:\r\n```scala\r\nschemaDefinitionUnless(..., \"Property dfdl:%s contains disallowed character classes: %s\", propName, matchedGroups.mkString(\", \"))\r\n```\r\nThe format string only contains ``%s``, it doesn't contain ``%NL;`` anymore. The result of ``matchedGroups.mkString(\", \")`` is just one giant string that does happen to contain %'s, but they aren't anything special because they aren't in the format string. schemaDefinitionUnless does a strait replace of %s with that string, and ignores the fact that the string might have perects in it.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/768533939/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/768538310","html_url":"https://github.com/apache/daffodil/pull/481#issuecomment-768538310","issue_url":"https://api.github.com/repos/apache/daffodil/issues/481","id":768538310,"node_id":"MDEyOklzc3VlQ29tbWVudDc2ODUzODMxMA==","user":{"login":"regetom","id":11149210,"node_id":"MDQ6VXNlcjExMTQ5MjEw","avatar_url":"https://avatars.githubusercontent.com/u/11149210?v=4","gravatar_id":"","url":"https://api.github.com/users/regetom","html_url":"https://github.com/regetom","followers_url":"https://api.github.com/users/regetom/followers","following_url":"https://api.github.com/users/regetom/following{/other_user}","gists_url":"https://api.github.com/users/regetom/gists{/gist_id}","starred_url":"https://api.github.com/users/regetom/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/regetom/subscriptions","organizations_url":"https://api.github.com/users/regetom/orgs","repos_url":"https://api.github.com/users/regetom/repos","events_url":"https://api.github.com/users/regetom/events{/privacy}","received_events_url":"https://api.github.com/users/regetom/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-01-27T19:55:39Z","updated_at":"2021-01-27T19:55:39Z","author_association":"NONE","body":"OK","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/768538310/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/768544391","html_url":"https://github.com/apache/daffodil/pull/481#issuecomment-768544391","issue_url":"https://api.github.com/repos/apache/daffodil/issues/481","id":768544391,"node_id":"MDEyOklzc3VlQ29tbWVudDc2ODU0NDM5MQ==","user":{"login":"regetom","id":11149210,"node_id":"MDQ6VXNlcjExMTQ5MjEw","avatar_url":"https://avatars.githubusercontent.com/u/11149210?v=4","gravatar_id":"","url":"https://api.github.com/users/regetom","html_url":"https://github.com/regetom","followers_url":"https://api.github.com/users/regetom/followers","following_url":"https://api.github.com/users/regetom/following{/other_user}","gists_url":"https://api.github.com/users/regetom/gists{/gist_id}","starred_url":"https://api.github.com/users/regetom/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/regetom/subscriptions","organizations_url":"https://api.github.com/users/regetom/orgs","repos_url":"https://api.github.com/users/regetom/repos","events_url":"https://api.github.com/users/regetom/events{/privacy}","received_events_url":"https://api.github.com/users/regetom/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-01-27T20:06:34Z","updated_at":"2021-01-27T20:06:34Z","author_association":"NONE","body":"There are a couple of places in EntityReplacer.scala where the noCharClassEntities() is overridden in another class.  The class StringLiteralESEntityWithByteEntities() has the same original functions calls except for 'ES'.  The class ListOfStringLiteralNoCharClass_NL_ES_EntitiedsNoByteEntities() also overrides the function but only has function calls for \"NL' and \"ES\".  The classes NonEmptyListOfStringLiteralCharClass_ES_WithByteEntities() and DelimiterCookerNoES() also override the functions.  Should all of these be modified to follow the new logic?","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/768544391/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/768546734","html_url":"https://github.com/apache/daffodil/pull/481#issuecomment-768546734","issue_url":"https://api.github.com/repos/apache/daffodil/issues/481","id":768546734,"node_id":"MDEyOklzc3VlQ29tbWVudDc2ODU0NjczNA==","user":{"login":"regetom","id":11149210,"node_id":"MDQ6VXNlcjExMTQ5MjEw","avatar_url":"https://avatars.githubusercontent.com/u/11149210?v=4","gravatar_id":"","url":"https://api.github.com/users/regetom","html_url":"https://github.com/regetom","followers_url":"https://api.github.com/users/regetom/followers","following_url":"https://api.github.com/users/regetom/following{/other_user}","gists_url":"https://api.github.com/users/regetom/gists{/gist_id}","starred_url":"https://api.github.com/users/regetom/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/regetom/subscriptions","organizations_url":"https://api.github.com/users/regetom/orgs","repos_url":"https://api.github.com/users/regetom/repos","events_url":"https://api.github.com/users/regetom/events{/privacy}","received_events_url":"https://api.github.com/users/regetom/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-01-27T20:10:54Z","updated_at":"2021-01-27T20:10:54Z","author_association":"NONE","body":"It might be better to only have one function, but pass in a different regex string to control which entities (NL|ES|WSP|WSP+|WSP*) can throw SDE in the various classes?","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/768546734/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/768550106","html_url":"https://github.com/apache/daffodil/pull/481#issuecomment-768550106","issue_url":"https://api.github.com/repos/apache/daffodil/issues/481","id":768550106,"node_id":"MDEyOklzc3VlQ29tbWVudDc2ODU1MDEwNg==","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-01-27T20:17:18Z","updated_at":"2021-01-27T20:17:18Z","author_association":"MEMBER","body":"Definitely agreed. We should definitely try to factor out as much duplication as possible into a single function. Maybe something like each of these cookers that have invalid entities must implement a variable that's says what's disallows, e.g.\r\n```scala\r\nval disallowedCharClassEntities = Seq(\"NL\", \"ES\", ...)\r\n```\r\nThis can then be used to build the appropriate regex that the noCharClassEntities() would then use. No need to override that function anymore, and hides the complex regex so you don't have to dicipher it just to change/verify which entities are allowed.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/768550106/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/768561649","html_url":"https://github.com/apache/daffodil/pull/481#issuecomment-768561649","issue_url":"https://api.github.com/repos/apache/daffodil/issues/481","id":768561649,"node_id":"MDEyOklzc3VlQ29tbWVudDc2ODU2MTY0OQ==","user":{"login":"mbeckerle","id":1524099,"node_id":"MDQ6VXNlcjE1MjQwOTk=","avatar_url":"https://avatars.githubusercontent.com/u/1524099?v=4","gravatar_id":"","url":"https://api.github.com/users/mbeckerle","html_url":"https://github.com/mbeckerle","followers_url":"https://api.github.com/users/mbeckerle/followers","following_url":"https://api.github.com/users/mbeckerle/following{/other_user}","gists_url":"https://api.github.com/users/mbeckerle/gists{/gist_id}","starred_url":"https://api.github.com/users/mbeckerle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbeckerle/subscriptions","organizations_url":"https://api.github.com/users/mbeckerle/orgs","repos_url":"https://api.github.com/users/mbeckerle/repos","events_url":"https://api.github.com/users/mbeckerle/events{/privacy}","received_events_url":"https://api.github.com/users/mbeckerle/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-01-27T20:37:55Z","updated_at":"2021-01-27T20:37:55Z","author_association":"CONTRIBUTOR","body":"Title of this PR no longer matches the nature of the change. This is \"a good thing (tm)\".\r\n\r\n Probably name of the corresponding JIRA ticket too. Suggest change to \"Improve detection of disallowed entities in property values\" or something like that. ","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/768561649/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/768600775","html_url":"https://github.com/apache/daffodil/pull/480#issuecomment-768600775","issue_url":"https://api.github.com/repos/apache/daffodil/issues/480","id":768600775,"node_id":"MDEyOklzc3VlQ29tbWVudDc2ODYwMDc3NQ==","user":{"login":"mbeckerle","id":1524099,"node_id":"MDQ6VXNlcjE1MjQwOTk=","avatar_url":"https://avatars.githubusercontent.com/u/1524099?v=4","gravatar_id":"","url":"https://api.github.com/users/mbeckerle","html_url":"https://github.com/mbeckerle","followers_url":"https://api.github.com/users/mbeckerle/followers","following_url":"https://api.github.com/users/mbeckerle/following{/other_user}","gists_url":"https://api.github.com/users/mbeckerle/gists{/gist_id}","starred_url":"https://api.github.com/users/mbeckerle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbeckerle/subscriptions","organizations_url":"https://api.github.com/users/mbeckerle/orgs","repos_url":"https://api.github.com/users/mbeckerle/repos","events_url":"https://api.github.com/users/mbeckerle/events{/privacy}","received_events_url":"https://api.github.com/users/mbeckerle/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-01-27T21:51:37Z","updated_at":"2021-01-27T21:51:37Z","author_association":"CONTRIBUTOR","body":"Responding to @bsloane1650 \r\n\r\n> Some high level comments:\r\n> \r\n>     1. It feels like we should ship schema for our self defined ZIP header type, so the user schema can be something like:\r\n>\r\nOk. Probably it should live in daffodil-lib src/main/resources/org...../dfdlZipEntryHeader.dfdl.xsd where it can just be included.\r\nMy use case would want to modify this however, as the data part of specific zip entries might want to be parsed based on some other schema element.  I intend to look at the file extension of the files, and if they are \".bin\" parse them according to a specific format. Probably that sort of entry parsing could be handled the same way we do message_size and payload in other header schemas, the user would just provide their own implementation of the payload part which would supersede the built-in one via classpath. \r\n\r\n> \r\n> ```\r\n> <xs:element name=\"zipEntry\" maxOccurs=\"unbounded\" dfdl:occursCountKind=\"implicit\">\r\n>   <xs:complexType>\r\n>     <xs:sequence>\r\n>       <xs:element name=\"header\" type=\"dfdlx:ZipHeader\"/>\r\n>        ...\r\n>     </xs:sequence>\r\n>   </xs:complexType>\r\n> </xs:element>\r\n> ```\r\n> \r\n> In addition to being generally easier for the user, this should also allow us to make changes with a bit more backwards compatibility.\r\n> \r\n> It also feels wrong that we are passing the metadata in-band in the first place; but I don't see any way around that without redesigning DFDL somewhat.\r\n> \r\n>     1. Silently dropping deleted entries seems like a limitation to me as well. From a DFDL interface standpoint supporting deleted entries is straightforward: just add a boolean field to the entry header indicating if the file was deleted. From an implementation standpoint, this probably means we would need to roll our own ZIP implementation.\r\n>        Not something we need to address, but worth explicitly listing as a limitation.\r\n> \r\nYeah, zip is actually quite complex in this regard. There can be dead-space in the file. To modify the contents of a zip, you just write a new trailing directory record to the the data, and that can put the files anywhere, as it stores the offsets to them.  Zip files can also be split over multiple volumes, in which case the earlier volumes can quite literally not be interpreted at all until you get the final volume. Entries can be marked deleted explicitly, but they needn't be actually. The trailing directory record can just not indicate that anything appears in the data at what was previously an entry. That \"deletes\" the entry. \r\n\r\n>     2. Similar to (2), we silently drop dead space from the ZIP file. Probably less even less important than (2), but still a limitation if anyone wants to use this for forensic purposes.\r\n\r\nThis is definitely the nature of the limitation. Not usable for forensics on the zip data at all really. \r\n> \r\n>     3. If I understand the ZIP format correctly, there is a global comment in the that applies to the entire ZIP which we do not expose. We may want to include a global ZIP header before the first entry header.\r\n\r\nI will look into this. Nothing i've seen requires anything specific to be first in the file. The global directory, which is last in the data, says where everything goes. \r\n> \r\n>     4. A maliciously crafted ZIP file might be able to cause all sorts of interesting issues.\r\n\r\nThis is a real concern. Many of the use cases for Daffodil are cybersecurity related. So use of this zip layerTransform we inherit its bugs relative to security. \r\n\r\nOTOH, parse/unparse of a zip using this layerTransform removes all dead space in the zip file, removes all deleted entries, etc. So it reduces the attack surface for anything downstream that takes in the data. At least from data exfiltration perspective this removes a bunch of covert channels. \r\n","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/768600775/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/768610742","html_url":"https://github.com/apache/daffodil/pull/480#issuecomment-768610742","issue_url":"https://api.github.com/repos/apache/daffodil/issues/480","id":768610742,"node_id":"MDEyOklzc3VlQ29tbWVudDc2ODYxMDc0Mg==","user":{"login":"bsloane1650","id":1839120,"node_id":"MDQ6VXNlcjE4MzkxMjA=","avatar_url":"https://avatars.githubusercontent.com/u/1839120?v=4","gravatar_id":"","url":"https://api.github.com/users/bsloane1650","html_url":"https://github.com/bsloane1650","followers_url":"https://api.github.com/users/bsloane1650/followers","following_url":"https://api.github.com/users/bsloane1650/following{/other_user}","gists_url":"https://api.github.com/users/bsloane1650/gists{/gist_id}","starred_url":"https://api.github.com/users/bsloane1650/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bsloane1650/subscriptions","organizations_url":"https://api.github.com/users/bsloane1650/orgs","repos_url":"https://api.github.com/users/bsloane1650/repos","events_url":"https://api.github.com/users/bsloane1650/events{/privacy}","received_events_url":"https://api.github.com/users/bsloane1650/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-01-27T22:07:36Z","updated_at":"2021-01-27T22:07:36Z","author_association":"CONTRIBUTOR","body":"@mbeckerle\r\n\r\n>> 1. It feels like we should ship schema for our self defined ZIP header type, so the user schema can be something like:\r\n> Ok. Probably it should live in daffodil-lib src/main/resources/org...../dfdlZipEntryHeader.dfdl.xsd where it can just be included.\r\n> My use case would want to modify this however, as the data part of specific zip entries might want to be parsed based on some other schema element. I intend to look at the file extension of the files, and if they are \".bin\" parse them according to a specific format. Probably that sort of entry parsing could be handled the same way we do message_size and payload in other header schemas, the user would just provide their own implementation of the payload part which would supersede the built-in one via classpath.\r\n\r\nThat still doesn't cleanly work for data formats that have multiple zips within them (even if any instance in the data only has 1). Perhaps an approach based of DFDL variables would work better? It would also keep the schema populating those fields near where it is being used.\r\n\r\nI don't think we need to satisfy everyone here. If our built in schema doesn't cover a particular use case, a user can still ignore it and write their own.\r\n\r\n>> 3. If I understand the ZIP format correctly, there is a global comment in the that applies to the entire ZIP which we do not expose. We may want to include a global ZIP header before the first entry header.\r\n\r\n> I will look into this. Nothing i've seen requires anything specific to be first in the file. The global directory, which is last in the data, says where everything goes.\r\n\r\nI was refering to adding a global header to the binary scheme we construct to give the the inner parser; not the actual header that exists in the zip format. This is to expose things such as the comment field from the End of central directory record.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/768610742/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/768614641","html_url":"https://github.com/apache/daffodil/pull/480#issuecomment-768614641","issue_url":"https://api.github.com/repos/apache/daffodil/issues/480","id":768614641,"node_id":"MDEyOklzc3VlQ29tbWVudDc2ODYxNDY0MQ==","user":{"login":"mbeckerle","id":1524099,"node_id":"MDQ6VXNlcjE1MjQwOTk=","avatar_url":"https://avatars.githubusercontent.com/u/1524099?v=4","gravatar_id":"","url":"https://api.github.com/users/mbeckerle","html_url":"https://github.com/mbeckerle","followers_url":"https://api.github.com/users/mbeckerle/followers","following_url":"https://api.github.com/users/mbeckerle/following{/other_user}","gists_url":"https://api.github.com/users/mbeckerle/gists{/gist_id}","starred_url":"https://api.github.com/users/mbeckerle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbeckerle/subscriptions","organizations_url":"https://api.github.com/users/mbeckerle/orgs","repos_url":"https://api.github.com/users/mbeckerle/repos","events_url":"https://api.github.com/users/mbeckerle/events{/privacy}","received_events_url":"https://api.github.com/users/mbeckerle/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-01-27T22:15:59Z","updated_at":"2021-01-27T22:15:59Z","author_association":"CONTRIBUTOR","body":"Hmmm. If I make the zip header DFDL schema an include-able schema with no namespace, then it can be included into as many distinct namespaces as I need (XSD so called chameleon namespaces). So if I have nested 2-deep zips, I could include the same schema into 2 namespaces, and my inner zips use one namespace, the outer zip the other namespace. So long as I have finite depth this would (aka \"should\") work.\r\n\r\nre: global header - understood. There's more there to expose. ","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/768614641/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/769326164","html_url":"https://github.com/apache/daffodil/pull/482#issuecomment-769326164","issue_url":"https://api.github.com/repos/apache/daffodil/issues/482","id":769326164,"node_id":"MDEyOklzc3VlQ29tbWVudDc2OTMyNjE2NA==","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-01-28T19:39:01Z","updated_at":"2021-01-28T19:39:01Z","author_association":"MEMBER","body":"I've added a new commit that adds much more refactoring, including some of the suggestions above. This is almost an RFC level of changes. The message in the new commit describes what changed. I haven't yet added tests to improve coverge, curious what others think of these changes before doing that.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/769326164/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/769378744","html_url":"https://github.com/apache/daffodil/pull/482#issuecomment-769378744","issue_url":"https://api.github.com/repos/apache/daffodil/issues/482","id":769378744,"node_id":"MDEyOklzc3VlQ29tbWVudDc2OTM3ODc0NA==","user":{"login":"mbeckerle","id":1524099,"node_id":"MDQ6VXNlcjE1MjQwOTk=","avatar_url":"https://avatars.githubusercontent.com/u/1524099?v=4","gravatar_id":"","url":"https://api.github.com/users/mbeckerle","html_url":"https://github.com/mbeckerle","followers_url":"https://api.github.com/users/mbeckerle/followers","following_url":"https://api.github.com/users/mbeckerle/following{/other_user}","gists_url":"https://api.github.com/users/mbeckerle/gists{/gist_id}","starred_url":"https://api.github.com/users/mbeckerle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbeckerle/subscriptions","organizations_url":"https://api.github.com/users/mbeckerle/orgs","repos_url":"https://api.github.com/users/mbeckerle/repos","events_url":"https://api.github.com/users/mbeckerle/events{/privacy}","received_events_url":"https://api.github.com/users/mbeckerle/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-01-28T20:46:09Z","updated_at":"2021-01-28T20:46:09Z","author_association":"CONTRIBUTOR","body":"I like the concept of eliminating the before-capture, and using the prior after-state as the incoming before state. Code does look cleaned up a bit. \r\n\r\nI think it will be nearly equivalent when used. Instead of showing diffs for only one element you'd have to stop before that element, then single step then info diff to see only the deltas for that one step. Seems fine. \r\n\r\nI think the real proof of this will be how well it works out for unparsing. \r\n\r\nbtw I think when debugging, it's highly likely we want to retry all suspensions at each stop (repeating until no more of them successfully evaluate).  At least that should be one mode which is to evaluate suspensions as soon as possible. Perhaps another mode would evaluate them \"normally\", but I fear this will just be viewed as non-deterministic by users. They won't have any idea why things are being evaluated at various points. \r\n\r\nI'm just waiting for some tests to one-plus this. \r\n","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/769378744/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/769737532","html_url":"https://github.com/apache/daffodil/pull/481#issuecomment-769737532","issue_url":"https://api.github.com/repos/apache/daffodil/issues/481","id":769737532,"node_id":"MDEyOklzc3VlQ29tbWVudDc2OTczNzUzMg==","user":{"login":"regetom","id":11149210,"node_id":"MDQ6VXNlcjExMTQ5MjEw","avatar_url":"https://avatars.githubusercontent.com/u/11149210?v=4","gravatar_id":"","url":"https://api.github.com/users/regetom","html_url":"https://github.com/regetom","followers_url":"https://api.github.com/users/regetom/followers","following_url":"https://api.github.com/users/regetom/following{/other_user}","gists_url":"https://api.github.com/users/regetom/gists{/gist_id}","starred_url":"https://api.github.com/users/regetom/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/regetom/subscriptions","organizations_url":"https://api.github.com/users/regetom/orgs","repos_url":"https://api.github.com/users/regetom/repos","events_url":"https://api.github.com/users/regetom/events{/privacy}","received_events_url":"https://api.github.com/users/regetom/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-01-29T11:03:42Z","updated_at":"2021-01-29T11:03:42Z","author_association":"NONE","body":"I will look at making the suggested changes (including to Jira ticket) and re-commit the changes when done.  Should I also look at adding additional tests in TDML?  I am not familiar with TDML is there somewhere you could point me to to get the basics?","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/769737532/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/769843371","html_url":"https://github.com/apache/daffodil/pull/481#issuecomment-769843371","issue_url":"https://api.github.com/repos/apache/daffodil/issues/481","id":769843371,"node_id":"MDEyOklzc3VlQ29tbWVudDc2OTg0MzM3MQ==","user":{"login":"mbeckerle","id":1524099,"node_id":"MDQ6VXNlcjE1MjQwOTk=","avatar_url":"https://avatars.githubusercontent.com/u/1524099?v=4","gravatar_id":"","url":"https://api.github.com/users/mbeckerle","html_url":"https://github.com/mbeckerle","followers_url":"https://api.github.com/users/mbeckerle/followers","following_url":"https://api.github.com/users/mbeckerle/following{/other_user}","gists_url":"https://api.github.com/users/mbeckerle/gists{/gist_id}","starred_url":"https://api.github.com/users/mbeckerle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbeckerle/subscriptions","organizations_url":"https://api.github.com/users/mbeckerle/orgs","repos_url":"https://api.github.com/users/mbeckerle/repos","events_url":"https://api.github.com/users/mbeckerle/events{/privacy}","received_events_url":"https://api.github.com/users/mbeckerle/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-01-29T14:38:59Z","updated_at":"2021-01-29T14:38:59Z","author_association":"CONTRIBUTOR","body":"https://daffodil.apache.org/tdml/\r\n(I am happy to report that google found that for me.)\r\n\r\nIn the daffodil tree, the daffodil-test module is basically a big project containing almost entirely TDML tests. \r\n\r\nThere are probably existing tests related to this feature and you can add tests to that test file, or copy the scala code driver file (which are just a JUInit thing that drives a TDML test as a JUnit test) and modify to make a new one to just drive a single TDML file with just your tests in it. \r\n\r\nTests of textStandardZeroRep are in the scala driver file\r\nsrc/test/scala/org/apache/daffodil/section13/text_number_props/TestTextNumberProps.scala\r\ne.g.,  test_standardZeroRep01 to test_standardZeroRep11.\r\n\r\nThe corresponding TDML file is in the analogous\r\nsrc/test/resources/..../section13/text_number_props/TextNumberProps.tdml\r\n\r\nThis file is pretty big, but I think it makes sense to just make sure the tests here cover the corner cases. \r\n\r\nI don't know what IDE you use, but in both Eclipse and IntelliJ IDEA, you can right click on the scala def of a test, and run exadtly that one test or debug exactly that one test. This is the primary way I debug and test daffodil. \r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/769843371/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/770094352","html_url":"https://github.com/apache/daffodil/pull/482#issuecomment-770094352","issue_url":"https://api.github.com/repos/apache/daffodil/issues/482","id":770094352,"node_id":"MDEyOklzc3VlQ29tbWVudDc3MDA5NDM1Mg==","user":{"login":"bsloane1650","id":1839120,"node_id":"MDQ6VXNlcjE4MzkxMjA=","avatar_url":"https://avatars.githubusercontent.com/u/1839120?v=4","gravatar_id":"","url":"https://api.github.com/users/bsloane1650","html_url":"https://github.com/bsloane1650","followers_url":"https://api.github.com/users/bsloane1650/followers","following_url":"https://api.github.com/users/bsloane1650/following{/other_user}","gists_url":"https://api.github.com/users/bsloane1650/gists{/gist_id}","starred_url":"https://api.github.com/users/bsloane1650/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/bsloane1650/subscriptions","organizations_url":"https://api.github.com/users/bsloane1650/orgs","repos_url":"https://api.github.com/users/bsloane1650/repos","events_url":"https://api.github.com/users/bsloane1650/events{/privacy}","received_events_url":"https://api.github.com/users/bsloane1650/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-01-29T22:59:12Z","updated_at":"2021-01-29T22:59:12Z","author_association":"CONTRIBUTOR","body":"New changes look good.\r\n","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/770094352/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/771082581","html_url":"https://github.com/apache/daffodil/pull/484#issuecomment-771082581","issue_url":"https://api.github.com/repos/apache/daffodil/issues/484","id":771082581,"node_id":"MDEyOklzc3VlQ29tbWVudDc3MTA4MjU4MQ==","user":{"login":"mbeckerle","id":1524099,"node_id":"MDQ6VXNlcjE1MjQwOTk=","avatar_url":"https://avatars.githubusercontent.com/u/1524099?v=4","gravatar_id":"","url":"https://api.github.com/users/mbeckerle","html_url":"https://github.com/mbeckerle","followers_url":"https://api.github.com/users/mbeckerle/followers","following_url":"https://api.github.com/users/mbeckerle/following{/other_user}","gists_url":"https://api.github.com/users/mbeckerle/gists{/gist_id}","starred_url":"https://api.github.com/users/mbeckerle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbeckerle/subscriptions","organizations_url":"https://api.github.com/users/mbeckerle/orgs","repos_url":"https://api.github.com/users/mbeckerle/repos","events_url":"https://api.github.com/users/mbeckerle/events{/privacy}","received_events_url":"https://api.github.com/users/mbeckerle/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-01T19:01:10Z","updated_at":"2021-02-01T19:01:10Z","author_association":"CONTRIBUTOR","body":"I just spent 2 hours debugging by print statement and in fact I gave up and just debugged the problem by moving the code into daffodil-macro-lib as a top-level application, and then debugging it in Eclipse. \r\n\r\nI think sbt plugin debugging has to be done the way embedded debugging usually works which is by attaching a debugger to another jvm started with debug flags/ports specified. Which is a pain in the neck.\r\n\r\nBy keeping this thing as ordinary code, no-sbt-specific things in it, I can debug it as ordinary code. I don't need a debug system that can cope with debugging sbt plugins. \r\n\r\nHaving now got that debugged.... I've moved the code back to the project/ directory so it will run from sbt. \r\n","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/771082581/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/771635686","html_url":"https://github.com/apache/daffodil/pull/484#issuecomment-771635686","issue_url":"https://api.github.com/repos/apache/daffodil/issues/484","id":771635686,"node_id":"MDEyOklzc3VlQ29tbWVudDc3MTYzNTY4Ng==","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-02T13:31:03Z","updated_at":"2021-02-02T13:31:03Z","author_association":"MEMBER","body":"I discovered that the sbt eclipse plugin has a built-in way to make changes to these files. Take a look at PR #486 and see if that seems like a reasonable alternative to maintaining updateEclipseClasspaths.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/771635686/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/771703469","html_url":"https://github.com/apache/daffodil/pull/484#issuecomment-771703469","issue_url":"https://api.github.com/repos/apache/daffodil/issues/484","id":771703469,"node_id":"MDEyOklzc3VlQ29tbWVudDc3MTcwMzQ2OQ==","user":{"login":"mbeckerle","id":1524099,"node_id":"MDQ6VXNlcjE1MjQwOTk=","avatar_url":"https://avatars.githubusercontent.com/u/1524099?v=4","gravatar_id":"","url":"https://api.github.com/users/mbeckerle","html_url":"https://github.com/mbeckerle","followers_url":"https://api.github.com/users/mbeckerle/followers","following_url":"https://api.github.com/users/mbeckerle/following{/other_user}","gists_url":"https://api.github.com/users/mbeckerle/gists{/gist_id}","starred_url":"https://api.github.com/users/mbeckerle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbeckerle/subscriptions","organizations_url":"https://api.github.com/users/mbeckerle/orgs","repos_url":"https://api.github.com/users/mbeckerle/repos","events_url":"https://api.github.com/users/mbeckerle/events{/privacy}","received_events_url":"https://api.github.com/users/mbeckerle/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-02T15:11:37Z","updated_at":"2021-02-02T15:11:37Z","author_association":"CONTRIBUTOR","body":"I'm merging this anyway, because at least then the code in the history is not flawed should we want to grab it again for any reason. (E.g., to use with some other IDE which doesn't have sbt support for example.)","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/771703469/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/771707971","html_url":"https://github.com/apache/daffodil/pull/481#issuecomment-771707971","issue_url":"https://api.github.com/repos/apache/daffodil/issues/481","id":771707971,"node_id":"MDEyOklzc3VlQ29tbWVudDc3MTcwNzk3MQ==","user":{"login":"regetom","id":11149210,"node_id":"MDQ6VXNlcjExMTQ5MjEw","avatar_url":"https://avatars.githubusercontent.com/u/11149210?v=4","gravatar_id":"","url":"https://api.github.com/users/regetom","html_url":"https://github.com/regetom","followers_url":"https://api.github.com/users/regetom/followers","following_url":"https://api.github.com/users/regetom/following{/other_user}","gists_url":"https://api.github.com/users/regetom/gists{/gist_id}","starred_url":"https://api.github.com/users/regetom/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/regetom/subscriptions","organizations_url":"https://api.github.com/users/regetom/orgs","repos_url":"https://api.github.com/users/regetom/repos","events_url":"https://api.github.com/users/regetom/events{/privacy}","received_events_url":"https://api.github.com/users/regetom/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-02T15:17:57Z","updated_at":"2021-02-02T15:17:57Z","author_association":"NONE","body":"The overriden examples of noCharClassEntities((), have comments like:\r\n  /**\r\n   * Override Because ES is allowed.\r\n   */\r\nI am replacing the override functions with calls to the new function.  I am thinking I should modify these comments, but I am not sure what to say.  Something like?\r\n*/\r\n * Disallow %NL, %WSP, %WSP+, WSP* character class entities\r\n * /\r\n Or should I just remove the comments altogether?\r\n","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/771707971/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/771714932","html_url":"https://github.com/apache/daffodil/pull/481#issuecomment-771714932","issue_url":"https://api.github.com/repos/apache/daffodil/issues/481","id":771714932,"node_id":"MDEyOklzc3VlQ29tbWVudDc3MTcxNDkzMg==","user":{"login":"mbeckerle","id":1524099,"node_id":"MDQ6VXNlcjE1MjQwOTk=","avatar_url":"https://avatars.githubusercontent.com/u/1524099?v=4","gravatar_id":"","url":"https://api.github.com/users/mbeckerle","html_url":"https://github.com/mbeckerle","followers_url":"https://api.github.com/users/mbeckerle/followers","following_url":"https://api.github.com/users/mbeckerle/following{/other_user}","gists_url":"https://api.github.com/users/mbeckerle/gists{/gist_id}","starred_url":"https://api.github.com/users/mbeckerle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbeckerle/subscriptions","organizations_url":"https://api.github.com/users/mbeckerle/orgs","repos_url":"https://api.github.com/users/mbeckerle/repos","events_url":"https://api.github.com/users/mbeckerle/events{/privacy}","received_events_url":"https://api.github.com/users/mbeckerle/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-02T15:27:48Z","updated_at":"2021-02-02T15:27:48Z","author_association":"CONTRIBUTOR","body":"If the code is self explanatory, because the lists of allowed/disallowed entities are explicitly sitting there, then yeah, no comments are needed. Given a list of them though, it may not be obvious which one is not there. So a comment like // Not ES\r\nmay be helpful.\r\nAlternatively you can do something like:\r\n```\r\nval entitiesWithoutES = Seq(\"%NL;\", ....)\r\n```\r\nTo make it self-documenting without using comments.\r\n\r\nBut in general, push your changes and let's see how it is coming out. \r\nI often push changes and immediately put some comments on the PR myself to ask people what they think about this or that aspect. Just like your question here. ","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/771714932/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/771842010","html_url":"https://github.com/apache/daffodil/pull/486#issuecomment-771842010","issue_url":"https://api.github.com/repos/apache/daffodil/issues/486","id":771842010,"node_id":"MDEyOklzc3VlQ29tbWVudDc3MTg0MjAxMA==","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-02T17:56:15Z","updated_at":"2021-02-02T17:56:15Z","author_association":"MEMBER","body":"I've pushed a commit that tries to add some more helpful explanations about what's going on with all this macro/eclipse nonsense. Let me know if that makes things more clear.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/771842010/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/771946138","html_url":"https://github.com/apache/daffodil/pull/481#issuecomment-771946138","issue_url":"https://api.github.com/repos/apache/daffodil/issues/481","id":771946138,"node_id":"MDEyOklzc3VlQ29tbWVudDc3MTk0NjEzOA==","user":{"login":"regetom","id":11149210,"node_id":"MDQ6VXNlcjExMTQ5MjEw","avatar_url":"https://avatars.githubusercontent.com/u/11149210?v=4","gravatar_id":"","url":"https://api.github.com/users/regetom","html_url":"https://github.com/regetom","followers_url":"https://api.github.com/users/regetom/followers","following_url":"https://api.github.com/users/regetom/following{/other_user}","gists_url":"https://api.github.com/users/regetom/gists{/gist_id}","starred_url":"https://api.github.com/users/regetom/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/regetom/subscriptions","organizations_url":"https://api.github.com/users/regetom/orgs","repos_url":"https://api.github.com/users/regetom/repos","events_url":"https://api.github.com/users/regetom/events{/privacy}","received_events_url":"https://api.github.com/users/regetom/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-02T20:11:33Z","updated_at":"2021-02-02T20:11:33Z","author_association":"NONE","body":"I added the parameter disallowedCharClassEntities: String to noCharClassEntities().  I was able to eliminate all the overrides of noCharClassEntities except for class DelimiterCookerNoES.  The error string built there also include this phrase'when dfdl:lengthKind=\\\"delimited\\\".\"'.  This is the only class that includes extra text in the error string.  I was thinking about adding an additional parameter extraText: String to the noCharClassEntities() funtion, but I wasn't sure if that was the best solution.  I getting an error compiling this class because the override no longer matches the parameters in the noCharClassEntities() funtion.   Once I have a solution for that I will check the code in.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/771946138/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/772704520","html_url":"https://github.com/apache/daffodil/pull/482#issuecomment-772704520","issue_url":"https://api.github.com/repos/apache/daffodil/issues/482","id":772704520,"node_id":"MDEyOklzc3VlQ29tbWVudDc3MjcwNDUyMA==","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-03T17:59:21Z","updated_at":"2021-02-03T17:59:21Z","author_association":"MEMBER","body":"I've added a couple tests to make sure all the diff code paths are covered. I'm not sure if codecov is going to update this PR, but the results can be seen here:\r\n\r\nhttps://app.codecov.io/gh/apache/incubator-daffodil/compare/482/diff\r\n\r\nThere's still probably room for improvement in debugger coverage, but this at least covers all the new/existing diff logic.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/772704520/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/773963265","html_url":"https://github.com/apache/daffodil/pull/481#issuecomment-773963265","issue_url":"https://api.github.com/repos/apache/daffodil/issues/481","id":773963265,"node_id":"MDEyOklzc3VlQ29tbWVudDc3Mzk2MzI2NQ==","user":{"login":"regetom","id":11149210,"node_id":"MDQ6VXNlcjExMTQ5MjEw","avatar_url":"https://avatars.githubusercontent.com/u/11149210?v=4","gravatar_id":"","url":"https://api.github.com/users/regetom","html_url":"https://github.com/regetom","followers_url":"https://api.github.com/users/regetom/followers","following_url":"https://api.github.com/users/regetom/following{/other_user}","gists_url":"https://api.github.com/users/regetom/gists{/gist_id}","starred_url":"https://api.github.com/users/regetom/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/regetom/subscriptions","organizations_url":"https://api.github.com/users/regetom/orgs","repos_url":"https://api.github.com/users/regetom/repos","events_url":"https://api.github.com/users/regetom/events{/privacy}","received_events_url":"https://api.github.com/users/regetom/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-05T11:02:47Z","updated_at":"2021-02-05T11:05:42Z","author_association":"NONE","body":"I took a look at why all the checks failed.  Unit tests are expecting results back like:\r\n\"cannot contain %ES;\"\r\nWith the modifications, the wording for the new results has changed and the entities are combined:\r\nProperty dfdl:test contains disallowed character classes: %NL;, %ES;\r\nI tried to determine where the unit tests are in the code base, but the paths in the failed check details don't seem to match the paths in the code base.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/773963265/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/773978760","html_url":"https://github.com/apache/daffodil/pull/481#issuecomment-773978760","issue_url":"https://api.github.com/repos/apache/daffodil/issues/481","id":773978760,"node_id":"MDEyOklzc3VlQ29tbWVudDc3Mzk3ODc2MA==","user":{"login":"regetom","id":11149210,"node_id":"MDQ6VXNlcjExMTQ5MjEw","avatar_url":"https://avatars.githubusercontent.com/u/11149210?v=4","gravatar_id":"","url":"https://api.github.com/users/regetom","html_url":"https://github.com/regetom","followers_url":"https://api.github.com/users/regetom/followers","following_url":"https://api.github.com/users/regetom/following{/other_user}","gists_url":"https://api.github.com/users/regetom/gists{/gist_id}","starred_url":"https://api.github.com/users/regetom/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/regetom/subscriptions","organizations_url":"https://api.github.com/users/regetom/orgs","repos_url":"https://api.github.com/users/regetom/repos","events_url":"https://api.github.com/users/regetom/events{/privacy}","received_events_url":"https://api.github.com/users/regetom/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-05T11:34:00Z","updated_at":"2021-02-05T11:34:00Z","author_association":"NONE","body":"Some of the problems maybe due to duplicate entities ex: %NL;, %ES:, %ES;\r\nI removed \"distinct\" from the code because I was getting this compile error:\r\nvalue distinct is not a member of Iterator[String]\r\n       val matchedGroups = disallowedRegex.findAllMatchIn(raw).map { _.group(1) }.distinct","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/773978760/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/774016926","html_url":"https://github.com/apache/daffodil/pull/481#issuecomment-774016926","issue_url":"https://api.github.com/repos/apache/daffodil/issues/481","id":774016926,"node_id":"MDEyOklzc3VlQ29tbWVudDc3NDAxNjkyNg==","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-05T12:56:52Z","updated_at":"2021-02-05T12:57:08Z","author_association":"MEMBER","body":"> I removed \"distinct\" from the code because I was getting this compile error:\r\n> value distinct is not a member of Iterator[String]\r\n\r\nScala 2.12 doesn't have the ``distinct`` function on the ``Iterator`` trait. The easiest way to get around this to to just convert the ``Iterator`` to a ``Seq``. This list will always be small enough (or even zero length in most cases) that this conversion shouldn't matter performance-wise.\r\n\r\n```scala\r\nval matchedGroups = disallowedRegex.findAllMatchIn(raw).map { _.group(1) }.toSeq.distinct\r\n```","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/774016926/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/774038638","html_url":"https://github.com/apache/daffodil/pull/481#issuecomment-774038638","issue_url":"https://api.github.com/repos/apache/daffodil/issues/481","id":774038638,"node_id":"MDEyOklzc3VlQ29tbWVudDc3NDAzODYzOA==","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-05T13:39:32Z","updated_at":"2021-02-05T13:39:32Z","author_association":"MEMBER","body":"> I took a look at why all the checks failed. Unit tests are expecting results back like:\r\n> \"cannot contain %ES;\"\r\n> With the modifications, the wording for the new results has changed and the entities are combined:\r\n> Property dfdl:test contains disallowed character classes: %NL;, %ES;\r\n\r\nI think this is very likely part of the issue. We probably just need to update the TDML files for these negative tests to check for different keywords in the error message.\r\n\r\nThough, I think we may need to double check which entities are disallowed. For example, one of the failing tests has this error message:\r\n```\r\nTest org.apache.daffodil.general.TestPrimitives.testLengthKindDelimited2 failed: java.lang.Exception: Schema Definition Error: Property dfdl:separator contains disallowed character classes: %WSP;, %WSP;\r\n```\r\nbut the dfdl:separator property is allowed to have WSP as a separator. So I think something is off in the latest changes.\r\n\r\n> I tried to determine where the unit tests are in the code base, but the paths in the failed check details don't seem to match the paths in the code base.\r\n\r\nAre you seeing paths in ``/tmp`` in the error messages? If so, you're probably running into [DAFFODIL-2159](https://issues.apache.org/jira/browse/DAFFODIL-2159) where we show tmp paths instead of actual paths. That's something we just need to get fixed, it's definitely a pain.\r\n\r\nTo find tests, I usually just use grep. If you use eclipse or IntelliJ there might be an easier way to do it. Bur for example, in the above test error message, we know that the test class is called ``TestPrimitives`` and the test inside that class is called ``testLengthKindDelimited2``. If we grep for the test name:\r\n```\r\n$ grep -R testLengthKindDelimited2 *\r\ndaffodil-core/src/test/scala/org/apache/daffodil/general/TestPrimitives.scala:  @Test def testLengthKindDelimited2: Unit = {\r\n```\r\nWe see that this test is defined in ``TestPrimitives.scala``. So we can open that file and find the function to see what it's testing.\r\n\r\nNote that this particular test is in daffodil-core, so it's doesn't use any TDML tests. This test is just implemented in code, much like a unit test. Finding TDML tests can require a few more steps. As an example of and how to find a failing TDML test, you also have this as a failing test:\r\n\r\n```\r\nError:  Test org.apache.daffodil.section13.nillable.TestNillable.test_entity_fail_06 failed: org.apache.daffodil.tdml.TDMLExceptionImpl: (Implementation: daffodil) Did not find diagnostic message \"cannot\" in any of the actual diagnostic messages: \r\nError:  Schema Definition Error: Property dfdl:nilValue contains disallowed character classes: %NL;\r\n```\r\nNote that this particular test does look like a case where we just need to update the expected error message. In this case ``TestNillable`` is the class name and the test name is ``test_entity_fail_06``. Grepping for the test name, we get:\r\n```\r\n$ grep -R test_entity_fail_06 *\r\ndaffodil-test/src/test/scala/org/apache/daffodil/section13/nillable/TestNillable.scala:  @Test def test_entity_fail_06(): Unit = { runnerEntity.runOneTest(\"entity_fail_06\") }\r\n```\r\nSo this is in the ``TestNillable.scala`` file. We can see it is calling ``runOneTest`` using ``runnerEntity``, with the name of the TDML test case of ``entity_fail_06``. Opening up that file and looking at ``runnerEntity`` and how it's created, we can see that the TDML tests for that runner are in the ``entities_01.tdml`` file in ``/org/apache/daffodil/section06/entities/``. So we can then look in ``daffodil-test/src/test/resources/org/apache/daffodil/section06/entities/entities_01.tdml`` add look for the parserTestCase with name ``entity_fail_06`` to find the inputs and expected outputs/errors of this test.\r\n\r\nNote that a shortcut that works in the majority of cases (at least for tests in the daffodil-test project) is to just grep tdml files for the test name with the ``test_`` prefix removed--Scala tests have the prefix, associated TMDL test names do not. So for example, if the test name that failed was \"test_fooBarTest_01\", then you can just grep for \"fooBarTest_01\" in all tdml files, for example:\r\n```\r\n$ grep -R fooBarTest_01 --include *.tdml\r\n```\r\nMore often than not, that will return one result which is the tdml file the test is in. If it doesn't return anything, you maybe have to take the longer approach mentioned before.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/774038638/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/775990558","html_url":"https://github.com/apache/daffodil/pull/489#issuecomment-775990558","issue_url":"https://api.github.com/repos/apache/daffodil/issues/489","id":775990558,"node_id":"MDEyOklzc3VlQ29tbWVudDc3NTk5MDU1OA==","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-09T14:43:06Z","updated_at":"2021-02-09T14:43:06Z","author_association":"MEMBER","body":"> That's another reason why we need to fix the scala compiler warning settings. In principle it should have told us there were no reads of prior pointer right?\r\n\r\nI'm not sure. There was technically a read here in this code that was removed:\r\n```scala\r\n  private var _prior: UStateForSuspension = null\r\n  override def prior = _prior\r\n```\r\nAnd although the ``def prior`` is never called anywhere in Daffodil, it is a public function so theoretically could be used by library using Daffodil. I think because of that scalac wouldn't warn about that. We probably need to get much better at marking things as public/private/protected before we get unused warnings.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/775990558/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/777395780","html_url":"https://github.com/apache/daffodil/pull/490#issuecomment-777395780","issue_url":"https://api.github.com/repos/apache/daffodil/issues/490","id":777395780,"node_id":"MDEyOklzc3VlQ29tbWVudDc3NzM5NTc4MA==","user":{"login":"susmita-m145","id":78781361,"node_id":"MDQ6VXNlcjc4NzgxMzYx","avatar_url":"https://avatars.githubusercontent.com/u/78781361?v=4","gravatar_id":"","url":"https://api.github.com/users/susmita-m145","html_url":"https://github.com/susmita-m145","followers_url":"https://api.github.com/users/susmita-m145/followers","following_url":"https://api.github.com/users/susmita-m145/following{/other_user}","gists_url":"https://api.github.com/users/susmita-m145/gists{/gist_id}","starred_url":"https://api.github.com/users/susmita-m145/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/susmita-m145/subscriptions","organizations_url":"https://api.github.com/users/susmita-m145/orgs","repos_url":"https://api.github.com/users/susmita-m145/repos","events_url":"https://api.github.com/users/susmita-m145/events{/privacy}","received_events_url":"https://api.github.com/users/susmita-m145/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-11T11:52:14Z","updated_at":"2021-02-11T11:52:14Z","author_association":"NONE","body":"Kindly review my changes","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/777395780/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/777462074","html_url":"https://github.com/apache/daffodil/pull/490#issuecomment-777462074","issue_url":"https://api.github.com/repos/apache/daffodil/issues/490","id":777462074,"node_id":"MDEyOklzc3VlQ29tbWVudDc3NzQ2MjA3NA==","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-11T13:36:11Z","updated_at":"2021-02-11T13:36:11Z","author_association":"MEMBER","body":"It would also be really helpful to add a test so that this new code has some test coverage to make sure we don't accidentally break this in the future.\r\n\r\nIt looks like we have similar tests in ``daffodil-test/src/test/resources/org/apache/daffodil/section10/representation_properties/encodings.tdml``. The easiest way to add this test would be to:\r\n1. Copy the ``eString`` element to make a new element with this new encoding\r\n2. Copy the ``ebcidc1`` parserTestCase to create a new parserTestCase with a unique name and that uses your new element as the root\r\n\r\nWith that done, you just need to modify ``daffodil-test/src/test/scala/org/apache/daffodil/section10/representation_properties/TestRepProps2.scala`` and copy ``def test_ebcdic1`` to run your new parser test case.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/777462074/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/779965923","html_url":"https://github.com/apache/daffodil/pull/491#issuecomment-779965923","issue_url":"https://api.github.com/repos/apache/daffodil/issues/491","id":779965923,"node_id":"MDEyOklzc3VlQ29tbWVudDc3OTk2NTkyMw==","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-16T16:48:54Z","updated_at":"2021-02-16T16:48:54Z","author_association":"MEMBER","body":"List of things that must be updated before this should be merged to allow things to work:\r\n* Daffodil accepted by the ASF board as a TLP\r\n* Repos renamed to https://github.com/apache/daffodil and https://github.com/apache/daffodil-site\r\n* Codecov updated to work with the new repo URLs (that might be automatic with the rename)\r\n* Sonarcloud configuration\r\n* daffodil directory created in dist.apache.org/repos/","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/779965923/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/780093348","html_url":"https://github.com/apache/daffodil/pull/491#issuecomment-780093348","issue_url":"https://api.github.com/repos/apache/daffodil/issues/491","id":780093348,"node_id":"MDEyOklzc3VlQ29tbWVudDc4MDA5MzM0OA==","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-16T20:19:43Z","updated_at":"2021-02-16T20:19:43Z","author_association":"MEMBER","body":"> Might need to test Windows installer before doing a real release if not already tested.\r\n\r\nDefinitely. The release candidate builder that builds the windows exe currently works by cloning the repo, so it's a bit difficult to test things that haven't been committed, without hacking a bunch of stuff together. I'm thinking that before merging, I can make some tweaks so it clones my fork and that should give some confidence that it works before merging (haven't done that). But to be 100% sure it needs to be tested after merged. Fortunately, there's a --dry-run option so that should make it pretty easy to build a test release.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/780093348/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/780627557","html_url":"https://github.com/apache/daffodil/pull/491#issuecomment-780627557","issue_url":"https://api.github.com/repos/apache/daffodil/issues/491","id":780627557,"node_id":"MDEyOklzc3VlQ29tbWVudDc4MDYyNzU1Nw==","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-17T15:18:47Z","updated_at":"2021-02-17T15:18:47Z","author_association":"MEMBER","body":"I spent some time this morning building/testing the windows MSI. And I did find fix a couple issues that are now fixed in the latest fixup commit. I am much more confident that the windows MSI installer works and has no references to incubation anymore.\r\n\r\nWe'll still want to test the release candiate script once repos are renamed and this commit is merged to make sure that all works, but I think the windows aspect of that should be good.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/780627557/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/780775502","html_url":"https://github.com/apache/daffodil/pull/491#issuecomment-780775502","issue_url":"https://api.github.com/repos/apache/daffodil/issues/491","id":780775502,"node_id":"MDEyOklzc3VlQ29tbWVudDc4MDc3NTUwMg==","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-17T18:56:19Z","updated_at":"2021-02-17T18:56:19Z","author_association":"MEMBER","body":"Note to self, we also need to update the following wiki pages once the transition is complete:\r\n\r\n* [Code Contributor Workflow](https://cwiki.apache.org/confluence/display/DAFFODIL/Code+Contributor+Workflow)\r\n* [Release Workflow](https://cwiki.apache.org/confluence/display/DAFFODIL/Release+Workflow)","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/780775502/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/781574306","html_url":"https://github.com/apache/daffodil/pull/491#issuecomment-781574306","issue_url":"https://api.github.com/repos/apache/daffodil/issues/491","id":781574306,"node_id":"MDEyOklzc3VlQ29tbWVudDc4MTU3NDMwNg==","user":{"login":"mbeckerle","id":1524099,"node_id":"MDQ6VXNlcjE1MjQwOTk=","avatar_url":"https://avatars.githubusercontent.com/u/1524099?v=4","gravatar_id":"","url":"https://api.github.com/users/mbeckerle","html_url":"https://github.com/mbeckerle","followers_url":"https://api.github.com/users/mbeckerle/followers","following_url":"https://api.github.com/users/mbeckerle/following{/other_user}","gists_url":"https://api.github.com/users/mbeckerle/gists{/gist_id}","starred_url":"https://api.github.com/users/mbeckerle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbeckerle/subscriptions","organizations_url":"https://api.github.com/users/mbeckerle/orgs","repos_url":"https://api.github.com/users/mbeckerle/repos","events_url":"https://api.github.com/users/mbeckerle/events{/privacy}","received_events_url":"https://api.github.com/users/mbeckerle/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-18T19:14:41Z","updated_at":"2021-02-18T19:14:41Z","author_association":"CONTRIBUTOR","body":"Checklist of external places that refer to Daffodil as incubator that will need updating:\r\nI did a google web search for \"apache daffodil (incubating)\" and ran through the various returns there. \r\n\r\nThese reference the github repo, so can't be updated until the repo location/name is updated:\r\n* scaladex - https://index.scala-lang.org/apache/incubator-daffodil/daffodil-core/3.0.0?target=_2.12\r\n* openhub - https://www.openhub.net/p/dfdl-daffodil\r\n\r\nThis also has mentions explicitly of \"apache daffodil (incubating)\"\r\n* daffodil nifi - https://opensource.ncsa.illinois.edu/bitbucket/projects/DFDL/repos/daffodil-nifi/browse\r\n\r\nI already updated github DFDLSchemas site, and references to daffodil (incubating) within individual schemas I searched and they're not there, or if they are, they're in a historic context where I don't think we need to update them. \r\n\r\nI verified the wikipedia page on DFDL does not mention \"(incubating)\" w.r.t. daffodil. \r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/781574306/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/781579155","html_url":"https://github.com/apache/daffodil/pull/491#issuecomment-781579155","issue_url":"https://api.github.com/repos/apache/daffodil/issues/491","id":781579155,"node_id":"MDEyOklzc3VlQ29tbWVudDc4MTU3OTE1NQ==","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-18T19:23:22Z","updated_at":"2021-02-18T19:23:22Z","author_association":"MEMBER","body":"I'm not sure we have access to the NCSA repo anymore. The maintained NiFi Daffodil repo has moved to https://github.com/TresysTechnology/nifi-daffodil. I have just now updated that repo to remove the incubating.\r\n","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/781579155/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/781583050","html_url":"https://github.com/apache/daffodil/pull/491#issuecomment-781583050","issue_url":"https://api.github.com/repos/apache/daffodil/issues/491","id":781583050,"node_id":"MDEyOklzc3VlQ29tbWVudDc4MTU4MzA1MA==","user":{"login":"mbeckerle","id":1524099,"node_id":"MDQ6VXNlcjE1MjQwOTk=","avatar_url":"https://avatars.githubusercontent.com/u/1524099?v=4","gravatar_id":"","url":"https://api.github.com/users/mbeckerle","html_url":"https://github.com/mbeckerle","followers_url":"https://api.github.com/users/mbeckerle/followers","following_url":"https://api.github.com/users/mbeckerle/following{/other_user}","gists_url":"https://api.github.com/users/mbeckerle/gists{/gist_id}","starred_url":"https://api.github.com/users/mbeckerle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbeckerle/subscriptions","organizations_url":"https://api.github.com/users/mbeckerle/orgs","repos_url":"https://api.github.com/users/mbeckerle/repos","events_url":"https://api.github.com/users/mbeckerle/events{/privacy}","received_events_url":"https://api.github.com/users/mbeckerle/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-18T19:30:28Z","updated_at":"2021-02-18T19:30:28Z","author_association":"CONTRIBUTOR","body":"I definitely do not have write access to the ncsa repo, though I can login. Probably would be good to put a forwarding link in the README file. But if nobody has write access, then we can just let this fade away in time. ","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/781583050/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/782115391","html_url":"https://github.com/apache/daffodil/pull/491#issuecomment-782115391","issue_url":"https://api.github.com/repos/apache/daffodil/issues/491","id":782115391,"node_id":"MDEyOklzc3VlQ29tbWVudDc4MjExNTM5MQ==","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-19T14:38:44Z","updated_at":"2021-02-19T14:38:44Z","author_association":"MEMBER","body":"I did some testing with the release candidate script this morning. I renamed my forked github repos to \"daffodil\" and \"daffodil-site\" (I reccomend others do this too), and temporarily tweaked the release candidate script to build from my fork instead of from apache and ran a dry run. Only issue was the missing ``dist/{dev,release}/daffodil`` directories. I've created those and now the release candidate scripts works with no issues, and I didn't find any instances of \"incubat*\". All that's left I think is for INFRA to rename the apache github repos and I'm pretty confident this change can be safely merged.  ","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/782115391/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/782239429","html_url":"https://github.com/apache/daffodil/pull/491#issuecomment-782239429","issue_url":"https://api.github.com/repos/apache/daffodil/issues/491","id":782239429,"node_id":"MDEyOklzc3VlQ29tbWVudDc4MjIzOTQyOQ==","user":{"login":"mbeckerle","id":1524099,"node_id":"MDQ6VXNlcjE1MjQwOTk=","avatar_url":"https://avatars.githubusercontent.com/u/1524099?v=4","gravatar_id":"","url":"https://api.github.com/users/mbeckerle","html_url":"https://github.com/mbeckerle","followers_url":"https://api.github.com/users/mbeckerle/followers","following_url":"https://api.github.com/users/mbeckerle/following{/other_user}","gists_url":"https://api.github.com/users/mbeckerle/gists{/gist_id}","starred_url":"https://api.github.com/users/mbeckerle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbeckerle/subscriptions","organizations_url":"https://api.github.com/users/mbeckerle/orgs","repos_url":"https://api.github.com/users/mbeckerle/repos","events_url":"https://api.github.com/users/mbeckerle/events{/privacy}","received_events_url":"https://api.github.com/users/mbeckerle/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-19T18:00:04Z","updated_at":"2021-02-19T18:01:19Z","author_association":"CONTRIBUTOR","body":"OpenHub has been updated.\r\n\r\nScaladex - according to \r\nhttps://github.com/scalacenter/scaladex\r\nand\r\nhttps://github.com/scalacenter/scaladex-contrib\r\nit seems this site updates itself by pulling from maven central, so long as what is pushed there has an scm tag indicating where the source lives. ","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/782239429/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/782241638","html_url":"https://github.com/apache/daffodil/pull/491#issuecomment-782241638","issue_url":"https://api.github.com/repos/apache/daffodil/issues/491","id":782241638,"node_id":"MDEyOklzc3VlQ29tbWVudDc4MjI0MTYzOA==","user":{"login":"mbeckerle","id":1524099,"node_id":"MDQ6VXNlcjE1MjQwOTk=","avatar_url":"https://avatars.githubusercontent.com/u/1524099?v=4","gravatar_id":"","url":"https://api.github.com/users/mbeckerle","html_url":"https://github.com/mbeckerle","followers_url":"https://api.github.com/users/mbeckerle/followers","following_url":"https://api.github.com/users/mbeckerle/following{/other_user}","gists_url":"https://api.github.com/users/mbeckerle/gists{/gist_id}","starred_url":"https://api.github.com/users/mbeckerle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbeckerle/subscriptions","organizations_url":"https://api.github.com/users/mbeckerle/orgs","repos_url":"https://api.github.com/users/mbeckerle/repos","events_url":"https://api.github.com/users/mbeckerle/events{/privacy}","received_events_url":"https://api.github.com/users/mbeckerle/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-19T18:03:52Z","updated_at":"2021-02-19T18:03:52Z","author_association":"CONTRIBUTOR","body":"I believe this means this won't update until a release is pushed to maven central that has source scm tag that does not specify \"incubating-\" in it. \r\n","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/782241638/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/782243784","html_url":"https://github.com/apache/daffodil/pull/491#issuecomment-782243784","issue_url":"https://api.github.com/repos/apache/daffodil/issues/491","id":782243784,"node_id":"MDEyOklzc3VlQ29tbWVudDc4MjI0Mzc4NA==","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-19T18:07:39Z","updated_at":"2021-02-19T18:07:39Z","author_association":"MEMBER","body":"Yeah, I think you're right. I have confirmed the new poms do have the new github URL, so once we do a release this should be fixed. \r\n\r\nThough github.com/apache/incubator-daffodil does redirect to github.com/apache/daffodil, so if scaladex can follow redirects, it might auto update?","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/782243784/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/782245478","html_url":"https://github.com/apache/daffodil/pull/491#issuecomment-782245478","issue_url":"https://api.github.com/repos/apache/daffodil/issues/491","id":782245478,"node_id":"MDEyOklzc3VlQ29tbWVudDc4MjI0NTQ3OA==","user":{"login":"mbeckerle","id":1524099,"node_id":"MDQ6VXNlcjE1MjQwOTk=","avatar_url":"https://avatars.githubusercontent.com/u/1524099?v=4","gravatar_id":"","url":"https://api.github.com/users/mbeckerle","html_url":"https://github.com/mbeckerle","followers_url":"https://api.github.com/users/mbeckerle/followers","following_url":"https://api.github.com/users/mbeckerle/following{/other_user}","gists_url":"https://api.github.com/users/mbeckerle/gists{/gist_id}","starred_url":"https://api.github.com/users/mbeckerle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbeckerle/subscriptions","organizations_url":"https://api.github.com/users/mbeckerle/orgs","repos_url":"https://api.github.com/users/mbeckerle/repos","events_url":"https://api.github.com/users/mbeckerle/events{/privacy}","received_events_url":"https://api.github.com/users/mbeckerle/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-19T18:10:23Z","updated_at":"2021-02-19T18:10:23Z","author_association":"CONTRIBUTOR","body":"Furthermore, unfortunately, at Maven central, the link for source code for daffodil specifies the gitbox URL \r\nhttps://gitbox.apache.org/repos/asf/incubator-daffodil.git\r\nAnd this fails. \r\n\r\nMoving this to a JIRA ticket https://issues.apache.org/jira/browse/DAFFODIL-2471","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/782245478/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/782293821","html_url":"https://github.com/apache/daffodil/pull/491#issuecomment-782293821","issue_url":"https://api.github.com/repos/apache/daffodil/issues/491","id":782293821,"node_id":"MDEyOklzc3VlQ29tbWVudDc4MjI5MzgyMQ==","user":{"login":"jw3","id":1545372,"node_id":"MDQ6VXNlcjE1NDUzNzI=","avatar_url":"https://avatars.githubusercontent.com/u/1545372?v=4","gravatar_id":"","url":"https://api.github.com/users/jw3","html_url":"https://github.com/jw3","followers_url":"https://api.github.com/users/jw3/followers","following_url":"https://api.github.com/users/jw3/following{/other_user}","gists_url":"https://api.github.com/users/jw3/gists{/gist_id}","starred_url":"https://api.github.com/users/jw3/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jw3/subscriptions","organizations_url":"https://api.github.com/users/jw3/orgs","repos_url":"https://api.github.com/users/jw3/repos","events_url":"https://api.github.com/users/jw3/events{/privacy}","received_events_url":"https://api.github.com/users/jw3/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-19T19:31:45Z","updated_at":"2021-02-19T19:31:45Z","author_association":"MEMBER","body":"Non code update, the about line on the github page\r\n\r\n![image](https://user-images.githubusercontent.com/1545372/108552330-26310980-72bf-11eb-98f8-ad43975f8ce8.png)\r\n","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/782293821/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/782294826","html_url":"https://github.com/apache/daffodil/pull/491#issuecomment-782294826","issue_url":"https://api.github.com/repos/apache/daffodil/issues/491","id":782294826,"node_id":"MDEyOklzc3VlQ29tbWVudDc4MjI5NDgyNg==","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-19T19:33:43Z","updated_at":"2021-02-19T19:33:43Z","author_association":"MEMBER","body":"Ah, good find. We could have infra fix this, but the better more future proof method is probably to add a [.asf.yml](https://cwiki.apache.org/confluence/display/INFRA/Git+-+.asf.yaml+features) file. That let's us change the description, but also configure other aspects of github.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/782294826/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/782308855","html_url":"https://github.com/apache/daffodil/pull/491#issuecomment-782308855","issue_url":"https://api.github.com/repos/apache/daffodil/issues/491","id":782308855,"node_id":"MDEyOklzc3VlQ29tbWVudDc4MjMwODg1NQ==","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-19T20:02:45Z","updated_at":"2021-02-19T20:02:45Z","author_association":"MEMBER","body":"Just created PR #492 to hopefuly fix the description and allow us to configure gitbox/github more easily in the future.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/782308855/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/784704471","html_url":"https://github.com/apache/daffodil/pull/473#issuecomment-784704471","issue_url":"https://api.github.com/repos/apache/daffodil/issues/473","id":784704471,"node_id":"MDEyOklzc3VlQ29tbWVudDc4NDcwNDQ3MQ==","user":{"login":"jadams-tresys","id":30659277,"node_id":"MDQ6VXNlcjMwNjU5Mjc3","avatar_url":"https://avatars.githubusercontent.com/u/30659277?v=4","gravatar_id":"","url":"https://api.github.com/users/jadams-tresys","html_url":"https://github.com/jadams-tresys","followers_url":"https://api.github.com/users/jadams-tresys/followers","following_url":"https://api.github.com/users/jadams-tresys/following{/other_user}","gists_url":"https://api.github.com/users/jadams-tresys/gists{/gist_id}","starred_url":"https://api.github.com/users/jadams-tresys/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jadams-tresys/subscriptions","organizations_url":"https://api.github.com/users/jadams-tresys/orgs","repos_url":"https://api.github.com/users/jadams-tresys/repos","events_url":"https://api.github.com/users/jadams-tresys/events{/privacy}","received_events_url":"https://api.github.com/users/jadams-tresys/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-24T02:35:02Z","updated_at":"2021-02-24T02:35:02Z","author_association":"CONTRIBUTOR","body":"Got things working with the one scoping issue I was running into.  Still need to add a test for the newVariableInstance/setVar scenario that Steve was describing.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/784704471/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/785869790","html_url":"https://github.com/apache/daffodil/pull/493#issuecomment-785869790","issue_url":"https://api.github.com/repos/apache/daffodil/issues/493","id":785869790,"node_id":"MDEyOklzc3VlQ29tbWVudDc4NTg2OTc5MA==","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-25T12:46:32Z","updated_at":"2021-02-25T12:46:32Z","author_association":"MEMBER","body":"This doesn't change how suspension deadlocks are displayed, only let's you see what suspensions are active during an unparse. All that deadlock output logic is unchanged. Yeah, a toStringForDebugger, or something similar, definitely seems needed to make this output a big more useful. What we currently have is useful to get an idea of what's going on, but if things are going wrong, and things like suspensions are blocked that you wouldn't expect to be, or for longer than you would expect, the current output doesn't help with that. This definitely isn't the last change for suspension info output.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/785869790/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/785906588","html_url":"https://github.com/apache/daffodil/pull/493#issuecomment-785906588","issue_url":"https://api.github.com/repos/apache/daffodil/issues/493","id":785906588,"node_id":"MDEyOklzc3VlQ29tbWVudDc4NTkwNjU4OA==","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-02-25T13:47:11Z","updated_at":"2021-02-25T13:47:11Z","author_association":"MEMBER","body":"You might need to be logged in to codecov (proably via their Github auth method) for those links to work? I don't know why that's required but if I go to incognito mode or log out I get the same errors you see.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/785906588/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/791604139","html_url":"https://github.com/apache/daffodil/pull/478#issuecomment-791604139","issue_url":"https://api.github.com/repos/apache/daffodil/issues/478","id":791604139,"node_id":"MDEyOklzc3VlQ29tbWVudDc5MTYwNDEzOQ==","user":{"login":"olabusayoT","id":50379531,"node_id":"MDQ6VXNlcjUwMzc5NTMx","avatar_url":"https://avatars.githubusercontent.com/u/50379531?v=4","gravatar_id":"","url":"https://api.github.com/users/olabusayoT","html_url":"https://github.com/olabusayoT","followers_url":"https://api.github.com/users/olabusayoT/followers","following_url":"https://api.github.com/users/olabusayoT/following{/other_user}","gists_url":"https://api.github.com/users/olabusayoT/gists{/gist_id}","starred_url":"https://api.github.com/users/olabusayoT/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/olabusayoT/subscriptions","organizations_url":"https://api.github.com/users/olabusayoT/orgs","repos_url":"https://api.github.com/users/olabusayoT/repos","events_url":"https://api.github.com/users/olabusayoT/events{/privacy}","received_events_url":"https://api.github.com/users/olabusayoT/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-05T18:33:49Z","updated_at":"2021-03-05T18:33:49Z","author_association":"CONTRIBUTOR","body":"@stevedlawrence  and @mbeckerle, please re-review when you can. I'll rebase with master once changes are approved","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/791604139/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/792022040","html_url":"https://github.com/apache/daffodil/pull/494#issuecomment-792022040","issue_url":"https://api.github.com/repos/apache/daffodil/issues/494","id":792022040,"node_id":"MDEyOklzc3VlQ29tbWVudDc5MjAyMjA0MA==","user":{"login":"tuxji","id":5915561,"node_id":"MDQ6VXNlcjU5MTU1NjE=","avatar_url":"https://avatars.githubusercontent.com/u/5915561?v=4","gravatar_id":"","url":"https://api.github.com/users/tuxji","html_url":"https://github.com/tuxji","followers_url":"https://api.github.com/users/tuxji/followers","following_url":"https://api.github.com/users/tuxji/following{/other_user}","gists_url":"https://api.github.com/users/tuxji/gists{/gist_id}","starred_url":"https://api.github.com/users/tuxji/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tuxji/subscriptions","organizations_url":"https://api.github.com/users/tuxji/orgs","repos_url":"https://api.github.com/users/tuxji/repos","events_url":"https://api.github.com/users/tuxji/events{/privacy}","received_events_url":"https://api.github.com/users/tuxji/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-06T18:53:30Z","updated_at":"2021-03-06T18:53:30Z","author_association":"CONTRIBUTOR","body":"Passing diagnostics to TDMLRunner and looking for a way to make it check runtime2 TDML warnings was more tricky than I expected.  I still had to set defaultShouldDoWarningComparisonOnCrossTests temporarily true in RunnerFactory while running runtime2's ex_nums.tdml tests to verify that I could get the generator's warnings checked appropriately.  Otherwise, the generator's warnings are never checked because TDMLRunner considers runtime2's TDML tests to be cross tests.  However, we will see generator warnings when we run \"daffodil generate c -s ex_nums.dfdl.xsd\" now:\r\n\r\n    [warning] Schema Definition Warning: Ignoring PrimType integer, using short\r\n    Schema context: be_integer16 Location line 81 column 30 in file:/home/interran/apache/daffodil-runtime2/daffodil-runtime2/src/test/resources/org/apache/daffodil/runtime2/ex_nums.dfdl.xsd\r\n    [warning] Schema Definition Warning: Ignoring PrimType nonNegativeInteger, using unsignedInt\r\n    Schema context: be_nonNegativeInteger32 Location line 88 column 30 in file:/home/interran/apache/daffodil-runtime2/daffodil-runtime2/src/test/resources/org/apache/daffodil/runtime2/ex_nums.dfdl.xsd\r\n    [warning] Schema Definition Warning: Ignoring PrimType integer, using long\r\n    Schema context: le_integer64 Location line 124 column 30 in file:/home/interran/apache/daffodil-runtime2/daffodil-runtime2/src/test/resources/org/apache/daffodil/runtime2/ex_nums.dfdl.xsd\r\n    [warning] Schema Definition Warning: Ignoring PrimType nonNegativeInteger, using unsignedByte\r\n    Schema context: le_nonNegativeInteger8 Location line 136 column 30 in file:/home/interran/apache/daffodil-runtime2/daffodil-runtime2/src/test/resources/org/apache/daffodil/runtime2/ex_nums.dfdl.xsd\r\n\r\nI've addressed all the comments; please review the pull request and approve it or ask for more changes.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/792022040/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/792835342","html_url":"https://github.com/apache/daffodil/pull/496#issuecomment-792835342","issue_url":"https://api.github.com/repos/apache/daffodil/issues/496","id":792835342,"node_id":"MDEyOklzc3VlQ29tbWVudDc5MjgzNTM0Mg==","user":{"login":"mbeckerle","id":1524099,"node_id":"MDQ6VXNlcjE1MjQwOTk=","avatar_url":"https://avatars.githubusercontent.com/u/1524099?v=4","gravatar_id":"","url":"https://api.github.com/users/mbeckerle","html_url":"https://github.com/mbeckerle","followers_url":"https://api.github.com/users/mbeckerle/followers","following_url":"https://api.github.com/users/mbeckerle/following{/other_user}","gists_url":"https://api.github.com/users/mbeckerle/gists{/gist_id}","starred_url":"https://api.github.com/users/mbeckerle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbeckerle/subscriptions","organizations_url":"https://api.github.com/users/mbeckerle/orgs","repos_url":"https://api.github.com/users/mbeckerle/repos","events_url":"https://api.github.com/users/mbeckerle/events{/privacy}","received_events_url":"https://api.github.com/users/mbeckerle/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-08T15:33:35Z","updated_at":"2021-03-08T15:33:35Z","author_association":"CONTRIBUTOR","body":"I would like us to have a wiki page on our confluence discussing the review criteria for these automated updates. I.e., a checklist of what we should be ckecking on to convince ourselves that one of these upgrades is acceptable. ","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/792835342/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/792838937","html_url":"https://github.com/apache/daffodil/pull/496#issuecomment-792838937","issue_url":"https://api.github.com/repos/apache/daffodil/issues/496","id":792838937,"node_id":"MDEyOklzc3VlQ29tbWVudDc5MjgzODkzNw==","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-08T15:39:06Z","updated_at":"2021-03-08T15:39:06Z","author_association":"MEMBER","body":"Agreed, I'll create a page.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/792838937/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/792840794","html_url":"https://github.com/apache/daffodil/pull/496#issuecomment-792840794","issue_url":"https://api.github.com/repos/apache/daffodil/issues/496","id":792840794,"node_id":"MDEyOklzc3VlQ29tbWVudDc5Mjg0MDc5NA==","user":{"login":"tuxji","id":5915561,"node_id":"MDQ6VXNlcjU5MTU1NjE=","avatar_url":"https://avatars.githubusercontent.com/u/5915561?v=4","gravatar_id":"","url":"https://api.github.com/users/tuxji","html_url":"https://github.com/tuxji","followers_url":"https://api.github.com/users/tuxji/followers","following_url":"https://api.github.com/users/tuxji/following{/other_user}","gists_url":"https://api.github.com/users/tuxji/gists{/gist_id}","starred_url":"https://api.github.com/users/tuxji/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tuxji/subscriptions","organizations_url":"https://api.github.com/users/tuxji/orgs","repos_url":"https://api.github.com/users/tuxji/repos","events_url":"https://api.github.com/users/tuxji/events{/privacy}","received_events_url":"https://api.github.com/users/tuxji/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-08T15:42:01Z","updated_at":"2021-03-08T15:42:01Z","author_association":"CONTRIBUTOR","body":"I agree we need a checklist.  I just realized I overlooked that daffodil-cli/bin.NOTICE still mentions jackson-core's old version number.  The review criteria should include:\r\n\r\n1) A determination whether the version update is a patch, minor, or major update.  Major updates need more stringent review criteria than the other updates, at least a manual reading of the library's release notes / changelog to check for API changes.\r\n\r\n2) How to update any files like daffodil-cli/bin.NOTICE.  Should we push a commit to each and every pull request updating that page AND squash the commits together before merging each pull request?  Or update the daffodil-cli/bin.NOTICE file once in one last manually made pull request?","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/792840794/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/792861464","html_url":"https://github.com/apache/daffodil/pull/496#issuecomment-792861464","issue_url":"https://api.github.com/repos/apache/daffodil/issues/496","id":792861464,"node_id":"MDEyOklzc3VlQ29tbWVudDc5Mjg2MTQ2NA==","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-08T16:07:01Z","updated_at":"2021-03-08T16:07:01Z","author_association":"MEMBER","body":"I've created this page as a starting point for documentation:\r\n\r\nhttps://cwiki.apache.org/confluence/display/DAFFODIL/Scala+Steward\r\n\r\nFeel free to add anything if I missed anything.\r\n\r\nI also added a way I suggest we make changes, which is exactly the same as our normal work flow except any changes are pushed to the appropriate branch on the scala-steward/daffodil fork rather than our own fork. I perfer it done this way (one for every fork) so that the version bump and any related changes (e.g. API updates, license changes) are in the same commit. This might be a bit of a pain for this first go around, but hopefully things haven't changed their licenses. And once we get through this big set, it should be easier to keep up with it.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/792861464/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/792869730","html_url":"https://github.com/apache/daffodil/pull/496#issuecomment-792869730","issue_url":"https://api.github.com/repos/apache/daffodil/issues/496","id":792869730,"node_id":"MDEyOklzc3VlQ29tbWVudDc5Mjg2OTczMA==","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-08T16:17:34Z","updated_at":"2021-03-08T16:18:00Z","author_association":"MEMBER","body":"Another thought, we might want to update our LICENSE/NOTICE files to say something like ``foo-<VERSION>.jar`` or ``foo-*.jar`` so that we don't need to update the LICENSE/NOTICE file for every version bump. That's a bit of a pain, and I'm not sure we gain much extra by including specific jar versions in these files.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/792869730/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/792880195","html_url":"https://github.com/apache/daffodil/pull/496#issuecomment-792880195","issue_url":"https://api.github.com/repos/apache/daffodil/issues/496","id":792880195,"node_id":"MDEyOklzc3VlQ29tbWVudDc5Mjg4MDE5NQ==","user":{"login":"tuxji","id":5915561,"node_id":"MDQ6VXNlcjU5MTU1NjE=","avatar_url":"https://avatars.githubusercontent.com/u/5915561?v=4","gravatar_id":"","url":"https://api.github.com/users/tuxji","html_url":"https://github.com/tuxji","followers_url":"https://api.github.com/users/tuxji/followers","following_url":"https://api.github.com/users/tuxji/following{/other_user}","gists_url":"https://api.github.com/users/tuxji/gists{/gist_id}","starred_url":"https://api.github.com/users/tuxji/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tuxji/subscriptions","organizations_url":"https://api.github.com/users/tuxji/orgs","repos_url":"https://api.github.com/users/tuxji/repos","events_url":"https://api.github.com/users/tuxji/events{/privacy}","received_events_url":"https://api.github.com/users/tuxji/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-08T16:31:35Z","updated_at":"2021-03-08T16:32:24Z","author_association":"CONTRIBUTOR","body":"Yes, let's replace the explicit version numbers in LICENSE/NOTICE files with `foo-<VERSION>.jar` to reduce the number of times we need to update our LICENSE/NOTICE files manually to only whenever the library changes its own LICENSE.  \r\n\r\nI found a problem with the first git command in the Confluence page <https://cwiki.apache.org/confluence/display/DAFFODIL/Scala+Steward>.  I logged into Confluence (I have an account with the username \"interran\" and name \"John Interrante\") but I don't have the ability to edit the page or add a comment to it so I will have to suggest the correction here.  The first git command adds the wrong repo URL as the remote URL (right now it adds Scala Stewart's own github repo as the url, not Scala Stewart's github fork of the Daffodil repo).  Please change it to:\r\n\r\n`git remote add scala-steward git@github.com:scala-steward/daffodil.git`\r\n\r\nNote I'm not sure if we will have permission to push a commit to the Scala Stewart fork, but let's find out.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/792880195/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/792887928","html_url":"https://github.com/apache/daffodil/pull/496#issuecomment-792887928","issue_url":"https://api.github.com/repos/apache/daffodil/issues/496","id":792887928,"node_id":"MDEyOklzc3VlQ29tbWVudDc5Mjg4NzkyOA==","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-08T16:41:41Z","updated_at":"2021-03-08T16:41:41Z","author_association":"MEMBER","body":"@tuxji I've given you full permissions to the wiki.\r\n\r\nAlso, GitHub has a feature that lets owners of a repo to push to fork branches that have been submitted as pull requests as long as the pull request creator allows it (which is the default). Scala steward allows this, so we should be able to push to their daffodil fork.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/792887928/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/792888105","html_url":"https://github.com/apache/daffodil/pull/496#issuecomment-792888105","issue_url":"https://api.github.com/repos/apache/daffodil/issues/496","id":792888105,"node_id":"MDEyOklzc3VlQ29tbWVudDc5Mjg4ODEwNQ==","user":{"login":"tuxji","id":5915561,"node_id":"MDQ6VXNlcjU5MTU1NjE=","avatar_url":"https://avatars.githubusercontent.com/u/5915561?v=4","gravatar_id":"","url":"https://api.github.com/users/tuxji","html_url":"https://github.com/tuxji","followers_url":"https://api.github.com/users/tuxji/followers","following_url":"https://api.github.com/users/tuxji/following{/other_user}","gists_url":"https://api.github.com/users/tuxji/gists{/gist_id}","starred_url":"https://api.github.com/users/tuxji/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tuxji/subscriptions","organizations_url":"https://api.github.com/users/tuxji/orgs","repos_url":"https://api.github.com/users/tuxji/repos","events_url":"https://api.github.com/users/tuxji/events{/privacy}","received_events_url":"https://api.github.com/users/tuxji/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-08T16:41:56Z","updated_at":"2021-03-08T16:41:56Z","author_association":"CONTRIBUTOR","body":"We don't HAVE to mention the branch name in BOTH the second and third git commands in the Confluence page.  We could simply fetch from all our upstream repos and only then say which branch we want to check out:\r\n\r\n```shell\r\ninterran@GH3WPL13E:~/apache/daffodil-asf$ git fetch --all\r\nFetching origin\r\nFetching scala-steward\r\nremote: Enumerating objects: 53, done.\r\nremote: Counting objects: 100% (53/53), done.\r\nremote: Compressing objects: 100% (13/13), done.\r\nremote: Total 55 (delta 40), reused 53 (delta 40), pack-reused 2\r\nUnpacking objects: 100% (55/55), 12.81 KiB | 184.00 KiB/s, done.\r\nFrom github.com:scala-steward/daffodil\r\n * [new branch]          master                           -> scala-steward/master\r\n * [new branch]          runtime2-2202                    -> scala-steward/runtime2-2202\r\n * [new branch]          update/Saxon-HE-9.9.1-8          -> scala-steward/update/Saxon-HE-9.9.1-8\r\n * [new branch]          update/icu4j-68.2                -> scala-steward/update/icu4j-68.2\r\n * [new branch]          update/jackson-core-2.11.4       -> scala-steward/update/jackson-core-2.11.4\r\n * [new branch]          update/jansi-1.18                -> scala-steward/update/jansi-1.18\r\n * [new branch]          update/junit-4.13.2              -> scala-steward/update/junit-4.13.2\r\n * [new branch]          update/sbt-1.4.8                 -> scala-steward/update/sbt-1.4.8\r\n * [new branch]          update/sbt-native-packager-1.7.6 -> scala-steward/update/sbt-native-packager-1.7.6\r\n * [new branch]          update/scala-library-2.12.13     -> scala-steward/update/scala-library-2.12.13\r\n * [new branch]          update/scalacheck-1.15.3         -> scala-steward/update/scalacheck-1.15.3\r\n * [new branch]          update/scallop-4.0.2             -> scala-steward/update/scallop-4.0.2\r\n * [new branch]          update/typesafe-1.4.1            -> scala-steward/update/typesafe-1.4.1\r\n * [new branch]          update/woodstox-core-6.2.4       -> scala-steward/update/woodstox-core-6.2.4\r\n * [new branch]          update/xercesImpl-2.12.1         -> scala-steward/update/xercesImpl-2.12.1\r\ninterran@GH3WPL13E:~/apache/daffodil-asf$ git checkout update/jackson-core-2.11.4\r\nBranch 'update/jackson-core-2.11.4' set up to track remote branch 'update/jackson-core-2.11.4' from 'scala-steward'.\r\nSwitched to a new branch 'update/jackson-core-2.11.4'\r\ninterran@GH3WPL13E:~/apache/daffodil-asf$\r\n```","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/792888105/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/792889900","html_url":"https://github.com/apache/daffodil/pull/496#issuecomment-792889900","issue_url":"https://api.github.com/repos/apache/daffodil/issues/496","id":792889900,"node_id":"MDEyOklzc3VlQ29tbWVudDc5Mjg4OTkwMA==","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-08T16:44:16Z","updated_at":"2021-03-08T16:44:16Z","author_association":"MEMBER","body":"I figured it would be cleaner to just do it on an individual branch basis so it doesn't pollute everything. Maybe steward will delete these branches once they are merged though, so maybe it's not too bad to just fetch everything. I'll update.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/792889900/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/793960178","html_url":"https://github.com/apache/daffodil/pull/481#issuecomment-793960178","issue_url":"https://api.github.com/repos/apache/daffodil/issues/481","id":793960178,"node_id":"MDEyOklzc3VlQ29tbWVudDc5Mzk2MDE3OA==","user":{"login":"regetom","id":11149210,"node_id":"MDQ6VXNlcjExMTQ5MjEw","avatar_url":"https://avatars.githubusercontent.com/u/11149210?v=4","gravatar_id":"","url":"https://api.github.com/users/regetom","html_url":"https://github.com/regetom","followers_url":"https://api.github.com/users/regetom/followers","following_url":"https://api.github.com/users/regetom/following{/other_user}","gists_url":"https://api.github.com/users/regetom/gists{/gist_id}","starred_url":"https://api.github.com/users/regetom/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/regetom/subscriptions","organizations_url":"https://api.github.com/users/regetom/orgs","repos_url":"https://api.github.com/users/regetom/repos","events_url":"https://api.github.com/users/regetom/events{/privacy}","received_events_url":"https://api.github.com/users/regetom/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-09T14:20:29Z","updated_at":"2021-03-09T14:20:29Z","author_association":"NONE","body":"With some help from John Wass I have been attempting to fix the problems causing the unit test failures.  The failure of testLengthKindDelimited2 in daffodil-core/src/test//scala/general/testPrimitives.scala has me stumped.  The test defines an element name \"e1\" that contains a complex type with <xs:sequence dfdl:separator=\"%WSP;%WSP*;\\%NL;%WSP;%WSP*;\" dfdl:separatorPosition=\"infix\">.  After the complex type definition it calls TestUtils.testString(sch, \"abcd  \\\\\\n  efgh\"). .TestUtils.testString calls runSchemaOnData(testSchema, Misc.stringToReadableByteChannel(data), areTracing).. runSchemaOnData calls Compiler.compileNode(testSchema).  Eventually evDelimiters.DelimiterEvlMixin.evalAndConvert calls converter.convertConstant(expressionResult, ci, false) with expressionResult =  \"%WSP;%WSP*;\\%NL;%WSP;%WSP*;\".  This results in a call to testRaw in DelimiterCookerNoES class of EntityReplacer.scal with raw = \"%WSP;%WSP*;\\%NL;%WSP;%WSP*;\".  This is where the error message \"Property dfdl:separator contains disallowed character classes: %WSP;, %WSP;\" is coming from.  When match Iterator is called it seems like the values to match are correct, but the returned result is \"%WSP, %WSP\".\r\n![image](https://user-images.githubusercontent.com/11149210/110484387-9958bf00-80b8-11eb-8db5-b756cdb443a3.png)\r\n","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/793960178/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/794025854","html_url":"https://github.com/apache/daffodil/pull/481#issuecomment-794025854","issue_url":"https://api.github.com/repos/apache/daffodil/issues/481","id":794025854,"node_id":"MDEyOklzc3VlQ29tbWVudDc5NDAyNTg1NA==","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-09T15:11:46Z","updated_at":"2021-03-09T15:11:46Z","author_association":"MEMBER","body":"I think I have an idea of what's going on here. The separator in this case is is ``%WSP;%WSP*;\\%NL;%WSP;%WSP*;``. The previous test in ``DelimiterCookerNoES`` looked like this:\r\n```scala\r\ncontext.schemaDefinitionUnless(raw != \"%WSP*;\", \"Property dfdl:%s cannot contain %%WSP*;...\")\r\ncontext.schemaDefinitionUnless(raw != \"%ES;\", \"Property dfdl:%s cannot contain %%ES;...\")\r\n```\r\nSo although the error messages is \"Property cannot contain %WSP* or %ES\", it was really only checking if the entire property value is ``%WSP*;`` or ``%ES;``. In this test case, the entire property value is neither of those (it's a bunch of combined character classes) and so it was allowed.\r\n\r\nBut with your new changes you have made it so ``ES`` and ``WSP*`` are disallowed if they show up **anywhere**, which is the case in this example. So you've changed the behavior to be much more strict than it previously was.\r\n\r\nThe DFDL spec says about the dfdl separator property:\r\n* DFDL Character Class ES is not allowed.\r\n* The WSP* entity cannot appear on its own as one of the string literals in the list when determining the length of a component by scanning for delimiters.\r\n\r\nSo we are doing the correct thing for ES by disallowing it, but WSP* shouldn't be blanket disallowed. It should only be disallowed if it's the sole separator.\r\n\r\nSo for DelimiterCookerNoES, ``disallowedCharClassEntities`` should contain only ``ES``. And we need an additional check for a sole WSP*. So what we probably for this cooker is something like this:\r\n\r\n```scala\r\noverride val disallowedCharClassEntities = Seq(\"ES\")\r\noverride def testRaw(raw: String, context: ThrowsSDE) = {\r\n  context.schemaDefinitionUnless(raw != \"%WSP*;\", \"The WSP* entitty canont appear on it's own ...\")\r\n  super[DisallowedCharClassEntitiesMixin].testRaw(raw, context)\r\n}\r\n```\r\nThis way we manually test for the sole WSP* and use the disallowed logic to check for ES.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/794025854/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/794814073","html_url":"https://github.com/apache/daffodil/pull/473#issuecomment-794814073","issue_url":"https://api.github.com/repos/apache/daffodil/issues/473","id":794814073,"node_id":"MDEyOklzc3VlQ29tbWVudDc5NDgxNDA3Mw==","user":{"login":"jadams-tresys","id":30659277,"node_id":"MDQ6VXNlcjMwNjU5Mjc3","avatar_url":"https://avatars.githubusercontent.com/u/30659277?v=4","gravatar_id":"","url":"https://api.github.com/users/jadams-tresys","html_url":"https://github.com/jadams-tresys","followers_url":"https://api.github.com/users/jadams-tresys/followers","following_url":"https://api.github.com/users/jadams-tresys/following{/other_user}","gists_url":"https://api.github.com/users/jadams-tresys/gists{/gist_id}","starred_url":"https://api.github.com/users/jadams-tresys/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jadams-tresys/subscriptions","organizations_url":"https://api.github.com/users/jadams-tresys/orgs","repos_url":"https://api.github.com/users/jadams-tresys/repos","events_url":"https://api.github.com/users/jadams-tresys/events{/privacy}","received_events_url":"https://api.github.com/users/jadams-tresys/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-10T03:34:14Z","updated_at":"2021-03-10T03:34:14Z","author_association":"CONTRIBUTOR","body":"I reverted back to the original style of immediate creation/removal of NVI statements and only suspending when attempting to evaluate the expression.\r\n\r\nI added some commented out code for only allowing setVariable to be used during unparsing on variables without a default value.  This code causes several existing test cases to break (haven't checked against the various schema projects yet), so I wasn't sure if we wanted to go through with this change.  Maybe a warning about race conditions/potential undefined behavior would be a better approach?","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/794814073/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/794893846","html_url":"https://github.com/apache/daffodil/pull/506#issuecomment-794893846","issue_url":"https://api.github.com/repos/apache/daffodil/issues/506","id":794893846,"node_id":"MDEyOklzc3VlQ29tbWVudDc5NDg5Mzg0Ng==","user":{"login":"scala-steward","id":43047562,"node_id":"MDQ6VXNlcjQzMDQ3NTYy","avatar_url":"https://avatars.githubusercontent.com/u/43047562?v=4","gravatar_id":"","url":"https://api.github.com/users/scala-steward","html_url":"https://github.com/scala-steward","followers_url":"https://api.github.com/users/scala-steward/followers","following_url":"https://api.github.com/users/scala-steward/following{/other_user}","gists_url":"https://api.github.com/users/scala-steward/gists{/gist_id}","starred_url":"https://api.github.com/users/scala-steward/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/scala-steward/subscriptions","organizations_url":"https://api.github.com/users/scala-steward/orgs","repos_url":"https://api.github.com/users/scala-steward/repos","events_url":"https://api.github.com/users/scala-steward/events{/privacy}","received_events_url":"https://api.github.com/users/scala-steward/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-10T05:13:36Z","updated_at":"2021-03-10T05:13:36Z","author_association":"CONTRIBUTOR","body":"Superseded by #509.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/794893846/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/796133179","html_url":"https://github.com/apache/daffodil/pull/473#issuecomment-796133179","issue_url":"https://api.github.com/repos/apache/daffodil/issues/473","id":796133179,"node_id":"MDEyOklzc3VlQ29tbWVudDc5NjEzMzE3OQ==","user":{"login":"jadams-tresys","id":30659277,"node_id":"MDQ6VXNlcjMwNjU5Mjc3","avatar_url":"https://avatars.githubusercontent.com/u/30659277?v=4","gravatar_id":"","url":"https://api.github.com/users/jadams-tresys","html_url":"https://github.com/jadams-tresys","followers_url":"https://api.github.com/users/jadams-tresys/followers","following_url":"https://api.github.com/users/jadams-tresys/following{/other_user}","gists_url":"https://api.github.com/users/jadams-tresys/gists{/gist_id}","starred_url":"https://api.github.com/users/jadams-tresys/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jadams-tresys/subscriptions","organizations_url":"https://api.github.com/users/jadams-tresys/orgs","repos_url":"https://api.github.com/users/jadams-tresys/repos","events_url":"https://api.github.com/users/jadams-tresys/events{/privacy}","received_events_url":"https://api.github.com/users/jadams-tresys/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-10T21:21:14Z","updated_at":"2021-03-10T21:21:14Z","author_association":"CONTRIBUTOR","body":"Made a small change to enable the check and only when it is a newVariableInstance.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/796133179/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/796730320","html_url":"https://github.com/apache/daffodil/pull/481#issuecomment-796730320","issue_url":"https://api.github.com/repos/apache/daffodil/issues/481","id":796730320,"node_id":"MDEyOklzc3VlQ29tbWVudDc5NjczMDMyMA==","user":{"login":"regetom","id":11149210,"node_id":"MDQ6VXNlcjExMTQ5MjEw","avatar_url":"https://avatars.githubusercontent.com/u/11149210?v=4","gravatar_id":"","url":"https://api.github.com/users/regetom","html_url":"https://github.com/regetom","followers_url":"https://api.github.com/users/regetom/followers","following_url":"https://api.github.com/users/regetom/following{/other_user}","gists_url":"https://api.github.com/users/regetom/gists{/gist_id}","starred_url":"https://api.github.com/users/regetom/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/regetom/subscriptions","organizations_url":"https://api.github.com/users/regetom/orgs","repos_url":"https://api.github.com/users/regetom/repos","events_url":"https://api.github.com/users/regetom/events{/privacy}","received_events_url":"https://api.github.com/users/regetom/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-11T13:20:07Z","updated_at":"2021-03-11T13:20:07Z","author_association":"NONE","body":"Previously, I had 23 testing failing.  after applying Steve's suggested change above, only 16 tests failed. Of the 16 tests still failing, many were failing to a verbiage change in the error message.  Specifically 9 test failed because they were looking for the \"cannot\" in the diagnostic message.  I could not find the code that set \"cannot\" requirement, so I changed the error message verbiage from \"... contains disallowed character classes ...\" to \"... cannot contain character classes ...\" this change corrected 9 of the test failures.  The remaining test failures require more specific diagnostic meesages.  For example: \r\n[error] Test org.apache.daffodil.section13.text_number_props.TestTextNumberProps.test_infCharClasses failed: org.apache.daffodil.tdml.TDMLExceptionImpl: (Implementation: daffodil) Did not find diagnostic message \"textStandardInfinityRep cannot contain %NL;\" in any of the actual diagnostic messages: \r\n[error] Schema Definition Error: Property dfdl:textStandardInfinityRep cannot contain character classes: %NL;\r\nI modified the diagnostic message again, removing \"cahracter classes\" and all the tests passed. I'll check the code in with these changes.  If the diagnostic verbiage  \"... contains disallowed character classes ...\" is preferred, please point me to where in the code this would need to be modified.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/796730320/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/796764170","html_url":"https://github.com/apache/daffodil/pull/481#issuecomment-796764170","issue_url":"https://api.github.com/repos/apache/daffodil/issues/481","id":796764170,"node_id":"MDEyOklzc3VlQ29tbWVudDc5Njc2NDE3MA==","user":{"login":"mbeckerle","id":1524099,"node_id":"MDQ6VXNlcjE1MjQwOTk=","avatar_url":"https://avatars.githubusercontent.com/u/1524099?v=4","gravatar_id":"","url":"https://api.github.com/users/mbeckerle","html_url":"https://github.com/mbeckerle","followers_url":"https://api.github.com/users/mbeckerle/followers","following_url":"https://api.github.com/users/mbeckerle/following{/other_user}","gists_url":"https://api.github.com/users/mbeckerle/gists{/gist_id}","starred_url":"https://api.github.com/users/mbeckerle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mbeckerle/subscriptions","organizations_url":"https://api.github.com/users/mbeckerle/orgs","repos_url":"https://api.github.com/users/mbeckerle/repos","events_url":"https://api.github.com/users/mbeckerle/events{/privacy}","received_events_url":"https://api.github.com/users/mbeckerle/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-11T14:11:09Z","updated_at":"2021-03-11T14:11:09Z","author_association":"CONTRIBUTOR","body":"In general it is better for tests to be relatively insensitive to wording of specific diagnostic messages. \r\nInstead of tests expecting \"textStandardInfinityRep cannot contain %NL;\" I claim it is better for the test to insist on finding 3 separate things in the diagnsotic message \"textStandardInfiinityRep\" \"cannot\", and \"%NL;\". That's sufficient evidence that the message conveys what is needed without being overly sensitive to changes in wording. \r\nIn your case \"cannot contain\" vs. \"disallowed\"  however, .... the test must check for some word indicating that the message is about disallowed things being used. Changes of wording in messages of this sort, from \"disallowed\" to \"cannot contain\" or vice versa should be expected to break negative tests no matter what. But correcting the tests to match the new wording is routinely done as diagnostic messages are improved. ","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/796764170/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/799533257","html_url":"https://github.com/apache/daffodil/pull/496#issuecomment-799533257","issue_url":"https://api.github.com/repos/apache/daffodil/issues/496","id":799533257,"node_id":"MDEyOklzc3VlQ29tbWVudDc5OTUzMzI1Nw==","user":{"login":"tuxji","id":5915561,"node_id":"MDQ6VXNlcjU5MTU1NjE=","avatar_url":"https://avatars.githubusercontent.com/u/5915561?v=4","gravatar_id":"","url":"https://api.github.com/users/tuxji","html_url":"https://github.com/tuxji","followers_url":"https://api.github.com/users/tuxji/followers","following_url":"https://api.github.com/users/tuxji/following{/other_user}","gists_url":"https://api.github.com/users/tuxji/gists{/gist_id}","starred_url":"https://api.github.com/users/tuxji/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tuxji/subscriptions","organizations_url":"https://api.github.com/users/tuxji/orgs","repos_url":"https://api.github.com/users/tuxji/repos","events_url":"https://api.github.com/users/tuxji/events{/privacy}","received_events_url":"https://api.github.com/users/tuxji/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-15T15:56:27Z","updated_at":"2021-03-15T15:56:27Z","author_association":"CONTRIBUTOR","body":"I've downloaded jackson-core-jackson-core-2.11.3.tar.gz, jackson-core-jackson-core-2.11.4.tar.gz, and jackson-core-jackson-core-2.12.2.tar.gz, diff'ed them, found their NOTICE files, and compared their NOTICE file with our bin.NOTICE.  I believe we can safely update to 2.11.4 and then 2.12.2 after that since I didn't see any API changes that should affect us.  I've incorporated jackson-core's updated NOTICE in our bin.NOTICE and replaced all version numbers in our bin.LICENSE and bin.NOTICE with the literal string `<VERSION>` to avoid needing to change bin.LICENSE and bin.NOTICE unless dependencies actually change their LICENSE or NOTICE files.  \r\n\r\nOnce I get someone else's +1, I will squash, merge, and move on to the next dependency PR.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/799533257/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/799579964","html_url":"https://github.com/apache/daffodil/pull/497#issuecomment-799579964","issue_url":"https://api.github.com/repos/apache/daffodil/issues/497","id":799579964,"node_id":"MDEyOklzc3VlQ29tbWVudDc5OTU3OTk2NA==","user":{"login":"tuxji","id":5915561,"node_id":"MDQ6VXNlcjU5MTU1NjE=","avatar_url":"https://avatars.githubusercontent.com/u/5915561?v=4","gravatar_id":"","url":"https://api.github.com/users/tuxji","html_url":"https://github.com/tuxji","followers_url":"https://api.github.com/users/tuxji/followers","following_url":"https://api.github.com/users/tuxji/following{/other_user}","gists_url":"https://api.github.com/users/tuxji/gists{/gist_id}","starred_url":"https://api.github.com/users/tuxji/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/tuxji/subscriptions","organizations_url":"https://api.github.com/users/tuxji/orgs","repos_url":"https://api.github.com/users/tuxji/repos","events_url":"https://api.github.com/users/tuxji/events{/privacy}","received_events_url":"https://api.github.com/users/tuxji/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-15T16:57:14Z","updated_at":"2021-03-15T16:57:14Z","author_association":"CONTRIBUTOR","body":"I've downloaded woodstox-woodstox-core-6.2.3.tar.gz and woodstox-woodstox-core-6.2.4.tar.gz, diff'ed them, and checked their LICENSE files (they don't have any NOTICE files).  I found no significant changes; this PR is good to merge once it gets another +1.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/799579964/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/800250342","html_url":"https://github.com/apache/daffodil/pull/481#issuecomment-800250342","issue_url":"https://api.github.com/repos/apache/daffodil/issues/481","id":800250342,"node_id":"MDEyOklzc3VlQ29tbWVudDgwMDI1MDM0Mg==","user":{"login":"regetom","id":11149210,"node_id":"MDQ6VXNlcjExMTQ5MjEw","avatar_url":"https://avatars.githubusercontent.com/u/11149210?v=4","gravatar_id":"","url":"https://api.github.com/users/regetom","html_url":"https://github.com/regetom","followers_url":"https://api.github.com/users/regetom/followers","following_url":"https://api.github.com/users/regetom/following{/other_user}","gists_url":"https://api.github.com/users/regetom/gists{/gist_id}","starred_url":"https://api.github.com/users/regetom/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/regetom/subscriptions","organizations_url":"https://api.github.com/users/regetom/orgs","repos_url":"https://api.github.com/users/regetom/repos","events_url":"https://api.github.com/users/regetom/events{/privacy}","received_events_url":"https://api.github.com/users/regetom/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-16T13:18:09Z","updated_at":"2021-03-16T13:18:09Z","author_association":"NONE","body":"I have one more test that is failing.  It appears to also occur in class DelimiterCookerNoES.  Previous to the modification, the error message was coded as:\r\n//context.schemaDefinitionUnless(raw != \"%ES;\", \"Property dfdl:%s cannot contain %%ES; when dfdl:lengthKind=\\\"delimited\\\".\", propName)\r\nThe modification produces the error message: Property dfdl:terminator cannot contain %ES;\r\nThe resulting failure is:\r\n[error] Test org.apache.daffodil.section06.entities.TestEntities.test_emptyStringEntityTermInExpressionDelimited_01 failed: org.apache.daffodil.tdml.TDMLExceptionImpl: (Implementation: daffodil) Did not find diagnostic message \"dfdl:lengthKind=\"delimited\"\" in any of the actual diagnostic messages:\r\n[error] Schema Definition Error: Property dfdl:terminator cannot contain %ES;\r\nThe dfdl:lengthKind=terminator is the actual error message appears to come from here:\r\n<xs:schema dafint:file=\"file:/C:/Users/regis.thomas/incubator-daffodil/daffodil-test/target/scala-2.12/test-classes/org/apache/daffodil/section06/entities/Entities.tdml\" targetNamespace=\"http://example.com\" elementFormDefault=\"qualified\" xmlns:dfdlx=\"http://www.ogf.org/dfdl/dfdl-1.0/extensions\" xmlns=\"http://example.com\" xmlns:dafint=\"urn:ogf:dfdl:2013:imp:daffodil.apache.org:2018:int\" xmlns:fn=\"http://www.w3.org/2005/xpath-functions\" xmlns:tns=\"http://example.com\" xmlns:ex=\"http://example.com\" xmlns:ct=\"http://w3.ibm.com/xmlns/dfdl/ctInfoset\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:dfdl=\"http://www.ogf.org/dfdl/dfdl-1.0/\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:tdml=\"http://www.ibm.com/xmlns/dfdl/testData\">\r\n  <xs:include dafint:line=\"1208\" dafint:col=\"6\" schemaLocation=\"org/apache/daffodil/xsd/DFDLGeneralFormat.dfdl.xsd\"/>\r\n  <xs:annotation>\r\n    <xs:appinfo source=\"http://www.ogf.org/dfdl/\">\r\n      <dfdl:format dafint:line=\"1209\" dafint:col=\"6\" terminator=\"\" initiatedContent=\"no\" initiator=\"\" textNumberRep=\"standard\" ignoreCase=\"no\" byteOrder=\"bigEndian\" separator=\"\" encoding=\"US-ASCII\" representation=\"text\" ref=\"ex:GeneralFormat\"/>\r\n    </xs:appinfo>\r\n  </xs:annotation>\r\n  <xs:element dafint:line=\"1213\" dafint:col=\"6\" dfdl:lengthKind=\"implicit\" name=\"root\">\r\n    <xs:complexType dafint:line=\"1214\" dafint:col=\"8\">\r\n      <xs:sequence dafint:line=\"1215\" dafint:col=\"10\">\r\n        <xs:element dafint:line=\"1216\" dafint:col=\"12\" dfdl:length=\"1\" dfdl:lengthKind=\"explicit\" type=\"xs:string\" name=\"key\"/>\r\n        <xs:element dafint:line=\"1217\" dafint:col=\"12\" dfdl:terminator=\"{ if (../ex:key eq '1') then '%ES;' else 'END' }\" dfdl:lengthKind=\"delimited\" type=\"xs:string\" name=\"value\"/>\r\n      </xs:sequence>\r\n    </xs:complexType>\r\n  </xs:element>\r\n</xs:schema>\r\nI'm not sure how to fix this without reverting the code in DelimiterCookerNoES back to hardcode the dfdl:lengthKind to delimited.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/800250342/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/800252311","html_url":"https://github.com/apache/daffodil/pull/481#issuecomment-800252311","issue_url":"https://api.github.com/repos/apache/daffodil/issues/481","id":800252311,"node_id":"MDEyOklzc3VlQ29tbWVudDgwMDI1MjMxMQ==","user":{"login":"regetom","id":11149210,"node_id":"MDQ6VXNlcjExMTQ5MjEw","avatar_url":"https://avatars.githubusercontent.com/u/11149210?v=4","gravatar_id":"","url":"https://api.github.com/users/regetom","html_url":"https://github.com/regetom","followers_url":"https://api.github.com/users/regetom/followers","following_url":"https://api.github.com/users/regetom/following{/other_user}","gists_url":"https://api.github.com/users/regetom/gists{/gist_id}","starred_url":"https://api.github.com/users/regetom/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/regetom/subscriptions","organizations_url":"https://api.github.com/users/regetom/orgs","repos_url":"https://api.github.com/users/regetom/repos","events_url":"https://api.github.com/users/regetom/events{/privacy}","received_events_url":"https://api.github.com/users/regetom/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-16T13:20:58Z","updated_at":"2021-03-16T13:20:58Z","author_association":"NONE","body":"Here is the modified class definition:class DelimiterCookerNoES(pn: String) extends ListOfString1OrMoreLiteral(pn, true) {\r\n\r\n  override val oneLiteralCooker: StringLiteralBase =\r\n    new StringLiteralNoCharClassEntities(propName, true) with DisallowedCharClassEntitiesMixin {\r\n\r\n      //override protected def noCharClassEntities(raw: String, context: ThrowsSDE): Unit = {\r\n      // TODO: this isn't quite right, as it will allow combined delimiters\r\n      // that still match the empty string, e.g. \"%ES;%WSP*;\". We could check\r\n      // if raw.contains(\"%WSP*;\"), but that is too general, preventing valid\r\n      // delimiters like \"foo%WSP*;bar\". Although the below matches the\r\n      // specification, it's probably not the intended behavior.\r\n      override val disallowedCharClassEntities = Seq(\"ES\")\r\n      override def testRaw(raw: String, context: ThrowsSDE) = {\r\n        context.schemaDefinitionUnless(raw != \"%WSP*;\", \"\"\"The WSP* entity cannot appear on it's own when dfdl:lengthKind=\"delimited\".\"\"\")\r\n        super[DisallowedCharClassEntitiesMixin].testRaw(raw, context)\r\n      }\r\n      //context.schemaDefinitionUnless(raw != \"%WSP*;\", \"Property dfdl:%s cannot contain %%WSP*; when dfdl:lengthKind=\\\"delimited\\\".\", propName)\r\n      //context.schemaDefinitionUnless(raw != \"%ES;\", \"Property dfdl:%s cannot contain %%ES; when dfdl:lengthKind=\\\"delimited\\\".\", propName)\r\n      //}\r\n    }\r\n}\r\nI tried to check in my changes but I need to check them into the new non-incubator branch and I didn't want to loose the previous comments.","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/800252311/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/800316354","html_url":"https://github.com/apache/daffodil/pull/481#issuecomment-800316354","issue_url":"https://api.github.com/repos/apache/daffodil/issues/481","id":800316354,"node_id":"MDEyOklzc3VlQ29tbWVudDgwMDMxNjM1NA==","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-16T14:39:27Z","updated_at":"2021-03-16T14:39:27Z","author_association":"MEMBER","body":"If we look at Cookers.scala, we see these lines:\r\n```scala\r\nobject TerminatorCookerNoES extends DelimiterCookerNoES(\"terminator\")\r\n\r\nobject SeparatorCooker extends DelimiterCookerNoES(\"separator\")\r\n```\r\nSo ``TerminatorCookerNoES`` (which is used for terminators when lengthKind=\"delimited\") and ``SeparatorCooker`` both use ``DelimiterCookerNoES``. But if we look at the specification, terminators and separators actually have slightly different restrictions:\r\n\r\n**dfdl:separator**\r\n> * DFDL Character Classes NL, WSP, WSP+, and WSP* are allowed.\r\n> * The WSP* entity cannot appear on its own as one of the string literals in the list when determining the length of a component by scanning for delimiters.\r\n\r\n(Note, I'm not sure why dfdl:separator allows ES on it's own if WSP* isn't allowed, I think  that's a bug in the spec and that's just missing?)\r\n\r\n**dfdl:terminator**\r\n> * DFDL Character Classes NL, WSP, WSP+, WSP*, and ES are allowed.\r\n> * Neither the ES entity nor the WSP* entity may appear on their own as one of the string literals in the list when the parser is determining the length of a component by scanning for delimiters.\r\n\r\nSo separator needs a cooker that always disallows ES and only disallows WSP* (and probably ES too) when it's alone (what you have now).\r\n\r\nBut terminator needs a cooker that allows all character classes (), and disallows both WSP* and ES when they're alone.\r\n\r\nSo I think we just need two separator Cookers. Maybe the one for separator is called ``DelimiterCookerNoES`` (what you have now but with I think the missing ES added), and one called ``DelimterCookerNoSoleES`` which is old DelimiterCookerNoES (has no restriction on character class, with the only restriction being sole things.\r\n\r\nNote, I wonder if it's also a bug that separator doesn't allow ES? I feel like terminator and separator should have the same restrictions when when length kind is delimited? They are both terminating markup in that case, and I would expect to behave the same. Maybe the originl DleimiterCookerNoES is the right thing?\r\n\r\nGoing to need @mbeckerle to weigh in on this.\r\n ","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/800316354/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/800328253","html_url":"https://github.com/apache/daffodil/pull/496#issuecomment-800328253","issue_url":"https://api.github.com/repos/apache/daffodil/issues/496","id":800328253,"node_id":"MDEyOklzc3VlQ29tbWVudDgwMDMyODI1Mw==","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-16T14:52:50Z","updated_at":"2021-03-16T14:52:50Z","author_association":"MEMBER","body":"+1 looks good to me!","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/800328253/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/800328774","html_url":"https://github.com/apache/daffodil/pull/497#issuecomment-800328774","issue_url":"https://api.github.com/repos/apache/daffodil/issues/497","id":800328774,"node_id":"MDEyOklzc3VlQ29tbWVudDgwMDMyODc3NA==","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-16T14:53:30Z","updated_at":"2021-03-16T14:53:30Z","author_association":"MEMBER","body":"+1","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/800328774/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/800393257","html_url":"https://github.com/apache/daffodil/pull/498#issuecomment-800393257","issue_url":"https://api.github.com/repos/apache/daffodil/issues/498","id":800393257,"node_id":"MDEyOklzc3VlQ29tbWVudDgwMDM5MzI1Nw==","user":{"login":"stevedlawrence","id":3180601,"node_id":"MDQ6VXNlcjMxODA2MDE=","avatar_url":"https://avatars.githubusercontent.com/u/3180601?v=4","gravatar_id":"","url":"https://api.github.com/users/stevedlawrence","html_url":"https://github.com/stevedlawrence","followers_url":"https://api.github.com/users/stevedlawrence/followers","following_url":"https://api.github.com/users/stevedlawrence/following{/other_user}","gists_url":"https://api.github.com/users/stevedlawrence/gists{/gist_id}","starred_url":"https://api.github.com/users/stevedlawrence/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stevedlawrence/subscriptions","organizations_url":"https://api.github.com/users/stevedlawrence/orgs","repos_url":"https://api.github.com/users/stevedlawrence/repos","events_url":"https://api.github.com/users/stevedlawrence/events{/privacy}","received_events_url":"https://api.github.com/users/stevedlawrence/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-16T16:04:58Z","updated_at":"2021-03-16T16:04:58Z","author_association":"MEMBER","body":"+1\r\n\r\n- [X] **Do all automated continuous integration checks pass?**\r\nYes\r\n- [X] **Is the update a patch, minor, or major update?**\r\nMajor release, though no API issues or changes that affect Daffodil mentioned in release notes\r\n- [X] **Is the license still compatible with ASF License Policy?**\r\nYes, same license and no changes to ASF policy\r\n- [X] **Have any changes been made to LICENSE/NOTICE files that need to be incorporated?**\r\nYes, minor change to switch links from dead code.google.com to github.com, fixed in fixup commit\r\n- [X] **Have any transitive dependencies been added or changed?**\r\nNo changes to transitive dependencies\r\n","reactions":{"url":"https://api.github.com/repos/apache/daffodil/issues/comments/800393257/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]