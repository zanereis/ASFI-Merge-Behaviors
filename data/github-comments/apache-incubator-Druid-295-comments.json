[{"url":"https://api.github.com/repos/apache/druid/issues/comments/591676224","html_url":"https://github.com/apache/druid/issues/9413#issuecomment-591676224","issue_url":"https://api.github.com/repos/apache/druid/issues/9413","id":591676224,"node_id":"MDEyOklzc3VlQ29tbWVudDU5MTY3NjIyNA==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-02-26T22:25:26Z","updated_at":"2020-02-26T22:25:26Z","author_association":"CONTRIBUTOR","body":"Btw, as a workaround, you could generate the bloom filter yourself and pass it to `BLOOM_FILTER_TEST`.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/591676224/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/591681808","html_url":"https://github.com/apache/druid/issues/9414#issuecomment-591681808","issue_url":"https://api.github.com/repos/apache/druid/issues/9414","id":591681808,"node_id":"MDEyOklzc3VlQ29tbWVudDU5MTY4MTgwOA==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-02-26T22:40:58Z","updated_at":"2020-02-26T22:40:58Z","author_association":"CONTRIBUTOR","body":"There is an important optimization that gets applied for string expressions that read just one column, in which expression evaluation is deferred until after the segment scan. I'm not sure why, but in your case, it's being applied for `LOOKUP(...)` and not for `NULLIF(LOOKUP(...), ...)`.\r\n\r\nIt probably has to do with the fact that the column is referenced twice and the fact that the input is multi-value (this SQL expression will become `case_searched((lookup(\"adTypeIdPubRequest\",'adtype_by_adtypeid') == 'fallback'),null,lookup(\"adTypeIdPubRequest\",'adtype_by_adtypeid'))` as a native expression). The logic for performing the optimization might be getting confused.\r\n\r\nTry this workaround:\r\n\r\n```\r\nSELECT\r\n   NULLIF(LOOKUP(adTypeIdPubRequest, 'adtype_by_adtypeid'), 'fallback') AS adFormat,\r\n   SUM(\"count\") AS cnt\r\nFROM \"supply-activities\" \r\nWHERE  (__time >= timestamp'2020-01-20 00:00:00' AND __time < timestamp '2020-01-20 01:00:00')\r\nGROUP BY LOOKUP(adTypeIdPubRequest, 'adtype_by_adtypeid')\r\nORDER BY 2\r\nLIMIT 10\r\n```\r\n\r\nIt's not exactly an identical query, but it will run faster, and might be close enough to what you want.\r\n\r\nBtw, I think that this was always an issue for expressions on multi-value columns as long as they've worked at all (they used to just always return null). So I think it's not a regression.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/591681808/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/591685291","html_url":"https://github.com/apache/druid/issues/9414#issuecomment-591685291","issue_url":"https://api.github.com/repos/apache/druid/issues/9414","id":591685291,"node_id":"MDEyOklzc3VlQ29tbWVudDU5MTY4NTI5MQ==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-02-26T22:51:13Z","updated_at":"2020-02-26T22:51:13Z","author_association":"CONTRIBUTOR","body":"It looks like this is a bug in the check for when it's ok to apply this optimization. It's being too strict and not applying it, even though it could.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/591685291/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/591688426","html_url":"https://github.com/apache/druid/issues/9419#issuecomment-591688426","issue_url":"https://api.github.com/repos/apache/druid/issues/9419","id":591688426,"node_id":"MDEyOklzc3VlQ29tbWVudDU5MTY4ODQyNg==","user":{"login":"jon-wei","id":8729063,"node_id":"MDQ6VXNlcjg3MjkwNjM=","avatar_url":"https://avatars.githubusercontent.com/u/8729063?v=4","gravatar_id":"","url":"https://api.github.com/users/jon-wei","html_url":"https://github.com/jon-wei","followers_url":"https://api.github.com/users/jon-wei/followers","following_url":"https://api.github.com/users/jon-wei/following{/other_user}","gists_url":"https://api.github.com/users/jon-wei/gists{/gist_id}","starred_url":"https://api.github.com/users/jon-wei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jon-wei/subscriptions","organizations_url":"https://api.github.com/users/jon-wei/orgs","repos_url":"https://api.github.com/users/jon-wei/repos","events_url":"https://api.github.com/users/jon-wei/events{/privacy}","received_events_url":"https://api.github.com/users/jon-wei/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-02-26T23:00:23Z","updated_at":"2020-02-26T23:00:37Z","author_association":"CONTRIBUTOR","body":"You can set `\"finalize\": false` in the query context (https://druid.apache.org/docs/latest/querying/query-context.html) if you want the serialized sketches instead of the estimates","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/591688426/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/591689543","html_url":"https://github.com/apache/druid/issues/9412#issuecomment-591689543","issue_url":"https://api.github.com/repos/apache/druid/issues/9412","id":591689543,"node_id":"MDEyOklzc3VlQ29tbWVudDU5MTY4OTU0Mw==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-02-26T23:03:46Z","updated_at":"2020-02-26T23:04:01Z","author_association":"CONTRIBUTOR","body":"To be clear, the query @clintropolis is the correct way to write what you're trying to write. Starting in Druid 0.17.0 it (correctly) recognizes that `CASE cityName WHEN NULL THEN FALSE ELSE TRUE END AS col_a` is always true, because `NULL` does not equal `NULL`, so even if `cityName` is NULL, it still won't go down the `WHEN NULL` path.\r\n\r\nPostgreSQL would do the same thing (I just tested it to double-check).\r\n\r\nThere is a bug, though, where the SQL planner is trying to create two virtual columns with the same name. We'll need to fix that. But it shouldn't block you, @sascha-coenen, because you should adjust your query to the variant @clintropolis suggested anyway (it's better aligned with how SQL works, and should be effective in 0.17.0 and all future versions).","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/591689543/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/591691480","html_url":"https://github.com/apache/druid/issues/9321#issuecomment-591691480","issue_url":"https://api.github.com/repos/apache/druid/issues/9321","id":591691480,"node_id":"MDEyOklzc3VlQ29tbWVudDU5MTY5MTQ4MA==","user":{"login":"sascha-coenen","id":1635350,"node_id":"MDQ6VXNlcjE2MzUzNTA=","avatar_url":"https://avatars.githubusercontent.com/u/1635350?v=4","gravatar_id":"","url":"https://api.github.com/users/sascha-coenen","html_url":"https://github.com/sascha-coenen","followers_url":"https://api.github.com/users/sascha-coenen/followers","following_url":"https://api.github.com/users/sascha-coenen/following{/other_user}","gists_url":"https://api.github.com/users/sascha-coenen/gists{/gist_id}","starred_url":"https://api.github.com/users/sascha-coenen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sascha-coenen/subscriptions","organizations_url":"https://api.github.com/users/sascha-coenen/orgs","repos_url":"https://api.github.com/users/sascha-coenen/repos","events_url":"https://api.github.com/users/sascha-coenen/events{/privacy}","received_events_url":"https://api.github.com/users/sascha-coenen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-02-26T23:09:47Z","updated_at":"2020-02-26T23:13:19Z","author_association":"NONE","body":"Hi.\r\nwe tried the vectorization engine extensively and it works VERY well for us. Most of the times throughout the years when you guys reported significant performance gains, we could usually not reproduce them in our clusters very well. \r\nBut with this thing we are right in the center:  we are using local filter conditions a LOT and prior to vectorization, to my understanding, Druid had to scan over those, not applying bitmap filters whereas vectorization would already work with bitmaps. \r\nI don't know whether this assumption is true, but if feels to me that this is where the speedups might be the biggest. We do see speedups to 3x for timeseries across the board and 2x for groupby queries.\r\nThe only exception is that we have this very often used class of queries, namely groupby's with an order by clause on a measure which don't profit from vectorization at all because they seem to be bound by the data volume streamed back from the historicals.\r\nTo speed up this important class of queries we very much depend on the \"forceLimitPushDown' feature which unfortunately hasn't been working for SQL queries for a while (since 0.11.0).\r\nThis in combination with the vectorization engine would be blow away amazing.    \r\n\r\nwrt the above perf issue: \r\nwhat you describe sounds reasonable.\r\nLet me add that it is very easy for us to reproduce this performance degradation. It does not matter which kind of groupbyV2 query we use. We basically saw it happen with pretty much any query. With topn it seems that the query needs to have a certain weight, like a couple of measures and I more than one sequential pass.\r\nYou should be able to reproduce this on your end easily. Do you not experience any performance penalty in topNs at all when using SQL compatible null handling?\r\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/591691480/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/591695099","html_url":"https://github.com/apache/druid/issues/9411#issuecomment-591695099","issue_url":"https://api.github.com/repos/apache/druid/issues/9411","id":591695099,"node_id":"MDEyOklzc3VlQ29tbWVudDU5MTY5NTA5OQ==","user":{"login":"sascha-coenen","id":1635350,"node_id":"MDQ6VXNlcjE2MzUzNTA=","avatar_url":"https://avatars.githubusercontent.com/u/1635350?v=4","gravatar_id":"","url":"https://api.github.com/users/sascha-coenen","html_url":"https://github.com/sascha-coenen","followers_url":"https://api.github.com/users/sascha-coenen/followers","following_url":"https://api.github.com/users/sascha-coenen/following{/other_user}","gists_url":"https://api.github.com/users/sascha-coenen/gists{/gist_id}","starred_url":"https://api.github.com/users/sascha-coenen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sascha-coenen/subscriptions","organizations_url":"https://api.github.com/users/sascha-coenen/orgs","repos_url":"https://api.github.com/users/sascha-coenen/repos","events_url":"https://api.github.com/users/sascha-coenen/events{/privacy}","received_events_url":"https://api.github.com/users/sascha-coenen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-02-26T23:21:01Z","updated_at":"2020-02-26T23:21:19Z","author_association":"NONE","body":"> Are you saying that the data files did not get ingested?\r\n\r\nyes. the ingestion fails as long as we have the _SUCCESS file in the folder. Then I deleted  the _SUCCESS file and the same ingestion spec resubmitted a second time was now working. At least the first phase was running successfully.\r\n\r\nWIth Druid 0.16.0 we had some successful attempts at using index_parallel. With 0.17.0 the second phase immediately fails. Currently we are clueless why, but as far as this report scope is concerned, it is sufficient that the first phase completes successfully. I can see in the logs that the files got picked up and processed and that there were as many slots used as there are files in the s3 location.\r\n\r\nWhen the _SUCCESS file is present, only one slot will be used, so it doesn't get to the point that the other files would also be scheduled. Perhaps I'm wrong. I can double check tomorrow to be sure. But now I know that there is no dedicated code to deal with shadowed files so I know to remove them for now.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/591695099/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/591697433","html_url":"https://github.com/apache/druid/issues/9417#issuecomment-591697433","issue_url":"https://api.github.com/repos/apache/druid/issues/9417","id":591697433,"node_id":"MDEyOklzc3VlQ29tbWVudDU5MTY5NzQzMw==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-02-26T23:28:48Z","updated_at":"2020-02-26T23:28:48Z","author_association":"CONTRIBUTOR","body":"I recall looking into this a while back and finding that the behavior of `SELECT 1 / 2` varied across popular databases, and we went with the current behavior (integer division) since it's type-preserving, which seemed like a nice property (if inputs are ints, output will be an int).\r\n\r\nI looked into a few systems and here's what I found for integer division behavior. I didn't look at Vertica but I added what you found.\r\n\r\n|System|1/2|1/0|1/NULL|\r\n|------|----|----|----|\r\n|Druid|0|error|error|\r\n|Vertica|0.5|error|0|\r\n|PostgreSQL|0|error|NULL|\r\n|BigQuery|0.5|error|NULL|\r\n\r\nReally, a paragon of consistency 😄 \r\n\r\nFor the 1/0 case, every system I looked at throws an error. But BigQuery has a SAFE_DIVIDE function that looks interesting. It returns NULL in the 1/0 case and is the same as `/` otherwise. Would adding that function solve your problem?\r\n\r\nFor the 1/2 case, f you want floating point division for `x / y`, you can do `CAST(x AS DOUBLE) / y`.\r\n\r\nFor the 1/NULL case, I think we should probably return NULL instead of throwing an error.\r\n\r\nBtw, I've never seen a one-arg `NVL` function. Did you mean to use a different function in your example `SUM(nominator) / NVL(SUM(denominator))`?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/591697433/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/591699222","html_url":"https://github.com/apache/druid/issues/9418#issuecomment-591699222","issue_url":"https://api.github.com/repos/apache/druid/issues/9418","id":591699222,"node_id":"MDEyOklzc3VlQ29tbWVudDU5MTY5OTIyMg==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-02-26T23:34:25Z","updated_at":"2020-02-26T23:34:25Z","author_association":"CONTRIBUTOR","body":"What exception do you get? A query like that should work fine, as long as the lookup exists and is loaded on the Broker that handles the query.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/591699222/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/591700246","html_url":"https://github.com/apache/druid/issues/9412#issuecomment-591700246","issue_url":"https://api.github.com/repos/apache/druid/issues/9412","id":591700246,"node_id":"MDEyOklzc3VlQ29tbWVudDU5MTcwMDI0Ng==","user":{"login":"sascha-coenen","id":1635350,"node_id":"MDQ6VXNlcjE2MzUzNTA=","avatar_url":"https://avatars.githubusercontent.com/u/1635350?v=4","gravatar_id":"","url":"https://api.github.com/users/sascha-coenen","html_url":"https://github.com/sascha-coenen","followers_url":"https://api.github.com/users/sascha-coenen/followers","following_url":"https://api.github.com/users/sascha-coenen/following{/other_user}","gists_url":"https://api.github.com/users/sascha-coenen/gists{/gist_id}","starred_url":"https://api.github.com/users/sascha-coenen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sascha-coenen/subscriptions","organizations_url":"https://api.github.com/users/sascha-coenen/orgs","repos_url":"https://api.github.com/users/sascha-coenen/repos","events_url":"https://api.github.com/users/sascha-coenen/events{/privacy}","received_events_url":"https://api.github.com/users/sascha-coenen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-02-26T23:38:15Z","updated_at":"2020-02-26T23:38:15Z","author_association":"NONE","body":"thanks for the feedback.\r\nwrt to the CASE cityName evaluating to NULL:\r\nThe origiinal query that failed for us looks like this:\r\n\r\n```\r\nSELECT \r\n\tTIME_FORMAT(__time, 'yyyy-MM') AS \"period\",\r\n\tCASE REGEXP_EXTRACT(integrationVersion, 'sdkandroid 2[0-9]\\..*') WHEN NULL THEN FALSE ELSE TRUE END AS is_nextgen_android,\r\n\tCASE REGEXP_EXTRACT(integrationVersion, 'sdkios 2[0-9]\\..*') WHEN NULL THEN FALSE ELSE TRUE END AS is_nextgen_ios,\r\n\tintegrationType AS sdk,\r\n\tintegrationVersion AS sdk_version,\r\n\tROUND(SUM(accountableRevenue)) AS revenue,\r\n\tROUND(SUM(\"count\")) AS soma_services_performed\r\nFROM \"supply-activities-inv\"\r\nWHERE __time >= '2020-01-01 00:00:00'\r\n\tAND __time < '2020-02-01 00:00:00'\r\n\tAND multiplierId NOT IN ('2000', '200')\r\n\tAND activityTypeId IN ('o', 'u', 'p', 'f')\r\n\tAND integrationType IN ('sdkandroid', 'sdkios', 'ubsdkandroid', 'ubsdkios')\r\nGROUP BY 1, 2, 3, 4, 5\r\n```\r\n\r\nThis query also fails with the same exception, namely that v0 is being used twice, but in the above CASE statements, I believe that calcite cannot infer that the CASE condition is always null.\r\nI was trying to simplify this query to the point where I would be able to pinpoint what's going on.\r\n\r\nInteresitngly, it seems to also have to do with the ELSE clause being the same. For instance consider the followiing two queries. The first will fail the second will work:\r\n\r\n\r\n```\r\nSELECT \r\n\tCASE cityName WHEN NULL THEN FALSE ELSE TRUE END AS col_a,\r\n\tCASE countryName WHEN NULL THEN FALSE ELSE TRUE END AS col_b\r\nFROM wikipedia\r\nGROUP BY 1, 2\r\n```\r\nFAILS\r\n\r\n```\r\nSELECT \r\n\tCASE cityName WHEN NULL THEN FALSE ELSE TRUE END AS col_a,\r\n\tCASE countryName WHEN NULL THEN TRUE ELSE FALSE END AS col_b\r\nFROM wikipedia\r\nGROUP BY 1, 2\r\n```\r\nWORKS!\r\n\r\nThe only difference is that the TRUE/FALSE in the second case statement is swapped. Now that the two projections don't both evaluate to the same value, the query works because I guess it cannot reduce the expressions down to a common one.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/591700246/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/591702177","html_url":"https://github.com/apache/druid/issues/9412#issuecomment-591702177","issue_url":"https://api.github.com/repos/apache/druid/issues/9412","id":591702177,"node_id":"MDEyOklzc3VlQ29tbWVudDU5MTcwMjE3Nw==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-02-26T23:45:45Z","updated_at":"2020-02-26T23:45:45Z","author_association":"CONTRIBUTOR","body":"I think you're right that them reducing to the same expression has something to do with the error. Fwiw, in the SQL standard, `CASE X WHEN NULL` is _always_ false for _any_ X. Calcite detects that and just replaces it with the `ELSE` path (it doesn't care what X is, nor should it).\r\n\r\nFor your case, you should just replace `CASE X WHEN NULL THEN ... ELSE ... END` with `CASE WHEN X IS NULL THEN ... ELSE ... END`, and then you should get the behavior you're looking for.\r\n\r\nSeparately, we need to fix this bug, but when we do, it will just mean that the `ELSE` path is (correctly) always taken.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/591702177/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/591703412","html_url":"https://github.com/apache/druid/issues/9413#issuecomment-591703412","issue_url":"https://api.github.com/repos/apache/druid/issues/9413","id":591703412,"node_id":"MDEyOklzc3VlQ29tbWVudDU5MTcwMzQxMg==","user":{"login":"sascha-coenen","id":1635350,"node_id":"MDQ6VXNlcjE2MzUzNTA=","avatar_url":"https://avatars.githubusercontent.com/u/1635350?v=4","gravatar_id":"","url":"https://api.github.com/users/sascha-coenen","html_url":"https://github.com/sascha-coenen","followers_url":"https://api.github.com/users/sascha-coenen/followers","following_url":"https://api.github.com/users/sascha-coenen/following{/other_user}","gists_url":"https://api.github.com/users/sascha-coenen/gists{/gist_id}","starred_url":"https://api.github.com/users/sascha-coenen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sascha-coenen/subscriptions","organizations_url":"https://api.github.com/users/sascha-coenen/orgs","repos_url":"https://api.github.com/users/sascha-coenen/repos","events_url":"https://api.github.com/users/sascha-coenen/events{/privacy}","received_events_url":"https://api.github.com/users/sascha-coenen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-02-26T23:50:23Z","updated_at":"2020-02-26T23:50:32Z","author_association":"NONE","body":"thanks for the explanations.\r\n\r\nWhat I did not understand is that Druid can't handle FROM (VALUES ...) yet.\r\nIt seems to work at least partially as the following query works fine:\r\n`\r\nSELECT COUNT(blacklist.item) FROM (VALUES 'a', 'b', 'c') AS blacklist (item)\r\n`\r\n\r\n> meaning all Druid SQL queries will actually run as Druid native queries\r\n\r\nsounds definitely interesting although I'm not sure whether I understand correctly.\r\nDoes it mean that historicals would support receiving SQL queries directly and being able to execute them without having to rewrite them to JSON queries first? And that can be done without calcite? wow","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/591703412/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/591704834","html_url":"https://github.com/apache/druid/issues/9414#issuecomment-591704834","issue_url":"https://api.github.com/repos/apache/druid/issues/9414","id":591704834,"node_id":"MDEyOklzc3VlQ29tbWVudDU5MTcwNDgzNA==","user":{"login":"sascha-coenen","id":1635350,"node_id":"MDQ6VXNlcjE2MzUzNTA=","avatar_url":"https://avatars.githubusercontent.com/u/1635350?v=4","gravatar_id":"","url":"https://api.github.com/users/sascha-coenen","html_url":"https://github.com/sascha-coenen","followers_url":"https://api.github.com/users/sascha-coenen/followers","following_url":"https://api.github.com/users/sascha-coenen/following{/other_user}","gists_url":"https://api.github.com/users/sascha-coenen/gists{/gist_id}","starred_url":"https://api.github.com/users/sascha-coenen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sascha-coenen/subscriptions","organizations_url":"https://api.github.com/users/sascha-coenen/orgs","repos_url":"https://api.github.com/users/sascha-coenen/repos","events_url":"https://api.github.com/users/sascha-coenen/events{/privacy}","received_events_url":"https://api.github.com/users/sascha-coenen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-02-26T23:55:36Z","updated_at":"2020-02-26T23:55:36Z","author_association":"NONE","body":"Thanks for the explanations and the support.\r\nJust to confirm: the workaround you suggested is indeed executing very well. Thanks a ton!","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/591704834/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/591705590","html_url":"https://github.com/apache/druid/issues/9413#issuecomment-591705590","issue_url":"https://api.github.com/repos/apache/druid/issues/9413","id":591705590,"node_id":"MDEyOklzc3VlQ29tbWVudDU5MTcwNTU5MA==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-02-26T23:58:26Z","updated_at":"2020-02-26T23:58:26Z","author_association":"CONTRIBUTOR","body":"> sounds definitely interesting although I'm not sure whether I understand correctly.\r\n> Does it mean that historicals would support receiving SQL queries directly and being able to execute them without having to rewrite them to JSON queries first? And that can be done without calcite? wow\r\n\r\nWhat I meant was that today there are two ways that Druid SQL queries can run:\r\n\r\n- If they refer to Druid datasources then they will be translated to native Druid queries and run that way.\r\n- If they do not refer to Druid datasources, they run using Calcite's interpreter. This includes any queries on `sys` or `INFORMATION_SCHEMA` tables, and any queries on raw `VALUES`.\r\n\r\nIt is a bit weird to have two paths like this, and we'd like to standardize on always translating SQL to native Druid queries (the JSON ones). This means native Druid queries need to start supporting functionality like `sys`, `INFORMATION_SCHEMA`, `VALUES`, etc. It is coming but we aren't quite there yet.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/591705590/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/591707379","html_url":"https://github.com/apache/druid/issues/9421#issuecomment-591707379","issue_url":"https://api.github.com/repos/apache/druid/issues/9421","id":591707379,"node_id":"MDEyOklzc3VlQ29tbWVudDU5MTcwNzM3OQ==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-02-27T00:04:13Z","updated_at":"2020-02-27T00:04:13Z","author_association":"CONTRIBUTOR","body":"I suppose in this case it would be best to ignore the column rather than the entire table. What were you seeing? Where'd the failure occur?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/591707379/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/591707537","html_url":"https://github.com/apache/druid/issues/9418#issuecomment-591707537","issue_url":"https://api.github.com/repos/apache/druid/issues/9418","id":591707537,"node_id":"MDEyOklzc3VlQ29tbWVudDU5MTcwNzUzNw==","user":{"login":"sascha-coenen","id":1635350,"node_id":"MDQ6VXNlcjE2MzUzNTA=","avatar_url":"https://avatars.githubusercontent.com/u/1635350?v=4","gravatar_id":"","url":"https://api.github.com/users/sascha-coenen","html_url":"https://github.com/sascha-coenen","followers_url":"https://api.github.com/users/sascha-coenen/followers","following_url":"https://api.github.com/users/sascha-coenen/following{/other_user}","gists_url":"https://api.github.com/users/sascha-coenen/gists{/gist_id}","starred_url":"https://api.github.com/users/sascha-coenen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sascha-coenen/subscriptions","organizations_url":"https://api.github.com/users/sascha-coenen/orgs","repos_url":"https://api.github.com/users/sascha-coenen/repos","events_url":"https://api.github.com/users/sascha-coenen/events{/privacy}","received_events_url":"https://api.github.com/users/sascha-coenen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-02-27T00:04:44Z","updated_at":"2020-02-27T00:04:44Z","author_association":"NONE","body":"I'm getting the following;\r\n\r\n```\r\nSQL Error [00000]: Error -1 (00000) : Error while executing SQL \"SELECT¶   LOOKUP('some', 'adtype_by_adtypeid') AS tst\": Remote driver error: RuntimeException: java.lang.AssertionError: Type mismatch:¶rowtype of new rel:¶RecordType(VARCHAR tst) NOT NULL¶rowtype of set:¶RecordType(VARCHAR NOT NULL tst) NOT NULL -> AssertionError: Type mismatch:¶rowtype of new rel:¶RecordType(VARCHAR tst) NOT NULL¶rowtype of set:¶RecordType(VARCHAR NOT NULL tst) NOT NULL\r\n```\r\n\r\nThis is with SQL compatible null handling turned OFF.\r\nI can check tomorrow what I get back if I have it switched on.\r\n\r\nI'm beginning to understand that the behaviour under compatible null handling is more important to get right as it is the desired true north state to thave compat mode switched on, but as we experience a performance issue with compat mode, we need to stick with the default mode for now. I'll update the ticket tomorrow when I have access to the cluster again with what I get under compat mode.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/591707537/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/591709035","html_url":"https://github.com/apache/druid/issues/9416#issuecomment-591709035","issue_url":"https://api.github.com/repos/apache/druid/issues/9416","id":591709035,"node_id":"MDEyOklzc3VlQ29tbWVudDU5MTcwOTAzNQ==","user":{"login":"sascha-coenen","id":1635350,"node_id":"MDQ6VXNlcjE2MzUzNTA=","avatar_url":"https://avatars.githubusercontent.com/u/1635350?v=4","gravatar_id":"","url":"https://api.github.com/users/sascha-coenen","html_url":"https://github.com/sascha-coenen","followers_url":"https://api.github.com/users/sascha-coenen/followers","following_url":"https://api.github.com/users/sascha-coenen/following{/other_user}","gists_url":"https://api.github.com/users/sascha-coenen/gists{/gist_id}","starred_url":"https://api.github.com/users/sascha-coenen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sascha-coenen/subscriptions","organizations_url":"https://api.github.com/users/sascha-coenen/orgs","repos_url":"https://api.github.com/users/sascha-coenen/repos","events_url":"https://api.github.com/users/sascha-coenen/events{/privacy}","received_events_url":"https://api.github.com/users/sascha-coenen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-02-27T00:09:52Z","updated_at":"2020-02-27T00:09:52Z","author_association":"NONE","body":"would it be possible to change the behaviour of LOOKUPS such that a key miss evaluates to NULL rather than an empty string? In that case we would not have a need for dealing with empty strings. Formulating fallbacks for lookups is our only usecase in which we need to check for empty strings.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/591709035/reactions","total_count":2,"+1":2,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/591709254","html_url":"https://github.com/apache/druid/issues/9421#issuecomment-591709254","issue_url":"https://api.github.com/repos/apache/druid/issues/9421","id":591709254,"node_id":"MDEyOklzc3VlQ29tbWVudDU5MTcwOTI1NA==","user":{"login":"samarthjain","id":1642180,"node_id":"MDQ6VXNlcjE2NDIxODA=","avatar_url":"https://avatars.githubusercontent.com/u/1642180?v=4","gravatar_id":"","url":"https://api.github.com/users/samarthjain","html_url":"https://github.com/samarthjain","followers_url":"https://api.github.com/users/samarthjain/followers","following_url":"https://api.github.com/users/samarthjain/following{/other_user}","gists_url":"https://api.github.com/users/samarthjain/gists{/gist_id}","starred_url":"https://api.github.com/users/samarthjain/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/samarthjain/subscriptions","organizations_url":"https://api.github.com/users/samarthjain/orgs","repos_url":"https://api.github.com/users/samarthjain/repos","events_url":"https://api.github.com/users/samarthjain/events{/privacy}","received_events_url":"https://api.github.com/users/samarthjain/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-02-27T00:10:39Z","updated_at":"2020-02-27T00:23:38Z","author_association":"CONTRIBUTOR","body":"I was seeing SegmentMetadata queries fail on the historical nodes with an NPE. \r\n```\r\nCaused by: java.lang.NullPointerException\r\n@400000005de84b7507eae4c4 \tat org.apache.druid.segment.column.SimpleColumnHolder.getColumn(SimpleColumnHolder.java:68) ~[druid-processing-0.16.0.jar:0.16.0]\r\n@400000005de84b7507eb0404 \tat org.apache.druid.segment.QueryableIndexColumnSelectorFactory.lambda$getCachedColumn$2(QueryableIndexColumnSelectorFactory.java:175) ~[druid-processing-0.16.0.jar:0.16.0]\r\n@400000005de84b7507eb07ec \tat java.util.HashMap.computeIfAbsent(HashMap.java:1127) ~[?:1.8.0_231]\r\n@400000005de84b7507eb07ec \tat org.apache.druid.segment.QueryableIndexColumnSelectorFactory.getCachedColumn(QueryableIndexColumnSelectorFactory.java:171) ~[druid-processing-0.16.0.jar:0.16.0]\r\n@400000005de84b7507eb0bd4 \tat org.apache.druid.segment.QueryableIndexColumnSelectorFactory.lambda$makeColumnValueSelector$1(QueryableIndexColumnSelectorFactory.java:146) ~[druid-processing-0.16.0.jar:0.16.0]\r\n@400000005de84b7507eb0bd4 \tat org.apache.druid.segment.QueryableIndexColumnSelectorFactory.makeColumnValueSelector(QueryableIndexColumnSelectorFactory.java:160) ~[druid-processing-0.16.0.jar:0.16.0]\r\n@400000005de84b7507eb0fbc \tat org.apache.druid.query.aggregation.tdigestsketch.TDigestSketchAggregatorFactory.factorizeBuffered(TDigestSketchAggregatorFactory.java:117) ~[?:?]\r\n@400000005de84b7507eb178c \tat org.apache.druid.query.aggregation.AggregatorAdapters.factorizeBuffered(AggregatorAdapters.java:103) ~[druid-processing-0.16.0.jar:0.16.0]\r\n@400000005de84b7507eb178c \tat org.apache.druid.query.groupby.epinephelinae.GroupByQueryEngineV2$HashAggregateIterator.newGrouper(GroupByQueryEngineV2.java:550) ~[druid-processing-0.16.0.jar:0.16.0]\r\n@400000005de84b7507eb1b74\r\n```\r\nThese metadata queries were generated by DruidSchema over here:\r\nhttps://github.com/apache/druid/blob/master/sql/src/main/java/org/apache/druid/sql/calcite/schema/DruidSchema.java#L508\r\n\r\nThe reason behind NPE was  `columnSupplier` being null in `SimpleColumnHolder`. This was happening  because the metadata deserialization was failing here:\r\nhttps://github.com/apache/druid/blob/master/processing/src/main/java/org/apache/druid/segment/IndexIO.java#L578\r\nwhich was \"silently\" setting the `columnSupplier` to null. \r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/591709254/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/591710151","html_url":"https://github.com/apache/druid/pull/8782#issuecomment-591710151","issue_url":"https://api.github.com/repos/apache/druid/issues/8782","id":591710151,"node_id":"MDEyOklzc3VlQ29tbWVudDU5MTcxMDE1MQ==","user":{"login":"nishantmonu51","id":5023786,"node_id":"MDQ6VXNlcjUwMjM3ODY=","avatar_url":"https://avatars.githubusercontent.com/u/5023786?v=4","gravatar_id":"","url":"https://api.github.com/users/nishantmonu51","html_url":"https://github.com/nishantmonu51","followers_url":"https://api.github.com/users/nishantmonu51/followers","following_url":"https://api.github.com/users/nishantmonu51/following{/other_user}","gists_url":"https://api.github.com/users/nishantmonu51/gists{/gist_id}","starred_url":"https://api.github.com/users/nishantmonu51/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nishantmonu51/subscriptions","organizations_url":"https://api.github.com/users/nishantmonu51/orgs","repos_url":"https://api.github.com/users/nishantmonu51/repos","events_url":"https://api.github.com/users/nishantmonu51/events{/privacy}","received_events_url":"https://api.github.com/users/nishantmonu51/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-02-27T00:13:59Z","updated_at":"2020-02-27T00:13:59Z","author_association":"MEMBER","body":"thanks @ccaominh for looking into it. ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/591710151/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/591712374","html_url":"https://github.com/apache/druid/issues/9416#issuecomment-591712374","issue_url":"https://api.github.com/repos/apache/druid/issues/9416","id":591712374,"node_id":"MDEyOklzc3VlQ29tbWVudDU5MTcxMjM3NA==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-02-27T00:21:28Z","updated_at":"2020-02-27T00:21:28Z","author_association":"CONTRIBUTOR","body":"> would it be possible to change the behaviour of LOOKUPS such that a key miss evaluates to NULL rather than an empty string?\r\n\r\nThat's a good point and seems pretty reasonable. I think it's actually already like that in SQL-compliant null handling mode. So maybe in that mode things already work like you expect. It would be good to exercise this case in any unit tests we add while working on this issue.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/591712374/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/591713556","html_url":"https://github.com/apache/druid/issues/9421#issuecomment-591713556","issue_url":"https://api.github.com/repos/apache/druid/issues/9421","id":591713556,"node_id":"MDEyOklzc3VlQ29tbWVudDU5MTcxMzU1Ng==","user":{"login":"samarthjain","id":1642180,"node_id":"MDQ6VXNlcjE2NDIxODA=","avatar_url":"https://avatars.githubusercontent.com/u/1642180?v=4","gravatar_id":"","url":"https://api.github.com/users/samarthjain","html_url":"https://github.com/samarthjain","followers_url":"https://api.github.com/users/samarthjain/followers","following_url":"https://api.github.com/users/samarthjain/following{/other_user}","gists_url":"https://api.github.com/users/samarthjain/gists{/gist_id}","starred_url":"https://api.github.com/users/samarthjain/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/samarthjain/subscriptions","organizations_url":"https://api.github.com/users/samarthjain/orgs","repos_url":"https://api.github.com/users/samarthjain/repos","events_url":"https://api.github.com/users/samarthjain/events{/privacy}","received_events_url":"https://api.github.com/users/samarthjain/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-02-27T00:25:35Z","updated_at":"2020-02-27T00:25:35Z","author_association":"CONTRIBUTOR","body":"The above NPE is unhandled in DruidSchema which causes the metadata refresh to fail and restart and fail at the same point over and over again. Maybe, DruidSchema should also be fixed to report only and swallow any such failures and proceed ahead with refreshing other datasources. ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/591713556/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/591720856","html_url":"https://github.com/apache/druid/pull/9122#issuecomment-591720856","issue_url":"https://api.github.com/repos/apache/druid/issues/9122","id":591720856,"node_id":"MDEyOklzc3VlQ29tbWVudDU5MTcyMDg1Ng==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-02-27T00:54:06Z","updated_at":"2020-02-27T00:54:06Z","author_association":"CONTRIBUTOR","body":"> I think we can handle this through the release notes. I'll make a followup issue to add GROUPING and GROUPING_ID, which I think we will need to make this feature fully useful.\r\n\r\nsure, thanks.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/591720856/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/591724298","html_url":"https://github.com/apache/druid/issues/9401#issuecomment-591724298","issue_url":"https://api.github.com/repos/apache/druid/issues/9401","id":591724298,"node_id":"MDEyOklzc3VlQ29tbWVudDU5MTcyNDI5OA==","user":{"login":"vogievetsky","id":177816,"node_id":"MDQ6VXNlcjE3NzgxNg==","avatar_url":"https://avatars.githubusercontent.com/u/177816?v=4","gravatar_id":"","url":"https://api.github.com/users/vogievetsky","html_url":"https://github.com/vogievetsky","followers_url":"https://api.github.com/users/vogievetsky/followers","following_url":"https://api.github.com/users/vogievetsky/following{/other_user}","gists_url":"https://api.github.com/users/vogievetsky/gists{/gist_id}","starred_url":"https://api.github.com/users/vogievetsky/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vogievetsky/subscriptions","organizations_url":"https://api.github.com/users/vogievetsky/orgs","repos_url":"https://api.github.com/users/vogievetsky/repos","events_url":"https://api.github.com/users/vogievetsky/events{/privacy}","received_events_url":"https://api.github.com/users/vogievetsky/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-02-27T01:06:45Z","updated_at":"2020-02-27T01:06:45Z","author_association":"CONTRIBUTOR","body":"Is it possible to do that operation via an API that is based around posting a JSON payload and not a query parameter in the URL? If not it should be.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/591724298/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/591725587","html_url":"https://github.com/apache/druid/issues/8846#issuecomment-591725587","issue_url":"https://api.github.com/repos/apache/druid/issues/8846","id":591725587,"node_id":"MDEyOklzc3VlQ29tbWVudDU5MTcyNTU4Nw==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-02-27T01:11:22Z","updated_at":"2020-02-27T01:11:22Z","author_association":"CONTRIBUTOR","body":"@jihoonson thanks for triggering the discussion :)\r\n\r\nI faced this issue because of the very specific way  segment intervals overlapped and that all historicals  were restarted simultaneously. This issue disappears if historicals are restarted one by one. That is what I opted as a work around to solve this problem because bringing down all historicals in prod simultaneously wasn't going to give customers a good experience anyway. Hence, this issue lost its importance somewhat. Did you face this in another context ?\r\n\r\nalso, there is a caveat (on broker) and hence the approach needed discussion, operations in `VersionedIntervalTimeline` need to hold a  lock to  protect all data structures  .. currently lock is not held for long as we do things  one segment at a time .. this gives incoming queries a  chance to lookup segments and execute . With batching,  lock  could potentially be held for relatively longer and queries might block.\r\n\r\nSince the issue doesn't appear in regular druid deployment/upgrade use case but in situations where users is doing something major on druid cluster requiring bringing down all historicals, they could always just restart the broker/coordinator in the end as well. For this reason, I kept my prototype in prototype stage and didn't create a PR.\r\n\r\nThat said, if this issue is surfacing in other use cases giving pain then it might be worth doing the batching. I could probably dig out the code and do a PR. However, at this point, I don't think it is necessary. \r\n\r\nPS: I kept this issue open just in case someone else noticed this issue in another context.\r\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/591725587/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/591730668","html_url":"https://github.com/apache/druid/issues/8846#issuecomment-591730668","issue_url":"https://api.github.com/repos/apache/druid/issues/8846","id":591730668,"node_id":"MDEyOklzc3VlQ29tbWVudDU5MTczMDY2OA==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-02-27T01:29:58Z","updated_at":"2020-02-27T01:29:58Z","author_association":"CONTRIBUTOR","body":"Ah, I'm looking at the performance of `VersionedIntervalTimeline` using `VersionedIntervalTimelineBenchmark` and the issue I'm seeing is the `remove()` method is too slow. From what I've seen, it is slow because it needs to determine the new visible segments after a segment is removed and I guess `removeAll()` could be faster if the new visible segments can be determined at once after removing segments is done.\r\n\r\n> also, there is a caveat (on broker) and hence the approach needed discussion, operations in VersionedIntervalTimeline need to hold a lock to protect all data structures .. currently lock is not held for long as we do things one segment at a time .. this gives incoming queries a chance to lookup segments and execute . With batching, lock could potentially be held for relatively longer and queries might block.\r\n\r\nThis is true, so I think we can keep both `remove()` and `removeAll()` so that callers can use either of them based on their preferences. AFAIT, concurrent access to the timeline is required only in brokers, so maybe the broker can use `remove()` to reduce the lock contention while others use `removeAll()`. Does it make sense?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/591730668/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/591732015","html_url":"https://github.com/apache/druid/issues/9401#issuecomment-591732015","issue_url":"https://api.github.com/repos/apache/druid/issues/9401","id":591732015,"node_id":"MDEyOklzc3VlQ29tbWVudDU5MTczMjAxNQ==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-02-27T01:34:49Z","updated_at":"2020-02-27T01:34:49Z","author_association":"CONTRIBUTOR","body":"> Is it possible to do that operation via an API that is based around posting a JSON payload and not a query parameter in the URL? If not it should be.\r\n\r\nI can do that, but why should it be the JSON payload?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/591732015/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/591757936","html_url":"https://github.com/apache/druid/issues/8728#issuecomment-591757936","issue_url":"https://api.github.com/repos/apache/druid/issues/8728","id":591757936,"node_id":"MDEyOklzc3VlQ29tbWVudDU5MTc1NzkzNg==","user":{"login":"chetansurwade","id":29613800,"node_id":"MDQ6VXNlcjI5NjEzODAw","avatar_url":"https://avatars.githubusercontent.com/u/29613800?v=4","gravatar_id":"","url":"https://api.github.com/users/chetansurwade","html_url":"https://github.com/chetansurwade","followers_url":"https://api.github.com/users/chetansurwade/followers","following_url":"https://api.github.com/users/chetansurwade/following{/other_user}","gists_url":"https://api.github.com/users/chetansurwade/gists{/gist_id}","starred_url":"https://api.github.com/users/chetansurwade/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/chetansurwade/subscriptions","organizations_url":"https://api.github.com/users/chetansurwade/orgs","repos_url":"https://api.github.com/users/chetansurwade/repos","events_url":"https://api.github.com/users/chetansurwade/events{/privacy}","received_events_url":"https://api.github.com/users/chetansurwade/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-02-27T03:15:38Z","updated_at":"2020-02-27T03:15:38Z","author_association":"NONE","body":"@gianm When can we expect a release with Join Support and ANSI SQL compliance?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/591757936/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/591788225","html_url":"https://github.com/apache/druid/issues/7726#issuecomment-591788225","issue_url":"https://api.github.com/repos/apache/druid/issues/7726","id":591788225,"node_id":"MDEyOklzc3VlQ29tbWVudDU5MTc4ODIyNQ==","user":{"login":"stale[bot]","id":26384082,"node_id":"MDM6Qm90MjYzODQwODI=","avatar_url":"https://avatars.githubusercontent.com/in/1724?v=4","gravatar_id":"","url":"https://api.github.com/users/stale%5Bbot%5D","html_url":"https://github.com/apps/stale","followers_url":"https://api.github.com/users/stale%5Bbot%5D/followers","following_url":"https://api.github.com/users/stale%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/stale%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/stale%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stale%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/stale%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/stale%5Bbot%5D/repos","events_url":"https://api.github.com/users/stale%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/stale%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2020-02-27T05:24:55Z","updated_at":"2020-02-27T05:24:55Z","author_association":"NONE","body":"This issue has been marked as stale due to 280 days of inactivity. It will be closed in 4 weeks if no further activity occurs. If this issue is still relevant, please simply write any comment. Even if closed, you can still revive the issue at any time or discuss it on the dev@druid.apache.org list. Thank you for your contributions.\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/591788225/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/591788237","html_url":"https://github.com/apache/druid/issues/2320#issuecomment-591788237","issue_url":"https://api.github.com/repos/apache/druid/issues/2320","id":591788237,"node_id":"MDEyOklzc3VlQ29tbWVudDU5MTc4ODIzNw==","user":{"login":"stale[bot]","id":26384082,"node_id":"MDM6Qm90MjYzODQwODI=","avatar_url":"https://avatars.githubusercontent.com/in/1724?v=4","gravatar_id":"","url":"https://api.github.com/users/stale%5Bbot%5D","html_url":"https://github.com/apps/stale","followers_url":"https://api.github.com/users/stale%5Bbot%5D/followers","following_url":"https://api.github.com/users/stale%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/stale%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/stale%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stale%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/stale%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/stale%5Bbot%5D/repos","events_url":"https://api.github.com/users/stale%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/stale%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2020-02-27T05:24:56Z","updated_at":"2020-02-27T05:24:56Z","author_association":"NONE","body":"This issue has been marked as stale due to 280 days of inactivity. It will be closed in 4 weeks if no further activity occurs. If this issue is still relevant, please simply write any comment. Even if closed, you can still revive the issue at any time or discuss it on the dev@druid.apache.org list. Thank you for your contributions.\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/591788237/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/591788255","html_url":"https://github.com/apache/druid/issues/7510#issuecomment-591788255","issue_url":"https://api.github.com/repos/apache/druid/issues/7510","id":591788255,"node_id":"MDEyOklzc3VlQ29tbWVudDU5MTc4ODI1NQ==","user":{"login":"stale[bot]","id":26384082,"node_id":"MDM6Qm90MjYzODQwODI=","avatar_url":"https://avatars.githubusercontent.com/in/1724?v=4","gravatar_id":"","url":"https://api.github.com/users/stale%5Bbot%5D","html_url":"https://github.com/apps/stale","followers_url":"https://api.github.com/users/stale%5Bbot%5D/followers","following_url":"https://api.github.com/users/stale%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/stale%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/stale%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stale%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/stale%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/stale%5Bbot%5D/repos","events_url":"https://api.github.com/users/stale%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/stale%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2020-02-27T05:25:00Z","updated_at":"2020-02-27T05:25:00Z","author_association":"NONE","body":"This issue has been closed due to lack of activity. If you think that is incorrect, or the issue requires additional review, you can revive the issue at any time.\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/591788255/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/591788257","html_url":"https://github.com/apache/druid/issues/7538#issuecomment-591788257","issue_url":"https://api.github.com/repos/apache/druid/issues/7538","id":591788257,"node_id":"MDEyOklzc3VlQ29tbWVudDU5MTc4ODI1Nw==","user":{"login":"stale[bot]","id":26384082,"node_id":"MDM6Qm90MjYzODQwODI=","avatar_url":"https://avatars.githubusercontent.com/in/1724?v=4","gravatar_id":"","url":"https://api.github.com/users/stale%5Bbot%5D","html_url":"https://github.com/apps/stale","followers_url":"https://api.github.com/users/stale%5Bbot%5D/followers","following_url":"https://api.github.com/users/stale%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/stale%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/stale%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stale%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/stale%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/stale%5Bbot%5D/repos","events_url":"https://api.github.com/users/stale%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/stale%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2020-02-27T05:25:01Z","updated_at":"2020-02-27T05:25:01Z","author_association":"NONE","body":"This issue has been closed due to lack of activity. If you think that is incorrect, or the issue requires additional review, you can revive the issue at any time.\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/591788257/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/591788266","html_url":"https://github.com/apache/druid/issues/7539#issuecomment-591788266","issue_url":"https://api.github.com/repos/apache/druid/issues/7539","id":591788266,"node_id":"MDEyOklzc3VlQ29tbWVudDU5MTc4ODI2Ng==","user":{"login":"stale[bot]","id":26384082,"node_id":"MDM6Qm90MjYzODQwODI=","avatar_url":"https://avatars.githubusercontent.com/in/1724?v=4","gravatar_id":"","url":"https://api.github.com/users/stale%5Bbot%5D","html_url":"https://github.com/apps/stale","followers_url":"https://api.github.com/users/stale%5Bbot%5D/followers","following_url":"https://api.github.com/users/stale%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/stale%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/stale%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stale%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/stale%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/stale%5Bbot%5D/repos","events_url":"https://api.github.com/users/stale%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/stale%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2020-02-27T05:25:02Z","updated_at":"2020-02-27T05:25:02Z","author_association":"NONE","body":"This issue has been closed due to lack of activity. If you think that is incorrect, or the issue requires additional review, you can revive the issue at any time.\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/591788266/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/591788273","html_url":"https://github.com/apache/druid/issues/7530#issuecomment-591788273","issue_url":"https://api.github.com/repos/apache/druid/issues/7530","id":591788273,"node_id":"MDEyOklzc3VlQ29tbWVudDU5MTc4ODI3Mw==","user":{"login":"stale[bot]","id":26384082,"node_id":"MDM6Qm90MjYzODQwODI=","avatar_url":"https://avatars.githubusercontent.com/in/1724?v=4","gravatar_id":"","url":"https://api.github.com/users/stale%5Bbot%5D","html_url":"https://github.com/apps/stale","followers_url":"https://api.github.com/users/stale%5Bbot%5D/followers","following_url":"https://api.github.com/users/stale%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/stale%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/stale%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stale%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/stale%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/stale%5Bbot%5D/repos","events_url":"https://api.github.com/users/stale%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/stale%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2020-02-27T05:25:03Z","updated_at":"2020-02-27T05:25:03Z","author_association":"NONE","body":"This issue has been closed due to lack of activity. If you think that is incorrect, or the issue requires additional review, you can revive the issue at any time.\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/591788273/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/591790413","html_url":"https://github.com/apache/druid/issues/9427#issuecomment-591790413","issue_url":"https://api.github.com/repos/apache/druid/issues/9427","id":591790413,"node_id":"MDEyOklzc3VlQ29tbWVudDU5MTc5MDQxMw==","user":{"login":"clintropolis","id":1577461,"node_id":"MDQ6VXNlcjE1Nzc0NjE=","avatar_url":"https://avatars.githubusercontent.com/u/1577461?v=4","gravatar_id":"","url":"https://api.github.com/users/clintropolis","html_url":"https://github.com/clintropolis","followers_url":"https://api.github.com/users/clintropolis/followers","following_url":"https://api.github.com/users/clintropolis/following{/other_user}","gists_url":"https://api.github.com/users/clintropolis/gists{/gist_id}","starred_url":"https://api.github.com/users/clintropolis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintropolis/subscriptions","organizations_url":"https://api.github.com/users/clintropolis/orgs","repos_url":"https://api.github.com/users/clintropolis/repos","events_url":"https://api.github.com/users/clintropolis/events{/privacy}","received_events_url":"https://api.github.com/users/clintropolis/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-02-27T05:32:57Z","updated_at":"2020-02-27T05:32:57Z","author_association":"MEMBER","body":"Hmm, I just downloaded the source package and I am not seeing the same behavior, could something about your environment have truncated the file names when unpacking?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/591790413/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/591793203","html_url":"https://github.com/apache/druid/pull/9425#issuecomment-591793203","issue_url":"https://api.github.com/repos/apache/druid/issues/9425","id":591793203,"node_id":"MDEyOklzc3VlQ29tbWVudDU5MTc5MzIwMw==","user":{"login":"clintropolis","id":1577461,"node_id":"MDQ6VXNlcjE1Nzc0NjE=","avatar_url":"https://avatars.githubusercontent.com/u/1577461?v=4","gravatar_id":"","url":"https://api.github.com/users/clintropolis","html_url":"https://github.com/clintropolis","followers_url":"https://api.github.com/users/clintropolis/followers","following_url":"https://api.github.com/users/clintropolis/following{/other_user}","gists_url":"https://api.github.com/users/clintropolis/gists{/gist_id}","starred_url":"https://api.github.com/users/clintropolis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintropolis/subscriptions","organizations_url":"https://api.github.com/users/clintropolis/orgs","repos_url":"https://api.github.com/users/clintropolis/repos","events_url":"https://api.github.com/users/clintropolis/events{/privacy}","received_events_url":"https://api.github.com/users/clintropolis/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-02-27T05:43:23Z","updated_at":"2020-02-27T05:43:23Z","author_association":"MEMBER","body":">Can you think of a way to add a test? (The results don't change, we were just missing a performance optimization. We don't have a perf test framework yet, but even without one, any ideas?)\r\n\r\nIt is pretty ugly, but I added a test to confirm that `SingleStringInputDimensionSelector` is chosen over `MultiValueExpressionDimensionSelector` for selectors with capabilities that are compatible with the optimization.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/591793203/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/591798247","html_url":"https://github.com/apache/druid/pull/9096#issuecomment-591798247","issue_url":"https://api.github.com/repos/apache/druid/issues/9096","id":591798247,"node_id":"MDEyOklzc3VlQ29tbWVudDU5MTc5ODI0Nw==","user":{"login":"stale[bot]","id":26384082,"node_id":"MDM6Qm90MjYzODQwODI=","avatar_url":"https://avatars.githubusercontent.com/in/1724?v=4","gravatar_id":"","url":"https://api.github.com/users/stale%5Bbot%5D","html_url":"https://github.com/apps/stale","followers_url":"https://api.github.com/users/stale%5Bbot%5D/followers","following_url":"https://api.github.com/users/stale%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/stale%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/stale%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stale%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/stale%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/stale%5Bbot%5D/repos","events_url":"https://api.github.com/users/stale%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/stale%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2020-02-27T06:02:25Z","updated_at":"2020-02-27T06:02:25Z","author_association":"NONE","body":"This pull request/issue is no longer marked as stale.\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/591798247/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/591798248","html_url":"https://github.com/apache/druid/pull/9096#issuecomment-591798248","issue_url":"https://api.github.com/repos/apache/druid/issues/9096","id":591798248,"node_id":"MDEyOklzc3VlQ29tbWVudDU5MTc5ODI0OA==","user":{"login":"stale[bot]","id":26384082,"node_id":"MDM6Qm90MjYzODQwODI=","avatar_url":"https://avatars.githubusercontent.com/in/1724?v=4","gravatar_id":"","url":"https://api.github.com/users/stale%5Bbot%5D","html_url":"https://github.com/apps/stale","followers_url":"https://api.github.com/users/stale%5Bbot%5D/followers","following_url":"https://api.github.com/users/stale%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/stale%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/stale%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stale%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/stale%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/stale%5Bbot%5D/repos","events_url":"https://api.github.com/users/stale%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/stale%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2020-02-27T06:02:25Z","updated_at":"2020-02-27T06:02:25Z","author_association":"NONE","body":"This pull request/issue is no longer marked as stale.\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/591798248/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/591798249","html_url":"https://github.com/apache/druid/pull/9096#issuecomment-591798249","issue_url":"https://api.github.com/repos/apache/druid/issues/9096","id":591798249,"node_id":"MDEyOklzc3VlQ29tbWVudDU5MTc5ODI0OQ==","user":{"login":"stale[bot]","id":26384082,"node_id":"MDM6Qm90MjYzODQwODI=","avatar_url":"https://avatars.githubusercontent.com/in/1724?v=4","gravatar_id":"","url":"https://api.github.com/users/stale%5Bbot%5D","html_url":"https://github.com/apps/stale","followers_url":"https://api.github.com/users/stale%5Bbot%5D/followers","following_url":"https://api.github.com/users/stale%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/stale%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/stale%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stale%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/stale%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/stale%5Bbot%5D/repos","events_url":"https://api.github.com/users/stale%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/stale%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2020-02-27T06:02:25Z","updated_at":"2020-02-27T06:02:25Z","author_association":"NONE","body":"This pull request/issue is no longer marked as stale.\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/591798249/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/591798250","html_url":"https://github.com/apache/druid/pull/9096#issuecomment-591798250","issue_url":"https://api.github.com/repos/apache/druid/issues/9096","id":591798250,"node_id":"MDEyOklzc3VlQ29tbWVudDU5MTc5ODI1MA==","user":{"login":"stale[bot]","id":26384082,"node_id":"MDM6Qm90MjYzODQwODI=","avatar_url":"https://avatars.githubusercontent.com/in/1724?v=4","gravatar_id":"","url":"https://api.github.com/users/stale%5Bbot%5D","html_url":"https://github.com/apps/stale","followers_url":"https://api.github.com/users/stale%5Bbot%5D/followers","following_url":"https://api.github.com/users/stale%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/stale%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/stale%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stale%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/stale%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/stale%5Bbot%5D/repos","events_url":"https://api.github.com/users/stale%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/stale%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2020-02-27T06:02:26Z","updated_at":"2020-02-27T06:02:26Z","author_association":"NONE","body":"This pull request/issue is no longer marked as stale.\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/591798250/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/591804486","html_url":"https://github.com/apache/druid/issues/9427#issuecomment-591804486","issue_url":"https://api.github.com/repos/apache/druid/issues/9427","id":591804486,"node_id":"MDEyOklzc3VlQ29tbWVudDU5MTgwNDQ4Ng==","user":{"login":"zihuanglin","id":31434644,"node_id":"MDQ6VXNlcjMxNDM0NjQ0","avatar_url":"https://avatars.githubusercontent.com/u/31434644?v=4","gravatar_id":"","url":"https://api.github.com/users/zihuanglin","html_url":"https://github.com/zihuanglin","followers_url":"https://api.github.com/users/zihuanglin/followers","following_url":"https://api.github.com/users/zihuanglin/following{/other_user}","gists_url":"https://api.github.com/users/zihuanglin/gists{/gist_id}","starred_url":"https://api.github.com/users/zihuanglin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zihuanglin/subscriptions","organizations_url":"https://api.github.com/users/zihuanglin/orgs","repos_url":"https://api.github.com/users/zihuanglin/repos","events_url":"https://api.github.com/users/zihuanglin/events{/privacy}","received_events_url":"https://api.github.com/users/zihuanglin/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-02-27T06:24:23Z","updated_at":"2020-02-27T06:24:23Z","author_association":"NONE","body":"Thanks clintropolis, there's something wrong with the way I unpacking the file, I've changed my way and it's okay","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/591804486/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/591812731","html_url":"https://github.com/apache/druid/issues/8846#issuecomment-591812731","issue_url":"https://api.github.com/repos/apache/druid/issues/8846","id":591812731,"node_id":"MDEyOklzc3VlQ29tbWVudDU5MTgxMjczMQ==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-02-27T06:53:24Z","updated_at":"2020-02-27T06:53:24Z","author_association":"CONTRIBUTOR","body":"Yeah, coordinator can probably use batching  without any downsides considering coordinator helpers run serially. Please  feel free to take it up if you want.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/591812731/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/591823095","html_url":"https://github.com/apache/druid/pull/9365#issuecomment-591823095","issue_url":"https://api.github.com/repos/apache/druid/issues/9365","id":591823095,"node_id":"MDEyOklzc3VlQ29tbWVudDU5MTgyMzA5NQ==","user":{"login":"MoushmiDas","id":61535892,"node_id":"MDQ6VXNlcjYxNTM1ODky","avatar_url":"https://avatars.githubusercontent.com/u/61535892?v=4","gravatar_id":"","url":"https://api.github.com/users/MoushmiDas","html_url":"https://github.com/MoushmiDas","followers_url":"https://api.github.com/users/MoushmiDas/followers","following_url":"https://api.github.com/users/MoushmiDas/following{/other_user}","gists_url":"https://api.github.com/users/MoushmiDas/gists{/gist_id}","starred_url":"https://api.github.com/users/MoushmiDas/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/MoushmiDas/subscriptions","organizations_url":"https://api.github.com/users/MoushmiDas/orgs","repos_url":"https://api.github.com/users/MoushmiDas/repos","events_url":"https://api.github.com/users/MoushmiDas/events{/privacy}","received_events_url":"https://api.github.com/users/MoushmiDas/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-02-27T07:25:41Z","updated_at":"2020-02-27T07:28:57Z","author_association":"NONE","body":"Hi Team,\r\n\r\nI am trying to Load the data from Postgresql to Apache Druid(apache-druid-0.17.0) , but I am getting below error:\r\n\r\n\"SQL firehose error with org.apache.druid.segment.realtime.firehose.SqlFirehoseFactory cannot be cast to org.apache.druid.data.input.FiniteFirehoseFactory.\"\r\n\r\nseems the issue is already resolve in the below  Ticket request:\r\n\r\n*SQL firehose error #9359\r\n*Fix compatibility issues with SqlFirehose #9365\r\n\r\nCould you please help me to get the new io-configuration for the postgresql.\r\n\r\nCurrently we are using below io-config for which we are getting above error:\r\n    \"ioConfig\": {\r\n      \"type\": \"index\",\r\n      \"firehose\": {\r\n        \"type\": \"sql\",\r\n        \"database\": {\r\n          \"type\": \"postgresql\",\r\n          \"connectorConfig\": {\r\n           \"connectURI\": \"jdbc:postgresql://<Host_Name>:<PortNo.>/<DB_Name>\",\r\n\t\t\t\"user\": \"<User_Name>\",\r\n            \"password\": \"<Pass_word>\"\r\n             }\r\n        },\r\n        \"sqls\": [\r\n          \"select * from Table;\"\r\n        ]\r\n      }\r\n    }","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/591823095/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/591841821","html_url":"https://github.com/apache/druid/issues/9402#issuecomment-591841821","issue_url":"https://api.github.com/repos/apache/druid/issues/9402","id":591841821,"node_id":"MDEyOklzc3VlQ29tbWVudDU5MTg0MTgyMQ==","user":{"login":"vogievetsky","id":177816,"node_id":"MDQ6VXNlcjE3NzgxNg==","avatar_url":"https://avatars.githubusercontent.com/u/177816?v=4","gravatar_id":"","url":"https://api.github.com/users/vogievetsky","html_url":"https://github.com/vogievetsky","followers_url":"https://api.github.com/users/vogievetsky/followers","following_url":"https://api.github.com/users/vogievetsky/following{/other_user}","gists_url":"https://api.github.com/users/vogievetsky/gists{/gist_id}","starred_url":"https://api.github.com/users/vogievetsky/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vogievetsky/subscriptions","organizations_url":"https://api.github.com/users/vogievetsky/orgs","repos_url":"https://api.github.com/users/vogievetsky/repos","events_url":"https://api.github.com/users/vogievetsky/events{/privacy}","received_events_url":"https://api.github.com/users/vogievetsky/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-02-27T08:20:05Z","updated_at":"2020-02-27T08:20:05Z","author_association":"CONTRIBUTOR","body":"Indeed. They should be updated.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/591841821/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/591845307","html_url":"https://github.com/apache/druid/issues/9389#issuecomment-591845307","issue_url":"https://api.github.com/repos/apache/druid/issues/9389","id":591845307,"node_id":"MDEyOklzc3VlQ29tbWVudDU5MTg0NTMwNw==","user":{"login":"gunjdesai","id":7438622,"node_id":"MDQ6VXNlcjc0Mzg2MjI=","avatar_url":"https://avatars.githubusercontent.com/u/7438622?v=4","gravatar_id":"","url":"https://api.github.com/users/gunjdesai","html_url":"https://github.com/gunjdesai","followers_url":"https://api.github.com/users/gunjdesai/followers","following_url":"https://api.github.com/users/gunjdesai/following{/other_user}","gists_url":"https://api.github.com/users/gunjdesai/gists{/gist_id}","starred_url":"https://api.github.com/users/gunjdesai/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gunjdesai/subscriptions","organizations_url":"https://api.github.com/users/gunjdesai/orgs","repos_url":"https://api.github.com/users/gunjdesai/repos","events_url":"https://api.github.com/users/gunjdesai/events{/privacy}","received_events_url":"https://api.github.com/users/gunjdesai/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-02-27T08:28:57Z","updated_at":"2020-02-27T08:28:57Z","author_association":"NONE","body":"Hey,\r\n\r\nSorry i couldn't respond on this earlier.\r\nI tried using the `ingestSegment` instead of using combining firehose. \r\n\r\nIt's rejected as a bad request with the following error\r\n```\r\nException: HTTP Error 400: Bad Request, check overlord log for more details.\r\n{\"error\":\"Cannot construct instance of `org.apache.druid.indexing.firehose.IngestSegmentFirehoseFactory`, problem: dataSource\\n at [Source: (org.eclipse.jetty.server.HttpInputOverHTTP); line: 49, column: 7] (through reference chain: org.apache.druid.indexing.common.task.IndexTask[\\\"spec\\\"]->org.apache.druid.indexing.common.task.IndexTask$IndexIngestionSpec[\\\"ioConfig\\\"]->org.apache.druid.indexing.common.task.IndexTask$IndexIOConfig[\\\"firehose\\\"])\"}\r\n```","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/591845307/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/591853920","html_url":"https://github.com/apache/druid/pull/9422#issuecomment-591853920","issue_url":"https://api.github.com/repos/apache/druid/issues/9422","id":591853920,"node_id":"MDEyOklzc3VlQ29tbWVudDU5MTg1MzkyMA==","user":{"login":"samarthjain","id":1642180,"node_id":"MDQ6VXNlcjE2NDIxODA=","avatar_url":"https://avatars.githubusercontent.com/u/1642180?v=4","gravatar_id":"","url":"https://api.github.com/users/samarthjain","html_url":"https://github.com/samarthjain","followers_url":"https://api.github.com/users/samarthjain/followers","following_url":"https://api.github.com/users/samarthjain/following{/other_user}","gists_url":"https://api.github.com/users/samarthjain/gists{/gist_id}","starred_url":"https://api.github.com/users/samarthjain/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/samarthjain/subscriptions","organizations_url":"https://api.github.com/users/samarthjain/orgs","repos_url":"https://api.github.com/users/samarthjain/repos","events_url":"https://api.github.com/users/samarthjain/events{/privacy}","received_events_url":"https://api.github.com/users/samarthjain/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-02-27T08:49:31Z","updated_at":"2020-02-27T08:49:31Z","author_association":"CONTRIBUTOR","body":"@gianm - appreciate if you can take a look. I tested it out on our cluster and I see the DruidSchema cache is working fine again since the SegmentMetadata queries are no longer failing with NPE when encountering unknown aggregators.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/591853920/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/591902787","html_url":"https://github.com/apache/druid/issues/9419#issuecomment-591902787","issue_url":"https://api.github.com/repos/apache/druid/issues/9419","id":591902787,"node_id":"MDEyOklzc3VlQ29tbWVudDU5MTkwMjc4Nw==","user":{"login":"vikramsinghchandel","id":10221155,"node_id":"MDQ6VXNlcjEwMjIxMTU1","avatar_url":"https://avatars.githubusercontent.com/u/10221155?v=4","gravatar_id":"","url":"https://api.github.com/users/vikramsinghchandel","html_url":"https://github.com/vikramsinghchandel","followers_url":"https://api.github.com/users/vikramsinghchandel/followers","following_url":"https://api.github.com/users/vikramsinghchandel/following{/other_user}","gists_url":"https://api.github.com/users/vikramsinghchandel/gists{/gist_id}","starred_url":"https://api.github.com/users/vikramsinghchandel/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vikramsinghchandel/subscriptions","organizations_url":"https://api.github.com/users/vikramsinghchandel/orgs","repos_url":"https://api.github.com/users/vikramsinghchandel/repos","events_url":"https://api.github.com/users/vikramsinghchandel/events{/privacy}","received_events_url":"https://api.github.com/users/vikramsinghchandel/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-02-27T10:43:03Z","updated_at":"2020-02-27T10:43:03Z","author_association":"NONE","body":"Hi @jon-wei \r\nThanks a lot for the solution. But I think the issue here has a much wider scope, As there are systems(viz. Superset/DBeaver) which don't rely on JSON based querying and only have SQL mode.\r\n\r\nNow both of these systems (there may be more) don't have per query level context settings they are set at JDBC driver level.\r\nOr is there a way to set these query context in SQL itself?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/591902787/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/591918423","html_url":"https://github.com/apache/druid/issues/9417#issuecomment-591918423","issue_url":"https://api.github.com/repos/apache/druid/issues/9417","id":591918423,"node_id":"MDEyOklzc3VlQ29tbWVudDU5MTkxODQyMw==","user":{"login":"sascha-coenen","id":1635350,"node_id":"MDQ6VXNlcjE2MzUzNTA=","avatar_url":"https://avatars.githubusercontent.com/u/1635350?v=4","gravatar_id":"","url":"https://api.github.com/users/sascha-coenen","html_url":"https://github.com/sascha-coenen","followers_url":"https://api.github.com/users/sascha-coenen/followers","following_url":"https://api.github.com/users/sascha-coenen/following{/other_user}","gists_url":"https://api.github.com/users/sascha-coenen/gists{/gist_id}","starred_url":"https://api.github.com/users/sascha-coenen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sascha-coenen/subscriptions","organizations_url":"https://api.github.com/users/sascha-coenen/orgs","repos_url":"https://api.github.com/users/sascha-coenen/repos","events_url":"https://api.github.com/users/sascha-coenen/events{/privacy}","received_events_url":"https://api.github.com/users/sascha-coenen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-02-27T11:19:04Z","updated_at":"2020-02-27T11:19:23Z","author_association":"NONE","body":"> Btw, I've never seen a one-arg NVL function.\r\n\r\nyeah. missing an arg. alternatively NULLIF(denominator, 0)\r\n\r\n> For the 1/NULL case, I think we should probably return NULL instead of throwing an error.\r\n\r\nthat would be perfect \r\n\r\n> Would adding that function solve your problem?\r\n\r\nyes, it would make things more concise.\r\nI mentioned the function DIV(nominator, denominator, null-fallback) above which is probably similar to their SAFE_DIVIDE function. \r\nHaving this as an infix operator rather than in function syntax would be even nicer so that there are less nesting levels, but I guess that's out of the question.\r\n\r\nMost importantly though, for this to be a perfectly useful function, it would have to divide numerically, meaning DIV(1, 2) should be 0.5 not 0.\r\nI would argue that user experience trumps technical arguments. So in the real world the expectation of 1 divided by 2 is 0.5 Having equal types is nice from a technical perspective, but to quote Steve Jobs, one should start with the user perspective and work one's way backwards to technology. (https://www.youtube.com/watch?v=r2O5qKZlI50)\r\nAlso why have two different ways to do integer division and none for numerical division, so to even out the scales I would petition for having this DIV() function apply numerical division.\r\n\r\nAlthough it also has to be said that DIV usually represents integer division (https://www.w3schools.com/sql/func_mysql_div.asp) so it would be misleading to have it be a numerical division in Druid, so a different name like SAFE_DIV would be better I think.\r\nIt is sad that databases differ so much on what \"/\" is doing. Since decimal division is the common case, IT should be the default, especially in the context of having a DIV function for doing the integer division. \r\nParagon of consistency indeed, lol :D","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/591918423/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/591923866","html_url":"https://github.com/apache/druid/issues/9412#issuecomment-591923866","issue_url":"https://api.github.com/repos/apache/druid/issues/9412","id":591923866,"node_id":"MDEyOklzc3VlQ29tbWVudDU5MTkyMzg2Ng==","user":{"login":"sascha-coenen","id":1635350,"node_id":"MDQ6VXNlcjE2MzUzNTA=","avatar_url":"https://avatars.githubusercontent.com/u/1635350?v=4","gravatar_id":"","url":"https://api.github.com/users/sascha-coenen","html_url":"https://github.com/sascha-coenen","followers_url":"https://api.github.com/users/sascha-coenen/followers","following_url":"https://api.github.com/users/sascha-coenen/following{/other_user}","gists_url":"https://api.github.com/users/sascha-coenen/gists{/gist_id}","starred_url":"https://api.github.com/users/sascha-coenen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sascha-coenen/subscriptions","organizations_url":"https://api.github.com/users/sascha-coenen/orgs","repos_url":"https://api.github.com/users/sascha-coenen/repos","events_url":"https://api.github.com/users/sascha-coenen/events{/privacy}","received_events_url":"https://api.github.com/users/sascha-coenen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-02-27T11:31:49Z","updated_at":"2020-02-27T11:31:49Z","author_association":"NONE","body":"AH, right! \r\nThanks now I get it. I remember that NULL IS NULL evaluates to true while NULL = NULL does not and it seems that CASE X WHEN NULL THEN would apply an equals comparison and therefore not evaluate to true ever.\r\n\r\nI'm sorry but to round this off one further set of example queries that are using the correct syntax are needed:\r\n\r\nthe following query works:\r\n```\r\nSELECT \r\n\tCASE WHEN cityName IS NULL THEN FALSE ELSE TRUE END AS col_a,\r\n\tCASE WHEN countryName IS NULL THEN FALSE ELSE TRUE END AS col_b\r\nFROM wikipedia\r\nGROUP BY 1, 2\r\n```\r\n\r\nthe following query fails. (Duplicate field name: v0)\r\nThe only difference is the wrapping of the fields inside the REGEXP_EXTRACT function. \r\n\r\n```\r\nSELECT \r\n\tCASE WHEN REGEXP_EXTRACT(cityName, '.a.*') IS NULL THEN FALSE ELSE TRUE END AS col_a,\r\n\tCASE WHEN REGEXP_EXTRACT(countryName, '.b.*') IS NULL THEN FALSE ELSE TRUE END AS col_b\r\nFROM wikipedia\r\nGROUP BY 1, 2\r\n\r\n```\r\n\r\nThis is just to have a perhaps best final test fixture that is working on the wikipedia dataset and is using the right CASE statement. \r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/591923866/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/591953898","html_url":"https://github.com/apache/druid/issues/9419#issuecomment-591953898","issue_url":"https://api.github.com/repos/apache/druid/issues/9419","id":591953898,"node_id":"MDEyOklzc3VlQ29tbWVudDU5MTk1Mzg5OA==","user":{"login":"sascha-coenen","id":1635350,"node_id":"MDQ6VXNlcjE2MzUzNTA=","avatar_url":"https://avatars.githubusercontent.com/u/1635350?v=4","gravatar_id":"","url":"https://api.github.com/users/sascha-coenen","html_url":"https://github.com/sascha-coenen","followers_url":"https://api.github.com/users/sascha-coenen/followers","following_url":"https://api.github.com/users/sascha-coenen/following{/other_user}","gists_url":"https://api.github.com/users/sascha-coenen/gists{/gist_id}","starred_url":"https://api.github.com/users/sascha-coenen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sascha-coenen/subscriptions","organizations_url":"https://api.github.com/users/sascha-coenen/orgs","repos_url":"https://api.github.com/users/sascha-coenen/repos","events_url":"https://api.github.com/users/sascha-coenen/events{/privacy}","received_events_url":"https://api.github.com/users/sascha-coenen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-02-27T12:49:56Z","updated_at":"2020-02-27T12:49:56Z","author_association":"NONE","body":"I forgot to add another interesting detail to this bug report, so I will update the description","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/591953898/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/592001425","html_url":"https://github.com/apache/druid/pull/9365#issuecomment-592001425","issue_url":"https://api.github.com/repos/apache/druid/issues/9365","id":592001425,"node_id":"MDEyOklzc3VlQ29tbWVudDU5MjAwMTQyNQ==","user":{"login":"a2l007","id":4603202,"node_id":"MDQ6VXNlcjQ2MDMyMDI=","avatar_url":"https://avatars.githubusercontent.com/u/4603202?v=4","gravatar_id":"","url":"https://api.github.com/users/a2l007","html_url":"https://github.com/a2l007","followers_url":"https://api.github.com/users/a2l007/followers","following_url":"https://api.github.com/users/a2l007/following{/other_user}","gists_url":"https://api.github.com/users/a2l007/gists{/gist_id}","starred_url":"https://api.github.com/users/a2l007/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/a2l007/subscriptions","organizations_url":"https://api.github.com/users/a2l007/orgs","repos_url":"https://api.github.com/users/a2l007/repos","events_url":"https://api.github.com/users/a2l007/events{/privacy}","received_events_url":"https://api.github.com/users/a2l007/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-02-27T14:29:59Z","updated_at":"2020-02-27T14:29:59Z","author_association":"CONTRIBUTOR","body":"Hi @MoushmiDas ,the fix for this is merged to master and so unfortunately it is unavailable with the 0.17.0 release. You could however build druid from source with the master branch. Instructions here: https://druid.apache.org/docs/latest/development/build.html","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/592001425/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/592011644","html_url":"https://github.com/apache/druid/pull/9428#issuecomment-592011644","issue_url":"https://api.github.com/repos/apache/druid/issues/9428","id":592011644,"node_id":"MDEyOklzc3VlQ29tbWVudDU5MjAxMTY0NA==","user":{"login":"abossert","id":25932500,"node_id":"MDQ6VXNlcjI1OTMyNTAw","avatar_url":"https://avatars.githubusercontent.com/u/25932500?v=4","gravatar_id":"","url":"https://api.github.com/users/abossert","html_url":"https://github.com/abossert","followers_url":"https://api.github.com/users/abossert/followers","following_url":"https://api.github.com/users/abossert/following{/other_user}","gists_url":"https://api.github.com/users/abossert/gists{/gist_id}","starred_url":"https://api.github.com/users/abossert/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/abossert/subscriptions","organizations_url":"https://api.github.com/users/abossert/orgs","repos_url":"https://api.github.com/users/abossert/repos","events_url":"https://api.github.com/users/abossert/events{/privacy}","received_events_url":"https://api.github.com/users/abossert/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-02-27T15:05:42Z","updated_at":"2020-02-27T15:05:42Z","author_association":"CONTRIBUTOR","body":"I saw that the Travis CI job failed.  When I checked the reason for the error, it seems like it might be some sort of problem not associated with my code, perhaps?  The error relates to a failure to bind to a port for Kafka.  Here is the relevant section of the Travis log.  Perhaps you can re-run the Travis job?\r\n\r\n```\r\n[ERROR] Tests run: 2, Failures: 0, Errors: 2, Skipped: 0, Time elapsed: 3.175 s <<< FAILURE! - in org.apache.druid.indexing.kafka.KafkaIndexTaskTest\r\n[ERROR] org.apache.druid.indexing.kafka.KafkaIndexTaskTest  Time elapsed: 3.154 s  <<< ERROR!\r\norg.apache.kafka.common.KafkaException: Socket server failed to bind to 0.0.0.0:10010: Address already in use.\r\n\tat kafka.network.Acceptor.openServerSocket(SocketServer.scala:573)\r\n\tat kafka.network.Acceptor.<init>(SocketServer.scala:451)\r\n\tat kafka.network.SocketServer.createAcceptor(SocketServer.scala:245)\r\n\tat kafka.network.SocketServer.$anonfun$createDataPlaneAcceptorsAndProcessors$1(SocketServer.scala:215)\r\n\tat kafka.network.SocketServer.$anonfun$createDataPlaneAcceptorsAndProcessors$1$adapted(SocketServer.scala:214)\r\n\tat scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:58)\r\n\tat scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:51)\r\n\tat scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:47)\r\n\tat kafka.network.SocketServer.createDataPlaneAcceptorsAndProcessors(SocketServer.scala:214)\r\n\tat kafka.network.SocketServer.startup(SocketServer.scala:114)\r\n\tat kafka.server.KafkaServer.startup(KafkaServer.scala:253)\r\n\tat org.apache.druid.indexing.kafka.test.TestBroker.start(TestBroker.java:93)\r\n\tat org.apache.druid.indexing.kafka.KafkaIndexTaskTest.setupClass(KafkaIndexTaskTest.java:271)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\r\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\r\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\r\n\tat org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:24)\r\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n\tat org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:365)\r\n\tat org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:273)\r\n\tat org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)\r\n\tat org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:159)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)\r\nCaused by: java.net.BindException: Address already in use\r\n\tat sun.nio.ch.Net.bind0(Native Method)\r\n\tat sun.nio.ch.Net.bind(Net.java:433)\r\n\tat sun.nio.ch.Net.bind(Net.java:425)\r\n\tat sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:220)\r\n\tat sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:85)\r\n\tat sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:78)\r\n\tat kafka.network.Acceptor.openServerSocket(SocketServer.scala:569)\r\n\t... 30 more\r\n[ERROR] org.apache.druid.indexing.kafka.KafkaIndexTaskTest  Time elapsed: 3.168 s  <<< ERROR!\r\njava.lang.NullPointerException\r\n\tat org.apache.druid.indexing.kafka.KafkaIndexTaskTest.tearDownClass(KafkaIndexTaskTest.java:313)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\r\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\r\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\r\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:33)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n\tat org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:365)\r\n\tat org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:273)\r\n\tat org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)\r\n\tat org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:159)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)\r\n[INFO] \r\n[INFO] Results:\r\n[INFO] \r\n[ERROR] Errors: \r\n[ERROR] org.apache.druid.indexing.kafka.KafkaIndexTaskTest.org.apache.druid.indexing.kafka.KafkaIndexTaskTest\r\n[ERROR]   Run 1: KafkaIndexTaskTest.setupClass:271 » Kafka Socket server failed to bind to 0.0....\r\n[ERROR]   Run 2: KafkaIndexTaskTest.tearDownClass:313 NullPointer\r\n[INFO] \r\n[INFO] \r\n[ERROR] Tests run: 189, Failures: 0, Errors: 1, Skipped: 0\r\n[INFO] \r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] Reactor Summary for druid-indexing-hadoop 0.18.0-SNAPSHOT:\r\n[INFO] \r\n[INFO] druid-indexing-hadoop .............................. SUCCESS [01:00 min]\r\n[INFO] druid-indexing-service ............................. SUCCESS [07:56 min]\r\n[INFO] druid-kafka-indexing-service ....................... FAILURE [01:50 min]\r\n[INFO] druid-kinesis-indexing-service ..................... SKIPPED\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] BUILD FAILURE\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] Total time:  10:48 min\r\n[INFO] Finished at: 2020-02-27T04:24:35Z\r\n```","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/592011644/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/592064006","html_url":"https://github.com/apache/druid/issues/9389#issuecomment-592064006","issue_url":"https://api.github.com/repos/apache/druid/issues/9389","id":592064006,"node_id":"MDEyOklzc3VlQ29tbWVudDU5MjA2NDAwNg==","user":{"login":"aguereca","id":686587,"node_id":"MDQ6VXNlcjY4NjU4Nw==","avatar_url":"https://avatars.githubusercontent.com/u/686587?v=4","gravatar_id":"","url":"https://api.github.com/users/aguereca","html_url":"https://github.com/aguereca","followers_url":"https://api.github.com/users/aguereca/followers","following_url":"https://api.github.com/users/aguereca/following{/other_user}","gists_url":"https://api.github.com/users/aguereca/gists{/gist_id}","starred_url":"https://api.github.com/users/aguereca/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/aguereca/subscriptions","organizations_url":"https://api.github.com/users/aguereca/orgs","repos_url":"https://api.github.com/users/aguereca/repos","events_url":"https://api.github.com/users/aguereca/events{/privacy}","received_events_url":"https://api.github.com/users/aguereca/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-02-27T16:54:21Z","updated_at":"2020-02-27T16:54:21Z","author_association":"NONE","body":"FYI - I encountered the exact same issue following the tutorial, not what you want to see while evaluating a new technology, will keep an 👁 on this.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/592064006/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/592074518","html_url":"https://github.com/apache/druid/issues/9412#issuecomment-592074518","issue_url":"https://api.github.com/repos/apache/druid/issues/9412","id":592074518,"node_id":"MDEyOklzc3VlQ29tbWVudDU5MjA3NDUxOA==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-02-27T17:15:11Z","updated_at":"2020-02-27T17:15:11Z","author_association":"CONTRIBUTOR","body":"> This is just to have a perhaps best final test fixture that is working on the wikipedia dataset and is using the right CASE statement.\r\n\r\nThanks, that's helpful!\r\n\r\nIt looks like @clintropolis is already working on a fix in #9429. I'm going to go take a look at that patch.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/592074518/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/592142693","html_url":"https://github.com/apache/druid/issues/9389#issuecomment-592142693","issue_url":"https://api.github.com/repos/apache/druid/issues/9389","id":592142693,"node_id":"MDEyOklzc3VlQ29tbWVudDU5MjE0MjY5Mw==","user":{"login":"a2l007","id":4603202,"node_id":"MDQ6VXNlcjQ2MDMyMDI=","avatar_url":"https://avatars.githubusercontent.com/u/4603202?v=4","gravatar_id":"","url":"https://api.github.com/users/a2l007","html_url":"https://github.com/a2l007","followers_url":"https://api.github.com/users/a2l007/followers","following_url":"https://api.github.com/users/a2l007/following{/other_user}","gists_url":"https://api.github.com/users/a2l007/gists{/gist_id}","starred_url":"https://api.github.com/users/a2l007/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/a2l007/subscriptions","organizations_url":"https://api.github.com/users/a2l007/orgs","repos_url":"https://api.github.com/users/a2l007/repos","events_url":"https://api.github.com/users/a2l007/events{/privacy}","received_events_url":"https://api.github.com/users/a2l007/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-02-27T19:43:10Z","updated_at":"2020-02-27T19:43:10Z","author_association":"CONTRIBUTOR","body":"@gunjdesai That exception is generally thrown when the indexing spec is incorrect. Could you double check your ingestion json with the format for `ingestSegment` firehose? Please post your ingestion spec here in case that didn't fix the issue.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/592142693/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/592151761","html_url":"https://github.com/apache/druid/pull/9334#issuecomment-592151761","issue_url":"https://api.github.com/repos/apache/druid/issues/9334","id":592151761,"node_id":"MDEyOklzc3VlQ29tbWVudDU5MjE1MTc2MQ==","user":{"login":"vogievetsky","id":177816,"node_id":"MDQ6VXNlcjE3NzgxNg==","avatar_url":"https://avatars.githubusercontent.com/u/177816?v=4","gravatar_id":"","url":"https://api.github.com/users/vogievetsky","html_url":"https://github.com/vogievetsky","followers_url":"https://api.github.com/users/vogievetsky/followers","following_url":"https://api.github.com/users/vogievetsky/following{/other_user}","gists_url":"https://api.github.com/users/vogievetsky/gists{/gist_id}","starred_url":"https://api.github.com/users/vogievetsky/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vogievetsky/subscriptions","organizations_url":"https://api.github.com/users/vogievetsky/orgs","repos_url":"https://api.github.com/users/vogievetsky/repos","events_url":"https://api.github.com/users/vogievetsky/events{/privacy}","received_events_url":"https://api.github.com/users/vogievetsky/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-02-27T20:04:20Z","updated_at":"2020-02-27T20:04:20Z","author_association":"CONTRIBUTOR","body":"Thanks for the 👍 Chi!","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/592151761/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/592180842","html_url":"https://github.com/apache/druid/issues/9419#issuecomment-592180842","issue_url":"https://api.github.com/repos/apache/druid/issues/9419","id":592180842,"node_id":"MDEyOklzc3VlQ29tbWVudDU5MjE4MDg0Mg==","user":{"login":"jon-wei","id":8729063,"node_id":"MDQ6VXNlcjg3MjkwNjM=","avatar_url":"https://avatars.githubusercontent.com/u/8729063?v=4","gravatar_id":"","url":"https://api.github.com/users/jon-wei","html_url":"https://github.com/jon-wei","followers_url":"https://api.github.com/users/jon-wei/followers","following_url":"https://api.github.com/users/jon-wei/following{/other_user}","gists_url":"https://api.github.com/users/jon-wei/gists{/gist_id}","starred_url":"https://api.github.com/users/jon-wei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jon-wei/subscriptions","organizations_url":"https://api.github.com/users/jon-wei/orgs","repos_url":"https://api.github.com/users/jon-wei/repos","events_url":"https://api.github.com/users/jon-wei/events{/privacy}","received_events_url":"https://api.github.com/users/jon-wei/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-02-27T21:16:54Z","updated_at":"2020-02-27T21:16:54Z","author_association":"CONTRIBUTOR","body":"@vikramsinghchandel You can set the same context options in the JDBC connection properties: https://druid.apache.org/docs/latest/querying/sql.html#connection-context\r\n\r\n@sascha-coenen Thanks for the report, the complex aggs like sketches are intended to be \"finalized\" (give the estimate) unless the user explictly sets finalize=false in the context, so the bug would be that it's returning the base64 encodings with the additional projections","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/592180842/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/592259856","html_url":"https://github.com/apache/druid/pull/9422#issuecomment-592259856","issue_url":"https://api.github.com/repos/apache/druid/issues/9422","id":592259856,"node_id":"MDEyOklzc3VlQ29tbWVudDU5MjI1OTg1Ng==","user":{"login":"samarthjain","id":1642180,"node_id":"MDQ6VXNlcjE2NDIxODA=","avatar_url":"https://avatars.githubusercontent.com/u/1642180?v=4","gravatar_id":"","url":"https://api.github.com/users/samarthjain","html_url":"https://github.com/samarthjain","followers_url":"https://api.github.com/users/samarthjain/followers","following_url":"https://api.github.com/users/samarthjain/following{/other_user}","gists_url":"https://api.github.com/users/samarthjain/gists{/gist_id}","starred_url":"https://api.github.com/users/samarthjain/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/samarthjain/subscriptions","organizations_url":"https://api.github.com/users/samarthjain/orgs","repos_url":"https://api.github.com/users/samarthjain/repos","events_url":"https://api.github.com/users/samarthjain/events{/privacy}","received_events_url":"https://api.github.com/users/samarthjain/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-02-28T01:13:41Z","updated_at":"2020-02-28T01:13:41Z","author_association":"CONTRIBUTOR","body":"Pushed a commit to add test that breaks without this patch.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/592259856/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/592298576","html_url":"https://github.com/apache/druid/issues/9368#issuecomment-592298576","issue_url":"https://api.github.com/repos/apache/druid/issues/9368","id":592298576,"node_id":"MDEyOklzc3VlQ29tbWVudDU5MjI5ODU3Ng==","user":{"login":"MaxOrelus","id":891954,"node_id":"MDQ6VXNlcjg5MTk1NA==","avatar_url":"https://avatars.githubusercontent.com/u/891954?v=4","gravatar_id":"","url":"https://api.github.com/users/MaxOrelus","html_url":"https://github.com/MaxOrelus","followers_url":"https://api.github.com/users/MaxOrelus/followers","following_url":"https://api.github.com/users/MaxOrelus/following{/other_user}","gists_url":"https://api.github.com/users/MaxOrelus/gists{/gist_id}","starred_url":"https://api.github.com/users/MaxOrelus/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/MaxOrelus/subscriptions","organizations_url":"https://api.github.com/users/MaxOrelus/orgs","repos_url":"https://api.github.com/users/MaxOrelus/repos","events_url":"https://api.github.com/users/MaxOrelus/events{/privacy}","received_events_url":"https://api.github.com/users/MaxOrelus/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-02-28T03:45:13Z","updated_at":"2020-02-28T03:45:13Z","author_association":"NONE","body":"Thanks, but I wasn't using SASL_SSL, just the basic SSL. I was able to get it working with the following:\r\n\r\n```sh\r\n{\r\n  \"bootstrap.servers\": \"<SERVER>:9093\",\r\n  \"security.protocol\": \"SSL\",\r\n  \"ssl.truststore.location\": \"/tmp/ssl/server.truststore.jks\",\r\n  \"ssl.truststore.password\": \"<PASSWORD>\",\r\n  \"ssl.truststore.type\": \"JKS\",\r\n  \"ssl.key.password\": \"<PASSWORD>\",\r\n  \"ssl.keystore.location\": \"/tmp/ssl/server.keystore.jks\",\r\n  \"ssl.keystore.password\": \"<PASSWORD>,\r\n  \"ssl.keystore.type\": \"JKS\",\r\n  \"ssl.endpoint.identification.algorithm\": \"\"\r\n}\r\n```","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/592298576/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":1,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/592413853","html_url":"https://github.com/apache/druid/issues/9419#issuecomment-592413853","issue_url":"https://api.github.com/repos/apache/druid/issues/9419","id":592413853,"node_id":"MDEyOklzc3VlQ29tbWVudDU5MjQxMzg1Mw==","user":{"login":"sascha-coenen","id":1635350,"node_id":"MDQ6VXNlcjE2MzUzNTA=","avatar_url":"https://avatars.githubusercontent.com/u/1635350?v=4","gravatar_id":"","url":"https://api.github.com/users/sascha-coenen","html_url":"https://github.com/sascha-coenen","followers_url":"https://api.github.com/users/sascha-coenen/followers","following_url":"https://api.github.com/users/sascha-coenen/following{/other_user}","gists_url":"https://api.github.com/users/sascha-coenen/gists{/gist_id}","starred_url":"https://api.github.com/users/sascha-coenen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sascha-coenen/subscriptions","organizations_url":"https://api.github.com/users/sascha-coenen/orgs","repos_url":"https://api.github.com/users/sascha-coenen/repos","events_url":"https://api.github.com/users/sascha-coenen/events{/privacy}","received_events_url":"https://api.github.com/users/sascha-coenen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-02-28T08:51:41Z","updated_at":"2020-02-28T08:58:31Z","author_association":"NONE","body":"> @vikramsinghchandel You can set the same context options in the JDBC connection properties: https://druid.apache.org/docs/latest/querying/sql.html#connection-context\r\n\r\nhmm, Vikram already pointed out that he is aware of this. His need is to be able to express such things per query: \r\n> Now both of these systems **don't have per query level context settings** **they are set at JDBC driver level.**\r\n\r\n--\r\n\r\n> the complex aggs like sketches are intended to be \"finalized\" (give the estimate) unless the user explicitly sets finalize=false in the context, so the bug would be that it's returning the base64 encodings with the additional projections\r\n\r\nI respectfully disagree:\r\n\r\nThere are three dimensions to what makes a good user experience\r\na) sensible defaults\r\nb) consistency\r\nb) control\r\n\r\nwrt **sensible defaults**, I agree with you that the common case is to want to materialize a sketch rather than to look at its raw form and therefore finalizing a sketch would be the most sensible default. \r\n\r\nwrt **consistency** however, for all other sketches the current set of Druid SQL UDFs are designed around separating the responsibilities of creating a sketch and then evaluating it. It is also the common case to have to do this for the simple reason that - by default - there is no 1:1 relationship between aggregations and post aggregations. (i.e. should a doubleSum() be post-aggregated with a LOG10 or a SQRT ?  should a quantile sketch be post-aggregated with a union/intersect/not ?)\r\nSo all sketches have UDFs that \r\n\r\na) generate a sketch \r\ne.g. BLOOM_FILTER, TDIGEST_GENERATE_SKETCH, DS_QUANTILES_SKETCH, DS_HLL, DS_THETA\r\n\r\nb) evalutate a sketch\r\ne.g. BLOOM_FILTER_TEST, TDIGEST_QUANTILE,  DS_GET_QUANTILES, HLL_SKETCH_ESTIMATE, THETA_SKETCH_ESTIMATE \r\n\r\nNotice how there is a full correspondence such that each generative UDF also has at leat one evaluating UDF.\r\n\r\nwrt **control**, having a sensible default is okay as long as this doesn't take away control from the author in terms of being able to express his intention and having it carried out. If it is my intention to pull unfinalized sketches in order to forklift them from Druid and feed them into another system, then I need to be able to formulate this. Setting a query context is not letting me do this because this is not usually possible on a per-query case and it is also not explicit within the query that other users need to be able to read and understand. I cannot send a query to another user and be sure that it does what I want because some parts of what the query result would look like are formulated outside of the query (namely in the query context). This is a huge usability problem and I'm looking forward to writing a proposal for expressing such query hints within the SQL queries.\r\n\r\n-- \r\n\r\nWhether sensible defaults trump consistency is a difficult question to answer. \r\nLuckily, this tie has already been broken in this context because the set of evaluating UDFs all work both on sketches and on regular fields, so that they act as shortcuts: If all I want is to create a sketch and then to finalize it, then I can directly use the above set of evaluating sketch functions.\r\n\r\nPutting all of this together, it seems that one just needs to follow the same concept for the given HLL/THETA sketches, which means that their generative UDFs aught to always return the sketches and the evaluating UDFs should always returned finalized results and can act as a shortcut to short-circuit the generative UDFS.\r\n\r\nThe DS_HLL and DS_THETA functions just deviate from the common approach taken for the other sketches which also is reflected in their documentation which in my opinion correctly formulates the intention that these generative functions should yield a sketch and not a finalized result.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/592413853/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/592645426","html_url":"https://github.com/apache/druid/pull/9407#issuecomment-592645426","issue_url":"https://api.github.com/repos/apache/druid/issues/9407","id":592645426,"node_id":"MDEyOklzc3VlQ29tbWVudDU5MjY0NTQyNg==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-02-28T17:43:17Z","updated_at":"2020-02-28T17:43:17Z","author_association":"CONTRIBUTOR","body":"/subscribe","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/592645426/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/592754972","html_url":"https://github.com/apache/druid/pull/9436#issuecomment-592754972","issue_url":"https://api.github.com/repos/apache/druid/issues/9436","id":592754972,"node_id":"MDEyOklzc3VlQ29tbWVudDU5Mjc1NDk3Mg==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-02-28T22:19:14Z","updated_at":"2020-02-28T22:19:14Z","author_association":"CONTRIBUTOR","body":"Hmm, I'm not sure how you'd want to adapt this into SQL anyway. Return a string that represents the histogram, maybe?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/592754972/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/592762009","html_url":"https://github.com/apache/druid/pull/9436#issuecomment-592762009","issue_url":"https://api.github.com/repos/apache/druid/issues/9436","id":592762009,"node_id":"MDEyOklzc3VlQ29tbWVudDU5Mjc2MjAwOQ==","user":{"login":"AlexanderSaydakov","id":13126686,"node_id":"MDQ6VXNlcjEzMTI2Njg2","avatar_url":"https://avatars.githubusercontent.com/u/13126686?v=4","gravatar_id":"","url":"https://api.github.com/users/AlexanderSaydakov","html_url":"https://github.com/AlexanderSaydakov","followers_url":"https://api.github.com/users/AlexanderSaydakov/followers","following_url":"https://api.github.com/users/AlexanderSaydakov/following{/other_user}","gists_url":"https://api.github.com/users/AlexanderSaydakov/gists{/gist_id}","starred_url":"https://api.github.com/users/AlexanderSaydakov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/AlexanderSaydakov/subscriptions","organizations_url":"https://api.github.com/users/AlexanderSaydakov/orgs","repos_url":"https://api.github.com/users/AlexanderSaydakov/repos","events_url":"https://api.github.com/users/AlexanderSaydakov/events{/privacy}","received_events_url":"https://api.github.com/users/AlexanderSaydakov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-02-28T22:39:23Z","updated_at":"2020-02-28T22:39:23Z","author_association":"CONTRIBUTOR","body":"There is some way currently, but using the split points. The result must be an array of values that represent bins.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/592762009/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/592812054","html_url":"https://github.com/apache/druid/pull/8813#issuecomment-592812054","issue_url":"https://api.github.com/repos/apache/druid/issues/8813","id":592812054,"node_id":"MDEyOklzc3VlQ29tbWVudDU5MjgxMjA1NA==","user":{"login":"stale[bot]","id":26384082,"node_id":"MDM6Qm90MjYzODQwODI=","avatar_url":"https://avatars.githubusercontent.com/in/1724?v=4","gravatar_id":"","url":"https://api.github.com/users/stale%5Bbot%5D","html_url":"https://github.com/apps/stale","followers_url":"https://api.github.com/users/stale%5Bbot%5D/followers","following_url":"https://api.github.com/users/stale%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/stale%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/stale%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stale%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/stale%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/stale%5Bbot%5D/repos","events_url":"https://api.github.com/users/stale%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/stale%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2020-02-29T01:59:35Z","updated_at":"2020-02-29T01:59:35Z","author_association":"NONE","body":"This pull request/issue is no longer marked as stale.\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/592812054/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/592850318","html_url":"https://github.com/apache/druid/pull/9437#issuecomment-592850318","issue_url":"https://api.github.com/repos/apache/druid/issues/9437","id":592850318,"node_id":"MDEyOklzc3VlQ29tbWVudDU5Mjg1MDMxOA==","user":{"login":"vogievetsky","id":177816,"node_id":"MDQ6VXNlcjE3NzgxNg==","avatar_url":"https://avatars.githubusercontent.com/u/177816?v=4","gravatar_id":"","url":"https://api.github.com/users/vogievetsky","html_url":"https://github.com/vogievetsky","followers_url":"https://api.github.com/users/vogievetsky/followers","following_url":"https://api.github.com/users/vogievetsky/following{/other_user}","gists_url":"https://api.github.com/users/vogievetsky/gists{/gist_id}","starred_url":"https://api.github.com/users/vogievetsky/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vogievetsky/subscriptions","organizations_url":"https://api.github.com/users/vogievetsky/orgs","repos_url":"https://api.github.com/users/vogievetsky/repos","events_url":"https://api.github.com/users/vogievetsky/events{/privacy}","received_events_url":"https://api.github.com/users/vogievetsky/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-02-29T03:47:23Z","updated_at":"2020-02-29T03:47:23Z","author_association":"CONTRIBUTOR","body":"> Please do not merge until support for azure has been merged\r\n\r\nCan you indicate what this is blocked on?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/592850318/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/592852655","html_url":"https://github.com/apache/druid/pull/9437#issuecomment-592852655","issue_url":"https://api.github.com/repos/apache/druid/issues/9437","id":592852655,"node_id":"MDEyOklzc3VlQ29tbWVudDU5Mjg1MjY1NQ==","user":{"login":"mcbrewster","id":37322608,"node_id":"MDQ6VXNlcjM3MzIyNjA4","avatar_url":"https://avatars.githubusercontent.com/u/37322608?v=4","gravatar_id":"","url":"https://api.github.com/users/mcbrewster","html_url":"https://github.com/mcbrewster","followers_url":"https://api.github.com/users/mcbrewster/followers","following_url":"https://api.github.com/users/mcbrewster/following{/other_user}","gists_url":"https://api.github.com/users/mcbrewster/gists{/gist_id}","starred_url":"https://api.github.com/users/mcbrewster/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mcbrewster/subscriptions","organizations_url":"https://api.github.com/users/mcbrewster/orgs","repos_url":"https://api.github.com/users/mcbrewster/repos","events_url":"https://api.github.com/users/mcbrewster/events{/privacy}","received_events_url":"https://api.github.com/users/mcbrewster/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-02-29T03:54:01Z","updated_at":"2020-02-29T03:54:01Z","author_association":"CONTRIBUTOR","body":"I just wasn’t sure if zachs stuff has been merged\n\nGet Outlook for iOS<https://aka.ms/o0ukef>\n________________________________\nFrom: Vadim Ogievetsky <notifications@github.com>\nSent: Friday, February 28, 2020 7:47:24 PM\nTo: apache/druid <druid@noreply.github.com>\nCc: Maggie Brewster <mcbrewster@edu.uwaterloo.ca>; Author <author@noreply.github.com>\nSubject: Re: [apache/druid] Add Azure ingestion flow to web console (#9437)\n\n\nPlease do not merge until support for azure has been merged\n\nCan you indicate what this is blocked on?\n\n—\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub<https://github.com/apache/druid/pull/9437?email_source=notifications&email_token=AI4X64HHWD4XZGVFMMEC4FTRFHLEZA5CNFSM4K55KZIKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOENLC3DQ#issuecomment-592850318>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/AI4X64DNID2UOBXZEVIUARDRFHLEZANCNFSM4K55KZIA>.\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/592852655/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/592853427","html_url":"https://github.com/apache/druid/pull/9437#issuecomment-592853427","issue_url":"https://api.github.com/repos/apache/druid/issues/9437","id":592853427,"node_id":"MDEyOklzc3VlQ29tbWVudDU5Mjg1MzQyNw==","user":{"login":"vogievetsky","id":177816,"node_id":"MDQ6VXNlcjE3NzgxNg==","avatar_url":"https://avatars.githubusercontent.com/u/177816?v=4","gravatar_id":"","url":"https://api.github.com/users/vogievetsky","html_url":"https://github.com/vogievetsky","followers_url":"https://api.github.com/users/vogievetsky/followers","following_url":"https://api.github.com/users/vogievetsky/following{/other_user}","gists_url":"https://api.github.com/users/vogievetsky/gists{/gist_id}","starred_url":"https://api.github.com/users/vogievetsky/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vogievetsky/subscriptions","organizations_url":"https://api.github.com/users/vogievetsky/orgs","repos_url":"https://api.github.com/users/vogievetsky/repos","events_url":"https://api.github.com/users/vogievetsky/events{/privacy}","received_events_url":"https://api.github.com/users/vogievetsky/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-02-29T03:56:21Z","updated_at":"2020-02-29T03:56:21Z","author_association":"CONTRIBUTOR","body":"I think you are referring to https://github.com/apache/druid/pull/9394 and it is merged!","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/592853427/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/592914304","html_url":"https://github.com/apache/druid/issues/5940#issuecomment-592914304","issue_url":"https://api.github.com/repos/apache/druid/issues/5940","id":592914304,"node_id":"MDEyOklzc3VlQ29tbWVudDU5MjkxNDMwNA==","user":{"login":"stale[bot]","id":26384082,"node_id":"MDM6Qm90MjYzODQwODI=","avatar_url":"https://avatars.githubusercontent.com/in/1724?v=4","gravatar_id":"","url":"https://api.github.com/users/stale%5Bbot%5D","html_url":"https://github.com/apps/stale","followers_url":"https://api.github.com/users/stale%5Bbot%5D/followers","following_url":"https://api.github.com/users/stale%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/stale%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/stale%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stale%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/stale%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/stale%5Bbot%5D/repos","events_url":"https://api.github.com/users/stale%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/stale%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2020-02-29T07:28:18Z","updated_at":"2020-02-29T07:28:18Z","author_association":"NONE","body":"This issue has been marked as stale due to 280 days of inactivity. It will be closed in 4 weeks if no further activity occurs. If this issue is still relevant, please simply write any comment. Even if closed, you can still revive the issue at any time or discuss it on the dev@druid.apache.org list. Thank you for your contributions.\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/592914304/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/592914306","html_url":"https://github.com/apache/druid/issues/7127#issuecomment-592914306","issue_url":"https://api.github.com/repos/apache/druid/issues/7127","id":592914306,"node_id":"MDEyOklzc3VlQ29tbWVudDU5MjkxNDMwNg==","user":{"login":"stale[bot]","id":26384082,"node_id":"MDM6Qm90MjYzODQwODI=","avatar_url":"https://avatars.githubusercontent.com/in/1724?v=4","gravatar_id":"","url":"https://api.github.com/users/stale%5Bbot%5D","html_url":"https://github.com/apps/stale","followers_url":"https://api.github.com/users/stale%5Bbot%5D/followers","following_url":"https://api.github.com/users/stale%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/stale%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/stale%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stale%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/stale%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/stale%5Bbot%5D/repos","events_url":"https://api.github.com/users/stale%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/stale%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2020-02-29T07:28:19Z","updated_at":"2020-02-29T07:28:19Z","author_association":"NONE","body":"This issue has been marked as stale due to 280 days of inactivity. It will be closed in 4 weeks if no further activity occurs. If this issue is still relevant, please simply write any comment. Even if closed, you can still revive the issue at any time or discuss it on the dev@druid.apache.org list. Thank you for your contributions.\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/592914306/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/592953648","html_url":"https://github.com/apache/druid/issues/3373#issuecomment-592953648","issue_url":"https://api.github.com/repos/apache/druid/issues/3373","id":592953648,"node_id":"MDEyOklzc3VlQ29tbWVudDU5Mjk1MzY0OA==","user":{"login":"stale[bot]","id":26384082,"node_id":"MDM6Qm90MjYzODQwODI=","avatar_url":"https://avatars.githubusercontent.com/in/1724?v=4","gravatar_id":"","url":"https://api.github.com/users/stale%5Bbot%5D","html_url":"https://github.com/apps/stale","followers_url":"https://api.github.com/users/stale%5Bbot%5D/followers","following_url":"https://api.github.com/users/stale%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/stale%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/stale%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stale%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/stale%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/stale%5Bbot%5D/repos","events_url":"https://api.github.com/users/stale%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/stale%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2020-02-29T14:57:41Z","updated_at":"2020-02-29T14:57:41Z","author_association":"NONE","body":"This issue has been marked as stale due to 280 days of inactivity. It will be closed in 4 weeks if no further activity occurs. If this issue is still relevant, please simply write any comment. Even if closed, you can still revive the issue at any time or discuss it on the dev@druid.apache.org list. Thank you for your contributions.\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/592953648/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/593023988","html_url":"https://github.com/apache/druid/pull/8813#issuecomment-593023988","issue_url":"https://api.github.com/repos/apache/druid/issues/8813","id":593023988,"node_id":"MDEyOklzc3VlQ29tbWVudDU5MzAyMzk4OA==","user":{"login":"clintropolis","id":1577461,"node_id":"MDQ6VXNlcjE1Nzc0NjE=","avatar_url":"https://avatars.githubusercontent.com/u/1577461?v=4","gravatar_id":"","url":"https://api.github.com/users/clintropolis","html_url":"https://github.com/clintropolis","followers_url":"https://api.github.com/users/clintropolis/followers","following_url":"https://api.github.com/users/clintropolis/following{/other_user}","gists_url":"https://api.github.com/users/clintropolis/gists{/gist_id}","starred_url":"https://api.github.com/users/clintropolis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintropolis/subscriptions","organizations_url":"https://api.github.com/users/clintropolis/orgs","repos_url":"https://api.github.com/users/clintropolis/repos","events_url":"https://api.github.com/users/clintropolis/events{/privacy}","received_events_url":"https://api.github.com/users/clintropolis/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-01T00:45:05Z","updated_at":"2020-03-01T00:45:05Z","author_association":"MEMBER","body":"@tonyschwartz apologies for missing this PR before the stale bot got to it. I had also previously encountered this issue, and re-opened this PR yesterday to confirm if the problem still exists in latest master and ask if you would be interested in fixing up the conflicts, however I believe the refactor in #7306 has also fixed what was causing the issue. Segments loaded correctly for me using Druid compiled with java 8 running on java 11, so I am going to close it again.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/593023988/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/593029911","html_url":"https://github.com/apache/druid/issues/9442#issuecomment-593029911","issue_url":"https://api.github.com/repos/apache/druid/issues/9442","id":593029911,"node_id":"MDEyOklzc3VlQ29tbWVudDU5MzAyOTkxMQ==","user":{"login":"ccaominh","id":9208416,"node_id":"MDQ6VXNlcjkyMDg0MTY=","avatar_url":"https://avatars.githubusercontent.com/u/9208416?v=4","gravatar_id":"","url":"https://api.github.com/users/ccaominh","html_url":"https://github.com/ccaominh","followers_url":"https://api.github.com/users/ccaominh/followers","following_url":"https://api.github.com/users/ccaominh/following{/other_user}","gists_url":"https://api.github.com/users/ccaominh/gists{/gist_id}","starred_url":"https://api.github.com/users/ccaominh/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ccaominh/subscriptions","organizations_url":"https://api.github.com/users/ccaominh/orgs","repos_url":"https://api.github.com/users/ccaominh/repos","events_url":"https://api.github.com/users/ccaominh/events{/privacy}","received_events_url":"https://api.github.com/users/ccaominh/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-01T01:59:58Z","updated_at":"2020-03-01T01:59:58Z","author_association":"CONTRIBUTOR","body":"@calvinhkf Is there a way we can run your tool as part of our CI (to prevent future regressions)?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/593029911/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/593063553","html_url":"https://github.com/apache/druid/issues/9442#issuecomment-593063553","issue_url":"https://api.github.com/repos/apache/druid/issues/9442","id":593063553,"node_id":"MDEyOklzc3VlQ29tbWVudDU5MzA2MzU1Mw==","user":{"login":"kaifeng-h","id":8131899,"node_id":"MDQ6VXNlcjgxMzE4OTk=","avatar_url":"https://avatars.githubusercontent.com/u/8131899?v=4","gravatar_id":"","url":"https://api.github.com/users/kaifeng-h","html_url":"https://github.com/kaifeng-h","followers_url":"https://api.github.com/users/kaifeng-h/followers","following_url":"https://api.github.com/users/kaifeng-h/following{/other_user}","gists_url":"https://api.github.com/users/kaifeng-h/gists{/gist_id}","starred_url":"https://api.github.com/users/kaifeng-h/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kaifeng-h/subscriptions","organizations_url":"https://api.github.com/users/kaifeng-h/orgs","repos_url":"https://api.github.com/users/kaifeng-h/repos","events_url":"https://api.github.com/users/kaifeng-h/events{/privacy}","received_events_url":"https://api.github.com/users/kaifeng-h/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-01T06:53:50Z","updated_at":"2020-03-01T06:53:50Z","author_association":"CONTRIBUTOR","body":"@ccaominh Thanks for your interests in our tool! This is exactly what we are doing, i.e., to make our research tool either a Maven or Travis plugin to benefit the community. We will let you know when our tool is ready. \r\n\r\nBTW, can you help to confirm the detected inconsistencies? Will you fix them? Or you won't potentially because they are intentionally kept due to heavy API incompatibilities? Any feedbacks will be useful for us to improve the tool.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/593063553/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/593063888","html_url":"https://github.com/apache/druid/issues/6134#issuecomment-593063888","issue_url":"https://api.github.com/repos/apache/druid/issues/6134","id":593063888,"node_id":"MDEyOklzc3VlQ29tbWVudDU5MzA2Mzg4OA==","user":{"login":"stale[bot]","id":26384082,"node_id":"MDM6Qm90MjYzODQwODI=","avatar_url":"https://avatars.githubusercontent.com/in/1724?v=4","gravatar_id":"","url":"https://api.github.com/users/stale%5Bbot%5D","html_url":"https://github.com/apps/stale","followers_url":"https://api.github.com/users/stale%5Bbot%5D/followers","following_url":"https://api.github.com/users/stale%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/stale%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/stale%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stale%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/stale%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/stale%5Bbot%5D/repos","events_url":"https://api.github.com/users/stale%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/stale%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2020-03-01T06:57:42Z","updated_at":"2020-03-01T06:57:42Z","author_association":"NONE","body":"This issue has been closed due to lack of activity. If you think that is incorrect, or the issue requires additional review, you can revive the issue at any time.\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/593063888/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/593066477","html_url":"https://github.com/apache/druid/issues/9285#issuecomment-593066477","issue_url":"https://api.github.com/repos/apache/druid/issues/9285","id":593066477,"node_id":"MDEyOklzc3VlQ29tbWVudDU5MzA2NjQ3Nw==","user":{"login":"leventov","id":609240,"node_id":"MDQ6VXNlcjYwOTI0MA==","avatar_url":"https://avatars.githubusercontent.com/u/609240?v=4","gravatar_id":"","url":"https://api.github.com/users/leventov","html_url":"https://github.com/leventov","followers_url":"https://api.github.com/users/leventov/followers","following_url":"https://api.github.com/users/leventov/following{/other_user}","gists_url":"https://api.github.com/users/leventov/gists{/gist_id}","starred_url":"https://api.github.com/users/leventov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leventov/subscriptions","organizations_url":"https://api.github.com/users/leventov/orgs","repos_url":"https://api.github.com/users/leventov/repos","events_url":"https://api.github.com/users/leventov/events{/privacy}","received_events_url":"https://api.github.com/users/leventov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-01T07:34:54Z","updated_at":"2020-03-01T07:34:54Z","author_association":"MEMBER","body":"Other methods:\r\n - `ExecutorService.awaitTermination`, e. g. in [`IntermediaryDataManager`](https://github.com/apache/druid/blob/master/indexing-service/src/main/java/org/apache/druid/indexing/worker/IntermediaryDataManager.java#L167) should probably at least log something if it fails to terminate in the specified time, FYI @jihoonson. The Structural search pattern should be marked as \"within type hierarchy\".\r\n - `AsynchronousChannelGroup.awaitTermination`\r\n - `ForkJoinPool.awaitQuiescence`\r\n - `Semaphore.tryAcquire`\r\n - `Condition.await`, \"within type hierarchy\"\r\n - `Lock.tryLock`, \"within type hierarchy\"\r\n - `Process.waitFor`\r\n - `Monitor.enter` (Guava)\r\n - `RateLimiter.tryAcquire` (Guava)\r\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/593066477/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/593069172","html_url":"https://github.com/apache/druid/issues/9389#issuecomment-593069172","issue_url":"https://api.github.com/repos/apache/druid/issues/9389","id":593069172,"node_id":"MDEyOklzc3VlQ29tbWVudDU5MzA2OTE3Mg==","user":{"login":"9553973","id":22163356,"node_id":"MDQ6VXNlcjIyMTYzMzU2","avatar_url":"https://avatars.githubusercontent.com/u/22163356?v=4","gravatar_id":"","url":"https://api.github.com/users/9553973","html_url":"https://github.com/9553973","followers_url":"https://api.github.com/users/9553973/followers","following_url":"https://api.github.com/users/9553973/following{/other_user}","gists_url":"https://api.github.com/users/9553973/gists{/gist_id}","starred_url":"https://api.github.com/users/9553973/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/9553973/subscriptions","organizations_url":"https://api.github.com/users/9553973/orgs","repos_url":"https://api.github.com/users/9553973/repos","events_url":"https://api.github.com/users/9553973/events{/privacy}","received_events_url":"https://api.github.com/users/9553973/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-01T08:13:41Z","updated_at":"2020-03-01T08:13:41Z","author_association":"NONE","body":"FYI - I encountered the exact same issue following the tutorial, when submit task which \r\nbin/post-index-task --file quickstart/tutorial/updates-append-index.json --url http://localhost:8081.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/593069172/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/593130415","html_url":"https://github.com/apache/druid/issues/9443#issuecomment-593130415","issue_url":"https://api.github.com/repos/apache/druid/issues/9443","id":593130415,"node_id":"MDEyOklzc3VlQ29tbWVudDU5MzEzMDQxNQ==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-01T18:45:29Z","updated_at":"2020-03-02T00:24:56Z","author_association":"CONTRIBUTOR","body":"Hi, did you include the `druid-hdfs-storage` extension in your load list? How to load an extension is explained in the document you linked.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/593130415/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/593339867","html_url":"https://github.com/apache/druid/pull/9432#issuecomment-593339867","issue_url":"https://api.github.com/repos/apache/druid/issues/9432","id":593339867,"node_id":"MDEyOklzc3VlQ29tbWVudDU5MzMzOTg2Nw==","user":{"login":"vogievetsky","id":177816,"node_id":"MDQ6VXNlcjE3NzgxNg==","avatar_url":"https://avatars.githubusercontent.com/u/177816?v=4","gravatar_id":"","url":"https://api.github.com/users/vogievetsky","html_url":"https://github.com/vogievetsky","followers_url":"https://api.github.com/users/vogievetsky/followers","following_url":"https://api.github.com/users/vogievetsky/following{/other_user}","gists_url":"https://api.github.com/users/vogievetsky/gists{/gist_id}","starred_url":"https://api.github.com/users/vogievetsky/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vogievetsky/subscriptions","organizations_url":"https://api.github.com/users/vogievetsky/orgs","repos_url":"https://api.github.com/users/vogievetsky/repos","events_url":"https://api.github.com/users/vogievetsky/events{/privacy}","received_events_url":"https://api.github.com/users/vogievetsky/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-02T10:45:31Z","updated_at":"2020-03-02T10:45:31Z","author_association":"CONTRIBUTOR","body":"@suneet-s I agree, that scenario is pretty scary. What do you suggest we do? A warning message in the `(?)` bubble? Maybe something in the docs also?\r\n\r\n\"Warning: you secret key might be surfaced in logs if provided inline!\"\r\n\r\nI was just adding this because I believe the web console should accurately reflect the props that Druid supports. Any thoughts on this?\r\n\r\nAlso ping @gianm ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/593339867/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/593554317","html_url":"https://github.com/apache/druid/pull/9432#issuecomment-593554317","issue_url":"https://api.github.com/repos/apache/druid/issues/9432","id":593554317,"node_id":"MDEyOklzc3VlQ29tbWVudDU5MzU1NDMxNw==","user":{"login":"suneet-s","id":44787917,"node_id":"MDQ6VXNlcjQ0Nzg3OTE3","avatar_url":"https://avatars.githubusercontent.com/u/44787917?v=4","gravatar_id":"","url":"https://api.github.com/users/suneet-s","html_url":"https://github.com/suneet-s","followers_url":"https://api.github.com/users/suneet-s/followers","following_url":"https://api.github.com/users/suneet-s/following{/other_user}","gists_url":"https://api.github.com/users/suneet-s/gists{/gist_id}","starred_url":"https://api.github.com/users/suneet-s/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/suneet-s/subscriptions","organizations_url":"https://api.github.com/users/suneet-s/orgs","repos_url":"https://api.github.com/users/suneet-s/repos","events_url":"https://api.github.com/users/suneet-s/events{/privacy}","received_events_url":"https://api.github.com/users/suneet-s/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-02T18:42:37Z","updated_at":"2020-03-02T18:42:37Z","author_association":"CONTRIBUTOR","body":"> I was just adding this because I believe the web console should accurately reflect the props that Druid supports. Any thoughts on this?\r\n\r\nAgreed. I think the web console should provide safe defaults. Like with Druid it's always better to use an environment variable to provide the credentials instead of in clear text. If the console could default to environment variables and allow the user to switch to clear text (if they so choose) I think that's reasonable.\r\n\r\nA warning message for an insecure method like this is also great!","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/593554317/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/593569720","html_url":"https://github.com/apache/druid/pull/9432#issuecomment-593569720","issue_url":"https://api.github.com/repos/apache/druid/issues/9432","id":593569720,"node_id":"MDEyOklzc3VlQ29tbWVudDU5MzU2OTcyMA==","user":{"login":"maytasm","id":52679095,"node_id":"MDQ6VXNlcjUyNjc5MDk1","avatar_url":"https://avatars.githubusercontent.com/u/52679095?v=4","gravatar_id":"","url":"https://api.github.com/users/maytasm","html_url":"https://github.com/maytasm","followers_url":"https://api.github.com/users/maytasm/followers","following_url":"https://api.github.com/users/maytasm/following{/other_user}","gists_url":"https://api.github.com/users/maytasm/gists{/gist_id}","starred_url":"https://api.github.com/users/maytasm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/maytasm/subscriptions","organizations_url":"https://api.github.com/users/maytasm/orgs","repos_url":"https://api.github.com/users/maytasm/repos","events_url":"https://api.github.com/users/maytasm/events{/privacy}","received_events_url":"https://api.github.com/users/maytasm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-02T19:16:24Z","updated_at":"2020-03-02T19:16:24Z","author_association":"CONTRIBUTOR","body":"I think warning massage is a great idea. \r\nAlso, I think our serde does filter out keys for the default Password Provider (the plain text version) in some places (i.e. you wont see it in task logs)  ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/593569720/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/593579633","html_url":"https://github.com/apache/druid/pull/9432#issuecomment-593579633","issue_url":"https://api.github.com/repos/apache/druid/issues/9432","id":593579633,"node_id":"MDEyOklzc3VlQ29tbWVudDU5MzU3OTYzMw==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-02T19:38:07Z","updated_at":"2020-03-02T19:38:07Z","author_association":"CONTRIBUTOR","body":"Ah, the scary warning sounds not bad.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/593579633/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/593585652","html_url":"https://github.com/apache/druid/pull/9438#issuecomment-593585652","issue_url":"https://api.github.com/repos/apache/druid/issues/9438","id":593585652,"node_id":"MDEyOklzc3VlQ29tbWVudDU5MzU4NTY1Mg==","user":{"login":"samarthjain","id":1642180,"node_id":"MDQ6VXNlcjE2NDIxODA=","avatar_url":"https://avatars.githubusercontent.com/u/1642180?v=4","gravatar_id":"","url":"https://api.github.com/users/samarthjain","html_url":"https://github.com/samarthjain","followers_url":"https://api.github.com/users/samarthjain/followers","following_url":"https://api.github.com/users/samarthjain/following{/other_user}","gists_url":"https://api.github.com/users/samarthjain/gists{/gist_id}","starred_url":"https://api.github.com/users/samarthjain/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/samarthjain/subscriptions","organizations_url":"https://api.github.com/users/samarthjain/orgs","repos_url":"https://api.github.com/users/samarthjain/repos","events_url":"https://api.github.com/users/samarthjain/events{/privacy}","received_events_url":"https://api.github.com/users/samarthjain/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-02T19:51:07Z","updated_at":"2020-03-02T19:51:07Z","author_association":"CONTRIBUTOR","body":"@gianm - does this look good to go?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/593585652/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/593694812","html_url":"https://github.com/apache/druid/issues/9377#issuecomment-593694812","issue_url":"https://api.github.com/repos/apache/druid/issues/9377","id":593694812,"node_id":"MDEyOklzc3VlQ29tbWVudDU5MzY5NDgxMg==","user":{"login":"VenkatDatta","id":7420941,"node_id":"MDQ6VXNlcjc0MjA5NDE=","avatar_url":"https://avatars.githubusercontent.com/u/7420941?v=4","gravatar_id":"","url":"https://api.github.com/users/VenkatDatta","html_url":"https://github.com/VenkatDatta","followers_url":"https://api.github.com/users/VenkatDatta/followers","following_url":"https://api.github.com/users/VenkatDatta/following{/other_user}","gists_url":"https://api.github.com/users/VenkatDatta/gists{/gist_id}","starred_url":"https://api.github.com/users/VenkatDatta/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/VenkatDatta/subscriptions","organizations_url":"https://api.github.com/users/VenkatDatta/orgs","repos_url":"https://api.github.com/users/VenkatDatta/repos","events_url":"https://api.github.com/users/VenkatDatta/events{/privacy}","received_events_url":"https://api.github.com/users/VenkatDatta/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-03T00:08:18Z","updated_at":"2020-03-03T00:08:18Z","author_association":"NONE","body":"Hi @vogievetsky , I'm new to Druid. \r\nI was going through code and observed that Http handling is missing in SearchableVersionedDataFinder.\r\nCan I work on this task?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/593694812/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/593740627","html_url":"https://github.com/apache/druid/pull/9037#issuecomment-593740627","issue_url":"https://api.github.com/repos/apache/druid/issues/9037","id":593740627,"node_id":"MDEyOklzc3VlQ29tbWVudDU5Mzc0MDYyNw==","user":{"login":"stale[bot]","id":26384082,"node_id":"MDM6Qm90MjYzODQwODI=","avatar_url":"https://avatars.githubusercontent.com/in/1724?v=4","gravatar_id":"","url":"https://api.github.com/users/stale%5Bbot%5D","html_url":"https://github.com/apps/stale","followers_url":"https://api.github.com/users/stale%5Bbot%5D/followers","following_url":"https://api.github.com/users/stale%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/stale%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/stale%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stale%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/stale%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/stale%5Bbot%5D/repos","events_url":"https://api.github.com/users/stale%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/stale%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2020-03-03T02:54:41Z","updated_at":"2020-03-03T02:54:41Z","author_association":"NONE","body":"This pull request has been marked as stale due to 60 days of inactivity. It will be closed in 4 weeks if no further activity occurs. If you think that's incorrect or this pull request should instead be reviewed, please simply write any comment. Even if closed, you can still revive the PR at any time or discuss it on the dev@druid.apache.org list. Thank you for your contributions.\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/593740627/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/593740653","html_url":"https://github.com/apache/druid/issues/7569#issuecomment-593740653","issue_url":"https://api.github.com/repos/apache/druid/issues/7569","id":593740653,"node_id":"MDEyOklzc3VlQ29tbWVudDU5Mzc0MDY1Mw==","user":{"login":"stale[bot]","id":26384082,"node_id":"MDM6Qm90MjYzODQwODI=","avatar_url":"https://avatars.githubusercontent.com/in/1724?v=4","gravatar_id":"","url":"https://api.github.com/users/stale%5Bbot%5D","html_url":"https://github.com/apps/stale","followers_url":"https://api.github.com/users/stale%5Bbot%5D/followers","following_url":"https://api.github.com/users/stale%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/stale%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/stale%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stale%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/stale%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/stale%5Bbot%5D/repos","events_url":"https://api.github.com/users/stale%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/stale%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2020-03-03T02:54:47Z","updated_at":"2020-03-03T02:54:47Z","author_association":"NONE","body":"This issue has been closed due to lack of activity. If you think that is incorrect, or the issue requires additional review, you can revive the issue at any time.\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/593740653/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/593751828","html_url":"https://github.com/apache/druid/issues/9434#issuecomment-593751828","issue_url":"https://api.github.com/repos/apache/druid/issues/9434","id":593751828,"node_id":"MDEyOklzc3VlQ29tbWVudDU5Mzc1MTgyOA==","user":{"login":"a2l007","id":4603202,"node_id":"MDQ6VXNlcjQ2MDMyMDI=","avatar_url":"https://avatars.githubusercontent.com/u/4603202?v=4","gravatar_id":"","url":"https://api.github.com/users/a2l007","html_url":"https://github.com/a2l007","followers_url":"https://api.github.com/users/a2l007/followers","following_url":"https://api.github.com/users/a2l007/following{/other_user}","gists_url":"https://api.github.com/users/a2l007/gists{/gist_id}","starred_url":"https://api.github.com/users/a2l007/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/a2l007/subscriptions","organizations_url":"https://api.github.com/users/a2l007/orgs","repos_url":"https://api.github.com/users/a2l007/repos","events_url":"https://api.github.com/users/a2l007/events{/privacy}","received_events_url":"https://api.github.com/users/a2l007/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-03T03:43:28Z","updated_at":"2020-03-03T03:43:28Z","author_association":"CONTRIBUTOR","body":"Have you tried using the SQL Firehose: https://druid.apache.org/docs/latest/ingestion/native-batch.html#sqlfirehose ?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/593751828/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/593767379","html_url":"https://github.com/apache/druid/pull/8935#issuecomment-593767379","issue_url":"https://api.github.com/repos/apache/druid/issues/8935","id":593767379,"node_id":"MDEyOklzc3VlQ29tbWVudDU5Mzc2NzM3OQ==","user":{"login":"stale[bot]","id":26384082,"node_id":"MDM6Qm90MjYzODQwODI=","avatar_url":"https://avatars.githubusercontent.com/in/1724?v=4","gravatar_id":"","url":"https://api.github.com/users/stale%5Bbot%5D","html_url":"https://github.com/apps/stale","followers_url":"https://api.github.com/users/stale%5Bbot%5D/followers","following_url":"https://api.github.com/users/stale%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/stale%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/stale%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stale%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/stale%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/stale%5Bbot%5D/repos","events_url":"https://api.github.com/users/stale%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/stale%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2020-03-03T04:54:44Z","updated_at":"2020-03-03T04:54:44Z","author_association":"NONE","body":"This pull request/issue has been closed due to lack of activity. If you think that is incorrect, or the pull request requires review, you can revive the PR at any time.\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/593767379/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/593826170","html_url":"https://github.com/apache/druid/issues/9434#issuecomment-593826170","issue_url":"https://api.github.com/repos/apache/druid/issues/9434","id":593826170,"node_id":"MDEyOklzc3VlQ29tbWVudDU5MzgyNjE3MA==","user":{"login":"BeckerK","id":23512083,"node_id":"MDQ6VXNlcjIzNTEyMDgz","avatar_url":"https://avatars.githubusercontent.com/u/23512083?v=4","gravatar_id":"","url":"https://api.github.com/users/BeckerK","html_url":"https://github.com/BeckerK","followers_url":"https://api.github.com/users/BeckerK/followers","following_url":"https://api.github.com/users/BeckerK/following{/other_user}","gists_url":"https://api.github.com/users/BeckerK/gists{/gist_id}","starred_url":"https://api.github.com/users/BeckerK/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/BeckerK/subscriptions","organizations_url":"https://api.github.com/users/BeckerK/orgs","repos_url":"https://api.github.com/users/BeckerK/repos","events_url":"https://api.github.com/users/BeckerK/events{/privacy}","received_events_url":"https://api.github.com/users/BeckerK/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-03T08:23:45Z","updated_at":"2020-03-03T08:23:45Z","author_association":"NONE","body":"for 0.17.0 you have to build your own druid version\r\nhttp://druid.apache.org/docs/latest/development/build.html\r\n\r\ninstead of this command \r\n\"mvn clean install -Papache-release,dist,rat -DskipTests\"\r\nuse this one \r\n\"mvn clean install -Pdist -DskipTest\"\r\n\r\nthe second command will save you some time.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/593826170/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/593979856","html_url":"https://github.com/apache/druid/issues/9452#issuecomment-593979856","issue_url":"https://api.github.com/repos/apache/druid/issues/9452","id":593979856,"node_id":"MDEyOklzc3VlQ29tbWVudDU5Mzk3OTg1Ng==","user":{"login":"Green-Angry-Bird","id":10076439,"node_id":"MDQ6VXNlcjEwMDc2NDM5","avatar_url":"https://avatars.githubusercontent.com/u/10076439?v=4","gravatar_id":"","url":"https://api.github.com/users/Green-Angry-Bird","html_url":"https://github.com/Green-Angry-Bird","followers_url":"https://api.github.com/users/Green-Angry-Bird/followers","following_url":"https://api.github.com/users/Green-Angry-Bird/following{/other_user}","gists_url":"https://api.github.com/users/Green-Angry-Bird/gists{/gist_id}","starred_url":"https://api.github.com/users/Green-Angry-Bird/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Green-Angry-Bird/subscriptions","organizations_url":"https://api.github.com/users/Green-Angry-Bird/orgs","repos_url":"https://api.github.com/users/Green-Angry-Bird/repos","events_url":"https://api.github.com/users/Green-Angry-Bird/events{/privacy}","received_events_url":"https://api.github.com/users/Green-Angry-Bird/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-03T14:30:55Z","updated_at":"2020-03-03T14:30:55Z","author_association":"NONE","body":"After setting Replicants to 1, I get a new set of warnings in the logs:\r\n\r\n2020-03-03T14:27:57,430 WARN [Coordinator-Exec--0] org.apache.druid.server.coordinator.helper.DruidCoordinatorRuleRunner - Uh... I have no servers. Not assigning anything...\r\n2020-03-03T14:28:02,656 WARN [Coordinator-Exec--0] org.apache.druid.server.coordinator.helper.DruidCoordinatorRuleRunner - Uh... I have no servers. Not assigning anything...\r\n2020-03-03T14:28:07,758 WARN [Coordinator-Exec--0] org.apache.druid.server.coordinator.helper.DruidCoordinatorRuleRunner - Uh... I have no servers. Not assigning anything...\r\n2020-03-03T14:28:12,860 WARN [Coordinator-Exec--0] org.apache.druid.server.coordinator.helper.DruidCoordinatorRuleRunner - Uh... I have no servers. Not assigning anything...\r\n2020-03-03T14:28:17,945 WARN [Coordinator-Exec--0] org.apache.druid.server.coordinator.helper.DruidCoordinatorRuleRunner - Uh... I have no servers. Not assigning anything...\r\n2020-03-03T14:28:23,035 WARN [Coordinator-Exec--0] org.apache.druid.server.coordinator.helper.DruidCoordinatorRuleRunner - Uh... I have no servers. Not assigning anything...\r\n2020-03-03T14:28:28,119 WARN [Coordinator-Exec--0] org.apache.druid.server.coordinator.helper.DruidCoordinatorRuleRunner - Uh... I have no servers. Not assigning anything...\r\n2020-03-03T14:28:33,214 WARN [Coordinator-Exec--0] org.apache.druid.server.coordinator.helper.DruidCoordinatorRuleRunner - Uh... I have no servers. Not assigning anything...\r\n2020-03-03T14:29:03,175 WARN [Coordinator-Exec--0] org.apache.druid.server.coordinator.helper.DruidCoordinatorBalancer - [_default_tier]: insufficient active servers. Cannot balance.\r\n2020-03-03T14:29:08,545 WARN [Coordinator-Exec--0] org.apache.druid.server.coordinator.helper.DruidCoordinatorBalancer - [_default_tier]: insufficient active servers. Cannot balance.\r\n2020-03-03T14:29:13,912 WARN [Coordinator-Exec--0] org.apache.druid.server.coordinator.helper.DruidCoordinatorBalancer - [_default_tier]: insufficient active servers. Cannot balance.\r\n2020-03-03T14:29:19,253 WARN [Coordinator-Exec--0] org.apache.druid.server.coordinator.helper.DruidCoordinatorBalancer - [_default_tier]: insufficient active servers. Cannot balance.\r\n2020-03-03T14:29:24,531 WARN [Coordinator-Exec--0] org.apache.druid.server.coordinator.helper.DruidCoordinatorBalancer - [_default_tier]: insufficient active servers. Cannot balance.\r\n2020-03-03T14:29:29,823 WARN [Coordinator-Exec--0] org.apache.druid.server.coordinator.helper.DruidCoordinatorBalancer - [_default_tier]: insufficient active servers. Cannot balance.\r\n2020-03-03T14:29:35,090 WARN [Coordinator-Exec--0] org.apache.druid.server.coordinator.helper.DruidCoordinatorBalancer - [_default_tier]: insufficient active servers. Cannot balance.\r\n2020-03-03T14:29:40,362 WARN [Coordinator-Exec--0] org.apache.druid.server.coordinator.helper.DruidCoordinatorBalancer - [_default_tier]: insufficient active servers. Cannot balance.\r\n2020-03-03T14:29:45,596 WARN [Coordinator-Exec--0] org.apache.druid.server.coordinator.helper.DruidCoordinatorBalancer - [_default_tier]: insufficient active servers. Cannot balance.\r\n2020-03-03T14:29:50,840 WARN [Coordinator-Exec--0] org.apache.druid.server.coordinator.helper.DruidCoordinatorBalancer - [_default_tier]: insufficient active servers. Cannot balance.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/593979856/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/594009313","html_url":"https://github.com/apache/druid/issues/9430#issuecomment-594009313","issue_url":"https://api.github.com/repos/apache/druid/issues/9430","id":594009313,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NDAwOTMxMw==","user":{"login":"BeckerK","id":23512083,"node_id":"MDQ6VXNlcjIzNTEyMDgz","avatar_url":"https://avatars.githubusercontent.com/u/23512083?v=4","gravatar_id":"","url":"https://api.github.com/users/BeckerK","html_url":"https://github.com/BeckerK","followers_url":"https://api.github.com/users/BeckerK/followers","following_url":"https://api.github.com/users/BeckerK/following{/other_user}","gists_url":"https://api.github.com/users/BeckerK/gists{/gist_id}","starred_url":"https://api.github.com/users/BeckerK/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/BeckerK/subscriptions","organizations_url":"https://api.github.com/users/BeckerK/orgs","repos_url":"https://api.github.com/users/BeckerK/repos","events_url":"https://api.github.com/users/BeckerK/events{/privacy}","received_events_url":"https://api.github.com/users/BeckerK/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-03T15:28:06Z","updated_at":"2020-03-03T15:28:06Z","author_association":"NONE","body":"its already re-implementet in the master branch.. .\r\nyou can build your own druid version \r\n\r\nhttps://github.com/apache/druid/issues/9434#issuecomment-593826170\r\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/594009313/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/594098786","html_url":"https://github.com/apache/druid/issues/9453#issuecomment-594098786","issue_url":"https://api.github.com/repos/apache/druid/issues/9453","id":594098786,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NDA5ODc4Ng==","user":{"login":"ceastman-ibm","id":25593207,"node_id":"MDQ6VXNlcjI1NTkzMjA3","avatar_url":"https://avatars.githubusercontent.com/u/25593207?v=4","gravatar_id":"","url":"https://api.github.com/users/ceastman-ibm","html_url":"https://github.com/ceastman-ibm","followers_url":"https://api.github.com/users/ceastman-ibm/followers","following_url":"https://api.github.com/users/ceastman-ibm/following{/other_user}","gists_url":"https://api.github.com/users/ceastman-ibm/gists{/gist_id}","starred_url":"https://api.github.com/users/ceastman-ibm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ceastman-ibm/subscriptions","organizations_url":"https://api.github.com/users/ceastman-ibm/orgs","repos_url":"https://api.github.com/users/ceastman-ibm/repos","events_url":"https://api.github.com/users/ceastman-ibm/events{/privacy}","received_events_url":"https://api.github.com/users/ceastman-ibm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-03T18:29:30Z","updated_at":"2020-03-03T18:29:30Z","author_association":"NONE","body":"<img width=\"1680\" alt=\"Screen Shot 2020-03-03 at 12 29 11 PM\" src=\"https://user-images.githubusercontent.com/25593207/75807222-9d862a00-5d4a-11ea-9dc1-f77ef7ac74c6.png\">\r\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/594098786/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/594115402","html_url":"https://github.com/apache/druid/pull/9437#issuecomment-594115402","issue_url":"https://api.github.com/repos/apache/druid/issues/9437","id":594115402,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NDExNTQwMg==","user":{"login":"vogievetsky","id":177816,"node_id":"MDQ6VXNlcjE3NzgxNg==","avatar_url":"https://avatars.githubusercontent.com/u/177816?v=4","gravatar_id":"","url":"https://api.github.com/users/vogievetsky","html_url":"https://github.com/vogievetsky","followers_url":"https://api.github.com/users/vogievetsky/followers","following_url":"https://api.github.com/users/vogievetsky/following{/other_user}","gists_url":"https://api.github.com/users/vogievetsky/gists{/gist_id}","starred_url":"https://api.github.com/users/vogievetsky/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vogievetsky/subscriptions","organizations_url":"https://api.github.com/users/vogievetsky/orgs","repos_url":"https://api.github.com/users/vogievetsky/repos","events_url":"https://api.github.com/users/vogievetsky/events{/privacy}","received_events_url":"https://api.github.com/users/vogievetsky/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-03T19:05:56Z","updated_at":"2020-03-03T19:05:56Z","author_association":"CONTRIBUTOR","body":"Looks great thank you 👍 ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/594115402/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/594162644","html_url":"https://github.com/apache/druid/issues/9419#issuecomment-594162644","issue_url":"https://api.github.com/repos/apache/druid/issues/9419","id":594162644,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NDE2MjY0NA==","user":{"login":"jon-wei","id":8729063,"node_id":"MDQ6VXNlcjg3MjkwNjM=","avatar_url":"https://avatars.githubusercontent.com/u/8729063?v=4","gravatar_id":"","url":"https://api.github.com/users/jon-wei","html_url":"https://github.com/jon-wei","followers_url":"https://api.github.com/users/jon-wei/followers","following_url":"https://api.github.com/users/jon-wei/following{/other_user}","gists_url":"https://api.github.com/users/jon-wei/gists{/gist_id}","starred_url":"https://api.github.com/users/jon-wei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jon-wei/subscriptions","organizations_url":"https://api.github.com/users/jon-wei/orgs","repos_url":"https://api.github.com/users/jon-wei/repos","events_url":"https://api.github.com/users/jon-wei/events{/privacy}","received_events_url":"https://api.github.com/users/jon-wei/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-03T20:52:44Z","updated_at":"2020-03-03T20:52:44Z","author_association":"CONTRIBUTOR","body":"@sascha-coenen \r\n\r\nRe: consistency, SQL currently always \"finalizes\" the aggregators, the specific finalization behavior comes from the underlying implementation of `AggregatorFactory.finalize()`. The HLL and Theta sketches `finalize()` implementations follow the core aggregators `HyperUniquesAggregatorFactory` and `ApproximateHistogramAggregatorFactory` in not returning the serialized sketch (the latter only received an option to finalize as base64 later on, false by default).\r\n\r\nRe: control/expressibility, I agree with you, and the issues with using the query context are noted, but I would need to think more about how that functionality would be best expressed/implemented. Maybe having certain \"complex\" aggs not be finalized by default in SQL, or an approach that you mentioned here:\r\n\r\n> This is a huge usability problem and I'm looking forward to writing a proposal for expressing such query hints within the SQL queries.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/594162644/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/594238100","html_url":"https://github.com/apache/druid/issues/9285#issuecomment-594238100","issue_url":"https://api.github.com/repos/apache/druid/issues/9285","id":594238100,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NDIzODEwMA==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-04T00:14:17Z","updated_at":"2020-03-04T00:14:17Z","author_association":"CONTRIBUTOR","body":"@leventov thank you for finding it. Is there a way to forbid it with a code style or an inspection rule?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/594238100/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/594364556","html_url":"https://github.com/apache/druid/issues/9285#issuecomment-594364556","issue_url":"https://api.github.com/repos/apache/druid/issues/9285","id":594364556,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NDM2NDU1Ng==","user":{"login":"leventov","id":609240,"node_id":"MDQ6VXNlcjYwOTI0MA==","avatar_url":"https://avatars.githubusercontent.com/u/609240?v=4","gravatar_id":"","url":"https://api.github.com/users/leventov","html_url":"https://github.com/leventov","followers_url":"https://api.github.com/users/leventov/followers","following_url":"https://api.github.com/users/leventov/following{/other_user}","gists_url":"https://api.github.com/users/leventov/gists{/gist_id}","starred_url":"https://api.github.com/users/leventov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leventov/subscriptions","organizations_url":"https://api.github.com/users/leventov/orgs","repos_url":"https://api.github.com/users/leventov/repos","events_url":"https://api.github.com/users/leventov/events{/privacy}","received_events_url":"https://api.github.com/users/leventov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-04T07:17:47Z","updated_at":"2020-03-04T07:17:47Z","author_association":"MEMBER","body":"`$x$.awaitTermination($y$, $z$);` structural search","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/594364556/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/594529893","html_url":"https://github.com/apache/druid/pull/8990#issuecomment-594529893","issue_url":"https://api.github.com/repos/apache/druid/issues/8990","id":594529893,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NDUyOTg5Mw==","user":{"login":"stale[bot]","id":26384082,"node_id":"MDM6Qm90MjYzODQwODI=","avatar_url":"https://avatars.githubusercontent.com/in/1724?v=4","gravatar_id":"","url":"https://api.github.com/users/stale%5Bbot%5D","html_url":"https://github.com/apps/stale","followers_url":"https://api.github.com/users/stale%5Bbot%5D/followers","following_url":"https://api.github.com/users/stale%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/stale%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/stale%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stale%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/stale%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/stale%5Bbot%5D/repos","events_url":"https://api.github.com/users/stale%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/stale%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2020-03-04T13:42:54Z","updated_at":"2020-03-04T13:42:54Z","author_association":"NONE","body":"This pull request/issue has been closed due to lack of activity. If you think that is incorrect, or the pull request requires review, you can revive the PR at any time.\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/594529893/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/594529943","html_url":"https://github.com/apache/druid/issues/7587#issuecomment-594529943","issue_url":"https://api.github.com/repos/apache/druid/issues/7587","id":594529943,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NDUyOTk0Mw==","user":{"login":"stale[bot]","id":26384082,"node_id":"MDM6Qm90MjYzODQwODI=","avatar_url":"https://avatars.githubusercontent.com/in/1724?v=4","gravatar_id":"","url":"https://api.github.com/users/stale%5Bbot%5D","html_url":"https://github.com/apps/stale","followers_url":"https://api.github.com/users/stale%5Bbot%5D/followers","following_url":"https://api.github.com/users/stale%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/stale%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/stale%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stale%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/stale%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/stale%5Bbot%5D/repos","events_url":"https://api.github.com/users/stale%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/stale%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2020-03-04T13:42:59Z","updated_at":"2020-03-04T13:42:59Z","author_association":"NONE","body":"This issue has been closed due to lack of activity. If you think that is incorrect, or the issue requires additional review, you can revive the issue at any time.\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/594529943/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/594705935","html_url":"https://github.com/apache/druid/pull/9454#issuecomment-594705935","issue_url":"https://api.github.com/repos/apache/druid/issues/9454","id":594705935,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NDcwNTkzNQ==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-04T17:55:04Z","updated_at":"2020-03-04T17:55:04Z","author_association":"CONTRIBUTOR","body":"The CI is failing because of the below error. Would you please check it?\r\n\r\n```\r\n[ERROR] processing/src/main/java/org/apache/druid/segment/writeout/OnHeapMemorySegmentWriteOutMediumFactory.java:44 -- The declared exception <code>IOException</code> is never thrown\r\n```\r\n\r\nAlso, please update this [doc](https://github.com/apache/druid/blob/master/docs/configuration/index.md#segmentwriteoutmediumfactory) to properly explain the new configuration.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/594705935/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/594787279","html_url":"https://github.com/apache/druid/pull/9319#issuecomment-594787279","issue_url":"https://api.github.com/repos/apache/druid/issues/9319","id":594787279,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NDc4NzI3OQ==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-04T19:42:26Z","updated_at":"2020-03-04T19:42:26Z","author_association":"CONTRIBUTOR","body":"@suneet-s do you have more comments?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/594787279/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/594793267","html_url":"https://github.com/apache/druid/pull/9319#issuecomment-594793267","issue_url":"https://api.github.com/repos/apache/druid/issues/9319","id":594793267,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NDc5MzI2Nw==","user":{"login":"suneet-s","id":44787917,"node_id":"MDQ6VXNlcjQ0Nzg3OTE3","avatar_url":"https://avatars.githubusercontent.com/u/44787917?v=4","gravatar_id":"","url":"https://api.github.com/users/suneet-s","html_url":"https://github.com/suneet-s","followers_url":"https://api.github.com/users/suneet-s/followers","following_url":"https://api.github.com/users/suneet-s/following{/other_user}","gists_url":"https://api.github.com/users/suneet-s/gists{/gist_id}","starred_url":"https://api.github.com/users/suneet-s/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/suneet-s/subscriptions","organizations_url":"https://api.github.com/users/suneet-s/orgs","repos_url":"https://api.github.com/users/suneet-s/repos","events_url":"https://api.github.com/users/suneet-s/events{/privacy}","received_events_url":"https://api.github.com/users/suneet-s/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-04T19:50:21Z","updated_at":"2020-03-04T19:50:21Z","author_association":"CONTRIBUTOR","body":"> @suneet-s do you have more comments?\r\n\r\nlgtm !","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/594793267/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/595011596","html_url":"https://github.com/apache/druid/pull/9449#issuecomment-595011596","issue_url":"https://api.github.com/repos/apache/druid/issues/9449","id":595011596,"node_id":"MDEyOklzc3VlQ29tbWVudDU5NTAxMTU5Ng==","user":{"login":"vogievetsky","id":177816,"node_id":"MDQ6VXNlcjE3NzgxNg==","avatar_url":"https://avatars.githubusercontent.com/u/177816?v=4","gravatar_id":"","url":"https://api.github.com/users/vogievetsky","html_url":"https://github.com/vogievetsky","followers_url":"https://api.github.com/users/vogievetsky/followers","following_url":"https://api.github.com/users/vogievetsky/following{/other_user}","gists_url":"https://api.github.com/users/vogievetsky/gists{/gist_id}","starred_url":"https://api.github.com/users/vogievetsky/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vogievetsky/subscriptions","organizations_url":"https://api.github.com/users/vogievetsky/orgs","repos_url":"https://api.github.com/users/vogievetsky/repos","events_url":"https://api.github.com/users/vogievetsky/events{/privacy}","received_events_url":"https://api.github.com/users/vogievetsky/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2020-03-05T03:36:55Z","updated_at":"2020-03-05T03:36:55Z","author_association":"CONTRIBUTOR","body":"Does this `inputSource` not need an `inputFormat`? How is that handled?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/595011596/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]