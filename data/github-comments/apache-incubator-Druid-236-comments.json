[{"url":"https://api.github.com/repos/apache/druid/issues/comments/486337550","html_url":"https://github.com/apache/druid/pull/7537#issuecomment-486337550","issue_url":"https://api.github.com/repos/apache/druid/issues/7537","id":486337550,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NjMzNzU1MA==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-24T17:11:43Z","updated_at":"2019-04-24T17:11:43Z","author_association":"CONTRIBUTOR","body":"Hm, while reviewing this I think I might have noticed a bug in BaseAppenderatorDriver. Let me look into it a bit and get back to you.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/486337550/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/486392448","html_url":"https://github.com/apache/druid/issues/7486#issuecomment-486392448","issue_url":"https://api.github.com/repos/apache/druid/issues/7486","id":486392448,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NjM5MjQ0OA==","user":{"login":"AlexanderSaydakov","id":13126686,"node_id":"MDQ6VXNlcjEzMTI2Njg2","avatar_url":"https://avatars.githubusercontent.com/u/13126686?v=4","gravatar_id":"","url":"https://api.github.com/users/AlexanderSaydakov","html_url":"https://github.com/AlexanderSaydakov","followers_url":"https://api.github.com/users/AlexanderSaydakov/followers","following_url":"https://api.github.com/users/AlexanderSaydakov/following{/other_user}","gists_url":"https://api.github.com/users/AlexanderSaydakov/gists{/gist_id}","starred_url":"https://api.github.com/users/AlexanderSaydakov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/AlexanderSaydakov/subscriptions","organizations_url":"https://api.github.com/users/AlexanderSaydakov/orgs","repos_url":"https://api.github.com/users/AlexanderSaydakov/repos","events_url":"https://api.github.com/users/AlexanderSaydakov/events{/privacy}","received_events_url":"https://api.github.com/users/AlexanderSaydakov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-24T19:27:30Z","updated_at":"2019-04-24T19:27:30Z","author_association":"CONTRIBUTOR","body":"Should we proceed with returning an empty array?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/486392448/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/486393069","html_url":"https://github.com/apache/druid/pull/7536#issuecomment-486393069","issue_url":"https://api.github.com/repos/apache/druid/issues/7536","id":486393069,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NjM5MzA2OQ==","user":{"login":"vogievetsky","id":177816,"node_id":"MDQ6VXNlcjE3NzgxNg==","avatar_url":"https://avatars.githubusercontent.com/u/177816?v=4","gravatar_id":"","url":"https://api.github.com/users/vogievetsky","html_url":"https://github.com/vogievetsky","followers_url":"https://api.github.com/users/vogievetsky/followers","following_url":"https://api.github.com/users/vogievetsky/following{/other_user}","gists_url":"https://api.github.com/users/vogievetsky/gists{/gist_id}","starred_url":"https://api.github.com/users/vogievetsky/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vogievetsky/subscriptions","organizations_url":"https://api.github.com/users/vogievetsky/orgs","repos_url":"https://api.github.com/users/vogievetsky/repos","events_url":"https://api.github.com/users/vogievetsky/events{/privacy}","received_events_url":"https://api.github.com/users/vogievetsky/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-24T19:29:27Z","updated_at":"2019-04-24T19:29:27Z","author_association":"CONTRIBUTOR","body":"This looks good to me üëç \r\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/486393069/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/486396480","html_url":"https://github.com/apache/druid/issues/7486#issuecomment-486396480","issue_url":"https://api.github.com/repos/apache/druid/issues/7486","id":486396480,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NjM5NjQ4MA==","user":{"login":"jon-wei","id":8729063,"node_id":"MDQ6VXNlcjg3MjkwNjM=","avatar_url":"https://avatars.githubusercontent.com/u/8729063?v=4","gravatar_id":"","url":"https://api.github.com/users/jon-wei","html_url":"https://github.com/jon-wei","followers_url":"https://api.github.com/users/jon-wei/followers","following_url":"https://api.github.com/users/jon-wei/following{/other_user}","gists_url":"https://api.github.com/users/jon-wei/gists{/gist_id}","starred_url":"https://api.github.com/users/jon-wei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jon-wei/subscriptions","organizations_url":"https://api.github.com/users/jon-wei/orgs","repos_url":"https://api.github.com/users/jon-wei/repos","events_url":"https://api.github.com/users/jon-wei/events{/privacy}","received_events_url":"https://api.github.com/users/jon-wei/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-24T19:39:54Z","updated_at":"2019-04-24T19:39:54Z","author_association":"CONTRIBUTOR","body":"@AlexanderSaydakov The consensus so far on the discussion thread @drcrallen opened is that the array of NaN is the best option (https://lists.apache.org/thread.html/32c816487529dd3b6f04b9f029f2136050a10d54f19f5c1f3f15fc2d@%3Cdev.druid.apache.org%3E)","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/486396480/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/486398615","html_url":"https://github.com/apache/druid/issues/6666#issuecomment-486398615","issue_url":"https://api.github.com/repos/apache/druid/issues/6666","id":486398615,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NjM5ODYxNQ==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-24T19:46:31Z","updated_at":"2019-04-24T19:46:31Z","author_association":"CONTRIBUTOR","body":"#7400 is good use case\r\n\r\nI would prefer to remove \"Abstract\" from interface name and return map instead of list so as not to depend on ordering of elements for their meaning... something like (if that works)\r\n```\r\ninterface CredentialsProvider {\r\n  Map<String, String> getCredentials();\r\n}\r\n```","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/486398615/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/486403854","html_url":"https://github.com/apache/druid/issues/1263#issuecomment-486403854","issue_url":"https://api.github.com/repos/apache/druid/issues/1263","id":486403854,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NjQwMzg1NA==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-24T20:02:33Z","updated_at":"2019-04-24T20:02:33Z","author_association":"CONTRIBUTOR","body":"actually most of the work to abstract zookeeper is already done. see https://groups.google.com/forum/#!searchin/druid-development/zookeeper/druid-development/tWnwPyL0Vk4/2uLwqgQiAAAJ \r\n\r\nI could probably write an etcd extension as reference for using something other than zookeeper .","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/486403854/reactions","total_count":8,"+1":8,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/486408240","html_url":"https://github.com/apache/druid/pull/7494#issuecomment-486408240","issue_url":"https://api.github.com/repos/apache/druid/issues/7494","id":486408240,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NjQwODI0MA==","user":{"login":"jon-wei","id":8729063,"node_id":"MDQ6VXNlcjg3MjkwNjM=","avatar_url":"https://avatars.githubusercontent.com/u/8729063?v=4","gravatar_id":"","url":"https://api.github.com/users/jon-wei","html_url":"https://github.com/jon-wei","followers_url":"https://api.github.com/users/jon-wei/followers","following_url":"https://api.github.com/users/jon-wei/following{/other_user}","gists_url":"https://api.github.com/users/jon-wei/gists{/gist_id}","starred_url":"https://api.github.com/users/jon-wei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jon-wei/subscriptions","organizations_url":"https://api.github.com/users/jon-wei/orgs","repos_url":"https://api.github.com/users/jon-wei/repos","events_url":"https://api.github.com/users/jon-wei/events{/privacy}","received_events_url":"https://api.github.com/users/jon-wei/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-24T20:15:24Z","updated_at":"2019-04-24T20:15:24Z","author_association":"CONTRIBUTOR","body":"Can you add some tests to `SQLMetadataSegmentManagerTest` for the new `disableSegments` APIs? ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/486408240/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/486408446","html_url":"https://github.com/apache/druid/pull/7490#issuecomment-486408446","issue_url":"https://api.github.com/repos/apache/druid/issues/7490","id":486408446,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NjQwODQ0Ng==","user":{"login":"jon-wei","id":8729063,"node_id":"MDQ6VXNlcjg3MjkwNjM=","avatar_url":"https://avatars.githubusercontent.com/u/8729063?v=4","gravatar_id":"","url":"https://api.github.com/users/jon-wei","html_url":"https://github.com/jon-wei","followers_url":"https://api.github.com/users/jon-wei/followers","following_url":"https://api.github.com/users/jon-wei/following{/other_user}","gists_url":"https://api.github.com/users/jon-wei/gists{/gist_id}","starred_url":"https://api.github.com/users/jon-wei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jon-wei/subscriptions","organizations_url":"https://api.github.com/users/jon-wei/orgs","repos_url":"https://api.github.com/users/jon-wei/repos","events_url":"https://api.github.com/users/jon-wei/events{/privacy}","received_events_url":"https://api.github.com/users/jon-wei/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-24T20:16:01Z","updated_at":"2019-04-24T20:16:16Z","author_association":"CONTRIBUTOR","body":"Can you add some tests to `SQLMetadataSegmentManagerTest` for the new enable APIs?\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/486408446/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/486421362","html_url":"https://github.com/apache/druid/issues/7519#issuecomment-486421362","issue_url":"https://api.github.com/repos/apache/druid/issues/7519","id":486421362,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NjQyMTM2Mg==","user":{"login":"jon-wei","id":8729063,"node_id":"MDQ6VXNlcjg3MjkwNjM=","avatar_url":"https://avatars.githubusercontent.com/u/8729063?v=4","gravatar_id":"","url":"https://api.github.com/users/jon-wei","html_url":"https://github.com/jon-wei","followers_url":"https://api.github.com/users/jon-wei/followers","following_url":"https://api.github.com/users/jon-wei/following{/other_user}","gists_url":"https://api.github.com/users/jon-wei/gists{/gist_id}","starred_url":"https://api.github.com/users/jon-wei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jon-wei/subscriptions","organizations_url":"https://api.github.com/users/jon-wei/orgs","repos_url":"https://api.github.com/users/jon-wei/repos","events_url":"https://api.github.com/users/jon-wei/events{/privacy}","received_events_url":"https://api.github.com/users/jon-wei/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-24T20:52:52Z","updated_at":"2019-04-24T20:52:52Z","author_association":"CONTRIBUTOR","body":"```\r\n\t\"buildSegments\": {\r\n\t\t\t\t\t\"processed\": 0,\r\n\t\t\t\t\t\"processedWithError\": 0,\r\n\t\t\t\t\t\"thrownAway\": 0,\r\n\t\t\t\t\t\"unparseable\": 5\r\n\t\t\t\t}\r\n```\r\n\r\nNone of the rows are being parsed, so your spec or input probably has issues, try setting `logParseExceptions` and related properties to troubleshoot: http://druid.io/docs/latest/development/extensions-core/kafka-ingestion.html\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/486421362/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/486421837","html_url":"https://github.com/apache/druid/issues/7519#issuecomment-486421837","issue_url":"https://api.github.com/repos/apache/druid/issues/7519","id":486421837,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NjQyMTgzNw==","user":{"login":"jon-wei","id":8729063,"node_id":"MDQ6VXNlcjg3MjkwNjM=","avatar_url":"https://avatars.githubusercontent.com/u/8729063?v=4","gravatar_id":"","url":"https://api.github.com/users/jon-wei","html_url":"https://github.com/jon-wei","followers_url":"https://api.github.com/users/jon-wei/followers","following_url":"https://api.github.com/users/jon-wei/following{/other_user}","gists_url":"https://api.github.com/users/jon-wei/gists{/gist_id}","starred_url":"https://api.github.com/users/jon-wei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jon-wei/subscriptions","organizations_url":"https://api.github.com/users/jon-wei/orgs","repos_url":"https://api.github.com/users/jon-wei/repos","events_url":"https://api.github.com/users/jon-wei/events{/privacy}","received_events_url":"https://api.github.com/users/jon-wei/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-24T20:54:11Z","updated_at":"2019-04-24T20:56:53Z","author_association":"CONTRIBUTOR","body":"The sample you posted is invalid JSON (has an extra comma after the last field), I would double check that:\r\n\r\n```\r\n    \"userGender\" : null,\r\n    \"userDOB\" : null,\r\n}\r\n```\r\n\r\nFor JSON inputs, each event is expected to be on a single line as well, example:\r\n```\r\n{\"time\":<timestamp>, \"abc\":\"def\"}\r\n{\"time\":<timestamp2>, \"abc\":\"def2\"}\r\n```","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/486421837/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/486422325","html_url":"https://github.com/apache/druid/pull/7528#issuecomment-486422325","issue_url":"https://api.github.com/repos/apache/druid/issues/7528","id":486422325,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NjQyMjMyNQ==","user":{"login":"vogievetsky","id":177816,"node_id":"MDQ6VXNlcjE3NzgxNg==","avatar_url":"https://avatars.githubusercontent.com/u/177816?v=4","gravatar_id":"","url":"https://api.github.com/users/vogievetsky","html_url":"https://github.com/vogievetsky","followers_url":"https://api.github.com/users/vogievetsky/followers","following_url":"https://api.github.com/users/vogievetsky/following{/other_user}","gists_url":"https://api.github.com/users/vogievetsky/gists{/gist_id}","starred_url":"https://api.github.com/users/vogievetsky/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vogievetsky/subscriptions","organizations_url":"https://api.github.com/users/vogievetsky/orgs","repos_url":"https://api.github.com/users/vogievetsky/repos","events_url":"https://api.github.com/users/vogievetsky/events{/privacy}","received_events_url":"https://api.github.com/users/vogievetsky/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-24T20:55:31Z","updated_at":"2019-04-24T20:55:31Z","author_association":"CONTRIBUTOR","body":"A number of things from just playing with this:\r\n\r\n1) could you make it more aligned:\r\n\r\n![image](https://user-images.githubusercontent.com/177816/56693025-4d552a80-6698-11e9-9ab1-f7a5bb118deb.png)\r\n\r\n2) Make sure you guard the actions correctly. For example \"Kill\" should only show up for running tasks.\r\n\r\n3) The log display is messed up notice that it is showing the `\\n` instead of rendering it as a new line\r\n\r\n![image](https://user-images.githubusercontent.com/177816/56693149-95744d00-6698-11e9-92c7-7ce5b096e06d.png)\r\n ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/486422325/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/486426100","html_url":"https://github.com/apache/druid/issues/7508#issuecomment-486426100","issue_url":"https://api.github.com/repos/apache/druid/issues/7508","id":486426100,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NjQyNjEwMA==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-24T21:06:12Z","updated_at":"2019-04-24T21:08:40Z","author_association":"CONTRIBUTOR","body":"@kaka11chen good find. however I am curious what was the problem observed that led you to this investigation (e.g. you were getting OOMs or CPU usage was shooting up causing everything to become super slow) and did the problem get fixed. From the /proc/meminfo output I see , \"MemFree:         3411764 kB\"  (about 3G) of free memory and kernel wouldn't try too hard to clean up its internal caches at that point.\r\n\r\nI see it is a pathological use case for dentry cache though where we are creating many dentries never to be reused.\r\n\r\nUpdate: Just noticed from description that you were getting OOMs even if there was free mem available. OOM might be unrelated to this but more to jvm heap settings though.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/486426100/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/486428779","html_url":"https://github.com/apache/druid/issues/7508#issuecomment-486428779","issue_url":"https://api.github.com/repos/apache/druid/issues/7508","id":486428779,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NjQyODc3OQ==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-24T21:13:27Z","updated_at":"2019-04-24T21:13:27Z","author_association":"CONTRIBUTOR","body":"or maybe dentry cache was lowering effective available page cache and that caused the major faults.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/486428779/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/486450735","html_url":"https://github.com/apache/druid/issues/6743#issuecomment-486450735","issue_url":"https://api.github.com/repos/apache/druid/issues/6743","id":486450735,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NjQ1MDczNQ==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-24T22:24:58Z","updated_at":"2019-04-24T22:24:58Z","author_association":"CONTRIBUTOR","body":"@leerho It appears that postgres does have a memory allocator in order to provide the \"palloc\" and \"pfree\" methods . @gianm was suggesting something similar. In that case DS library would allow some way of passing those functions . Druid(or other users of DS) would implement the memory allocator  in the way that makes most sense for them (e.g. allocating a big chunk of memory at startup and then giving off chunks from this in \"palloc\" or delegate each \"palloc\" to underlying jvm heap or os ...)\r\nI looked into this a long time ago and one way was hacking it was to use \"MemoryRegion\" and \"MemoryRequest\" as in https://github.com/himanshug/druid/blob/growable_aggregator_final/extensions/datasketches/src/main/java/io/druid/query/aggregation/datasketches/theta/SketchResizableBufferAggregator.java#L120 (as you might guess this is based on pretty old version of DS library :) ) .\r\n\r\n@gianm for IncrementalIndex , if above is done, simplest would be to use BufferAggregator and it would be more accurate as well than trying to do sizeOf(aggregator) . Current implementation to spill based on `getMaxIntermediateSize()` is puzzling to me as the number returned there is totally unrelated to what smallest/current/largest heap utilization of on-heap Aggregator would be. That number is only relevant when BufferAggregator is used.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/486450735/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/486458368","html_url":"https://github.com/apache/druid/issues/7525#issuecomment-486458368","issue_url":"https://api.github.com/repos/apache/druid/issues/7525","id":486458368,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NjQ1ODM2OA==","user":{"login":"clintropolis","id":1577461,"node_id":"MDQ6VXNlcjE1Nzc0NjE=","avatar_url":"https://avatars.githubusercontent.com/u/1577461?v=4","gravatar_id":"","url":"https://api.github.com/users/clintropolis","html_url":"https://github.com/clintropolis","followers_url":"https://api.github.com/users/clintropolis/followers","following_url":"https://api.github.com/users/clintropolis/following{/other_user}","gists_url":"https://api.github.com/users/clintropolis/gists{/gist_id}","starred_url":"https://api.github.com/users/clintropolis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintropolis/subscriptions","organizations_url":"https://api.github.com/users/clintropolis/orgs","repos_url":"https://api.github.com/users/clintropolis/repos","events_url":"https://api.github.com/users/clintropolis/events{/privacy}","received_events_url":"https://api.github.com/users/clintropolis/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-24T22:59:26Z","updated_at":"2019-04-24T22:59:26Z","author_association":"MEMBER","body":"These are very good questions, and missing from the proposal because for cases like these I am not quite certain how to handle it yet, so thanks for bringing it up. :metal:\r\n\r\n> What happens if an expression has array functions, but a multi-valued input x is sometimes used by array functions and sometimes used by non-array functions? (We could disallow this, I suppose, on the grounds that the writer of the expression should be able to decide if they want to treat x as an array or not.)\r\n\r\nMy current prototype doesn't have anything that explicitly is checking for this, so the behavior is probably from the user perspective unexpected and strange. What it does right now is notice the outer `x` that was used in a non-array function without a `map`, and then wrap the whole expression in a `map`, which would mean the array functions would be applied to auto cast single element arrays of the mapped value instead of the source array. This behavior is definitely not probably what a user would expect, so I think we probably should check for these mixed usages and consider it a malformed expression and some sort of error. \r\n\r\nAnd while we certainly _could_ probably handle this by rewriting the expression tree appropriately to only map the sub expressions that makes sense, or in such a way that it doesn't overload the array identifier, I'm not sure that we _should_ allow this since it seems a bit too magical for my taste. I think it's fair that if the user explicitly expresses an input as having multiple values then it must be treated as multi-valued for all usages in the same expression, and it's invalid otherwise.\r\n\r\n\r\n> What happens if an expression has no array functions, but there are two multi-valued inputs x and y? (Do we map Expr over all possible pairings of values from x and y? Do we return‚Ä¶ null? Do we return‚Ä¶ some N-dimensional matrix?)\r\n\r\nAt the time I opened the proposal my prototype would throw an exception with explicit language in it because I wasn't sure what to do yet. I think the first 2 suggestions you have are the only ones which make sense to me. I haven't implemented expression arrays to support any sort of nesting or anything, only flat constant arrays so the matrix idea is out of the picture for me at least, and I see nothing obvious to do with such a matrix even if we could compute it if it made it out as the final evaluated result.\r\n\r\nAfter sleeping on it and doing some experiments, I think the most useful thing would be to do the cartesian product of all multi-value inputs which are not part of an array function, done by either extending the `map` function to allow it to just implicitly do this if given more than one argument, or maybe better an explicit `cartesian_map` function.\r\n\r\n> What happens if an expression uses array functions for a multi-valued input x but doesn't for multi-valued inputs y and z?\r\n\r\nI think we could handle this case in the same manner we handle more than one multi-value inputs without any array function use (question 2), at least the way I have things setup currently I would have to explicitly check to stop this from working as you might expect, so maybe would be nice to leave it that way? I feel less strongly about asserting that since a user acknowledged one column as an array that they must be aware of all other columns that are array typed in the expression.\r\n\r\n\r\n>I think what will really happen is Calcite will 'optimize' this filter into FALSE and plan the query into a no-op.\r\n\r\nYes, you're correct, updated the proposal to reflect this behavior.\r\n\r\n>Will there be issues if we decide to introduce real SQL array types in the future? Presumably, these expression array functions will be written such that they apply to VARCHAR (and numeric types as well?). Will they conflict with honest-to-goodness SQL array functions or is there a path to supporting both?\r\n\r\nI do not believe there needs to be a conflict, I _think_ it should be possible to write the SQL functions such that they accept either `VARCHAR` or `ARRAY` and then validate that any `VARCHAR` input are marked as multi value in the information schema? At the expression layer the array functions are intended to handle both multi-value strings and true array typed columns as arrays internally, so that shouldn't be an issue. Ideally, at the SQL level I'd definitely like these array functions to support both our multi-value string dimensions and real SQL arrays. \r\n\r\nAdmittedly I need to do a bit more experimentation with SQL layer stuff to be certain that this is possible though and there are no like validation or syntax gotchas from us treating them as `VARCHAR` that will make working with `ARRAY` with the same functions painful, so we might need to reconsider if there happens to be a conflict. In that case, I would expect to rename the functions for multi-val `VARCHAR` at the SQL layer, to reserve these suggested names for true SQL array types since some of them are standard function names, and then plumb them both to the same set of Druid expression array functions to handle internally.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/486458368/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/486464257","html_url":"https://github.com/apache/druid/issues/7255#issuecomment-486464257","issue_url":"https://api.github.com/repos/apache/druid/issues/7255","id":486464257,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NjQ2NDI1Nw==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-24T23:29:55Z","updated_at":"2019-04-24T23:29:55Z","author_association":"CONTRIBUTOR","body":"SGTM as a feature. In fact this doesn't exist only because non-String dimension columns were an afterthought.\r\n\r\n> If given dimension name is not matched within defined schema:\r\n\r\nI wouldn't change the default behavior for backward compatibility, reasons using patterns is fine. \r\n\r\nauto type-detection based on value observed might not work because you might determine type to be \"long\" on observing first couple of rows but then you see a non-long value at later time.\r\n\r\n> Only open question is deciding the format of the regex pattern.\r\n\r\nDruid uses java regex pattern in different places so that would be a good choice.\r\n\r\nFrom the proposal, It is not clear where the {pattern,type} blob would be written inside overall indexing task spec .","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/486464257/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/486464509","html_url":"https://github.com/apache/druid/pull/6430#issuecomment-486464509","issue_url":"https://api.github.com/repos/apache/druid/issues/6430","id":486464509,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NjQ2NDUwOQ==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-24T23:31:08Z","updated_at":"2019-04-24T23:31:08Z","author_association":"CONTRIBUTOR","body":"@yurmix sorry, I've just checked your last update. Most of my last comments were addressed except these two: https://github.com/apache/incubator-druid/pull/6430#discussion_r274135506, https://github.com/apache/incubator-druid/pull/6430#discussion_r274115913. Would you please check them?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/486464509/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/486467704","html_url":"https://github.com/apache/druid/pull/7526#issuecomment-486467704","issue_url":"https://api.github.com/repos/apache/druid/issues/7526","id":486467704,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NjQ2NzcwNA==","user":{"login":"AlexanderSaydakov","id":13126686,"node_id":"MDQ6VXNlcjEzMTI2Njg2","avatar_url":"https://avatars.githubusercontent.com/u/13126686?v=4","gravatar_id":"","url":"https://api.github.com/users/AlexanderSaydakov","html_url":"https://github.com/AlexanderSaydakov","followers_url":"https://api.github.com/users/AlexanderSaydakov/followers","following_url":"https://api.github.com/users/AlexanderSaydakov/following{/other_user}","gists_url":"https://api.github.com/users/AlexanderSaydakov/gists{/gist_id}","starred_url":"https://api.github.com/users/AlexanderSaydakov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/AlexanderSaydakov/subscriptions","organizations_url":"https://api.github.com/users/AlexanderSaydakov/orgs","repos_url":"https://api.github.com/users/AlexanderSaydakov/repos","events_url":"https://api.github.com/users/AlexanderSaydakov/events{/privacy}","received_events_url":"https://api.github.com/users/AlexanderSaydakov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-24T23:47:14Z","updated_at":"2019-04-24T23:47:14Z","author_association":"CONTRIBUTOR","body":"I don't understand what happened with the inspection:\r\nJava HotSpot(TM) 64-Bit Server VM warning: Insufficient space for shared memory file:\r\n[22:26:11]   30896","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/486467704/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/486468578","html_url":"https://github.com/apache/druid/issues/7543#issuecomment-486468578","issue_url":"https://api.github.com/repos/apache/druid/issues/7543","id":486468578,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NjQ2ODU3OA==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-24T23:51:57Z","updated_at":"2019-04-24T23:51:57Z","author_association":"CONTRIBUTOR","body":"Hey @DanoOM,\r\n\r\nThis is happening because currently, Druid does not support non-aggregation queries that sort by anything other than `__time`.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/486468578/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/486473879","html_url":"https://github.com/apache/druid/pull/6698#issuecomment-486473879","issue_url":"https://api.github.com/repos/apache/druid/issues/6698","id":486473879,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NjQ3Mzg3OQ==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-25T00:20:34Z","updated_at":"2019-04-25T00:20:34Z","author_association":"CONTRIBUTOR","body":"@kaijianding apologies for the gigantic delay. I think it is a great optimization opportunity and we should find a solution whether or not it is ideal.\r\n\r\nI agree with @egor-ryashin comment about `HttpServerInventoryView` knowing about tiers/servers to watch . In fact, I think it could have been done that way for zookeeper based impl too because that is also unnecessarily watching the segments for servers it is continuously discarding after the fact. It is just that the cost is not as high in that case.\r\n\r\nSimplest would be to get an instance of `BrokerSegmentWatcherConfig` injected in `HttpServerInventoryView` and use that. We will need to put some blurb in release notes for users to make sure and not accidentally have those properties set on coordinator node.\r\n\r\nPS: If I was doing things from scratch then I would've called it \"BaseServerInventoryViewConfig\" and named the watched tier property name (and some others) accordingly.\r\n\r\n@jihoonson does that sound reasonable to you ?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/486473879/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/486474348","html_url":"https://github.com/apache/druid/issues/6743#issuecomment-486474348","issue_url":"https://api.github.com/repos/apache/druid/issues/6743","id":486474348,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NjQ3NDM0OA==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-25T00:23:23Z","updated_at":"2019-04-25T00:23:23Z","author_association":"CONTRIBUTOR","body":"I like the idea of using a chunk of the processing buffer (since it already exists, and because it doesn't incur any JVM heap operations or put any pressure on the GC) but I don't like the idea of trying to rebuild a fancy memory allocator. So I'm starting to wonder how simple of an allocator we can get away with.\r\n\r\nI wonder how bad it would be if aggregators were never allowed to free memory. Basically, let them allocate whatever chunks they want, and free it automatically at the end of the query, but don't let them free it. And if the total allocated memory exceeds the memory limit for a query, then fail the query.\r\n\r\n> @gianm for IncrementalIndex , if above is done, simplest would be to use BufferAggregator and it would be more accurate as well than trying to do sizeOf(aggregator) . Current implementation to spill based on getMaxIntermediateSize() is puzzling to me as the number returned there is totally unrelated to what smallest/current/largest heap utilization of on-heap Aggregator would be. That number is only relevant when BufferAggregator is used.\r\n\r\nIIRC we talked a bit about this on the PR - yeah, it is a non-sequitur, but:\r\n\r\n1. It's likely that the `getMaxIntermediateSize` for buffer aggregators is also a rough, but reasonble cap on how much on-heap memory might be used by an on-heap aggregator.\r\n2. We considered moving IncrementalIndex's aggregators off-heap out of scope at the time.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/486474348/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/486475596","html_url":"https://github.com/apache/druid/issues/6743#issuecomment-486475596","issue_url":"https://api.github.com/repos/apache/druid/issues/6743","id":486475596,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NjQ3NTU5Ng==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-25T00:31:08Z","updated_at":"2019-04-25T00:31:24Z","author_association":"CONTRIBUTOR","body":"@gianm \r\n> I wonder how bad it would be if aggregators were never allowed to free memory. Basically, let them allocate whatever chunks they want, and free it automatically at the end of the query, but don't let them free it. And if the total allocated memory exceeds the memory limit for a query, then fail the query.\r\n\r\nI intentionally left the detail of \"pfree\" implementation and I can imagine an interface for \"MemoryAllocatorFactory\"  interface (which has factory method with a parameter for supplier of os memory e.g. StupidPool ). Implementation could be as simple as possible including free() being noop and a close() method on allocator that gets called at the end of query and all memory is freed at that point only.\r\n\r\n\r\n> We considered moving IncrementalIndex's aggregators off-heap out of scope at the time.\r\nI meant if allocator stuff was in place then we could use an heap-based-allocator that gets used from OnHeapIncrementalIndex . I think it would be simple, but then you never know till you prototype :)","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/486475596/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/486475645","html_url":"https://github.com/apache/druid/issues/7187#issuecomment-486475645","issue_url":"https://api.github.com/repos/apache/druid/issues/7187","id":486475645,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NjQ3NTY0NQ==","user":{"login":"leerho","id":12941506,"node_id":"MDQ6VXNlcjEyOTQxNTA2","avatar_url":"https://avatars.githubusercontent.com/u/12941506?v=4","gravatar_id":"","url":"https://api.github.com/users/leerho","html_url":"https://github.com/leerho","followers_url":"https://api.github.com/users/leerho/followers","following_url":"https://api.github.com/users/leerho/following{/other_user}","gists_url":"https://api.github.com/users/leerho/gists{/gist_id}","starred_url":"https://api.github.com/users/leerho/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leerho/subscriptions","organizations_url":"https://api.github.com/users/leerho/orgs","repos_url":"https://api.github.com/users/leerho/repos","events_url":"https://api.github.com/users/leerho/events{/privacy}","received_events_url":"https://api.github.com/users/leerho/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-25T00:31:25Z","updated_at":"2019-04-25T00:31:25Z","author_association":"CONTRIBUTOR","body":"@peferron  @gianm \r\ncheck out the [updated docs](https://datasketches.github.io/docs/Frequency/FrequentDistinctTuplesSketch.html)\r\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/486475645/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/486524737","html_url":"https://github.com/apache/druid/pull/7537#issuecomment-486524737","issue_url":"https://api.github.com/repos/apache/druid/issues/7537","id":486524737,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NjUyNDczNw==","user":{"login":"nishantmonu51","id":5023786,"node_id":"MDQ6VXNlcjUwMjM3ODY=","avatar_url":"https://avatars.githubusercontent.com/u/5023786?v=4","gravatar_id":"","url":"https://api.github.com/users/nishantmonu51","html_url":"https://github.com/nishantmonu51","followers_url":"https://api.github.com/users/nishantmonu51/followers","following_url":"https://api.github.com/users/nishantmonu51/following{/other_user}","gists_url":"https://api.github.com/users/nishantmonu51/gists{/gist_id}","starred_url":"https://api.github.com/users/nishantmonu51/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nishantmonu51/subscriptions","organizations_url":"https://api.github.com/users/nishantmonu51/orgs","repos_url":"https://api.github.com/users/nishantmonu51/repos","events_url":"https://api.github.com/users/nishantmonu51/events{/privacy}","received_events_url":"https://api.github.com/users/nishantmonu51/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-25T05:28:41Z","updated_at":"2019-04-25T05:28:41Z","author_association":"MEMBER","body":"@b-slim The useUniquePath flag is true for streaming ingestion where there may be more than 1 replica trying to push segments to same path. \r\nIt is false for Batch ingestion where we do not have replicas and the ingestion is protected by task locks. ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/486524737/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/486639591","html_url":"https://github.com/apache/druid/pull/7281#issuecomment-486639591","issue_url":"https://api.github.com/repos/apache/druid/issues/7281","id":486639591,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NjYzOTU5MQ==","user":{"login":"xueyumusic","id":95261,"node_id":"MDQ6VXNlcjk1MjYx","avatar_url":"https://avatars.githubusercontent.com/u/95261?v=4","gravatar_id":"","url":"https://api.github.com/users/xueyumusic","html_url":"https://github.com/xueyumusic","followers_url":"https://api.github.com/users/xueyumusic/followers","following_url":"https://api.github.com/users/xueyumusic/following{/other_user}","gists_url":"https://api.github.com/users/xueyumusic/gists{/gist_id}","starred_url":"https://api.github.com/users/xueyumusic/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xueyumusic/subscriptions","organizations_url":"https://api.github.com/users/xueyumusic/orgs","repos_url":"https://api.github.com/users/xueyumusic/repos","events_url":"https://api.github.com/users/xueyumusic/events{/privacy}","received_events_url":"https://api.github.com/users/xueyumusic/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-25T11:48:40Z","updated_at":"2019-04-25T11:48:40Z","author_association":"CONTRIBUTOR","body":"Hi, @gianm , I updated the PR to upgrade to calcite-1.19.0. Adding `DruidRewriteEqualNullRule` to process `a=null` as `a=''` and adding `cast(BIGINT NOT NULL) as BIGINT` process logic in DruidQuery to make query `SUM(CASE WHEN dim1 <> '1' THEN 1 ELSE 0 END)`  which will be rewrote by `CaseFilteredAggregatorRule` pass test","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/486639591/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/486759807","html_url":"https://github.com/apache/druid/issues/6743#issuecomment-486759807","issue_url":"https://api.github.com/repos/apache/druid/issues/6743","id":486759807,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4Njc1OTgwNw==","user":{"login":"leerho","id":12941506,"node_id":"MDQ6VXNlcjEyOTQxNTA2","avatar_url":"https://avatars.githubusercontent.com/u/12941506?v=4","gravatar_id":"","url":"https://api.github.com/users/leerho","html_url":"https://github.com/leerho","followers_url":"https://api.github.com/users/leerho/followers","following_url":"https://api.github.com/users/leerho/following{/other_user}","gists_url":"https://api.github.com/users/leerho/gists{/gist_id}","starred_url":"https://api.github.com/users/leerho/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leerho/subscriptions","organizations_url":"https://api.github.com/users/leerho/orgs","repos_url":"https://api.github.com/users/leerho/repos","events_url":"https://api.github.com/users/leerho/events{/privacy}","received_events_url":"https://api.github.com/users/leerho/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-25T17:13:19Z","updated_at":"2019-04-25T17:13:19Z","author_association":"CONTRIBUTOR","body":"@himanshug @gianm \r\n\r\n> I looked into this a long time ago and one way was hacking it was to use \"MemoryRegion\" and \"MemoryRequest\" as in https://github.com/himanshug/druid/blob/growable_aggregator_final/extensions/datasketches/src/main/java/io/druid/query/aggregation/datasketches/theta/SketchResizableBufferAggregator.java#L120 (as you might guess this is based on pretty old version of DS library :) ) .\r\n\r\nThose mechanisms still exist in the current library, the MemoryRequest was just renamed [MemoryRequestServer](https://github.com/DataSketches/memory/blob/master/src/main/java/com/yahoo/memory/MemoryRequestServer.java).   It is essentially the same as the Postgres concept and has been in the library long before we knew about Postgres.  The underlying implementation, of course, would be up to Druid.  \r\n\r\nThe library also has a [DefaultMemoryRequestServer](https://github.com/DataSketches/memory/blob/master/src/main/java/com/yahoo/memory/DefaultMemoryRequestServer.java) which just allocates from the heap if the primary interface has not been implemented.\r\n\r\nCurrently, only the DS-HLL, Theta, and Quantiles sketches are designed to take advantage of this.  But if the demand is there, we could update other relevant sketches in the library to also use this mechanism.  \r\n\r\nThe above MemoryRequestServer interface is pretty simple, but if it doesn't exactly meet your needs, let us know.  We would be happy to work with you as to what makes sense.\r\n\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/486759807/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/486765616","html_url":"https://github.com/apache/druid/pull/6698#issuecomment-486765616","issue_url":"https://api.github.com/repos/apache/druid/issues/6698","id":486765616,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4Njc2NTYxNg==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-25T17:28:54Z","updated_at":"2019-04-25T17:28:54Z","author_association":"CONTRIBUTOR","body":"It sounds simpler than mine. But now, I'm wondering that historicals shouldn't announce segments to the broker in the first place if they are not in the tier the broker is watching. @himanshug what do you think?\r\n\r\n> We will need to put some blurb in release notes for users to make sure and not accidentally have those properties set on coordinator node.\r\n\r\nIt would be best if coordinator can ignore these properties if they are set. Probably it's possible.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/486765616/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/486779724","html_url":"https://github.com/apache/druid/pull/7528#issuecomment-486779724","issue_url":"https://api.github.com/repos/apache/druid/issues/7528","id":486779724,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4Njc3OTcyNA==","user":{"login":"vogievetsky","id":177816,"node_id":"MDQ6VXNlcjE3NzgxNg==","avatar_url":"https://avatars.githubusercontent.com/u/177816?v=4","gravatar_id":"","url":"https://api.github.com/users/vogievetsky","html_url":"https://github.com/vogievetsky","followers_url":"https://api.github.com/users/vogievetsky/followers","following_url":"https://api.github.com/users/vogievetsky/following{/other_user}","gists_url":"https://api.github.com/users/vogievetsky/gists{/gist_id}","starred_url":"https://api.github.com/users/vogievetsky/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vogievetsky/subscriptions","organizations_url":"https://api.github.com/users/vogievetsky/orgs","repos_url":"https://api.github.com/users/vogievetsky/repos","events_url":"https://api.github.com/users/vogievetsky/events{/privacy}","received_events_url":"https://api.github.com/users/vogievetsky/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-25T18:08:19Z","updated_at":"2019-04-25T18:08:19Z","author_association":"CONTRIBUTOR","body":"Looking good. üëç \r\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/486779724/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/486812578","html_url":"https://github.com/apache/druid/pull/6430#issuecomment-486812578","issue_url":"https://api.github.com/repos/apache/druid/issues/6430","id":486812578,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NjgxMjU3OA==","user":{"login":"yurmix","id":1529282,"node_id":"MDQ6VXNlcjE1MjkyODI=","avatar_url":"https://avatars.githubusercontent.com/u/1529282?v=4","gravatar_id":"","url":"https://api.github.com/users/yurmix","html_url":"https://github.com/yurmix","followers_url":"https://api.github.com/users/yurmix/followers","following_url":"https://api.github.com/users/yurmix/following{/other_user}","gists_url":"https://api.github.com/users/yurmix/gists{/gist_id}","starred_url":"https://api.github.com/users/yurmix/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yurmix/subscriptions","organizations_url":"https://api.github.com/users/yurmix/orgs","repos_url":"https://api.github.com/users/yurmix/repos","events_url":"https://api.github.com/users/yurmix/events{/privacy}","received_events_url":"https://api.github.com/users/yurmix/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-25T19:45:33Z","updated_at":"2019-04-25T19:45:33Z","author_association":"CONTRIBUTOR","body":"> @yurmix sorry, I've just checked your last update. Most of my last comments were addressed except these two [...]\r\n\r\nThanks for reminding me, I have addressed one of them and currently reviewing the other.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/486812578/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/486830807","html_url":"https://github.com/apache/druid/pull/7363#issuecomment-486830807","issue_url":"https://api.github.com/repos/apache/druid/issues/7363","id":486830807,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NjgzMDgwNw==","user":{"login":"b-slim","id":7376396,"node_id":"MDQ6VXNlcjczNzYzOTY=","avatar_url":"https://avatars.githubusercontent.com/u/7376396?v=4","gravatar_id":"","url":"https://api.github.com/users/b-slim","html_url":"https://github.com/b-slim","followers_url":"https://api.github.com/users/b-slim/followers","following_url":"https://api.github.com/users/b-slim/following{/other_user}","gists_url":"https://api.github.com/users/b-slim/gists{/gist_id}","starred_url":"https://api.github.com/users/b-slim/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/b-slim/subscriptions","organizations_url":"https://api.github.com/users/b-slim/orgs","repos_url":"https://api.github.com/users/b-slim/repos","events_url":"https://api.github.com/users/b-slim/events{/privacy}","received_events_url":"https://api.github.com/users/b-slim/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-25T20:43:51Z","updated_at":"2019-04-25T20:43:51Z","author_association":"CONTRIBUTOR","body":"@nishantmonu51 am very ignorant of this DropWizard stuff, can you please explain where the metrics are buffered ? and how often cleaned ? how we can make sure it does not overflow ? and how the JMX one works  do we need some Jvm flags to be set to turn it on can you please document how we can test that ? ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/486830807/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/486843576","html_url":"https://github.com/apache/druid/pull/6698#issuecomment-486843576","issue_url":"https://api.github.com/repos/apache/druid/issues/6698","id":486843576,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4Njg0MzU3Ng==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-25T21:25:07Z","updated_at":"2019-04-25T21:25:07Z","author_association":"CONTRIBUTOR","body":"@jihoonson historicals don't announce to either coordinator/broker. coordinator/broker watch that information. so broker needs to stop getting(or discarding) the stuff it doesn't need. \r\n\r\na bit more detail....\r\nin case of \"zookeeper\":  historicals publish information about segments served in specific zookeeper nodes. coordinator/broker watch those paths.\r\n\r\nin case of \"http\" , coordinator/broker send http request to get what segments are served by historical. historical does not need to announce segments anywhere in this case.\r\nBy default historicals are always announcing in zookeeper so that users can seamlessly change between zookeeper or http at broker/coordinator . If someone is using http at all coordinators/brokers, they can change historical config ( druid.announcer.skipSegmentAnnouncementOnZk=false) so that it doesn't announce segments in zookeeper anymore. That property is undocumented currently because of the non-production-ready official status of http stuff.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/486843576/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/486844541","html_url":"https://github.com/apache/druid/pull/7526#issuecomment-486844541","issue_url":"https://api.github.com/repos/apache/druid/issues/7526","id":486844541,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4Njg0NDU0MQ==","user":{"login":"jon-wei","id":8729063,"node_id":"MDQ6VXNlcjg3MjkwNjM=","avatar_url":"https://avatars.githubusercontent.com/u/8729063?v=4","gravatar_id":"","url":"https://api.github.com/users/jon-wei","html_url":"https://github.com/jon-wei","followers_url":"https://api.github.com/users/jon-wei/followers","following_url":"https://api.github.com/users/jon-wei/following{/other_user}","gists_url":"https://api.github.com/users/jon-wei/gists{/gist_id}","starred_url":"https://api.github.com/users/jon-wei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jon-wei/subscriptions","organizations_url":"https://api.github.com/users/jon-wei/orgs","repos_url":"https://api.github.com/users/jon-wei/repos","events_url":"https://api.github.com/users/jon-wei/events{/privacy}","received_events_url":"https://api.github.com/users/jon-wei/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-25T21:28:30Z","updated_at":"2019-04-25T21:28:30Z","author_association":"CONTRIBUTOR","body":"TeamCity inspection report doesn't show any new errors in the files affected by this patch, merging","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/486844541/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/486847379","html_url":"https://github.com/apache/druid/pull/6698#issuecomment-486847379","issue_url":"https://api.github.com/repos/apache/druid/issues/6698","id":486847379,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4Njg0NzM3OQ==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-25T21:38:37Z","updated_at":"2019-04-25T21:38:37Z","author_association":"CONTRIBUTOR","body":"Ah yeah. That sounds correct. Sorry I didn‚Äôt remember correctly what this PR is for because it has been quite a long time since I checked last time. ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/486847379/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/486858327","html_url":"https://github.com/apache/druid/pull/7082#issuecomment-486858327","issue_url":"https://api.github.com/repos/apache/druid/issues/7082","id":486858327,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4Njg1ODMyNw==","user":{"login":"scrawfor","id":7061689,"node_id":"MDQ6VXNlcjcwNjE2ODk=","avatar_url":"https://avatars.githubusercontent.com/u/7061689?v=4","gravatar_id":"","url":"https://api.github.com/users/scrawfor","html_url":"https://github.com/scrawfor","followers_url":"https://api.github.com/users/scrawfor/followers","following_url":"https://api.github.com/users/scrawfor/following{/other_user}","gists_url":"https://api.github.com/users/scrawfor/gists{/gist_id}","starred_url":"https://api.github.com/users/scrawfor/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/scrawfor/subscriptions","organizations_url":"https://api.github.com/users/scrawfor/orgs","repos_url":"https://api.github.com/users/scrawfor/repos","events_url":"https://api.github.com/users/scrawfor/events{/privacy}","received_events_url":"https://api.github.com/users/scrawfor/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-25T22:19:47Z","updated_at":"2019-04-25T22:19:47Z","author_association":"CONTRIBUTOR","body":"I will, but it will most likely be a few weeks until I am able to.\n\nOn Fri, Apr 19, 2019, 8:59 PM Jonathan Wei <notifications@github.com> wrote:\n\n> *@jon-wei* commented on this pull request.\n> ------------------------------\n>\n> In services/src/main/java/org/apache/druid/cli/CliMiddleManager.java\n> <https://github.com/apache/incubator-druid/pull/7082#discussion_r277118169>\n> :\n>\n> > @@ -163,7 +164,8 @@ public WorkerNodeService getWorkerNodeService(WorkerConfig workerConfig)\n>            }\n>          },\n>          new IndexingServiceFirehoseModule(),\n> -        new IndexingServiceTaskLogsModule()\n> +        new IndexingServiceTaskLogsModule(),\n> +        new LookupModule()\n>\n> @scrawfor <https://github.com/scrawfor> #7222\n> <https://github.com/apache/incubator-druid/pull/7222> was merged, can you\n> please rebase when you get a chance?\n>\n> ‚Äî\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/apache/incubator-druid/pull/7082#discussion_r277118169>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/ABV4BOLQJQMHVW74R2PIDR3PRJTFZANCNFSM4GXXJY7Q>\n> .\n>\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/486858327/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/486867721","html_url":"https://github.com/apache/druid/pull/7082#issuecomment-486867721","issue_url":"https://api.github.com/repos/apache/druid/issues/7082","id":486867721,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4Njg2NzcyMQ==","user":{"login":"jon-wei","id":8729063,"node_id":"MDQ6VXNlcjg3MjkwNjM=","avatar_url":"https://avatars.githubusercontent.com/u/8729063?v=4","gravatar_id":"","url":"https://api.github.com/users/jon-wei","html_url":"https://github.com/jon-wei","followers_url":"https://api.github.com/users/jon-wei/followers","following_url":"https://api.github.com/users/jon-wei/following{/other_user}","gists_url":"https://api.github.com/users/jon-wei/gists{/gist_id}","starred_url":"https://api.github.com/users/jon-wei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jon-wei/subscriptions","organizations_url":"https://api.github.com/users/jon-wei/orgs","repos_url":"https://api.github.com/users/jon-wei/repos","events_url":"https://api.github.com/users/jon-wei/events{/privacy}","received_events_url":"https://api.github.com/users/jon-wei/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-25T23:01:27Z","updated_at":"2019-04-25T23:01:27Z","author_association":"CONTRIBUTOR","body":"@scrawfor cool, thanks!","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/486867721/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/486868529","html_url":"https://github.com/apache/druid/pull/7206#issuecomment-486868529","issue_url":"https://api.github.com/repos/apache/druid/issues/7206","id":486868529,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4Njg2ODUyOQ==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-25T23:05:14Z","updated_at":"2019-04-25T23:05:14Z","author_association":"CONTRIBUTOR","body":"this should take http://mail-archives.apache.org/mod_mbox/druid-dev/201904.mbox/browser into consideration, and we should conclude something on that thread.\r\n\r\nI am not clear what are the \"must haves\" that would be enforced in each and every PR. Others should not be used to block a PR or else that is unfair to that PR's author.\r\nMy fear is that Long list of things will further the discrepancy among reviewers leading to some PRs getting stuck because they happened to be reviewed by certain reviewers vs others.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/486868529/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/486872145","html_url":"https://github.com/apache/druid/pull/7551#issuecomment-486872145","issue_url":"https://api.github.com/repos/apache/druid/issues/7551","id":486872145,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4Njg3MjE0NQ==","user":{"login":"vogievetsky","id":177816,"node_id":"MDQ6VXNlcjE3NzgxNg==","avatar_url":"https://avatars.githubusercontent.com/u/177816?v=4","gravatar_id":"","url":"https://api.github.com/users/vogievetsky","html_url":"https://github.com/vogievetsky","followers_url":"https://api.github.com/users/vogievetsky/followers","following_url":"https://api.github.com/users/vogievetsky/following{/other_user}","gists_url":"https://api.github.com/users/vogievetsky/gists{/gist_id}","starred_url":"https://api.github.com/users/vogievetsky/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vogievetsky/subscriptions","organizations_url":"https://api.github.com/users/vogievetsky/orgs","repos_url":"https://api.github.com/users/vogievetsky/repos","events_url":"https://api.github.com/users/vogievetsky/events{/privacy}","received_events_url":"https://api.github.com/users/vogievetsky/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-25T23:23:01Z","updated_at":"2019-04-25T23:23:01Z","author_association":"CONTRIBUTOR","body":"Looks great, üëç ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/486872145/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/486879322","html_url":"https://github.com/apache/druid/pull/7331#issuecomment-486879322","issue_url":"https://api.github.com/repos/apache/druid/issues/7331","id":486879322,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4Njg3OTMyMg==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-26T00:02:26Z","updated_at":"2019-04-26T00:02:26Z","author_association":"CONTRIBUTOR","body":"Hi @samarthjain, now I'm reviewing your PR. Will leave some comments soon.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/486879322/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/486900800","html_url":"https://github.com/apache/druid/issues/7187#issuecomment-486900800","issue_url":"https://api.github.com/repos/apache/druid/issues/7187","id":486900800,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NjkwMDgwMA==","user":{"login":"leerho","id":12941506,"node_id":"MDQ6VXNlcjEyOTQxNTA2","avatar_url":"https://avatars.githubusercontent.com/u/12941506?v=4","gravatar_id":"","url":"https://api.github.com/users/leerho","html_url":"https://github.com/leerho","followers_url":"https://api.github.com/users/leerho/followers","following_url":"https://api.github.com/users/leerho/following{/other_user}","gists_url":"https://api.github.com/users/leerho/gists{/gist_id}","starred_url":"https://api.github.com/users/leerho/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leerho/subscriptions","organizations_url":"https://api.github.com/users/leerho/orgs","repos_url":"https://api.github.com/users/leerho/repos","events_url":"https://api.github.com/users/leerho/events{/privacy}","received_events_url":"https://api.github.com/users/leerho/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-26T02:14:58Z","updated_at":"2019-04-26T02:14:58Z","author_association":"CONTRIBUTOR","body":"@peferron @gianm \r\n\r\nThis sketch has now been released as part of sketches-core 0.13.2 and is fully documented on the website with example and error characterization.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/486900800/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/486901217","html_url":"https://github.com/apache/druid/issues/7161#issuecomment-486901217","issue_url":"https://api.github.com/repos/apache/druid/issues/7161","id":486901217,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NjkwMTIxNw==","user":{"login":"leerho","id":12941506,"node_id":"MDQ6VXNlcjEyOTQxNTA2","avatar_url":"https://avatars.githubusercontent.com/u/12941506?v=4","gravatar_id":"","url":"https://api.github.com/users/leerho","html_url":"https://github.com/leerho","followers_url":"https://api.github.com/users/leerho/followers","following_url":"https://api.github.com/users/leerho/following{/other_user}","gists_url":"https://api.github.com/users/leerho/gists{/gist_id}","starred_url":"https://api.github.com/users/leerho/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leerho/subscriptions","organizations_url":"https://api.github.com/users/leerho/orgs","repos_url":"https://api.github.com/users/leerho/repos","events_url":"https://api.github.com/users/leerho/events{/privacy}","received_events_url":"https://api.github.com/users/leerho/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-26T02:17:15Z","updated_at":"2019-04-26T02:17:15Z","author_association":"CONTRIBUTOR","body":"@gianm \r\n\r\nsee #7187 \r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/486901217/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/486901909","html_url":"https://github.com/apache/druid/pull/7546#issuecomment-486901909","issue_url":"https://api.github.com/repos/apache/druid/issues/7546","id":486901909,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NjkwMTkwOQ==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-26T02:21:17Z","updated_at":"2019-04-26T02:21:17Z","author_association":"CONTRIBUTOR","body":"Tagged 0.15.0 since it fixes bugs that were introduced in patches that are new in 0.15.0.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/486901909/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/486904236","html_url":"https://github.com/apache/druid/pull/6879#issuecomment-486904236","issue_url":"https://api.github.com/repos/apache/druid/issues/6879","id":486904236,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NjkwNDIzNg==","user":{"login":"love1693294577","id":21165046,"node_id":"MDQ6VXNlcjIxMTY1MDQ2","avatar_url":"https://avatars.githubusercontent.com/u/21165046?v=4","gravatar_id":"","url":"https://api.github.com/users/love1693294577","html_url":"https://github.com/love1693294577","followers_url":"https://api.github.com/users/love1693294577/followers","following_url":"https://api.github.com/users/love1693294577/following{/other_user}","gists_url":"https://api.github.com/users/love1693294577/gists{/gist_id}","starred_url":"https://api.github.com/users/love1693294577/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/love1693294577/subscriptions","organizations_url":"https://api.github.com/users/love1693294577/orgs","repos_url":"https://api.github.com/users/love1693294577/repos","events_url":"https://api.github.com/users/love1693294577/events{/privacy}","received_events_url":"https://api.github.com/users/love1693294577/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-26T02:35:07Z","updated_at":"2019-04-26T02:35:07Z","author_association":"NONE","body":"> There is no need to waste memory resources and cpu time on `REALTIME` and `INDEXER_EXECUTOR` nodes.\r\n\r\n---------- Previously the strategy would unnecessarily consider active worker tasks as well------;\r\n\r\nWhat does this mean, I don't quite understand","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/486904236/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/486904297","html_url":"https://github.com/apache/druid/issues/7508#issuecomment-486904297","issue_url":"https://api.github.com/repos/apache/druid/issues/7508","id":486904297,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NjkwNDI5Nw==","user":{"login":"kaka11chen","id":1736049,"node_id":"MDQ6VXNlcjE3MzYwNDk=","avatar_url":"https://avatars.githubusercontent.com/u/1736049?v=4","gravatar_id":"","url":"https://api.github.com/users/kaka11chen","html_url":"https://github.com/kaka11chen","followers_url":"https://api.github.com/users/kaka11chen/followers","following_url":"https://api.github.com/users/kaka11chen/following{/other_user}","gists_url":"https://api.github.com/users/kaka11chen/gists{/gist_id}","starred_url":"https://api.github.com/users/kaka11chen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kaka11chen/subscriptions","organizations_url":"https://api.github.com/users/kaka11chen/orgs","repos_url":"https://api.github.com/users/kaka11chen/repos","events_url":"https://api.github.com/users/kaka11chen/events{/privacy}","received_events_url":"https://api.github.com/users/kaka11chen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-26T02:35:31Z","updated_at":"2019-04-26T02:35:31Z","author_association":"CONTRIBUTOR","body":"@himanshug We found query slow sometimes caused by page major faults, then we found the slab objects memory is too large.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/486904297/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/486908728","html_url":"https://github.com/apache/druid/issues/7523#issuecomment-486908728","issue_url":"https://api.github.com/repos/apache/druid/issues/7523","id":486908728,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NjkwODcyOA==","user":{"login":"maoxiangyi","id":5219923,"node_id":"MDQ6VXNlcjUyMTk5MjM=","avatar_url":"https://avatars.githubusercontent.com/u/5219923?v=4","gravatar_id":"","url":"https://api.github.com/users/maoxiangyi","html_url":"https://github.com/maoxiangyi","followers_url":"https://api.github.com/users/maoxiangyi/followers","following_url":"https://api.github.com/users/maoxiangyi/following{/other_user}","gists_url":"https://api.github.com/users/maoxiangyi/gists{/gist_id}","starred_url":"https://api.github.com/users/maoxiangyi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/maoxiangyi/subscriptions","organizations_url":"https://api.github.com/users/maoxiangyi/orgs","repos_url":"https://api.github.com/users/maoxiangyi/repos","events_url":"https://api.github.com/users/maoxiangyi/events{/privacy}","received_events_url":"https://api.github.com/users/maoxiangyi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-26T03:02:44Z","updated_at":"2019-04-26T03:04:10Z","author_association":"NONE","body":"add disk or node.\r\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/486908728/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/486909115","html_url":"https://github.com/apache/druid/issues/7187#issuecomment-486909115","issue_url":"https://api.github.com/repos/apache/druid/issues/7187","id":486909115,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NjkwOTExNQ==","user":{"login":"peferron","id":7009852,"node_id":"MDQ6VXNlcjcwMDk4NTI=","avatar_url":"https://avatars.githubusercontent.com/u/7009852?v=4","gravatar_id":"","url":"https://api.github.com/users/peferron","html_url":"https://github.com/peferron","followers_url":"https://api.github.com/users/peferron/followers","following_url":"https://api.github.com/users/peferron/following{/other_user}","gists_url":"https://api.github.com/users/peferron/gists{/gist_id}","starred_url":"https://api.github.com/users/peferron/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/peferron/subscriptions","organizations_url":"https://api.github.com/users/peferron/orgs","repos_url":"https://api.github.com/users/peferron/repos","events_url":"https://api.github.com/users/peferron/events{/privacy}","received_events_url":"https://api.github.com/users/peferron/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-26T03:05:11Z","updated_at":"2019-04-26T03:05:11Z","author_association":"CONTRIBUTOR","body":"Thanks @leerho. I'm in vacation atm but should be able to characterize it against a few of our datasets after I'm back in early May.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/486909115/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/486942022","html_url":"https://github.com/apache/druid/issues/7548#issuecomment-486942022","issue_url":"https://api.github.com/repos/apache/druid/issues/7548","id":486942022,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4Njk0MjAyMg==","user":{"login":"vogievetsky","id":177816,"node_id":"MDQ6VXNlcjE3NzgxNg==","avatar_url":"https://avatars.githubusercontent.com/u/177816?v=4","gravatar_id":"","url":"https://api.github.com/users/vogievetsky","html_url":"https://github.com/vogievetsky","followers_url":"https://api.github.com/users/vogievetsky/followers","following_url":"https://api.github.com/users/vogievetsky/following{/other_user}","gists_url":"https://api.github.com/users/vogievetsky/gists{/gist_id}","starred_url":"https://api.github.com/users/vogievetsky/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vogievetsky/subscriptions","organizations_url":"https://api.github.com/users/vogievetsky/orgs","repos_url":"https://api.github.com/users/vogievetsky/repos","events_url":"https://api.github.com/users/vogievetsky/events{/privacy}","received_events_url":"https://api.github.com/users/vogievetsky/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-26T06:29:03Z","updated_at":"2019-04-26T06:29:03Z","author_association":"CONTRIBUTOR","body":"Hi Max,\r\n\r\nCould you post a screenshot please?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/486942022/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/486944479","html_url":"https://github.com/apache/druid/issues/7548#issuecomment-486944479","issue_url":"https://api.github.com/repos/apache/druid/issues/7548","id":486944479,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4Njk0NDQ3OQ==","user":{"login":"hueiyuan","id":49678319,"node_id":"MDQ6VXNlcjQ5Njc4MzE5","avatar_url":"https://avatars.githubusercontent.com/u/49678319?v=4","gravatar_id":"","url":"https://api.github.com/users/hueiyuan","html_url":"https://github.com/hueiyuan","followers_url":"https://api.github.com/users/hueiyuan/followers","following_url":"https://api.github.com/users/hueiyuan/following{/other_user}","gists_url":"https://api.github.com/users/hueiyuan/gists{/gist_id}","starred_url":"https://api.github.com/users/hueiyuan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hueiyuan/subscriptions","organizations_url":"https://api.github.com/users/hueiyuan/orgs","repos_url":"https://api.github.com/users/hueiyuan/repos","events_url":"https://api.github.com/users/hueiyuan/events{/privacy}","received_events_url":"https://api.github.com/users/hueiyuan/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-26T06:40:27Z","updated_at":"2019-04-26T06:40:27Z","author_association":"NONE","body":"Hi, vogievetsky\r\n\r\nthe screenshot is following:\r\n<img width=\"1428\" alt=\"Ëû¢ÂπïÂø´ÁÖß 2019-04-26 ‰∏ãÂçà2 38 33\" src=\"https://user-images.githubusercontent.com/49678319/56788135-30079400-6831-11e9-8e71-52672c116ce2.png\">\r\n\r\nThanks.\r\nMax","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/486944479/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/486981329","html_url":"https://github.com/apache/druid/issues/7523#issuecomment-486981329","issue_url":"https://api.github.com/repos/apache/druid/issues/7523","id":486981329,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4Njk4MTMyOQ==","user":{"login":"itcheng2019","id":47874255,"node_id":"MDQ6VXNlcjQ3ODc0MjU1","avatar_url":"https://avatars.githubusercontent.com/u/47874255?v=4","gravatar_id":"","url":"https://api.github.com/users/itcheng2019","html_url":"https://github.com/itcheng2019","followers_url":"https://api.github.com/users/itcheng2019/followers","following_url":"https://api.github.com/users/itcheng2019/following{/other_user}","gists_url":"https://api.github.com/users/itcheng2019/gists{/gist_id}","starred_url":"https://api.github.com/users/itcheng2019/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/itcheng2019/subscriptions","organizations_url":"https://api.github.com/users/itcheng2019/orgs","repos_url":"https://api.github.com/users/itcheng2019/repos","events_url":"https://api.github.com/users/itcheng2019/events{/privacy}","received_events_url":"https://api.github.com/users/itcheng2019/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-26T08:53:25Z","updated_at":"2019-04-26T08:53:51Z","author_association":"NONE","body":"> Ê∑ªÂä†Á£ÅÁõòÊàñËäÇÁÇπ„ÄÇ\r\nI don't understand what you mean. Can you be specific?\r\n@maoxiangyi ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/486981329/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/487114403","html_url":"https://github.com/apache/druid/pull/7555#issuecomment-487114403","issue_url":"https://api.github.com/repos/apache/druid/issues/7555","id":487114403,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NzExNDQwMw==","user":{"login":"vogievetsky","id":177816,"node_id":"MDQ6VXNlcjE3NzgxNg==","avatar_url":"https://avatars.githubusercontent.com/u/177816?v=4","gravatar_id":"","url":"https://api.github.com/users/vogievetsky","html_url":"https://github.com/vogievetsky","followers_url":"https://api.github.com/users/vogievetsky/followers","following_url":"https://api.github.com/users/vogievetsky/following{/other_user}","gists_url":"https://api.github.com/users/vogievetsky/gists{/gist_id}","starred_url":"https://api.github.com/users/vogievetsky/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vogievetsky/subscriptions","organizations_url":"https://api.github.com/users/vogievetsky/orgs","repos_url":"https://api.github.com/users/vogievetsky/repos","events_url":"https://api.github.com/users/vogievetsky/events{/privacy}","received_events_url":"https://api.github.com/users/vogievetsky/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-26T16:14:45Z","updated_at":"2019-04-26T16:14:45Z","author_association":"CONTRIBUTOR","body":"Looks good to go once #7425 is merged","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/487114403/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/487115476","html_url":"https://github.com/apache/druid/issues/7559#issuecomment-487115476","issue_url":"https://api.github.com/repos/apache/druid/issues/7559","id":487115476,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NzExNTQ3Ng==","user":{"login":"vogievetsky","id":177816,"node_id":"MDQ6VXNlcjE3NzgxNg==","avatar_url":"https://avatars.githubusercontent.com/u/177816?v=4","gravatar_id":"","url":"https://api.github.com/users/vogievetsky","html_url":"https://github.com/vogievetsky","followers_url":"https://api.github.com/users/vogievetsky/followers","following_url":"https://api.github.com/users/vogievetsky/following{/other_user}","gists_url":"https://api.github.com/users/vogievetsky/gists{/gist_id}","starred_url":"https://api.github.com/users/vogievetsky/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vogievetsky/subscriptions","organizations_url":"https://api.github.com/users/vogievetsky/orgs","repos_url":"https://api.github.com/users/vogievetsky/repos","events_url":"https://api.github.com/users/vogievetsky/events{/privacy}","received_events_url":"https://api.github.com/users/vogievetsky/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-26T16:18:14Z","updated_at":"2019-04-26T16:18:14Z","author_association":"CONTRIBUTOR","body":"I can confirm that this is an issue, should be tagged as Web console / Bug","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/487115476/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/487115840","html_url":"https://github.com/apache/druid/issues/7560#issuecomment-487115840","issue_url":"https://api.github.com/repos/apache/druid/issues/7560","id":487115840,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NzExNTg0MA==","user":{"login":"vogievetsky","id":177816,"node_id":"MDQ6VXNlcjE3NzgxNg==","avatar_url":"https://avatars.githubusercontent.com/u/177816?v=4","gravatar_id":"","url":"https://api.github.com/users/vogievetsky","html_url":"https://github.com/vogievetsky","followers_url":"https://api.github.com/users/vogievetsky/followers","following_url":"https://api.github.com/users/vogievetsky/following{/other_user}","gists_url":"https://api.github.com/users/vogievetsky/gists{/gist_id}","starred_url":"https://api.github.com/users/vogievetsky/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vogievetsky/subscriptions","organizations_url":"https://api.github.com/users/vogievetsky/orgs","repos_url":"https://api.github.com/users/vogievetsky/repos","events_url":"https://api.github.com/users/vogievetsky/events{/privacy}","received_events_url":"https://api.github.com/users/vogievetsky/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-26T16:19:22Z","updated_at":"2019-04-26T16:19:22Z","author_association":"CONTRIBUTOR","body":"There is no way to do this right now. This should be tagged as a Web console / Feature request","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/487115840/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/487141507","html_url":"https://github.com/apache/druid/pull/6430#issuecomment-487141507","issue_url":"https://api.github.com/repos/apache/druid/issues/6430","id":487141507,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NzE0MTUwNw==","user":{"login":"yurmix","id":1529282,"node_id":"MDQ6VXNlcjE1MjkyODI=","avatar_url":"https://avatars.githubusercontent.com/u/1529282?v=4","gravatar_id":"","url":"https://api.github.com/users/yurmix","html_url":"https://github.com/yurmix","followers_url":"https://api.github.com/users/yurmix/followers","following_url":"https://api.github.com/users/yurmix/following{/other_user}","gists_url":"https://api.github.com/users/yurmix/gists{/gist_id}","starred_url":"https://api.github.com/users/yurmix/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yurmix/subscriptions","organizations_url":"https://api.github.com/users/yurmix/orgs","repos_url":"https://api.github.com/users/yurmix/repos","events_url":"https://api.github.com/users/yurmix/events{/privacy}","received_events_url":"https://api.github.com/users/yurmix/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-26T17:42:28Z","updated_at":"2019-04-26T17:42:28Z","author_association":"CONTRIBUTOR","body":"> Hmm, let me add some more details. `yielder` is updated in this `if` clause which should be used to iterate all values in it. However, in `hasNext()`, it only checks `expectedBucket` is less than `endTime`. Since `expectedBucket` is also updated in this `if` clause, `hasNext()` can return false even though `yielder` is not used yet.\r\n\r\nThe reason we need `expectedBucket` is that `RowBucketIterable` needs to return empty row buckets for periods with no rows. That's why it traverses over `intervals` in addition to the rows `seq`.\r\nI added a check for yielder as well to `hasNext()`, in addition to `expectedBucket`.\r\n\r\nI think there could be a more elegant way for traversing over two levels (intervals/periods and rows) when one does not directly contain the other, but I won't be able to refactor it for this release.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/487141507/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/487198796","html_url":"https://github.com/apache/druid/issues/7561#issuecomment-487198796","issue_url":"https://api.github.com/repos/apache/druid/issues/7561","id":487198796,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NzE5ODc5Ng==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-26T20:57:36Z","updated_at":"2019-04-26T20:57:36Z","author_association":"CONTRIBUTOR","body":"It should be in the JDBC connection properties, which are separate from the URL. There's an example on http://druid.io/docs/latest/querying/sql.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/487198796/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/487199517","html_url":"https://github.com/apache/druid/issues/7486#issuecomment-487199517","issue_url":"https://api.github.com/repos/apache/druid/issues/7486","id":487199517,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NzE5OTUxNw==","user":{"login":"jon-wei","id":8729063,"node_id":"MDQ6VXNlcjg3MjkwNjM=","avatar_url":"https://avatars.githubusercontent.com/u/8729063?v=4","gravatar_id":"","url":"https://api.github.com/users/jon-wei","html_url":"https://github.com/jon-wei","followers_url":"https://api.github.com/users/jon-wei/followers","following_url":"https://api.github.com/users/jon-wei/following{/other_user}","gists_url":"https://api.github.com/users/jon-wei/gists{/gist_id}","starred_url":"https://api.github.com/users/jon-wei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jon-wei/subscriptions","organizations_url":"https://api.github.com/users/jon-wei/orgs","repos_url":"https://api.github.com/users/jon-wei/repos","events_url":"https://api.github.com/users/jon-wei/events{/privacy}","received_events_url":"https://api.github.com/users/jon-wei/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-26T21:00:38Z","updated_at":"2019-04-26T21:00:38Z","author_association":"CONTRIBUTOR","body":"Addressed by #7526 ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/487199517/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/487200321","html_url":"https://github.com/apache/druid/pull/7425#issuecomment-487200321","issue_url":"https://api.github.com/repos/apache/druid/issues/7425","id":487200321,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NzIwMDMyMQ==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-26T21:03:16Z","updated_at":"2019-04-26T21:03:16Z","author_association":"CONTRIBUTOR","body":"Is this patch ready to merge? Anything I can help with?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/487200321/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/487202071","html_url":"https://github.com/apache/druid/pull/7425#issuecomment-487202071","issue_url":"https://api.github.com/repos/apache/druid/issues/7425","id":487202071,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NzIwMjA3MQ==","user":{"login":"surekhasaharan","id":13008746,"node_id":"MDQ6VXNlcjEzMDA4NzQ2","avatar_url":"https://avatars.githubusercontent.com/u/13008746?v=4","gravatar_id":"","url":"https://api.github.com/users/surekhasaharan","html_url":"https://github.com/surekhasaharan","followers_url":"https://api.github.com/users/surekhasaharan/followers","following_url":"https://api.github.com/users/surekhasaharan/following{/other_user}","gists_url":"https://api.github.com/users/surekhasaharan/gists{/gist_id}","starred_url":"https://api.github.com/users/surekhasaharan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/surekhasaharan/subscriptions","organizations_url":"https://api.github.com/users/surekhasaharan/orgs","repos_url":"https://api.github.com/users/surekhasaharan/repos","events_url":"https://api.github.com/users/surekhasaharan/events{/privacy}","received_events_url":"https://api.github.com/users/surekhasaharan/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-26T21:09:01Z","updated_at":"2019-04-26T21:09:01Z","author_association":"NONE","body":"@leventov any more comments, specifically [here](https://github.com/apache/incubator-druid/pull/7425#discussion_r278630044)","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/487202071/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/487203922","html_url":"https://github.com/apache/druid/pull/7490#issuecomment-487203922","issue_url":"https://api.github.com/repos/apache/druid/issues/7490","id":487203922,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NzIwMzkyMg==","user":{"login":"jon-wei","id":8729063,"node_id":"MDQ6VXNlcjg3MjkwNjM=","avatar_url":"https://avatars.githubusercontent.com/u/8729063?v=4","gravatar_id":"","url":"https://api.github.com/users/jon-wei","html_url":"https://github.com/jon-wei","followers_url":"https://api.github.com/users/jon-wei/followers","following_url":"https://api.github.com/users/jon-wei/following{/other_user}","gists_url":"https://api.github.com/users/jon-wei/gists{/gist_id}","starred_url":"https://api.github.com/users/jon-wei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jon-wei/subscriptions","organizations_url":"https://api.github.com/users/jon-wei/orgs","repos_url":"https://api.github.com/users/jon-wei/repos","events_url":"https://api.github.com/users/jon-wei/events{/privacy}","received_events_url":"https://api.github.com/users/jon-wei/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-26T21:16:07Z","updated_at":"2019-04-26T21:16:07Z","author_association":"CONTRIBUTOR","body":"LGTM after CI","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/487203922/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/487233310","html_url":"https://github.com/apache/druid/pull/7558#issuecomment-487233310","issue_url":"https://api.github.com/repos/apache/druid/issues/7558","id":487233310,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NzIzMzMxMA==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-26T23:45:58Z","updated_at":"2019-04-26T23:45:58Z","author_association":"CONTRIBUTOR","body":"Also, please check the CI failure. Looks that they are failing because of the changed error message.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/487233310/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/487248941","html_url":"https://github.com/apache/druid/pull/6430#issuecomment-487248941","issue_url":"https://api.github.com/repos/apache/druid/issues/6430","id":487248941,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NzI0ODk0MQ==","user":{"login":"yurmix","id":1529282,"node_id":"MDQ6VXNlcjE1MjkyODI=","avatar_url":"https://avatars.githubusercontent.com/u/1529282?v=4","gravatar_id":"","url":"https://api.github.com/users/yurmix","html_url":"https://github.com/yurmix","followers_url":"https://api.github.com/users/yurmix/followers","following_url":"https://api.github.com/users/yurmix/following{/other_user}","gists_url":"https://api.github.com/users/yurmix/gists{/gist_id}","starred_url":"https://api.github.com/users/yurmix/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yurmix/subscriptions","organizations_url":"https://api.github.com/users/yurmix/orgs","repos_url":"https://api.github.com/users/yurmix/repos","events_url":"https://api.github.com/users/yurmix/events{/privacy}","received_events_url":"https://api.github.com/users/yurmix/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-27T02:55:29Z","updated_at":"2019-04-27T02:55:29Z","author_association":"CONTRIBUTOR","body":"@jihoonson thanks for your dedication and for the insightful review!","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/487248941/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":1,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/487249093","html_url":"https://github.com/apache/druid/issues/6320#issuecomment-487249093","issue_url":"https://api.github.com/repos/apache/druid/issues/6320","id":487249093,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NzI0OTA5Mw==","user":{"login":"yurmix","id":1529282,"node_id":"MDQ6VXNlcjE1MjkyODI=","avatar_url":"https://avatars.githubusercontent.com/u/1529282?v=4","gravatar_id":"","url":"https://api.github.com/users/yurmix","html_url":"https://github.com/yurmix","followers_url":"https://api.github.com/users/yurmix/followers","following_url":"https://api.github.com/users/yurmix/following{/other_user}","gists_url":"https://api.github.com/users/yurmix/gists{/gist_id}","starred_url":"https://api.github.com/users/yurmix/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yurmix/subscriptions","organizations_url":"https://api.github.com/users/yurmix/orgs","repos_url":"https://api.github.com/users/yurmix/repos","events_url":"https://api.github.com/users/yurmix/events{/privacy}","received_events_url":"https://api.github.com/users/yurmix/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-27T02:58:08Z","updated_at":"2019-04-27T02:58:08Z","author_association":"CONTRIBUTOR","body":"Fixed with #6430","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/487249093/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/487340418","html_url":"https://github.com/apache/druid/issues/6134#issuecomment-487340418","issue_url":"https://api.github.com/repos/apache/druid/issues/6134","id":487340418,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NzM0MDQxOA==","user":{"login":"hienpham2tiki","id":12573516,"node_id":"MDQ6VXNlcjEyNTczNTE2","avatar_url":"https://avatars.githubusercontent.com/u/12573516?v=4","gravatar_id":"","url":"https://api.github.com/users/hienpham2tiki","html_url":"https://github.com/hienpham2tiki","followers_url":"https://api.github.com/users/hienpham2tiki/followers","following_url":"https://api.github.com/users/hienpham2tiki/following{/other_user}","gists_url":"https://api.github.com/users/hienpham2tiki/gists{/gist_id}","starred_url":"https://api.github.com/users/hienpham2tiki/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/hienpham2tiki/subscriptions","organizations_url":"https://api.github.com/users/hienpham2tiki/orgs","repos_url":"https://api.github.com/users/hienpham2tiki/repos","events_url":"https://api.github.com/users/hienpham2tiki/events{/privacy}","received_events_url":"https://api.github.com/users/hienpham2tiki/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-28T03:50:24Z","updated_at":"2019-04-28T03:50:24Z","author_association":"NONE","body":"Same :( ","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/487340418/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/487392418","html_url":"https://github.com/apache/druid/issues/6993#issuecomment-487392418","issue_url":"https://api.github.com/repos/apache/druid/issues/6993","id":487392418,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NzM5MjQxOA==","user":{"login":"sascha-coenen","id":1635350,"node_id":"MDQ6VXNlcjE2MzUzNTA=","avatar_url":"https://avatars.githubusercontent.com/u/1635350?v=4","gravatar_id":"","url":"https://api.github.com/users/sascha-coenen","html_url":"https://github.com/sascha-coenen","followers_url":"https://api.github.com/users/sascha-coenen/followers","following_url":"https://api.github.com/users/sascha-coenen/following{/other_user}","gists_url":"https://api.github.com/users/sascha-coenen/gists{/gist_id}","starred_url":"https://api.github.com/users/sascha-coenen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sascha-coenen/subscriptions","organizations_url":"https://api.github.com/users/sascha-coenen/orgs","repos_url":"https://api.github.com/users/sascha-coenen/repos","events_url":"https://api.github.com/users/sascha-coenen/events{/privacy}","received_events_url":"https://api.github.com/users/sascha-coenen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-28T16:05:24Z","updated_at":"2019-04-28T16:05:24Z","author_association":"NONE","body":"\r\nI **LOVE LOVE LOVE** the motion to work on dynamic prioritisation and laning and I also like these two terms. \r\n\r\nActually I was thinking about the same feature for a long time. I agree to your problem statement BUT I would model the problem quite differently. I believe to have an alternative proposal to make which would be similarly easy to implement but lead to a superior system behaviour (more automatic fairness, more control authority by admin, more self-healing) I think it might be looked at as being combinable into the existing proposal and some parts of my proposal below can be considered optional. \r\n\r\n---\r\n\r\nAs was already stated, internally, Druid already has a query prioritisation mechanism, but out of the box, this priority can only be specified by a client as a static value.\r\n\r\nAsking for a \"dynamic prioritisation\" is already implicitly formulating that there are **several aspects that influence a query's priority**. \r\n\r\n(Some of these are intrinsic - meaning that Druid can compute them itself. Some are extrinsic - they are known only by an admin/client/user.)\r\n\r\n**(a) [extrinsic] the user context/intention** \r\n- how urgent is the query\r\nis the query originating from an interactive system or is it a report query that may take a long time.\r\n- how important is the user - CEO/VIP/customer/employee/backend-process\r\n\r\n**(b) [intrinsic] the query's weight** \r\n- an estimation of how long it takes to execute or how much computational power is needed\r\n\r\n**(c) [intrinsic] the system state**\r\n- how much of the query result is already cached\r\n- is the system idle or under heavy load\r\n\r\n**(d) [intrinsic] the system/user's history**\r\n- how much strain has a user put onto the system recently. One might want to down-prioritise queries originating from a heavy-hitter over time or after a quota is reached to give other more modest users also a fair share.\r\n\r\n---\r\n\r\n**Alternative Proposal**\r\nLet me say for each of the above how I would model them individually and then how those pieces could be put together:\r\n\r\n**(a) \"the extrinsic context\"**\r\nTo model the extrinsic input, a query should be associated with a logical token that an admin can map to certain parameterizations. I'm used to calling such a logical token a \"resource-pool\" although I don't consider it a good name. Basically, instead of directly setting a \"priority\" inside of a query's context object, I would instead propose to specify a freely chosen logical resource pool name in the same manner.\r\n\r\n```\r\n{\r\n    \"type\": \"topN\",\r\n    \"context\": {\r\n        \"resource-pool\": \"interactive-customer-query\"\r\n    }\r\n}\r\n```\r\n\r\nAn admin can pre-configure resource-pools and then queries can refer to them. An unknown resource pool or missing declaration could then map to a \"default\" resource pool. \r\n\r\n\r\n**(b) \"computing a query weight\"**\r\n- given an incoming query, a broker would first determine a weight for it.\r\n- one could make this mechanism pluggable to have a smooth migration path.\r\n-- A simple strategy would assign each query the same weight.\r\n-- A legacy strategy could set the query weight to be equal to the query priority set in the query context object.\r\n-- A similarly simple strategy could look up a static query weight from a resource-pool.\r\n(This would then be functionally equivalent to the current way of setting priorities in the query context)\r\n-- Even a realistic query weight is rather straightforward and easy to implement:\r\n```    \r\n    weight := #segments * #metrics * #splits * selectivity\r\n\r\n    # stands for number-of\r\n    selectivity means which fraction of records need to be scanned due to the given filter condition.\r\n```    \r\n\r\n**(c) \"the system state\"**\r\n- similar to a query weight, the system state can also be modelled as another weight that can be combined with a query-weight and other inputs to form an eventual query priority.\r\n- this is where Gian's proposal plugs in. \r\n- (c1) \"system is under heavy load\"\r\n--this increases the weight and ends up mapping more queries to low priorities.\r\n- (c2) \"query results are partially cached\"\r\n-- if a certain fraction of a query is cached, this should reduce the query weight. \r\n-- if a broker can determine which fraction of a query is cached it would reduce the query weight accordingly\r\n    `query-weight := query-weight * %cached `\r\n-- the broker then sends the query along with its weight to the historical, which can optionally further discount the given query weight by observing it's local cache situation.\r\n\r\n**(d) \"the system/user's history\"**\r\n- an additional weight can be computed based on a user's or resource-pool's query history this weight acts as a penalty.\r\n- a broker could keep a temporally-discounted sum over all query-weights per connection or per resource pool (or both)\r\n- due to a mathematical argument, there exists only a single temporal discounting function which is rational/consistent, which is exponential temporal discounting. This is nice two times over because a) it means one does not need to make this weighting strategy pluggable necessarily and b) the exponential function has nice computational properties which allow for very efficient incremental computation of an \"eternal running sum\"\r\n`\r\ntemporal-weight := sum ( weight(query[i]) * exp( now() - time(query[i]) ) )\r\n`\r\n\r\n---\r\n\r\n**Putting those pieces together:**\r\n- a client annotates a query with a resource pool name like \"my-pool\" instead of directly specifying a static priority.\r\n- a broker receives the query and computes a weight\r\n  `weight := query-weight * system-weight * temporal-discount`\r\n- broker sends query and weight to the historicals. Alternatively, the broker can turn the weight into a priority and send this.\r\n- historicals receive query along with weight and either treat the weight as a priority and follow their current scheduling logic, or alternatively, in a sophisticated setup, a historical could further modulate the weight based on its local conditions like \"local load condition\" or \"local cache\"\r\n- the broker also uses the resource pool name to lookup configuration attributes which can influence/modulate the weight computations, for instance:\r\n-- base-offsets == laning\r\n-- weighting factors\r\n-- directives as to whether to engage or ignore a certain criteria or stage in the weight computation.\r\n-- specification of which pluggable strategy to use.\r\n-- half-life for exponential temporal discounting.\r\n-- in short, any parameterization for the process of computing a dynamic query priority.\r\n\r\n---\r\n\r\nAlthough it might seem like a nice-to-have component, it is especially the incorporation of an exponential temporal discounting that would lead to a self-healing system that also has automatic fairness.\r\nThere would never have to any query that need to be rejected. Queries might simply get such high weights that it will be never their turn to compute which might eventually time them out.\r\nLikewise, users pinging the system to death with massive amounts of queries will not be able to impact other more modest users. \r\n\r\nAll of the above might sound complex on paper but even if all got implemented, this would still be very straightforward and easy to do and would constitute a minor effort.\r\n\r\nThere are more sophisticated solutions, which allow a query to move from one lane to another one.\r\n\r\nLastly, although I agree that one might want to start small, I consider it useful and necessary to try to formulate a \"true north\" vision nonetheless - an ideal, fully fledged solution. One can then still implement only part of it, but it allows for validating whether that first step is well aligned with what potential later steps one might want to take.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/487392418/reactions","total_count":2,"+1":1,"-1":0,"laugh":0,"hooray":1,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/487403390","html_url":"https://github.com/apache/druid/issues/7565#issuecomment-487403390","issue_url":"https://api.github.com/repos/apache/druid/issues/7565","id":487403390,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NzQwMzM5MA==","user":{"login":"vogievetsky","id":177816,"node_id":"MDQ6VXNlcjE3NzgxNg==","avatar_url":"https://avatars.githubusercontent.com/u/177816?v=4","gravatar_id":"","url":"https://api.github.com/users/vogievetsky","html_url":"https://github.com/vogievetsky","followers_url":"https://api.github.com/users/vogievetsky/followers","following_url":"https://api.github.com/users/vogievetsky/following{/other_user}","gists_url":"https://api.github.com/users/vogievetsky/gists{/gist_id}","starred_url":"https://api.github.com/users/vogievetsky/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vogievetsky/subscriptions","organizations_url":"https://api.github.com/users/vogievetsky/orgs","repos_url":"https://api.github.com/users/vogievetsky/repos","events_url":"https://api.github.com/users/vogievetsky/events{/privacy}","received_events_url":"https://api.github.com/users/vogievetsky/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-28T18:21:10Z","updated_at":"2019-04-28T18:21:10Z","author_association":"CONTRIBUTOR","body":"This seems to be directly related to https://github.com/apache/incubator-druid/issues/7563","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/487403390/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/487415489","html_url":"https://github.com/apache/druid/pull/7558#issuecomment-487415489","issue_url":"https://api.github.com/repos/apache/druid/issues/7558","id":487415489,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NzQxNTQ4OQ==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-28T21:07:40Z","updated_at":"2019-04-28T21:07:40Z","author_association":"CONTRIBUTOR","body":"> Also, please check the CI failure. Looks that they are failing because of the changed error message.\r\n\r\nI think I fixed this in the latest commit.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/487415489/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/487416561","html_url":"https://github.com/apache/druid/pull/7293#issuecomment-487416561","issue_url":"https://api.github.com/repos/apache/druid/issues/7293","id":487416561,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NzQxNjU2MQ==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-28T21:22:01Z","updated_at":"2019-04-28T21:22:01Z","author_association":"CONTRIBUTOR","body":"I just did a force-push so I could reword the original commit message. It wasn't accurate anymore.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/487416561/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/487418080","html_url":"https://github.com/apache/druid/issues/7525#issuecomment-487418080","issue_url":"https://api.github.com/repos/apache/druid/issues/7525","id":487418080,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NzQxODA4MA==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-28T21:44:37Z","updated_at":"2019-04-28T21:44:37Z","author_association":"CONTRIBUTOR","body":"> After sleeping on it and doing some experiments, I think the most useful thing would be to do the cartesian product of all multi-value inputs which are not part of an array function, done by either extending the `map` function to allow it to just implicitly do this if given more than one argument, or maybe better an explicit `cartesian_map` function.\r\n\r\nThis seems reasonable to me. Basically it's saying that the user has the ability to declare that they want to treat an input as an array, in which case they use array functions. Or they can use scalar functions on it, in which case we map over all the inputs (possibly the cartesian product of all multi-value inputs if there are more than one).","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/487418080/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/487420310","html_url":"https://github.com/apache/druid/issues/7563#issuecomment-487420310","issue_url":"https://api.github.com/repos/apache/druid/issues/7563","id":487420310,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NzQyMDMxMA==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-28T22:19:33Z","updated_at":"2019-04-28T22:19:33Z","author_association":"CONTRIBUTOR","body":"> The permissions needed for system table access could be adjusted to not require additional permissions beyond datasource-specific permissions for non-server related info (segments, tasks) and to require STATE-read permissions for server-related tables (servers, server_segments) to be consistent with the non-SQL APIs.\r\n\r\nIMO it makes the most sense to align the permissions for SQL system tables with the permissions for similar metadata APIs as closely as possible. So, doing the above.\r\n\r\n> It's worth mentioning here that there is some inconsistency in the non-SQL task APIs themselves. The task APIs in OverlordResource only require datasource permissions, but the running tasks do contain information about where they exist (server-related info). On the other hand, retrieving task info from the middle managers via WorkerResource requires STATE but not datasource permissions.\r\n\r\nOne major issue here is that nothing really defines what \"STATE\" and \"CONFIG\" are supposed to mean (other than access to an enumerated list of endpoints). My general feeling is that if you have \"STATE\" permissions it's reasonable to be able to see any sort of metadata (including datasources you don't have specifically have read access grants for). If you couldn't, then you'd presumably get partial metadata, which would be a misleading view of cluster state. But that isn't written down anywhere that I can see, so it's a missing aspect to the permissions model and the documentation.\r\n\r\nIn the specific case you brought up, the only change I might make (given the above reasonable) is expanding the permissions such that you can see all tasks, for any datasource, if you have \"STATE\" permissions.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/487420310/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/487440491","html_url":"https://github.com/apache/druid/issues/7565#issuecomment-487440491","issue_url":"https://api.github.com/repos/apache/druid/issues/7565","id":487440491,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NzQ0MDQ5MQ==","user":{"login":"cttq-wubin","id":31197733,"node_id":"MDQ6VXNlcjMxMTk3NzMz","avatar_url":"https://avatars.githubusercontent.com/u/31197733?v=4","gravatar_id":"","url":"https://api.github.com/users/cttq-wubin","html_url":"https://github.com/cttq-wubin","followers_url":"https://api.github.com/users/cttq-wubin/followers","following_url":"https://api.github.com/users/cttq-wubin/following{/other_user}","gists_url":"https://api.github.com/users/cttq-wubin/gists{/gist_id}","starred_url":"https://api.github.com/users/cttq-wubin/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/cttq-wubin/subscriptions","organizations_url":"https://api.github.com/users/cttq-wubin/orgs","repos_url":"https://api.github.com/users/cttq-wubin/repos","events_url":"https://api.github.com/users/cttq-wubin/events{/privacy}","received_events_url":"https://api.github.com/users/cttq-wubin/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-29T02:59:53Z","updated_at":"2019-04-29T02:59:53Z","author_association":"NONE","body":"> This seems to be directly related to #7563\r\n@vogievetsky \r\nThank you for your answer, this problem has been resolved!\r\nHowever, another error occurred when I used this account to connect to BI via JDBC, There is no error if the account is admin!\r\n\r\nThe connection information:\r\norg.apache.calcite.avatica.remote.Driver\r\njdbc:avatica:remote:url=http://BROKER:8082/druid/v2/sql/avatica/\r\n\r\nThe error message is as follows:\r\n\r\norg.apache.druid.server.security.ForbiddenException: Allowed:false, Message:\r\n\tat org.apache.druid.sql.SqlLifecycle.planAndAuthorize(SqlLifecycle.java:212)\r\n\tat org.apache.druid.sql.avatica.DruidStatement.prepare(DruidStatement.java:156)\r\n\tat org.apache.druid.sql.avatica.DruidMeta.prepareAndExecute(DruidMeta.java:191)\r\n\tat org.apache.druid.sql.avatica.DruidMeta.sqlResultSet(DruidMeta.java:616)\r\n\tat org.apache.druid.sql.avatica.DruidMeta.getTableTypes(DruidMeta.java:507)\r\n\tat org.apache.calcite.avatica.remote.LocalService.apply(LocalService.java:167)\r\n\tat org.apache.calcite.avatica.remote.Service$TableTypesRequest.accept(Service.java:525)\r\n\tat org.apache.calcite.avatica.remote.Service$TableTypesRequest.accept(Service.java:510)\r\n\tat org.apache.calcite.avatica.remote.AbstractHandler.apply(AbstractHandler.java:94)\r\n\tat org.apache.calcite.avatica.remote.JsonHandler.apply(JsonHandler.java:52)\r\n\tat org.apache.calcite.avatica.server.AvaticaJsonHandler.handle(AvaticaJsonHandler.java:130)\r\n\tat org.apache.druid.sql.avatica.DruidAvaticaHandler.handle(DruidAvaticaHandler.java:59)\r\n\tat org.eclipse.jetty.server.handler.HandlerList.handle(HandlerList.java:61)\r\n\tat org.eclipse.jetty.server.handler.StatisticsHandler.handle(StatisticsHandler.java:169)\r\n\tat org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132)\r\n\tat org.eclipse.jetty.server.Server.handle(Server.java:531)\r\n\tat org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:352)\r\n\tat org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:260)\r\n\tat org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:281)\r\n\tat org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:102)\r\n\tat org.eclipse.jetty.io.ChannelEndPoint$2.run(ChannelEndPoint.java:118)\r\n\tat org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.runTask(EatWhatYouKill.java:333)\r\n\tat org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:310)\r\n\tat org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.tryProduce(EatWhatYouKill.java:168)\r\n\tat org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.run(EatWhatYouKill.java:126)\r\n\tat org.eclipse.jetty.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:366)\r\n\tat org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:760)\r\n\tat org.eclipse.jetty.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:678)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/487440491/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/487545474","html_url":"https://github.com/apache/druid/issues/7439#issuecomment-487545474","issue_url":"https://api.github.com/repos/apache/druid/issues/7439","id":487545474,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NzU0NTQ3NA==","user":{"login":"leventov","id":609240,"node_id":"MDQ6VXNlcjYwOTI0MA==","avatar_url":"https://avatars.githubusercontent.com/u/609240?v=4","gravatar_id":"","url":"https://api.github.com/users/leventov","html_url":"https://github.com/leventov","followers_url":"https://api.github.com/users/leventov/followers","following_url":"https://api.github.com/users/leventov/following{/other_user}","gists_url":"https://api.github.com/users/leventov/gists{/gist_id}","starred_url":"https://api.github.com/users/leventov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leventov/subscriptions","organizations_url":"https://api.github.com/users/leventov/orgs","repos_url":"https://api.github.com/users/leventov/repos","events_url":"https://api.github.com/users/leventov/events{/privacy}","received_events_url":"https://api.github.com/users/leventov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-29T11:33:04Z","updated_at":"2019-04-29T11:33:04Z","author_association":"MEMBER","body":"For new APIs, it's better to use `PUT` for endpoints like `.../markUsed` and `.../markUnused`. It's semantically more correct than `POST`.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/487545474/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/487546223","html_url":"https://github.com/apache/druid/issues/7439#issuecomment-487546223","issue_url":"https://api.github.com/repos/apache/druid/issues/7439","id":487546223,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NzU0NjIyMw==","user":{"login":"leventov","id":609240,"node_id":"MDQ6VXNlcjYwOTI0MA==","avatar_url":"https://avatars.githubusercontent.com/u/609240?v=4","gravatar_id":"","url":"https://api.github.com/users/leventov","html_url":"https://github.com/leventov","followers_url":"https://api.github.com/users/leventov/followers","following_url":"https://api.github.com/users/leventov/following{/other_user}","gists_url":"https://api.github.com/users/leventov/gists{/gist_id}","starred_url":"https://api.github.com/users/leventov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leventov/subscriptions","organizations_url":"https://api.github.com/users/leventov/orgs","repos_url":"https://api.github.com/users/leventov/repos","events_url":"https://api.github.com/users/leventov/events{/privacy}","received_events_url":"https://api.github.com/users/leventov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-29T11:36:17Z","updated_at":"2019-04-29T11:36:17Z","author_association":"MEMBER","body":"> Updated proposal to change PUT to POST as PUT is supposed to be idempotent and these API's may not be idempotent if invoked multiple times.\r\n\r\n@surekhasaharan how the API may not be idempotent?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/487546223/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/487634703","html_url":"https://github.com/apache/druid/issues/7439#issuecomment-487634703","issue_url":"https://api.github.com/repos/apache/druid/issues/7439","id":487634703,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NzYzNDcwMw==","user":{"login":"surekhasaharan","id":13008746,"node_id":"MDQ6VXNlcjEzMDA4NzQ2","avatar_url":"https://avatars.githubusercontent.com/u/13008746?v=4","gravatar_id":"","url":"https://api.github.com/users/surekhasaharan","html_url":"https://github.com/surekhasaharan","followers_url":"https://api.github.com/users/surekhasaharan/followers","following_url":"https://api.github.com/users/surekhasaharan/following{/other_user}","gists_url":"https://api.github.com/users/surekhasaharan/gists{/gist_id}","starred_url":"https://api.github.com/users/surekhasaharan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/surekhasaharan/subscriptions","organizations_url":"https://api.github.com/users/surekhasaharan/orgs","repos_url":"https://api.github.com/users/surekhasaharan/repos","events_url":"https://api.github.com/users/surekhasaharan/events{/privacy}","received_events_url":"https://api.github.com/users/surekhasaharan/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-29T15:50:01Z","updated_at":"2019-04-29T15:50:01Z","author_association":"NONE","body":"@leventov the drop API may not be idempotent between calls, if more segments get added to the same interval. And the reload API can have different outcomes based on the number of segments overshadowed in the interval at a time, so for same interval, reload API can mark different subset of segments as `used=true`. See the discussion [here](https://github.com/apache/incubator-druid/pull/7494#discussion_r277050169)","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/487634703/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/487639498","html_url":"https://github.com/apache/druid/issues/7439#issuecomment-487639498","issue_url":"https://api.github.com/repos/apache/druid/issues/7439","id":487639498,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NzYzOTQ5OA==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-29T16:02:20Z","updated_at":"2019-04-29T16:02:20Z","author_association":"CONTRIBUTOR","body":"> @leventov the drop API may not be idempotent between calls, if more segments get added to the same interval. And the reload API can have different outcomes based on the number of segments overshadowed in the interval at a time, so for same interval, reload API can mark different subset of segments as `used=true`. See the discussion [here](https://github.com/apache/incubator-druid/pull/7494#discussion_r277050169)\r\n\r\nHmm this seems borderline to me. You can call the reload-by-interval API over and over and it is idempotent in the sense that it always takes the system to the 'all latest segments are marked used' state. But the specific segments may change from run to run and so the effects of the call may change from run to run.\r\n\r\nTo me it's idempotent in the loose sense of 'nothing bad will happen if you call it repeatedly' but not in the strict sense of 'every call will have the same effect'.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/487639498/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/487640863","html_url":"https://github.com/apache/druid/issues/7568#issuecomment-487640863","issue_url":"https://api.github.com/repos/apache/druid/issues/7568","id":487640863,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NzY0MDg2Mw==","user":{"login":"dampcake","id":6202532,"node_id":"MDQ6VXNlcjYyMDI1MzI=","avatar_url":"https://avatars.githubusercontent.com/u/6202532?v=4","gravatar_id":"","url":"https://api.github.com/users/dampcake","html_url":"https://github.com/dampcake","followers_url":"https://api.github.com/users/dampcake/followers","following_url":"https://api.github.com/users/dampcake/following{/other_user}","gists_url":"https://api.github.com/users/dampcake/gists{/gist_id}","starred_url":"https://api.github.com/users/dampcake/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dampcake/subscriptions","organizations_url":"https://api.github.com/users/dampcake/orgs","repos_url":"https://api.github.com/users/dampcake/repos","events_url":"https://api.github.com/users/dampcake/events{/privacy}","received_events_url":"https://api.github.com/users/dampcake/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-29T16:06:11Z","updated_at":"2019-04-29T16:06:11Z","author_association":"CONTRIBUTOR","body":"This would modify the behaviour as SELECTing from a list will not allow us to validate that the segmentIds is in the DB. Invalid segmentIds would just be ignored, though if this is acceptable it could be changed.\r\n\r\nI agree the enabling should be done as it will function the same.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/487640863/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/487669994","html_url":"https://github.com/apache/druid/pull/7293#issuecomment-487669994","issue_url":"https://api.github.com/repos/apache/druid/issues/7293","id":487669994,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NzY2OTk5NA==","user":{"login":"leventov","id":609240,"node_id":"MDQ6VXNlcjYwOTI0MA==","avatar_url":"https://avatars.githubusercontent.com/u/609240?v=4","gravatar_id":"","url":"https://api.github.com/users/leventov","html_url":"https://github.com/leventov","followers_url":"https://api.github.com/users/leventov/followers","following_url":"https://api.github.com/users/leventov/following{/other_user}","gists_url":"https://api.github.com/users/leventov/gists{/gist_id}","starred_url":"https://api.github.com/users/leventov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leventov/subscriptions","organizations_url":"https://api.github.com/users/leventov/orgs","repos_url":"https://api.github.com/users/leventov/repos","events_url":"https://api.github.com/users/leventov/events{/privacy}","received_events_url":"https://api.github.com/users/leventov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-29T17:27:25Z","updated_at":"2019-04-29T17:27:25Z","author_association":"MEMBER","body":"Thanks","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/487669994/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/487672334","html_url":"https://github.com/apache/druid/issues/7439#issuecomment-487672334","issue_url":"https://api.github.com/repos/apache/druid/issues/7439","id":487672334,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NzY3MjMzNA==","user":{"login":"leventov","id":609240,"node_id":"MDQ6VXNlcjYwOTI0MA==","avatar_url":"https://avatars.githubusercontent.com/u/609240?v=4","gravatar_id":"","url":"https://api.github.com/users/leventov","html_url":"https://github.com/leventov","followers_url":"https://api.github.com/users/leventov/followers","following_url":"https://api.github.com/users/leventov/following{/other_user}","gists_url":"https://api.github.com/users/leventov/gists{/gist_id}","starred_url":"https://api.github.com/users/leventov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leventov/subscriptions","organizations_url":"https://api.github.com/users/leventov/orgs","repos_url":"https://api.github.com/users/leventov/repos","events_url":"https://api.github.com/users/leventov/events{/privacy}","received_events_url":"https://api.github.com/users/leventov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-29T17:33:44Z","updated_at":"2019-04-29T17:33:44Z","author_association":"MEMBER","body":"@surekhasaharan I think in so strict sense that you described, very little APIs should ever be `PUT`. Imagine on some website, `PUT /users/fooUser/description, body: user's description`. Then `PUT` is not idempotent, because a user may be removed or renamed between calls, and the new call will return an error.\r\n\r\nI think, semantically, this operation is `PUT`.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/487672334/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/487673464","html_url":"https://github.com/apache/druid/issues/7568#issuecomment-487673464","issue_url":"https://api.github.com/repos/apache/druid/issues/7568","id":487673464,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NzY3MzQ2NA==","user":{"login":"leventov","id":609240,"node_id":"MDQ6VXNlcjYwOTI0MA==","avatar_url":"https://avatars.githubusercontent.com/u/609240?v=4","gravatar_id":"","url":"https://api.github.com/users/leventov","html_url":"https://github.com/leventov","followers_url":"https://api.github.com/users/leventov/followers","following_url":"https://api.github.com/users/leventov/following{/other_user}","gists_url":"https://api.github.com/users/leventov/gists{/gist_id}","starred_url":"https://api.github.com/users/leventov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leventov/subscriptions","organizations_url":"https://api.github.com/users/leventov/orgs","repos_url":"https://api.github.com/users/leventov/repos","events_url":"https://api.github.com/users/leventov/events{/privacy}","received_events_url":"https://api.github.com/users/leventov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-29T17:36:58Z","updated_at":"2019-04-29T17:36:58Z","author_association":"MEMBER","body":"If a batch returns 98 rows when you queried 100 segment ids, you know that some are missing. You may perform an additional query to determine which exactly, by fetching each id from the last batch in separation.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/487673464/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/487687208","html_url":"https://github.com/apache/druid/issues/7439#issuecomment-487687208","issue_url":"https://api.github.com/repos/apache/druid/issues/7439","id":487687208,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NzY4NzIwOA==","user":{"login":"jon-wei","id":8729063,"node_id":"MDQ6VXNlcjg3MjkwNjM=","avatar_url":"https://avatars.githubusercontent.com/u/8729063?v=4","gravatar_id":"","url":"https://api.github.com/users/jon-wei","html_url":"https://github.com/jon-wei","followers_url":"https://api.github.com/users/jon-wei/followers","following_url":"https://api.github.com/users/jon-wei/following{/other_user}","gists_url":"https://api.github.com/users/jon-wei/gists{/gist_id}","starred_url":"https://api.github.com/users/jon-wei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jon-wei/subscriptions","organizations_url":"https://api.github.com/users/jon-wei/orgs","repos_url":"https://api.github.com/users/jon-wei/repos","events_url":"https://api.github.com/users/jon-wei/events{/privacy}","received_events_url":"https://api.github.com/users/jon-wei/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-29T18:16:02Z","updated_at":"2019-04-29T18:28:15Z","author_association":"CONTRIBUTOR","body":"> Then PUT is not idempotent, because a user may be removed or renamed between calls, and the new call will return an error.\r\n\r\nIf the API is designed to return an error in that case, then it probably should be a POST instead.\r\n\r\nAccepting the request and creating the user would be more PUT-like behavior as I understand (see first example here https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/PUT#Example)\r\n\r\nLooking at RFC 7231: https://tools.ietf.org/html/rfc7231#section-4.3.4\r\n\r\n```\r\nThe PUT method requests that the state of the target resource be\r\n   created or replaced with the state defined by the representation\r\n   enclosed in the request message payload.\r\n\r\n...\r\n\r\nIf the target resource does not have a current representation and the\r\n   PUT successfully creates one, then the origin server MUST inform the\r\n   user agent by sending a 201 (Created) response.  If the target\r\n   resource does have a current representation and that representation\r\n   is successfully modified in accordance with the state of the enclosed\r\n   representation, then the origin server MUST send either a 200 (OK) or\r\n   a 204 (No Content) response to indicate successful completion of the\r\n   request.\r\n```\r\n\r\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Methods\r\n\r\nFrom those characterizations of the methods, I think these drop/reload APIs are more POST.\r\n\r\n>  I think in so strict sense that you described, very little APIs should ever be PUT. \r\n\r\nTaking that premise, couldn't one also argue that very few APIs are really idempotent and thus there should be very few PUTs?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/487687208/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/487733064","html_url":"https://github.com/apache/druid/issues/7570#issuecomment-487733064","issue_url":"https://api.github.com/repos/apache/druid/issues/7570","id":487733064,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NzczMzA2NA==","user":{"login":"sascha-coenen","id":1635350,"node_id":"MDQ6VXNlcjE2MzUzNTA=","avatar_url":"https://avatars.githubusercontent.com/u/1635350?v=4","gravatar_id":"","url":"https://api.github.com/users/sascha-coenen","html_url":"https://github.com/sascha-coenen","followers_url":"https://api.github.com/users/sascha-coenen/followers","following_url":"https://api.github.com/users/sascha-coenen/following{/other_user}","gists_url":"https://api.github.com/users/sascha-coenen/gists{/gist_id}","starred_url":"https://api.github.com/users/sascha-coenen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sascha-coenen/subscriptions","organizations_url":"https://api.github.com/users/sascha-coenen/orgs","repos_url":"https://api.github.com/users/sascha-coenen/repos","events_url":"https://api.github.com/users/sascha-coenen/events{/privacy}","received_events_url":"https://api.github.com/users/sascha-coenen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-29T20:33:28Z","updated_at":"2019-04-29T20:33:28Z","author_association":"NONE","body":"awesome idea\r\nI was playing around with this using Apache Ignite \r\nhttps://ignite.apache.org\r\n\r\nSince then my mind keeps coming back to the thought how great it would be for many usecases if Druid had an underlying colocated cache. \r\nBrokers could leave their individual queries or query state in the cache and one could then easily consult that cache to see the total number of executing queries. Zookeeper is oldfashioned, using REST endpoints is cumbersome...but a ready-made distributed cache or better to say an underlying generic compute grid like Ignite would be quite a nice platform foundation. Distributed clojures. Data Streamers... All so low-level that one could build on it.\r\nWith Ignite I could get the above distributed co-located cache and one can also optionally configure Ignite to write through to a remote section of itself too, so having a second-level cache, which in turn one can configure with optional persistence. Its quite nice to use such a product as a foundational component...","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/487733064/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/487738276","html_url":"https://github.com/apache/druid/issues/7355#issuecomment-487738276","issue_url":"https://api.github.com/repos/apache/druid/issues/7355","id":487738276,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NzczODI3Ng==","user":{"login":"sascha-coenen","id":1635350,"node_id":"MDQ6VXNlcjE2MzUzNTA=","avatar_url":"https://avatars.githubusercontent.com/u/1635350?v=4","gravatar_id":"","url":"https://api.github.com/users/sascha-coenen","html_url":"https://github.com/sascha-coenen","followers_url":"https://api.github.com/users/sascha-coenen/followers","following_url":"https://api.github.com/users/sascha-coenen/following{/other_user}","gists_url":"https://api.github.com/users/sascha-coenen/gists{/gist_id}","starred_url":"https://api.github.com/users/sascha-coenen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sascha-coenen/subscriptions","organizations_url":"https://api.github.com/users/sascha-coenen/orgs","repos_url":"https://api.github.com/users/sascha-coenen/repos","events_url":"https://api.github.com/users/sascha-coenen/events{/privacy}","received_events_url":"https://api.github.com/users/sascha-coenen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-29T20:48:23Z","updated_at":"2019-04-29T20:48:23Z","author_association":"NONE","body":"more documentation would in deed be useful as the autoscaler is quite nice. Especially the different strategies are difficult for me to wrap my mind around.\r\n\r\nBy the way, I believe the off-the-shelf autoscaler is probably not for everybody because it is quite specific. I wrote an HTTP autoscaler extension if this is of any use. It basically delegates all autoscaling decisions to an external webservice. \r\nFor folks that are not 'brave' enough to fork a big code repo and put their own customization in, it might be a less daunting proposition to just implement a webservice in a technology of their own choosing.\r\n\r\nWe have currently only one webservice implementation that would spin up EMR clusters with middlemanagers deployed on the EMR master nodes. One could include a minimalistic autoscaler example within the Druid codebase - a single-file python script which would perhaps even do nothing else but to print out the scaling decisions relayed by Druid, might be very helpful for people to play around with and get a feeling for how the druid-autoscaler mechanism behaves. They might then feel empowered to extend this webservice to their own needs.\r\nBut I'm quite off topic now. Sorry. Just meant to mention it because the autoscaling feature in Druid is quite nice but I don't have the feeling that many people are using it which might be due to its specific nature (Galaxy and such)\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/487738276/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/487770238","html_url":"https://github.com/apache/druid/issues/7570#issuecomment-487770238","issue_url":"https://api.github.com/repos/apache/druid/issues/7570","id":487770238,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4Nzc3MDIzOA==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-29T22:47:14Z","updated_at":"2019-04-29T22:47:14Z","author_association":"CONTRIBUTOR","body":"It seems for this case it would be nice to choose a 'small' (few dependencies) and embeddable (same JVM as the historical) distributed cache. Is Ignite like that? (Or are there others that are?)","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/487770238/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/487774505","html_url":"https://github.com/apache/druid/pull/7088#issuecomment-487774505","issue_url":"https://api.github.com/repos/apache/druid/issues/7088","id":487774505,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4Nzc3NDUwNQ==","user":{"login":"jon-wei","id":8729063,"node_id":"MDQ6VXNlcjg3MjkwNjM=","avatar_url":"https://avatars.githubusercontent.com/u/8729063?v=4","gravatar_id":"","url":"https://api.github.com/users/jon-wei","html_url":"https://github.com/jon-wei","followers_url":"https://api.github.com/users/jon-wei/followers","following_url":"https://api.github.com/users/jon-wei/following{/other_user}","gists_url":"https://api.github.com/users/jon-wei/gists{/gist_id}","starred_url":"https://api.github.com/users/jon-wei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jon-wei/subscriptions","organizations_url":"https://api.github.com/users/jon-wei/orgs","repos_url":"https://api.github.com/users/jon-wei/repos","events_url":"https://api.github.com/users/jon-wei/events{/privacy}","received_events_url":"https://api.github.com/users/jon-wei/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-29T23:08:47Z","updated_at":"2019-04-29T23:08:47Z","author_association":"CONTRIBUTOR","body":"@samarthjain The integration test failures look like they are non-transient","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/487774505/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/487785025","html_url":"https://github.com/apache/druid/issues/7525#issuecomment-487785025","issue_url":"https://api.github.com/repos/apache/druid/issues/7525","id":487785025,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4Nzc4NTAyNQ==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-30T00:05:22Z","updated_at":"2019-04-30T00:05:30Z","author_association":"CONTRIBUTOR","body":"https://github.com/apache/incubator-druid/issues/7574 may be slightly related in that it could allow implementing a virtual column that gives view of existing multi-value string column as a String[] type column and works as efficiently as if String[] was a native Druid column type.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/487785025/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/487785365","html_url":"https://github.com/apache/druid/issues/7574#issuecomment-487785365","issue_url":"https://api.github.com/repos/apache/druid/issues/7574","id":487785365,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4Nzc4NTM2NQ==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-30T00:07:05Z","updated_at":"2019-04-30T00:07:05Z","author_association":"CONTRIBUTOR","body":"Thanks @himanshug, it sounds cool. \r\nI'm wondering if a `Proposal` is more appropriate for this rather than `Feature/Change`. If I understand correctly, `Feature/Change` is more for user requests and so its template lacks details like how to implement this change. The proposal template contains more details and it would help for reviewers to understand your proposal better.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/487785365/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/487786434","html_url":"https://github.com/apache/druid/issues/7574#issuecomment-487786434","issue_url":"https://api.github.com/repos/apache/druid/issues/7574","id":487786434,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4Nzc4NjQzNA==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-30T00:13:38Z","updated_at":"2019-04-30T00:13:53Z","author_association":"CONTRIBUTOR","body":"I see, I thought the different was in major vs not-so-major change as shown in https://github.com/apache/incubator-druid/issues/new/choose , we should probably adjust the wording there :)\r\n\r\nI will change this to a proposal template shortly.\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/487786434/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/487787093","html_url":"https://github.com/apache/druid/issues/7574#issuecomment-487787093","issue_url":"https://api.github.com/repos/apache/druid/issues/7574","id":487787093,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4Nzc4NzA5Mw==","user":{"login":"jihoonson","id":2322288,"node_id":"MDQ6VXNlcjIzMjIyODg=","avatar_url":"https://avatars.githubusercontent.com/u/2322288?v=4","gravatar_id":"","url":"https://api.github.com/users/jihoonson","html_url":"https://github.com/jihoonson","followers_url":"https://api.github.com/users/jihoonson/followers","following_url":"https://api.github.com/users/jihoonson/following{/other_user}","gists_url":"https://api.github.com/users/jihoonson/gists{/gist_id}","starred_url":"https://api.github.com/users/jihoonson/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jihoonson/subscriptions","organizations_url":"https://api.github.com/users/jihoonson/orgs","repos_url":"https://api.github.com/users/jihoonson/repos","events_url":"https://api.github.com/users/jihoonson/events{/privacy}","received_events_url":"https://api.github.com/users/jihoonson/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-30T00:17:57Z","updated_at":"2019-04-30T00:17:57Z","author_association":"CONTRIBUTOR","body":"Hmm, yeah. It would be better if it's more clear. Thanks.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/487787093/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/487787717","html_url":"https://github.com/apache/druid/issues/7574#issuecomment-487787717","issue_url":"https://api.github.com/repos/apache/druid/issues/7574","id":487787717,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4Nzc4NzcxNw==","user":{"login":"himanshug","id":246308,"node_id":"MDQ6VXNlcjI0NjMwOA==","avatar_url":"https://avatars.githubusercontent.com/u/246308?v=4","gravatar_id":"","url":"https://api.github.com/users/himanshug","html_url":"https://github.com/himanshug","followers_url":"https://api.github.com/users/himanshug/followers","following_url":"https://api.github.com/users/himanshug/following{/other_user}","gists_url":"https://api.github.com/users/himanshug/gists{/gist_id}","starred_url":"https://api.github.com/users/himanshug/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/himanshug/subscriptions","organizations_url":"https://api.github.com/users/himanshug/orgs","repos_url":"https://api.github.com/users/himanshug/repos","events_url":"https://api.github.com/users/himanshug/events{/privacy}","received_events_url":"https://api.github.com/users/himanshug/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-30T00:21:39Z","updated_at":"2019-04-30T00:21:39Z","author_association":"CONTRIBUTOR","body":"@jihoonson  thanks . having \"templates\" itself is great improvement though :)","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/487787717/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/487792139","html_url":"https://github.com/apache/druid/issues/7527#issuecomment-487792139","issue_url":"https://api.github.com/repos/apache/druid/issues/7527","id":487792139,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4Nzc5MjEzOQ==","user":{"login":"jon-wei","id":8729063,"node_id":"MDQ6VXNlcjg3MjkwNjM=","avatar_url":"https://avatars.githubusercontent.com/u/8729063?v=4","gravatar_id":"","url":"https://api.github.com/users/jon-wei","html_url":"https://github.com/jon-wei","followers_url":"https://api.github.com/users/jon-wei/followers","following_url":"https://api.github.com/users/jon-wei/following{/other_user}","gists_url":"https://api.github.com/users/jon-wei/gists{/gist_id}","starred_url":"https://api.github.com/users/jon-wei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jon-wei/subscriptions","organizations_url":"https://api.github.com/users/jon-wei/orgs","repos_url":"https://api.github.com/users/jon-wei/repos","events_url":"https://api.github.com/users/jon-wei/events{/privacy}","received_events_url":"https://api.github.com/users/jon-wei/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-30T00:50:46Z","updated_at":"2019-04-30T00:50:46Z","author_association":"CONTRIBUTOR","body":"@xvrl I should have some time in the later part of this week to look into this","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/487792139/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/487802026","html_url":"https://github.com/apache/druid/issues/7574#issuecomment-487802026","issue_url":"https://api.github.com/repos/apache/druid/issues/7574","id":487802026,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NzgwMjAyNg==","user":{"login":"gianm","id":1214075,"node_id":"MDQ6VXNlcjEyMTQwNzU=","avatar_url":"https://avatars.githubusercontent.com/u/1214075?v=4","gravatar_id":"","url":"https://api.github.com/users/gianm","html_url":"https://github.com/gianm","followers_url":"https://api.github.com/users/gianm/followers","following_url":"https://api.github.com/users/gianm/following{/other_user}","gists_url":"https://api.github.com/users/gianm/gists{/gist_id}","starred_url":"https://api.github.com/users/gianm/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/gianm/subscriptions","organizations_url":"https://api.github.com/users/gianm/orgs","repos_url":"https://api.github.com/users/gianm/repos","events_url":"https://api.github.com/users/gianm/events{/privacy}","received_events_url":"https://api.github.com/users/gianm/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-30T02:08:01Z","updated_at":"2019-04-30T02:08:01Z","author_association":"CONTRIBUTOR","body":"@himanshug,\r\n\r\n1. I'm wondering if it's useful to add capabilities that tell callers whether methods like `makeDimensionSelector(String columnName, ColumnSelector columnSelector, ReadableOffset offset)` are going to work before calling them. It might be nice if it lets callers branch off into different ways of handling things before they actually create selectors. If this change is made, then these methods could be made non-nullable and the default impls could throw unsupported operation exceptions.\r\n2. For the test plan, assuming you are planning on adding unit tests that exercise the new methods, that sounds good to me.\r\n3. Would you be interested in open-sourcing your nested-data-structure complex column implementation? It sounds like something that could be quite generally useful.\r\n4. Would you need to propose any changes to the `VirtualColumns` class as well?","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/487802026/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/487817957","html_url":"https://github.com/apache/druid/pull/7579#issuecomment-487817957","issue_url":"https://api.github.com/repos/apache/druid/issues/7579","id":487817957,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NzgxNzk1Nw==","user":{"login":"jon-wei","id":8729063,"node_id":"MDQ6VXNlcjg3MjkwNjM=","avatar_url":"https://avatars.githubusercontent.com/u/8729063?v=4","gravatar_id":"","url":"https://api.github.com/users/jon-wei","html_url":"https://github.com/jon-wei","followers_url":"https://api.github.com/users/jon-wei/followers","following_url":"https://api.github.com/users/jon-wei/following{/other_user}","gists_url":"https://api.github.com/users/jon-wei/gists{/gist_id}","starred_url":"https://api.github.com/users/jon-wei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jon-wei/subscriptions","organizations_url":"https://api.github.com/users/jon-wei/orgs","repos_url":"https://api.github.com/users/jon-wei/repos","events_url":"https://api.github.com/users/jon-wei/events{/privacy}","received_events_url":"https://api.github.com/users/jon-wei/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-30T04:26:20Z","updated_at":"2019-04-30T04:26:20Z","author_association":"CONTRIBUTOR","body":"will need to adjust tests to handle when the full IT test suite is run (since cluster state is not isolated across tests, things like \"total stored segment size on historicals\" change)","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/487817957/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/487828059","html_url":"https://github.com/apache/druid/issues/7439#issuecomment-487828059","issue_url":"https://api.github.com/repos/apache/druid/issues/7439","id":487828059,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NzgyODA1OQ==","user":{"login":"jon-wei","id":8729063,"node_id":"MDQ6VXNlcjg3MjkwNjM=","avatar_url":"https://avatars.githubusercontent.com/u/8729063?v=4","gravatar_id":"","url":"https://api.github.com/users/jon-wei","html_url":"https://github.com/jon-wei","followers_url":"https://api.github.com/users/jon-wei/followers","following_url":"https://api.github.com/users/jon-wei/following{/other_user}","gists_url":"https://api.github.com/users/jon-wei/gists{/gist_id}","starred_url":"https://api.github.com/users/jon-wei/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jon-wei/subscriptions","organizations_url":"https://api.github.com/users/jon-wei/orgs","repos_url":"https://api.github.com/users/jon-wei/repos","events_url":"https://api.github.com/users/jon-wei/events{/privacy}","received_events_url":"https://api.github.com/users/jon-wei/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-30T05:50:56Z","updated_at":"2019-04-30T05:51:16Z","author_association":"CONTRIBUTOR","body":"To add a few more thoughts on PUT vs POST, I think if something is ambiguous I would rather go with POST for the following reasons:\r\n- Searching our codebase, I don't see any PUT endpoints currently. Having a few PUTs in a sea of POSTS I think would make it easy for users to make mistakes, and I don't really see much of a functional benefit to using PUT instead POST.\r\n- POST seems \"safer\": I think user beliefs on what is idempotent or not may vary (and so they may have different opinions on whether this API is idempotent or not), but the user that expects idempotence and doesn't get it would probably be more displeased than the user that expects non-idempotence and gets idempotence, so misclassifying (if this is a misclassification) as POST has less damage.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/487828059/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/487841394","html_url":"https://github.com/apache/druid/issues/7580#issuecomment-487841394","issue_url":"https://api.github.com/repos/apache/druid/issues/7580","id":487841394,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4Nzg0MTM5NA==","user":{"login":"clintropolis","id":1577461,"node_id":"MDQ6VXNlcjE1Nzc0NjE=","avatar_url":"https://avatars.githubusercontent.com/u/1577461?v=4","gravatar_id":"","url":"https://api.github.com/users/clintropolis","html_url":"https://github.com/clintropolis","followers_url":"https://api.github.com/users/clintropolis/followers","following_url":"https://api.github.com/users/clintropolis/following{/other_user}","gists_url":"https://api.github.com/users/clintropolis/gists{/gist_id}","starred_url":"https://api.github.com/users/clintropolis/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/clintropolis/subscriptions","organizations_url":"https://api.github.com/users/clintropolis/orgs","repos_url":"https://api.github.com/users/clintropolis/repos","events_url":"https://api.github.com/users/clintropolis/events{/privacy}","received_events_url":"https://api.github.com/users/clintropolis/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-30T07:07:05Z","updated_at":"2019-04-30T07:07:05Z","author_association":"MEMBER","body":"This should be fixed by #7496 which will be released in 0.14.1-incubating, currently under vote, with any luck to be released sometime later this week.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/487841394/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/487842175","html_url":"https://github.com/apache/druid/issues/7580#issuecomment-487842175","issue_url":"https://api.github.com/repos/apache/druid/issues/7580","id":487842175,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4Nzg0MjE3NQ==","user":{"login":"shizhengchao","id":22866465,"node_id":"MDQ6VXNlcjIyODY2NDY1","avatar_url":"https://avatars.githubusercontent.com/u/22866465?v=4","gravatar_id":"","url":"https://api.github.com/users/shizhengchao","html_url":"https://github.com/shizhengchao","followers_url":"https://api.github.com/users/shizhengchao/followers","following_url":"https://api.github.com/users/shizhengchao/following{/other_user}","gists_url":"https://api.github.com/users/shizhengchao/gists{/gist_id}","starred_url":"https://api.github.com/users/shizhengchao/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/shizhengchao/subscriptions","organizations_url":"https://api.github.com/users/shizhengchao/orgs","repos_url":"https://api.github.com/users/shizhengchao/repos","events_url":"https://api.github.com/users/shizhengchao/events{/privacy}","received_events_url":"https://api.github.com/users/shizhengchao/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-30T07:10:42Z","updated_at":"2019-04-30T07:10:42Z","author_association":"NONE","body":"thank you","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/487842175/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/487849617","html_url":"https://github.com/apache/druid/pull/7459#issuecomment-487849617","issue_url":"https://api.github.com/repos/apache/druid/issues/7459","id":487849617,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4Nzg0OTYxNw==","user":{"login":"max-schmidt54321","id":43570402,"node_id":"MDQ6VXNlcjQzNTcwNDAy","avatar_url":"https://avatars.githubusercontent.com/u/43570402?v=4","gravatar_id":"","url":"https://api.github.com/users/max-schmidt54321","html_url":"https://github.com/max-schmidt54321","followers_url":"https://api.github.com/users/max-schmidt54321/followers","following_url":"https://api.github.com/users/max-schmidt54321/following{/other_user}","gists_url":"https://api.github.com/users/max-schmidt54321/gists{/gist_id}","starred_url":"https://api.github.com/users/max-schmidt54321/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/max-schmidt54321/subscriptions","organizations_url":"https://api.github.com/users/max-schmidt54321/orgs","repos_url":"https://api.github.com/users/max-schmidt54321/repos","events_url":"https://api.github.com/users/max-schmidt54321/events{/privacy}","received_events_url":"https://api.github.com/users/max-schmidt54321/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-30T07:42:25Z","updated_at":"2019-04-30T07:42:25Z","author_association":"NONE","body":"Is it possible to add this to Druid Verison 0.14.1? \r\nHad the same problems.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/487849617/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/487853460","html_url":"https://github.com/apache/druid/pull/7175#issuecomment-487853460","issue_url":"https://api.github.com/repos/apache/druid/issues/7175","id":487853460,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4Nzg1MzQ2MA==","user":{"login":"stale[bot]","id":26384082,"node_id":"MDM6Qm90MjYzODQwODI=","avatar_url":"https://avatars.githubusercontent.com/in/1724?v=4","gravatar_id":"","url":"https://api.github.com/users/stale%5Bbot%5D","html_url":"https://github.com/apps/stale","followers_url":"https://api.github.com/users/stale%5Bbot%5D/followers","following_url":"https://api.github.com/users/stale%5Bbot%5D/following{/other_user}","gists_url":"https://api.github.com/users/stale%5Bbot%5D/gists{/gist_id}","starred_url":"https://api.github.com/users/stale%5Bbot%5D/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/stale%5Bbot%5D/subscriptions","organizations_url":"https://api.github.com/users/stale%5Bbot%5D/orgs","repos_url":"https://api.github.com/users/stale%5Bbot%5D/repos","events_url":"https://api.github.com/users/stale%5Bbot%5D/events{/privacy}","received_events_url":"https://api.github.com/users/stale%5Bbot%5D/received_events","type":"Bot","user_view_type":"public","site_admin":false},"created_at":"2019-04-30T07:58:46Z","updated_at":"2019-04-30T07:58:46Z","author_association":"NONE","body":"This pull request has been marked as stale due to 60 days of inactivity. It will be closed in 1 week if no further activity occurs. If you think that‚Äôs incorrect or this pull request requires a review, please simply write any comment. If closed, you can revive the PR at any time and @mention a reviewer or discuss it on the dev@druid.apache.org list. Thank you for your contributions.\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/487853460/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/487869615","html_url":"https://github.com/apache/druid/issues/7581#issuecomment-487869615","issue_url":"https://api.github.com/repos/apache/druid/issues/7581","id":487869615,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4Nzg2OTYxNQ==","user":{"login":"xueyumusic","id":95261,"node_id":"MDQ6VXNlcjk1MjYx","avatar_url":"https://avatars.githubusercontent.com/u/95261?v=4","gravatar_id":"","url":"https://api.github.com/users/xueyumusic","html_url":"https://github.com/xueyumusic","followers_url":"https://api.github.com/users/xueyumusic/followers","following_url":"https://api.github.com/users/xueyumusic/following{/other_user}","gists_url":"https://api.github.com/users/xueyumusic/gists{/gist_id}","starred_url":"https://api.github.com/users/xueyumusic/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xueyumusic/subscriptions","organizations_url":"https://api.github.com/users/xueyumusic/orgs","repos_url":"https://api.github.com/users/xueyumusic/repos","events_url":"https://api.github.com/users/xueyumusic/events{/privacy}","received_events_url":"https://api.github.com/users/xueyumusic/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-30T08:55:26Z","updated_at":"2019-04-30T08:55:26Z","author_association":"CONTRIBUTOR","body":"Hi, @DockerLive ,  there is an [example](https://github.com/apache/incubator-druid/blob/master/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java#L4094), maybe you could refer.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/487869615/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/487876303","html_url":"https://github.com/apache/druid/issues/7581#issuecomment-487876303","issue_url":"https://api.github.com/repos/apache/druid/issues/7581","id":487876303,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4Nzg3NjMwMw==","user":{"login":"DockerLive","id":16477531,"node_id":"MDQ6VXNlcjE2NDc3NTMx","avatar_url":"https://avatars.githubusercontent.com/u/16477531?v=4","gravatar_id":"","url":"https://api.github.com/users/DockerLive","html_url":"https://github.com/DockerLive","followers_url":"https://api.github.com/users/DockerLive/followers","following_url":"https://api.github.com/users/DockerLive/following{/other_user}","gists_url":"https://api.github.com/users/DockerLive/gists{/gist_id}","starred_url":"https://api.github.com/users/DockerLive/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/DockerLive/subscriptions","organizations_url":"https://api.github.com/users/DockerLive/orgs","repos_url":"https://api.github.com/users/DockerLive/repos","events_url":"https://api.github.com/users/DockerLive/events{/privacy}","received_events_url":"https://api.github.com/users/DockerLive/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-30T09:19:01Z","updated_at":"2019-04-30T09:19:01Z","author_association":"NONE","body":"> Hi, @DockerLive , there is an [example](https://github.com/apache/incubator-druid/blob/master/sql/src/test/java/org/apache/druid/sql/calcite/CalciteQueryTest.java#L4094), maybe you could refer.\r\n\r\nTKS, but I found an example  :  GROUP BY FLOOR(__time to hour), dim1      \r\nwhen group by   Multiple fields \r\nthe \".setGranularity(Granularities.ALL)\"   always \"all\"","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/487876303/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/487910663","html_url":"https://github.com/apache/druid/issues/6905#issuecomment-487910663","issue_url":"https://api.github.com/repos/apache/druid/issues/6905","id":487910663,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NzkxMDY2Mw==","user":{"login":"Stephan3555","id":2537072,"node_id":"MDQ6VXNlcjI1MzcwNzI=","avatar_url":"https://avatars.githubusercontent.com/u/2537072?v=4","gravatar_id":"","url":"https://api.github.com/users/Stephan3555","html_url":"https://github.com/Stephan3555","followers_url":"https://api.github.com/users/Stephan3555/followers","following_url":"https://api.github.com/users/Stephan3555/following{/other_user}","gists_url":"https://api.github.com/users/Stephan3555/gists{/gist_id}","starred_url":"https://api.github.com/users/Stephan3555/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Stephan3555/subscriptions","organizations_url":"https://api.github.com/users/Stephan3555/orgs","repos_url":"https://api.github.com/users/Stephan3555/repos","events_url":"https://api.github.com/users/Stephan3555/events{/privacy}","received_events_url":"https://api.github.com/users/Stephan3555/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-30T11:04:15Z","updated_at":"2019-04-30T11:04:15Z","author_association":"NONE","body":"We skipped version 0.13.0 and went straight to 0.14.0. The Problem seems to be resolved in this version","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/487910663/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/487919872","html_url":"https://github.com/apache/druid/pull/7572#issuecomment-487919872","issue_url":"https://api.github.com/repos/apache/druid/issues/7572","id":487919872,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4NzkxOTg3Mg==","user":{"login":"vogievetsky","id":177816,"node_id":"MDQ6VXNlcjE3NzgxNg==","avatar_url":"https://avatars.githubusercontent.com/u/177816?v=4","gravatar_id":"","url":"https://api.github.com/users/vogievetsky","html_url":"https://github.com/vogievetsky","followers_url":"https://api.github.com/users/vogievetsky/followers","following_url":"https://api.github.com/users/vogievetsky/following{/other_user}","gists_url":"https://api.github.com/users/vogievetsky/gists{/gist_id}","starred_url":"https://api.github.com/users/vogievetsky/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vogievetsky/subscriptions","organizations_url":"https://api.github.com/users/vogievetsky/orgs","repos_url":"https://api.github.com/users/vogievetsky/repos","events_url":"https://api.github.com/users/vogievetsky/events{/privacy}","received_events_url":"https://api.github.com/users/vogievetsky/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-30T11:42:25Z","updated_at":"2019-04-30T11:42:25Z","author_association":"CONTRIBUTOR","body":"Might change some copy soon but felt cute in this gif: https://imgur.com/a/nvzCs4V (too big for GH embed)\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/487919872/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/488003883","html_url":"https://github.com/apache/druid/issues/7583#issuecomment-488003883","issue_url":"https://api.github.com/repos/apache/druid/issues/7583","id":488003883,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4ODAwMzg4Mw==","user":{"login":"sascha-coenen","id":1635350,"node_id":"MDQ6VXNlcjE2MzUzNTA=","avatar_url":"https://avatars.githubusercontent.com/u/1635350?v=4","gravatar_id":"","url":"https://api.github.com/users/sascha-coenen","html_url":"https://github.com/sascha-coenen","followers_url":"https://api.github.com/users/sascha-coenen/followers","following_url":"https://api.github.com/users/sascha-coenen/following{/other_user}","gists_url":"https://api.github.com/users/sascha-coenen/gists{/gist_id}","starred_url":"https://api.github.com/users/sascha-coenen/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sascha-coenen/subscriptions","organizations_url":"https://api.github.com/users/sascha-coenen/orgs","repos_url":"https://api.github.com/users/sascha-coenen/repos","events_url":"https://api.github.com/users/sascha-coenen/events{/privacy}","received_events_url":"https://api.github.com/users/sascha-coenen/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-30T15:42:40Z","updated_at":"2019-04-30T15:42:40Z","author_association":"NONE","body":"This is an awesome feature request!\r\n\r\nThis has been an ongoing issue on our side as well.\r\nHow sparse a dimensions should not make a given query fail.\r\n\r\nIf a dimension contains a value in 1000 cases, queries work and the dimension is considered part of the schema. Same thing if the dimension contains 1 single non-null record and therefore has cardinality 1.\r\nIf this is permissible, then it must not be the case that if the cardinality drops from 1 to, which is a very small difference, that this minute difference is a deciding factor for whether a dimension makes it into the schema or not, whether an SQL query fails or succeeds.\r\n\r\nFrom my user's perspective I applaud this proposal and believe that that indeed this current behaviour aught to be changed.\r\n\r\nI'm afraid that people might be hesitant to make this change thought, reason being that changing the behaviour of the metadataSegment query might be seen as a breaking change that is not backwards compatible.\r\nHowever, one might introduce a boolean flag into the request schema of a metadataSegment query that indicates whether the automatic schema construction should omit fields of cardinality=0 or include them. By setting the default to omit, one stays backwards compatible but yet allows folks to have sparse dimensions.\r\n\r\nAs native queries do NOT fail on dimensions with cardinality 0 and even work for non-existing dimensions because their semantics are also well defined (cardinality=0, min=null, max=null, count=0, etc), I would also propose to fix the situation that SQL queries fail on cardinality=0 dimensions and would even suggest that they also should work on non-existing fields.\r\nHowever, whether SQL should fail or succeed on non-existing fields is highly debated, so it would be okay to let an SQL statement fail IF a field does not exist.\r\nBUT the issue is that currently SQL statements are failing even on fields that DO exist and are even listed in the segment dimension lists available via the coordinator console as Vladimir pointed out, and yet the SQL query fail.\r\nAt the very least, this behaviour is inconsistent and I would agree to resolve this inconsistency by accepting a dimension with 0 entries as an existing dimension with cardinality 0 and count 0.\r\n\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/488003883/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/druid/issues/comments/488013962","html_url":"https://github.com/apache/druid/issues/7439#issuecomment-488013962","issue_url":"https://api.github.com/repos/apache/druid/issues/7439","id":488013962,"node_id":"MDEyOklzc3VlQ29tbWVudDQ4ODAxMzk2Mg==","user":{"login":"leventov","id":609240,"node_id":"MDQ6VXNlcjYwOTI0MA==","avatar_url":"https://avatars.githubusercontent.com/u/609240?v=4","gravatar_id":"","url":"https://api.github.com/users/leventov","html_url":"https://github.com/leventov","followers_url":"https://api.github.com/users/leventov/followers","following_url":"https://api.github.com/users/leventov/following{/other_user}","gists_url":"https://api.github.com/users/leventov/gists{/gist_id}","starred_url":"https://api.github.com/users/leventov/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/leventov/subscriptions","organizations_url":"https://api.github.com/users/leventov/orgs","repos_url":"https://api.github.com/users/leventov/repos","events_url":"https://api.github.com/users/leventov/events{/privacy}","received_events_url":"https://api.github.com/users/leventov/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2019-04-30T16:08:17Z","updated_at":"2019-04-30T16:08:17Z","author_association":"MEMBER","body":"@jon-wei I agree with the last two points that you brought.","reactions":{"url":"https://api.github.com/repos/apache/druid/issues/comments/488013962/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]