[{"url":"https://api.github.com/repos/apache/pinot/issues/comments/802184620","html_url":"https://github.com/apache/pinot/pull/6695#issuecomment-802184620","issue_url":"https://api.github.com/repos/apache/pinot/issues/6695","id":802184620,"node_id":"MDEyOklzc3VlQ29tbWVudDgwMjE4NDYyMA==","user":{"login":"mqliang","id":12423751,"node_id":"MDQ6VXNlcjEyNDIzNzUx","avatar_url":"https://avatars.githubusercontent.com/u/12423751?v=4","gravatar_id":"","url":"https://api.github.com/users/mqliang","html_url":"https://github.com/mqliang","followers_url":"https://api.github.com/users/mqliang/followers","following_url":"https://api.github.com/users/mqliang/following{/other_user}","gists_url":"https://api.github.com/users/mqliang/gists{/gist_id}","starred_url":"https://api.github.com/users/mqliang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mqliang/subscriptions","organizations_url":"https://api.github.com/users/mqliang/orgs","repos_url":"https://api.github.com/users/mqliang/repos","events_url":"https://api.github.com/users/mqliang/events{/privacy}","received_events_url":"https://api.github.com/users/mqliang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-18T18:25:25Z","updated_at":"2021-03-18T18:25:25Z","author_association":"CONTRIBUTOR","body":"@siddharthteotia ","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/802184620/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/802250543","html_url":"https://github.com/apache/pinot/pull/6686#issuecomment-802250543","issue_url":"https://api.github.com/repos/apache/pinot/issues/6686","id":802250543,"node_id":"MDEyOklzc3VlQ29tbWVudDgwMjI1MDU0Mw==","user":{"login":"apucher","id":25439965,"node_id":"MDQ6VXNlcjI1NDM5OTY1","avatar_url":"https://avatars.githubusercontent.com/u/25439965?v=4","gravatar_id":"","url":"https://api.github.com/users/apucher","html_url":"https://github.com/apucher","followers_url":"https://api.github.com/users/apucher/followers","following_url":"https://api.github.com/users/apucher/following{/other_user}","gists_url":"https://api.github.com/users/apucher/gists{/gist_id}","starred_url":"https://api.github.com/users/apucher/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/apucher/subscriptions","organizations_url":"https://api.github.com/users/apucher/orgs","repos_url":"https://api.github.com/users/apucher/repos","events_url":"https://api.github.com/users/apucher/events{/privacy}","received_events_url":"https://api.github.com/users/apucher/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-18T20:04:08Z","updated_at":"2021-03-18T20:04:08Z","author_association":"CONTRIBUTOR","body":"applies to changes introduced in #6613 ","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/802250543/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/802304323","html_url":"https://github.com/apache/pinot/pull/6686#issuecomment-802304323","issue_url":"https://api.github.com/repos/apache/pinot/issues/6686","id":802304323,"node_id":"MDEyOklzc3VlQ29tbWVudDgwMjMwNDMyMw==","user":{"login":"codecov-io","id":8655789,"node_id":"MDQ6VXNlcjg2NTU3ODk=","avatar_url":"https://avatars.githubusercontent.com/u/8655789?v=4","gravatar_id":"","url":"https://api.github.com/users/codecov-io","html_url":"https://github.com/codecov-io","followers_url":"https://api.github.com/users/codecov-io/followers","following_url":"https://api.github.com/users/codecov-io/following{/other_user}","gists_url":"https://api.github.com/users/codecov-io/gists{/gist_id}","starred_url":"https://api.github.com/users/codecov-io/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codecov-io/subscriptions","organizations_url":"https://api.github.com/users/codecov-io/orgs","repos_url":"https://api.github.com/users/codecov-io/repos","events_url":"https://api.github.com/users/codecov-io/events{/privacy}","received_events_url":"https://api.github.com/users/codecov-io/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-18T21:14:12Z","updated_at":"2021-03-19T06:19:12Z","author_association":"NONE","body":"# [Codecov](https://codecov.io/gh/apache/incubator-pinot/pull/6686?src=pr&el=h1) Report\n> Merging [#6686](https://codecov.io/gh/apache/incubator-pinot/pull/6686?src=pr&el=desc) (88202c2) into [master](https://codecov.io/gh/apache/incubator-pinot/commit/1beaab59b73f26c4e35f3b9bc856b03806cddf5a?el=desc) (1beaab5) will **decrease** coverage by `22.91%`.\n> The diff coverage is `42.85%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/apache/incubator-pinot/pull/6686/graphs/tree.svg?width=650&height=150&src=pr&token=4ibza2ugkz)](https://codecov.io/gh/apache/incubator-pinot/pull/6686?src=pr&el=tree)\n\n```diff\n@@             Coverage Diff             @@\n##           master    #6686       +/-   ##\n===========================================\n- Coverage   66.44%   43.53%   -22.92%     \n===========================================\n  Files        1075     1391      +316     \n  Lines       54773    67583    +12810     \n  Branches     8168     9794     +1626     \n===========================================\n- Hits        36396    29420     -6976     \n- Misses      15700    35704    +20004     \n+ Partials     2677     2459      -218     \n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| integration | `43.53% <42.85%> (?)` | |\n\nFlags with carried forward coverage won't be shown. [Click here](https://docs.codecov.io/docs/carryforward-flags#carryforward-flags-in-the-pull-request-comment) to find out more.\n\n| [Impacted Files](https://codecov.io/gh/apache/incubator-pinot/pull/6686?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [...ot/broker/broker/AllowAllAccessControlFactory.java](https://codecov.io/gh/apache/incubator-pinot/pull/6686/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvYnJva2VyL0FsbG93QWxsQWNjZXNzQ29udHJvbEZhY3RvcnkuamF2YQ==) | `100.00% <ø> (ø)` | |\n| [...t/broker/broker/BasicAuthAccessControlFactory.java](https://codecov.io/gh/apache/incubator-pinot/pull/6686/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvYnJva2VyL0Jhc2ljQXV0aEFjY2Vzc0NvbnRyb2xGYWN0b3J5LmphdmE=) | `0.00% <0.00%> (ø)` | |\n| [.../helix/BrokerUserDefinedMessageHandlerFactory.java](https://codecov.io/gh/apache/incubator-pinot/pull/6686/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvYnJva2VyL2hlbGl4L0Jyb2tlclVzZXJEZWZpbmVkTWVzc2FnZUhhbmRsZXJGYWN0b3J5LmphdmE=) | `52.83% <0.00%> (-13.84%)` | :arrow_down: |\n| [...org/apache/pinot/broker/queryquota/HitCounter.java](https://codecov.io/gh/apache/incubator-pinot/pull/6686/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvcXVlcnlxdW90YS9IaXRDb3VudGVyLmphdmE=) | `0.00% <0.00%> (-100.00%)` | :arrow_down: |\n| [...che/pinot/broker/queryquota/MaxHitRateTracker.java](https://codecov.io/gh/apache/incubator-pinot/pull/6686/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvcXVlcnlxdW90YS9NYXhIaXRSYXRlVHJhY2tlci5qYXZh) | `0.00% <0.00%> (ø)` | |\n| [...ache/pinot/broker/queryquota/QueryQuotaEntity.java](https://codecov.io/gh/apache/incubator-pinot/pull/6686/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvcXVlcnlxdW90YS9RdWVyeVF1b3RhRW50aXR5LmphdmE=) | `0.00% <0.00%> (-50.00%)` | :arrow_down: |\n| [...ker/routing/instanceselector/InstanceSelector.java](https://codecov.io/gh/apache/incubator-pinot/pull/6686/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvcm91dGluZy9pbnN0YW5jZXNlbGVjdG9yL0luc3RhbmNlU2VsZWN0b3IuamF2YQ==) | `100.00% <ø> (ø)` | |\n| [...ceselector/StrictReplicaGroupInstanceSelector.java](https://codecov.io/gh/apache/incubator-pinot/pull/6686/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvcm91dGluZy9pbnN0YW5jZXNlbGVjdG9yL1N0cmljdFJlcGxpY2FHcm91cEluc3RhbmNlU2VsZWN0b3IuamF2YQ==) | `0.00% <0.00%> (ø)` | |\n| [...roker/routing/segmentpruner/TimeSegmentPruner.java](https://codecov.io/gh/apache/incubator-pinot/pull/6686/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvcm91dGluZy9zZWdtZW50cHJ1bmVyL1RpbWVTZWdtZW50UHJ1bmVyLmphdmE=) | `0.00% <0.00%> (ø)` | |\n| [...roker/routing/segmentpruner/interval/Interval.java](https://codecov.io/gh/apache/incubator-pinot/pull/6686/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvcm91dGluZy9zZWdtZW50cHJ1bmVyL2ludGVydmFsL0ludGVydmFsLmphdmE=) | `0.00% <0.00%> (ø)` | |\n| ... and [1418 more](https://codecov.io/gh/apache/incubator-pinot/pull/6686/diff?src=pr&el=tree-more) | |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/apache/incubator-pinot/pull/6686?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/apache/incubator-pinot/pull/6686?src=pr&el=footer). Last update [2d0d2ac...88202c2](https://codecov.io/gh/apache/incubator-pinot/pull/6686?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/802304323/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/802378978","html_url":"https://github.com/apache/pinot/pull/6695#issuecomment-802378978","issue_url":"https://api.github.com/repos/apache/pinot/issues/6695","id":802378978,"node_id":"MDEyOklzc3VlQ29tbWVudDgwMjM3ODk3OA==","user":{"login":"Jackie-Jiang","id":17555551,"node_id":"MDQ6VXNlcjE3NTU1NTUx","avatar_url":"https://avatars.githubusercontent.com/u/17555551?v=4","gravatar_id":"","url":"https://api.github.com/users/Jackie-Jiang","html_url":"https://github.com/Jackie-Jiang","followers_url":"https://api.github.com/users/Jackie-Jiang/followers","following_url":"https://api.github.com/users/Jackie-Jiang/following{/other_user}","gists_url":"https://api.github.com/users/Jackie-Jiang/gists{/gist_id}","starred_url":"https://api.github.com/users/Jackie-Jiang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Jackie-Jiang/subscriptions","organizations_url":"https://api.github.com/users/Jackie-Jiang/orgs","repos_url":"https://api.github.com/users/Jackie-Jiang/repos","events_url":"https://api.github.com/users/Jackie-Jiang/events{/privacy}","received_events_url":"https://api.github.com/users/Jackie-Jiang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-18T23:20:29Z","updated_at":"2021-03-18T23:20:29Z","author_association":"CONTRIBUTOR","body":"@mqliang @siddharthteotia Please take a look at #6696 ","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/802378978/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/802382120","html_url":"https://github.com/apache/pinot/pull/6695#issuecomment-802382120","issue_url":"https://api.github.com/repos/apache/pinot/issues/6695","id":802382120,"node_id":"MDEyOklzc3VlQ29tbWVudDgwMjM4MjEyMA==","user":{"login":"mqliang","id":12423751,"node_id":"MDQ6VXNlcjEyNDIzNzUx","avatar_url":"https://avatars.githubusercontent.com/u/12423751?v=4","gravatar_id":"","url":"https://api.github.com/users/mqliang","html_url":"https://github.com/mqliang","followers_url":"https://api.github.com/users/mqliang/followers","following_url":"https://api.github.com/users/mqliang/following{/other_user}","gists_url":"https://api.github.com/users/mqliang/gists{/gist_id}","starred_url":"https://api.github.com/users/mqliang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mqliang/subscriptions","organizations_url":"https://api.github.com/users/mqliang/orgs","repos_url":"https://api.github.com/users/mqliang/repos","events_url":"https://api.github.com/users/mqliang/events{/privacy}","received_events_url":"https://api.github.com/users/mqliang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-18T23:26:01Z","updated_at":"2021-03-18T23:26:01Z","author_association":"CONTRIBUTOR","body":"close this in favor of https://github.com/apache/incubator-pinot/pull/6696","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/802382120/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/802405103","html_url":"https://github.com/apache/pinot/pull/6696#issuecomment-802405103","issue_url":"https://api.github.com/repos/apache/pinot/issues/6696","id":802405103,"node_id":"MDEyOklzc3VlQ29tbWVudDgwMjQwNTEwMw==","user":{"login":"codecov-io","id":8655789,"node_id":"MDQ6VXNlcjg2NTU3ODk=","avatar_url":"https://avatars.githubusercontent.com/u/8655789?v=4","gravatar_id":"","url":"https://api.github.com/users/codecov-io","html_url":"https://github.com/codecov-io","followers_url":"https://api.github.com/users/codecov-io/followers","following_url":"https://api.github.com/users/codecov-io/following{/other_user}","gists_url":"https://api.github.com/users/codecov-io/gists{/gist_id}","starred_url":"https://api.github.com/users/codecov-io/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codecov-io/subscriptions","organizations_url":"https://api.github.com/users/codecov-io/orgs","repos_url":"https://api.github.com/users/codecov-io/repos","events_url":"https://api.github.com/users/codecov-io/events{/privacy}","received_events_url":"https://api.github.com/users/codecov-io/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-19T00:14:31Z","updated_at":"2021-03-19T00:14:31Z","author_association":"NONE","body":"# [Codecov](https://codecov.io/gh/apache/incubator-pinot/pull/6696?src=pr&el=h1) Report\n> Merging [#6696](https://codecov.io/gh/apache/incubator-pinot/pull/6696?src=pr&el=desc) (0df447c) into [master](https://codecov.io/gh/apache/incubator-pinot/commit/1beaab59b73f26c4e35f3b9bc856b03806cddf5a?el=desc) (1beaab5) will **decrease** coverage by `0.49%`.\n> The diff coverage is `62.64%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/apache/incubator-pinot/pull/6696/graphs/tree.svg?width=650&height=150&src=pr&token=4ibza2ugkz)](https://codecov.io/gh/apache/incubator-pinot/pull/6696?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master    #6696      +/-   ##\n==========================================\n- Coverage   66.44%   65.95%   -0.50%     \n==========================================\n  Files        1075     1390     +315     \n  Lines       54773    67511   +12738     \n  Branches     8168     9783    +1615     \n==========================================\n+ Hits        36396    44524    +8128     \n- Misses      15700    19819    +4119     \n- Partials     2677     3168     +491     \n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| unittests | `65.95% <62.64%> (?)` | |\n\nFlags with carried forward coverage won't be shown. [Click here](https://docs.codecov.io/docs/carryforward-flags#carryforward-flags-in-the-pull-request-comment) to find out more.\n\n| [Impacted Files](https://codecov.io/gh/apache/incubator-pinot/pull/6696?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [...e/pinot/broker/api/resources/PinotBrokerDebug.java](https://codecov.io/gh/apache/incubator-pinot/pull/6696/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvYXBpL3Jlc291cmNlcy9QaW5vdEJyb2tlckRlYnVnLmphdmE=) | `0.00% <0.00%> (-79.32%)` | :arrow_down: |\n| [...pinot/broker/api/resources/PinotClientRequest.java](https://codecov.io/gh/apache/incubator-pinot/pull/6696/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvYXBpL3Jlc291cmNlcy9QaW5vdENsaWVudFJlcXVlc3QuamF2YQ==) | `0.00% <0.00%> (-27.28%)` | :arrow_down: |\n| [...ot/broker/broker/AllowAllAccessControlFactory.java](https://codecov.io/gh/apache/incubator-pinot/pull/6696/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvYnJva2VyL0FsbG93QWxsQWNjZXNzQ29udHJvbEZhY3RvcnkuamF2YQ==) | `71.42% <ø> (-28.58%)` | :arrow_down: |\n| [.../helix/BrokerUserDefinedMessageHandlerFactory.java](https://codecov.io/gh/apache/incubator-pinot/pull/6696/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvYnJva2VyL2hlbGl4L0Jyb2tlclVzZXJEZWZpbmVkTWVzc2FnZUhhbmRsZXJGYWN0b3J5LmphdmE=) | `33.96% <0.00%> (-32.71%)` | :arrow_down: |\n| [...ker/routing/instanceselector/InstanceSelector.java](https://codecov.io/gh/apache/incubator-pinot/pull/6696/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvcm91dGluZy9pbnN0YW5jZXNlbGVjdG9yL0luc3RhbmNlU2VsZWN0b3IuamF2YQ==) | `100.00% <ø> (ø)` | |\n| [...ava/org/apache/pinot/client/AbstractResultSet.java](https://codecov.io/gh/apache/incubator-pinot/pull/6696/diff?src=pr&el=tree#diff-cGlub3QtY2xpZW50cy9waW5vdC1qYXZhLWNsaWVudC9zcmMvbWFpbi9qYXZhL29yZy9hcGFjaGUvcGlub3QvY2xpZW50L0Fic3RyYWN0UmVzdWx0U2V0LmphdmE=) | `66.66% <ø> (+9.52%)` | :arrow_up: |\n| [...n/java/org/apache/pinot/client/BrokerResponse.java](https://codecov.io/gh/apache/incubator-pinot/pull/6696/diff?src=pr&el=tree#diff-cGlub3QtY2xpZW50cy9waW5vdC1qYXZhLWNsaWVudC9zcmMvbWFpbi9qYXZhL29yZy9hcGFjaGUvcGlub3QvY2xpZW50L0Jyb2tlclJlc3BvbnNlLmphdmE=) | `100.00% <ø> (ø)` | |\n| [.../main/java/org/apache/pinot/client/Connection.java](https://codecov.io/gh/apache/incubator-pinot/pull/6696/diff?src=pr&el=tree#diff-cGlub3QtY2xpZW50cy9waW5vdC1qYXZhLWNsaWVudC9zcmMvbWFpbi9qYXZhL29yZy9hcGFjaGUvcGlub3QvY2xpZW50L0Nvbm5lY3Rpb24uamF2YQ==) | `35.55% <ø> (-13.29%)` | :arrow_down: |\n| [...org/apache/pinot/client/DynamicBrokerSelector.java](https://codecov.io/gh/apache/incubator-pinot/pull/6696/diff?src=pr&el=tree#diff-cGlub3QtY2xpZW50cy9waW5vdC1qYXZhLWNsaWVudC9zcmMvbWFpbi9qYXZhL29yZy9hcGFjaGUvcGlub3QvY2xpZW50L0R5bmFtaWNCcm9rZXJTZWxlY3Rvci5qYXZh) | `82.85% <ø> (+10.12%)` | :arrow_up: |\n| [...n/java/org/apache/pinot/client/ExecutionStats.java](https://codecov.io/gh/apache/incubator-pinot/pull/6696/diff?src=pr&el=tree#diff-cGlub3QtY2xpZW50cy9waW5vdC1qYXZhLWNsaWVudC9zcmMvbWFpbi9qYXZhL29yZy9hcGFjaGUvcGlub3QvY2xpZW50L0V4ZWN1dGlvblN0YXRzLmphdmE=) | `68.88% <ø> (ø)` | |\n| ... and [1275 more](https://codecov.io/gh/apache/incubator-pinot/pull/6696/diff?src=pr&el=tree-more) | |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/apache/incubator-pinot/pull/6696?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/apache/incubator-pinot/pull/6696?src=pr&el=footer). Last update [2d0d2ac...0df447c](https://codecov.io/gh/apache/incubator-pinot/pull/6696?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/802405103/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/802430511","html_url":"https://github.com/apache/pinot/pull/6696#issuecomment-802430511","issue_url":"https://api.github.com/repos/apache/pinot/issues/6696","id":802430511,"node_id":"MDEyOklzc3VlQ29tbWVudDgwMjQzMDUxMQ==","user":{"login":"mqliang","id":12423751,"node_id":"MDQ6VXNlcjEyNDIzNzUx","avatar_url":"https://avatars.githubusercontent.com/u/12423751?v=4","gravatar_id":"","url":"https://api.github.com/users/mqliang","html_url":"https://github.com/mqliang","followers_url":"https://api.github.com/users/mqliang/followers","following_url":"https://api.github.com/users/mqliang/following{/other_user}","gists_url":"https://api.github.com/users/mqliang/gists{/gist_id}","starred_url":"https://api.github.com/users/mqliang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mqliang/subscriptions","organizations_url":"https://api.github.com/users/mqliang/orgs","repos_url":"https://api.github.com/users/mqliang/repos","events_url":"https://api.github.com/users/mqliang/events{/privacy}","received_events_url":"https://api.github.com/users/mqliang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-19T01:03:34Z","updated_at":"2021-03-19T01:03:34Z","author_association":"CONTRIBUTOR","body":"@Jackie-Jiang Thanks for working on this. Have a minor comments and LGTM otherwise.","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/802430511/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/802561005","html_url":"https://github.com/apache/pinot/pull/6697#issuecomment-802561005","issue_url":"https://api.github.com/repos/apache/pinot/issues/6697","id":802561005,"node_id":"MDEyOklzc3VlQ29tbWVudDgwMjU2MTAwNQ==","user":{"login":"codecov-io","id":8655789,"node_id":"MDQ6VXNlcjg2NTU3ODk=","avatar_url":"https://avatars.githubusercontent.com/u/8655789?v=4","gravatar_id":"","url":"https://api.github.com/users/codecov-io","html_url":"https://github.com/codecov-io","followers_url":"https://api.github.com/users/codecov-io/followers","following_url":"https://api.github.com/users/codecov-io/following{/other_user}","gists_url":"https://api.github.com/users/codecov-io/gists{/gist_id}","starred_url":"https://api.github.com/users/codecov-io/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codecov-io/subscriptions","organizations_url":"https://api.github.com/users/codecov-io/orgs","repos_url":"https://api.github.com/users/codecov-io/repos","events_url":"https://api.github.com/users/codecov-io/events{/privacy}","received_events_url":"https://api.github.com/users/codecov-io/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-19T05:07:48Z","updated_at":"2021-03-19T05:07:48Z","author_association":"NONE","body":"# [Codecov](https://codecov.io/gh/apache/incubator-pinot/pull/6697?src=pr&el=h1) Report\n> Merging [#6697](https://codecov.io/gh/apache/incubator-pinot/pull/6697?src=pr&el=desc) (7dea09c) into [master](https://codecov.io/gh/apache/incubator-pinot/commit/1beaab59b73f26c4e35f3b9bc856b03806cddf5a?el=desc) (1beaab5) will **decrease** coverage by `23.01%`.\n> The diff coverage is `42.93%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/apache/incubator-pinot/pull/6697/graphs/tree.svg?width=650&height=150&src=pr&token=4ibza2ugkz)](https://codecov.io/gh/apache/incubator-pinot/pull/6697?src=pr&el=tree)\n\n```diff\n@@             Coverage Diff             @@\n##           master    #6697       +/-   ##\n===========================================\n- Coverage   66.44%   43.42%   -23.02%     \n===========================================\n  Files        1075     1391      +316     \n  Lines       54773    67583    +12810     \n  Branches     8168     9794     +1626     \n===========================================\n- Hits        36396    29351     -7045     \n- Misses      15700    35759    +20059     \n+ Partials     2677     2473      -204     \n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| integration | `43.42% <42.93%> (?)` | |\n\nFlags with carried forward coverage won't be shown. [Click here](https://docs.codecov.io/docs/carryforward-flags#carryforward-flags-in-the-pull-request-comment) to find out more.\n\n| [Impacted Files](https://codecov.io/gh/apache/incubator-pinot/pull/6697?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [...ot/broker/broker/AllowAllAccessControlFactory.java](https://codecov.io/gh/apache/incubator-pinot/pull/6697/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvYnJva2VyL0FsbG93QWxsQWNjZXNzQ29udHJvbEZhY3RvcnkuamF2YQ==) | `100.00% <ø> (ø)` | |\n| [...t/broker/broker/BasicAuthAccessControlFactory.java](https://codecov.io/gh/apache/incubator-pinot/pull/6697/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvYnJva2VyL0Jhc2ljQXV0aEFjY2Vzc0NvbnRyb2xGYWN0b3J5LmphdmE=) | `0.00% <0.00%> (ø)` | |\n| [.../helix/BrokerUserDefinedMessageHandlerFactory.java](https://codecov.io/gh/apache/incubator-pinot/pull/6697/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvYnJva2VyL2hlbGl4L0Jyb2tlclVzZXJEZWZpbmVkTWVzc2FnZUhhbmRsZXJGYWN0b3J5LmphdmE=) | `52.83% <0.00%> (-13.84%)` | :arrow_down: |\n| [...org/apache/pinot/broker/queryquota/HitCounter.java](https://codecov.io/gh/apache/incubator-pinot/pull/6697/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvcXVlcnlxdW90YS9IaXRDb3VudGVyLmphdmE=) | `0.00% <0.00%> (-100.00%)` | :arrow_down: |\n| [...che/pinot/broker/queryquota/MaxHitRateTracker.java](https://codecov.io/gh/apache/incubator-pinot/pull/6697/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvcXVlcnlxdW90YS9NYXhIaXRSYXRlVHJhY2tlci5qYXZh) | `0.00% <0.00%> (ø)` | |\n| [...ache/pinot/broker/queryquota/QueryQuotaEntity.java](https://codecov.io/gh/apache/incubator-pinot/pull/6697/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvcXVlcnlxdW90YS9RdWVyeVF1b3RhRW50aXR5LmphdmE=) | `0.00% <0.00%> (-50.00%)` | :arrow_down: |\n| [...ker/routing/instanceselector/InstanceSelector.java](https://codecov.io/gh/apache/incubator-pinot/pull/6697/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvcm91dGluZy9pbnN0YW5jZXNlbGVjdG9yL0luc3RhbmNlU2VsZWN0b3IuamF2YQ==) | `100.00% <ø> (ø)` | |\n| [...ceselector/StrictReplicaGroupInstanceSelector.java](https://codecov.io/gh/apache/incubator-pinot/pull/6697/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvcm91dGluZy9pbnN0YW5jZXNlbGVjdG9yL1N0cmljdFJlcGxpY2FHcm91cEluc3RhbmNlU2VsZWN0b3IuamF2YQ==) | `0.00% <0.00%> (ø)` | |\n| [...roker/routing/segmentpruner/TimeSegmentPruner.java](https://codecov.io/gh/apache/incubator-pinot/pull/6697/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvcm91dGluZy9zZWdtZW50cHJ1bmVyL1RpbWVTZWdtZW50UHJ1bmVyLmphdmE=) | `0.00% <0.00%> (ø)` | |\n| [...roker/routing/segmentpruner/interval/Interval.java](https://codecov.io/gh/apache/incubator-pinot/pull/6697/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvcm91dGluZy9zZWdtZW50cHJ1bmVyL2ludGVydmFsL0ludGVydmFsLmphdmE=) | `0.00% <0.00%> (ø)` | |\n| ... and [1418 more](https://codecov.io/gh/apache/incubator-pinot/pull/6697/diff?src=pr&el=tree-more) | |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/apache/incubator-pinot/pull/6697?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/apache/incubator-pinot/pull/6697?src=pr&el=footer). Last update [2d0d2ac...7dea09c](https://codecov.io/gh/apache/incubator-pinot/pull/6697?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/802561005/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/803009052","html_url":"https://github.com/apache/pinot/issues/6699#issuecomment-803009052","issue_url":"https://api.github.com/repos/apache/pinot/issues/6699","id":803009052,"node_id":"MDEyOklzc3VlQ29tbWVudDgwMzAwOTA1Mg==","user":{"login":"Jackie-Jiang","id":17555551,"node_id":"MDQ6VXNlcjE3NTU1NTUx","avatar_url":"https://avatars.githubusercontent.com/u/17555551?v=4","gravatar_id":"","url":"https://api.github.com/users/Jackie-Jiang","html_url":"https://github.com/Jackie-Jiang","followers_url":"https://api.github.com/users/Jackie-Jiang/followers","following_url":"https://api.github.com/users/Jackie-Jiang/following{/other_user}","gists_url":"https://api.github.com/users/Jackie-Jiang/gists{/gist_id}","starred_url":"https://api.github.com/users/Jackie-Jiang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Jackie-Jiang/subscriptions","organizations_url":"https://api.github.com/users/Jackie-Jiang/orgs","repos_url":"https://api.github.com/users/Jackie-Jiang/repos","events_url":"https://api.github.com/users/Jackie-Jiang/events{/privacy}","received_events_url":"https://api.github.com/users/Jackie-Jiang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-19T17:54:47Z","updated_at":"2021-03-19T17:54:47Z","author_association":"CONTRIBUTOR","body":"Can you please elaborate more on which operation has caused the exception? I am able to parse the JSON posted here without any exception.\r\nYes, we can add an option for data ingestion to put default value if the parsing encounters exception.","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/803009052/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/803211667","html_url":"https://github.com/apache/pinot/pull/6703#issuecomment-803211667","issue_url":"https://api.github.com/repos/apache/pinot/issues/6703","id":803211667,"node_id":"MDEyOklzc3VlQ29tbWVudDgwMzIxMTY2Nw==","user":{"login":"skhatri","id":1069548,"node_id":"MDQ6VXNlcjEwNjk1NDg=","avatar_url":"https://avatars.githubusercontent.com/u/1069548?v=4","gravatar_id":"","url":"https://api.github.com/users/skhatri","html_url":"https://github.com/skhatri","followers_url":"https://api.github.com/users/skhatri/followers","following_url":"https://api.github.com/users/skhatri/following{/other_user}","gists_url":"https://api.github.com/users/skhatri/gists{/gist_id}","starred_url":"https://api.github.com/users/skhatri/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/skhatri/subscriptions","organizations_url":"https://api.github.com/users/skhatri/orgs","repos_url":"https://api.github.com/users/skhatri/repos","events_url":"https://api.github.com/users/skhatri/events{/privacy}","received_events_url":"https://api.github.com/users/skhatri/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-20T00:56:08Z","updated_at":"2021-03-20T00:56:08Z","author_association":"NONE","body":"dependency tree(mvn -pl pinot-spi dependency:tree) with slf4j-api \r\n[INFO] org.apache.pinot:pinot-spi:jar:0.7.0-SNAPSHOT\r\n[INFO] +- commons-configuration:commons-configuration:jar:1.10:compile\r\n[INFO] +- commons-codec:commons-codec:jar:1.6:compile\r\n[INFO] +- commons-io:commons-io:jar:2.4:compile\r\n[INFO] +- commons-lang:commons-lang:jar:2.6:compile\r\n[INFO] +- commons-logging:commons-logging:jar:1.2:compile\r\n[INFO] +- org.apache.commons:commons-lang3:jar:3.5:compile\r\n[INFO] +- commons-collections:commons-collections:jar:3.2.1:compile\r\n[INFO] +- com.google.guava:guava:jar:20.0:compile\r\n[INFO] +- com.google.code.findbugs:jsr305:jar:3.0.0:compile\r\n[INFO] +- org.slf4j:slf4j-api:jar:1.7.25:compile\r\n[INFO] +- com.lmax:disruptor:jar:3.3.4:compile\r\n[INFO] +- org.apache.logging.log4j:log4j-1.2-api:jar:2.11.2:compile\r\n[INFO] |  +- org.apache.logging.log4j:log4j-api:jar:2.11.2:compile\r\n[INFO] |  \\- org.apache.logging.log4j:log4j-core:jar:2.11.2:compile\r\n[INFO] +- joda-time:joda-time:jar:2.10.5:compile\r\n[INFO] +- com.fasterxml.jackson.core:jackson-annotations:jar:2.10.0:compile\r\n[INFO] +- org.yaml:snakeyaml:jar:1.16:compile\r\n[INFO] +- com.fasterxml.jackson.core:jackson-databind:jar:2.10.0:compile\r\n[INFO] |  \\- com.fasterxml.jackson.core:jackson-core:jar:2.10.0:compile\r\n[INFO] +- org.apache.avro:avro:jar:1.7.6:compile\r\n[INFO] |  +- org.codehaus.jackson:jackson-core-asl:jar:1.9.13:compile\r\n[INFO] |  +- org.codehaus.jackson:jackson-mapper-asl:jar:1.9.13:compile\r\n[INFO] |  +- com.thoughtworks.paranamer:paranamer:jar:2.8:compile\r\n[INFO] |  +- org.xerial.snappy:snappy-java:jar:1.1.1.7:compile\r\n[INFO] |  \\- org.apache.commons:commons-compress:jar:1.20:compile\r\n[INFO] +- org.codehaus.groovy:groovy-all:jar:2.4.21:compile\r\n[INFO] +- org.testng:testng:jar:6.11:test\r\n[INFO] |  \\- com.beust:jcommander:jar:1.64:test\r\n[INFO] \\- org.reflections:reflections:jar:0.9.11:compile\r\n[INFO]    \\- org.javassist:javassist:jar:3.19.0-GA:compile","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/803211667/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/803236555","html_url":"https://github.com/apache/pinot/pull/6703#issuecomment-803236555","issue_url":"https://api.github.com/repos/apache/pinot/issues/6703","id":803236555,"node_id":"MDEyOklzc3VlQ29tbWVudDgwMzIzNjU1NQ==","user":{"login":"codecov-io","id":8655789,"node_id":"MDQ6VXNlcjg2NTU3ODk=","avatar_url":"https://avatars.githubusercontent.com/u/8655789?v=4","gravatar_id":"","url":"https://api.github.com/users/codecov-io","html_url":"https://github.com/codecov-io","followers_url":"https://api.github.com/users/codecov-io/followers","following_url":"https://api.github.com/users/codecov-io/following{/other_user}","gists_url":"https://api.github.com/users/codecov-io/gists{/gist_id}","starred_url":"https://api.github.com/users/codecov-io/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codecov-io/subscriptions","organizations_url":"https://api.github.com/users/codecov-io/orgs","repos_url":"https://api.github.com/users/codecov-io/repos","events_url":"https://api.github.com/users/codecov-io/events{/privacy}","received_events_url":"https://api.github.com/users/codecov-io/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-20T03:27:15Z","updated_at":"2021-03-20T03:27:15Z","author_association":"NONE","body":"# [Codecov](https://codecov.io/gh/apache/incubator-pinot/pull/6703?src=pr&el=h1) Report\n> Merging [#6703](https://codecov.io/gh/apache/incubator-pinot/pull/6703?src=pr&el=desc) (ff3b370) into [master](https://codecov.io/gh/apache/incubator-pinot/commit/1beaab59b73f26c4e35f3b9bc856b03806cddf5a?el=desc) (1beaab5) will **decrease** coverage by `0.56%`.\n> The diff coverage is `62.64%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/apache/incubator-pinot/pull/6703/graphs/tree.svg?width=650&height=150&src=pr&token=4ibza2ugkz)](https://codecov.io/gh/apache/incubator-pinot/pull/6703?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master    #6703      +/-   ##\n==========================================\n- Coverage   66.44%   65.87%   -0.57%     \n==========================================\n  Files        1075     1391     +316     \n  Lines       54773    67583   +12810     \n  Branches     8168     9794    +1626     \n==========================================\n+ Hits        36396    44523    +8127     \n- Misses      15700    19880    +4180     \n- Partials     2677     3180     +503     \n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| unittests | `65.87% <62.64%> (?)` | |\n\nFlags with carried forward coverage won't be shown. [Click here](https://docs.codecov.io/docs/carryforward-flags#carryforward-flags-in-the-pull-request-comment) to find out more.\n\n| [Impacted Files](https://codecov.io/gh/apache/incubator-pinot/pull/6703?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [...e/pinot/broker/api/resources/PinotBrokerDebug.java](https://codecov.io/gh/apache/incubator-pinot/pull/6703/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvYXBpL3Jlc291cmNlcy9QaW5vdEJyb2tlckRlYnVnLmphdmE=) | `0.00% <0.00%> (-79.32%)` | :arrow_down: |\n| [...pinot/broker/api/resources/PinotClientRequest.java](https://codecov.io/gh/apache/incubator-pinot/pull/6703/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvYXBpL3Jlc291cmNlcy9QaW5vdENsaWVudFJlcXVlc3QuamF2YQ==) | `0.00% <0.00%> (-27.28%)` | :arrow_down: |\n| [...ot/broker/broker/AllowAllAccessControlFactory.java](https://codecov.io/gh/apache/incubator-pinot/pull/6703/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvYnJva2VyL0FsbG93QWxsQWNjZXNzQ29udHJvbEZhY3RvcnkuamF2YQ==) | `71.42% <ø> (-28.58%)` | :arrow_down: |\n| [.../helix/BrokerUserDefinedMessageHandlerFactory.java](https://codecov.io/gh/apache/incubator-pinot/pull/6703/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvYnJva2VyL2hlbGl4L0Jyb2tlclVzZXJEZWZpbmVkTWVzc2FnZUhhbmRsZXJGYWN0b3J5LmphdmE=) | `33.96% <0.00%> (-32.71%)` | :arrow_down: |\n| [...ker/routing/instanceselector/InstanceSelector.java](https://codecov.io/gh/apache/incubator-pinot/pull/6703/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvcm91dGluZy9pbnN0YW5jZXNlbGVjdG9yL0luc3RhbmNlU2VsZWN0b3IuamF2YQ==) | `100.00% <ø> (ø)` | |\n| [...ava/org/apache/pinot/client/AbstractResultSet.java](https://codecov.io/gh/apache/incubator-pinot/pull/6703/diff?src=pr&el=tree#diff-cGlub3QtY2xpZW50cy9waW5vdC1qYXZhLWNsaWVudC9zcmMvbWFpbi9qYXZhL29yZy9hcGFjaGUvcGlub3QvY2xpZW50L0Fic3RyYWN0UmVzdWx0U2V0LmphdmE=) | `66.66% <ø> (+9.52%)` | :arrow_up: |\n| [...n/java/org/apache/pinot/client/BrokerResponse.java](https://codecov.io/gh/apache/incubator-pinot/pull/6703/diff?src=pr&el=tree#diff-cGlub3QtY2xpZW50cy9waW5vdC1qYXZhLWNsaWVudC9zcmMvbWFpbi9qYXZhL29yZy9hcGFjaGUvcGlub3QvY2xpZW50L0Jyb2tlclJlc3BvbnNlLmphdmE=) | `100.00% <ø> (ø)` | |\n| [.../main/java/org/apache/pinot/client/Connection.java](https://codecov.io/gh/apache/incubator-pinot/pull/6703/diff?src=pr&el=tree#diff-cGlub3QtY2xpZW50cy9waW5vdC1qYXZhLWNsaWVudC9zcmMvbWFpbi9qYXZhL29yZy9hcGFjaGUvcGlub3QvY2xpZW50L0Nvbm5lY3Rpb24uamF2YQ==) | `35.55% <ø> (-13.29%)` | :arrow_down: |\n| [...org/apache/pinot/client/DynamicBrokerSelector.java](https://codecov.io/gh/apache/incubator-pinot/pull/6703/diff?src=pr&el=tree#diff-cGlub3QtY2xpZW50cy9waW5vdC1qYXZhLWNsaWVudC9zcmMvbWFpbi9qYXZhL29yZy9hcGFjaGUvcGlub3QvY2xpZW50L0R5bmFtaWNCcm9rZXJTZWxlY3Rvci5qYXZh) | `82.85% <ø> (+10.12%)` | :arrow_up: |\n| [...n/java/org/apache/pinot/client/ExecutionStats.java](https://codecov.io/gh/apache/incubator-pinot/pull/6703/diff?src=pr&el=tree#diff-cGlub3QtY2xpZW50cy9waW5vdC1qYXZhLWNsaWVudC9zcmMvbWFpbi9qYXZhL29yZy9hcGFjaGUvcGlub3QvY2xpZW50L0V4ZWN1dGlvblN0YXRzLmphdmE=) | `68.88% <ø> (ø)` | |\n| ... and [1277 more](https://codecov.io/gh/apache/incubator-pinot/pull/6703/diff?src=pr&el=tree-more) | |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/apache/incubator-pinot/pull/6703?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/apache/incubator-pinot/pull/6703?src=pr&el=footer). Last update [3c055f3...ff3b370](https://codecov.io/gh/apache/incubator-pinot/pull/6703?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/803236555/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/803634950","html_url":"https://github.com/apache/pinot/issues/6704#issuecomment-803634950","issue_url":"https://api.github.com/repos/apache/pinot/issues/6704","id":803634950,"node_id":"MDEyOklzc3VlQ29tbWVudDgwMzYzNDk1MA==","user":{"login":"xiangfu0","id":1202120,"node_id":"MDQ6VXNlcjEyMDIxMjA=","avatar_url":"https://avatars.githubusercontent.com/u/1202120?v=4","gravatar_id":"","url":"https://api.github.com/users/xiangfu0","html_url":"https://github.com/xiangfu0","followers_url":"https://api.github.com/users/xiangfu0/followers","following_url":"https://api.github.com/users/xiangfu0/following{/other_user}","gists_url":"https://api.github.com/users/xiangfu0/gists{/gist_id}","starred_url":"https://api.github.com/users/xiangfu0/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xiangfu0/subscriptions","organizations_url":"https://api.github.com/users/xiangfu0/orgs","repos_url":"https://api.github.com/users/xiangfu0/repos","events_url":"https://api.github.com/users/xiangfu0/events{/privacy}","received_events_url":"https://api.github.com/users/xiangfu0/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-21T18:14:05Z","updated_at":"2021-03-21T18:14:05Z","author_association":"CONTRIBUTOR","body":"Can you try with latest pinot tag for minion?","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/803634950/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/803635990","html_url":"https://github.com/apache/pinot/pull/6705#issuecomment-803635990","issue_url":"https://api.github.com/repos/apache/pinot/issues/6705","id":803635990,"node_id":"MDEyOklzc3VlQ29tbWVudDgwMzYzNTk5MA==","user":{"login":"kishoreg","id":850791,"node_id":"MDQ6VXNlcjg1MDc5MQ==","avatar_url":"https://avatars.githubusercontent.com/u/850791?v=4","gravatar_id":"","url":"https://api.github.com/users/kishoreg","html_url":"https://github.com/kishoreg","followers_url":"https://api.github.com/users/kishoreg/followers","following_url":"https://api.github.com/users/kishoreg/following{/other_user}","gists_url":"https://api.github.com/users/kishoreg/gists{/gist_id}","starred_url":"https://api.github.com/users/kishoreg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kishoreg/subscriptions","organizations_url":"https://api.github.com/users/kishoreg/orgs","repos_url":"https://api.github.com/users/kishoreg/repos","events_url":"https://api.github.com/users/kishoreg/events{/privacy}","received_events_url":"https://api.github.com/users/kishoreg/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-21T18:20:21Z","updated_at":"2021-03-21T18:20:21Z","author_association":"MEMBER","body":"@timebertt thanks for the fix","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/803635990/reactions","total_count":1,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":1,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/803659267","html_url":"https://github.com/apache/pinot/issues/6704#issuecomment-803659267","issue_url":"https://api.github.com/repos/apache/pinot/issues/6704","id":803659267,"node_id":"MDEyOklzc3VlQ29tbWVudDgwMzY1OTI2Nw==","user":{"login":"timebertt","id":46341950,"node_id":"MDQ6VXNlcjQ2MzQxOTUw","avatar_url":"https://avatars.githubusercontent.com/u/46341950?v=4","gravatar_id":"","url":"https://api.github.com/users/timebertt","html_url":"https://github.com/timebertt","followers_url":"https://api.github.com/users/timebertt/followers","following_url":"https://api.github.com/users/timebertt/following{/other_user}","gists_url":"https://api.github.com/users/timebertt/gists{/gist_id}","starred_url":"https://api.github.com/users/timebertt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/timebertt/subscriptions","organizations_url":"https://api.github.com/users/timebertt/orgs","repos_url":"https://api.github.com/users/timebertt/repos","events_url":"https://api.github.com/users/timebertt/events{/privacy}","received_events_url":"https://api.github.com/users/timebertt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-21T21:01:31Z","updated_at":"2021-03-21T21:01:31Z","author_association":"CONTRIBUTOR","body":"Thanks, that works!","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/803659267/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/804385348","html_url":"https://github.com/apache/pinot/issues/6700#issuecomment-804385348","issue_url":"https://api.github.com/repos/apache/pinot/issues/6700","id":804385348,"node_id":"MDEyOklzc3VlQ29tbWVudDgwNDM4NTM0OA==","user":{"login":"siddharthteotia","id":2150694,"node_id":"MDQ6VXNlcjIxNTA2OTQ=","avatar_url":"https://avatars.githubusercontent.com/u/2150694?v=4","gravatar_id":"","url":"https://api.github.com/users/siddharthteotia","html_url":"https://github.com/siddharthteotia","followers_url":"https://api.github.com/users/siddharthteotia/followers","following_url":"https://api.github.com/users/siddharthteotia/following{/other_user}","gists_url":"https://api.github.com/users/siddharthteotia/gists{/gist_id}","starred_url":"https://api.github.com/users/siddharthteotia/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/siddharthteotia/subscriptions","organizations_url":"https://api.github.com/users/siddharthteotia/orgs","repos_url":"https://api.github.com/users/siddharthteotia/repos","events_url":"https://api.github.com/users/siddharthteotia/events{/privacy}","received_events_url":"https://api.github.com/users/siddharthteotia/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-22T20:50:40Z","updated_at":"2021-03-22T20:50:40Z","author_association":"CONTRIBUTOR","body":"@mqliang , do you want to take this up?","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/804385348/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/804385891","html_url":"https://github.com/apache/pinot/issues/6706#issuecomment-804385891","issue_url":"https://api.github.com/repos/apache/pinot/issues/6706","id":804385891,"node_id":"MDEyOklzc3VlQ29tbWVudDgwNDM4NTg5MQ==","user":{"login":"xiangfu0","id":1202120,"node_id":"MDQ6VXNlcjEyMDIxMjA=","avatar_url":"https://avatars.githubusercontent.com/u/1202120?v=4","gravatar_id":"","url":"https://api.github.com/users/xiangfu0","html_url":"https://github.com/xiangfu0","followers_url":"https://api.github.com/users/xiangfu0/followers","following_url":"https://api.github.com/users/xiangfu0/following{/other_user}","gists_url":"https://api.github.com/users/xiangfu0/gists{/gist_id}","starred_url":"https://api.github.com/users/xiangfu0/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xiangfu0/subscriptions","organizations_url":"https://api.github.com/users/xiangfu0/orgs","repos_url":"https://api.github.com/users/xiangfu0/repos","events_url":"https://api.github.com/users/xiangfu0/events{/privacy}","received_events_url":"https://api.github.com/users/xiangfu0/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-22T20:51:33Z","updated_at":"2021-03-22T20:51:33Z","author_association":"CONTRIBUTOR","body":"@Jackie-Jiang does pinot support transform function on top of aggregations?","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/804385891/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/804388709","html_url":"https://github.com/apache/pinot/issues/6700#issuecomment-804388709","issue_url":"https://api.github.com/repos/apache/pinot/issues/6700","id":804388709,"node_id":"MDEyOklzc3VlQ29tbWVudDgwNDM4ODcwOQ==","user":{"login":"mqliang","id":12423751,"node_id":"MDQ6VXNlcjEyNDIzNzUx","avatar_url":"https://avatars.githubusercontent.com/u/12423751?v=4","gravatar_id":"","url":"https://api.github.com/users/mqliang","html_url":"https://github.com/mqliang","followers_url":"https://api.github.com/users/mqliang/followers","following_url":"https://api.github.com/users/mqliang/following{/other_user}","gists_url":"https://api.github.com/users/mqliang/gists{/gist_id}","starred_url":"https://api.github.com/users/mqliang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mqliang/subscriptions","organizations_url":"https://api.github.com/users/mqliang/orgs","repos_url":"https://api.github.com/users/mqliang/repos","events_url":"https://api.github.com/users/mqliang/events{/privacy}","received_events_url":"https://api.github.com/users/mqliang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-22T20:56:22Z","updated_at":"2021-03-22T20:56:22Z","author_association":"CONTRIBUTOR","body":"Sure. I can pickup this.","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/804388709/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/804394441","html_url":"https://github.com/apache/pinot/pull/6567#issuecomment-804394441","issue_url":"https://api.github.com/repos/apache/pinot/issues/6567","id":804394441,"node_id":"MDEyOklzc3VlQ29tbWVudDgwNDM5NDQ0MQ==","user":{"login":"chenboat","id":2549137,"node_id":"MDQ6VXNlcjI1NDkxMzc=","avatar_url":"https://avatars.githubusercontent.com/u/2549137?v=4","gravatar_id":"","url":"https://api.github.com/users/chenboat","html_url":"https://github.com/chenboat","followers_url":"https://api.github.com/users/chenboat/followers","following_url":"https://api.github.com/users/chenboat/following{/other_user}","gists_url":"https://api.github.com/users/chenboat/gists{/gist_id}","starred_url":"https://api.github.com/users/chenboat/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/chenboat/subscriptions","organizations_url":"https://api.github.com/users/chenboat/orgs","repos_url":"https://api.github.com/users/chenboat/repos","events_url":"https://api.github.com/users/chenboat/events{/privacy}","received_events_url":"https://api.github.com/users/chenboat/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-22T21:05:44Z","updated_at":"2021-03-22T21:05:44Z","author_association":"CONTRIBUTOR","body":"A new integration test UpsertTableSegmentUploadIntegrationTest is added to verify the uploaded segment is added to a realtime upsert enabled table correctly.  The segment name used in the test does not follow llc segment convention but it is loaded successfully. The query result is good. \r\n\r\nI do quite understand why we should \"Exclude uploaded segment from the processing\". During segment load, the upsert table metadata should be processed based on the loaded segment, right?\r\n\r\n> Please take a look at `PinotLLCRealtimeSegmentManager` and ensure it works on uploaded segments:\r\n> \r\n> * Segment name for uploaded segment does not follow the llc segment name convention\r\n> * Exclude uploaded segment from the processing\r\n\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/804394441/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/804398562","html_url":"https://github.com/apache/pinot/issues/6707#issuecomment-804398562","issue_url":"https://api.github.com/repos/apache/pinot/issues/6707","id":804398562,"node_id":"MDEyOklzc3VlQ29tbWVudDgwNDM5ODU2Mg==","user":{"login":"kishoreg","id":850791,"node_id":"MDQ6VXNlcjg1MDc5MQ==","avatar_url":"https://avatars.githubusercontent.com/u/850791?v=4","gravatar_id":"","url":"https://api.github.com/users/kishoreg","html_url":"https://github.com/kishoreg","followers_url":"https://api.github.com/users/kishoreg/followers","following_url":"https://api.github.com/users/kishoreg/following{/other_user}","gists_url":"https://api.github.com/users/kishoreg/gists{/gist_id}","starred_url":"https://api.github.com/users/kishoreg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kishoreg/subscriptions","organizations_url":"https://api.github.com/users/kishoreg/orgs","repos_url":"https://api.github.com/users/kishoreg/repos","events_url":"https://api.github.com/users/kishoreg/events{/privacy}","received_events_url":"https://api.github.com/users/kishoreg/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-22T21:12:33Z","updated_at":"2021-03-22T21:12:33Z","author_association":"MEMBER","body":"I like this! \r\n\r\nCan we find a better way to model this in a generic manner? This is more like a function that takes a bunch of rows and returns one row in the end right?\r\n\r\nmore like a \r\n```reduce_function(functionName, input columns, output columns)```\r\n\r\n \r\n","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/804398562/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/804402677","html_url":"https://github.com/apache/pinot/issues/6701#issuecomment-804402677","issue_url":"https://api.github.com/repos/apache/pinot/issues/6701","id":804402677,"node_id":"MDEyOklzc3VlQ29tbWVudDgwNDQwMjY3Nw==","user":{"login":"xiangfu0","id":1202120,"node_id":"MDQ6VXNlcjEyMDIxMjA=","avatar_url":"https://avatars.githubusercontent.com/u/1202120?v=4","gravatar_id":"","url":"https://api.github.com/users/xiangfu0","html_url":"https://github.com/xiangfu0","followers_url":"https://api.github.com/users/xiangfu0/followers","following_url":"https://api.github.com/users/xiangfu0/following{/other_user}","gists_url":"https://api.github.com/users/xiangfu0/gists{/gist_id}","starred_url":"https://api.github.com/users/xiangfu0/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xiangfu0/subscriptions","organizations_url":"https://api.github.com/users/xiangfu0/orgs","repos_url":"https://api.github.com/users/xiangfu0/repos","events_url":"https://api.github.com/users/xiangfu0/events{/privacy}","received_events_url":"https://api.github.com/users/xiangfu0/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-22T21:19:35Z","updated_at":"2021-03-22T21:19:35Z","author_association":"CONTRIBUTOR","body":"Thanks for bringing this up!\r\n\r\nDo you want to contribute and submit a PR for this?\r\n","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/804402677/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/804416939","html_url":"https://github.com/apache/pinot/issues/6708#issuecomment-804416939","issue_url":"https://api.github.com/repos/apache/pinot/issues/6708","id":804416939,"node_id":"MDEyOklzc3VlQ29tbWVudDgwNDQxNjkzOQ==","user":{"login":"xiangfu0","id":1202120,"node_id":"MDQ6VXNlcjEyMDIxMjA=","avatar_url":"https://avatars.githubusercontent.com/u/1202120?v=4","gravatar_id":"","url":"https://api.github.com/users/xiangfu0","html_url":"https://github.com/xiangfu0","followers_url":"https://api.github.com/users/xiangfu0/followers","following_url":"https://api.github.com/users/xiangfu0/following{/other_user}","gists_url":"https://api.github.com/users/xiangfu0/gists{/gist_id}","starred_url":"https://api.github.com/users/xiangfu0/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xiangfu0/subscriptions","organizations_url":"https://api.github.com/users/xiangfu0/orgs","repos_url":"https://api.github.com/users/xiangfu0/repos","events_url":"https://api.github.com/users/xiangfu0/events{/privacy}","received_events_url":"https://api.github.com/users/xiangfu0/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-22T21:45:48Z","updated_at":"2021-03-22T21:45:48Z","author_association":"CONTRIBUTOR","body":"I think @Jackie-Jiang is on adding a new data type for DATE/TIMESTAMP.\r\n\r\nFrom my perspective, the reason we have so many time unit conversion functions is that we push all the overhead of managing type conversion to users.\r\n\r\nIdeally, those functions should either return type of TIMESTAMP or DATE, then we can handle the comparison internally.\r\n","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/804416939/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/804427956","html_url":"https://github.com/apache/pinot/issues/6708#issuecomment-804427956","issue_url":"https://api.github.com/repos/apache/pinot/issues/6708","id":804427956,"node_id":"MDEyOklzc3VlQ29tbWVudDgwNDQyNzk1Ng==","user":{"login":"siddharthteotia","id":2150694,"node_id":"MDQ6VXNlcjIxNTA2OTQ=","avatar_url":"https://avatars.githubusercontent.com/u/2150694?v=4","gravatar_id":"","url":"https://api.github.com/users/siddharthteotia","html_url":"https://github.com/siddharthteotia","followers_url":"https://api.github.com/users/siddharthteotia/followers","following_url":"https://api.github.com/users/siddharthteotia/following{/other_user}","gists_url":"https://api.github.com/users/siddharthteotia/gists{/gist_id}","starred_url":"https://api.github.com/users/siddharthteotia/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/siddharthteotia/subscriptions","organizations_url":"https://api.github.com/users/siddharthteotia/orgs","repos_url":"https://api.github.com/users/siddharthteotia/repos","events_url":"https://api.github.com/users/siddharthteotia/events{/privacy}","received_events_url":"https://api.github.com/users/siddharthteotia/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-22T22:08:27Z","updated_at":"2021-03-22T22:08:27Z","author_association":"CONTRIBUTOR","body":"So for now, may be we can settle with semantic as follows:\r\n\r\nFor a filter `WHERE timeCol > ago(1h)`, we will convert current time (millis from epoch) into hours and then do subtraction. We will use assume that timeCol has values in hoursSinceEpoch or if not user then user does the conversion `WHERE toEpochHours(timeCol) > ago(1h)`. This can be applied to other timespan interval arguments (1d, 1h, 1m, 1s) to ago()","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/804427956/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/804428351","html_url":"https://github.com/apache/pinot/issues/6707#issuecomment-804428351","issue_url":"https://api.github.com/repos/apache/pinot/issues/6707","id":804428351,"node_id":"MDEyOklzc3VlQ29tbWVudDgwNDQyODM1MQ==","user":{"login":"siddharthteotia","id":2150694,"node_id":"MDQ6VXNlcjIxNTA2OTQ=","avatar_url":"https://avatars.githubusercontent.com/u/2150694?v=4","gravatar_id":"","url":"https://api.github.com/users/siddharthteotia","html_url":"https://github.com/siddharthteotia","followers_url":"https://api.github.com/users/siddharthteotia/followers","following_url":"https://api.github.com/users/siddharthteotia/following{/other_user}","gists_url":"https://api.github.com/users/siddharthteotia/gists{/gist_id}","starred_url":"https://api.github.com/users/siddharthteotia/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/siddharthteotia/subscriptions","organizations_url":"https://api.github.com/users/siddharthteotia/orgs","repos_url":"https://api.github.com/users/siddharthteotia/repos","events_url":"https://api.github.com/users/siddharthteotia/events{/privacy}","received_events_url":"https://api.github.com/users/siddharthteotia/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-22T22:09:17Z","updated_at":"2021-03-22T22:09:17Z","author_association":"CONTRIBUTOR","body":"Yes, so just like current aggregation functions, it will return one row. If use along with GROUP BY, then there will be as many rows as the number of groups.\r\n\r\nThe main semantic difference between this and existing aggregation functions is that user may not necessarily want to return the column on which aggregation is computed on. So, that's where this will come handy\r\n\r\nI was initially thinking its usage for MIN and MAX only. Generic syntax is good too","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/804428351/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/804429049","html_url":"https://github.com/apache/pinot/issues/6708#issuecomment-804429049","issue_url":"https://api.github.com/repos/apache/pinot/issues/6708","id":804429049,"node_id":"MDEyOklzc3VlQ29tbWVudDgwNDQyOTA0OQ==","user":{"login":"xiangfu0","id":1202120,"node_id":"MDQ6VXNlcjEyMDIxMjA=","avatar_url":"https://avatars.githubusercontent.com/u/1202120?v=4","gravatar_id":"","url":"https://api.github.com/users/xiangfu0","html_url":"https://github.com/xiangfu0","followers_url":"https://api.github.com/users/xiangfu0/followers","following_url":"https://api.github.com/users/xiangfu0/following{/other_user}","gists_url":"https://api.github.com/users/xiangfu0/gists{/gist_id}","starred_url":"https://api.github.com/users/xiangfu0/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xiangfu0/subscriptions","organizations_url":"https://api.github.com/users/xiangfu0/orgs","repos_url":"https://api.github.com/users/xiangfu0/repos","events_url":"https://api.github.com/users/xiangfu0/events{/privacy}","received_events_url":"https://api.github.com/users/xiangfu0/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-22T22:10:41Z","updated_at":"2021-03-22T22:10:41Z","author_association":"CONTRIBUTOR","body":"I prefer to make `ago` returns the value in a fixed time unit like millis so it will be simpler for users to modify it and later on we may easily do directory convert over it. E.g. we can convert millis value directory to `TIMESTAMP` type in the future.","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/804429049/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/804431703","html_url":"https://github.com/apache/pinot/issues/6707#issuecomment-804431703","issue_url":"https://api.github.com/repos/apache/pinot/issues/6707","id":804431703,"node_id":"MDEyOklzc3VlQ29tbWVudDgwNDQzMTcwMw==","user":{"login":"xiangfu0","id":1202120,"node_id":"MDQ6VXNlcjEyMDIxMjA=","avatar_url":"https://avatars.githubusercontent.com/u/1202120?v=4","gravatar_id":"","url":"https://api.github.com/users/xiangfu0","html_url":"https://github.com/xiangfu0","followers_url":"https://api.github.com/users/xiangfu0/followers","following_url":"https://api.github.com/users/xiangfu0/following{/other_user}","gists_url":"https://api.github.com/users/xiangfu0/gists{/gist_id}","starred_url":"https://api.github.com/users/xiangfu0/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xiangfu0/subscriptions","organizations_url":"https://api.github.com/users/xiangfu0/orgs","repos_url":"https://api.github.com/users/xiangfu0/repos","events_url":"https://api.github.com/users/xiangfu0/events{/privacy}","received_events_url":"https://api.github.com/users/xiangfu0/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-22T22:15:50Z","updated_at":"2021-03-22T22:15:50Z","author_association":"CONTRIBUTOR","body":"Hmm, what do you plan to handle in the case that multiple rows with the same max value? Do we want to return 1 row, or can we try to support multiple rows as well? Also, do we want to support order by on the selected columns?\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/804431703/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/804481147","html_url":"https://github.com/apache/pinot/issues/6699#issuecomment-804481147","issue_url":"https://api.github.com/repos/apache/pinot/issues/6699","id":804481147,"node_id":"MDEyOklzc3VlQ29tbWVudDgwNDQ4MTE0Nw==","user":{"login":"opschronicle","id":47830507,"node_id":"MDQ6VXNlcjQ3ODMwNTA3","avatar_url":"https://avatars.githubusercontent.com/u/47830507?v=4","gravatar_id":"","url":"https://api.github.com/users/opschronicle","html_url":"https://github.com/opschronicle","followers_url":"https://api.github.com/users/opschronicle/followers","following_url":"https://api.github.com/users/opschronicle/following{/other_user}","gists_url":"https://api.github.com/users/opschronicle/gists{/gist_id}","starred_url":"https://api.github.com/users/opschronicle/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/opschronicle/subscriptions","organizations_url":"https://api.github.com/users/opschronicle/orgs","repos_url":"https://api.github.com/users/opschronicle/repos","events_url":"https://api.github.com/users/opschronicle/events{/privacy}","received_events_url":"https://api.github.com/users/opschronicle/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-23T00:02:17Z","updated_at":"2021-03-23T00:02:17Z","author_association":"NONE","body":"@Jackie-Jiang I will enable the JSON index and try again and post more examples. How can I add an option for data ingestion to put default value and skip parsing if there are any formatting errors?  ","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/804481147/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/804512971","html_url":"https://github.com/apache/pinot/pull/6479#issuecomment-804512971","issue_url":"https://api.github.com/repos/apache/pinot/issues/6479","id":804512971,"node_id":"MDEyOklzc3VlQ29tbWVudDgwNDUxMjk3MQ==","user":{"login":"codecov-io","id":8655789,"node_id":"MDQ6VXNlcjg2NTU3ODk=","avatar_url":"https://avatars.githubusercontent.com/u/8655789?v=4","gravatar_id":"","url":"https://api.github.com/users/codecov-io","html_url":"https://github.com/codecov-io","followers_url":"https://api.github.com/users/codecov-io/followers","following_url":"https://api.github.com/users/codecov-io/following{/other_user}","gists_url":"https://api.github.com/users/codecov-io/gists{/gist_id}","starred_url":"https://api.github.com/users/codecov-io/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codecov-io/subscriptions","organizations_url":"https://api.github.com/users/codecov-io/orgs","repos_url":"https://api.github.com/users/codecov-io/repos","events_url":"https://api.github.com/users/codecov-io/events{/privacy}","received_events_url":"https://api.github.com/users/codecov-io/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-23T01:21:34Z","updated_at":"2021-03-23T01:21:34Z","author_association":"NONE","body":"# [Codecov](https://codecov.io/gh/apache/incubator-pinot/pull/6479?src=pr&el=h1) Report\n> Merging [#6479](https://codecov.io/gh/apache/incubator-pinot/pull/6479?src=pr&el=desc) (3ca9e3f) into [master](https://codecov.io/gh/apache/incubator-pinot/commit/1beaab59b73f26c4e35f3b9bc856b03806cddf5a?el=desc) (1beaab5) will **decrease** coverage by `23.08%`.\n> The diff coverage is `42.85%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/apache/incubator-pinot/pull/6479/graphs/tree.svg?width=650&height=150&src=pr&token=4ibza2ugkz)](https://codecov.io/gh/apache/incubator-pinot/pull/6479?src=pr&el=tree)\n\n```diff\n@@             Coverage Diff             @@\n##           master    #6479       +/-   ##\n===========================================\n- Coverage   66.44%   43.36%   -23.09%     \n===========================================\n  Files        1075     1396      +321     \n  Lines       54773    67759    +12986     \n  Branches     8168     9807     +1639     \n===========================================\n- Hits        36396    29384     -7012     \n- Misses      15700    35912    +20212     \n+ Partials     2677     2463      -214     \n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| integration | `43.36% <42.85%> (?)` | |\n\nFlags with carried forward coverage won't be shown. [Click here](https://docs.codecov.io/docs/carryforward-flags#carryforward-flags-in-the-pull-request-comment) to find out more.\n\n| [Impacted Files](https://codecov.io/gh/apache/incubator-pinot/pull/6479?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [...ot/broker/broker/AllowAllAccessControlFactory.java](https://codecov.io/gh/apache/incubator-pinot/pull/6479/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvYnJva2VyL0FsbG93QWxsQWNjZXNzQ29udHJvbEZhY3RvcnkuamF2YQ==) | `100.00% <ø> (ø)` | |\n| [...t/broker/broker/BasicAuthAccessControlFactory.java](https://codecov.io/gh/apache/incubator-pinot/pull/6479/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvYnJva2VyL0Jhc2ljQXV0aEFjY2Vzc0NvbnRyb2xGYWN0b3J5LmphdmE=) | `0.00% <0.00%> (ø)` | |\n| [.../helix/BrokerUserDefinedMessageHandlerFactory.java](https://codecov.io/gh/apache/incubator-pinot/pull/6479/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvYnJva2VyL2hlbGl4L0Jyb2tlclVzZXJEZWZpbmVkTWVzc2FnZUhhbmRsZXJGYWN0b3J5LmphdmE=) | `52.83% <0.00%> (-13.84%)` | :arrow_down: |\n| [...org/apache/pinot/broker/queryquota/HitCounter.java](https://codecov.io/gh/apache/incubator-pinot/pull/6479/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvcXVlcnlxdW90YS9IaXRDb3VudGVyLmphdmE=) | `0.00% <0.00%> (-100.00%)` | :arrow_down: |\n| [...che/pinot/broker/queryquota/MaxHitRateTracker.java](https://codecov.io/gh/apache/incubator-pinot/pull/6479/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvcXVlcnlxdW90YS9NYXhIaXRSYXRlVHJhY2tlci5qYXZh) | `0.00% <0.00%> (ø)` | |\n| [...ache/pinot/broker/queryquota/QueryQuotaEntity.java](https://codecov.io/gh/apache/incubator-pinot/pull/6479/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvcXVlcnlxdW90YS9RdWVyeVF1b3RhRW50aXR5LmphdmE=) | `0.00% <0.00%> (-50.00%)` | :arrow_down: |\n| [...ker/routing/instanceselector/InstanceSelector.java](https://codecov.io/gh/apache/incubator-pinot/pull/6479/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvcm91dGluZy9pbnN0YW5jZXNlbGVjdG9yL0luc3RhbmNlU2VsZWN0b3IuamF2YQ==) | `100.00% <ø> (ø)` | |\n| [...ceselector/StrictReplicaGroupInstanceSelector.java](https://codecov.io/gh/apache/incubator-pinot/pull/6479/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvcm91dGluZy9pbnN0YW5jZXNlbGVjdG9yL1N0cmljdFJlcGxpY2FHcm91cEluc3RhbmNlU2VsZWN0b3IuamF2YQ==) | `0.00% <0.00%> (ø)` | |\n| [...roker/routing/segmentpruner/TimeSegmentPruner.java](https://codecov.io/gh/apache/incubator-pinot/pull/6479/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvcm91dGluZy9zZWdtZW50cHJ1bmVyL1RpbWVTZWdtZW50UHJ1bmVyLmphdmE=) | `0.00% <0.00%> (ø)` | |\n| [...roker/routing/segmentpruner/interval/Interval.java](https://codecov.io/gh/apache/incubator-pinot/pull/6479/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvcm91dGluZy9zZWdtZW50cHJ1bmVyL2ludGVydmFsL0ludGVydmFsLmphdmE=) | `0.00% <0.00%> (ø)` | |\n| ... and [1422 more](https://codecov.io/gh/apache/incubator-pinot/pull/6479/diff?src=pr&el=tree-more) | |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/apache/incubator-pinot/pull/6479?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/apache/incubator-pinot/pull/6479?src=pr&el=footer). Last update [36d6db6...3ca9e3f](https://codecov.io/gh/apache/incubator-pinot/pull/6479?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/804512971/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/804528996","html_url":"https://github.com/apache/pinot/pull/6710#issuecomment-804528996","issue_url":"https://api.github.com/repos/apache/pinot/issues/6710","id":804528996,"node_id":"MDEyOklzc3VlQ29tbWVudDgwNDUyODk5Ng==","user":{"login":"codecov-io","id":8655789,"node_id":"MDQ6VXNlcjg2NTU3ODk=","avatar_url":"https://avatars.githubusercontent.com/u/8655789?v=4","gravatar_id":"","url":"https://api.github.com/users/codecov-io","html_url":"https://github.com/codecov-io","followers_url":"https://api.github.com/users/codecov-io/followers","following_url":"https://api.github.com/users/codecov-io/following{/other_user}","gists_url":"https://api.github.com/users/codecov-io/gists{/gist_id}","starred_url":"https://api.github.com/users/codecov-io/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codecov-io/subscriptions","organizations_url":"https://api.github.com/users/codecov-io/orgs","repos_url":"https://api.github.com/users/codecov-io/repos","events_url":"https://api.github.com/users/codecov-io/events{/privacy}","received_events_url":"https://api.github.com/users/codecov-io/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-23T02:09:56Z","updated_at":"2021-03-30T04:15:17Z","author_association":"NONE","body":"# [Codecov](https://codecov.io/gh/apache/incubator-pinot/pull/6710?src=pr&el=h1) Report\n> Merging [#6710](https://codecov.io/gh/apache/incubator-pinot/pull/6710?src=pr&el=desc) (636ec0e) into [master](https://codecov.io/gh/apache/incubator-pinot/commit/8dbb70ba08daf90f5e9067fcec545203ffefe215?el=desc) (8dbb70b) will **decrease** coverage by `8.00%`.\n> The diff coverage is `83.86%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/apache/incubator-pinot/pull/6710/graphs/tree.svg?width=650&height=150&src=pr&token=4ibza2ugkz)](https://codecov.io/gh/apache/incubator-pinot/pull/6710?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master    #6710      +/-   ##\n==========================================\n- Coverage   73.83%   65.82%   -8.01%     \n==========================================\n  Files        1396     1405       +9     \n  Lines       67765    68161     +396     \n  Branches     9807     9853      +46     \n==========================================\n- Hits        50035    44870    -5165     \n- Misses      14485    20100    +5615     \n+ Partials     3245     3191      -54     \n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| integration | `?` | |\n| unittests | `65.82% <83.86%> (-0.18%)` | :arrow_down: |\n\nFlags with carried forward coverage won't be shown. [Click here](https://docs.codecov.io/docs/carryforward-flags#carryforward-flags-in-the-pull-request-comment) to find out more.\n\n| [Impacted Files](https://codecov.io/gh/apache/incubator-pinot/pull/6710?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [...org/apache/pinot/common/utils/CommonConstants.java](https://codecov.io/gh/apache/incubator-pinot/pull/6710/diff?src=pr&el=tree#diff-cGlub3QtY29tbW9uL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9jb21tb24vdXRpbHMvQ29tbW9uQ29uc3RhbnRzLmphdmE=) | `21.15% <ø> (-13.47%)` | :arrow_down: |\n| [...e/pinot/core/common/datatable/DataTableImplV2.java](https://codecov.io/gh/apache/incubator-pinot/pull/6710/diff?src=pr&el=tree#diff-cGlub3QtY29yZS9zcmMvbWFpbi9qYXZhL29yZy9hcGFjaGUvcGlub3QvY29yZS9jb21tb24vZGF0YXRhYmxlL0RhdGFUYWJsZUltcGxWMi5qYXZh) | `0.00% <0.00%> (-89.46%)` | :arrow_down: |\n| [...core/operator/blocks/IntermediateResultsBlock.java](https://codecov.io/gh/apache/incubator-pinot/pull/6710/diff?src=pr&el=tree#diff-cGlub3QtY29yZS9zcmMvbWFpbi9qYXZhL29yZy9hcGFjaGUvcGlub3QvY29yZS9vcGVyYXRvci9ibG9ja3MvSW50ZXJtZWRpYXRlUmVzdWx0c0Jsb2NrLmphdmE=) | `76.21% <0.00%> (-5.41%)` | :arrow_down: |\n| [...core/query/executor/ServerQueryExecutorV1Impl.java](https://codecov.io/gh/apache/incubator-pinot/pull/6710/diff?src=pr&el=tree#diff-cGlub3QtY29yZS9zcmMvbWFpbi9qYXZhL29yZy9hcGFjaGUvcGlub3QvY29yZS9xdWVyeS9leGVjdXRvci9TZXJ2ZXJRdWVyeUV4ZWN1dG9yVjFJbXBsLmphdmE=) | `46.19% <0.00%> (-33.70%)` | :arrow_down: |\n| [...e/pinot/core/transport/InstanceRequestHandler.java](https://codecov.io/gh/apache/incubator-pinot/pull/6710/diff?src=pr&el=tree#diff-cGlub3QtY29yZS9zcmMvbWFpbi9qYXZhL29yZy9hcGFjaGUvcGlub3QvY29yZS90cmFuc3BvcnQvSW5zdGFuY2VSZXF1ZXN0SGFuZGxlci5qYXZh) | `55.88% <0.00%> (-22.06%)` | :arrow_down: |\n| [...pinot/server/starter/helix/HelixServerStarter.java](https://codecov.io/gh/apache/incubator-pinot/pull/6710/diff?src=pr&el=tree#diff-cGlub3Qtc2VydmVyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9zZXJ2ZXIvc3RhcnRlci9oZWxpeC9IZWxpeFNlcnZlclN0YXJ0ZXIuamF2YQ==) | `0.00% <0.00%> (-51.99%)` | :arrow_down: |\n| [...e/pinot/core/query/reduce/BrokerReduceService.java](https://codecov.io/gh/apache/incubator-pinot/pull/6710/diff?src=pr&el=tree#diff-cGlub3QtY29yZS9zcmMvbWFpbi9qYXZhL29yZy9hcGFjaGUvcGlub3QvY29yZS9xdWVyeS9yZWR1Y2UvQnJva2VyUmVkdWNlU2VydmljZS5qYXZh) | `68.54% <33.33%> (-25.81%)` | :arrow_down: |\n| [...che/pinot/core/query/scheduler/QueryScheduler.java](https://codecov.io/gh/apache/incubator-pinot/pull/6710/diff?src=pr&el=tree#diff-cGlub3QtY29yZS9zcmMvbWFpbi9qYXZhL29yZy9hcGFjaGUvcGlub3QvY29yZS9xdWVyeS9zY2hlZHVsZXIvUXVlcnlTY2hlZHVsZXIuamF2YQ==) | `68.96% <66.66%> (-13.09%)` | :arrow_down: |\n| [...pinot/core/common/datatable/DataTableImplBase.java](https://codecov.io/gh/apache/incubator-pinot/pull/6710/diff?src=pr&el=tree#diff-cGlub3QtY29yZS9zcmMvbWFpbi9qYXZhL29yZy9hcGFjaGUvcGlub3QvY29yZS9jb21tb24vZGF0YXRhYmxlL0RhdGFUYWJsZUltcGxCYXNlLmphdmE=) | `76.53% <76.53%> (ø)` | |\n| [.../pinot/core/common/datatable/DataTableBuilder.java](https://codecov.io/gh/apache/incubator-pinot/pull/6710/diff?src=pr&el=tree#diff-cGlub3QtY29yZS9zcmMvbWFpbi9qYXZhL29yZy9hcGFjaGUvcGlub3QvY29yZS9jb21tb24vZGF0YXRhYmxlL0RhdGFUYWJsZUJ1aWxkZXIuamF2YQ==) | `86.72% <85.71%> (-0.32%)` | :arrow_down: |\n| ... and [366 more](https://codecov.io/gh/apache/incubator-pinot/pull/6710/diff?src=pr&el=tree-more) | |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/apache/incubator-pinot/pull/6710?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/apache/incubator-pinot/pull/6710?src=pr&el=footer). Last update [8dbb70b...636ec0e](https://codecov.io/gh/apache/incubator-pinot/pull/6710?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/804528996/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/804553226","html_url":"https://github.com/apache/pinot/pull/6711#issuecomment-804553226","issue_url":"https://api.github.com/repos/apache/pinot/issues/6711","id":804553226,"node_id":"MDEyOklzc3VlQ29tbWVudDgwNDU1MzIyNg==","user":{"login":"codecov-io","id":8655789,"node_id":"MDQ6VXNlcjg2NTU3ODk=","avatar_url":"https://avatars.githubusercontent.com/u/8655789?v=4","gravatar_id":"","url":"https://api.github.com/users/codecov-io","html_url":"https://github.com/codecov-io","followers_url":"https://api.github.com/users/codecov-io/followers","following_url":"https://api.github.com/users/codecov-io/following{/other_user}","gists_url":"https://api.github.com/users/codecov-io/gists{/gist_id}","starred_url":"https://api.github.com/users/codecov-io/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codecov-io/subscriptions","organizations_url":"https://api.github.com/users/codecov-io/orgs","repos_url":"https://api.github.com/users/codecov-io/repos","events_url":"https://api.github.com/users/codecov-io/events{/privacy}","received_events_url":"https://api.github.com/users/codecov-io/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-23T03:14:42Z","updated_at":"2021-03-23T03:14:42Z","author_association":"NONE","body":"# [Codecov](https://codecov.io/gh/apache/incubator-pinot/pull/6711?src=pr&el=h1) Report\n> Merging [#6711](https://codecov.io/gh/apache/incubator-pinot/pull/6711?src=pr&el=desc) (24dd71f) into [master](https://codecov.io/gh/apache/incubator-pinot/commit/1beaab59b73f26c4e35f3b9bc856b03806cddf5a?el=desc) (1beaab5) will **decrease** coverage by `22.99%`.\n> The diff coverage is `42.85%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/apache/incubator-pinot/pull/6711/graphs/tree.svg?width=650&height=150&src=pr&token=4ibza2ugkz)](https://codecov.io/gh/apache/incubator-pinot/pull/6711?src=pr&el=tree)\n\n```diff\n@@             Coverage Diff             @@\n##           master    #6711       +/-   ##\n===========================================\n- Coverage   66.44%   43.45%   -23.00%     \n===========================================\n  Files        1075     1390      +315     \n  Lines       54773    67511    +12738     \n  Branches     8168     9783     +1615     \n===========================================\n- Hits        36396    29338     -7058     \n- Misses      15700    35720    +20020     \n+ Partials     2677     2453      -224     \n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| integration | `43.45% <42.85%> (?)` | |\n\nFlags with carried forward coverage won't be shown. [Click here](https://docs.codecov.io/docs/carryforward-flags#carryforward-flags-in-the-pull-request-comment) to find out more.\n\n| [Impacted Files](https://codecov.io/gh/apache/incubator-pinot/pull/6711?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [...ot/broker/broker/AllowAllAccessControlFactory.java](https://codecov.io/gh/apache/incubator-pinot/pull/6711/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvYnJva2VyL0FsbG93QWxsQWNjZXNzQ29udHJvbEZhY3RvcnkuamF2YQ==) | `100.00% <ø> (ø)` | |\n| [...t/broker/broker/BasicAuthAccessControlFactory.java](https://codecov.io/gh/apache/incubator-pinot/pull/6711/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvYnJva2VyL0Jhc2ljQXV0aEFjY2Vzc0NvbnRyb2xGYWN0b3J5LmphdmE=) | `0.00% <0.00%> (ø)` | |\n| [.../helix/BrokerUserDefinedMessageHandlerFactory.java](https://codecov.io/gh/apache/incubator-pinot/pull/6711/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvYnJva2VyL2hlbGl4L0Jyb2tlclVzZXJEZWZpbmVkTWVzc2FnZUhhbmRsZXJGYWN0b3J5LmphdmE=) | `52.83% <0.00%> (-13.84%)` | :arrow_down: |\n| [...org/apache/pinot/broker/queryquota/HitCounter.java](https://codecov.io/gh/apache/incubator-pinot/pull/6711/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvcXVlcnlxdW90YS9IaXRDb3VudGVyLmphdmE=) | `0.00% <0.00%> (-100.00%)` | :arrow_down: |\n| [...che/pinot/broker/queryquota/MaxHitRateTracker.java](https://codecov.io/gh/apache/incubator-pinot/pull/6711/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvcXVlcnlxdW90YS9NYXhIaXRSYXRlVHJhY2tlci5qYXZh) | `0.00% <0.00%> (ø)` | |\n| [...ache/pinot/broker/queryquota/QueryQuotaEntity.java](https://codecov.io/gh/apache/incubator-pinot/pull/6711/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvcXVlcnlxdW90YS9RdWVyeVF1b3RhRW50aXR5LmphdmE=) | `0.00% <0.00%> (-50.00%)` | :arrow_down: |\n| [...ker/routing/instanceselector/InstanceSelector.java](https://codecov.io/gh/apache/incubator-pinot/pull/6711/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvcm91dGluZy9pbnN0YW5jZXNlbGVjdG9yL0luc3RhbmNlU2VsZWN0b3IuamF2YQ==) | `100.00% <ø> (ø)` | |\n| [...ceselector/StrictReplicaGroupInstanceSelector.java](https://codecov.io/gh/apache/incubator-pinot/pull/6711/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvcm91dGluZy9pbnN0YW5jZXNlbGVjdG9yL1N0cmljdFJlcGxpY2FHcm91cEluc3RhbmNlU2VsZWN0b3IuamF2YQ==) | `0.00% <0.00%> (ø)` | |\n| [...roker/routing/segmentpruner/TimeSegmentPruner.java](https://codecov.io/gh/apache/incubator-pinot/pull/6711/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvcm91dGluZy9zZWdtZW50cHJ1bmVyL1RpbWVTZWdtZW50UHJ1bmVyLmphdmE=) | `0.00% <0.00%> (ø)` | |\n| [...roker/routing/segmentpruner/interval/Interval.java](https://codecov.io/gh/apache/incubator-pinot/pull/6711/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvcm91dGluZy9zZWdtZW50cHJ1bmVyL2ludGVydmFsL0ludGVydmFsLmphdmE=) | `0.00% <0.00%> (ø)` | |\n| ... and [1418 more](https://codecov.io/gh/apache/incubator-pinot/pull/6711/diff?src=pr&el=tree-more) | |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/apache/incubator-pinot/pull/6711?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/apache/incubator-pinot/pull/6711?src=pr&el=footer). Last update [27b61fe...24dd71f](https://codecov.io/gh/apache/incubator-pinot/pull/6711?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/804553226/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/804592233","html_url":"https://github.com/apache/pinot/pull/6710#issuecomment-804592233","issue_url":"https://api.github.com/repos/apache/pinot/issues/6710","id":804592233,"node_id":"MDEyOklzc3VlQ29tbWVudDgwNDU5MjIzMw==","user":{"login":"siddharthteotia","id":2150694,"node_id":"MDQ6VXNlcjIxNTA2OTQ=","avatar_url":"https://avatars.githubusercontent.com/u/2150694?v=4","gravatar_id":"","url":"https://api.github.com/users/siddharthteotia","html_url":"https://github.com/siddharthteotia","followers_url":"https://api.github.com/users/siddharthteotia/followers","following_url":"https://api.github.com/users/siddharthteotia/following{/other_user}","gists_url":"https://api.github.com/users/siddharthteotia/gists{/gist_id}","starred_url":"https://api.github.com/users/siddharthteotia/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/siddharthteotia/subscriptions","organizations_url":"https://api.github.com/users/siddharthteotia/orgs","repos_url":"https://api.github.com/users/siddharthteotia/repos","events_url":"https://api.github.com/users/siddharthteotia/events{/privacy}","received_events_url":"https://api.github.com/users/siddharthteotia/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-23T03:38:59Z","updated_at":"2021-03-23T03:53:43Z","author_association":"CONTRIBUTOR","body":"With the addition of new data structure in this PR, there are essentially two places in DataTable where the key-value / name-value style structure is located.\r\n\r\n- First is the existing DataTable metadata which is also a series of key-value pairs where key is string and value is some statistic/metric. This is towards the beginning of the byte stream\r\n- Second is the structure introduced in this PR which is written as a footer.\r\n\r\nSince we are anyway bumping up the version, how about we move the existing metadata of key-value pairs to the end of file to keep consistency in the format. So, all the metadata stuff (aka key-value pairs) + new positional stuff can be a file footer. ","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/804592233/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/804596719","html_url":"https://github.com/apache/pinot/pull/6710#issuecomment-804596719","issue_url":"https://api.github.com/repos/apache/pinot/issues/6710","id":804596719,"node_id":"MDEyOklzc3VlQ29tbWVudDgwNDU5NjcxOQ==","user":{"login":"siddharthteotia","id":2150694,"node_id":"MDQ6VXNlcjIxNTA2OTQ=","avatar_url":"https://avatars.githubusercontent.com/u/2150694?v=4","gravatar_id":"","url":"https://api.github.com/users/siddharthteotia","html_url":"https://github.com/siddharthteotia","followers_url":"https://api.github.com/users/siddharthteotia/followers","following_url":"https://api.github.com/users/siddharthteotia/following{/other_user}","gists_url":"https://api.github.com/users/siddharthteotia/gists{/gist_id}","starred_url":"https://api.github.com/users/siddharthteotia/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/siddharthteotia/subscriptions","organizations_url":"https://api.github.com/users/siddharthteotia/orgs","repos_url":"https://api.github.com/users/siddharthteotia/repos","events_url":"https://api.github.com/users/siddharthteotia/events{/privacy}","received_events_url":"https://api.github.com/users/siddharthteotia/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-23T03:53:52Z","updated_at":"2021-03-23T03:54:05Z","author_association":"CONTRIBUTOR","body":"With this PR, we should resolve a couple of TODOs introduced in PR https://github.com/apache/incubator-pinot/pull/6680/\r\n\r\n- Expose the serialization time through an API at the DataTable level and log it in [QueryScheduler](https://github.com/apache/incubator-pinot/pull/6710/files#diff-2bff83abd3f6e831acfe4b6d31a022f228710def4eea47db3929c6d90b3147ecR222). You need to serialize before the logging line. Currently it is after.\r\n- Revisit [this](https://github.com/apache/incubator-pinot/pull/6710/files#diff-2bff83abd3f6e831acfe4b6d31a022f228710def4eea47db3929c6d90b3147ecR255). The execution cpu time is not yet serialized as part of metadata. May be we can just remove line 258. ","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/804596719/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/804597130","html_url":"https://github.com/apache/pinot/pull/6712#issuecomment-804597130","issue_url":"https://api.github.com/repos/apache/pinot/issues/6712","id":804597130,"node_id":"MDEyOklzc3VlQ29tbWVudDgwNDU5NzEzMA==","user":{"login":"siddharthteotia","id":2150694,"node_id":"MDQ6VXNlcjIxNTA2OTQ=","avatar_url":"https://avatars.githubusercontent.com/u/2150694?v=4","gravatar_id":"","url":"https://api.github.com/users/siddharthteotia","html_url":"https://github.com/siddharthteotia","followers_url":"https://api.github.com/users/siddharthteotia/followers","following_url":"https://api.github.com/users/siddharthteotia/following{/other_user}","gists_url":"https://api.github.com/users/siddharthteotia/gists{/gist_id}","starred_url":"https://api.github.com/users/siddharthteotia/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/siddharthteotia/subscriptions","organizations_url":"https://api.github.com/users/siddharthteotia/orgs","repos_url":"https://api.github.com/users/siddharthteotia/repos","events_url":"https://api.github.com/users/siddharthteotia/events{/privacy}","received_events_url":"https://api.github.com/users/siddharthteotia/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-23T03:55:20Z","updated_at":"2021-03-23T03:55:20Z","author_association":"CONTRIBUTOR","body":"@amrishlal , can we please test this PR with the test case you built locally to reproduce this with user data?","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/804597130/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/804604489","html_url":"https://github.com/apache/pinot/pull/6712#issuecomment-804604489","issue_url":"https://api.github.com/repos/apache/pinot/issues/6712","id":804604489,"node_id":"MDEyOklzc3VlQ29tbWVudDgwNDYwNDQ4OQ==","user":{"login":"codecov-io","id":8655789,"node_id":"MDQ6VXNlcjg2NTU3ODk=","avatar_url":"https://avatars.githubusercontent.com/u/8655789?v=4","gravatar_id":"","url":"https://api.github.com/users/codecov-io","html_url":"https://github.com/codecov-io","followers_url":"https://api.github.com/users/codecov-io/followers","following_url":"https://api.github.com/users/codecov-io/following{/other_user}","gists_url":"https://api.github.com/users/codecov-io/gists{/gist_id}","starred_url":"https://api.github.com/users/codecov-io/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codecov-io/subscriptions","organizations_url":"https://api.github.com/users/codecov-io/orgs","repos_url":"https://api.github.com/users/codecov-io/repos","events_url":"https://api.github.com/users/codecov-io/events{/privacy}","received_events_url":"https://api.github.com/users/codecov-io/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-23T04:17:32Z","updated_at":"2021-03-23T04:17:32Z","author_association":"NONE","body":"# [Codecov](https://codecov.io/gh/apache/incubator-pinot/pull/6712?src=pr&el=h1) Report\n> Merging [#6712](https://codecov.io/gh/apache/incubator-pinot/pull/6712?src=pr&el=desc) (2e6cf87) into [master](https://codecov.io/gh/apache/incubator-pinot/commit/1beaab59b73f26c4e35f3b9bc856b03806cddf5a?el=desc) (1beaab5) will **decrease** coverage by `22.81%`.\n> The diff coverage is `42.93%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/apache/incubator-pinot/pull/6712/graphs/tree.svg?width=650&height=150&src=pr&token=4ibza2ugkz)](https://codecov.io/gh/apache/incubator-pinot/pull/6712?src=pr&el=tree)\n\n```diff\n@@             Coverage Diff             @@\n##           master    #6712       +/-   ##\n===========================================\n- Coverage   66.44%   43.63%   -22.82%     \n===========================================\n  Files        1075     1390      +315     \n  Lines       54773    67515    +12742     \n  Branches     8168     9783     +1615     \n===========================================\n- Hits        36396    29457     -6939     \n- Misses      15700    35605    +19905     \n+ Partials     2677     2453      -224     \n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| integration | `43.63% <42.93%> (?)` | |\n\nFlags with carried forward coverage won't be shown. [Click here](https://docs.codecov.io/docs/carryforward-flags#carryforward-flags-in-the-pull-request-comment) to find out more.\n\n| [Impacted Files](https://codecov.io/gh/apache/incubator-pinot/pull/6712?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [...ot/broker/broker/AllowAllAccessControlFactory.java](https://codecov.io/gh/apache/incubator-pinot/pull/6712/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvYnJva2VyL0FsbG93QWxsQWNjZXNzQ29udHJvbEZhY3RvcnkuamF2YQ==) | `100.00% <ø> (ø)` | |\n| [...t/broker/broker/BasicAuthAccessControlFactory.java](https://codecov.io/gh/apache/incubator-pinot/pull/6712/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvYnJva2VyL0Jhc2ljQXV0aEFjY2Vzc0NvbnRyb2xGYWN0b3J5LmphdmE=) | `0.00% <0.00%> (ø)` | |\n| [.../helix/BrokerUserDefinedMessageHandlerFactory.java](https://codecov.io/gh/apache/incubator-pinot/pull/6712/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvYnJva2VyL2hlbGl4L0Jyb2tlclVzZXJEZWZpbmVkTWVzc2FnZUhhbmRsZXJGYWN0b3J5LmphdmE=) | `52.83% <0.00%> (-13.84%)` | :arrow_down: |\n| [...org/apache/pinot/broker/queryquota/HitCounter.java](https://codecov.io/gh/apache/incubator-pinot/pull/6712/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvcXVlcnlxdW90YS9IaXRDb3VudGVyLmphdmE=) | `0.00% <0.00%> (-100.00%)` | :arrow_down: |\n| [...che/pinot/broker/queryquota/MaxHitRateTracker.java](https://codecov.io/gh/apache/incubator-pinot/pull/6712/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvcXVlcnlxdW90YS9NYXhIaXRSYXRlVHJhY2tlci5qYXZh) | `0.00% <0.00%> (ø)` | |\n| [...ache/pinot/broker/queryquota/QueryQuotaEntity.java](https://codecov.io/gh/apache/incubator-pinot/pull/6712/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvcXVlcnlxdW90YS9RdWVyeVF1b3RhRW50aXR5LmphdmE=) | `0.00% <0.00%> (-50.00%)` | :arrow_down: |\n| [...ker/routing/instanceselector/InstanceSelector.java](https://codecov.io/gh/apache/incubator-pinot/pull/6712/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvcm91dGluZy9pbnN0YW5jZXNlbGVjdG9yL0luc3RhbmNlU2VsZWN0b3IuamF2YQ==) | `100.00% <ø> (ø)` | |\n| [...ceselector/StrictReplicaGroupInstanceSelector.java](https://codecov.io/gh/apache/incubator-pinot/pull/6712/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvcm91dGluZy9pbnN0YW5jZXNlbGVjdG9yL1N0cmljdFJlcGxpY2FHcm91cEluc3RhbmNlU2VsZWN0b3IuamF2YQ==) | `0.00% <0.00%> (ø)` | |\n| [...roker/routing/segmentpruner/TimeSegmentPruner.java](https://codecov.io/gh/apache/incubator-pinot/pull/6712/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvcm91dGluZy9zZWdtZW50cHJ1bmVyL1RpbWVTZWdtZW50UHJ1bmVyLmphdmE=) | `0.00% <0.00%> (ø)` | |\n| [...roker/routing/segmentpruner/interval/Interval.java](https://codecov.io/gh/apache/incubator-pinot/pull/6712/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvcm91dGluZy9zZWdtZW50cHJ1bmVyL2ludGVydmFsL0ludGVydmFsLmphdmE=) | `0.00% <0.00%> (ø)` | |\n| ... and [1414 more](https://codecov.io/gh/apache/incubator-pinot/pull/6712/diff?src=pr&el=tree-more) | |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/apache/incubator-pinot/pull/6712?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/apache/incubator-pinot/pull/6712?src=pr&el=footer). Last update [27b61fe...2e6cf87](https://codecov.io/gh/apache/incubator-pinot/pull/6712?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/804604489/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/804618151","html_url":"https://github.com/apache/pinot/pull/6712#issuecomment-804618151","issue_url":"https://api.github.com/repos/apache/pinot/issues/6712","id":804618151,"node_id":"MDEyOklzc3VlQ29tbWVudDgwNDYxODE1MQ==","user":{"login":"amrishlal","id":4550395,"node_id":"MDQ6VXNlcjQ1NTAzOTU=","avatar_url":"https://avatars.githubusercontent.com/u/4550395?v=4","gravatar_id":"","url":"https://api.github.com/users/amrishlal","html_url":"https://github.com/amrishlal","followers_url":"https://api.github.com/users/amrishlal/followers","following_url":"https://api.github.com/users/amrishlal/following{/other_user}","gists_url":"https://api.github.com/users/amrishlal/gists{/gist_id}","starred_url":"https://api.github.com/users/amrishlal/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/amrishlal/subscriptions","organizations_url":"https://api.github.com/users/amrishlal/orgs","repos_url":"https://api.github.com/users/amrishlal/repos","events_url":"https://api.github.com/users/amrishlal/events{/privacy}","received_events_url":"https://api.github.com/users/amrishlal/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-23T05:01:18Z","updated_at":"2021-03-23T05:01:18Z","author_association":"CONTRIBUTOR","body":"> @amrishlal , can we please test this PR with the test case you built locally to reproduce this with user data?\r\n\r\nYes, the problem seems to be fixed with these changes and test cases are producing expected results. @Jackie-Jiang thanks for adding the unit test case as well.\r\n\r\n","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/804618151/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/804848391","html_url":"https://github.com/apache/pinot/issues/6701#issuecomment-804848391","issue_url":"https://api.github.com/repos/apache/pinot/issues/6701","id":804848391,"node_id":"MDEyOklzc3VlQ29tbWVudDgwNDg0ODM5MQ==","user":{"login":"skhatri","id":1069548,"node_id":"MDQ6VXNlcjEwNjk1NDg=","avatar_url":"https://avatars.githubusercontent.com/u/1069548?v=4","gravatar_id":"","url":"https://api.github.com/users/skhatri","html_url":"https://github.com/skhatri","followers_url":"https://api.github.com/users/skhatri/followers","following_url":"https://api.github.com/users/skhatri/following{/other_user}","gists_url":"https://api.github.com/users/skhatri/gists{/gist_id}","starred_url":"https://api.github.com/users/skhatri/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/skhatri/subscriptions","organizations_url":"https://api.github.com/users/skhatri/orgs","repos_url":"https://api.github.com/users/skhatri/repos","events_url":"https://api.github.com/users/skhatri/events{/privacy}","received_events_url":"https://api.github.com/users/skhatri/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-23T12:06:33Z","updated_at":"2021-03-23T12:06:33Z","author_association":"NONE","body":"@fx19880617 - I have a PR here https://github.com/apache/incubator-pinot/pull/6702\r\n","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/804848391/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/805058323","html_url":"https://github.com/apache/pinot/pull/6710#issuecomment-805058323","issue_url":"https://api.github.com/repos/apache/pinot/issues/6710","id":805058323,"node_id":"MDEyOklzc3VlQ29tbWVudDgwNTA1ODMyMw==","user":{"login":"mcvsubbu","id":2279037,"node_id":"MDQ6VXNlcjIyNzkwMzc=","avatar_url":"https://avatars.githubusercontent.com/u/2279037?v=4","gravatar_id":"","url":"https://api.github.com/users/mcvsubbu","html_url":"https://github.com/mcvsubbu","followers_url":"https://api.github.com/users/mcvsubbu/followers","following_url":"https://api.github.com/users/mcvsubbu/following{/other_user}","gists_url":"https://api.github.com/users/mcvsubbu/gists{/gist_id}","starred_url":"https://api.github.com/users/mcvsubbu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mcvsubbu/subscriptions","organizations_url":"https://api.github.com/users/mcvsubbu/orgs","repos_url":"https://api.github.com/users/mcvsubbu/repos","events_url":"https://api.github.com/users/mcvsubbu/events{/privacy}","received_events_url":"https://api.github.com/users/mcvsubbu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-23T16:45:45Z","updated_at":"2021-03-23T16:45:45Z","author_association":"CONTRIBUTOR","body":"Any reason we are restricting the trailer (or footer) to have only key-value pairs? We don't need to place that restriction as long as the length is also encoded up front. It can be any serialized object, right?","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/805058323/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/805063961","html_url":"https://github.com/apache/pinot/issues/6707#issuecomment-805063961","issue_url":"https://api.github.com/repos/apache/pinot/issues/6707","id":805063961,"node_id":"MDEyOklzc3VlQ29tbWVudDgwNTA2Mzk2MQ==","user":{"login":"kishoreg","id":850791,"node_id":"MDQ6VXNlcjg1MDc5MQ==","avatar_url":"https://avatars.githubusercontent.com/u/850791?v=4","gravatar_id":"","url":"https://api.github.com/users/kishoreg","html_url":"https://github.com/kishoreg","followers_url":"https://api.github.com/users/kishoreg/followers","following_url":"https://api.github.com/users/kishoreg/following{/other_user}","gists_url":"https://api.github.com/users/kishoreg/gists{/gist_id}","starred_url":"https://api.github.com/users/kishoreg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kishoreg/subscriptions","organizations_url":"https://api.github.com/users/kishoreg/orgs","repos_url":"https://api.github.com/users/kishoreg/repos","events_url":"https://api.github.com/users/kishoreg/events{/privacy}","received_events_url":"https://api.github.com/users/kishoreg/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-23T16:53:41Z","updated_at":"2021-03-23T16:53:41Z","author_association":"MEMBER","body":"lets restrict it to return one row for now, makes it easy to reason about.  To support order by etc, we can model that using the same syntax right for e.g\r\n\r\n```reduce_function(sub_query(\"select .. from ... order by\"), input columns, output columns)```\r\n\r\nwe can add support for more things like a groovy script etc.","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/805063961/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/805121867","html_url":"https://github.com/apache/pinot/pull/6710#issuecomment-805121867","issue_url":"https://api.github.com/repos/apache/pinot/issues/6710","id":805121867,"node_id":"MDEyOklzc3VlQ29tbWVudDgwNTEyMTg2Nw==","user":{"login":"mqliang","id":12423751,"node_id":"MDQ6VXNlcjEyNDIzNzUx","avatar_url":"https://avatars.githubusercontent.com/u/12423751?v=4","gravatar_id":"","url":"https://api.github.com/users/mqliang","html_url":"https://github.com/mqliang","followers_url":"https://api.github.com/users/mqliang/followers","following_url":"https://api.github.com/users/mqliang/following{/other_user}","gists_url":"https://api.github.com/users/mqliang/gists{/gist_id}","starred_url":"https://api.github.com/users/mqliang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mqliang/subscriptions","organizations_url":"https://api.github.com/users/mqliang/orgs","repos_url":"https://api.github.com/users/mqliang/repos","events_url":"https://api.github.com/users/mqliang/events{/privacy}","received_events_url":"https://api.github.com/users/mqliang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-23T18:13:55Z","updated_at":"2021-03-23T18:13:55Z","author_association":"CONTRIBUTOR","body":"@mcvsubbu \r\n> Any reason we are restricting the trailer (or footer) to have only key-value pairs? We don't need to place that restriction as long as the length is also encoded up front. It can be any serialized object, right?\r\n\r\nYou are right, it can be any serialized object, but restricting to only contains KV pairs has following benefit:\r\n\r\n* Any object can be add as a KV pair, just: (key, serialized_object). So it's easy to add new section to footer in future.\r\n* For all KV pairs in footer, put their keys in enum, so when serialize footer, the order of KV pairs is deterministic. This make all KV pairs is positional/locatable. So we are able to replace value of a given key in footer even after serialized. \r\n* If we want to add a new object into data table. If we are OK to put it as a KV pair into footer, we don't need to bum up version Here is the pseudocode of serialize/de-serialize footer:\r\n```\r\nenum footerkeys {\r\n\tk0,\r\n\tk1,\r\n\tk2,\r\n}\r\n\r\nString footerkeysToStr = new String[]{\r\n\t\"k0\",\r\n\t\"k1\",\r\n\t\"k2\",\r\n}\r\n\r\nfunction serializeFooter() {\r\n \tbyte[] bytes;\r\n \tfor (key in footerkeys) {\r\n \t    String data = encode_to_str(value_of_key(key));\r\n \t    bytes = append(bytes, len(data));\r\n \t    bytes = append(bytes, data.toBytes());\r\n \t}\r\n}\r\n\r\nfunction String[] deSerializeFooter(byte[] bytes) {\r\n\tString[] values = new String[len(footerkeys)];\r\n\tfor (int i = 0; i < len(footerkeys); i++) {\r\n\t   int data_len = bytes.nextInt();\r\n\t   values[i] = bytes.nextBytesofLens(data_len);\r\n\t}\r\n}\r\n\r\n// If values_i is a complex object instead of a string, we can deserialize it even further：\r\n    String[] footerKVpairs = deSerializeFooter(bytes);\r\n\tObject_i = deserialize(footerKVpairs[i].toBytes());\r\n\r\n```\r\nSo, if we want to add  new object to footer, add it as KV pair, and as long as we add the key as the last one of the enum, old broker will just ignore the extra one, it's back-compatable).\r\n\r\nIf we make footer not only contains KV pairs, but also other arbitrary serializable objects:\r\n```\r\n+------------------------------------+\r\n|     \r\n|    serializable object 1\r\n|\r\n+------------------------------------\r\n|\r\n|    serializable object 2\r\n|\r\n+------------------------------------\r\n|\r\n|    KV pairs\r\n|\r\n+------------------------------------\r\n\r\n```\r\nIt's not extensible: If we wanner add a serializable_object_3 in between of serializable_object_2 and KV_pairs, we need to bump up version (If we bump version, we can also add in to the middle of data table, not necessarily in footer). \r\n\r\nThat's the reason I prefer footer only contains KV pairs: If we want to add a new simple section into data table, and don't want bump up version, add it as KV pair to footer. If we want add new very complex section or re-arrange current sections, add it into the middle of data table, and bump up version.\r\n ","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/805121867/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/805169440","html_url":"https://github.com/apache/pinot/pull/6567#issuecomment-805169440","issue_url":"https://api.github.com/repos/apache/pinot/issues/6567","id":805169440,"node_id":"MDEyOklzc3VlQ29tbWVudDgwNTE2OTQ0MA==","user":{"login":"Jackie-Jiang","id":17555551,"node_id":"MDQ6VXNlcjE3NTU1NTUx","avatar_url":"https://avatars.githubusercontent.com/u/17555551?v=4","gravatar_id":"","url":"https://api.github.com/users/Jackie-Jiang","html_url":"https://github.com/Jackie-Jiang","followers_url":"https://api.github.com/users/Jackie-Jiang/followers","following_url":"https://api.github.com/users/Jackie-Jiang/following{/other_user}","gists_url":"https://api.github.com/users/Jackie-Jiang/gists{/gist_id}","starred_url":"https://api.github.com/users/Jackie-Jiang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Jackie-Jiang/subscriptions","organizations_url":"https://api.github.com/users/Jackie-Jiang/orgs","repos_url":"https://api.github.com/users/Jackie-Jiang/repos","events_url":"https://api.github.com/users/Jackie-Jiang/events{/privacy}","received_events_url":"https://api.github.com/users/Jackie-Jiang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-23T19:22:56Z","updated_at":"2021-03-23T19:22:56Z","author_association":"CONTRIBUTOR","body":"> A new integration test UpsertTableSegmentUploadIntegrationTest is added to verify the uploaded segment is added to a realtime upsert enabled table correctly. The segment name used in the test does not follow llc segment convention but it is loaded successfully. The query result is good.\r\n> \r\n> I do quite understand why we should \"Exclude uploaded segment from the processing\". During segment load, the upsert table metadata should be processed based on the loaded segment, right?\r\n> \r\n> > Please take a look at `PinotLLCRealtimeSegmentManager` and ensure it works on uploaded segments:\r\n> > \r\n> > * Segment name for uploaded segment does not follow the llc segment name convention\r\n> > * Exclude uploaded segment from the processing\r\n\r\nI took another look at `PinotLLCRealtimeSegmentManager` and seems non-LLC segments are already excluded (because it might co-exist with HLC segments before). We cannot include them during metadata processing because it relies on the segment name format.\r\n\r\nFor the issue within the `processExistingSegment()`, for uploading the new segment it won't hit that code path, but for refreshing the existing segment it won't set the fields properly.\r\n\r\nIf possible, I would recommend setting up an actual table, upload some segments and keep it running for some time to ensure all components can properly work on the uploaded segments","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/805169440/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/805198697","html_url":"https://github.com/apache/pinot/pull/6710#issuecomment-805198697","issue_url":"https://api.github.com/repos/apache/pinot/issues/6710","id":805198697,"node_id":"MDEyOklzc3VlQ29tbWVudDgwNTE5ODY5Nw==","user":{"login":"siddharthteotia","id":2150694,"node_id":"MDQ6VXNlcjIxNTA2OTQ=","avatar_url":"https://avatars.githubusercontent.com/u/2150694?v=4","gravatar_id":"","url":"https://api.github.com/users/siddharthteotia","html_url":"https://github.com/siddharthteotia","followers_url":"https://api.github.com/users/siddharthteotia/followers","following_url":"https://api.github.com/users/siddharthteotia/following{/other_user}","gists_url":"https://api.github.com/users/siddharthteotia/gists{/gist_id}","starred_url":"https://api.github.com/users/siddharthteotia/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/siddharthteotia/subscriptions","organizations_url":"https://api.github.com/users/siddharthteotia/orgs","repos_url":"https://api.github.com/users/siddharthteotia/repos","events_url":"https://api.github.com/users/siddharthteotia/events{/privacy}","received_events_url":"https://api.github.com/users/siddharthteotia/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-23T20:02:05Z","updated_at":"2021-03-23T20:02:05Z","author_association":"CONTRIBUTOR","body":"> With the addition of new data structure in this PR, there are essentially two places in DataTable where the key-value / name-value style structure is located.\r\n> \r\n> * First is the existing DataTable metadata which is also a series of key-value pairs where key is string and value is some statistic/metric. This is towards the beginning of the byte stream\r\n> * Second is the structure introduced in this PR which is written as a footer.\r\n> \r\n> Since we are anyway bumping up the version, how about we move the existing metadata of key-value pairs to the end of file to keep consistency in the format. So, all the metadata stuff (aka key-value pairs) + new positional stuff can be a file footer.\r\n\r\nKV pair might be misleading here. Within a KV pair, the value part is indeed a arbitrary serialized object. The KV concept in the footer is just to give it some structure. So, we can keep growing the footer by adding a key to the enum and then the corresponding serialized bytes into the payload","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/805198697/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/805240112","html_url":"https://github.com/apache/pinot/pull/6567#issuecomment-805240112","issue_url":"https://api.github.com/repos/apache/pinot/issues/6567","id":805240112,"node_id":"MDEyOklzc3VlQ29tbWVudDgwNTI0MDExMg==","user":{"login":"chenboat","id":2549137,"node_id":"MDQ6VXNlcjI1NDkxMzc=","avatar_url":"https://avatars.githubusercontent.com/u/2549137?v=4","gravatar_id":"","url":"https://api.github.com/users/chenboat","html_url":"https://github.com/chenboat","followers_url":"https://api.github.com/users/chenboat/followers","following_url":"https://api.github.com/users/chenboat/following{/other_user}","gists_url":"https://api.github.com/users/chenboat/gists{/gist_id}","starred_url":"https://api.github.com/users/chenboat/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/chenboat/subscriptions","organizations_url":"https://api.github.com/users/chenboat/orgs","repos_url":"https://api.github.com/users/chenboat/repos","events_url":"https://api.github.com/users/chenboat/events{/privacy}","received_events_url":"https://api.github.com/users/chenboat/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-23T20:45:20Z","updated_at":"2021-03-23T20:45:20Z","author_association":"CONTRIBUTOR","body":"> > A new integration test UpsertTableSegmentUploadIntegrationTest is added to verify the uploaded segment is added to a realtime upsert enabled table correctly. The segment name used in the test does not follow llc segment convention but it is loaded successfully. The query result is good.\r\n> > I do quite understand why we should \"Exclude uploaded segment from the processing\". During segment load, the upsert table metadata should be processed based on the loaded segment, right?\r\n> > > Please take a look at `PinotLLCRealtimeSegmentManager` and ensure it works on uploaded segments:\r\n> > > \r\n> > > * Segment name for uploaded segment does not follow the llc segment name convention\r\n> > > * Exclude uploaded segment from the processing\r\n> \r\n> I took another look at `PinotLLCRealtimeSegmentManager` and seems non-LLC segments are already excluded (because it might co-exist with HLC segments before). We cannot include them during metadata processing because it relies on the segment name format.\r\n> \r\n> For the issue within the `processExistingSegment()`, for uploading the new segment it won't hit that code path, but for refreshing the existing segment it won't set the fields properly.\r\n> \r\n> If possible, I would recommend setting up an actual table, upload some segments and keep it running for some time to ensure all components can properly work on the uploaded segments\r\n\r\nThe integration test I added uploads a segment to a LLC table with all Pinot components up. The test shows the query can be run successfully on a Pinot upsert table with correct query results returned.  It also verifies the idealstate. I can add more verification to the test such as more metadata check and more segments uploads. I prefer Pinot integration tests than manual tests.\r\n\r\nfor  `processExistingSegment()`, I think we should leave it to another PR and let this PR focus on adding new segments. For  now, this PR will reject upload segments of the same name. Notice that for our Upsert table use case, upload new segments would be good enough. I will have a follow up PR for refreshing existing segments. ","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/805240112/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/805246552","html_url":"https://github.com/apache/pinot/pull/6710#issuecomment-805246552","issue_url":"https://api.github.com/repos/apache/pinot/issues/6710","id":805246552,"node_id":"MDEyOklzc3VlQ29tbWVudDgwNTI0NjU1Mg==","user":{"login":"mcvsubbu","id":2279037,"node_id":"MDQ6VXNlcjIyNzkwMzc=","avatar_url":"https://avatars.githubusercontent.com/u/2279037?v=4","gravatar_id":"","url":"https://api.github.com/users/mcvsubbu","html_url":"https://github.com/mcvsubbu","followers_url":"https://api.github.com/users/mcvsubbu/followers","following_url":"https://api.github.com/users/mcvsubbu/following{/other_user}","gists_url":"https://api.github.com/users/mcvsubbu/gists{/gist_id}","starred_url":"https://api.github.com/users/mcvsubbu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mcvsubbu/subscriptions","organizations_url":"https://api.github.com/users/mcvsubbu/orgs","repos_url":"https://api.github.com/users/mcvsubbu/repos","events_url":"https://api.github.com/users/mcvsubbu/events{/privacy}","received_events_url":"https://api.github.com/users/mcvsubbu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-23T20:52:15Z","updated_at":"2021-03-23T20:52:15Z","author_association":"CONTRIBUTOR","body":"@siddharthteotia  , @mqliang and I met, and agreed on the following (I have added some extras, so take a look)\r\n- We will move the metadata to the trailer, retain the other elements in the same order.\r\n- We will encode the trailer as <totalTrailerLen><trailerPart>\r\n- <trailerPart> = (int, int, blob)+\r\n- The first int is the enum ordinal, second int is the length of the blob, the third part is utf8 encoding of a string, or int/long as dictated by the enum. If int/long, then we will encode in network byte order (big-endian). Alternative is to convert it to a string.","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/805246552/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/805274402","html_url":"https://github.com/apache/pinot/pull/6710#issuecomment-805274402","issue_url":"https://api.github.com/repos/apache/pinot/issues/6710","id":805274402,"node_id":"MDEyOklzc3VlQ29tbWVudDgwNTI3NDQwMg==","user":{"login":"siddharthteotia","id":2150694,"node_id":"MDQ6VXNlcjIxNTA2OTQ=","avatar_url":"https://avatars.githubusercontent.com/u/2150694?v=4","gravatar_id":"","url":"https://api.github.com/users/siddharthteotia","html_url":"https://github.com/siddharthteotia","followers_url":"https://api.github.com/users/siddharthteotia/followers","following_url":"https://api.github.com/users/siddharthteotia/following{/other_user}","gists_url":"https://api.github.com/users/siddharthteotia/gists{/gist_id}","starred_url":"https://api.github.com/users/siddharthteotia/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/siddharthteotia/subscriptions","organizations_url":"https://api.github.com/users/siddharthteotia/orgs","repos_url":"https://api.github.com/users/siddharthteotia/repos","events_url":"https://api.github.com/users/siddharthteotia/events{/privacy}","received_events_url":"https://api.github.com/users/siddharthteotia/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-23T21:27:09Z","updated_at":"2021-03-23T21:27:09Z","author_association":"CONTRIBUTOR","body":"> @siddharthteotia , @mqliang and I met, and agreed on the following (I have added some extras, so take a look)\r\n> \r\n> * We will move the metadata to the trailer, retain the other elements in the same order.\r\n> * We will encode the trailer as\r\n> * = (int, int, blob)+\r\n> * The first int is the enum ordinal, second int is the length of the blob, the third part is utf8 encoding of a string, or int/long as dictated by the enum. If int/long, then we will encode in network byte order (big-endian). Alternative is to convert it to a string.\r\n\r\nI think (int, int, bytes/blob in utf-8) is preferable as opposed to converting to string","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/805274402/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/805294188","html_url":"https://github.com/apache/pinot/pull/6710#issuecomment-805294188","issue_url":"https://api.github.com/repos/apache/pinot/issues/6710","id":805294188,"node_id":"MDEyOklzc3VlQ29tbWVudDgwNTI5NDE4OA==","user":{"login":"mcvsubbu","id":2279037,"node_id":"MDQ6VXNlcjIyNzkwMzc=","avatar_url":"https://avatars.githubusercontent.com/u/2279037?v=4","gravatar_id":"","url":"https://api.github.com/users/mcvsubbu","html_url":"https://github.com/mcvsubbu","followers_url":"https://api.github.com/users/mcvsubbu/followers","following_url":"https://api.github.com/users/mcvsubbu/following{/other_user}","gists_url":"https://api.github.com/users/mcvsubbu/gists{/gist_id}","starred_url":"https://api.github.com/users/mcvsubbu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mcvsubbu/subscriptions","organizations_url":"https://api.github.com/users/mcvsubbu/orgs","repos_url":"https://api.github.com/users/mcvsubbu/repos","events_url":"https://api.github.com/users/mcvsubbu/events{/privacy}","received_events_url":"https://api.github.com/users/mcvsubbu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-23T21:58:58Z","updated_at":"2021-03-23T21:58:58Z","author_association":"CONTRIBUTOR","body":"> > @siddharthteotia , @mqliang and I met, and agreed on the following (I have added some extras, so take a look)\r\n> > \r\n> > * We will move the metadata to the trailer, retain the other elements in the same order.\r\n> > * We will encode the trailer as\r\n> > * = (int, int, blob)+\r\n> > * The first int is the enum ordinal, second int is the length of the blob, the third part is utf8 encoding of a string, or int/long as dictated by the enum. If int/long, then we will encode in network byte order (big-endian). Alternative is to convert it to a string.\r\n> \r\n> I think (int, int, bytes/blob in utf-8) is preferable as opposed to converting to string\r\n\r\nCorrect, but if the \"blob\" is an int or long value, then utf8 will mean long ->string->utf8 right? Alternatively, toBigEndian(longValue)","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/805294188/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/805307730","html_url":"https://github.com/apache/pinot/issues/6706#issuecomment-805307730","issue_url":"https://api.github.com/repos/apache/pinot/issues/6706","id":805307730,"node_id":"MDEyOklzc3VlQ29tbWVudDgwNTMwNzczMA==","user":{"login":"Jackie-Jiang","id":17555551,"node_id":"MDQ6VXNlcjE3NTU1NTUx","avatar_url":"https://avatars.githubusercontent.com/u/17555551?v=4","gravatar_id":"","url":"https://api.github.com/users/Jackie-Jiang","html_url":"https://github.com/Jackie-Jiang","followers_url":"https://api.github.com/users/Jackie-Jiang/followers","following_url":"https://api.github.com/users/Jackie-Jiang/following{/other_user}","gists_url":"https://api.github.com/users/Jackie-Jiang/gists{/gist_id}","starred_url":"https://api.github.com/users/Jackie-Jiang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Jackie-Jiang/subscriptions","organizations_url":"https://api.github.com/users/Jackie-Jiang/orgs","repos_url":"https://api.github.com/users/Jackie-Jiang/repos","events_url":"https://api.github.com/users/Jackie-Jiang/events{/privacy}","received_events_url":"https://api.github.com/users/Jackie-Jiang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-23T22:25:54Z","updated_at":"2021-03-23T22:25:54Z","author_association":"CONTRIBUTOR","body":"Yes, modeled as post-aggregation","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/805307730/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/806028103","html_url":"https://github.com/apache/pinot/pull/6710#issuecomment-806028103","issue_url":"https://api.github.com/repos/apache/pinot/issues/6710","id":806028103,"node_id":"MDEyOklzc3VlQ29tbWVudDgwNjAyODEwMw==","user":{"login":"mqliang","id":12423751,"node_id":"MDQ6VXNlcjEyNDIzNzUx","avatar_url":"https://avatars.githubusercontent.com/u/12423751?v=4","gravatar_id":"","url":"https://api.github.com/users/mqliang","html_url":"https://github.com/mqliang","followers_url":"https://api.github.com/users/mqliang/followers","following_url":"https://api.github.com/users/mqliang/following{/other_user}","gists_url":"https://api.github.com/users/mqliang/gists{/gist_id}","starred_url":"https://api.github.com/users/mqliang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mqliang/subscriptions","organizations_url":"https://api.github.com/users/mqliang/orgs","repos_url":"https://api.github.com/users/mqliang/repos","events_url":"https://api.github.com/users/mqliang/events{/privacy}","received_events_url":"https://api.github.com/users/mqliang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-24T17:41:40Z","updated_at":"2021-03-24T17:47:32Z","author_association":"CONTRIBUTOR","body":"@mcvsubbu Just found a defect of using enum value as key and encode trailer as `(int, int, bytes/blob in utf-8) `:\r\n* We are able to add new key into the enum, without bumping up version\r\n* We are able to not include a key into trailer, without bumping up version\r\n* **However, we are unable to remove a key from the enum (if the key is no long used in a future version)**\r\n\r\nNamely, say we now have three keys:\r\n```\r\n// old version:\r\nenum {\r\n    key1,\r\n    key2,\r\n    key3,\r\n}\r\n```\r\nNow if we remove key2 from the enum since it's no longer been used.\r\n```\r\n// new version\r\nenum {\r\n    key1,\r\n    key3,\r\n}\r\n```\r\nThen, when new broker receive bytes from old server, it will interpret value of k2 as value of k3.\r\n\r\nSo a better solution is using string as key and encode trailer as `(int of key length, bytes of key in utf-8, int of value length, bytes of value in utf-8)`. Which is exactly how we encode metadata in V2.\r\n\r\nHowever, if we do it in his way, it's equivalent to just moving metadata section to the end of datatable, which does not make too much sense to bump up a version just for rearranging sections in datatable.\r\n\r\nLet's take a step back to what we wanner solve:\r\n* we wanner add serialization_cost to datatable, but serialization_cost is not available before serialization. \r\n* we wanner keep back-comp\r\n\r\nTo add serialization_cost to datatable after serialization, basically we have two options:\r\n* append it to the end of bytes. \r\n* put a temporary value of serialization_cost when serialization, after serialization is done, replace it as the actual value.\r\n\r\nSo, here is another approach:\r\n* don't add a trailer section\r\n* put serialization_cost into metedata\r\n* we serialize metedata, in V2 we encode it as `(int of key length, bytes of key in utf-8, int of value length, bytes of value in utf-8)`. Encoding in this way makes value replacement after  serialization impossible, since `String.valueOf(\"1000\").length() != String.valueOf(\"100000\").length()`. \r\n* In V3, keep all existing logic. However, if the value is long, we should encode it as `(int of key length, bytes of key in utf-8, toBigEndian(longValue))`. And the the function of `serializaMetadata()`, we can have a variable to record the start offset of serialization_cost. \r\n```\r\nbytes[] bytes;\r\nint serialization_cost_value_start_offset;\r\n\r\noffset = 0;\r\nfor (String key: metadata.keySet()) {\r\n      keybytes[] = to-utf8(key);\r\n      bytes.append(keybytes.length())\r\n      bytes.append(keybytes)\r\n\r\n      offset += 4;\r\n      offset += keybytes.length\r\n\r\n      if (key.equals(\"erialization_cost\")) {\r\n            serialization_cost_value_start_offset = offset;\r\n            valuebytes = toBigEndian(value);\r\n            bytes.append(valuebytes)\r\n            offset += 8;\r\n      } else {\r\n            valuebytes = to-utf8(value);\r\n            bytes.append(valuebytes.length())\r\n            bytes.append(valuebytes)\r\n            offset += 4\r\n            offset += keybytes.length\r\n      }\r\n}\r\n```\r\nSo after serialization, we are able to replace the value of serialization_cost (`toBigEndian(longValue)` is always 8 bytes, which makes replacement possible):\r\n```\r\noffset = metadataStartOffset+serialization_cost_value_start_offset\r\nbytes[offset:offset+8] = toBigEndian(actualValue)\r\n```","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/806028103/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/806028614","html_url":"https://github.com/apache/pinot/pull/6567#issuecomment-806028614","issue_url":"https://api.github.com/repos/apache/pinot/issues/6567","id":806028614,"node_id":"MDEyOklzc3VlQ29tbWVudDgwNjAyODYxNA==","user":{"login":"Jackie-Jiang","id":17555551,"node_id":"MDQ6VXNlcjE3NTU1NTUx","avatar_url":"https://avatars.githubusercontent.com/u/17555551?v=4","gravatar_id":"","url":"https://api.github.com/users/Jackie-Jiang","html_url":"https://github.com/Jackie-Jiang","followers_url":"https://api.github.com/users/Jackie-Jiang/followers","following_url":"https://api.github.com/users/Jackie-Jiang/following{/other_user}","gists_url":"https://api.github.com/users/Jackie-Jiang/gists{/gist_id}","starred_url":"https://api.github.com/users/Jackie-Jiang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Jackie-Jiang/subscriptions","organizations_url":"https://api.github.com/users/Jackie-Jiang/orgs","repos_url":"https://api.github.com/users/Jackie-Jiang/repos","events_url":"https://api.github.com/users/Jackie-Jiang/events{/privacy}","received_events_url":"https://api.github.com/users/Jackie-Jiang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-24T17:42:22Z","updated_at":"2021-03-24T17:42:22Z","author_association":"CONTRIBUTOR","body":"For the new integration test, it would be good if we push some events into kafka as well and make the commit threshold low so that we have CONSUMING, DONE, UPLOADED segments at the same time. Also, we can run the `RealtimeSegmentValidationManager` and see if it handles UPLOADED segments properly","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/806028614/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/806036908","html_url":"https://github.com/apache/pinot/pull/6686#issuecomment-806036908","issue_url":"https://api.github.com/repos/apache/pinot/issues/6686","id":806036908,"node_id":"MDEyOklzc3VlQ29tbWVudDgwNjAzNjkwOA==","user":{"login":"shahsank3t","id":6761317,"node_id":"MDQ6VXNlcjY3NjEzMTc=","avatar_url":"https://avatars.githubusercontent.com/u/6761317?v=4","gravatar_id":"","url":"https://api.github.com/users/shahsank3t","html_url":"https://github.com/shahsank3t","followers_url":"https://api.github.com/users/shahsank3t/followers","following_url":"https://api.github.com/users/shahsank3t/following{/other_user}","gists_url":"https://api.github.com/users/shahsank3t/gists{/gist_id}","starred_url":"https://api.github.com/users/shahsank3t/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/shahsank3t/subscriptions","organizations_url":"https://api.github.com/users/shahsank3t/orgs","repos_url":"https://api.github.com/users/shahsank3t/repos","events_url":"https://api.github.com/users/shahsank3t/events{/privacy}","received_events_url":"https://api.github.com/users/shahsank3t/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-24T17:55:17Z","updated_at":"2021-03-24T17:55:17Z","author_association":"CONTRIBUTOR","body":"Showing error for limited permissions user if trying to access/perform any restricted action.\r\n![image](https://user-images.githubusercontent.com/6761317/112360116-f8911300-8cf7-11eb-9432-bbeadb716765.png)\r\n\r\ncc: @apucher ","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/806036908/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/806145868","html_url":"https://github.com/apache/pinot/pull/6710#issuecomment-806145868","issue_url":"https://api.github.com/repos/apache/pinot/issues/6710","id":806145868,"node_id":"MDEyOklzc3VlQ29tbWVudDgwNjE0NTg2OA==","user":{"login":"mqliang","id":12423751,"node_id":"MDQ6VXNlcjEyNDIzNzUx","avatar_url":"https://avatars.githubusercontent.com/u/12423751?v=4","gravatar_id":"","url":"https://api.github.com/users/mqliang","html_url":"https://github.com/mqliang","followers_url":"https://api.github.com/users/mqliang/followers","following_url":"https://api.github.com/users/mqliang/following{/other_user}","gists_url":"https://api.github.com/users/mqliang/gists{/gist_id}","starred_url":"https://api.github.com/users/mqliang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mqliang/subscriptions","organizations_url":"https://api.github.com/users/mqliang/orgs","repos_url":"https://api.github.com/users/mqliang/repos","events_url":"https://api.github.com/users/mqliang/events{/privacy}","received_events_url":"https://api.github.com/users/mqliang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-24T19:58:42Z","updated_at":"2021-03-24T19:58:42Z","author_association":"CONTRIBUTOR","body":"@Jackie-Jiang \r\n> High level question: why do we need this new field? We should be able to use the metadata field for this\r\n\r\nWe wanner measure CPU time to serialize datatable (AKA: `serialization_cost`)on each server, and send it back to broker. Here is the dilemma: we will only know the CPU time after the serialization is completed, however if the serialization is already completed, how can make `serialization_cost` as part of the payload (it's a chicken-and-egg problem)? \r\n\r\nTo add `serialization_cost` to serialized bytes of datatable, basically we have two options (we don't want serialize two times):\r\n* append it to the end of bytes.\r\n* put a temporary value of serialization_cost when serialization, after serialization is done, replace it as the actual value.\r\n\r\nNo matter which options we adopt, we need bump up the version.","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/806145868/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/806158108","html_url":"https://github.com/apache/pinot/pull/6710#issuecomment-806158108","issue_url":"https://api.github.com/repos/apache/pinot/issues/6710","id":806158108,"node_id":"MDEyOklzc3VlQ29tbWVudDgwNjE1ODEwOA==","user":{"login":"mcvsubbu","id":2279037,"node_id":"MDQ6VXNlcjIyNzkwMzc=","avatar_url":"https://avatars.githubusercontent.com/u/2279037?v=4","gravatar_id":"","url":"https://api.github.com/users/mcvsubbu","html_url":"https://github.com/mcvsubbu","followers_url":"https://api.github.com/users/mcvsubbu/followers","following_url":"https://api.github.com/users/mcvsubbu/following{/other_user}","gists_url":"https://api.github.com/users/mcvsubbu/gists{/gist_id}","starred_url":"https://api.github.com/users/mcvsubbu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mcvsubbu/subscriptions","organizations_url":"https://api.github.com/users/mcvsubbu/orgs","repos_url":"https://api.github.com/users/mcvsubbu/repos","events_url":"https://api.github.com/users/mcvsubbu/events{/privacy}","received_events_url":"https://api.github.com/users/mcvsubbu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-24T20:16:00Z","updated_at":"2021-03-24T20:16:00Z","author_association":"CONTRIBUTOR","body":"> @siddharthteotia , @mqliang and I met, and agreed on the following (I have added some extras, so take a look)\r\n> \r\n> * We will move the metadata to the trailer, retain the other elements in the same order.\r\n> * We will encode the trailer as\r\n> * = (int, int, blob)+\r\n> * The first int is the enum ordinal, second int is the length of the blob, the third part is utf8 encoding of a string, or int/long as dictated by the enum. If int/long, then we will encode in network byte order (big-endian). Alternative is to convert it to a string.\r\n\r\nNot sure which option @siddharthteotia agrees with, but the alternatives are something like:\r\n`7, 8, \"12609856\"` (8 byte string for a number)\r\nvs\r\n`7, 4, 12609856`  (4-byte integer for a number)\r\n\r\nMaybe we can decide based on what looks easier in code.","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/806158108/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/806161505","html_url":"https://github.com/apache/pinot/pull/6710#issuecomment-806161505","issue_url":"https://api.github.com/repos/apache/pinot/issues/6710","id":806161505,"node_id":"MDEyOklzc3VlQ29tbWVudDgwNjE2MTUwNQ==","user":{"login":"mcvsubbu","id":2279037,"node_id":"MDQ6VXNlcjIyNzkwMzc=","avatar_url":"https://avatars.githubusercontent.com/u/2279037?v=4","gravatar_id":"","url":"https://api.github.com/users/mcvsubbu","html_url":"https://github.com/mcvsubbu","followers_url":"https://api.github.com/users/mcvsubbu/followers","following_url":"https://api.github.com/users/mcvsubbu/following{/other_user}","gists_url":"https://api.github.com/users/mcvsubbu/gists{/gist_id}","starred_url":"https://api.github.com/users/mcvsubbu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mcvsubbu/subscriptions","organizations_url":"https://api.github.com/users/mcvsubbu/orgs","repos_url":"https://api.github.com/users/mcvsubbu/repos","events_url":"https://api.github.com/users/mcvsubbu/events{/privacy}","received_events_url":"https://api.github.com/users/mcvsubbu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-24T20:21:46Z","updated_at":"2021-03-24T20:21:46Z","author_association":"CONTRIBUTOR","body":"> @mcvsubbu Just found a defect of using enum value as key and encode trailer as `(int, int, bytes/blob in utf-8) `:\r\n> \r\n> * We are able to add new key into the enum, without bumping up version\r\n> * We are able to not include a key into trailer, without bumping up version\r\n> * **However, we are unable to remove a key from the enum (if the key is no long used in a future version)**\r\n> \r\n> Namely, say we now have three keys:\r\n> \r\n> ```\r\n> // old version:\r\n> enum {\r\n>     key1,\r\n>     key2,\r\n>     key3,\r\n> }\r\n> ```\r\n> \r\n> Now if we remove key2 from the enum since it's no longer been used.\r\n> \r\n> ```\r\n> // new version\r\n> enum {\r\n>     key1,\r\n>     key3,\r\n> }\r\n> ```\r\n> \r\n> Then, when new broker receive bytes from old server, it will interpret value of k2 as value of k3.\r\n> \r\n> So a better solution is using string as key and encode trailer as `(int of key length, bytes of key in utf-8, int of value length, bytes of value in utf-8)`. Which is exactly how we encode metadata in V2.\r\n> \r\n> However, if we do it in his way, it's equivalent to just moving metadata section to the end of datatable, which does not make too much sense to bump up a version just for rearranging sections in datatable.\r\n> \r\n> Let's take a step back to what we wanner solve:\r\n> \r\n> * we wanner add serialization_cost to datatable, but serialization_cost is not available before serialization.\r\n> * we wanner keep back-comp\r\n> \r\n> To add serialization_cost to datatable after serialization, basically we have two options:\r\n> \r\n> * append it to the end of bytes.\r\n> * put a temporary value of serialization_cost when serialization, after serialization is done, replace it as the actual value.\r\n> \r\n> So, here is another approach:\r\n> \r\n> * don't add a trailer section\r\n> * put serialization_cost into metedata\r\n> * we serialize metedata, in V2 we encode it as `(int of key length, bytes of key in utf-8, int of value length, bytes of value in utf-8)`. Encoding in this way makes value replacement after  serialization impossible, since `String.valueOf(\"1000\").length() != String.valueOf(\"100000\").length()`.\r\n> * In V3, keep all existing logic. However, if the value is long, we should encode it as `(int of key length, bytes of key in utf-8, toBigEndian(longValue))`. And the the function of `serializaMetadata()`, we can have a variable to record the start offset of serialization_cost.\r\n> \r\n> ```\r\n> bytes[] bytes;\r\n> int serialization_cost_value_start_offset;\r\n> \r\n> offset = 0;\r\n> for (String key: metadata.keySet()) {\r\n>       keybytes[] = to-utf8(key);\r\n>       bytes.append(keybytes.length())\r\n>       bytes.append(keybytes)\r\n> \r\n>       offset += 4;\r\n>       offset += keybytes.length\r\n> \r\n>       if (key.equals(\"erialization_cost\")) {\r\n>             serialization_cost_value_start_offset = offset;\r\n>             valuebytes = toBigEndian(value);\r\n>             bytes.append(valuebytes)\r\n>             offset += 8;\r\n>       } else {\r\n>             valuebytes = to-utf8(value);\r\n>             bytes.append(valuebytes.length())\r\n>             bytes.append(valuebytes)\r\n>             offset += 4\r\n>             offset += keybytes.length\r\n>       }\r\n> }\r\n> ```\r\n> \r\n> So after serialization, we are able to replace the value of serialization_cost (`toBigEndian(longValue)` is always 8 bytes, which makes replacement possible):\r\n> \r\n> ```\r\n> offset = metadataStartOffset+serialization_cost_value_start_offset\r\n> bytes[offset:offset+8] = toBigEndian(actualValue)\r\n> ```\r\n\r\n- Removing enums will break the protocol and is not allowed. We need to state in the comments clearly.\r\n- We should use a trailer instead of hacking the length. This will be applicable for streaming use cases as well\r\n","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/806161505/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/806228669","html_url":"https://github.com/apache/pinot/issues/6715#issuecomment-806228669","issue_url":"https://api.github.com/repos/apache/pinot/issues/6715","id":806228669,"node_id":"MDEyOklzc3VlQ29tbWVudDgwNjIyODY2OQ==","user":{"login":"kishoreg","id":850791,"node_id":"MDQ6VXNlcjg1MDc5MQ==","avatar_url":"https://avatars.githubusercontent.com/u/850791?v=4","gravatar_id":"","url":"https://api.github.com/users/kishoreg","html_url":"https://github.com/kishoreg","followers_url":"https://api.github.com/users/kishoreg/followers","following_url":"https://api.github.com/users/kishoreg/following{/other_user}","gists_url":"https://api.github.com/users/kishoreg/gists{/gist_id}","starred_url":"https://api.github.com/users/kishoreg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kishoreg/subscriptions","organizations_url":"https://api.github.com/users/kishoreg/orgs","repos_url":"https://api.github.com/users/kishoreg/repos","events_url":"https://api.github.com/users/kishoreg/events{/privacy}","received_events_url":"https://api.github.com/users/kishoreg/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-24T22:35:23Z","updated_at":"2021-03-24T22:35:23Z","author_association":"MEMBER","body":"> As a result, we cannot distinguish whether the default value is set from user or not. Adding a flag(e.g. isUserDefinedDefaultValue) can resolve this issue.\r\n\r\nWe can know this by looking at the schema right? why do we need another flag for this","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/806228669/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/806231068","html_url":"https://github.com/apache/pinot/issues/6715#issuecomment-806231068","issue_url":"https://api.github.com/repos/apache/pinot/issues/6715","id":806231068,"node_id":"MDEyOklzc3VlQ29tbWVudDgwNjIzMTA2OA==","user":{"login":"Jackie-Jiang","id":17555551,"node_id":"MDQ6VXNlcjE3NTU1NTUx","avatar_url":"https://avatars.githubusercontent.com/u/17555551?v=4","gravatar_id":"","url":"https://api.github.com/users/Jackie-Jiang","html_url":"https://github.com/Jackie-Jiang","followers_url":"https://api.github.com/users/Jackie-Jiang/followers","following_url":"https://api.github.com/users/Jackie-Jiang/following{/other_user}","gists_url":"https://api.github.com/users/Jackie-Jiang/gists{/gist_id}","starred_url":"https://api.github.com/users/Jackie-Jiang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Jackie-Jiang/subscriptions","organizations_url":"https://api.github.com/users/Jackie-Jiang/orgs","repos_url":"https://api.github.com/users/Jackie-Jiang/repos","events_url":"https://api.github.com/users/Jackie-Jiang/events{/privacy}","received_events_url":"https://api.github.com/users/Jackie-Jiang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-24T22:41:36Z","updated_at":"2021-03-24T22:41:36Z","author_association":"CONTRIBUTOR","body":"You don't need another flag in the `FieldSpec`, instead you can add a method in `FieldSpec` which is json-ignored and return whether the `_stringDefaultNullValue` is `null` (whether the default is user-defined).\r\nI don't quite follow why you need to know whether the default is user-defined though. You can always leave null field as is and Pinot will fill it with default (either user-defined or not)","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/806231068/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/806232651","html_url":"https://github.com/apache/pinot/pull/6710#issuecomment-806232651","issue_url":"https://api.github.com/repos/apache/pinot/issues/6710","id":806232651,"node_id":"MDEyOklzc3VlQ29tbWVudDgwNjIzMjY1MQ==","user":{"login":"mqliang","id":12423751,"node_id":"MDQ6VXNlcjEyNDIzNzUx","avatar_url":"https://avatars.githubusercontent.com/u/12423751?v=4","gravatar_id":"","url":"https://api.github.com/users/mqliang","html_url":"https://github.com/mqliang","followers_url":"https://api.github.com/users/mqliang/followers","following_url":"https://api.github.com/users/mqliang/following{/other_user}","gists_url":"https://api.github.com/users/mqliang/gists{/gist_id}","starred_url":"https://api.github.com/users/mqliang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mqliang/subscriptions","organizations_url":"https://api.github.com/users/mqliang/orgs","repos_url":"https://api.github.com/users/mqliang/repos","events_url":"https://api.github.com/users/mqliang/events{/privacy}","received_events_url":"https://api.github.com/users/mqliang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-24T22:45:45Z","updated_at":"2021-03-24T22:45:45Z","author_association":"CONTRIBUTOR","body":"@mcvsubbu Ready for another round of review. \r\n\r\ncommit of \"implement datatable V3\":\r\n\r\n* Add DataTableImplV3, compared with V2:\r\n    * V3 has a trailer section, at the end of datatable\r\n    * V3 don't have metadata sections, all KV pairs are put into trailer section\r\n    * V3 has an exceptions section in the middle of datatable. V2 use meta data to store exceptions (use \r\n      `\"Exception\"+errCode` as key). In V3, all key are enum value, which must be defined statically, we can not use  \r\n      `\"Exception\"+errCode` to create new keys, so use a dedicate section to store exceptions\r\n \r\n* Although metadata section has been removed in V3, there are many existing code use `dataTable.getMetadata().get(\"key\")/dataTable.getMetadata().set(\"key\", \"value\")` to set/get metadata KV pairs, to provide the same interface with V2, V3 also implement the `getMetadata()` method. When serialize, move all metadata into trailer section; when deserialize, move all metadata KV pair trailer section to matedata map.\r\n* When serialize the trailer section, for each KV pairs:\r\n   *  if value is int/long, encode it as: [keyOrdinal, bigEndianRepresentationOfValue]\r\n   *  if value is string, encode it as: [keyOrdinal, valueLength, Utf8EncodedValue]\r\n  \r\nTo make review easier, will @you at where V3 is different with V2.\r\n\r\ncommit of \"add responseSerializationCpuTimeNs measurement\":\r\n   * put a temporary value of serialization_cost when serialization, after serialization is done, replace it as the actual value.","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/806232651/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/806235336","html_url":"https://github.com/apache/pinot/issues/6715#issuecomment-806235336","issue_url":"https://api.github.com/repos/apache/pinot/issues/6715","id":806235336,"node_id":"MDEyOklzc3VlQ29tbWVudDgwNjIzNTMzNg==","user":{"login":"liuchang0520","id":33030174,"node_id":"MDQ6VXNlcjMzMDMwMTc0","avatar_url":"https://avatars.githubusercontent.com/u/33030174?v=4","gravatar_id":"","url":"https://api.github.com/users/liuchang0520","html_url":"https://github.com/liuchang0520","followers_url":"https://api.github.com/users/liuchang0520/followers","following_url":"https://api.github.com/users/liuchang0520/following{/other_user}","gists_url":"https://api.github.com/users/liuchang0520/gists{/gist_id}","starred_url":"https://api.github.com/users/liuchang0520/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/liuchang0520/subscriptions","organizations_url":"https://api.github.com/users/liuchang0520/orgs","repos_url":"https://api.github.com/users/liuchang0520/repos","events_url":"https://api.github.com/users/liuchang0520/events{/privacy}","received_events_url":"https://api.github.com/users/liuchang0520/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-24T22:52:28Z","updated_at":"2021-03-24T22:52:28Z","author_association":"CONTRIBUTOR","body":"@kishoreg @Jackie-Jiang  OK make sense. I missed the step where Pinot fills in the default value after getting a null field from decoder. \r\nThis change is not needed. ","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/806235336/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/806244858","html_url":"https://github.com/apache/pinot/pull/6710#issuecomment-806244858","issue_url":"https://api.github.com/repos/apache/pinot/issues/6710","id":806244858,"node_id":"MDEyOklzc3VlQ29tbWVudDgwNjI0NDg1OA==","user":{"login":"Jackie-Jiang","id":17555551,"node_id":"MDQ6VXNlcjE3NTU1NTUx","avatar_url":"https://avatars.githubusercontent.com/u/17555551?v=4","gravatar_id":"","url":"https://api.github.com/users/Jackie-Jiang","html_url":"https://github.com/Jackie-Jiang","followers_url":"https://api.github.com/users/Jackie-Jiang/followers","following_url":"https://api.github.com/users/Jackie-Jiang/following{/other_user}","gists_url":"https://api.github.com/users/Jackie-Jiang/gists{/gist_id}","starred_url":"https://api.github.com/users/Jackie-Jiang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Jackie-Jiang/subscriptions","organizations_url":"https://api.github.com/users/Jackie-Jiang/orgs","repos_url":"https://api.github.com/users/Jackie-Jiang/repos","events_url":"https://api.github.com/users/Jackie-Jiang/events{/privacy}","received_events_url":"https://api.github.com/users/Jackie-Jiang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-24T23:18:08Z","updated_at":"2021-03-24T23:18:08Z","author_association":"CONTRIBUTOR","body":"Since we are adding a new data table version, please use this opportunity to address the TODOs within the `DataTableBuilder`.\r\nFor the `TrailerKeys` enum, let's put an id for each key instead of using the ordinal of the enum. This way it is much easier to manage as long as we don't reuse the ids. Also suggest renaming it to `MetadataKeys`","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/806244858/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/806259380","html_url":"https://github.com/apache/pinot/pull/6710#issuecomment-806259380","issue_url":"https://api.github.com/repos/apache/pinot/issues/6710","id":806259380,"node_id":"MDEyOklzc3VlQ29tbWVudDgwNjI1OTM4MA==","user":{"login":"siddharthteotia","id":2150694,"node_id":"MDQ6VXNlcjIxNTA2OTQ=","avatar_url":"https://avatars.githubusercontent.com/u/2150694?v=4","gravatar_id":"","url":"https://api.github.com/users/siddharthteotia","html_url":"https://github.com/siddharthteotia","followers_url":"https://api.github.com/users/siddharthteotia/followers","following_url":"https://api.github.com/users/siddharthteotia/following{/other_user}","gists_url":"https://api.github.com/users/siddharthteotia/gists{/gist_id}","starred_url":"https://api.github.com/users/siddharthteotia/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/siddharthteotia/subscriptions","organizations_url":"https://api.github.com/users/siddharthteotia/orgs","repos_url":"https://api.github.com/users/siddharthteotia/repos","events_url":"https://api.github.com/users/siddharthteotia/events{/privacy}","received_events_url":"https://api.github.com/users/siddharthteotia/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-24T23:59:43Z","updated_at":"2021-03-24T23:59:43Z","author_association":"CONTRIBUTOR","body":"> > @siddharthteotia , @mqliang and I met, and agreed on the following (I have added some extras, so take a look)\r\n> > \r\n> > * We will move the metadata to the trailer, retain the other elements in the same order.\r\n> > * We will encode the trailer as\r\n> > * = (int, int, blob)+\r\n> > * The first int is the enum ordinal, second int is the length of the blob, the third part is utf8 encoding of a string, or int/long as dictated by the enum. If int/long, then we will encode in network byte order (big-endian). Alternative is to convert it to a string.\r\n> \r\n> Not sure which option @siddharthteotia agrees with, but the alternatives are something like:\r\n> `7, 8, \"12609856\"` (8 byte string for a number)\r\n> vs\r\n> `7, 4, 12609856` (4-byte integer for a number)\r\n> \r\n> Maybe we can decide based on what looks easier in code.\r\n\r\n@mcvsubbu I agree with the big endian approach in case when the value/blob part itself is fixed with int or long","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/806259380/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/806259732","html_url":"https://github.com/apache/pinot/pull/6710#issuecomment-806259732","issue_url":"https://api.github.com/repos/apache/pinot/issues/6710","id":806259732,"node_id":"MDEyOklzc3VlQ29tbWVudDgwNjI1OTczMg==","user":{"login":"siddharthteotia","id":2150694,"node_id":"MDQ6VXNlcjIxNTA2OTQ=","avatar_url":"https://avatars.githubusercontent.com/u/2150694?v=4","gravatar_id":"","url":"https://api.github.com/users/siddharthteotia","html_url":"https://github.com/siddharthteotia","followers_url":"https://api.github.com/users/siddharthteotia/followers","following_url":"https://api.github.com/users/siddharthteotia/following{/other_user}","gists_url":"https://api.github.com/users/siddharthteotia/gists{/gist_id}","starred_url":"https://api.github.com/users/siddharthteotia/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/siddharthteotia/subscriptions","organizations_url":"https://api.github.com/users/siddharthteotia/orgs","repos_url":"https://api.github.com/users/siddharthteotia/repos","events_url":"https://api.github.com/users/siddharthteotia/events{/privacy}","received_events_url":"https://api.github.com/users/siddharthteotia/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-25T00:00:43Z","updated_at":"2021-03-25T00:00:43Z","author_association":"CONTRIBUTOR","body":"> @mcvsubbu Just found a defect of using enum value as key and encode trailer as `(int, int, bytes/blob in utf-8) `:\r\n> \r\n> * We are able to add new key into the enum, without bumping up version\r\n> * We are able to not include a key into trailer, without bumping up version\r\n> * **However, we are unable to remove a key from the enum (if the key is no long used in a future version)**\r\n> \r\n> Namely, say we now have three keys:\r\n> \r\n> ```\r\n> // old version:\r\n> enum {\r\n>     key1,\r\n>     key2,\r\n>     key3,\r\n> }\r\n> ```\r\n> \r\n> Now if we remove key2 from the enum since it's no longer been used.\r\n> \r\n> ```\r\n> // new version\r\n> enum {\r\n>     key1,\r\n>     key3,\r\n> }\r\n> ```\r\n> \r\n> Then, when new broker receive bytes from old server, it will interpret value of k2 as value of k3.\r\n> \r\n> So a better solution is using string as key and encode trailer as `(int of key length, bytes of key in utf-8, int of value length, bytes of value in utf-8)`. Which is exactly how we encode metadata in V2.\r\n> \r\n> However, if we do it in his way, it's equivalent to just moving metadata section to the end of datatable, which does not make too much sense to bump up a version just for rearranging sections in datatable.\r\n> \r\n> Let's take a step back to what we wanner solve:\r\n> \r\n> * we wanner add serialization_cost to datatable, but serialization_cost is not available before serialization.\r\n> * we wanner keep back-comp\r\n> \r\n> To add serialization_cost to datatable after serialization, basically we have two options:\r\n> \r\n> * append it to the end of bytes.\r\n> * put a temporary value of serialization_cost when serialization, after serialization is done, replace it as the actual value.\r\n> \r\n> So, here is another approach:\r\n> \r\n> * don't add a trailer section\r\n> * put serialization_cost into metedata\r\n> * we serialize metedata, in V2 we encode it as `(int of key length, bytes of key in utf-8, int of value length, bytes of value in utf-8)`. Encoding in this way makes value replacement after  serialization impossible, since `String.valueOf(\"1000\").length() != String.valueOf(\"100000\").length()`.\r\n> * In V3, keep all existing logic. However, if the value is long, we should encode it as `(int of key length, bytes of key in utf-8, toBigEndian(longValue))`. And the the function of `serializaMetadata()`, we can have a variable to record the start offset of serialization_cost.\r\n> \r\n> ```\r\n> bytes[] bytes;\r\n> int serialization_cost_value_start_offset;\r\n> \r\n> offset = 0;\r\n> for (String key: metadata.keySet()) {\r\n>       keybytes[] = to-utf8(key);\r\n>       bytes.append(keybytes.length())\r\n>       bytes.append(keybytes)\r\n> \r\n>       offset += 4;\r\n>       offset += keybytes.length\r\n> \r\n>       if (key.equals(\"erialization_cost\")) {\r\n>             serialization_cost_value_start_offset = offset;\r\n>             valuebytes = toBigEndian(value);\r\n>             bytes.append(valuebytes)\r\n>             offset += 8;\r\n>       } else {\r\n>             valuebytes = to-utf8(value);\r\n>             bytes.append(valuebytes.length())\r\n>             bytes.append(valuebytes)\r\n>             offset += 4\r\n>             offset += keybytes.length\r\n>       }\r\n> }\r\n> ```\r\n> \r\n> So after serialization, we are able to replace the value of serialization_cost (`toBigEndian(longValue)` is always 8 bytes, which makes replacement possible):\r\n> \r\n> ```\r\n> offset = metadataStartOffset+serialization_cost_value_start_offset\r\n> bytes[offset:offset+8] = toBigEndian(actualValue)\r\n> ```\r\n\r\n@mqliang @mcvsubbu  I don't think we should worry about or even allow removal of enums. It is complicating the design plus it's something that is typically not allowed","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/806259732/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/806261871","html_url":"https://github.com/apache/pinot/pull/6710#issuecomment-806261871","issue_url":"https://api.github.com/repos/apache/pinot/issues/6710","id":806261871,"node_id":"MDEyOklzc3VlQ29tbWVudDgwNjI2MTg3MQ==","user":{"login":"siddharthteotia","id":2150694,"node_id":"MDQ6VXNlcjIxNTA2OTQ=","avatar_url":"https://avatars.githubusercontent.com/u/2150694?v=4","gravatar_id":"","url":"https://api.github.com/users/siddharthteotia","html_url":"https://github.com/siddharthteotia","followers_url":"https://api.github.com/users/siddharthteotia/followers","following_url":"https://api.github.com/users/siddharthteotia/following{/other_user}","gists_url":"https://api.github.com/users/siddharthteotia/gists{/gist_id}","starred_url":"https://api.github.com/users/siddharthteotia/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/siddharthteotia/subscriptions","organizations_url":"https://api.github.com/users/siddharthteotia/orgs","repos_url":"https://api.github.com/users/siddharthteotia/repos","events_url":"https://api.github.com/users/siddharthteotia/events{/privacy}","received_events_url":"https://api.github.com/users/siddharthteotia/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-25T00:06:10Z","updated_at":"2021-03-25T00:06:10Z","author_association":"CONTRIBUTOR","body":"> With the addition of new data structure in this PR, there are essentially two places in DataTable where the key-value / name-value style structure is located.\r\n> \r\n> * First is the existing DataTable metadata which is also a series of key-value pairs where key is string and value is some statistic/metric. This is towards the beginning of the byte stream\r\n> * Second is the structure introduced in this PR which is written as a footer.\r\n> \r\n> Since we are anyway bumping up the version, how about we move the existing metadata of key-value pairs to the end of file to keep consistency in the format. So, all the metadata stuff (aka key-value pairs) + new positional stuff can be a file footer.\r\n\r\n\r\n\r\n> With this PR, we should resolve a couple of TODOs introduced in PR #6680\r\n> \r\n> * Expose the serialization time through an API at the DataTable level and log it in [QueryScheduler](https://github.com/apache/incubator-pinot/pull/6710/files#diff-2bff83abd3f6e831acfe4b6d31a022f228710def4eea47db3929c6d90b3147ecR222). You need to serialize before the logging line. Currently it is after.\r\n> * Revisit [this](https://github.com/apache/incubator-pinot/pull/6710/files#diff-2bff83abd3f6e831acfe4b6d31a022f228710def4eea47db3929c6d90b3147ecR255). The execution cpu time is not yet serialized as part of metadata. May be we can just remove line 258.\r\n\r\n@mqliang , please make sure to address these TODOs","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/806261871/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/806292277","html_url":"https://github.com/apache/pinot/pull/6710#issuecomment-806292277","issue_url":"https://api.github.com/repos/apache/pinot/issues/6710","id":806292277,"node_id":"MDEyOklzc3VlQ29tbWVudDgwNjI5MjI3Nw==","user":{"login":"mcvsubbu","id":2279037,"node_id":"MDQ6VXNlcjIyNzkwMzc=","avatar_url":"https://avatars.githubusercontent.com/u/2279037?v=4","gravatar_id":"","url":"https://api.github.com/users/mcvsubbu","html_url":"https://github.com/mcvsubbu","followers_url":"https://api.github.com/users/mcvsubbu/followers","following_url":"https://api.github.com/users/mcvsubbu/following{/other_user}","gists_url":"https://api.github.com/users/mcvsubbu/gists{/gist_id}","starred_url":"https://api.github.com/users/mcvsubbu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mcvsubbu/subscriptions","organizations_url":"https://api.github.com/users/mcvsubbu/orgs","repos_url":"https://api.github.com/users/mcvsubbu/repos","events_url":"https://api.github.com/users/mcvsubbu/events{/privacy}","received_events_url":"https://api.github.com/users/mcvsubbu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-25T01:30:09Z","updated_at":"2021-03-25T01:30:09Z","author_association":"CONTRIBUTOR","body":"> Since we are adding a new data table version, please use this opportunity to address the TODOs within the `DataTableBuilder`.\r\n> For the `TrailerKeys` enum, let's put an id for each key instead of using the ordinal of the enum. This way it is much easier to manage as long as we don't reuse the ids. Also suggest renaming it to `MetadataKeys`\r\n\r\nBy \"Id\" do you mean strings? Why is that any more advantages than adding an enum? In fact, enum is better since we can declare all enums in one place and add whatever comments there to not remove an enum","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/806292277/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/806320191","html_url":"https://github.com/apache/pinot/pull/6710#issuecomment-806320191","issue_url":"https://api.github.com/repos/apache/pinot/issues/6710","id":806320191,"node_id":"MDEyOklzc3VlQ29tbWVudDgwNjMyMDE5MQ==","user":{"login":"mqliang","id":12423751,"node_id":"MDQ6VXNlcjEyNDIzNzUx","avatar_url":"https://avatars.githubusercontent.com/u/12423751?v=4","gravatar_id":"","url":"https://api.github.com/users/mqliang","html_url":"https://github.com/mqliang","followers_url":"https://api.github.com/users/mqliang/followers","following_url":"https://api.github.com/users/mqliang/following{/other_user}","gists_url":"https://api.github.com/users/mqliang/gists{/gist_id}","starred_url":"https://api.github.com/users/mqliang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mqliang/subscriptions","organizations_url":"https://api.github.com/users/mqliang/orgs","repos_url":"https://api.github.com/users/mqliang/repos","events_url":"https://api.github.com/users/mqliang/events{/privacy}","received_events_url":"https://api.github.com/users/mqliang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-25T02:41:35Z","updated_at":"2021-03-25T02:41:35Z","author_association":"CONTRIBUTOR","body":"test failed due to flaky networking:\r\n```\r\nFailed to execute goal on project pinot-orc: Could not resolve dependencies for project org.apache.pinot:pinot-orc:jar:0.7.0-SNAPSHOT: Could not transfer artifact org.apache.hive:hive-storage-api:jar:2.7.1 from/to central (https://repo.maven.apache.org/maven2): Transfer failed for https://repo.maven.apache.org/maven2/org/apache/hive/hive-storage-api/2.7.1/hive-storage-api-2.7.1.jar: Connection reset -> [Help 1]\r\n```\r\nclose and re-open to trigger a re-run.","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/806320191/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/806330983","html_url":"https://github.com/apache/pinot/pull/6710#issuecomment-806330983","issue_url":"https://api.github.com/repos/apache/pinot/issues/6710","id":806330983,"node_id":"MDEyOklzc3VlQ29tbWVudDgwNjMzMDk4Mw==","user":{"login":"mqliang","id":12423751,"node_id":"MDQ6VXNlcjEyNDIzNzUx","avatar_url":"https://avatars.githubusercontent.com/u/12423751?v=4","gravatar_id":"","url":"https://api.github.com/users/mqliang","html_url":"https://github.com/mqliang","followers_url":"https://api.github.com/users/mqliang/followers","following_url":"https://api.github.com/users/mqliang/following{/other_user}","gists_url":"https://api.github.com/users/mqliang/gists{/gist_id}","starred_url":"https://api.github.com/users/mqliang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mqliang/subscriptions","organizations_url":"https://api.github.com/users/mqliang/orgs","repos_url":"https://api.github.com/users/mqliang/repos","events_url":"https://api.github.com/users/mqliang/events{/privacy}","received_events_url":"https://api.github.com/users/mqliang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-25T03:10:27Z","updated_at":"2021-03-25T03:10:41Z","author_association":"CONTRIBUTOR","body":"> By \"Id\" do you mean strings? Why is that any more advantages than adding an enum? In fact, enum is better since we can declare all enums in one place and add whatever comments there to not remove an enum\r\n\r\n@mcvsubbu @Jackie-Jiang I think Jackie means to associate a string with each enum ordinal. Use the pattern from Effective Java:\r\n```\r\nenum MyEnum {\r\n    ENUM_1(\"A\"),\r\n    ENUM_2(\"B\");\r\n\r\n    private String name;\r\n\r\n    private static final Map<String,MyEnum> ENUM_MAP;\r\n\r\n    MyEnum (String name) {\r\n        this.name = name;\r\n    }\r\n\r\n    public String getName() {\r\n        return this.name;\r\n    }\r\n\r\n    // Build an immutable map of String name to enum pairs.\r\n    // Any Map impl can be used.\r\n\r\n    static {\r\n        Map<String,MyEnum> map = new ConcurrentHashMap<String, MyEnum>();\r\n        for (MyEnum instance : MyEnum.values()) {\r\n            map.put(instance.getName().toLowerCase(),instance);\r\n        }\r\n        ENUM_MAP = Collections.unmodifiableMap(map);\r\n    }\r\n\r\n    public static MyEnum get (String name) {\r\n        return ENUM_MAP.get(name.toLowerCase());\r\n    }\r\n}\r\n\r\n```\r\n\r\nThis way, we are able to convert between  enum ordinal and string. My current implementation use two helper map and two helper function outside of the enum definition (`TrailerKeyToMetadataKeyMap/MetadataKeyToTrailerKeyMap` and `trailerKeyToMetadataKey()/metaDataKeyToTrailerKey()`) to do the conversion. Use the pattern of Effective Java can put all helper funcitons/data structure inside the enum definition.","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/806330983/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/806373357","html_url":"https://github.com/apache/pinot/pull/6716#issuecomment-806373357","issue_url":"https://api.github.com/repos/apache/pinot/issues/6716","id":806373357,"node_id":"MDEyOklzc3VlQ29tbWVudDgwNjM3MzM1Nw==","user":{"login":"codecov-io","id":8655789,"node_id":"MDQ6VXNlcjg2NTU3ODk=","avatar_url":"https://avatars.githubusercontent.com/u/8655789?v=4","gravatar_id":"","url":"https://api.github.com/users/codecov-io","html_url":"https://github.com/codecov-io","followers_url":"https://api.github.com/users/codecov-io/followers","following_url":"https://api.github.com/users/codecov-io/following{/other_user}","gists_url":"https://api.github.com/users/codecov-io/gists{/gist_id}","starred_url":"https://api.github.com/users/codecov-io/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codecov-io/subscriptions","organizations_url":"https://api.github.com/users/codecov-io/orgs","repos_url":"https://api.github.com/users/codecov-io/repos","events_url":"https://api.github.com/users/codecov-io/events{/privacy}","received_events_url":"https://api.github.com/users/codecov-io/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-25T05:24:39Z","updated_at":"2021-03-25T05:24:39Z","author_association":"NONE","body":"# [Codecov](https://codecov.io/gh/apache/incubator-pinot/pull/6716?src=pr&el=h1) Report\n> Merging [#6716](https://codecov.io/gh/apache/incubator-pinot/pull/6716?src=pr&el=desc) (d464f88) into [master](https://codecov.io/gh/apache/incubator-pinot/commit/1beaab59b73f26c4e35f3b9bc856b03806cddf5a?el=desc) (1beaab5) will **decrease** coverage by `23.12%`.\n> The diff coverage is `42.93%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/apache/incubator-pinot/pull/6716/graphs/tree.svg?width=650&height=150&src=pr&token=4ibza2ugkz)](https://codecov.io/gh/apache/incubator-pinot/pull/6716?src=pr&el=tree)\n\n```diff\n@@             Coverage Diff             @@\n##           master    #6716       +/-   ##\n===========================================\n- Coverage   66.44%   43.32%   -23.13%     \n===========================================\n  Files        1075     1396      +321     \n  Lines       54773    67765    +12992     \n  Branches     8168     9807     +1639     \n===========================================\n- Hits        36396    29361     -7035     \n- Misses      15700    35947    +20247     \n+ Partials     2677     2457      -220     \n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| integration | `43.32% <42.93%> (?)` | |\n\nFlags with carried forward coverage won't be shown. [Click here](https://docs.codecov.io/docs/carryforward-flags#carryforward-flags-in-the-pull-request-comment) to find out more.\n\n| [Impacted Files](https://codecov.io/gh/apache/incubator-pinot/pull/6716?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [...ot/broker/broker/AllowAllAccessControlFactory.java](https://codecov.io/gh/apache/incubator-pinot/pull/6716/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvYnJva2VyL0FsbG93QWxsQWNjZXNzQ29udHJvbEZhY3RvcnkuamF2YQ==) | `100.00% <ø> (ø)` | |\n| [...t/broker/broker/BasicAuthAccessControlFactory.java](https://codecov.io/gh/apache/incubator-pinot/pull/6716/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvYnJva2VyL0Jhc2ljQXV0aEFjY2Vzc0NvbnRyb2xGYWN0b3J5LmphdmE=) | `0.00% <0.00%> (ø)` | |\n| [.../helix/BrokerUserDefinedMessageHandlerFactory.java](https://codecov.io/gh/apache/incubator-pinot/pull/6716/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvYnJva2VyL2hlbGl4L0Jyb2tlclVzZXJEZWZpbmVkTWVzc2FnZUhhbmRsZXJGYWN0b3J5LmphdmE=) | `52.83% <0.00%> (-13.84%)` | :arrow_down: |\n| [...org/apache/pinot/broker/queryquota/HitCounter.java](https://codecov.io/gh/apache/incubator-pinot/pull/6716/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvcXVlcnlxdW90YS9IaXRDb3VudGVyLmphdmE=) | `0.00% <0.00%> (-100.00%)` | :arrow_down: |\n| [...che/pinot/broker/queryquota/MaxHitRateTracker.java](https://codecov.io/gh/apache/incubator-pinot/pull/6716/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvcXVlcnlxdW90YS9NYXhIaXRSYXRlVHJhY2tlci5qYXZh) | `0.00% <0.00%> (ø)` | |\n| [...ache/pinot/broker/queryquota/QueryQuotaEntity.java](https://codecov.io/gh/apache/incubator-pinot/pull/6716/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvcXVlcnlxdW90YS9RdWVyeVF1b3RhRW50aXR5LmphdmE=) | `0.00% <0.00%> (-50.00%)` | :arrow_down: |\n| [...ker/routing/instanceselector/InstanceSelector.java](https://codecov.io/gh/apache/incubator-pinot/pull/6716/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvcm91dGluZy9pbnN0YW5jZXNlbGVjdG9yL0luc3RhbmNlU2VsZWN0b3IuamF2YQ==) | `100.00% <ø> (ø)` | |\n| [...ceselector/StrictReplicaGroupInstanceSelector.java](https://codecov.io/gh/apache/incubator-pinot/pull/6716/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvcm91dGluZy9pbnN0YW5jZXNlbGVjdG9yL1N0cmljdFJlcGxpY2FHcm91cEluc3RhbmNlU2VsZWN0b3IuamF2YQ==) | `0.00% <0.00%> (ø)` | |\n| [...roker/routing/segmentpruner/TimeSegmentPruner.java](https://codecov.io/gh/apache/incubator-pinot/pull/6716/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvcm91dGluZy9zZWdtZW50cHJ1bmVyL1RpbWVTZWdtZW50UHJ1bmVyLmphdmE=) | `0.00% <0.00%> (ø)` | |\n| [...roker/routing/segmentpruner/interval/Interval.java](https://codecov.io/gh/apache/incubator-pinot/pull/6716/diff?src=pr&el=tree#diff-cGlub3QtYnJva2VyL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9icm9rZXIvcm91dGluZy9zZWdtZW50cHJ1bmVyL2ludGVydmFsL0ludGVydmFsLmphdmE=) | `0.00% <0.00%> (ø)` | |\n| ... and [1424 more](https://codecov.io/gh/apache/incubator-pinot/pull/6716/diff?src=pr&el=tree-more) | |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/apache/incubator-pinot/pull/6716?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/apache/incubator-pinot/pull/6716?src=pr&el=footer). Last update [3c055f3...d464f88](https://codecov.io/gh/apache/incubator-pinot/pull/6716?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/806373357/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/806403959","html_url":"https://github.com/apache/pinot/issues/6714#issuecomment-806403959","issue_url":"https://api.github.com/repos/apache/pinot/issues/6714","id":806403959,"node_id":"MDEyOklzc3VlQ29tbWVudDgwNjQwMzk1OQ==","user":{"login":"mqliang","id":12423751,"node_id":"MDQ6VXNlcjEyNDIzNzUx","avatar_url":"https://avatars.githubusercontent.com/u/12423751?v=4","gravatar_id":"","url":"https://api.github.com/users/mqliang","html_url":"https://github.com/mqliang","followers_url":"https://api.github.com/users/mqliang/followers","following_url":"https://api.github.com/users/mqliang/following{/other_user}","gists_url":"https://api.github.com/users/mqliang/gists{/gist_id}","starred_url":"https://api.github.com/users/mqliang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mqliang/subscriptions","organizations_url":"https://api.github.com/users/mqliang/orgs","repos_url":"https://api.github.com/users/mqliang/repos","events_url":"https://api.github.com/users/mqliang/events{/privacy}","received_events_url":"https://api.github.com/users/mqliang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-25T06:41:06Z","updated_at":"2021-12-15T00:30:35Z","author_association":"CONTRIBUTOR","body":"I write a benchmark here: https://github.com/mqliang/pinot/commit/7892423579b20dafcb5802a09f20f826377f6c39\r\n\r\nThe benchmark compares three serialization methods (serialize a typical metadata map):\r\n*  `temporaryOutputStream`: For each KV pair in metadata, first writes to a temporary output stream and then converts to byte array which is returned to the caller and written to the main stream\r\n* `preAllocateByteArrayNative`:\r\n    * loop to go over each entry and keep a running sum of size\r\n    * At the end of loop, allocate byte array of that size\r\n    * Start another loop and go over each entry again and fill out the pre-allocated byte array.\r\n    * Return the filled byte array\r\n    * key and values are encoded two times during two loop\r\n * `preAllocateByteArrayWithBytesCache`: same logic as `preAllocateByteArrayNative`, just add a cache to cache the encoded K/V so can be used in the second loop.\r\n\r\nHere is the result:\r\n```\r\n# JMH version: 1.26\r\n# VM version: JDK 1.8.0_282, OpenJDK 64-Bit Server VM, 25.282-b08\r\n# VM invoker: /Library/Java/JavaVirtualMachines/adoptopenjdk-8.jdk/Contents/Home/jre/bin/java\r\n# VM options: -javaagent:/Users/mqliang/Library/Application Support/JetBrains/Toolbox/apps/IDEA-U/ch-0/203.7717.56/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=65146:/Users/mqliang/Library/Application Support/JetBrains/Toolbox/apps/IDEA-U/ch-0/203.7717.56/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8\r\n# Warmup: 1 iterations, 10 s each\r\n# Measurement: 5 iterations, 30 s each\r\n# Timeout: 10 min per iteration\r\n# Threads: 1 thread, will synchronize iterations\r\n# Benchmark mode: Average time, time/op\r\n# Benchmark: org.apache.pinot.perf.BenchmarkDataTableSerialization.preAllocateByteArrayNative\r\n\r\n# Run progress: 0.00% complete, ETA 00:08:00\r\n# Fork: 1 of 1\r\n# Warmup Iteration   1: 552.178 us/op\r\nIteration   1: 519.531 us/op\r\n                 ·gc.alloc.rate:                   3270.480 MB/sec\r\n                 ·gc.alloc.rate.norm:              1811608.009 B/op\r\n                 ·gc.churn.PS_Eden_Space:          3275.114 MB/sec\r\n                 ·gc.churn.PS_Eden_Space.norm:     1814175.318 B/op\r\n                 ·gc.churn.PS_Survivor_Space:      0.558 MB/sec\r\n                 ·gc.churn.PS_Survivor_Space.norm: 309.168 B/op\r\n                 ·gc.count:                        525.000 counts\r\n                 ·gc.time:                         261.000 ms\r\n\r\nIteration   2: 524.659 us/op\r\n                 ·gc.alloc.rate:                   3238.871 MB/sec\r\n                 ·gc.alloc.rate.norm:              1811608.011 B/op\r\n                 ·gc.churn.PS_Eden_Space:          3242.901 MB/sec\r\n                 ·gc.churn.PS_Eden_Space.norm:     1813862.347 B/op\r\n                 ·gc.churn.PS_Survivor_Space:      0.563 MB/sec\r\n                 ·gc.churn.PS_Survivor_Space.norm: 314.968 B/op\r\n                 ·gc.count:                        516.000 counts\r\n                 ·gc.time:                         263.000 ms\r\n\r\nIteration   3: 526.323 us/op\r\n                 ·gc.alloc.rate:                   3228.230 MB/sec\r\n                 ·gc.alloc.rate.norm:              1811608.008 B/op\r\n                 ·gc.churn.PS_Eden_Space:          3232.024 MB/sec\r\n                 ·gc.churn.PS_Eden_Space.norm:     1813736.682 B/op\r\n                 ·gc.churn.PS_Survivor_Space:      0.471 MB/sec\r\n                 ·gc.churn.PS_Survivor_Space.norm: 264.539 B/op\r\n                 ·gc.count:                        470.000 counts\r\n                 ·gc.time:                         254.000 ms\r\n\r\nIteration   4: 521.779 us/op\r\n                 ·gc.alloc.rate:                   3256.320 MB/sec\r\n                 ·gc.alloc.rate.norm:              1811608.008 B/op\r\n                 ·gc.churn.PS_Eden_Space:          3261.433 MB/sec\r\n                 ·gc.churn.PS_Eden_Space.norm:     1814452.617 B/op\r\n                 ·gc.churn.PS_Survivor_Space:      0.560 MB/sec\r\n                 ·gc.churn.PS_Survivor_Space.norm: 311.772 B/op\r\n                 ·gc.count:                        534.000 counts\r\n                 ·gc.time:                         270.000 ms\r\n\r\nIteration   5: 524.474 us/op\r\n                 ·gc.alloc.rate:                   3239.855 MB/sec\r\n                 ·gc.alloc.rate.norm:              1811608.008 B/op\r\n                 ·gc.churn.PS_Eden_Space:          3242.045 MB/sec\r\n                 ·gc.churn.PS_Eden_Space.norm:     1812832.659 B/op\r\n                 ·gc.churn.PS_Survivor_Space:      0.547 MB/sec\r\n                 ·gc.churn.PS_Survivor_Space.norm: 305.975 B/op\r\n                 ·gc.count:                        483.000 counts\r\n                 ·gc.time:                         255.000 ms\r\n\r\n\r\n\r\nResult \"org.apache.pinot.perf.BenchmarkDataTableSerialization.preAllocateByteArrayNative\":\r\n  523.353 ±(99.9%) 10.345 us/op [Average]\r\n  (min, avg, max) = (519.531, 523.353, 526.323), stdev = 2.687\r\n  CI (99.9%): [513.008, 533.698] (assumes normal distribution)\r\n\r\nSecondary result \"org.apache.pinot.perf.BenchmarkDataTableSerialization.preAllocateByteArrayNative:·gc.alloc.rate\":\r\n  3246.751 ±(99.9%) 64.066 MB/sec [Average]\r\n  (min, avg, max) = (3228.230, 3246.751, 3270.480), stdev = 16.638\r\n  CI (99.9%): [3182.685, 3310.818] (assumes normal distribution)\r\n\r\nSecondary result \"org.apache.pinot.perf.BenchmarkDataTableSerialization.preAllocateByteArrayNative:·gc.alloc.rate.norm\":\r\n  1811608.009 ±(99.9%) 0.005 B/op [Average]\r\n  (min, avg, max) = (1811608.008, 1811608.009, 1811608.011), stdev = 0.001\r\n  CI (99.9%): [1811608.003, 1811608.014] (assumes normal distribution)\r\n\r\nSecondary result \"org.apache.pinot.perf.BenchmarkDataTableSerialization.preAllocateByteArrayNative:·gc.churn.PS_Eden_Space\":\r\n  3250.704 ±(99.9%) 66.578 MB/sec [Average]\r\n  (min, avg, max) = (3232.024, 3250.704, 3275.114), stdev = 17.290\r\n  CI (99.9%): [3184.126, 3317.282] (assumes normal distribution)\r\n\r\nSecondary result \"org.apache.pinot.perf.BenchmarkDataTableSerialization.preAllocateByteArrayNative:·gc.churn.PS_Eden_Space.norm\":\r\n  1813811.924 ±(99.9%) 2365.646 B/op [Average]\r\n  (min, avg, max) = (1812832.659, 1813811.924, 1814452.617), stdev = 614.351\r\n  CI (99.9%): [1811446.279, 1816177.570] (assumes normal distribution)\r\n\r\nSecondary result \"org.apache.pinot.perf.BenchmarkDataTableSerialization.preAllocateByteArrayNative:·gc.churn.PS_Survivor_Space\":\r\n  0.540 ±(99.9%) 0.150 MB/sec [Average]\r\n  (min, avg, max) = (0.471, 0.540, 0.563), stdev = 0.039\r\n  CI (99.9%): [0.390, 0.690] (assumes normal distribution)\r\n\r\nSecondary result \"org.apache.pinot.perf.BenchmarkDataTableSerialization.preAllocateByteArrayNative:·gc.churn.PS_Survivor_Space.norm\":\r\n  301.285 ±(99.9%) 80.118 B/op [Average]\r\n  (min, avg, max) = (264.539, 301.285, 314.968), stdev = 20.806\r\n  CI (99.9%): [221.166, 381.403] (assumes normal distribution)\r\n\r\nSecondary result \"org.apache.pinot.perf.BenchmarkDataTableSerialization.preAllocateByteArrayNative:·gc.count\":\r\n  2528.000 ±(99.9%) 0.001 counts [Sum]\r\n  (min, avg, max) = (470.000, 505.600, 534.000), stdev = 27.700\r\n  CI (99.9%): [2528.000, 2528.000] (assumes normal distribution)\r\n\r\nSecondary result \"org.apache.pinot.perf.BenchmarkDataTableSerialization.preAllocateByteArrayNative:·gc.time\":\r\n  1303.000 ±(99.9%) 0.001 ms [Sum]\r\n  (min, avg, max) = (254.000, 260.600, 270.000), stdev = 6.504\r\n  CI (99.9%): [1303.000, 1303.000] (assumes normal distribution)\r\n\r\n\r\n# JMH version: 1.26\r\n# VM version: JDK 1.8.0_282, OpenJDK 64-Bit Server VM, 25.282-b08\r\n# VM invoker: /Library/Java/JavaVirtualMachines/adoptopenjdk-8.jdk/Contents/Home/jre/bin/java\r\n# VM options: -javaagent:/Users/mqliang/Library/Application Support/JetBrains/Toolbox/apps/IDEA-U/ch-0/203.7717.56/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=65146:/Users/mqliang/Library/Application Support/JetBrains/Toolbox/apps/IDEA-U/ch-0/203.7717.56/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8\r\n# Warmup: 1 iterations, 10 s each\r\n# Measurement: 5 iterations, 30 s each\r\n# Timeout: 10 min per iteration\r\n# Threads: 1 thread, will synchronize iterations\r\n# Benchmark mode: Average time, time/op\r\n# Benchmark: org.apache.pinot.perf.BenchmarkDataTableSerialization.preAllocateByteArrayWithBytesCache\r\n\r\n# Run progress: 33.33% complete, ETA 00:05:28\r\n# Fork: 1 of 1\r\n# Warmup Iteration   1: 390.616 us/op\r\nIteration   1: 375.676 us/op\r\n                 ·gc.alloc.rate:                   3524.091 MB/sec\r\n                 ·gc.alloc.rate.norm:              1411608.008 B/op\r\n                 ·gc.churn.PS_Eden_Space:          3532.601 MB/sec\r\n                 ·gc.churn.PS_Eden_Space.norm:     1415016.587 B/op\r\n                 ·gc.churn.PS_Survivor_Space:      0.538 MB/sec\r\n                 ·gc.churn.PS_Survivor_Space.norm: 215.400 B/op\r\n                 ·gc.count:                        458.000 counts\r\n                 ·gc.time:                         248.000 ms\r\n\r\nIteration   2: 375.171 us/op\r\n                 ·gc.alloc.rate:                   3528.907 MB/sec\r\n                 ·gc.alloc.rate.norm:              1411608.006 B/op\r\n                 ·gc.churn.PS_Eden_Space:          3534.356 MB/sec\r\n                 ·gc.churn.PS_Eden_Space.norm:     1413787.624 B/op\r\n                 ·gc.churn.PS_Survivor_Space:      0.494 MB/sec\r\n                 ·gc.churn.PS_Survivor_Space.norm: 197.609 B/op\r\n                 ·gc.count:                        435.000 counts\r\n                 ·gc.time:                         247.000 ms\r\n\r\nIteration   3: 373.233 us/op\r\n                 ·gc.alloc.rate:                   3547.720 MB/sec\r\n                 ·gc.alloc.rate.norm:              1411608.005 B/op\r\n                 ·gc.churn.PS_Eden_Space:          3559.728 MB/sec\r\n                 ·gc.churn.PS_Eden_Space.norm:     1416385.929 B/op\r\n                 ·gc.churn.PS_Survivor_Space:      0.539 MB/sec\r\n                 ·gc.churn.PS_Survivor_Space.norm: 214.343 B/op\r\n                 ·gc.count:                        462.000 counts\r\n                 ·gc.time:                         247.000 ms\r\n\r\nIteration   4: 371.186 us/op\r\n                 ·gc.alloc.rate:                   3567.068 MB/sec\r\n                 ·gc.alloc.rate.norm:              1411608.006 B/op\r\n                 ·gc.churn.PS_Eden_Space:          3566.702 MB/sec\r\n                 ·gc.churn.PS_Eden_Space.norm:     1411463.405 B/op\r\n                 ·gc.churn.PS_Survivor_Space:      0.597 MB/sec\r\n                 ·gc.churn.PS_Survivor_Space.norm: 236.411 B/op\r\n                 ·gc.count:                        520.000 counts\r\n                 ·gc.time:                         271.000 ms\r\n\r\nIteration   5: 370.738 us/op\r\n                 ·gc.alloc.rate:                   3571.354 MB/sec\r\n                 ·gc.alloc.rate.norm:              1411608.005 B/op\r\n                 ·gc.churn.PS_Eden_Space:          3582.874 MB/sec\r\n                 ·gc.churn.PS_Eden_Space.norm:     1416161.234 B/op\r\n                 ·gc.churn.PS_Survivor_Space:      0.588 MB/sec\r\n                 ·gc.churn.PS_Survivor_Space.norm: 232.322 B/op\r\n                 ·gc.count:                        509.000 counts\r\n                 ·gc.time:                         262.000 ms\r\n\r\n\r\n\r\nResult \"org.apache.pinot.perf.BenchmarkDataTableSerialization.preAllocateByteArrayWithBytesCache\":\r\n  373.201 ±(99.9%) 8.639 us/op [Average]\r\n  (min, avg, max) = (370.738, 373.201, 375.676), stdev = 2.243\r\n  CI (99.9%): [364.562, 381.840] (assumes normal distribution)\r\n\r\nSecondary result \"org.apache.pinot.perf.BenchmarkDataTableSerialization.preAllocateByteArrayWithBytesCache:·gc.alloc.rate\":\r\n  3547.828 ±(99.9%) 82.702 MB/sec [Average]\r\n  (min, avg, max) = (3524.091, 3547.828, 3571.354), stdev = 21.477\r\n  CI (99.9%): [3465.126, 3630.530] (assumes normal distribution)\r\n\r\nSecondary result \"org.apache.pinot.perf.BenchmarkDataTableSerialization.preAllocateByteArrayWithBytesCache:·gc.alloc.rate.norm\":\r\n  1411608.006 ±(99.9%) 0.005 B/op [Average]\r\n  (min, avg, max) = (1411608.005, 1411608.006, 1411608.008), stdev = 0.001\r\n  CI (99.9%): [1411608.001, 1411608.011] (assumes normal distribution)\r\n\r\nSecondary result \"org.apache.pinot.perf.BenchmarkDataTableSerialization.preAllocateByteArrayWithBytesCache:·gc.churn.PS_Eden_Space\":\r\n  3555.252 ±(99.9%) 83.120 MB/sec [Average]\r\n  (min, avg, max) = (3532.601, 3555.252, 3582.874), stdev = 21.586\r\n  CI (99.9%): [3472.132, 3638.373] (assumes normal distribution)\r\n\r\nSecondary result \"org.apache.pinot.perf.BenchmarkDataTableSerialization.preAllocateByteArrayWithBytesCache:·gc.churn.PS_Eden_Space.norm\":\r\n  1414562.956 ±(99.9%) 7771.212 B/op [Average]\r\n  (min, avg, max) = (1411463.405, 1414562.956, 1416385.929), stdev = 2018.159\r\n  CI (99.9%): [1406791.744, 1422334.168] (assumes normal distribution)\r\n\r\nSecondary result \"org.apache.pinot.perf.BenchmarkDataTableSerialization.preAllocateByteArrayWithBytesCache:·gc.churn.PS_Survivor_Space\":\r\n  0.551 ±(99.9%) 0.162 MB/sec [Average]\r\n  (min, avg, max) = (0.494, 0.551, 0.597), stdev = 0.042\r\n  CI (99.9%): [0.389, 0.713] (assumes normal distribution)\r\n\r\nSecondary result \"org.apache.pinot.perf.BenchmarkDataTableSerialization.preAllocateByteArrayWithBytesCache:·gc.churn.PS_Survivor_Space.norm\":\r\n  219.217 ±(99.9%) 60.046 B/op [Average]\r\n  (min, avg, max) = (197.609, 219.217, 236.411), stdev = 15.594\r\n  CI (99.9%): [159.171, 279.263] (assumes normal distribution)\r\n\r\nSecondary result \"org.apache.pinot.perf.BenchmarkDataTableSerialization.preAllocateByteArrayWithBytesCache:·gc.count\":\r\n  2384.000 ±(99.9%) 0.001 counts [Sum]\r\n  (min, avg, max) = (435.000, 476.800, 520.000), stdev = 36.134\r\n  CI (99.9%): [2384.000, 2384.000] (assumes normal distribution)\r\n\r\nSecondary result \"org.apache.pinot.perf.BenchmarkDataTableSerialization.preAllocateByteArrayWithBytesCache:·gc.time\":\r\n  1275.000 ±(99.9%) 0.001 ms [Sum]\r\n  (min, avg, max) = (247.000, 255.000, 271.000), stdev = 10.977\r\n  CI (99.9%): [1275.000, 1275.000] (assumes normal distribution)\r\n\r\n\r\n# JMH version: 1.26\r\n# VM version: JDK 1.8.0_282, OpenJDK 64-Bit Server VM, 25.282-b08\r\n# VM invoker: /Library/Java/JavaVirtualMachines/adoptopenjdk-8.jdk/Contents/Home/jre/bin/java\r\n# VM options: -javaagent:/Users/mqliang/Library/Application Support/JetBrains/Toolbox/apps/IDEA-U/ch-0/203.7717.56/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=65146:/Users/mqliang/Library/Application Support/JetBrains/Toolbox/apps/IDEA-U/ch-0/203.7717.56/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8\r\n# Warmup: 1 iterations, 10 s each\r\n# Measurement: 5 iterations, 30 s each\r\n# Timeout: 10 min per iteration\r\n# Threads: 1 thread, will synchronize iterations\r\n# Benchmark mode: Average time, time/op\r\n# Benchmark: org.apache.pinot.perf.BenchmarkDataTableSerialization.temporaryOutputStream\r\n\r\n# Run progress: 66.67% complete, ETA 00:02:44\r\n# Fork: 1 of 1\r\n# Warmup Iteration   1: 483.366 us/op\r\nIteration   1: 408.351 us/op\r\n                 ·gc.alloc.rate:                   3580.758 MB/sec\r\n                 ·gc.alloc.rate.norm:              1558808.007 B/op\r\n                 ·gc.churn.PS_Eden_Space:          3586.078 MB/sec\r\n                 ·gc.churn.PS_Eden_Space.norm:     1561123.846 B/op\r\n                 ·gc.churn.PS_Survivor_Space:      0.511 MB/sec\r\n                 ·gc.churn.PS_Survivor_Space.norm: 222.603 B/op\r\n                 ·gc.count:                        476.000 counts\r\n                 ·gc.time:                         253.000 ms\r\n\r\nIteration   2: 410.342 us/op\r\n                 ·gc.alloc.rate:                   3563.256 MB/sec\r\n                 ·gc.alloc.rate.norm:              1558808.009 B/op\r\n                 ·gc.churn.PS_Eden_Space:          3569.765 MB/sec\r\n                 ·gc.churn.PS_Eden_Space.norm:     1561655.686 B/op\r\n                 ·gc.churn.PS_Survivor_Space:      0.451 MB/sec\r\n                 ·gc.churn.PS_Survivor_Space.norm: 197.394 B/op\r\n                 ·gc.count:                        409.000 counts\r\n                 ·gc.time:                         244.000 ms\r\n\r\nIteration   3: 407.314 us/op\r\n                 ·gc.alloc.rate:                   3589.291 MB/sec\r\n                 ·gc.alloc.rate.norm:              1558808.006 B/op\r\n                 ·gc.churn.PS_Eden_Space:          3592.335 MB/sec\r\n                 ·gc.churn.PS_Eden_Space.norm:     1560130.076 B/op\r\n                 ·gc.churn.PS_Survivor_Space:      0.557 MB/sec\r\n                 ·gc.churn.PS_Survivor_Space.norm: 241.833 B/op\r\n                 ·gc.count:                        495.000 counts\r\n                 ·gc.time:                         261.000 ms\r\n\r\nIteration   4: 407.294 us/op\r\n                 ·gc.alloc.rate:                   3590.035 MB/sec\r\n                 ·gc.alloc.rate.norm:              1558808.006 B/op\r\n                 ·gc.churn.PS_Eden_Space:          3595.643 MB/sec\r\n                 ·gc.churn.PS_Eden_Space.norm:     1561243.143 B/op\r\n                 ·gc.churn.PS_Survivor_Space:      0.439 MB/sec\r\n                 ·gc.churn.PS_Survivor_Space.norm: 190.513 B/op\r\n                 ·gc.count:                        382.000 counts\r\n                 ·gc.time:                         239.000 ms\r\n\r\nIteration   5: 410.068 us/op\r\n                 ·gc.alloc.rate:                   3565.783 MB/sec\r\n                 ·gc.alloc.rate.norm:              1558808.006 B/op\r\n                 ·gc.churn.PS_Eden_Space:          3576.571 MB/sec\r\n                 ·gc.churn.PS_Eden_Space.norm:     1563524.046 B/op\r\n                 ·gc.churn.PS_Survivor_Space:      0.542 MB/sec\r\n                 ·gc.churn.PS_Survivor_Space.norm: 236.741 B/op\r\n                 ·gc.count:                        460.000 counts\r\n                 ·gc.time:                         252.000 ms\r\n\r\n\r\n\r\nResult \"org.apache.pinot.perf.BenchmarkDataTableSerialization.temporaryOutputStream\":\r\n  408.674 ±(99.9%) 5.641 us/op [Average]\r\n  (min, avg, max) = (407.294, 408.674, 410.342), stdev = 1.465\r\n  CI (99.9%): [403.033, 414.314] (assumes normal distribution)\r\n\r\nSecondary result \"org.apache.pinot.perf.BenchmarkDataTableSerialization.temporaryOutputStream:·gc.alloc.rate\":\r\n  3577.824 ±(99.9%) 48.952 MB/sec [Average]\r\n  (min, avg, max) = (3563.256, 3577.824, 3590.035), stdev = 12.713\r\n  CI (99.9%): [3528.873, 3626.776] (assumes normal distribution)\r\n\r\nSecondary result \"org.apache.pinot.perf.BenchmarkDataTableSerialization.temporaryOutputStream:·gc.alloc.rate.norm\":\r\n  1558808.007 ±(99.9%) 0.005 B/op [Average]\r\n  (min, avg, max) = (1558808.006, 1558808.007, 1558808.009), stdev = 0.001\r\n  CI (99.9%): [1558808.002, 1558808.011] (assumes normal distribution)\r\n\r\nSecondary result \"org.apache.pinot.perf.BenchmarkDataTableSerialization.temporaryOutputStream:·gc.churn.PS_Eden_Space\":\r\n  3584.078 ±(99.9%) 41.614 MB/sec [Average]\r\n  (min, avg, max) = (3569.765, 3584.078, 3595.643), stdev = 10.807\r\n  CI (99.9%): [3542.465, 3625.692] (assumes normal distribution)\r\n\r\nSecondary result \"org.apache.pinot.perf.BenchmarkDataTableSerialization.temporaryOutputStream:·gc.churn.PS_Eden_Space.norm\":\r\n  1561535.360 ±(99.9%) 4793.590 B/op [Average]\r\n  (min, avg, max) = (1560130.076, 1561535.360, 1563524.046), stdev = 1244.880\r\n  CI (99.9%): [1556741.769, 1566328.950] (assumes normal distribution)\r\n\r\nSecondary result \"org.apache.pinot.perf.BenchmarkDataTableSerialization.temporaryOutputStream:·gc.churn.PS_Survivor_Space\":\r\n  0.500 ±(99.9%) 0.204 MB/sec [Average]\r\n  (min, avg, max) = (0.439, 0.500, 0.557), stdev = 0.053\r\n  CI (99.9%): [0.296, 0.704] (assumes normal distribution)\r\n\r\nSecondary result \"org.apache.pinot.perf.BenchmarkDataTableSerialization.temporaryOutputStream:·gc.churn.PS_Survivor_Space.norm\":\r\n  217.817 ±(99.9%) 88.656 B/op [Average]\r\n  (min, avg, max) = (190.513, 217.817, 241.833), stdev = 23.024\r\n  CI (99.9%): [129.161, 306.473] (assumes normal distribution)\r\n\r\nSecondary result \"org.apache.pinot.perf.BenchmarkDataTableSerialization.temporaryOutputStream:·gc.count\":\r\n  2222.000 ±(99.9%) 0.001 counts [Sum]\r\n  (min, avg, max) = (382.000, 444.400, 495.000), stdev = 47.300\r\n  CI (99.9%): [2222.000, 2222.000] (assumes normal distribution)\r\n\r\nSecondary result \"org.apache.pinot.perf.BenchmarkDataTableSerialization.temporaryOutputStream:·gc.time\":\r\n  1249.000 ±(99.9%) 0.001 ms [Sum]\r\n  (min, avg, max) = (239.000, 249.800, 261.000), stdev = 8.526\r\n  CI (99.9%): [1249.000, 1249.000] (assumes normal distribution)\r\n\r\n\r\n# Run complete. Total time: 00:08:12\r\n\r\nREMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on\r\nwhy the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial\r\nexperiments, perform baseline and negative tests that provide experimental control, make sure\r\nthe benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.\r\nDo not assume the numbers tell you what you want them to tell.\r\n\r\nBenchmark                                                                                            Mode  Cnt        Score      Error   Units\r\nBenchmarkDataTableSerialization.preAllocateByteArrayNative                                           avgt    5      523.353 ±   10.345   us/op\r\nBenchmarkDataTableSerialization.preAllocateByteArrayNative:·gc.alloc.rate                            avgt    5     3246.751 ±   64.066  MB/sec\r\nBenchmarkDataTableSerialization.preAllocateByteArrayNative:·gc.alloc.rate.norm                       avgt    5  1811608.009 ±    0.005    B/op\r\nBenchmarkDataTableSerialization.preAllocateByteArrayNative:·gc.churn.PS_Eden_Space                   avgt    5     3250.704 ±   66.578  MB/sec\r\nBenchmarkDataTableSerialization.preAllocateByteArrayNative:·gc.churn.PS_Eden_Space.norm              avgt    5  1813811.924 ± 2365.646    B/op\r\nBenchmarkDataTableSerialization.preAllocateByteArrayNative:·gc.churn.PS_Survivor_Space               avgt    5        0.540 ±    0.150  MB/sec\r\nBenchmarkDataTableSerialization.preAllocateByteArrayNative:·gc.churn.PS_Survivor_Space.norm          avgt    5      301.285 ±   80.118    B/op\r\nBenchmarkDataTableSerialization.preAllocateByteArrayNative:·gc.count                                 avgt    5     2528.000             counts\r\nBenchmarkDataTableSerialization.preAllocateByteArrayNative:·gc.time                                  avgt    5     1303.000                 ms\r\nBenchmarkDataTableSerialization.preAllocateByteArrayWithBytesCache                                   avgt    5      373.201 ±    8.639   us/op\r\nBenchmarkDataTableSerialization.preAllocateByteArrayWithBytesCache:·gc.alloc.rate                    avgt    5     3547.828 ±   82.702  MB/sec\r\nBenchmarkDataTableSerialization.preAllocateByteArrayWithBytesCache:·gc.alloc.rate.norm               avgt    5  1411608.006 ±    0.005    B/op\r\nBenchmarkDataTableSerialization.preAllocateByteArrayWithBytesCache:·gc.churn.PS_Eden_Space           avgt    5     3555.252 ±   83.120  MB/sec\r\nBenchmarkDataTableSerialization.preAllocateByteArrayWithBytesCache:·gc.churn.PS_Eden_Space.norm      avgt    5  1414562.956 ± 7771.212    B/op\r\nBenchmarkDataTableSerialization.preAllocateByteArrayWithBytesCache:·gc.churn.PS_Survivor_Space       avgt    5        0.551 ±    0.162  MB/sec\r\nBenchmarkDataTableSerialization.preAllocateByteArrayWithBytesCache:·gc.churn.PS_Survivor_Space.norm  avgt    5      219.217 ±   60.046    B/op\r\nBenchmarkDataTableSerialization.preAllocateByteArrayWithBytesCache:·gc.count                         avgt    5     2384.000             counts\r\nBenchmarkDataTableSerialization.preAllocateByteArrayWithBytesCache:·gc.time                          avgt    5     1275.000                 ms\r\nBenchmarkDataTableSerialization.temporaryOutputStream                                                avgt    5      408.674 ±    5.641   us/op\r\nBenchmarkDataTableSerialization.temporaryOutputStream:·gc.alloc.rate                                 avgt    5     3577.824 ±   48.952  MB/sec\r\nBenchmarkDataTableSerialization.temporaryOutputStream:·gc.alloc.rate.norm                            avgt    5  1558808.007 ±    0.005    B/op\r\nBenchmarkDataTableSerialization.temporaryOutputStream:·gc.churn.PS_Eden_Space                        avgt    5     3584.078 ±   41.614  MB/sec\r\nBenchmarkDataTableSerialization.temporaryOutputStream:·gc.churn.PS_Eden_Space.norm                   avgt    5  1561535.360 ± 4793.590    B/op\r\nBenchmarkDataTableSerialization.temporaryOutputStream:·gc.churn.PS_Survivor_Space                    avgt    5        0.500 ±    0.204  MB/sec\r\nBenchmarkDataTableSerialization.temporaryOutputStream:·gc.churn.PS_Survivor_Space.norm               avgt    5      217.817 ±   88.656    B/op\r\nBenchmarkDataTableSerialization.temporaryOutputStream:·gc.count                                      avgt    5     2222.000             counts\r\nBenchmarkDataTableSerialization.temporaryOutputStream:·gc.time                                       avgt    5     1249.000                 ms\r\n\r\nProcess finished with exit code 0\r\n\r\n```\r\n\r\nIf my implementation is correct, benchmark result shows that using pre-allocate byte array with cache is slightly better than temporary output stream (10% faster --  373.201 us/op VS. 408.674 us/op, use more memory of course to cache encoded KV, but GC time does not increased -- 1275ms VS 1249ms). It's easy to understand why `preAllocateByteArrayNative` is the worst one -- it encode K/V twice, whereas other two methods only encode K/V once.\r\n\r\nNot sure whether we should do the change just for getting 10% improvement. \r\n","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/806403959/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/806974409","html_url":"https://github.com/apache/pinot/issues/6717#issuecomment-806974409","issue_url":"https://api.github.com/repos/apache/pinot/issues/6717","id":806974409,"node_id":"MDEyOklzc3VlQ29tbWVudDgwNjk3NDQwOQ==","user":{"login":"mcvsubbu","id":2279037,"node_id":"MDQ6VXNlcjIyNzkwMzc=","avatar_url":"https://avatars.githubusercontent.com/u/2279037?v=4","gravatar_id":"","url":"https://api.github.com/users/mcvsubbu","html_url":"https://github.com/mcvsubbu","followers_url":"https://api.github.com/users/mcvsubbu/followers","following_url":"https://api.github.com/users/mcvsubbu/following{/other_user}","gists_url":"https://api.github.com/users/mcvsubbu/gists{/gist_id}","starred_url":"https://api.github.com/users/mcvsubbu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mcvsubbu/subscriptions","organizations_url":"https://api.github.com/users/mcvsubbu/orgs","repos_url":"https://api.github.com/users/mcvsubbu/repos","events_url":"https://api.github.com/users/mcvsubbu/events{/privacy}","received_events_url":"https://api.github.com/users/mcvsubbu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-25T15:43:22Z","updated_at":"2021-03-25T15:43:22Z","author_association":"CONTRIBUTOR","body":"This was fixed in PR #6671 ","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/806974409/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/807000642","html_url":"https://github.com/apache/pinot/issues/6717#issuecomment-807000642","issue_url":"https://api.github.com/repos/apache/pinot/issues/6717","id":807000642,"node_id":"MDEyOklzc3VlQ29tbWVudDgwNzAwMDY0Mg==","user":{"login":"Eywek","id":6900054,"node_id":"MDQ6VXNlcjY5MDAwNTQ=","avatar_url":"https://avatars.githubusercontent.com/u/6900054?v=4","gravatar_id":"","url":"https://api.github.com/users/Eywek","html_url":"https://github.com/Eywek","followers_url":"https://api.github.com/users/Eywek/followers","following_url":"https://api.github.com/users/Eywek/following{/other_user}","gists_url":"https://api.github.com/users/Eywek/gists{/gist_id}","starred_url":"https://api.github.com/users/Eywek/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Eywek/subscriptions","organizations_url":"https://api.github.com/users/Eywek/orgs","repos_url":"https://api.github.com/users/Eywek/repos","events_url":"https://api.github.com/users/Eywek/events{/privacy}","received_events_url":"https://api.github.com/users/Eywek/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-25T15:59:48Z","updated_at":"2021-03-25T15:59:48Z","author_association":"NONE","body":"Thank you, I will try with master and keep you updated","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/807000642/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/807167614","html_url":"https://github.com/apache/pinot/pull/6710#issuecomment-807167614","issue_url":"https://api.github.com/repos/apache/pinot/issues/6710","id":807167614,"node_id":"MDEyOklzc3VlQ29tbWVudDgwNzE2NzYxNA==","user":{"login":"Jackie-Jiang","id":17555551,"node_id":"MDQ6VXNlcjE3NTU1NTUx","avatar_url":"https://avatars.githubusercontent.com/u/17555551?v=4","gravatar_id":"","url":"https://api.github.com/users/Jackie-Jiang","html_url":"https://github.com/Jackie-Jiang","followers_url":"https://api.github.com/users/Jackie-Jiang/followers","following_url":"https://api.github.com/users/Jackie-Jiang/following{/other_user}","gists_url":"https://api.github.com/users/Jackie-Jiang/gists{/gist_id}","starred_url":"https://api.github.com/users/Jackie-Jiang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Jackie-Jiang/subscriptions","organizations_url":"https://api.github.com/users/Jackie-Jiang/orgs","repos_url":"https://api.github.com/users/Jackie-Jiang/repos","events_url":"https://api.github.com/users/Jackie-Jiang/events{/privacy}","received_events_url":"https://api.github.com/users/Jackie-Jiang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-25T17:43:48Z","updated_at":"2021-03-25T17:43:48Z","author_association":"CONTRIBUTOR","body":"@mqliang @mcvsubbu I'm suggesting putting integer ids so that we can deprecate keys if needed by skipping the id, similar to the `thrift` convention. Using ordinal to index across enum is not as flexible. We can also put the name as another field of the enum. ","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/807167614/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/807192743","html_url":"https://github.com/apache/pinot/issues/6717#issuecomment-807192743","issue_url":"https://api.github.com/repos/apache/pinot/issues/6717","id":807192743,"node_id":"MDEyOklzc3VlQ29tbWVudDgwNzE5Mjc0Mw==","user":{"login":"Eywek","id":6900054,"node_id":"MDQ6VXNlcjY5MDAwNTQ=","avatar_url":"https://avatars.githubusercontent.com/u/6900054?v=4","gravatar_id":"","url":"https://api.github.com/users/Eywek","html_url":"https://github.com/Eywek","followers_url":"https://api.github.com/users/Eywek/followers","following_url":"https://api.github.com/users/Eywek/following{/other_user}","gists_url":"https://api.github.com/users/Eywek/gists{/gist_id}","starred_url":"https://api.github.com/users/Eywek/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Eywek/subscriptions","organizations_url":"https://api.github.com/users/Eywek/orgs","repos_url":"https://api.github.com/users/Eywek/repos","events_url":"https://api.github.com/users/Eywek/events{/privacy}","received_events_url":"https://api.github.com/users/Eywek/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-25T17:59:11Z","updated_at":"2021-03-25T17:59:11Z","author_association":"NONE","body":"It worked, thank you","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/807192743/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/807233774","html_url":"https://github.com/apache/pinot/pull/6710#issuecomment-807233774","issue_url":"https://api.github.com/repos/apache/pinot/issues/6710","id":807233774,"node_id":"MDEyOklzc3VlQ29tbWVudDgwNzIzMzc3NA==","user":{"login":"mcvsubbu","id":2279037,"node_id":"MDQ6VXNlcjIyNzkwMzc=","avatar_url":"https://avatars.githubusercontent.com/u/2279037?v=4","gravatar_id":"","url":"https://api.github.com/users/mcvsubbu","html_url":"https://github.com/mcvsubbu","followers_url":"https://api.github.com/users/mcvsubbu/followers","following_url":"https://api.github.com/users/mcvsubbu/following{/other_user}","gists_url":"https://api.github.com/users/mcvsubbu/gists{/gist_id}","starred_url":"https://api.github.com/users/mcvsubbu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mcvsubbu/subscriptions","organizations_url":"https://api.github.com/users/mcvsubbu/orgs","repos_url":"https://api.github.com/users/mcvsubbu/repos","events_url":"https://api.github.com/users/mcvsubbu/events{/privacy}","received_events_url":"https://api.github.com/users/mcvsubbu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-25T18:24:24Z","updated_at":"2021-03-25T18:24:24Z","author_association":"CONTRIBUTOR","body":"> @mqliang @mcvsubbu I'm suggesting putting integer ids so that we can deprecate keys if needed by skipping the id, similar to the `thrift` convention. Using ordinal to index across enum is not as flexible. We can also put the name as another field of the enum.\r\n\r\nI think we are saying the same thing.  Have set of integers in no specific order that we can skip if not recognized. ","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/807233774/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/807254112","html_url":"https://github.com/apache/pinot/pull/6710#issuecomment-807254112","issue_url":"https://api.github.com/repos/apache/pinot/issues/6710","id":807254112,"node_id":"MDEyOklzc3VlQ29tbWVudDgwNzI1NDExMg==","user":{"login":"mqliang","id":12423751,"node_id":"MDQ6VXNlcjEyNDIzNzUx","avatar_url":"https://avatars.githubusercontent.com/u/12423751?v=4","gravatar_id":"","url":"https://api.github.com/users/mqliang","html_url":"https://github.com/mqliang","followers_url":"https://api.github.com/users/mqliang/followers","following_url":"https://api.github.com/users/mqliang/following{/other_user}","gists_url":"https://api.github.com/users/mqliang/gists{/gist_id}","starred_url":"https://api.github.com/users/mqliang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mqliang/subscriptions","organizations_url":"https://api.github.com/users/mqliang/orgs","repos_url":"https://api.github.com/users/mqliang/repos","events_url":"https://api.github.com/users/mqliang/events{/privacy}","received_events_url":"https://api.github.com/users/mqliang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-25T18:36:54Z","updated_at":"2021-03-25T18:36:54Z","author_association":"CONTRIBUTOR","body":"> I'm suggesting putting integer ids so that we can deprecate keys if needed by skipping the id, similar to the thrift convention.\r\n\r\nGetcha. Associate an ID(integer) with each enum ordinal. During serialization, use the ID as key, not ordinal. This way we can remove a key from enum if it's not used anymore.\r\n\r\n> Also suggest renaming it to MetadataKeys\r\n\r\nI name it as TrailerKeys since trailer may not only contains metadata KV pairs, but also contains some other data in future -- a metadata key must be a trailer key, but the opposite is not necessarily true. I am OK to rename it as MetadataKeys if we can accept it to call all data we put into the section in future as metadata. CC @mcvsubbu for more input. ","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/807254112/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/807387346","html_url":"https://github.com/apache/pinot/pull/6613#issuecomment-807387346","issue_url":"https://api.github.com/repos/apache/pinot/issues/6613","id":807387346,"node_id":"MDEyOklzc3VlQ29tbWVudDgwNzM4NzM0Ng==","user":{"login":"apucher","id":25439965,"node_id":"MDQ6VXNlcjI1NDM5OTY1","avatar_url":"https://avatars.githubusercontent.com/u/25439965?v=4","gravatar_id":"","url":"https://api.github.com/users/apucher","html_url":"https://github.com/apucher","followers_url":"https://api.github.com/users/apucher/followers","following_url":"https://api.github.com/users/apucher/following{/other_user}","gists_url":"https://api.github.com/users/apucher/gists{/gist_id}","starred_url":"https://api.github.com/users/apucher/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/apucher/subscriptions","organizations_url":"https://api.github.com/users/apucher/orgs","repos_url":"https://api.github.com/users/apucher/repos","events_url":"https://api.github.com/users/apucher/events{/privacy}","received_events_url":"https://api.github.com/users/apucher/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-25T20:02:52Z","updated_at":"2021-03-25T20:02:52Z","author_association":"CONTRIBUTOR","body":"> lgtm other than a very minor comment. I have resolved all the comments of mine. Can you also work with @sajjad-moradi to resolve his comments as well?\r\n> \r\n> thanks for your patience.\r\n\r\nAwesome. Thanks, Subbu. Yeah, so many changes with all the glue and tooling code.\r\n\r\nAddressed your remaining comments, and waiting for @sajjad-moradi to circle back.","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/807387346/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/807704383","html_url":"https://github.com/apache/pinot/pull/6710#issuecomment-807704383","issue_url":"https://api.github.com/repos/apache/pinot/issues/6710","id":807704383,"node_id":"MDEyOklzc3VlQ29tbWVudDgwNzcwNDM4Mw==","user":{"login":"mqliang","id":12423751,"node_id":"MDQ6VXNlcjEyNDIzNzUx","avatar_url":"https://avatars.githubusercontent.com/u/12423751?v=4","gravatar_id":"","url":"https://api.github.com/users/mqliang","html_url":"https://github.com/mqliang","followers_url":"https://api.github.com/users/mqliang/followers","following_url":"https://api.github.com/users/mqliang/following{/other_user}","gists_url":"https://api.github.com/users/mqliang/gists{/gist_id}","starred_url":"https://api.github.com/users/mqliang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mqliang/subscriptions","organizations_url":"https://api.github.com/users/mqliang/orgs","repos_url":"https://api.github.com/users/mqliang/repos","events_url":"https://api.github.com/users/mqliang/events{/privacy}","received_events_url":"https://api.github.com/users/mqliang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-25T23:16:51Z","updated_at":"2021-03-25T23:16:51Z","author_association":"CONTRIBUTOR","body":"@mcvsubbu Here is what Jackie means by assign a ID to enum key:\r\n```\r\nenum TrailerKeys {\r\n    UNKNOWN(0, \"unknown\"),\r\n    TABLE_KEY(1, \"table\"), // NOTE: this key is only used in PrioritySchedulerTest\r\n    EXCEPTION_METADATA_KEY(2, \"Exception\"),\r\n    NUM_DOCS_SCANNED_METADATA_KEY(3, \"numDocsScanned\"),\r\n    NUM_ENTRIES_SCANNED_IN_FILTER_METADATA_KEY(4, \"numEntriesScannedInFilter\"),\r\n    NUM_ENTRIES_SCANNED_POST_FILTER_METADATA_KEY(5, \"numEntriesScannedPostFilter\"),\r\n    NUM_SEGMENTS_QUERIED(6, \"numSegmentsQueried\"),\r\n    NUM_SEGMENTS_PROCESSED(7, \"numSegmentsProcessed\"),\r\n    NUM_SEGMENTS_MATCHED(8, \"numSegmentsMatched\"),\r\n    NUM_CONSUMING_SEGMENTS_PROCESSED(9, \"numConsumingSegmentsProcessed\"),\r\n    MIN_CONSUMING_FRESHNESS_TIME_MS(10, \"minConsumingFreshnessTimeMs\"),\r\n    TOTAL_DOCS_METADATA_KEY(11, \"totalDocs\"),\r\n    NUM_GROUPS_LIMIT_REACHED_KEY(12, \"numGroupsLimitReached\"),\r\n    TIME_USED_MS_METADATA_KEY(13, \"timeUsedMs\"),\r\n    TRACE_INFO_METADATA_KEY(14, \"traceInfo\"),\r\n    REQUEST_ID_METADATA_KEY(15, \"requestId\"),\r\n    NUM_RESIZES_METADATA_KEY(16, \"numResizes\"),\r\n    RESIZE_TIME_MS_METADATA_KEY(17, \"resizeTimeMs\"),\r\n    EXECUTION_THREAD_CPU_TIME_NS_METADATA_KEY(18, \"executionThreadCpuTimeNs\"),\r\n    RESPONSE_SERIALIZATION_CPU_TIME_NS_METADATA_KEY(19, \"responseSerializationCpuTimeNs\"),\r\n    ;\r\n\r\n    private static final Map<Integer, TrailerKeys> _map = new HashMap<>();\r\n    static {\r\n      for (TrailerKeys key : TrailerKeys.values()) {\r\n        if (_map.put(key.getId(), key) != null) {\r\n          throw new IllegalArgumentException(\"duplicate id: \" + key.getId());\r\n        }\r\n      }\r\n    }\r\n\r\n    private String _name;\r\n    private int _id;\r\n\r\n    TrailerKeys(int id, String name) {\r\n      this._id = id;\r\n      this._name = name;\r\n    }\r\n\r\n    public String getName() {\r\n      return _name;\r\n    }\r\n\r\n    public int getId() {\r\n      return _id;\r\n    }\r\n\r\n    public static TrailerKeys getById(int id) {\r\n      return _map.get(id);\r\n    }\r\n  }\r\n```","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/807704383/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/807806592","html_url":"https://github.com/apache/pinot/pull/6567#issuecomment-807806592","issue_url":"https://api.github.com/repos/apache/pinot/issues/6567","id":807806592,"node_id":"MDEyOklzc3VlQ29tbWVudDgwNzgwNjU5Mg==","user":{"login":"chenboat","id":2549137,"node_id":"MDQ6VXNlcjI1NDkxMzc=","avatar_url":"https://avatars.githubusercontent.com/u/2549137?v=4","gravatar_id":"","url":"https://api.github.com/users/chenboat","html_url":"https://github.com/chenboat","followers_url":"https://api.github.com/users/chenboat/followers","following_url":"https://api.github.com/users/chenboat/following{/other_user}","gists_url":"https://api.github.com/users/chenboat/gists{/gist_id}","starred_url":"https://api.github.com/users/chenboat/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/chenboat/subscriptions","organizations_url":"https://api.github.com/users/chenboat/orgs","repos_url":"https://api.github.com/users/chenboat/repos","events_url":"https://api.github.com/users/chenboat/events{/privacy}","received_events_url":"https://api.github.com/users/chenboat/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-26T00:23:40Z","updated_at":"2021-03-30T18:56:43Z","author_association":"CONTRIBUTOR","body":"> For the new integration test, it would be good if we push some events into kafka as well and make the commit threshold low so that we have CONSUMING, DONE, UPLOADED segments at the same time. Also, we can run the `RealtimeSegmentValidationManager` and see if it handles UPLOADED segments properly\r\n\r\nAdded the Kafka data ingestion to the integration test. Also add more segments (now 2 realtime segments and 3 uploaded segments are involved in the tests). Discovered a bug in the previous version.\r\n\r\nRevised the integration test so that it runs the `RealtimeSegmentValidationManager` every 1 second and verifies the query results and idealstate are still valid. @Jackie-Jiang \r\n","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/807806592/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/807891631","html_url":"https://github.com/apache/pinot/pull/6710#issuecomment-807891631","issue_url":"https://api.github.com/repos/apache/pinot/issues/6710","id":807891631,"node_id":"MDEyOklzc3VlQ29tbWVudDgwNzg5MTYzMQ==","user":{"login":"Jackie-Jiang","id":17555551,"node_id":"MDQ6VXNlcjE3NTU1NTUx","avatar_url":"https://avatars.githubusercontent.com/u/17555551?v=4","gravatar_id":"","url":"https://api.github.com/users/Jackie-Jiang","html_url":"https://github.com/Jackie-Jiang","followers_url":"https://api.github.com/users/Jackie-Jiang/followers","following_url":"https://api.github.com/users/Jackie-Jiang/following{/other_user}","gists_url":"https://api.github.com/users/Jackie-Jiang/gists{/gist_id}","starred_url":"https://api.github.com/users/Jackie-Jiang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Jackie-Jiang/subscriptions","organizations_url":"https://api.github.com/users/Jackie-Jiang/orgs","repos_url":"https://api.github.com/users/Jackie-Jiang/repos","events_url":"https://api.github.com/users/Jackie-Jiang/events{/privacy}","received_events_url":"https://api.github.com/users/Jackie-Jiang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-26T02:36:14Z","updated_at":"2021-03-26T02:36:14Z","author_association":"CONTRIBUTOR","body":"> I name it as TrailerKeys since trailer may not only contains metadata KV pairs, but also contains some other data in future -- a metadata key must be a trailer key, but the opposite is not necessarily true. I am OK to rename it as MetadataKeys if we can accept it to call all data we put into the section in future as metadata. CC @mcvsubbu for more input.\r\n\r\n@mqliang Everything except for the actual result data can be called metadata IMO. I don't like the term \"trailer\" because it is not a common term in data world, which can cause confusion. Also, we are not really putting it at the end of the data table, it is in front of the actual result data.","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/807891631/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/807918035","html_url":"https://github.com/apache/pinot/pull/6710#issuecomment-807918035","issue_url":"https://api.github.com/repos/apache/pinot/issues/6710","id":807918035,"node_id":"MDEyOklzc3VlQ29tbWVudDgwNzkxODAzNQ==","user":{"login":"mqliang","id":12423751,"node_id":"MDQ6VXNlcjEyNDIzNzUx","avatar_url":"https://avatars.githubusercontent.com/u/12423751?v=4","gravatar_id":"","url":"https://api.github.com/users/mqliang","html_url":"https://github.com/mqliang","followers_url":"https://api.github.com/users/mqliang/followers","following_url":"https://api.github.com/users/mqliang/following{/other_user}","gists_url":"https://api.github.com/users/mqliang/gists{/gist_id}","starred_url":"https://api.github.com/users/mqliang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mqliang/subscriptions","organizations_url":"https://api.github.com/users/mqliang/orgs","repos_url":"https://api.github.com/users/mqliang/repos","events_url":"https://api.github.com/users/mqliang/events{/privacy}","received_events_url":"https://api.github.com/users/mqliang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-26T03:58:10Z","updated_at":"2021-03-26T03:58:10Z","author_association":"CONTRIBUTOR","body":"> Everything except for the actual result data can be called metadata IMO. I don't like the term \"trailer\" because it is not a common term in data world, which can cause confusion. Also, we are not really putting it at the end of the data table, it is in front of the actual result data.\r\n\r\n@Jackie-Jiang No. Now we put it at the end of the data table. In V3,  layout of data table looks like:\r\n\r\n```\r\nversion number\r\nnum_rows\r\nnum_columns\r\nexception_start_offset, exception_length\r\ndictionary_map_start_offset, dictionary_map_length\r\ndata_schema_start_offset, data_scheme_length\r\nfixed_size_data_start_offset, fixed_size_length\r\nvariable_size_data_start_offset, variable_size_length\r\ntrailer_start_offset, trailer_length\r\nexception_bytes\r\ndictionary_map_bytes\r\ndata_schema_bytes\r\nfixed_size_data_bytes\r\nvariable_size_data_bytes\r\ntrailer_bytes\r\n```\r\nBut I agree to name it as metadata.","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/807918035/reactions","total_count":1,"+1":1,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/807929383","html_url":"https://github.com/apache/pinot/pull/6613#issuecomment-807929383","issue_url":"https://api.github.com/repos/apache/pinot/issues/6613","id":807929383,"node_id":"MDEyOklzc3VlQ29tbWVudDgwNzkyOTM4Mw==","user":{"login":"sajjad-moradi","id":8548220,"node_id":"MDQ6VXNlcjg1NDgyMjA=","avatar_url":"https://avatars.githubusercontent.com/u/8548220?v=4","gravatar_id":"","url":"https://api.github.com/users/sajjad-moradi","html_url":"https://github.com/sajjad-moradi","followers_url":"https://api.github.com/users/sajjad-moradi/followers","following_url":"https://api.github.com/users/sajjad-moradi/following{/other_user}","gists_url":"https://api.github.com/users/sajjad-moradi/gists{/gist_id}","starred_url":"https://api.github.com/users/sajjad-moradi/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/sajjad-moradi/subscriptions","organizations_url":"https://api.github.com/users/sajjad-moradi/orgs","repos_url":"https://api.github.com/users/sajjad-moradi/repos","events_url":"https://api.github.com/users/sajjad-moradi/events{/privacy}","received_events_url":"https://api.github.com/users/sajjad-moradi/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-26T04:37:27Z","updated_at":"2021-03-26T04:37:27Z","author_association":"CONTRIBUTOR","body":"> > lgtm other than a very minor comment. I have resolved all the comments of mine. Can you also work with @sajjad-moradi to resolve his comments as well?\r\n> > thanks for your patience.\r\n> \r\n> Awesome. Thanks, Subbu. Yeah, so many changes with all the glue and tooling code.\r\n> \r\n> Addressed your remaining comments, and waiting for @sajjad-moradi to circle back.\r\n\r\nLGTM.","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/807929383/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/808329095","html_url":"https://github.com/apache/pinot/pull/6710#issuecomment-808329095","issue_url":"https://api.github.com/repos/apache/pinot/issues/6710","id":808329095,"node_id":"MDEyOklzc3VlQ29tbWVudDgwODMyOTA5NQ==","user":{"login":"mcvsubbu","id":2279037,"node_id":"MDQ6VXNlcjIyNzkwMzc=","avatar_url":"https://avatars.githubusercontent.com/u/2279037?v=4","gravatar_id":"","url":"https://api.github.com/users/mcvsubbu","html_url":"https://github.com/mcvsubbu","followers_url":"https://api.github.com/users/mcvsubbu/followers","following_url":"https://api.github.com/users/mcvsubbu/following{/other_user}","gists_url":"https://api.github.com/users/mcvsubbu/gists{/gist_id}","starred_url":"https://api.github.com/users/mcvsubbu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mcvsubbu/subscriptions","organizations_url":"https://api.github.com/users/mcvsubbu/orgs","repos_url":"https://api.github.com/users/mcvsubbu/repos","events_url":"https://api.github.com/users/mcvsubbu/events{/privacy}","received_events_url":"https://api.github.com/users/mcvsubbu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-26T15:55:48Z","updated_at":"2021-03-26T15:55:48Z","author_association":"CONTRIBUTOR","body":"@Jackie-Jiang Here is trailer. A common term used when encoding decoding network packets. Footer is used more in documents, but acceptable.\r\nhttps://en.wikipedia.org/wiki/Trailer_(computing)#:~:text=In%20information%20technology%2C%20a%20trailer,simply%20mark%20the%20block's%20end.","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/808329095/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/808451682","html_url":"https://github.com/apache/pinot/pull/6710#issuecomment-808451682","issue_url":"https://api.github.com/repos/apache/pinot/issues/6710","id":808451682,"node_id":"MDEyOklzc3VlQ29tbWVudDgwODQ1MTY4Mg==","user":{"login":"Jackie-Jiang","id":17555551,"node_id":"MDQ6VXNlcjE3NTU1NTUx","avatar_url":"https://avatars.githubusercontent.com/u/17555551?v=4","gravatar_id":"","url":"https://api.github.com/users/Jackie-Jiang","html_url":"https://github.com/Jackie-Jiang","followers_url":"https://api.github.com/users/Jackie-Jiang/followers","following_url":"https://api.github.com/users/Jackie-Jiang/following{/other_user}","gists_url":"https://api.github.com/users/Jackie-Jiang/gists{/gist_id}","starred_url":"https://api.github.com/users/Jackie-Jiang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Jackie-Jiang/subscriptions","organizations_url":"https://api.github.com/users/Jackie-Jiang/orgs","repos_url":"https://api.github.com/users/Jackie-Jiang/repos","events_url":"https://api.github.com/users/Jackie-Jiang/events{/privacy}","received_events_url":"https://api.github.com/users/Jackie-Jiang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-26T19:07:30Z","updated_at":"2021-03-26T19:07:30Z","author_association":"CONTRIBUTOR","body":"> @Jackie-Jiang Here is trailer. A common term used when encoding decoding network packets. Footer is used more in documents, but acceptable.\r\n> https://en.wikipedia.org/wiki/Trailer_(computing)#:~:text=In%20information%20technology%2C%20a%20trailer,simply%20mark%20the%20block's%20end.\r\n\r\n@mcvsubbu I actually read this doc before suggesting renaming it to metadata as per the wiki, trailer is used to store metadata, and it is commonly used in network packets for packet related info","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/808451682/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/808856352","html_url":"https://github.com/apache/pinot/pull/6716#issuecomment-808856352","issue_url":"https://api.github.com/repos/apache/pinot/issues/6716","id":808856352,"node_id":"MDEyOklzc3VlQ29tbWVudDgwODg1NjM1Mg==","user":{"login":"FelixGV","id":1248632,"node_id":"MDQ6VXNlcjEyNDg2MzI=","avatar_url":"https://avatars.githubusercontent.com/u/1248632?v=4","gravatar_id":"","url":"https://api.github.com/users/FelixGV","html_url":"https://github.com/FelixGV","followers_url":"https://api.github.com/users/FelixGV/followers","following_url":"https://api.github.com/users/FelixGV/following{/other_user}","gists_url":"https://api.github.com/users/FelixGV/gists{/gist_id}","starred_url":"https://api.github.com/users/FelixGV/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/FelixGV/subscriptions","organizations_url":"https://api.github.com/users/FelixGV/orgs","repos_url":"https://api.github.com/users/FelixGV/repos","events_url":"https://api.github.com/users/FelixGV/events{/privacy}","received_events_url":"https://api.github.com/users/FelixGV/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-28T06:50:03Z","updated_at":"2021-03-29T04:16:32Z","author_association":"NONE","body":"Hi,\r\n\r\nHave you considered leveraging the [avro-util](https://github.com/linkedin/avro-util) library? There are two parts to this project that could be relevant to Pinot:\r\n\r\n1. The [helper](https://github.com/linkedin/avro-util/tree/master/helper) module provides a version-agnostic shim for dealing with Avro. Using this shim would allow Pinot to work with any version of Avro between 1.4 and 1.10, even though the Apache Avro project introduced many breaking API changes throughout these versions. Whichever version is found on the classpath will be dealt with transparently.\r\n\r\n2. The [avro-fastserde](https://github.com/linkedin/avro-util/tree/master/avro-fastserde) module is an alternative implementation of Avro serde which does runtime code generation to create an optimized serde for each schema reader/writer pair. It is more CPU-efficient and in some cases more GC-efficient as well. We've noticed 2-10x serde performance increase with it, depending on schemas. This module itself leverages the aforementioned helper module in order to achieve compatibility with Avro 1.4-1.10.\r\n\r\nLet me know if you have any questions.\r\n\r\n-F","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/808856352/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/808974129","html_url":"https://github.com/apache/pinot/issues/6720#issuecomment-808974129","issue_url":"https://api.github.com/repos/apache/pinot/issues/6720","id":808974129,"node_id":"MDEyOklzc3VlQ29tbWVudDgwODk3NDEyOQ==","user":{"login":"mqliang","id":12423751,"node_id":"MDQ6VXNlcjEyNDIzNzUx","avatar_url":"https://avatars.githubusercontent.com/u/12423751?v=4","gravatar_id":"","url":"https://api.github.com/users/mqliang","html_url":"https://github.com/mqliang","followers_url":"https://api.github.com/users/mqliang/followers","following_url":"https://api.github.com/users/mqliang/following{/other_user}","gists_url":"https://api.github.com/users/mqliang/gists{/gist_id}","starred_url":"https://api.github.com/users/mqliang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mqliang/subscriptions","organizations_url":"https://api.github.com/users/mqliang/orgs","repos_url":"https://api.github.com/users/mqliang/repos","events_url":"https://api.github.com/users/mqliang/events{/privacy}","received_events_url":"https://api.github.com/users/mqliang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-28T23:02:07Z","updated_at":"2021-11-23T22:30:54Z","author_association":"CONTRIBUTOR","body":"I write a bench mark here: https://github.com/mqliang/pinot/commit/a32a61aad5dfa6b6c4a09064c75926b00495cd3a\r\n\r\nThe benchmark compares three ways to build a data table:\r\n* `BenchmarkDataTableRowIdColIdBuildInOrder`: for each row, call `dataTableBuilder.setColumn(colId, value);` to set the value for each column. However, set value of columns in order of: 1st col, 2nd col, 3nd col...\r\n* `BenchmarkDataTableRowIdColIdBuildRandomOrder`: call `dataTableBuilder.setColumn(colId, value);` to set the value for each column. However, set value of columns in ramdom order, e.g. in order of : 11st col, 20st col, 3nd col, 5st col...\r\n* `BenchmarkDataTableRowBulkBuild`: for each row, first put values of all column into a `Object[]` array, then build the row in bulk -- write all values one by one, without calling `ByteBuffer.position()` at all.\r\n\r\nThe result of building a table of 100 rows is:\r\n```\r\n# JMH version: 1.26\r\n# VM version: JDK 1.8.0_282, OpenJDK 64-Bit Server VM, 25.282-b08\r\n# VM invoker: /Library/Java/JavaVirtualMachines/adoptopenjdk-8.jdk/Contents/Home/jre/bin/java\r\n# VM options: -javaagent:/Users/mqliang/Library/Application Support/JetBrains/Toolbox/apps/IDEA-U/ch-0/203.7717.56/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=56968:/Users/mqliang/Library/Application Support/JetBrains/Toolbox/apps/IDEA-U/ch-0/203.7717.56/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8\r\n# Warmup: 1 iterations, 10 s each\r\n# Measurement: 5 iterations, 30 s each\r\n# Timeout: 10 min per iteration\r\n# Threads: 1 thread, will synchronize iterations\r\n# Benchmark mode: Average time, time/op\r\n# Benchmark: org.apache.pinot.perf.BenchmarkDataTableBulkBuild.BenchmarkDataTableRowBulkBuild\r\n\r\n# Run progress: 0.00% complete, ETA 00:08:00\r\n# Fork: 1 of 1\r\n# Warmup Iteration   1: 198.463 us/op\r\nIteration   1: 157.345 us/op\r\nIteration   2: 157.778 us/op\r\nIteration   3: 155.212 us/op\r\nIteration   4: 154.870 us/op\r\nIteration   5: 153.947 us/op\r\n\r\n\r\nResult \"org.apache.pinot.perf.BenchmarkDataTableBulkBuild.BenchmarkDataTableRowBulkBuild\":\r\n  155.830 ±(99.9%) 6.368 us/op [Average]\r\n  (min, avg, max) = (153.947, 155.830, 157.778), stdev = 1.654\r\n  CI (99.9%): [149.462, 162.198] (assumes normal distribution)\r\n\r\n\r\n# JMH version: 1.26\r\n# VM version: JDK 1.8.0_282, OpenJDK 64-Bit Server VM, 25.282-b08\r\n# VM invoker: /Library/Java/JavaVirtualMachines/adoptopenjdk-8.jdk/Contents/Home/jre/bin/java\r\n# VM options: -javaagent:/Users/mqliang/Library/Application Support/JetBrains/Toolbox/apps/IDEA-U/ch-0/203.7717.56/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=56968:/Users/mqliang/Library/Application Support/JetBrains/Toolbox/apps/IDEA-U/ch-0/203.7717.56/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8\r\n# Warmup: 1 iterations, 10 s each\r\n# Measurement: 5 iterations, 30 s each\r\n# Timeout: 10 min per iteration\r\n# Threads: 1 thread, will synchronize iterations\r\n# Benchmark mode: Average time, time/op\r\n# Benchmark: org.apache.pinot.perf.BenchmarkDataTableBulkBuild.BenchmarkDataTableRowIdColIdBuildInOrder\r\n\r\n# Run progress: 33.33% complete, ETA 00:05:21\r\n# Fork: 1 of 1\r\n# Warmup Iteration   1: 193.779 us/op\r\nIteration   1: 150.726 us/op\r\nIteration   2: 150.649 us/op\r\nIteration   3: 151.587 us/op\r\nIteration   4: 151.765 us/op\r\nIteration   5: 151.749 us/op\r\n\r\n\r\nResult \"org.apache.pinot.perf.BenchmarkDataTableBulkBuild.BenchmarkDataTableRowIdColIdBuildInOrder\":\r\n  151.295 ±(99.9%) 2.155 us/op [Average]\r\n  (min, avg, max) = (150.649, 151.295, 151.765), stdev = 0.560\r\n  CI (99.9%): [149.140, 153.451] (assumes normal distribution)\r\n\r\n\r\n# JMH version: 1.26\r\n# VM version: JDK 1.8.0_282, OpenJDK 64-Bit Server VM, 25.282-b08\r\n# VM invoker: /Library/Java/JavaVirtualMachines/adoptopenjdk-8.jdk/Contents/Home/jre/bin/java\r\n# VM options: -javaagent:/Users/mqliang/Library/Application Support/JetBrains/Toolbox/apps/IDEA-U/ch-0/203.7717.56/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=56968:/Users/mqliang/Library/Application Support/JetBrains/Toolbox/apps/IDEA-U/ch-0/203.7717.56/IntelliJ IDEA.app/Contents/bin -Dfile.encoding=UTF-8\r\n# Warmup: 1 iterations, 10 s each\r\n# Measurement: 5 iterations, 30 s each\r\n# Timeout: 10 min per iteration\r\n# Threads: 1 thread, will synchronize iterations\r\n# Benchmark mode: Average time, time/op\r\n# Benchmark: org.apache.pinot.perf.BenchmarkDataTableBulkBuild.BenchmarkDataTableRowIdColIdBuildRandomOrder\r\n\r\n# Run progress: 66.67% complete, ETA 00:02:40\r\n# Fork: 1 of 1\r\n# Warmup Iteration   1: 216.635 us/op\r\nIteration   1: 175.108 us/op\r\nIteration   2: 174.428 us/op\r\nIteration   3: 178.706 us/op\r\nIteration   4: 180.284 us/op\r\nIteration   5: 178.219 us/op\r\n\r\n\r\nResult \"org.apache.pinot.perf.BenchmarkDataTableBulkBuild.BenchmarkDataTableRowIdColIdBuildRandomOrder\":\r\n  177.349 ±(99.9%) 9.581 us/op [Average]\r\n  (min, avg, max) = (174.428, 177.349, 180.284), stdev = 2.488\r\n  CI (99.9%): [167.768, 186.930] (assumes normal distribution)\r\n\r\n\r\n# Run complete. Total time: 00:08:02\r\n\r\nREMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on\r\nwhy the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial\r\nexperiments, perform baseline and negative tests that provide experimental control, make sure\r\nthe benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.\r\nDo not assume the numbers tell you what you want them to tell.\r\n\r\nBenchmark                                                                 Mode  Cnt    Score   Error  Units\r\nBenchmarkDataTableBulkBuild.BenchmarkDataTableRowBulkBuild                avgt    5  155.830 ± 6.368  us/op\r\nBenchmarkDataTableBulkBuild.BenchmarkDataTableRowIdColIdBuildInOrder      avgt    5  151.295 ± 2.155  us/op\r\nBenchmarkDataTableBulkBuild.BenchmarkDataTableRowIdColIdBuildRandomOrder  avgt    5  177.349 ± 9.581  us/op\r\n\r\nProcess finished with exit code 0\r\n``` \r\n\r\nThe result shows there is not significant difference between  BenchmarkDataTableRowBulkBuild and BenchmarkDataTableRowIdColIdBuildInOrder. Which means: even if we use `setColumn(colId, value)` to build datatable, as long as we set values for columns in increasing order, not randomly, the overhead of calling `ByteBuffer.position()` is negligible.\r\n\r\nCurrently, our code base set values for columns in increasing order, so there is no need to address the TODO from the point of view of improving performance. But from the code cleaning point of view, we we can provide such a `setColumnValuesInBulk()` method, and change all current\r\ndatatable building code to use  `setColumnValuesInBulk()`. This way, our code is more self-explainable -- setting column value in bulk (in increasing order) is better than setting in random order. However, all `setColumn(colId, value)` methods should be kept, since there may be some circumstance we need to set a value for an arbitrary row/col.\r\n\r\ncc @Jackie-Jiang ","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/808974129/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/808982812","html_url":"https://github.com/apache/pinot/issues/6720#issuecomment-808982812","issue_url":"https://api.github.com/repos/apache/pinot/issues/6720","id":808982812,"node_id":"MDEyOklzc3VlQ29tbWVudDgwODk4MjgxMg==","user":{"login":"mqliang","id":12423751,"node_id":"MDQ6VXNlcjEyNDIzNzUx","avatar_url":"https://avatars.githubusercontent.com/u/12423751?v=4","gravatar_id":"","url":"https://api.github.com/users/mqliang","html_url":"https://github.com/mqliang","followers_url":"https://api.github.com/users/mqliang/followers","following_url":"https://api.github.com/users/mqliang/following{/other_user}","gists_url":"https://api.github.com/users/mqliang/gists{/gist_id}","starred_url":"https://api.github.com/users/mqliang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mqliang/subscriptions","organizations_url":"https://api.github.com/users/mqliang/orgs","repos_url":"https://api.github.com/users/mqliang/repos","events_url":"https://api.github.com/users/mqliang/events{/privacy}","received_events_url":"https://api.github.com/users/mqliang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-28T23:57:32Z","updated_at":"2021-03-28T23:57:32Z","author_association":"CONTRIBUTOR","body":"@Jackie-Jiang It turns out there is a bug in the benchmark: for `BenchmarkDataTableRowIdColIdBuildRandomOrder()`, I also time the function of shuffling column ids. After moving the shuffling logic out of the function (see fix: https://github.com/mqliang/incubator-pinot/commit/c19b51947a5df804a3c819725f037fb1d6388062), the result becomes:\r\n\r\nbenchmark result of 100 rows table:\r\n```\r\nBenchmark                                                                 Mode  Cnt    Score   Error  Units\r\nBenchmarkDataTableBulkBuild.BenchmarkDataTableRowBulkBuild                avgt    5  147.196 ± 1.683  us/op\r\nBenchmarkDataTableBulkBuild.BenchmarkDataTableRowIdColIdBuildInOrder      avgt    5  146.157 ± 5.207  us/op\r\nBenchmarkDataTableBulkBuild.BenchmarkDataTableRowIdColIdBuildRandomOrder  avgt    5  145.171 ± 6.464  us/op\r\n```\r\n\r\nbenchmark result of 1000 rows table:\r\n```\r\nBenchmark                                                                 Mode  Cnt     Score    Error  Units\r\nBenchmarkDataTableBulkBuild.BenchmarkDataTableRowBulkBuild                avgt    5  1612.386 ± 51.587  us/op\r\nBenchmarkDataTableBulkBuild.BenchmarkDataTableRowIdColIdBuildInOrder      avgt    5  1622.108 ± 65.567  us/op\r\nBenchmarkDataTableBulkBuild.BenchmarkDataTableRowIdColIdBuildRandomOrder  avgt    5  1610.517 ± 64.187  us/op\r\n```\r\n\r\nSo, the overhead of calling `ByteBuffer.position()` is actually negligible.\r\n\r\n@Jackie-Jiang Can you please take a look at my benchmark code? If the benchmark code is correct, we don't need to address the TODO. And I will send a PR to remove the TODO and write comments stating that such a optimization is unnecessary.\r\n\r\ncc @siddharthteotia @mcvsubbu \r\n","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/808982812/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/809076119","html_url":"https://github.com/apache/pinot/pull/6710#issuecomment-809076119","issue_url":"https://api.github.com/repos/apache/pinot/issues/6710","id":809076119,"node_id":"MDEyOklzc3VlQ29tbWVudDgwOTA3NjExOQ==","user":{"login":"mqliang","id":12423751,"node_id":"MDQ6VXNlcjEyNDIzNzUx","avatar_url":"https://avatars.githubusercontent.com/u/12423751?v=4","gravatar_id":"","url":"https://api.github.com/users/mqliang","html_url":"https://github.com/mqliang","followers_url":"https://api.github.com/users/mqliang/followers","following_url":"https://api.github.com/users/mqliang/following{/other_user}","gists_url":"https://api.github.com/users/mqliang/gists{/gist_id}","starred_url":"https://api.github.com/users/mqliang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mqliang/subscriptions","organizations_url":"https://api.github.com/users/mqliang/orgs","repos_url":"https://api.github.com/users/mqliang/repos","events_url":"https://api.github.com/users/mqliang/events{/privacy}","received_events_url":"https://api.github.com/users/mqliang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-29T05:26:07Z","updated_at":"2021-03-29T07:33:32Z","author_association":"CONTRIBUTOR","body":"@Jackie-Jiang @siddharthteotia @mcvsubbu Comment addressed and PR is ready for review now. I split the change into 5 commits:\r\n* 1st commit:\r\n   * Rename TrailerKeys as MetadataKeys\r\n   * Associate ID/Name with MetadataKeys\r\n   * V2->V3 convert instead of construct V3 from V2 bytes\r\n   * ASCII layout of V3 datatable\r\n   * Address a TODO in DataTableBuilder: store bytes data into variable size data section, instead of String\r\n  \r\n* 2nd commit: Address a TODO in DataTableBuilder: fix float size issue at DataTableBuilder\r\n* 3rd commit:  Address a TODO in DataTableBuilder: use one Map to map a String to Integer for all columns in V3.\r\n* 4th commit:  fix a bug at BrokerReduceService, which bring down integration test.\r\n* 5th commit:  Log `responseSerializationCpuTimeNs` at QueryScheduler and emit a broker gauge; put \"executionThreadCpuTimeNs\" and \"responseSerializationCpuTimeNs\" into metadata so that they can be sent to broker\r\n\r\n\r\nThere is still one more TODO in DataTableBuilder: Given a data schema, write all values one by one instead of using rowId and colId to position (save time). It will not impact the serialized bytes layout of data table, it's just some implementation optimization. Which means it does not require a version bumping up, so can be done in a separate PR, I create a issue: https://github.com/apache/incubator-pinot/issues/6720 to track this. And a preliminary benchmark shows that the optimization is quite speculative -- there is no improvement by writing all values one by one without using rowId and colId to position, for more details, see the benchmark result at: https://github.com/apache/incubator-pinot/issues/6720\r\n\r\nThere is one more thing need to be done: change the interface of `DataTable.getMetadata()` returns a `Map<MetadataKeys, String>`, instead of `Map<String, String>`. This PR is already quite large,  I wanner address it in a separate PR.","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/809076119/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/809089192","html_url":"https://github.com/apache/pinot/pull/6710#issuecomment-809089192","issue_url":"https://api.github.com/repos/apache/pinot/issues/6710","id":809089192,"node_id":"MDEyOklzc3VlQ29tbWVudDgwOTA4OTE5Mg==","user":{"login":"mqliang","id":12423751,"node_id":"MDQ6VXNlcjEyNDIzNzUx","avatar_url":"https://avatars.githubusercontent.com/u/12423751?v=4","gravatar_id":"","url":"https://api.github.com/users/mqliang","html_url":"https://github.com/mqliang","followers_url":"https://api.github.com/users/mqliang/followers","following_url":"https://api.github.com/users/mqliang/following{/other_user}","gists_url":"https://api.github.com/users/mqliang/gists{/gist_id}","starred_url":"https://api.github.com/users/mqliang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mqliang/subscriptions","organizations_url":"https://api.github.com/users/mqliang/orgs","repos_url":"https://api.github.com/users/mqliang/repos","events_url":"https://api.github.com/users/mqliang/events{/privacy}","received_events_url":"https://api.github.com/users/mqliang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-29T05:52:26Z","updated_at":"2021-03-29T05:52:26Z","author_association":"CONTRIBUTOR","body":"test failed due to flaky issue, close and re-open to trigger  a re-run.","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/809089192/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/809126203","html_url":"https://github.com/apache/pinot/pull/6710#issuecomment-809126203","issue_url":"https://api.github.com/repos/apache/pinot/issues/6710","id":809126203,"node_id":"MDEyOklzc3VlQ29tbWVudDgwOTEyNjIwMw==","user":{"login":"mqliang","id":12423751,"node_id":"MDQ6VXNlcjEyNDIzNzUx","avatar_url":"https://avatars.githubusercontent.com/u/12423751?v=4","gravatar_id":"","url":"https://api.github.com/users/mqliang","html_url":"https://github.com/mqliang","followers_url":"https://api.github.com/users/mqliang/followers","following_url":"https://api.github.com/users/mqliang/following{/other_user}","gists_url":"https://api.github.com/users/mqliang/gists{/gist_id}","starred_url":"https://api.github.com/users/mqliang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mqliang/subscriptions","organizations_url":"https://api.github.com/users/mqliang/orgs","repos_url":"https://api.github.com/users/mqliang/repos","events_url":"https://api.github.com/users/mqliang/events{/privacy}","received_events_url":"https://api.github.com/users/mqliang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-29T07:03:53Z","updated_at":"2021-03-29T07:03:53Z","author_association":"CONTRIBUTOR","body":"update: pushed two more commits:\r\n* 1st commit: bug fix \r\n* 2nd commit: encode as bigEndian representation for all int/long value. Previously only encode as bigEndian for \"responseSerializationCpuTimeNs\"","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/809126203/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/809409668","html_url":"https://github.com/apache/pinot/issues/6433#issuecomment-809409668","issue_url":"https://api.github.com/repos/apache/pinot/issues/6433","id":809409668,"node_id":"MDEyOklzc3VlQ29tbWVudDgwOTQwOTY2OA==","user":{"login":"alexandervivas","id":15041964,"node_id":"MDQ6VXNlcjE1MDQxOTY0","avatar_url":"https://avatars.githubusercontent.com/u/15041964?v=4","gravatar_id":"","url":"https://api.github.com/users/alexandervivas","html_url":"https://github.com/alexandervivas","followers_url":"https://api.github.com/users/alexandervivas/followers","following_url":"https://api.github.com/users/alexandervivas/following{/other_user}","gists_url":"https://api.github.com/users/alexandervivas/gists{/gist_id}","starred_url":"https://api.github.com/users/alexandervivas/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/alexandervivas/subscriptions","organizations_url":"https://api.github.com/users/alexandervivas/orgs","repos_url":"https://api.github.com/users/alexandervivas/repos","events_url":"https://api.github.com/users/alexandervivas/events{/privacy}","received_events_url":"https://api.github.com/users/alexandervivas/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-29T14:12:14Z","updated_at":"2021-03-29T14:12:50Z","author_association":"NONE","body":"> I have this issue too.\r\n> Our kafka platform must be accessed with an assigned group.id.\r\n\r\n@kyostyle1 Did you find a solution? I ended up coding something in a fork.","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/809409668/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/809572378","html_url":"https://github.com/apache/pinot/issues/6724#issuecomment-809572378","issue_url":"https://api.github.com/repos/apache/pinot/issues/6724","id":809572378,"node_id":"MDEyOklzc3VlQ29tbWVudDgwOTU3MjM3OA==","user":{"login":"Jackie-Jiang","id":17555551,"node_id":"MDQ6VXNlcjE3NTU1NTUx","avatar_url":"https://avatars.githubusercontent.com/u/17555551?v=4","gravatar_id":"","url":"https://api.github.com/users/Jackie-Jiang","html_url":"https://github.com/Jackie-Jiang","followers_url":"https://api.github.com/users/Jackie-Jiang/followers","following_url":"https://api.github.com/users/Jackie-Jiang/following{/other_user}","gists_url":"https://api.github.com/users/Jackie-Jiang/gists{/gist_id}","starred_url":"https://api.github.com/users/Jackie-Jiang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Jackie-Jiang/subscriptions","organizations_url":"https://api.github.com/users/Jackie-Jiang/orgs","repos_url":"https://api.github.com/users/Jackie-Jiang/repos","events_url":"https://api.github.com/users/Jackie-Jiang/events{/privacy}","received_events_url":"https://api.github.com/users/Jackie-Jiang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-29T17:36:09Z","updated_at":"2021-03-29T17:36:09Z","author_association":"CONTRIBUTOR","body":"This is a known limitation for `HAVING` clause because the having is computed on broker side only. We don't transfer results from all the groups from servers to broker for performance concern, so in order to get the correct result, you should sort the groups: `SELECT transaction_id, count(*) as cnt FROM point_transaction where created_at >=1616760000 and created_at < 1616846400 group by transaction_id order by cnt desc having cnt > 1 limit 400`","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/809572378/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/809592811","html_url":"https://github.com/apache/pinot/pull/6613#issuecomment-809592811","issue_url":"https://api.github.com/repos/apache/pinot/issues/6613","id":809592811,"node_id":"MDEyOklzc3VlQ29tbWVudDgwOTU5MjgxMQ==","user":{"login":"apucher","id":25439965,"node_id":"MDQ6VXNlcjI1NDM5OTY1","avatar_url":"https://avatars.githubusercontent.com/u/25439965?v=4","gravatar_id":"","url":"https://api.github.com/users/apucher","html_url":"https://github.com/apucher","followers_url":"https://api.github.com/users/apucher/followers","following_url":"https://api.github.com/users/apucher/following{/other_user}","gists_url":"https://api.github.com/users/apucher/gists{/gist_id}","starred_url":"https://api.github.com/users/apucher/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/apucher/subscriptions","organizations_url":"https://api.github.com/users/apucher/orgs","repos_url":"https://api.github.com/users/apucher/repos","events_url":"https://api.github.com/users/apucher/events{/privacy}","received_events_url":"https://api.github.com/users/apucher/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-29T18:06:47Z","updated_at":"2021-03-29T18:06:47Z","author_association":"CONTRIBUTOR","body":"Thank you everyone for the reviews!\r\n\r\nI've rebased the PR and I'll wait for one last CI run before merging.","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/809592811/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/809594670","html_url":"https://github.com/apache/pinot/pull/6710#issuecomment-809594670","issue_url":"https://api.github.com/repos/apache/pinot/issues/6710","id":809594670,"node_id":"MDEyOklzc3VlQ29tbWVudDgwOTU5NDY3MA==","user":{"login":"mqliang","id":12423751,"node_id":"MDQ6VXNlcjEyNDIzNzUx","avatar_url":"https://avatars.githubusercontent.com/u/12423751?v=4","gravatar_id":"","url":"https://api.github.com/users/mqliang","html_url":"https://github.com/mqliang","followers_url":"https://api.github.com/users/mqliang/followers","following_url":"https://api.github.com/users/mqliang/following{/other_user}","gists_url":"https://api.github.com/users/mqliang/gists{/gist_id}","starred_url":"https://api.github.com/users/mqliang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mqliang/subscriptions","organizations_url":"https://api.github.com/users/mqliang/orgs","repos_url":"https://api.github.com/users/mqliang/repos","events_url":"https://api.github.com/users/mqliang/events{/privacy}","received_events_url":"https://api.github.com/users/mqliang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-29T18:09:05Z","updated_at":"2021-03-29T18:09:05Z","author_association":"CONTRIBUTOR","body":"@mcvsubbu @siddharthteotia and me meet offline, we wanner keep this PR focus on bumping up to v3 and move metadata to the end of data table, also use enmu ordinal as key when serialize. And make it configurable to send V2/V3 data at server side (instance config).\r\n\r\n@Jackie-Jiang I terms of addressing the TODO in DataTableBuilder(fix float data length, one String->Int map for the whole table instead of for each column), we will address it separately(bumping up to V4). ","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/809594670/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/809597583","html_url":"https://github.com/apache/pinot/issues/6724#issuecomment-809597583","issue_url":"https://api.github.com/repos/apache/pinot/issues/6724","id":809597583,"node_id":"MDEyOklzc3VlQ29tbWVudDgwOTU5NzU4Mw==","user":{"login":"dongxiaoman","id":11821736,"node_id":"MDQ6VXNlcjExODIxNzM2","avatar_url":"https://avatars.githubusercontent.com/u/11821736?v=4","gravatar_id":"","url":"https://api.github.com/users/dongxiaoman","html_url":"https://github.com/dongxiaoman","followers_url":"https://api.github.com/users/dongxiaoman/followers","following_url":"https://api.github.com/users/dongxiaoman/following{/other_user}","gists_url":"https://api.github.com/users/dongxiaoman/gists{/gist_id}","starred_url":"https://api.github.com/users/dongxiaoman/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dongxiaoman/subscriptions","organizations_url":"https://api.github.com/users/dongxiaoman/orgs","repos_url":"https://api.github.com/users/dongxiaoman/repos","events_url":"https://api.github.com/users/dongxiaoman/events{/privacy}","received_events_url":"https://api.github.com/users/dongxiaoman/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-29T18:11:32Z","updated_at":"2021-03-29T18:11:32Z","author_association":"CONTRIBUTOR","body":"thanks for explaining; makes sense\r\nfinal statement is like below:\r\n```\r\nSELECT transaction_id, count(*) as cnt FROM point_transaction where created_at >=1616760000 and created_at < 1616846400 group by transaction_id  having cnt > 1 order by cnt desc  limit 400\r\n```\r\n","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/809597583/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/809610152","html_url":"https://github.com/apache/pinot/pull/6710#issuecomment-809610152","issue_url":"https://api.github.com/repos/apache/pinot/issues/6710","id":809610152,"node_id":"MDEyOklzc3VlQ29tbWVudDgwOTYxMDE1Mg==","user":{"login":"siddharthteotia","id":2150694,"node_id":"MDQ6VXNlcjIxNTA2OTQ=","avatar_url":"https://avatars.githubusercontent.com/u/2150694?v=4","gravatar_id":"","url":"https://api.github.com/users/siddharthteotia","html_url":"https://github.com/siddharthteotia","followers_url":"https://api.github.com/users/siddharthteotia/followers","following_url":"https://api.github.com/users/siddharthteotia/following{/other_user}","gists_url":"https://api.github.com/users/siddharthteotia/gists{/gist_id}","starred_url":"https://api.github.com/users/siddharthteotia/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/siddharthteotia/subscriptions","organizations_url":"https://api.github.com/users/siddharthteotia/orgs","repos_url":"https://api.github.com/users/siddharthteotia/repos","events_url":"https://api.github.com/users/siddharthteotia/events{/privacy}","received_events_url":"https://api.github.com/users/siddharthteotia/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-29T18:27:08Z","updated_at":"2021-03-30T00:46:25Z","author_association":"CONTRIBUTOR","body":"> @mcvsubbu @siddharthteotia and me meet offline, we wanner keep this PR focus on bumping up to v3 and move metadata to the end of data table, also use enmu ordinal as key when serialize. And make it configurable to send V2/V3 data at server side (instance config).\r\n> \r\n> @Jackie-Jiang I terms of addressing the TODO in DataTableBuilder(fix float data length, one String->Int map for the whole table instead of for each column), we will address it separately(bumping up to V4).\r\n\r\nYes, the enum based original approach is much simpler and the enum name() gives the string key and the enum ordinal gives the id. The approach of using explicit id and name is not needed since we want the enum structure to always grow - users should not be allowed to remove enums or change name of enums. Should only be adding new enums to the end. \r\n\r\nFor the existing TODOs, the main reason for not addressing them in this PR is to keep this as simple as possible. It is easier  to review and once this change goes in production and if there are any issues, we don't have to debug multiple independent changes. We can always address those TODOs in a follow-up and if they demand version change, we can bump the version again.\r\n\r\nRegarding introducing a instance config for version, we agreed that CURRENT_VERSION will be 3 and server will always send the data table with this version. @mcvsubbu  suggested that it can be helpful to force server to send the old version v2 in case there are issues with v3 forcing a rollback but we want to use the latest code. ","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/809610152/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/809612014","html_url":"https://github.com/apache/pinot/pull/6710#issuecomment-809612014","issue_url":"https://api.github.com/repos/apache/pinot/issues/6710","id":809612014,"node_id":"MDEyOklzc3VlQ29tbWVudDgwOTYxMjAxNA==","user":{"login":"siddharthteotia","id":2150694,"node_id":"MDQ6VXNlcjIxNTA2OTQ=","avatar_url":"https://avatars.githubusercontent.com/u/2150694?v=4","gravatar_id":"","url":"https://api.github.com/users/siddharthteotia","html_url":"https://github.com/siddharthteotia","followers_url":"https://api.github.com/users/siddharthteotia/followers","following_url":"https://api.github.com/users/siddharthteotia/following{/other_user}","gists_url":"https://api.github.com/users/siddharthteotia/gists{/gist_id}","starred_url":"https://api.github.com/users/siddharthteotia/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/siddharthteotia/subscriptions","organizations_url":"https://api.github.com/users/siddharthteotia/orgs","repos_url":"https://api.github.com/users/siddharthteotia/repos","events_url":"https://api.github.com/users/siddharthteotia/events{/privacy}","received_events_url":"https://api.github.com/users/siddharthteotia/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-29T18:29:49Z","updated_at":"2021-03-29T18:29:49Z","author_association":"CONTRIBUTOR","body":"> With this PR, we should resolve a couple of TODOs introduced in PR #6680\r\n> \r\n> * Expose the serialization time through an API at the DataTable level and log it in [QueryScheduler](https://github.com/apache/incubator-pinot/pull/6710/files#diff-2bff83abd3f6e831acfe4b6d31a022f228710def4eea47db3929c6d90b3147ecR222). You need to serialize before the logging line. Currently it is after.\r\n> * Revisit [this](https://github.com/apache/incubator-pinot/pull/6710/files#diff-2bff83abd3f6e831acfe4b6d31a022f228710def4eea47db3929c6d90b3147ecR255). The execution cpu time is not yet serialized as part of metadata. May be we can just remove line 258.\r\n\r\nWe can emit both costs separately. So have 2 server gauges. Similarly, log them in the QueryScheduler separately. But the serialized cost in the DataTable should be a single value (sum total of both exec cpu time cost and serialization cpu time cost)","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/809612014/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/809617998","html_url":"https://github.com/apache/pinot/issues/6724#issuecomment-809617998","issue_url":"https://api.github.com/repos/apache/pinot/issues/6724","id":809617998,"node_id":"MDEyOklzc3VlQ29tbWVudDgwOTYxNzk5OA==","user":{"login":"kishoreg","id":850791,"node_id":"MDQ6VXNlcjg1MDc5MQ==","avatar_url":"https://avatars.githubusercontent.com/u/850791?v=4","gravatar_id":"","url":"https://api.github.com/users/kishoreg","html_url":"https://github.com/kishoreg","followers_url":"https://api.github.com/users/kishoreg/followers","following_url":"https://api.github.com/users/kishoreg/following{/other_user}","gists_url":"https://api.github.com/users/kishoreg/gists{/gist_id}","starred_url":"https://api.github.com/users/kishoreg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/kishoreg/subscriptions","organizations_url":"https://api.github.com/users/kishoreg/orgs","repos_url":"https://api.github.com/users/kishoreg/repos","events_url":"https://api.github.com/users/kishoreg/events{/privacy}","received_events_url":"https://api.github.com/users/kishoreg/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-29T18:38:45Z","updated_at":"2021-03-29T18:38:45Z","author_association":"MEMBER","body":"@Jackie-Jiang should we do automatic query rewrite for this?","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/809617998/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/809625031","html_url":"https://github.com/apache/pinot/issues/6724#issuecomment-809625031","issue_url":"https://api.github.com/repos/apache/pinot/issues/6724","id":809625031,"node_id":"MDEyOklzc3VlQ29tbWVudDgwOTYyNTAzMQ==","user":{"login":"yupeng9","id":13425258,"node_id":"MDQ6VXNlcjEzNDI1MjU4","avatar_url":"https://avatars.githubusercontent.com/u/13425258?v=4","gravatar_id":"","url":"https://api.github.com/users/yupeng9","html_url":"https://github.com/yupeng9","followers_url":"https://api.github.com/users/yupeng9/followers","following_url":"https://api.github.com/users/yupeng9/following{/other_user}","gists_url":"https://api.github.com/users/yupeng9/gists{/gist_id}","starred_url":"https://api.github.com/users/yupeng9/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/yupeng9/subscriptions","organizations_url":"https://api.github.com/users/yupeng9/orgs","repos_url":"https://api.github.com/users/yupeng9/repos","events_url":"https://api.github.com/users/yupeng9/events{/privacy}","received_events_url":"https://api.github.com/users/yupeng9/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-29T18:49:35Z","updated_at":"2021-03-29T18:49:35Z","author_association":"CONTRIBUTOR","body":"@dongxiaoman @Jackie-Jiang I think we shall reopen this issue, as the original query is a valid one but the returned result is incorrect. I have seen similar reports too. \r\n\r\nUser wouldn't understand the implementation reasons, and they will simply conclude that pinot gives incorrect results.","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/809625031/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/809683795","html_url":"https://github.com/apache/pinot/issues/6724#issuecomment-809683795","issue_url":"https://api.github.com/repos/apache/pinot/issues/6724","id":809683795,"node_id":"MDEyOklzc3VlQ29tbWVudDgwOTY4Mzc5NQ==","user":{"login":"Jackie-Jiang","id":17555551,"node_id":"MDQ6VXNlcjE3NTU1NTUx","avatar_url":"https://avatars.githubusercontent.com/u/17555551?v=4","gravatar_id":"","url":"https://api.github.com/users/Jackie-Jiang","html_url":"https://github.com/Jackie-Jiang","followers_url":"https://api.github.com/users/Jackie-Jiang/followers","following_url":"https://api.github.com/users/Jackie-Jiang/following{/other_user}","gists_url":"https://api.github.com/users/Jackie-Jiang/gists{/gist_id}","starred_url":"https://api.github.com/users/Jackie-Jiang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Jackie-Jiang/subscriptions","organizations_url":"https://api.github.com/users/Jackie-Jiang/orgs","repos_url":"https://api.github.com/users/Jackie-Jiang/repos","events_url":"https://api.github.com/users/Jackie-Jiang/events{/privacy}","received_events_url":"https://api.github.com/users/Jackie-Jiang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-29T20:19:01Z","updated_at":"2021-03-29T20:19:01Z","author_association":"CONTRIBUTOR","body":"@kishoreg We can do automatic query rewrite for queries without ordering, but it won't work for the following scenarios:\r\n- User wants different ordering, e.g. `select ... having col > 10 order by col asc`\r\n- Nested having clause, e.g. `select ... having col1 > 10 and col2 > 5`\r\n- Having clause asks for a range, e.g. `select ... having col between 5 and 10\r\n\r\nTo give accurate result, we need to gather all groups (like common SQL databases), but that would be super expensive.\r\n\r\n@dongxiaoman @yupeng9 We can keep this issue open, but currently I don't see a good solution yet. Currently `having` should only be used to simplify the client code of filtering on the group-by results.","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/809683795/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/809684079","html_url":"https://github.com/apache/pinot/pull/6718#issuecomment-809684079","issue_url":"https://api.github.com/repos/apache/pinot/issues/6718","id":809684079,"node_id":"MDEyOklzc3VlQ29tbWVudDgwOTY4NDA3OQ==","user":{"login":"xiangfu0","id":1202120,"node_id":"MDQ6VXNlcjEyMDIxMjA=","avatar_url":"https://avatars.githubusercontent.com/u/1202120?v=4","gravatar_id":"","url":"https://api.github.com/users/xiangfu0","html_url":"https://github.com/xiangfu0","followers_url":"https://api.github.com/users/xiangfu0/followers","following_url":"https://api.github.com/users/xiangfu0/following{/other_user}","gists_url":"https://api.github.com/users/xiangfu0/gists{/gist_id}","starred_url":"https://api.github.com/users/xiangfu0/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xiangfu0/subscriptions","organizations_url":"https://api.github.com/users/xiangfu0/orgs","repos_url":"https://api.github.com/users/xiangfu0/repos","events_url":"https://api.github.com/users/xiangfu0/events{/privacy}","received_events_url":"https://api.github.com/users/xiangfu0/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-29T20:19:31Z","updated_at":"2021-03-29T20:19:31Z","author_association":"CONTRIBUTOR","body":"Also need to add this into `pinot-distribution/pinot-assembly.xml`","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/809684079/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/809727115","html_url":"https://github.com/apache/pinot/pull/6710#issuecomment-809727115","issue_url":"https://api.github.com/repos/apache/pinot/issues/6710","id":809727115,"node_id":"MDEyOklzc3VlQ29tbWVudDgwOTcyNzExNQ==","user":{"login":"mqliang","id":12423751,"node_id":"MDQ6VXNlcjEyNDIzNzUx","avatar_url":"https://avatars.githubusercontent.com/u/12423751?v=4","gravatar_id":"","url":"https://api.github.com/users/mqliang","html_url":"https://github.com/mqliang","followers_url":"https://api.github.com/users/mqliang/followers","following_url":"https://api.github.com/users/mqliang/following{/other_user}","gists_url":"https://api.github.com/users/mqliang/gists{/gist_id}","starred_url":"https://api.github.com/users/mqliang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mqliang/subscriptions","organizations_url":"https://api.github.com/users/mqliang/orgs","repos_url":"https://api.github.com/users/mqliang/repos","events_url":"https://api.github.com/users/mqliang/events{/privacy}","received_events_url":"https://api.github.com/users/mqliang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-29T21:29:48Z","updated_at":"2021-03-29T21:31:01Z","author_association":"CONTRIBUTOR","body":"@siddharthteotia @mcvsubbu Forced updated to delete all stale changes. PR is ready for review.\r\n\r\n> We can emit both costs separately. So have 2 server gauges. Similarly, log them in the QueryScheduler separately. But the serialized cost in the DataTable should be a single value (sum total of both exec cpu time cost and serialization cpu time cost)\r\n\r\nThis implementation is cumbersome -- either need serialize data table twice, or need hack the bytes to do some content replacement: We first add `executionThreadCpuTimeNs` into metadata when execute query, then add `serializationCpuTimeNs` into metadata when serialize data table, log and emit emit both costs separately. Then sum them together, remove them from metadata and add a `totalThreadCpuTimeNs` into metadata, then we need serialize datatable again to send back to broker. \r\n\r\nMy implementation  log and emit a sum metric only, which is much simpler and easy to read: in `datatable.toBytes()`, before serialize metadata, update the value of \"executionThreadCpuTimeNs\" to account data table serialization time. ","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/809727115/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/809739272","html_url":"https://github.com/apache/pinot/issues/6727#issuecomment-809739272","issue_url":"https://api.github.com/repos/apache/pinot/issues/6727","id":809739272,"node_id":"MDEyOklzc3VlQ29tbWVudDgwOTczOTI3Mg==","user":{"login":"xiangfu0","id":1202120,"node_id":"MDQ6VXNlcjEyMDIxMjA=","avatar_url":"https://avatars.githubusercontent.com/u/1202120?v=4","gravatar_id":"","url":"https://api.github.com/users/xiangfu0","html_url":"https://github.com/xiangfu0","followers_url":"https://api.github.com/users/xiangfu0/followers","following_url":"https://api.github.com/users/xiangfu0/following{/other_user}","gists_url":"https://api.github.com/users/xiangfu0/gists{/gist_id}","starred_url":"https://api.github.com/users/xiangfu0/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/xiangfu0/subscriptions","organizations_url":"https://api.github.com/users/xiangfu0/orgs","repos_url":"https://api.github.com/users/xiangfu0/repos","events_url":"https://api.github.com/users/xiangfu0/events{/privacy}","received_events_url":"https://api.github.com/users/xiangfu0/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-29T21:54:30Z","updated_at":"2021-03-29T21:54:30Z","author_association":"CONTRIBUTOR","body":"Thanks for bringing this up!\r\n\r\n+1000 on this, I think a maven plugin should be good enough.\r\n ","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/809739272/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/809753264","html_url":"https://github.com/apache/pinot/pull/6725#issuecomment-809753264","issue_url":"https://api.github.com/repos/apache/pinot/issues/6725","id":809753264,"node_id":"MDEyOklzc3VlQ29tbWVudDgwOTc1MzI2NA==","user":{"login":"codecov-io","id":8655789,"node_id":"MDQ6VXNlcjg2NTU3ODk=","avatar_url":"https://avatars.githubusercontent.com/u/8655789?v=4","gravatar_id":"","url":"https://api.github.com/users/codecov-io","html_url":"https://github.com/codecov-io","followers_url":"https://api.github.com/users/codecov-io/followers","following_url":"https://api.github.com/users/codecov-io/following{/other_user}","gists_url":"https://api.github.com/users/codecov-io/gists{/gist_id}","starred_url":"https://api.github.com/users/codecov-io/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/codecov-io/subscriptions","organizations_url":"https://api.github.com/users/codecov-io/orgs","repos_url":"https://api.github.com/users/codecov-io/repos","events_url":"https://api.github.com/users/codecov-io/events{/privacy}","received_events_url":"https://api.github.com/users/codecov-io/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-29T22:25:25Z","updated_at":"2021-03-29T22:25:25Z","author_association":"NONE","body":"# [Codecov](https://codecov.io/gh/apache/incubator-pinot/pull/6725?src=pr&el=h1) Report\n> Merging [#6725](https://codecov.io/gh/apache/incubator-pinot/pull/6725?src=pr&el=desc) (8603bff) into [master](https://codecov.io/gh/apache/incubator-pinot/commit/8dbb70ba08daf90f5e9067fcec545203ffefe215?el=desc) (8dbb70b) will **decrease** coverage by `30.21%`.\n> The diff coverage is `100.00%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/apache/incubator-pinot/pull/6725/graphs/tree.svg?width=650&height=150&src=pr&token=4ibza2ugkz)](https://codecov.io/gh/apache/incubator-pinot/pull/6725?src=pr&el=tree)\n\n```diff\n@@             Coverage Diff             @@\n##           master    #6725       +/-   ##\n===========================================\n- Coverage   73.83%   43.61%   -30.22%     \n===========================================\n  Files        1396     1402        +6     \n  Lines       67765    67915      +150     \n  Branches     9807     9821       +14     \n===========================================\n- Hits        50035    29622    -20413     \n- Misses      14485    35816    +21331     \n+ Partials     3245     2477      -768     \n```\n\n| Flag | Coverage Δ | |\n|---|---|---|\n| integration | `43.61% <100.00%> (+0.09%)` | :arrow_up: |\n| unittests | `?` | |\n\nFlags with carried forward coverage won't be shown. [Click here](https://docs.codecov.io/docs/carryforward-flags#carryforward-flags-in-the-pull-request-comment) to find out more.\n\n| [Impacted Files](https://codecov.io/gh/apache/incubator-pinot/pull/6725?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [...ot/controller/helix/core/util/HelixSetupUtils.java](https://codecov.io/gh/apache/incubator-pinot/pull/6725/diff?src=pr&el=tree#diff-cGlub3QtY29udHJvbGxlci9zcmMvbWFpbi9qYXZhL29yZy9hcGFjaGUvcGlub3QvY29udHJvbGxlci9oZWxpeC9jb3JlL3V0aWwvSGVsaXhTZXR1cFV0aWxzLmphdmE=) | `86.51% <100.00%> (-1.27%)` | :arrow_down: |\n| [...c/main/java/org/apache/pinot/common/tier/Tier.java](https://codecov.io/gh/apache/incubator-pinot/pull/6725/diff?src=pr&el=tree#diff-cGlub3QtY29tbW9uL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9jb21tb24vdGllci9UaWVyLmphdmE=) | `0.00% <0.00%> (-100.00%)` | :arrow_down: |\n| [...ava/org/apache/pinot/spi/data/MetricFieldSpec.java](https://codecov.io/gh/apache/incubator-pinot/pull/6725/diff?src=pr&el=tree#diff-cGlub3Qtc3BpL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9zcGkvZGF0YS9NZXRyaWNGaWVsZFNwZWMuamF2YQ==) | `0.00% <0.00%> (-100.00%)` | :arrow_down: |\n| [...ava/org/apache/pinot/spi/stream/LongMsgOffset.java](https://codecov.io/gh/apache/incubator-pinot/pull/6725/diff?src=pr&el=tree#diff-cGlub3Qtc3BpL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9zcGkvc3RyZWFtL0xvbmdNc2dPZmZzZXQuamF2YQ==) | `0.00% <0.00%> (-100.00%)` | :arrow_down: |\n| [...ava/org/apache/pinot/core/util/fst/FSTBuilder.java](https://codecov.io/gh/apache/incubator-pinot/pull/6725/diff?src=pr&el=tree#diff-cGlub3QtY29yZS9zcmMvbWFpbi9qYXZhL29yZy9hcGFjaGUvcGlub3QvY29yZS91dGlsL2ZzdC9GU1RCdWlsZGVyLmphdmE=) | `0.00% <0.00%> (-100.00%)` | :arrow_down: |\n| [...a/org/apache/pinot/spi/config/table/TableType.java](https://codecov.io/gh/apache/incubator-pinot/pull/6725/diff?src=pr&el=tree#diff-cGlub3Qtc3BpL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9zcGkvY29uZmlnL3RhYmxlL1RhYmxlVHlwZS5qYXZh) | `0.00% <0.00%> (-100.00%)` | :arrow_down: |\n| [...a/org/apache/pinot/spi/data/DateTimeFieldSpec.java](https://codecov.io/gh/apache/incubator-pinot/pull/6725/diff?src=pr&el=tree#diff-cGlub3Qtc3BpL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9zcGkvZGF0YS9EYXRlVGltZUZpZWxkU3BlYy5qYXZh) | `0.00% <0.00%> (-100.00%)` | :arrow_down: |\n| [...a/org/apache/pinot/spi/env/PinotConfiguration.java](https://codecov.io/gh/apache/incubator-pinot/pull/6725/diff?src=pr&el=tree#diff-cGlub3Qtc3BpL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9zcGkvZW52L1Bpbm90Q29uZmlndXJhdGlvbi5qYXZh) | `0.00% <0.00%> (-100.00%)` | :arrow_down: |\n| [...a/org/apache/pinot/core/upsert/RecordLocation.java](https://codecov.io/gh/apache/incubator-pinot/pull/6725/diff?src=pr&el=tree#diff-cGlub3QtY29yZS9zcmMvbWFpbi9qYXZhL29yZy9hcGFjaGUvcGlub3QvY29yZS91cHNlcnQvUmVjb3JkTG9jYXRpb24uamF2YQ==) | `0.00% <0.00%> (-100.00%)` | :arrow_down: |\n| [.../org/apache/pinot/spi/data/DimensionFieldSpec.java](https://codecov.io/gh/apache/incubator-pinot/pull/6725/diff?src=pr&el=tree#diff-cGlub3Qtc3BpL3NyYy9tYWluL2phdmEvb3JnL2FwYWNoZS9waW5vdC9zcGkvZGF0YS9EaW1lbnNpb25GaWVsZFNwZWMuamF2YQ==) | `0.00% <0.00%> (-100.00%)` | :arrow_down: |\n| ... and [896 more](https://codecov.io/gh/apache/incubator-pinot/pull/6725/diff?src=pr&el=tree-more) | |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/apache/incubator-pinot/pull/6725?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/apache/incubator-pinot/pull/6725?src=pr&el=footer). Last update [8dbb70b...8603bff](https://codecov.io/gh/apache/incubator-pinot/pull/6725?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/809753264/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/809819013","html_url":"https://github.com/apache/pinot/issues/6720#issuecomment-809819013","issue_url":"https://api.github.com/repos/apache/pinot/issues/6720","id":809819013,"node_id":"MDEyOklzc3VlQ29tbWVudDgwOTgxOTAxMw==","user":{"login":"Jackie-Jiang","id":17555551,"node_id":"MDQ6VXNlcjE3NTU1NTUx","avatar_url":"https://avatars.githubusercontent.com/u/17555551?v=4","gravatar_id":"","url":"https://api.github.com/users/Jackie-Jiang","html_url":"https://github.com/Jackie-Jiang","followers_url":"https://api.github.com/users/Jackie-Jiang/followers","following_url":"https://api.github.com/users/Jackie-Jiang/following{/other_user}","gists_url":"https://api.github.com/users/Jackie-Jiang/gists{/gist_id}","starred_url":"https://api.github.com/users/Jackie-Jiang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Jackie-Jiang/subscriptions","organizations_url":"https://api.github.com/users/Jackie-Jiang/orgs","repos_url":"https://api.github.com/users/Jackie-Jiang/repos","events_url":"https://api.github.com/users/Jackie-Jiang/events{/privacy}","received_events_url":"https://api.github.com/users/Jackie-Jiang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-30T00:40:45Z","updated_at":"2021-03-30T00:40:45Z","author_association":"CONTRIBUTOR","body":"This is awesome findings. Small suggestion to the benchmark is to return a value extracted from the data table to ensure the code is not optimized away by the JIT.","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/809819013/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/pinot/issues/comments/809929578","html_url":"https://github.com/apache/pinot/pull/6710#issuecomment-809929578","issue_url":"https://api.github.com/repos/apache/pinot/issues/6710","id":809929578,"node_id":"MDEyOklzc3VlQ29tbWVudDgwOTkyOTU3OA==","user":{"login":"mqliang","id":12423751,"node_id":"MDQ6VXNlcjEyNDIzNzUx","avatar_url":"https://avatars.githubusercontent.com/u/12423751?v=4","gravatar_id":"","url":"https://api.github.com/users/mqliang","html_url":"https://github.com/mqliang","followers_url":"https://api.github.com/users/mqliang/followers","following_url":"https://api.github.com/users/mqliang/following{/other_user}","gists_url":"https://api.github.com/users/mqliang/gists{/gist_id}","starred_url":"https://api.github.com/users/mqliang/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/mqliang/subscriptions","organizations_url":"https://api.github.com/users/mqliang/orgs","repos_url":"https://api.github.com/users/mqliang/repos","events_url":"https://api.github.com/users/mqliang/events{/privacy}","received_events_url":"https://api.github.com/users/mqliang/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2021-03-30T05:47:26Z","updated_at":"2021-03-30T05:47:26Z","author_association":"CONTRIBUTOR","body":"integration failed due to flaky issue:\r\n```\r\nFailed to execute goal org.apache.maven.plugins:maven-surefire-plugin:3.0.0-M5:test (default-test) on project pinot-integration-tests: There was a timeout in the fork -> [Help 1]\r\n```\r\n\r\nclose and re-open to trigger a re-run","reactions":{"url":"https://api.github.com/repos/apache/pinot/issues/comments/809929578/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]