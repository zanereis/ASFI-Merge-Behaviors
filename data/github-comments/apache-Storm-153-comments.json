[{"url":"https://api.github.com/repos/apache/storm/issues/comments/166442977","html_url":"https://github.com/apache/storm/pull/961#issuecomment-166442977","issue_url":"https://api.github.com/repos/apache/storm/issues/961","id":166442977,"node_id":"MDEyOklzc3VlQ29tbWVudDE2NjQ0Mjk3Nw==","user":{"login":"revans2","id":3441321,"node_id":"MDQ6VXNlcjM0NDEzMjE=","avatar_url":"https://avatars.githubusercontent.com/u/3441321?v=4","gravatar_id":"","url":"https://api.github.com/users/revans2","html_url":"https://github.com/revans2","followers_url":"https://api.github.com/users/revans2/followers","following_url":"https://api.github.com/users/revans2/following{/other_user}","gists_url":"https://api.github.com/users/revans2/gists{/gist_id}","starred_url":"https://api.github.com/users/revans2/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/revans2/subscriptions","organizations_url":"https://api.github.com/users/revans2/orgs","repos_url":"https://api.github.com/users/revans2/repos","events_url":"https://api.github.com/users/revans2/events{/privacy}","received_events_url":"https://api.github.com/users/revans2/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-12-21T22:35:45Z","updated_at":"2015-12-21T22:35:45Z","author_association":"CONTRIBUTOR","body":"+1\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/166442977/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612691109","html_url":"https://github.com/apache/storm/issues/5242#issuecomment-2612691109","issue_url":"https://api.github.com/repos/apache/storm/issues/5242","id":2612691109,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTExMDk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-12-21T22:35:46Z","updated_at":"2025-01-24T14:40:27Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user revans2 commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/961#issuecomment-166442977\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/961#issuecomment-166442977</a></p>\n\n<p>    +1</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612691109/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612690292","html_url":"https://github.com/apache/storm/issues/5237#issuecomment-2612690292","issue_url":"https://api.github.com/repos/apache/storm/issues/5237","id":2612690292,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTAyOTI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-12-21T23:15:55Z","updated_at":"2025-01-24T14:40:05Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user asfgit closed the pull request at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/958\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/958</a></p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612690292/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/166491686","html_url":"https://github.com/apache/storm/pull/962#issuecomment-166491686","issue_url":"https://api.github.com/repos/apache/storm/issues/962","id":166491686,"node_id":"MDEyOklzc3VlQ29tbWVudDE2NjQ5MTY4Ng==","user":{"login":"zhuoliu","id":11683054,"node_id":"MDQ6VXNlcjExNjgzMDU0","avatar_url":"https://avatars.githubusercontent.com/u/11683054?v=4","gravatar_id":"","url":"https://api.github.com/users/zhuoliu","html_url":"https://github.com/zhuoliu","followers_url":"https://api.github.com/users/zhuoliu/followers","following_url":"https://api.github.com/users/zhuoliu/following{/other_user}","gists_url":"https://api.github.com/users/zhuoliu/gists{/gist_id}","starred_url":"https://api.github.com/users/zhuoliu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zhuoliu/subscriptions","organizations_url":"https://api.github.com/users/zhuoliu/orgs","repos_url":"https://api.github.com/users/zhuoliu/repos","events_url":"https://api.github.com/users/zhuoliu/events{/privacy}","received_events_url":"https://api.github.com/users/zhuoliu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-12-22T03:14:20Z","updated_at":"2015-12-22T03:14:20Z","author_association":"NONE","body":"Nice catch. +1\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/166491686/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612631092","html_url":"https://github.com/apache/storm/issues/5037#issuecomment-2612631092","issue_url":"https://api.github.com/repos/apache/storm/issues/5037","id":2612631092,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MzEwOTI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-12-22T04:07:25Z","updated_at":"2025-01-24T14:14:07Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user roshannaik commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/936#discussion_r48220378\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/936#discussion_r48220378</a></p>\n\n<p>    &#8212; Diff: external/storm-hdfs/src/main/java/org/apache/storm/hdfs/spout/HdfsSpout.java &#8212;<br/>\n    @@ -0,0 +1,654 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + * <p/><br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + * <p/><br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +<br/>\n    +package org.apache.storm.hdfs.spout;<br/>\n    +<br/>\n    +import java.io.IOException;<br/>\n    +import java.lang.reflect.Constructor;<br/>\n    +import java.util.Collection;<br/>\n    +import java.util.HashMap;<br/>\n    +import java.util.List;<br/>\n    +import java.util.Map;<br/>\n    +import java.util.Timer;<br/>\n    +import java.util.TimerTask;<br/>\n    +import java.util.concurrent.LinkedBlockingQueue;<br/>\n    +import java.util.concurrent.atomic.AtomicBoolean;<br/>\n    +<br/>\n    +import backtype.storm.Config;<br/>\n    +import org.apache.hadoop.conf.Configuration;<br/>\n    +import org.apache.hadoop.fs.FileSystem;<br/>\n    +import org.apache.hadoop.fs.Path;<br/>\n    +import org.apache.storm.hdfs.common.HdfsUtils;<br/>\n    +import org.apache.storm.hdfs.common.security.HdfsSecurityUtil;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +import backtype.storm.spout.SpoutOutputCollector;<br/>\n    +import backtype.storm.task.TopologyContext;<br/>\n    +import backtype.storm.topology.OutputFieldsDeclarer;<br/>\n    +import backtype.storm.topology.base.BaseRichSpout;<br/>\n    +import backtype.storm.tuple.Fields;<br/>\n    +<br/>\n    +public class HdfsSpout extends BaseRichSpout {<br/>\n    +<br/>\n    +  private static final Logger LOG = LoggerFactory.getLogger(HdfsSpout.class);<br/>\n    +<br/>\n    +  private Path sourceDirPath;<br/>\n    +  private Path archiveDirPath;<br/>\n    +  private Path badFilesDirPath;<br/>\n    +  private Path lockDirPath;<br/>\n    +<br/>\n    +  private int commitFrequencyCount = Configs.DEFAULT_COMMIT_FREQ_COUNT;<br/>\n    +  private int commitFrequencySec = Configs.DEFAULT_COMMIT_FREQ_SEC;<br/>\n    +  private int maxDuplicates = Configs.DEFAULT_MAX_DUPLICATES;<br/>\n    +  private int lockTimeoutSec = Configs.DEFAULT_LOCK_TIMEOUT;<br/>\n    +  private boolean clocksInSync = true;<br/>\n    +<br/>\n    +  private ProgressTracker tracker = new ProgressTracker();<br/>\n    +<br/>\n    +  private FileSystem hdfs;<br/>\n    +  private FileReader reader;<br/>\n    +<br/>\n    +  private SpoutOutputCollector collector;<br/>\n    +  HashMap<MessageId, List<Object> > inflight = new HashMap<>();<br/>\n    +  LinkedBlockingQueue<HdfsUtils.Pair<MessageId, List<Object>>> retryList = new LinkedBlockingQueue<>();<br/>\n    +<br/>\n    +  private String inprogress_suffix = \".inprogress\";<br/>\n    +  private String ignoreSuffix = \".ignore\";<br/>\n    +<br/>\n    +  private Configuration hdfsConfig;<br/>\n    +  private String readerType;<br/>\n    +<br/>\n    +  private Map conf = null;<br/>\n    +  private FileLock lock;<br/>\n    +  private String spoutId = null;<br/>\n    +<br/>\n    +  HdfsUtils.Pair<Path,FileLock.LogEntry> lastExpiredLock = null;<br/>\n    +  private long lastExpiredLockTime = 0;<br/>\n    +<br/>\n    +  private long tupleCounter = 0;<br/>\n    +  private boolean ackEnabled = false;<br/>\n    +  private int acksSinceLastCommit = 0 ;<br/>\n    +  private final AtomicBoolean commitTimeElapsed = new AtomicBoolean(false);<br/>\n    +  private final Timer commitTimer = new Timer();<br/>\n    +  private boolean fileReadCompletely = false;<br/>\n    +<br/>\n    +  private String configKey = Configs.DEFAULT_HDFS_CONFIG_KEY; // key for hdfs kerberos configs<br/>\n    +<br/>\n    +  public HdfsSpout() </p>\n{\n    +  }\n<p>    +<br/>\n    +  public Path getLockDirPath() </p>\n{\n    +    return lockDirPath;\n    +  }\n<p>    +<br/>\n    +  public SpoutOutputCollector getCollector() </p>\n{\n    +    return collector;\n    +  }\n<p>    +<br/>\n    +  public HdfsSpout withConfigKey(String configKey)</p>\n{\n    +    this.configKey = configKey;\n    +    return this;\n    +  }\n<p>    +<br/>\n    +  public void nextTuple() {<br/>\n    +    LOG.debug(\"Next Tuple\");<br/>\n    +    // 1) First re-emit any previously failed tuples (from retryList)<br/>\n    +    if (!retryList.isEmpty()) </p>\n{\n    +      LOG.debug(\"Sending from retry list\");\n    +      HdfsUtils.Pair<MessageId, List<Object>> pair = retryList.remove();\n    +      emitData(pair.getValue(), pair.getKey());\n    +      return;\n    +    }\n<p>    +<br/>\n    +    if( ackEnabled  &&  tracker.size()>=maxDuplicates ) {<br/>\n    +      LOG.warn(\"Waiting for more ACKs before generating new tuples. \" +<br/>\n    +       \"Progress tracker size has reached limit {}\"<br/>\n    +      , maxDuplicates);<br/>\n    +      // Don't emit anything .. allow configured spout wait strategy to kick in<br/>\n    +      return;<br/>\n    +    }<br/>\n    +<br/>\n    +    // 2) If no failed tuples, then send tuples from hdfs<br/>\n    +    while (true) {<br/>\n    +      try {<br/>\n    +// 3) Select a new file if one is not open already<br/>\n    +if (reader == null) {<br/>\n    +  reader = pickNextFile();<br/>\n    +  if (reader == null) </p>\n{\n    +    LOG.info(\"Currently no new files to process under : \" + sourceDirPath);\n    +    return;\n    +  }\n<p>    +}<br/>\n    +<br/>\n    +// 4) Read record from file, emit to collector and record progress<br/>\n    +List<Object> tuple = reader.next();<br/>\n    +if (tuple != null) {<br/>\n    +  fileReadCompletely= false;<br/>\n    +  ++tupleCounter;<br/>\n    +  MessageId msgId = new MessageId(tupleCounter, reader.getFilePath(), reader.getFileOffset());<br/>\n    +  emitData(tuple, msgId);<br/>\n    +<br/>\n    +  if(!ackEnabled) </p>\n{\n    +    ++acksSinceLastCommit; // assume message is immediately acked in non-ack mode\n    +    commitProgress(reader.getFileOffset());\n    +  }\n<p> else </p>\n{\n    +    commitProgress(tracker.getCommitPosition());\n    +  }\n<p>    +  return;<br/>\n    +} else {<br/>\n    +  fileReadCompletely = true;<br/>\n    +  if(!ackEnabled) </p>\n{\n    +    markFileAsDone(reader.getFilePath());\n    +  }\n<p>    &#8212; End diff &#8211;</p>\n\n<p>    fixed. add UT.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612631092/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612631096","html_url":"https://github.com/apache/storm/issues/5037#issuecomment-2612631096","issue_url":"https://api.github.com/repos/apache/storm/issues/5037","id":2612631096,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MzEwOTY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-12-22T04:09:45Z","updated_at":"2025-01-24T14:14:07Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user roshannaik commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/936#discussion_r48220459\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/936#discussion_r48220459</a></p>\n\n<p>    &#8212; Diff: external/storm-hdfs/src/main/java/org/apache/storm/hdfs/spout/HdfsSpout.java &#8212;<br/>\n    @@ -0,0 +1,654 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + * <p/><br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + * <p/><br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +<br/>\n    +package org.apache.storm.hdfs.spout;<br/>\n    +<br/>\n    +import java.io.IOException;<br/>\n    +import java.lang.reflect.Constructor;<br/>\n    +import java.util.Collection;<br/>\n    +import java.util.HashMap;<br/>\n    +import java.util.List;<br/>\n    +import java.util.Map;<br/>\n    +import java.util.Timer;<br/>\n    +import java.util.TimerTask;<br/>\n    +import java.util.concurrent.LinkedBlockingQueue;<br/>\n    +import java.util.concurrent.atomic.AtomicBoolean;<br/>\n    +<br/>\n    +import backtype.storm.Config;<br/>\n    +import org.apache.hadoop.conf.Configuration;<br/>\n    +import org.apache.hadoop.fs.FileSystem;<br/>\n    +import org.apache.hadoop.fs.Path;<br/>\n    +import org.apache.storm.hdfs.common.HdfsUtils;<br/>\n    +import org.apache.storm.hdfs.common.security.HdfsSecurityUtil;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +import backtype.storm.spout.SpoutOutputCollector;<br/>\n    +import backtype.storm.task.TopologyContext;<br/>\n    +import backtype.storm.topology.OutputFieldsDeclarer;<br/>\n    +import backtype.storm.topology.base.BaseRichSpout;<br/>\n    +import backtype.storm.tuple.Fields;<br/>\n    +<br/>\n    +public class HdfsSpout extends BaseRichSpout {<br/>\n    +<br/>\n    +  private static final Logger LOG = LoggerFactory.getLogger(HdfsSpout.class);<br/>\n    +<br/>\n    +  private Path sourceDirPath;<br/>\n    +  private Path archiveDirPath;<br/>\n    +  private Path badFilesDirPath;<br/>\n    +  private Path lockDirPath;<br/>\n    +<br/>\n    +  private int commitFrequencyCount = Configs.DEFAULT_COMMIT_FREQ_COUNT;<br/>\n    +  private int commitFrequencySec = Configs.DEFAULT_COMMIT_FREQ_SEC;<br/>\n    +  private int maxDuplicates = Configs.DEFAULT_MAX_DUPLICATES;<br/>\n    +  private int lockTimeoutSec = Configs.DEFAULT_LOCK_TIMEOUT;<br/>\n    +  private boolean clocksInSync = true;<br/>\n    +<br/>\n    +  private ProgressTracker tracker = new ProgressTracker();<br/>\n    +<br/>\n    +  private FileSystem hdfs;<br/>\n    +  private FileReader reader;<br/>\n    +<br/>\n    +  private SpoutOutputCollector collector;<br/>\n    +  HashMap<MessageId, List<Object> > inflight = new HashMap<>();<br/>\n    +  LinkedBlockingQueue<HdfsUtils.Pair<MessageId, List<Object>>> retryList = new LinkedBlockingQueue<>();<br/>\n    +<br/>\n    +  private String inprogress_suffix = \".inprogress\";<br/>\n    +  private String ignoreSuffix = \".ignore\";<br/>\n    +<br/>\n    +  private Configuration hdfsConfig;<br/>\n    +  private String readerType;<br/>\n    +<br/>\n    +  private Map conf = null;<br/>\n    +  private FileLock lock;<br/>\n    +  private String spoutId = null;<br/>\n    +<br/>\n    +  HdfsUtils.Pair<Path,FileLock.LogEntry> lastExpiredLock = null;<br/>\n    +  private long lastExpiredLockTime = 0;<br/>\n    +<br/>\n    +  private long tupleCounter = 0;<br/>\n    +  private boolean ackEnabled = false;<br/>\n    +  private int acksSinceLastCommit = 0 ;<br/>\n    +  private final AtomicBoolean commitTimeElapsed = new AtomicBoolean(false);<br/>\n    +  private final Timer commitTimer = new Timer();<br/>\n    +  private boolean fileReadCompletely = false;<br/>\n    +<br/>\n    +  private String configKey = Configs.DEFAULT_HDFS_CONFIG_KEY; // key for hdfs kerberos configs<br/>\n    +<br/>\n    +  public HdfsSpout() </p>\n{\n    +  }\n<p>    +<br/>\n    +  public Path getLockDirPath() </p>\n{\n    +    return lockDirPath;\n    +  }\n<p>    +<br/>\n    +  public SpoutOutputCollector getCollector() </p>\n{\n    +    return collector;\n    +  }\n<p>    +<br/>\n    +  public HdfsSpout withConfigKey(String configKey)</p>\n{\n    +    this.configKey = configKey;\n    +    return this;\n    +  }\n<p>    +<br/>\n    +  public void nextTuple() {<br/>\n    +    LOG.debug(\"Next Tuple\");<br/>\n    +    // 1) First re-emit any previously failed tuples (from retryList)<br/>\n    +    if (!retryList.isEmpty()) </p>\n{\n    +      LOG.debug(\"Sending from retry list\");\n    +      HdfsUtils.Pair<MessageId, List<Object>> pair = retryList.remove();\n    +      emitData(pair.getValue(), pair.getKey());\n    +      return;\n    +    }\n<p>    +<br/>\n    +    if( ackEnabled  &&  tracker.size()>=maxDuplicates ) {<br/>\n    +      LOG.warn(\"Waiting for more ACKs before generating new tuples. \" +<br/>\n    +       \"Progress tracker size has reached limit {}\"<br/>\n    +      , maxDuplicates);<br/>\n    +      // Don't emit anything .. allow configured spout wait strategy to kick in<br/>\n    +      return;<br/>\n    +    }<br/>\n    +<br/>\n    +    // 2) If no failed tuples, then send tuples from hdfs<br/>\n    +    while (true) {<br/>\n    +      try {<br/>\n    +// 3) Select a new file if one is not open already<br/>\n    +if (reader == null) {<br/>\n    +  reader = pickNextFile();<br/>\n    +  if (reader == null) </p>\n{\n    +    LOG.info(\"Currently no new files to process under : \" + sourceDirPath);\n    +    return;\n    +  }\n<p>    +}<br/>\n    +<br/>\n    +// 4) Read record from file, emit to collector and record progress<br/>\n    +List<Object> tuple = reader.next();<br/>\n    +if (tuple != null) {<br/>\n    +  fileReadCompletely= false;<br/>\n    +  ++tupleCounter;<br/>\n    +  MessageId msgId = new MessageId(tupleCounter, reader.getFilePath(), reader.getFileOffset());<br/>\n    +  emitData(tuple, msgId);<br/>\n    +<br/>\n    +  if(!ackEnabled) </p>\n{\n    +    ++acksSinceLastCommit; // assume message is immediately acked in non-ack mode\n    +    commitProgress(reader.getFileOffset());\n    +  }\n<p> else </p>\n{\n    +    commitProgress(tracker.getCommitPosition());\n    +  }\n<p>    +  return;<br/>\n    +} else {<br/>\n    +  fileReadCompletely = true;<br/>\n    +  if(!ackEnabled) </p>\n{\n    +    markFileAsDone(reader.getFilePath());\n    +  }\n<p>    +}<br/>\n    +      } catch (IOException e) </p>\n{\n    +LOG.error(\"I/O Error processing at file location \" + getFileProgress(reader), e);\n    +// don't emit anything .. allow configured spout wait strategy to kick in\n    +return;\n    +      }\n<p> catch (ParseException e) </p>\n{\n    +LOG.error(\"Parsing error when processing at file location \" + getFileProgress(reader) +\n    +\". Skipping remainder of file.\", e);\n    +markFileAsBad(reader.getFilePath());\n    +// note: Unfortunately not emitting anything here due to parse error\n    +// will trigger the configured spout wait strategy which is unnecessary\n    +      }\n<p>    +    }<br/>\n    +<br/>\n    +  }<br/>\n    +<br/>\n    +  // will commit progress into lock file if commit threshold is reached<br/>\n    +  private void commitProgress(FileOffset position) {<br/>\n    +    if ( lock!=null && canCommitNow() ) {<br/>\n    +      try </p>\n{\n    +lock.heartbeat(position.toString());\n    +acksSinceLastCommit = 0;\n    +commitTimeElapsed.set(false);\n    +setupCommitElapseTimer();\n    +      }\n<p> catch (IOException e) </p>\n{\n    +LOG.error(\"Unable to commit progress Will retry later.\", e);\n    +      }\n<p>    +    }<br/>\n    +  }<br/>\n    +<br/>\n    +  private void setupCommitElapseTimer() {<br/>\n    +    if(commitFrequencySec<=0)<br/>\n    +      return;<br/>\n    +    TimerTask timerTask = new TimerTask() {<br/>\n    +      @Override<br/>\n    +      public void run() </p>\n{\n    +commitTimeElapsed.set(false);\n    +      }\n<p>    +    };<br/>\n    +    commitTimer.schedule(timerTask, commitFrequencySec * 1000);<br/>\n    +  }<br/>\n    +<br/>\n    +<br/>\n    +  private static String getFileProgress(FileReader reader) </p>\n{\n    +    return reader.getFilePath() + \" \" + reader.getFileOffset();\n    +  }\n<p>    +<br/>\n    +  private void markFileAsDone(Path filePath) {<br/>\n    +    fileReadCompletely = false;<br/>\n    +    try </p>\n{\n    +      renameCompletedFile(reader.getFilePath());\n    +    }\n<p> catch (IOException e) </p>\n{\n    +      LOG.error(\"Unable to archive completed file\" + filePath, e);\n    +    }\n<p>    +    unlockAndCloseReader();<br/>\n    +<br/>\n    +  }<br/>\n    +<br/>\n    +  private void markFileAsBad(Path file) {<br/>\n    +    String fileName = file.toString();<br/>\n    +    String fileNameMinusSuffix = fileName.substring(0, fileName.indexOf(inprogress_suffix));<br/>\n    +    String originalName = new Path(fileNameMinusSuffix).getName();<br/>\n    +    Path  newFile = new Path( badFilesDirPath + Path.SEPARATOR + originalName);<br/>\n    +<br/>\n    +    LOG.info(\"Moving bad file to \" + newFile);<br/>\n    +    try {<br/>\n    +      if (!hdfs.rename(file, newFile) ) </p>\n{ // seems this can fail by returning false or throwing exception\n    +throw new IOException(\"Move failed for bad file: \" + file); // convert false ret value to exception\n    +      }\n<p>    +    } catch (IOException e) </p>\n{\n    +      LOG.warn(\"Error moving bad file: \" + file + \". to destination :  \" + newFile);\n    +    }\n<p>    +<br/>\n    +    unlockAndCloseReader();<br/>\n    +  }<br/>\n    +<br/>\n    +  private void unlockAndCloseReader() {<br/>\n    +    reader.close();<br/>\n    +    reader = null;<br/>\n    +    try </p>\n{\n    +      lock.release();\n    +    }\n<p> catch (IOException e) </p>\n{\n    +      LOG.error(\"Unable to delete lock file : \" + this.lock.getLockFile(), e);\n    +    }\n<p>    +    lock = null;<br/>\n    +  }<br/>\n    +<br/>\n    +<br/>\n    +<br/>\n    +  protected void emitData(List<Object> tuple, MessageId id) {<br/>\n    +    LOG.debug(\"Emitting - {}\", id);<br/>\n    +    this.collector.emit(tuple, id);<br/>\n    +    inflight.put(id, tuple);<br/>\n    +  }<br/>\n    +<br/>\n    +  public void open(Map conf, TopologyContext context,  SpoutOutputCollector collector) {<br/>\n    +    this.conf = conf;<br/>\n    +    final String FILE_SYSTEM = \"filesystem\";<br/>\n    +    LOG.info(\"Opening\");<br/>\n    +    this.collector = collector;<br/>\n    +    this.hdfsConfig = new Configuration();<br/>\n    +    this.tupleCounter = 0;<br/>\n    +<br/>\n    +    for( Object k : conf.keySet() ) {<br/>\n    +      String key = k.toString();<br/>\n    +      if( ! FILE_SYSTEM.equalsIgnoreCase( key ) ) </p>\n{ // to support unit test only\n    +String val = conf.get(key).toString();\n    +LOG.info(\"Config setting : \" + key + \" = \" + val);\n    +this.hdfsConfig.set(key, val);\n    +      }\n<p>    +      else<br/>\n    +this.hdfs = (FileSystem) conf.get(key);<br/>\n    +<br/>\n    +      if(key.equalsIgnoreCase(Configs.READER_TYPE)) </p>\n{\n    +readerType = conf.get(key).toString();\n    +checkValidReader(readerType);\n    +      }\n<p>    +    }<br/>\n    +<br/>\n    +    // - Hdfs configs<br/>\n    +    this.hdfsConfig = new Configuration();<br/>\n    +    Map<String, Object> map = (Map<String, Object>)conf.get(this.configKey);<br/>\n    +    if(map != null){<br/>\n    +      for(String key : map.keySet())</p>\n{\n    +this.hdfsConfig.set(key, String.valueOf(map.get(key)));\n    +      }\n<p>    +    }<br/>\n    +<br/>\n    +    try </p>\n{\n    +      HdfsSecurityUtil.login(conf, hdfsConfig);\n    +    }\n<p> catch (IOException e) </p>\n{\n    +      LOG.error(\"Failed to open \" + sourceDirPath);\n    +      throw new RuntimeException(e);\n    +    }\n<p>    +<br/>\n    +    // &#8211; source dir config<br/>\n    +    if ( !conf.containsKey(Configs.SOURCE_DIR) ) </p>\n{\n    +      LOG.error(Configs.SOURCE_DIR + \" setting is required\");\n    +      throw new RuntimeException(Configs.SOURCE_DIR + \" setting is required\");\n    +    }\n<p>    +    this.sourceDirPath = new Path( conf.get(Configs.SOURCE_DIR).toString() );<br/>\n    +<br/>\n    +    // &#8211; archive dir config<br/>\n    +    if ( !conf.containsKey(Configs.ARCHIVE_DIR) ) </p>\n{\n    +      LOG.error(Configs.ARCHIVE_DIR + \" setting is required\");\n    +      throw new RuntimeException(Configs.ARCHIVE_DIR + \" setting is required\");\n    +    }\n<p>    +    this.archiveDirPath = new Path( conf.get(Configs.ARCHIVE_DIR).toString() );<br/>\n    +<br/>\n    +    try {<br/>\n    +      if(hdfs.exists(archiveDirPath)) {<br/>\n    +if(! hdfs.isDirectory(archiveDirPath) ) </p>\n{\n    +  LOG.error(\"Archive directory is a file. \" + archiveDirPath);\n    +  throw new RuntimeException(\"Archive directory is a file. \" + archiveDirPath);\n    +}\n<p>    +      } else if(! hdfs.mkdirs(archiveDirPath) ) </p>\n{\n    +LOG.error(\"Unable to create archive directory. \" + archiveDirPath);\n    +throw new RuntimeException(\"Unable to create archive directory \" + archiveDirPath);\n    +      }\n<p>    +    } catch (IOException e) </p>\n{\n    +      LOG.error(\"Unable to create archive dir \", e);\n    +      throw new RuntimeException(\"Unable to create archive directory \", e);\n    +    }\n<p>    +<br/>\n    +    // &#8211; bad files dir config<br/>\n    +    if ( !conf.containsKey(Configs.BAD_DIR) ) </p>\n{\n    +      LOG.error(Configs.BAD_DIR + \" setting is required\");\n    +      throw new RuntimeException(Configs.BAD_DIR + \" setting is required\");\n    +    }\n<p>    +<br/>\n    +    this.badFilesDirPath = new Path(conf.get(Configs.BAD_DIR).toString());<br/>\n    +<br/>\n    +    try {<br/>\n    +      if(hdfs.exists(badFilesDirPath)) {<br/>\n    +if(! hdfs.isDirectory(badFilesDirPath) ) </p>\n{\n    +  LOG.error(\"Bad files directory is a file: \" + badFilesDirPath);\n    +  throw new RuntimeException(\"Bad files directory is a file: \" + badFilesDirPath);\n    +}\n<p>    +      } else if(! hdfs.mkdirs(badFilesDirPath) ) </p>\n{\n    +LOG.error(\"Unable to create directory for bad files: \" + badFilesDirPath);\n    +throw new RuntimeException(\"Unable to create a directory for bad files: \" + badFilesDirPath);\n    +      }\n<p>    +    } catch (IOException e) </p>\n{\n    +      LOG.error(\"Unable to create archive dir \", e);\n    +      throw new RuntimeException(e.getMessage(), e);\n    +    }\n<p>    +<br/>\n    +    // &#8211; ignore filename suffix<br/>\n    +    if ( conf.containsKey(Configs.IGNORE_SUFFIX) ) </p>\n{\n    +      this.ignoreSuffix = conf.get(Configs.IGNORE_SUFFIX).toString();\n    +    }\n<p>    +<br/>\n    +    // &#8211; lock dir config<br/>\n    +    String lockDir = !conf.containsKey(Configs.LOCK_DIR) ? getDefaultLockDir(sourceDirPath) : conf.get(Configs.LOCK_DIR).toString() ;<br/>\n    +    this.lockDirPath = new Path(lockDir);<br/>\n    +<br/>\n    +    try {<br/>\n    +      if(hdfs.exists(lockDirPath)) {<br/>\n    +if(! hdfs.isDirectory(lockDirPath) ) </p>\n{\n    +  LOG.error(\"Lock directory is a file: \" + lockDirPath);\n    +  throw new RuntimeException(\"Lock directory is a file: \" + lockDirPath);\n    +}\n<p>    +      } else if(! hdfs.mkdirs(lockDirPath) ) </p>\n{\n    +LOG.error(\"Unable to create lock directory: \" + lockDirPath);\n    +throw new RuntimeException(\"Unable to create lock directory: \" + lockDirPath);\n    +      }\n<p>    +    } catch (IOException e) </p>\n{\n    +      LOG.error(\"Unable to create lock dir: \" + lockDirPath, e);\n    +      throw new RuntimeException(e.getMessage(), e);\n    +    }\n<p>    +<br/>\n    +    // &#8211; lock timeout<br/>\n    +    if( conf.get(Configs.LOCK_TIMEOUT) !=null )<br/>\n    +      this.lockTimeoutSec =  Integer.parseInt(conf.get(Configs.LOCK_TIMEOUT).toString());<br/>\n    +<br/>\n    +    // &#8211; enable/disable ACKing<br/>\n    +    Object ackers = conf.get(Config.TOPOLOGY_ACKER_EXECUTORS);<br/>\n    +    if( ackers!=null )<br/>\n    +      this.ackEnabled = ( Integer.parseInt( ackers.toString() ) > 0 );<br/>\n    +    else<br/>\n    +      this.ackEnabled = false;<br/>\n    +<br/>\n    +    // &#8211; commit frequency - count<br/>\n    +    if( conf.get(Configs.COMMIT_FREQ_COUNT) != null )<br/>\n    +      commitFrequencyCount = Integer.parseInt( conf.get(Configs.COMMIT_FREQ_COUNT).toString() );<br/>\n    +<br/>\n    +    // &#8211; commit frequency - seconds<br/>\n    +    if( conf.get(Configs.COMMIT_FREQ_SEC) != null )<br/>\n    +      commitFrequencySec = Integer.parseInt( conf.get(Configs.COMMIT_FREQ_SEC).toString() );<br/>\n    +<br/>\n    +    // &#8211; max duplicate<br/>\n    +    if( conf.get(Configs.MAX_DUPLICATE) !=null )<br/>\n    +      maxDuplicates = Integer.parseInt( conf.get(Configs.MAX_DUPLICATE).toString() );<br/>\n    +<br/>\n    +    // &#8211; clocks in sync<br/>\n    +    if( conf.get(Configs.CLOCKS_INSYNC) !=null )<br/>\n    +      clocksInSync = Boolean.parseBoolean(conf.get(Configs.CLOCKS_INSYNC).toString());<br/>\n    +<br/>\n    +    // &#8211; spout id<br/>\n    +    spoutId = context.getThisComponentId();<br/>\n    +<br/>\n    +    // setup timer for commit elapse time tracking<br/>\n    +    setupCommitElapseTimer();<br/>\n    +  }<br/>\n    +<br/>\n    +  private String getDefaultLockDir(Path sourceDirPath) </p>\n{\n    +    return sourceDirPath.toString() + Path.SEPARATOR + Configs.DEFAULT_LOCK_DIR;\n    +  }\n<p>    +<br/>\n    +  private static void checkValidReader(String readerType) {<br/>\n    +    if(readerType.equalsIgnoreCase(Configs.TEXT)  || readerType.equalsIgnoreCase(Configs.SEQ) )<br/>\n    +      return;<br/>\n    +    try </p>\n{\n    +      Class<?> classType = Class.forName(readerType);\n    +      classType.getConstructor(FileSystem.class, Path.class, Map.class);\n    +      return;\n    +    }\n<p> catch (ClassNotFoundException e) </p>\n{\n    +      LOG.error(readerType + \" not found in classpath.\", e);\n    +      throw new IllegalArgumentException(readerType + \" not found in classpath.\", e);\n    +    }\n<p> catch (NoSuchMethodException e) </p>\n{\n    +      LOG.error(readerType + \" is missing the expected constructor for Readers.\", e);\n    +      throw new IllegalArgumentException(readerType + \" is missing the expected constuctor for Readers.\");\n    +    }\n<p>    +  }<br/>\n    +<br/>\n    +  @Override<br/>\n    +  public void ack(Object msgId) {<br/>\n    +    MessageId id = (MessageId) msgId;<br/>\n    +    inflight.remove(id);<br/>\n    +    ++acksSinceLastCommit;<br/>\n    +    tracker.recordAckedOffset(id.offset);<br/>\n    +    commitProgress(tracker.getCommitPosition());<br/>\n    +    if(fileReadCompletely) </p>\n{\n    +      markFileAsDone(reader.getFilePath());\n    +      reader = null;\n    +    }\n<p>    &#8212; End diff &#8211;</p>\n\n<p>    fixed. thanks.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612631096/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/166507378","html_url":"https://github.com/apache/storm/pull/961#issuecomment-166507378","issue_url":"https://api.github.com/repos/apache/storm/issues/961","id":166507378,"node_id":"MDEyOklzc3VlQ29tbWVudDE2NjUwNzM3OA==","user":{"login":"vesense","id":6711230,"node_id":"MDQ6VXNlcjY3MTEyMzA=","avatar_url":"https://avatars.githubusercontent.com/u/6711230?v=4","gravatar_id":"","url":"https://api.github.com/users/vesense","html_url":"https://github.com/vesense","followers_url":"https://api.github.com/users/vesense/followers","following_url":"https://api.github.com/users/vesense/following{/other_user}","gists_url":"https://api.github.com/users/vesense/gists{/gist_id}","starred_url":"https://api.github.com/users/vesense/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vesense/subscriptions","organizations_url":"https://api.github.com/users/vesense/orgs","repos_url":"https://api.github.com/users/vesense/repos","events_url":"https://api.github.com/users/vesense/events{/privacy}","received_events_url":"https://api.github.com/users/vesense/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-12-22T05:10:46Z","updated_at":"2015-12-22T05:10:46Z","author_association":"MEMBER","body":"LGTM +1\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/166507378/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612691114","html_url":"https://github.com/apache/storm/issues/5242#issuecomment-2612691114","issue_url":"https://api.github.com/repos/apache/storm/issues/5242","id":2612691114,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTExMTQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-12-22T05:10:46Z","updated_at":"2025-01-24T14:40:27Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user vesense commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/961#issuecomment-166507378\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/961#issuecomment-166507378</a></p>\n\n<p>    LGTM +1</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612691114/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612626964","html_url":"https://github.com/apache/storm/issues/5014#issuecomment-2612626964","issue_url":"https://api.github.com/repos/apache/storm/issues/5014","id":2612626964,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MjY5NjQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-12-22T11:40:12Z","updated_at":"2025-01-24T14:12:18Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>GitHub user arunmahadevan opened a pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/963\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/963</a></p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1176\" title=\"Checkpoint window evaluated state and use this to prune duplicate evaluations\" class=\"issue-link\" data-issue-key=\"STORM-1176\"><del>STORM-1176</del></a> Checkpoint window evaluated/expired state</p>\n\n<p>    This uses the stateful bolt abstractions introduced in PR# 939 to checkpoint the last expired and last evaluated tuple message ids. IStatefulWindowedBolt exposes the framework managed state to the windowed bolts so that the state of the windowing operation can be saved. The last expired and last evaluated message ids are saved by `StatefulWindowedBoltExecutor` along with the state of the windowing operation. This last expired/evaluated ids are used during recovery to avoid duplicate window evaluations. This still provides at least once semantics but minimizes the duplicate window evaluations.</p>\n\n<p>    Note: This PR includes the commits proposed in <a href=\"https://github.com/apache/storm/pull/939\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/939</a> since it builds on top of that.</p>\n\n<p>You can merge this pull request into a Git repository by running:</p>\n\n<p>    $ git pull <a href=\"https://github.com/arunmahadevan/storm\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/arunmahadevan/storm</a> windowing-statefulwindow</p>\n\n<p>Alternatively you can review and apply these changes as the patch at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/963.patch\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/963.patch</a></p>\n\n<p>To close this pull request, make a commit to your master/trunk branch<br/>\nwith (at least) the following in the commit message:</p>\n\n<p>    This closes #963</p>\n\n<hr />\n<p>commit a0fc48042fd8da20c9e4b748b3f73a1c4bbd4868<br/>\nAuthor: Arun Mahadevan <aiyer@hortonworks.com><br/>\nDate:   2015-11-30T11:06:10Z</p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1175\" title=\"State store for windowing operations\" class=\"issue-link\" data-issue-key=\"STORM-1175\"><del>STORM-1175</del></a> State store for windowing operations</p>\n\n<p>    Added IStatefulBolt abstraction that can be implemented by bolts which requires<br/>\n    its state to be checkpointed periodically. State implementations based on<br/>\n    key-value mapping store are added. There is a default in-memory based implementation<br/>\n    and optional redis based implementation that provides state persistence. An internal<br/>\n    CheckpointSpout periodically emits checkpoint tuples which flows through the<br/>\n    topology DAG to take a consistent snapshot of the state across all components.</p>\n\n<p>    There is still pending work to capture the evaluated/expired state of the tuples<br/>\n    in the Window and use it to prune duplicate window evaluations during restart. This can<br/>\n    be built on top of the stateful bolt abstractions and will be done as part of <a href=\"https://issues.apache.org/jira/browse/STORM-1176\" title=\"Checkpoint window evaluated state and use this to prune duplicate evaluations\" class=\"issue-link\" data-issue-key=\"STORM-1176\"><del>STORM-1176</del></a></p>\n\n<p>commit 8f929251a62e9bfc47b39f9c4f6640ab2d2a63b5<br/>\nAuthor: Arun Mahadevan <aiyer@hortonworks.com><br/>\nDate:   2015-12-10T20:09:12Z</p>\n\n<p>    Refactored unit tests</p>\n\n<p>commit 92e528a6beed74b8568878c30756d4bcb8e31405<br/>\nAuthor: Arun Mahadevan <aiyer@hortonworks.com><br/>\nDate:   2015-12-22T06:58:30Z</p>\n\n<p>    Refactoring for accomodating windowing with state</p>\n\n<p>commit c9af41870366e4c8b6f2dd0d86770c09859459bd<br/>\nAuthor: Arun Mahadevan <aiyer@hortonworks.com><br/>\nDate:   2015-12-22T07:12:53Z</p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1176\" title=\"Checkpoint window evaluated state and use this to prune duplicate evaluations\" class=\"issue-link\" data-issue-key=\"STORM-1176\"><del>STORM-1176</del></a> Checkpoint window evaluated/expired state</p>\n\n<p>    This builds on top of the stateful bolt abstractions introduced in<br/>\n    PR# 939 and uses it to checkpoint the last expired and last evaluated<br/>\n    tuple message ids. IStatefulWindowedBolt exposes the framework managed state<br/>\n    to the users windowed bolt so that the state of the windowing<br/>\n    operation can be saved. The last expired and last evaluated message ids<br/>\n    are saved behind the scene along with the state of the windowing operation and this is<br/>\n    used during recovery to avoid duplicate window evaluations. This still provides<br/>\n    atleast once semantics but reduces the duplicate window evaluations.</p>\n\n<hr />","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612626964/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/166666775","html_url":"https://github.com/apache/storm/pull/962#issuecomment-166666775","issue_url":"https://api.github.com/repos/apache/storm/issues/962","id":166666775,"node_id":"MDEyOklzc3VlQ29tbWVudDE2NjY2Njc3NQ==","user":{"login":"ptgoetz","id":260896,"node_id":"MDQ6VXNlcjI2MDg5Ng==","avatar_url":"https://avatars.githubusercontent.com/u/260896?v=4","gravatar_id":"","url":"https://api.github.com/users/ptgoetz","html_url":"https://github.com/ptgoetz","followers_url":"https://api.github.com/users/ptgoetz/followers","following_url":"https://api.github.com/users/ptgoetz/following{/other_user}","gists_url":"https://api.github.com/users/ptgoetz/gists{/gist_id}","starred_url":"https://api.github.com/users/ptgoetz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ptgoetz/subscriptions","organizations_url":"https://api.github.com/users/ptgoetz/orgs","repos_url":"https://api.github.com/users/ptgoetz/repos","events_url":"https://api.github.com/users/ptgoetz/events{/privacy}","received_events_url":"https://api.github.com/users/ptgoetz/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-12-22T16:30:39Z","updated_at":"2015-12-22T16:30:39Z","author_association":"MEMBER","body":"+1\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/166666775/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612691226","html_url":"https://github.com/apache/storm/issues/5243#issuecomment-2612691226","issue_url":"https://api.github.com/repos/apache/storm/issues/5243","id":2612691226,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTEyMjY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-12-22T17:29:48Z","updated_at":"2025-01-24T14:40:30Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>GitHub user d2r opened a pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/964\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/964</a></p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1408\" title=\"storm-hdfs tests are not cleaned up maven clean:clean does not delete build directory\" class=\"issue-link\" data-issue-key=\"STORM-1408\"><del>STORM-1408</del></a> clean up the build directory created by tests</p>\n\n<p>    This tells the maven-clean-plugin to remove the build directory when clean:clean is executed.</p>\n\n<p>You can merge this pull request into a Git repository by running:</p>\n\n<p>    $ git pull <a href=\"https://github.com/d2r/storm\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/d2r/storm</a> storm-1408-storm-hdfs-mvn-clean</p>\n\n<p>Alternatively you can review and apply these changes as the patch at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/964.patch\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/964.patch</a></p>\n\n<p>To close this pull request, make a commit to your master/trunk branch<br/>\nwith (at least) the following in the commit message:</p>\n\n<p>    This closes #964</p>\n\n<hr />\n<p>commit 37401835f145f6b509b63d3f16c93071473da7ed<br/>\nAuthor: Derek Dagit <derekd@yahoo-inc.com><br/>\nDate:   2015-12-22T17:28:52Z</p>\n\n<p>    clean up the build directory created by tests</p>\n\n<hr />","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612691226/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/166681368","html_url":"https://github.com/apache/storm/pull/964#issuecomment-166681368","issue_url":"https://api.github.com/repos/apache/storm/issues/964","id":166681368,"node_id":"MDEyOklzc3VlQ29tbWVudDE2NjY4MTM2OA==","user":{"login":"dossett","id":7207582,"node_id":"MDQ6VXNlcjcyMDc1ODI=","avatar_url":"https://avatars.githubusercontent.com/u/7207582?v=4","gravatar_id":"","url":"https://api.github.com/users/dossett","html_url":"https://github.com/dossett","followers_url":"https://api.github.com/users/dossett/followers","following_url":"https://api.github.com/users/dossett/following{/other_user}","gists_url":"https://api.github.com/users/dossett/gists{/gist_id}","starred_url":"https://api.github.com/users/dossett/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/dossett/subscriptions","organizations_url":"https://api.github.com/users/dossett/orgs","repos_url":"https://api.github.com/users/dossett/repos","events_url":"https://api.github.com/users/dossett/events{/privacy}","received_events_url":"https://api.github.com/users/dossett/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-12-22T17:33:48Z","updated_at":"2015-12-22T17:33:48Z","author_association":"CONTRIBUTOR","body":"+1\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/166681368/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612691238","html_url":"https://github.com/apache/storm/issues/5243#issuecomment-2612691238","issue_url":"https://api.github.com/repos/apache/storm/issues/5243","id":2612691238,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTEyMzg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-12-22T17:33:49Z","updated_at":"2025-01-24T14:40:30Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user dossett commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/964#issuecomment-166681368\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/964#issuecomment-166681368</a></p>\n\n<p>    +1</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612691238/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612626709","html_url":"https://github.com/apache/storm/issues/5013#issuecomment-2612626709","issue_url":"https://api.github.com/repos/apache/storm/issues/5013","id":2612626709,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MjY3MDk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-12-22T17:52:30Z","updated_at":"2025-01-24T14:12:12Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user harshach commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/939#discussion_r48278864\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/939#discussion_r48278864</a></p>\n\n<p>    &#8212; Diff: external/storm-redis/src/main/java/org/apache/storm/redis/state/RedisKeyValueState.java &#8212;<br/>\n    @@ -0,0 +1,302 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.redis.state;<br/>\n    +<br/>\n    +import backtype.storm.state.DefaultStateSerializer;<br/>\n    +import backtype.storm.state.KeyValueState;<br/>\n    +import backtype.storm.state.Serializer;<br/>\n    +import org.apache.storm.redis.common.config.JedisPoolConfig;<br/>\n    +import org.apache.storm.redis.common.container.JedisCommandsContainerBuilder;<br/>\n    +import org.apache.storm.redis.common.container.JedisCommandsInstanceContainer;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +import redis.clients.jedis.JedisCommands;<br/>\n    +import sun.misc.BASE64Decoder;<br/>\n    +import sun.misc.BASE64Encoder;<br/>\n    +<br/>\n    +import java.io.IOException;<br/>\n    +import java.util.Collections;<br/>\n    +import java.util.HashMap;<br/>\n    +import java.util.Map;<br/>\n    +import java.util.concurrent.ConcurrentHashMap;<br/>\n    +<br/>\n    +/**<br/>\n    + * A redis based implementation that persists the state in Redis.<br/>\n    + */<br/>\n    +public class RedisKeyValueState<K, V> implements KeyValueState<K, V> {<br/>\n    +    private static final Logger LOG = LoggerFactory.getLogger(RedisKeyValueState.class);<br/>\n    +    private static final String COMMIT_TXID_KEY = \"$commit\";<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    any reason for using $ notation here.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612626709/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/166690047","html_url":"https://github.com/apache/storm/pull/962#issuecomment-166690047","issue_url":"https://api.github.com/repos/apache/storm/issues/962","id":166690047,"node_id":"MDEyOklzc3VlQ29tbWVudDE2NjY5MDA0Nw==","user":{"login":"satishd","id":2577761,"node_id":"MDQ6VXNlcjI1Nzc3NjE=","avatar_url":"https://avatars.githubusercontent.com/u/2577761?v=4","gravatar_id":"","url":"https://api.github.com/users/satishd","html_url":"https://github.com/satishd","followers_url":"https://api.github.com/users/satishd/followers","following_url":"https://api.github.com/users/satishd/following{/other_user}","gists_url":"https://api.github.com/users/satishd/gists{/gist_id}","starred_url":"https://api.github.com/users/satishd/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/satishd/subscriptions","organizations_url":"https://api.github.com/users/satishd/orgs","repos_url":"https://api.github.com/users/satishd/repos","events_url":"https://api.github.com/users/satishd/events{/privacy}","received_events_url":"https://api.github.com/users/satishd/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-12-22T17:54:15Z","updated_at":"2015-12-22T17:54:15Z","author_association":"MEMBER","body":"+1\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/166690047/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612626712","html_url":"https://github.com/apache/storm/issues/5013#issuecomment-2612626712","issue_url":"https://api.github.com/repos/apache/storm/issues/5013","id":2612626712,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MjY3MTI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-12-22T17:55:33Z","updated_at":"2025-01-24T14:12:12Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user harshach commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/939#discussion_r48279143\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/939#discussion_r48279143</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/Config.java &#8212;<br/>\n    @@ -1491,6 +1491,29 @@<br/>\n public static final String TOPOLOGY_COMPONENT_CPU_PCORE_PERCENT = \"topology.component.cpu.pcore.percent\";</p>\n\n<p> /**<br/>\n    +     * The class name of the </p>\n{@link backtype.storm.state.StateProvider} implementation. If not specified<br/>\n    +     * defaults to {@link backtype.storm.state.InMemoryKeyValueStateProvider}. This can be overridden<br/>\n    +     * at the component level.<br/>\n    +     */<br/>\n    +    @isString<br/>\n    +    public static final String TOPOLOGY_STATE_PROVIDER = \"topology.state.provider\";<br/>\n    +<br/>\n    +    /**<br/>\n    +     * The configuration specific to the {@link backtype.storm.state.StateProvider}\n<p> implementation.<br/>\n    +     * This can be overridden at the component level.<br/>\n    +     */<br/>\n    +    @isString<br/>\n    +    public static final String TOPOLOGY_STATE_PROVIDER_CONFIG = \"topology.state.provider.config\";<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    whats is this config suppose to do ? will it accept it file that contains config?</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612626712/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612626718","html_url":"https://github.com/apache/storm/issues/5013#issuecomment-2612626718","issue_url":"https://api.github.com/repos/apache/storm/issues/5013","id":2612626718,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MjY3MTg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-12-22T17:56:11Z","updated_at":"2025-01-24T14:12:12Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user harshach commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/939#discussion_r48279201\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/939#discussion_r48279201</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/spout/CheckPointState.java &#8212;<br/>\n    @@ -0,0 +1,78 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package backtype.storm.spout;<br/>\n    +<br/>\n    +/**<br/>\n    + * Captures the current state of the transaction in<br/>\n    + * </p>\n{@link CheckpointSpout}\n<p>    + */<br/>\n    +public class CheckPointState {<br/>\n    +    public long txid;<br/>\n    +    public State state;<br/>\n    +<br/>\n    +    public enum State {<br/>\n    +/**<br/>\n    + * The checkpoint spout has committed the transaction.<br/>\n    + */<br/>\n    +COMMITTED,<br/>\n    +/**<br/>\n    + * The checkpoint spout has started committing the transaction.<br/>\n    + */<br/>\n    +COMMITTING,<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    should we call this as COMMIT_IN_PROGRESS</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612626718/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612626722","html_url":"https://github.com/apache/storm/issues/5013#issuecomment-2612626722","issue_url":"https://api.github.com/repos/apache/storm/issues/5013","id":2612626722,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MjY3MjI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-12-22T17:56:33Z","updated_at":"2025-01-24T14:12:12Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user harshach commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/939#discussion_r48279238\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/939#discussion_r48279238</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/spout/CheckPointState.java &#8212;<br/>\n    @@ -0,0 +1,78 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package backtype.storm.spout;<br/>\n    +<br/>\n    +/**<br/>\n    + * Captures the current state of the transaction in<br/>\n    + * </p>\n{@link CheckpointSpout}\n<p>    + */<br/>\n    +public class CheckPointState {<br/>\n    +    public long txid;<br/>\n    +    public State state;<br/>\n    +<br/>\n    +    public enum State {<br/>\n    +/**<br/>\n    + * The checkpoint spout has committed the transaction.<br/>\n    + */<br/>\n    +COMMITTED,<br/>\n    +/**<br/>\n    + * The checkpoint spout has started committing the transaction.<br/>\n    + */<br/>\n    +COMMITTING,<br/>\n    +/**<br/>\n    + * The checkpoint spout has started preparing the transaction for commit.<br/>\n    + */<br/>\n    +PREPARING<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    PREPARE probably better</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612626722/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612626725","html_url":"https://github.com/apache/storm/issues/5013#issuecomment-2612626725","issue_url":"https://api.github.com/repos/apache/storm/issues/5013","id":2612626725,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MjY3MjU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-12-22T17:57:02Z","updated_at":"2025-01-24T14:12:12Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user Parth-Brahmbhatt commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/939#discussion_r48279308\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/939#discussion_r48279308</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/spout/CheckPointState.java &#8212;<br/>\n    @@ -0,0 +1,78 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package backtype.storm.spout;<br/>\n    +<br/>\n    +/**<br/>\n    + * Captures the current state of the transaction in<br/>\n    + * </p>\n{@link CheckpointSpout}\n<p>    + */<br/>\n    +public class CheckPointState {<br/>\n    +    public long txid;<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    shouldn't these be private fields with getters?</p>\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612626725/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612626734","html_url":"https://github.com/apache/storm/issues/5013#issuecomment-2612626734","issue_url":"https://api.github.com/repos/apache/storm/issues/5013","id":2612626734,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MjY3MzQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-12-22T17:58:40Z","updated_at":"2025-01-24T14:12:12Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user harshach commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/939#discussion_r48279456\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/939#discussion_r48279456</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/spout/CheckpointSpout.java &#8212;<br/>\n    @@ -0,0 +1,280 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package backtype.storm.spout;<br/>\n    +<br/>\n    +import backtype.storm.Config;<br/>\n    +import backtype.storm.state.KeyValueState;<br/>\n    +import backtype.storm.state.StateFactory;<br/>\n    +import backtype.storm.task.TopologyContext;<br/>\n    +import backtype.storm.topology.OutputFieldsDeclarer;<br/>\n    +import backtype.storm.topology.base.BaseRichSpout;<br/>\n    +import backtype.storm.tuple.Fields;<br/>\n    +import backtype.storm.tuple.Tuple;<br/>\n    +import backtype.storm.tuple.Values;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +import java.util.Map;<br/>\n    +import static backtype.storm.spout.CheckPointState.State.COMMITTED;<br/>\n    +import static backtype.storm.spout.CheckPointState.State.COMMITTING;<br/>\n    +import static backtype.storm.spout.CheckPointState.State.PREPARING;<br/>\n    +<br/>\n    +/**<br/>\n    + * Emits checkpoint tuples which is used to save the state of the </p>\n{@link backtype.storm.topology.IStatefulComponent}\n<p>    + * across the topology. If a topology contains Stateful bolts, Checkpoint spouts are automatically added<br/>\n    + * to the topology. There is only one Checkpoint task per topology.<br/>\n    + * <p/><br/>\n    + * Checkpoint spout stores its internal state in a </p>\n{@link KeyValueState}\n<p>. The state transitions are as follows.<br/>\n    + * <p/><br/>\n    + * <pre><br/>\n    + *  ROLLBACK(tx2)<br/>\n    + *       <-------------  PREPARE(tx2)     COMMIT(tx2)<br/>\n    + * COMMITTED(tx1)-------------> PREPARING(tx2) --------------> COMMITTING(tx2) -----------------> COMMITTED (tx2)<br/>\n    + *<br/>\n    + *<br/>\n    + * </pre><br/>\n    + */<br/>\n    +public class CheckpointSpout extends BaseRichSpout {<br/>\n    +    private static final Logger LOG = LoggerFactory.getLogger(CheckpointSpout.class);<br/>\n    +<br/>\n    +    public static final String CHECKPOINT_STREAM_ID = \"$checkpoint\";<br/>\n    +    public static final String CHECKPOINT_COMPONENT_ID = \"$checkpointspout\";<br/>\n    +    public static final String CHECKPOINT_FIELD_TXID = \"txid\";<br/>\n    +    public static final String CHECKPOINT_FIELD_ACTION = \"action\";<br/>\n    +    public static final String CHECKPOINT_ACTION_PREPARE = \"prepare\";<br/>\n    +    public static final String CHECKPOINT_ACTION_COMMIT = \"commit\";<br/>\n    +    public static final String CHECKPOINT_ACTION_ROLLBACK = \"rollback\";<br/>\n    +    public static final String CHECKPOINT_ACTION_INITSTATE = \"initstate\";<br/>\n    +<br/>\n    +    private static final String TX_STATE_KEY = \"__state\";<br/>\n    +    private static final int DEFAULT_CHECKPOINT_INTERVAL = 1000; // every sec<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    can we have this as part of defaults.yaml</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612626734/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612626741","html_url":"https://github.com/apache/storm/issues/5013#issuecomment-2612626741","issue_url":"https://api.github.com/repos/apache/storm/issues/5013","id":2612626741,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MjY3NDE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-12-22T17:58:43Z","updated_at":"2025-01-24T14:12:12Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user Parth-Brahmbhatt commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/939#discussion_r48279460\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/939#discussion_r48279460</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/spout/CheckpointSpout.java &#8212;<br/>\n    @@ -0,0 +1,280 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package backtype.storm.spout;<br/>\n    +<br/>\n    +import backtype.storm.Config;<br/>\n    +import backtype.storm.state.KeyValueState;<br/>\n    +import backtype.storm.state.StateFactory;<br/>\n    +import backtype.storm.task.TopologyContext;<br/>\n    +import backtype.storm.topology.OutputFieldsDeclarer;<br/>\n    +import backtype.storm.topology.base.BaseRichSpout;<br/>\n    +import backtype.storm.tuple.Fields;<br/>\n    +import backtype.storm.tuple.Tuple;<br/>\n    +import backtype.storm.tuple.Values;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +import java.util.Map;<br/>\n    +import static backtype.storm.spout.CheckPointState.State.COMMITTED;<br/>\n    +import static backtype.storm.spout.CheckPointState.State.COMMITTING;<br/>\n    +import static backtype.storm.spout.CheckPointState.State.PREPARING;<br/>\n    +<br/>\n    +/**<br/>\n    + * Emits checkpoint tuples which is used to save the state of the </p>\n{@link backtype.storm.topology.IStatefulComponent}\n<p>    + * across the topology. If a topology contains Stateful bolts, Checkpoint spouts are automatically added<br/>\n    + * to the topology. There is only one Checkpoint task per topology.<br/>\n    + * <p/><br/>\n    + * Checkpoint spout stores its internal state in a </p>\n{@link KeyValueState}\n<p>. The state transitions are as follows.<br/>\n    + * <p/><br/>\n    + * <pre><br/>\n    + *  ROLLBACK(tx2)<br/>\n    + *       <-------------  PREPARE(tx2)     COMMIT(tx2)<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    why Rollback can only happen from Prepare and not from Committing? in that case why do we have Committing state?</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612626741/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612626745","html_url":"https://github.com/apache/storm/issues/5013#issuecomment-2612626745","issue_url":"https://api.github.com/repos/apache/storm/issues/5013","id":2612626745,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MjY3NDU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-12-22T18:01:40Z","updated_at":"2025-01-24T14:12:13Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user Parth-Brahmbhatt commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/939#discussion_r48279728\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/939#discussion_r48279728</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/spout/CheckpointSpout.java &#8212;<br/>\n    @@ -0,0 +1,280 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package backtype.storm.spout;<br/>\n    +<br/>\n    +import backtype.storm.Config;<br/>\n    +import backtype.storm.state.KeyValueState;<br/>\n    +import backtype.storm.state.StateFactory;<br/>\n    +import backtype.storm.task.TopologyContext;<br/>\n    +import backtype.storm.topology.OutputFieldsDeclarer;<br/>\n    +import backtype.storm.topology.base.BaseRichSpout;<br/>\n    +import backtype.storm.tuple.Fields;<br/>\n    +import backtype.storm.tuple.Tuple;<br/>\n    +import backtype.storm.tuple.Values;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +import java.util.Map;<br/>\n    +import static backtype.storm.spout.CheckPointState.State.COMMITTED;<br/>\n    +import static backtype.storm.spout.CheckPointState.State.COMMITTING;<br/>\n    +import static backtype.storm.spout.CheckPointState.State.PREPARING;<br/>\n    +<br/>\n    +/**<br/>\n    + * Emits checkpoint tuples which is used to save the state of the </p>\n{@link backtype.storm.topology.IStatefulComponent}\n<p>    + * across the topology. If a topology contains Stateful bolts, Checkpoint spouts are automatically added<br/>\n    + * to the topology. There is only one Checkpoint task per topology.<br/>\n    + * <p/><br/>\n    + * Checkpoint spout stores its internal state in a </p>\n{@link KeyValueState}\n<p>. The state transitions are as follows.<br/>\n    + * <p/><br/>\n    + * <pre><br/>\n    + *  ROLLBACK(tx2)<br/>\n    + *       <-------------  PREPARE(tx2)     COMMIT(tx2)<br/>\n    + * COMMITTED(tx1)-------------> PREPARING(tx2) --------------> COMMITTING(tx2) -----------------> COMMITTED (tx2)<br/>\n    + *<br/>\n    + *<br/>\n    + * </pre><br/>\n    + */<br/>\n    +public class CheckpointSpout extends BaseRichSpout {<br/>\n    +    private static final Logger LOG = LoggerFactory.getLogger(CheckpointSpout.class);<br/>\n    +<br/>\n    +    public static final String CHECKPOINT_STREAM_ID = \"$checkpoint\";<br/>\n    +    public static final String CHECKPOINT_COMPONENT_ID = \"$checkpointspout\";<br/>\n    +    public static final String CHECKPOINT_FIELD_TXID = \"txid\";<br/>\n    +    public static final String CHECKPOINT_FIELD_ACTION = \"action\";<br/>\n    +    public static final String CHECKPOINT_ACTION_PREPARE = \"prepare\";<br/>\n    +    public static final String CHECKPOINT_ACTION_COMMIT = \"commit\";<br/>\n    +    public static final String CHECKPOINT_ACTION_ROLLBACK = \"rollback\";<br/>\n    +    public static final String CHECKPOINT_ACTION_INITSTATE = \"initstate\";<br/>\n    +<br/>\n    +    private static final String TX_STATE_KEY = \"__state\";<br/>\n    +    private static final int DEFAULT_CHECKPOINT_INTERVAL = 1000; // every sec<br/>\n    +<br/>\n    +    private TopologyContext context;<br/>\n    +    private SpoutOutputCollector collector;<br/>\n    +    private long lastCheckpointTs;<br/>\n    +    private int checkpointInterval;<br/>\n    +    private boolean recoveryStepInProgress;<br/>\n    +    private boolean checkpointStepInProgress;<br/>\n    +    private boolean recovering;<br/>\n    +    private KeyValueState<String, CheckPointState> checkpointState;<br/>\n    +<br/>\n    +    @Override<br/>\n    +    public void open(Map conf, TopologyContext context, SpoutOutputCollector collector) </p>\n{\n    +open(context, collector, loadCheckpointInterval(conf), loadCheckpointState(conf, context));\n    +    }\n<p>    +<br/>\n    +    // package access for unit test<br/>\n    +    void open(TopologyContext context, SpoutOutputCollector collector,<br/>\n    +      int checkpointInterval, KeyValueState<String, CheckPointState> checkpointState) </p>\n{\n    +this.context = context;\n    +this.collector = collector;\n    +this.checkpointInterval = checkpointInterval;\n    +this.checkpointState = checkpointState;\n    +lastCheckpointTs = 0;\n    +recoveryStepInProgress = false;\n    +checkpointStepInProgress = false;\n    +recovering = true;\n    +    }\n<p>    +<br/>\n    +    @Override<br/>\n    +    public void nextTuple() {<br/>\n    +if (shouldRecover()) {<br/>\n    +    LOG.debug(\"In recovery\");<br/>\n    +    handleRecovery();<br/>\n    +    startProgress();<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    given you do this in both if and else as the last step, probably just move it outside.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612626745/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612626748","html_url":"https://github.com/apache/storm/issues/5013#issuecomment-2612626748","issue_url":"https://api.github.com/repos/apache/storm/issues/5013","id":2612626748,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MjY3NDg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-12-22T18:08:40Z","updated_at":"2025-01-24T14:12:13Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user Parth-Brahmbhatt commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/939#discussion_r48280341\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/939#discussion_r48280341</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/spout/CheckpointSpout.java &#8212;<br/>\n    @@ -0,0 +1,280 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package backtype.storm.spout;<br/>\n    +<br/>\n    +import backtype.storm.Config;<br/>\n    +import backtype.storm.state.KeyValueState;<br/>\n    +import backtype.storm.state.StateFactory;<br/>\n    +import backtype.storm.task.TopologyContext;<br/>\n    +import backtype.storm.topology.OutputFieldsDeclarer;<br/>\n    +import backtype.storm.topology.base.BaseRichSpout;<br/>\n    +import backtype.storm.tuple.Fields;<br/>\n    +import backtype.storm.tuple.Tuple;<br/>\n    +import backtype.storm.tuple.Values;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +import java.util.Map;<br/>\n    +import static backtype.storm.spout.CheckPointState.State.COMMITTED;<br/>\n    +import static backtype.storm.spout.CheckPointState.State.COMMITTING;<br/>\n    +import static backtype.storm.spout.CheckPointState.State.PREPARING;<br/>\n    +<br/>\n    +/**<br/>\n    + * Emits checkpoint tuples which is used to save the state of the </p>\n{@link backtype.storm.topology.IStatefulComponent}\n<p>    + * across the topology. If a topology contains Stateful bolts, Checkpoint spouts are automatically added<br/>\n    + * to the topology. There is only one Checkpoint task per topology.<br/>\n    + * <p/><br/>\n    + * Checkpoint spout stores its internal state in a </p>\n{@link KeyValueState}\n<p>. The state transitions are as follows.<br/>\n    + * <p/><br/>\n    + * <pre><br/>\n    + *  ROLLBACK(tx2)<br/>\n    + *       <-------------  PREPARE(tx2)     COMMIT(tx2)<br/>\n    + * COMMITTED(tx1)-------------> PREPARING(tx2) --------------> COMMITTING(tx2) -----------------> COMMITTED (tx2)<br/>\n    + *<br/>\n    + *<br/>\n    + * </pre><br/>\n    + */<br/>\n    +public class CheckpointSpout extends BaseRichSpout {<br/>\n    +    private static final Logger LOG = LoggerFactory.getLogger(CheckpointSpout.class);<br/>\n    +<br/>\n    +    public static final String CHECKPOINT_STREAM_ID = \"$checkpoint\";<br/>\n    +    public static final String CHECKPOINT_COMPONENT_ID = \"$checkpointspout\";<br/>\n    +    public static final String CHECKPOINT_FIELD_TXID = \"txid\";<br/>\n    +    public static final String CHECKPOINT_FIELD_ACTION = \"action\";<br/>\n    +    public static final String CHECKPOINT_ACTION_PREPARE = \"prepare\";<br/>\n    +    public static final String CHECKPOINT_ACTION_COMMIT = \"commit\";<br/>\n    +    public static final String CHECKPOINT_ACTION_ROLLBACK = \"rollback\";<br/>\n    +    public static final String CHECKPOINT_ACTION_INITSTATE = \"initstate\";<br/>\n    +<br/>\n    +    private static final String TX_STATE_KEY = \"__state\";<br/>\n    +    private static final int DEFAULT_CHECKPOINT_INTERVAL = 1000; // every sec<br/>\n    +<br/>\n    +    private TopologyContext context;<br/>\n    +    private SpoutOutputCollector collector;<br/>\n    +    private long lastCheckpointTs;<br/>\n    +    private int checkpointInterval;<br/>\n    +    private boolean recoveryStepInProgress;<br/>\n    +    private boolean checkpointStepInProgress;<br/>\n    +    private boolean recovering;<br/>\n    +    private KeyValueState<String, CheckPointState> checkpointState;<br/>\n    +<br/>\n    +    @Override<br/>\n    +    public void open(Map conf, TopologyContext context, SpoutOutputCollector collector) </p>\n{\n    +open(context, collector, loadCheckpointInterval(conf), loadCheckpointState(conf, context));\n    +    }\n<p>    +<br/>\n    +    // package access for unit test<br/>\n    +    void open(TopologyContext context, SpoutOutputCollector collector,<br/>\n    +      int checkpointInterval, KeyValueState<String, CheckPointState> checkpointState) </p>\n{\n    +this.context = context;\n    +this.collector = collector;\n    +this.checkpointInterval = checkpointInterval;\n    +this.checkpointState = checkpointState;\n    +lastCheckpointTs = 0;\n    +recoveryStepInProgress = false;\n    +checkpointStepInProgress = false;\n    +recovering = true;\n    +    }\n<p>    +<br/>\n    +    @Override<br/>\n    +    public void nextTuple() {<br/>\n    +if (shouldRecover()) </p>\n{\n    +    LOG.debug(\"In recovery\");\n    +    handleRecovery();\n    +    startProgress();\n    +}\n<p> else if (shouldCheckpoint()) </p>\n{\n    +    LOG.debug(\"In checkpoint\");\n    +    doCheckpoint();\n    +    startProgress();\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    @Override<br/>\n    +    public void ack(Object msgId) {<br/>\n    +CheckPointState txState = getTxState();<br/>\n    +LOG.debug(\"Got ack with txid {}, current txState {}\", msgId, txState);<br/>\n    +if (txState.txid == ((Number) msgId).longValue()) {<br/>\n    +    if (recovering) </p>\n{\n    +handleRecoveryAck();\n    +    }\n<p> else </p>\n{\n    +handleCheckpointAck();\n    +    }\n<p>    +} else {<br/>\n    +    LOG.warn(\"Ack msgid {}, txState.txid {} mismatch\", msgId, txState.txid);<br/>\n    +}<br/>\n    +resetProgress();<br/>\n    +    }<br/>\n    +<br/>\n    +    @Override<br/>\n    +    public void fail(Object msgId) {<br/>\n    +LOG.debug(\"Got fail with msgid {}\", msgId);<br/>\n    +resetProgress();<br/>\n    +    }<br/>\n    +<br/>\n    +    @Override<br/>\n    +    public void declareOutputFields(OutputFieldsDeclarer declarer) </p>\n{\n    +declarer.declareStream(CHECKPOINT_STREAM_ID, new Fields(CHECKPOINT_FIELD_TXID, CHECKPOINT_FIELD_ACTION));\n    +    }\n<p>    +<br/>\n    +    @Override<br/>\n    +    public Map<String, Object> getComponentConfiguration() {<br/>\n    +Config conf = new Config();<br/>\n    +conf.put(Config.TOPOLOGY_SLEEP_SPOUT_WAIT_STRATEGY_TIME_MS, 100);<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    anyway to override this? </p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612626748/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/166693980","html_url":"https://github.com/apache/storm/pull/964#issuecomment-166693980","issue_url":"https://api.github.com/repos/apache/storm/issues/964","id":166693980,"node_id":"MDEyOklzc3VlQ29tbWVudDE2NjY5Mzk4MA==","user":{"login":"ptgoetz","id":260896,"node_id":"MDQ6VXNlcjI2MDg5Ng==","avatar_url":"https://avatars.githubusercontent.com/u/260896?v=4","gravatar_id":"","url":"https://api.github.com/users/ptgoetz","html_url":"https://github.com/ptgoetz","followers_url":"https://api.github.com/users/ptgoetz/followers","following_url":"https://api.github.com/users/ptgoetz/following{/other_user}","gists_url":"https://api.github.com/users/ptgoetz/gists{/gist_id}","starred_url":"https://api.github.com/users/ptgoetz/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/ptgoetz/subscriptions","organizations_url":"https://api.github.com/users/ptgoetz/orgs","repos_url":"https://api.github.com/users/ptgoetz/repos","events_url":"https://api.github.com/users/ptgoetz/events{/privacy}","received_events_url":"https://api.github.com/users/ptgoetz/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-12-22T18:14:30Z","updated_at":"2015-12-22T18:14:30Z","author_association":"MEMBER","body":"+1\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/166693980/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612691244","html_url":"https://github.com/apache/storm/issues/5243#issuecomment-2612691244","issue_url":"https://api.github.com/repos/apache/storm/issues/5243","id":2612691244,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTEyNDQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-12-22T18:14:31Z","updated_at":"2025-01-24T14:40:30Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user ptgoetz commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/964#issuecomment-166693980\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/964#issuecomment-166693980</a></p>\n\n<p>    +1</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612691244/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612626751","html_url":"https://github.com/apache/storm/issues/5013#issuecomment-2612626751","issue_url":"https://api.github.com/repos/apache/storm/issues/5013","id":2612626751,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MjY3NTE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-12-22T18:27:27Z","updated_at":"2025-01-24T14:12:13Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user Parth-Brahmbhatt commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/939#discussion_r48282204\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/939#discussion_r48282204</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/spout/CheckpointSpout.java &#8212;<br/>\n    @@ -0,0 +1,280 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package backtype.storm.spout;<br/>\n    +<br/>\n    +import backtype.storm.Config;<br/>\n    +import backtype.storm.state.KeyValueState;<br/>\n    +import backtype.storm.state.StateFactory;<br/>\n    +import backtype.storm.task.TopologyContext;<br/>\n    +import backtype.storm.topology.OutputFieldsDeclarer;<br/>\n    +import backtype.storm.topology.base.BaseRichSpout;<br/>\n    +import backtype.storm.tuple.Fields;<br/>\n    +import backtype.storm.tuple.Tuple;<br/>\n    +import backtype.storm.tuple.Values;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +import java.util.Map;<br/>\n    +import static backtype.storm.spout.CheckPointState.State.COMMITTED;<br/>\n    +import static backtype.storm.spout.CheckPointState.State.COMMITTING;<br/>\n    +import static backtype.storm.spout.CheckPointState.State.PREPARING;<br/>\n    +<br/>\n    +/**<br/>\n    + * Emits checkpoint tuples which is used to save the state of the </p>\n{@link backtype.storm.topology.IStatefulComponent}\n<p>    + * across the topology. If a topology contains Stateful bolts, Checkpoint spouts are automatically added<br/>\n    + * to the topology. There is only one Checkpoint task per topology.<br/>\n    + * <p/><br/>\n    + * Checkpoint spout stores its internal state in a </p>\n{@link KeyValueState}\n<p>. The state transitions are as follows.<br/>\n    + * <p/><br/>\n    + * <pre><br/>\n    + *  ROLLBACK(tx2)<br/>\n    + *       <-------------  PREPARE(tx2)     COMMIT(tx2)<br/>\n    + * COMMITTED(tx1)-------------> PREPARING(tx2) --------------> COMMITTING(tx2) -----------------> COMMITTED (tx2)<br/>\n    + *<br/>\n    + *<br/>\n    + * </pre><br/>\n    + */<br/>\n    +public class CheckpointSpout extends BaseRichSpout {<br/>\n    +    private static final Logger LOG = LoggerFactory.getLogger(CheckpointSpout.class);<br/>\n    +<br/>\n    +    public static final String CHECKPOINT_STREAM_ID = \"$checkpoint\";<br/>\n    +    public static final String CHECKPOINT_COMPONENT_ID = \"$checkpointspout\";<br/>\n    +    public static final String CHECKPOINT_FIELD_TXID = \"txid\";<br/>\n    +    public static final String CHECKPOINT_FIELD_ACTION = \"action\";<br/>\n    +    public static final String CHECKPOINT_ACTION_PREPARE = \"prepare\";<br/>\n    +    public static final String CHECKPOINT_ACTION_COMMIT = \"commit\";<br/>\n    +    public static final String CHECKPOINT_ACTION_ROLLBACK = \"rollback\";<br/>\n    +    public static final String CHECKPOINT_ACTION_INITSTATE = \"initstate\";<br/>\n    +<br/>\n    +    private static final String TX_STATE_KEY = \"__state\";<br/>\n    +    private static final int DEFAULT_CHECKPOINT_INTERVAL = 1000; // every sec<br/>\n    +<br/>\n    +    private TopologyContext context;<br/>\n    +    private SpoutOutputCollector collector;<br/>\n    +    private long lastCheckpointTs;<br/>\n    +    private int checkpointInterval;<br/>\n    +    private boolean recoveryStepInProgress;<br/>\n    +    private boolean checkpointStepInProgress;<br/>\n    +    private boolean recovering;<br/>\n    +    private KeyValueState<String, CheckPointState> checkpointState;<br/>\n    +<br/>\n    +    @Override<br/>\n    +    public void open(Map conf, TopologyContext context, SpoutOutputCollector collector) </p>\n{\n    +open(context, collector, loadCheckpointInterval(conf), loadCheckpointState(conf, context));\n    +    }\n<p>    +<br/>\n    +    // package access for unit test<br/>\n    +    void open(TopologyContext context, SpoutOutputCollector collector,<br/>\n    +      int checkpointInterval, KeyValueState<String, CheckPointState> checkpointState) </p>\n{\n    +this.context = context;\n    +this.collector = collector;\n    +this.checkpointInterval = checkpointInterval;\n    +this.checkpointState = checkpointState;\n    +lastCheckpointTs = 0;\n    +recoveryStepInProgress = false;\n    +checkpointStepInProgress = false;\n    +recovering = true;\n    +    }\n<p>    +<br/>\n    +    @Override<br/>\n    +    public void nextTuple() {<br/>\n    +if (shouldRecover()) </p>\n{\n    +    LOG.debug(\"In recovery\");\n    +    handleRecovery();\n    +    startProgress();\n    +}\n<p> else if (shouldCheckpoint()) </p>\n{\n    +    LOG.debug(\"In checkpoint\");\n    +    doCheckpoint();\n    +    startProgress();\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    @Override<br/>\n    +    public void ack(Object msgId) {<br/>\n    +CheckPointState txState = getTxState();<br/>\n    +LOG.debug(\"Got ack with txid {}, current txState {}\", msgId, txState);<br/>\n    +if (txState.txid == ((Number) msgId).longValue()) {<br/>\n    +    if (recovering) </p>\n{\n    +handleRecoveryAck();\n    +    }\n<p> else </p>\n{\n    +handleCheckpointAck();\n    +    }\n<p>    +} else {<br/>\n    +    LOG.warn(\"Ack msgid {}, txState.txid {} mismatch\", msgId, txState.txid);<br/>\n    +}<br/>\n    +resetProgress();<br/>\n    +    }<br/>\n    +<br/>\n    +    @Override<br/>\n    +    public void fail(Object msgId) {<br/>\n    +LOG.debug(\"Got fail with msgid {}\", msgId);<br/>\n    +resetProgress();<br/>\n    +    }<br/>\n    +<br/>\n    +    @Override<br/>\n    +    public void declareOutputFields(OutputFieldsDeclarer declarer) </p>\n{\n    +declarer.declareStream(CHECKPOINT_STREAM_ID, new Fields(CHECKPOINT_FIELD_TXID, CHECKPOINT_FIELD_ACTION));\n    +    }\n<p>    +<br/>\n    +    @Override<br/>\n    +    public Map<String, Object> getComponentConfiguration() </p>\n{\n    +Config conf = new Config();\n    +conf.put(Config.TOPOLOGY_SLEEP_SPOUT_WAIT_STRATEGY_TIME_MS, 100);\n    +return conf;\n    +    }\n<p>    +<br/>\n    +    public static boolean isCheckpoint(Tuple input) </p>\n{\n    +return CHECKPOINT_STREAM_ID.equals(input.getSourceStreamId());\n    +    }\n<p>    +<br/>\n    +    /**<br/>\n    +     * Loads the last saved checkpoint state the from persistent storage.<br/>\n    +     */<br/>\n    +    private KeyValueState<String, CheckPointState> loadCheckpointState(Map conf, TopologyContext ctx) {<br/>\n    +String namespace = ctx.getThisComponentId() + \"-\" + ctx.getThisTaskId();<br/>\n    +KeyValueState<String, CheckPointState> state =<br/>\n    +(KeyValueState<String, CheckPointState>) StateFactory.getState(namespace, conf, ctx);<br/>\n    +if (state.get(TX_STATE_KEY) == null) {<br/>\n    +    CheckPointState txState = new CheckPointState(-1, COMMITTED);<br/>\n    +    state.put(TX_STATE_KEY, txState);<br/>\n    +    state.commit();<br/>\n    +    LOG.debug(\"Initialized checkpoint spout state with txState {}\", txState);<br/>\n    +} else {<br/>\n    +    LOG.debug(\"Got checkpoint spout state {}\", state.get(TX_STATE_KEY));<br/>\n    +}<br/>\n    +return state;<br/>\n    +    }<br/>\n    +<br/>\n    +    private int loadCheckpointInterval(Map stormConf) {<br/>\n    +int interval;<br/>\n    +if (stormConf.containsKey(Config.TOPOLOGY_STATE_CHECKPOINT_INTERVAL)) </p>\n{\n    +    interval = ((Number) stormConf.get(Config.TOPOLOGY_STATE_CHECKPOINT_INTERVAL)).intValue();\n    +}\n<p> else </p>\n{\n    +    interval = DEFAULT_CHECKPOINT_INTERVAL;\n    +}\n<p>    +return interval;<br/>\n    +    }<br/>\n    +<br/>\n    +    private boolean shouldRecover() </p>\n{\n    +return recovering && !recoveryStepInProgress;\n    +    }\n<p>    +<br/>\n    +    private boolean shouldCheckpoint() </p>\n{\n    +return !recovering && !checkpointStepInProgress\n    +&& (System.currentTimeMillis() - lastCheckpointTs) > checkpointInterval;\n    +    }\n<p>    +<br/>\n    +    private boolean shouldRollback(CheckPointState txState) </p>\n{\n    +return txState.state == PREPARING;\n    +    }\n<p>    +<br/>\n    +    private boolean shouldCommit(CheckPointState txState) </p>\n{\n    +return txState.state == COMMITTING;\n    +    }\n<p>    +<br/>\n    +    private boolean shouldInitState(CheckPointState txState) </p>\n{\n    +return txState.state == COMMITTED;\n    +    }\n<p>    +<br/>\n    +    private void handleRecovery() {<br/>\n    +CheckPointState txState = getTxState();<br/>\n    +LOG.debug(\"Current txState is {}\", txState);<br/>\n    +if (shouldRollback(txState)) {<br/>\n    +    LOG.debug(\"Emitting rollback with txid {}\", txState.txid);<br/>\n    +    collector.emit(CHECKPOINT_STREAM_ID, new Values(txState.txid, CHECKPOINT_ACTION_ROLLBACK), txState.txid);<br/>\n    +} else if (shouldCommit(txState)) {<br/>\n    +    LOG.debug(\"Emitting commit with txid {}\", txState.txid);<br/>\n    +    collector.emit(CHECKPOINT_STREAM_ID, new Values(txState.txid, CHECKPOINT_ACTION_COMMIT), txState.txid);<br/>\n    +} else if (shouldInitState(txState)) {<br/>\n    +    LOG.debug(\"Emitting init state with txid {}\", txState.txid);<br/>\n    +    collector.emit(CHECKPOINT_STREAM_ID, new Values(txState.txid, CHECKPOINT_ACTION_INITSTATE), txState.txid);<br/>\n    +}<br/>\n    +startProgress();<br/>\n    +    }<br/>\n    +<br/>\n    +    private void handleRecoveryAck() {<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    the state transition code seems to be repeating in handleCheckpointAck, doCheckpoint and handleRecoveryAck. Do you think we can capture the nextState and prevState for each state in the CheckPointState class it self so in all these methods we can just call netxt/prevState followed by saveTxState(txState).</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612626751/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/166698659","html_url":"https://github.com/apache/storm/pull/939#issuecomment-166698659","issue_url":"https://api.github.com/repos/apache/storm/issues/939","id":166698659,"node_id":"MDEyOklzc3VlQ29tbWVudDE2NjY5ODY1OQ==","user":{"login":"Parth-Brahmbhatt","id":6914358,"node_id":"MDQ6VXNlcjY5MTQzNTg=","avatar_url":"https://avatars.githubusercontent.com/u/6914358?v=4","gravatar_id":"","url":"https://api.github.com/users/Parth-Brahmbhatt","html_url":"https://github.com/Parth-Brahmbhatt","followers_url":"https://api.github.com/users/Parth-Brahmbhatt/followers","following_url":"https://api.github.com/users/Parth-Brahmbhatt/following{/other_user}","gists_url":"https://api.github.com/users/Parth-Brahmbhatt/gists{/gist_id}","starred_url":"https://api.github.com/users/Parth-Brahmbhatt/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Parth-Brahmbhatt/subscriptions","organizations_url":"https://api.github.com/users/Parth-Brahmbhatt/orgs","repos_url":"https://api.github.com/users/Parth-Brahmbhatt/repos","events_url":"https://api.github.com/users/Parth-Brahmbhatt/events{/privacy}","received_events_url":"https://api.github.com/users/Parth-Brahmbhatt/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-12-22T18:36:21Z","updated_at":"2015-12-22T18:36:21Z","author_association":"CONTRIBUTOR","body":"@arunmahadevan Thanks for the patch. I think the missing piece is the how-to-use guide. you can file a follow up jira for that. Overall looks good to me and once the comments are addressed , I am +1.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/166698659/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612626754","html_url":"https://github.com/apache/storm/issues/5013#issuecomment-2612626754","issue_url":"https://api.github.com/repos/apache/storm/issues/5013","id":2612626754,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MjY3NTQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-12-22T18:36:22Z","updated_at":"2025-01-24T14:12:13Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user Parth-Brahmbhatt commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/939#issuecomment-166698659\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/939#issuecomment-166698659</a></p>\n\n<p>    @arunmahadevan Thanks for the patch. I think the missing piece is the how-to-use guide. you can file a follow up jira for that. Overall looks good to me and once the comments are addressed , I am +1.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612626754/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612691377","html_url":"https://github.com/apache/storm/issues/5244#issuecomment-2612691377","issue_url":"https://api.github.com/repos/apache/storm/issues/5244","id":2612691377,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTEzNzc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-12-22T19:56:08Z","updated_at":"2025-01-24T14:40:34Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>GitHub user d2r opened a pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/965\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/965</a></p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1409\" title=\"StormClientErrorHandler is not used\" class=\"issue-link\" data-issue-key=\"STORM-1409\"><del>STORM-1409</del></a> Removes StormClientErrorHandler, since it is no longer used</p>\n\n\n\n<p>You can merge this pull request into a Git repository by running:</p>\n\n<p>    $ git pull <a href=\"https://github.com/d2r/storm\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/d2r/storm</a> storm-1409-remove-stormclienterrorhandler</p>\n\n<p>Alternatively you can review and apply these changes as the patch at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/965.patch\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/965.patch</a></p>\n\n<p>To close this pull request, make a commit to your master/trunk branch<br/>\nwith (at least) the following in the commit message:</p>\n\n<p>    This closes #965</p>\n\n<hr />\n<p>commit 67be48c9d6da4d2fc13cb28440a130923b7a6d40<br/>\nAuthor: Derek Dagit <derekd@yahoo-inc.com><br/>\nDate:   2015-12-22T19:55:21Z</p>\n\n<p>    Removes StormClientErrorHandler, since it is no longer used</p>\n\n<hr />","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612691377/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/166725297","html_url":"https://github.com/apache/storm/pull/964#issuecomment-166725297","issue_url":"https://api.github.com/repos/apache/storm/issues/964","id":166725297,"node_id":"MDEyOklzc3VlQ29tbWVudDE2NjcyNTI5Nw==","user":{"login":"d2r","id":905298,"node_id":"MDQ6VXNlcjkwNTI5OA==","avatar_url":"https://avatars.githubusercontent.com/u/905298?v=4","gravatar_id":"","url":"https://api.github.com/users/d2r","html_url":"https://github.com/d2r","followers_url":"https://api.github.com/users/d2r/followers","following_url":"https://api.github.com/users/d2r/following{/other_user}","gists_url":"https://api.github.com/users/d2r/gists{/gist_id}","starred_url":"https://api.github.com/users/d2r/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/d2r/subscriptions","organizations_url":"https://api.github.com/users/d2r/orgs","repos_url":"https://api.github.com/users/d2r/repos","events_url":"https://api.github.com/users/d2r/events{/privacy}","received_events_url":"https://api.github.com/users/d2r/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-12-22T20:43:52Z","updated_at":"2015-12-22T20:43:52Z","author_association":"NONE","body":"jdk7 storm-multilang test failed again, [STORM-1401](https://issues.apache.org/jira/browse/STORM-1401), everything else passed.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/166725297/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612691246","html_url":"https://github.com/apache/storm/issues/5243#issuecomment-2612691246","issue_url":"https://api.github.com/repos/apache/storm/issues/5243","id":2612691246,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTEyNDY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-12-22T20:43:53Z","updated_at":"2025-01-24T14:40:31Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user d2r commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/964#issuecomment-166725297\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/964#issuecomment-166725297</a></p>\n\n<p>    jdk7 storm-multilang test failed again, <a href=\"https://issues.apache.org/jira/browse/STORM-1401\" title=\"Spurious multilang-test crashes on travis-ci\" class=\"issue-link\" data-issue-key=\"STORM-1401\"><del>STORM-1401</del></a>(<a href=\"https://issues.apache.org/jira/browse/STORM-1401\" class=\"external-link\" rel=\"nofollow\">https://issues.apache.org/jira/browse/STORM-1401</a>), everything else passed.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612691246/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612690132","html_url":"https://github.com/apache/storm/issues/5236#issuecomment-2612690132","issue_url":"https://api.github.com/repos/apache/storm/issues/5236","id":2612690132,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTAxMzI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-12-22T20:49:26Z","updated_at":"2025-01-24T14:40:01Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>GitHub user d2r opened a pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/966\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/966</a></p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1401\" title=\"Spurious multilang-test crashes on travis-ci\" class=\"issue-link\" data-issue-key=\"STORM-1401\"><del>STORM-1401</del></a> removes multilang-test</p>\n\n<p>    This test takes over 2 minutes to run, and it does not validate correctness of the multilang code.  It basically runs the topologies for a while and passes if they do not crash. Since they are now causing repeated failures in automated testing, there is not a lot of value in keeping them as-is.</p>\n\n<p>    We should cover multilang code as well as the Shell* classes in unit testing.  So I will create a follow-on issue to cover these with tests.</p>\n\n<p>You can merge this pull request into a Git repository by running:</p>\n\n<p>    $ git pull <a href=\"https://github.com/d2r/storm\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/d2r/storm</a> storm-1401-multilang-test-removal</p>\n\n<p>Alternatively you can review and apply these changes as the patch at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/966.patch\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/966.patch</a></p>\n\n<p>To close this pull request, make a commit to your master/trunk branch<br/>\nwith (at least) the following in the commit message:</p>\n\n<p>    This closes #966</p>\n\n<hr />\n<p>commit 37099d8ee68cd8c440bae34ed2aa0c7f30a4d3c2<br/>\nAuthor: Derek Dagit <derekd@yahoo-inc.com><br/>\nDate:   2015-12-22T20:46:37Z</p>\n\n<p>    removes multilang-test</p>\n\n<hr />","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612690132/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/166760346","html_url":"https://github.com/apache/storm/pull/965#issuecomment-166760346","issue_url":"https://api.github.com/repos/apache/storm/issues/965","id":166760346,"node_id":"MDEyOklzc3VlQ29tbWVudDE2Njc2MDM0Ng==","user":{"login":"HeartSaVioR","id":1317309,"node_id":"MDQ6VXNlcjEzMTczMDk=","avatar_url":"https://avatars.githubusercontent.com/u/1317309?v=4","gravatar_id":"","url":"https://api.github.com/users/HeartSaVioR","html_url":"https://github.com/HeartSaVioR","followers_url":"https://api.github.com/users/HeartSaVioR/followers","following_url":"https://api.github.com/users/HeartSaVioR/following{/other_user}","gists_url":"https://api.github.com/users/HeartSaVioR/gists{/gist_id}","starred_url":"https://api.github.com/users/HeartSaVioR/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/HeartSaVioR/subscriptions","organizations_url":"https://api.github.com/users/HeartSaVioR/orgs","repos_url":"https://api.github.com/users/HeartSaVioR/repos","events_url":"https://api.github.com/users/HeartSaVioR/events{/privacy}","received_events_url":"https://api.github.com/users/HeartSaVioR/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-12-22T23:19:25Z","updated_at":"2015-12-22T23:19:25Z","author_association":"CONTRIBUTOR","body":"+1 Nice finding.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/166760346/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612691385","html_url":"https://github.com/apache/storm/issues/5244#issuecomment-2612691385","issue_url":"https://api.github.com/repos/apache/storm/issues/5244","id":2612691385,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTEzODU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-12-22T23:19:26Z","updated_at":"2025-01-24T14:40:34Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user HeartSaVioR commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/965#issuecomment-166760346\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/965#issuecomment-166760346</a></p>\n\n<p>    +1 Nice finding.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612691385/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612626757","html_url":"https://github.com/apache/storm/issues/5013#issuecomment-2612626757","issue_url":"https://api.github.com/repos/apache/storm/issues/5013","id":2612626757,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MjY3NTc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-12-23T05:49:38Z","updated_at":"2025-01-24T14:12:13Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user arunmahadevan commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/939#discussion_r48323074\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/939#discussion_r48323074</a></p>\n\n<p>    &#8212; Diff: external/storm-redis/src/main/java/org/apache/storm/redis/state/RedisKeyValueState.java &#8212;<br/>\n    @@ -0,0 +1,302 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package org.apache.storm.redis.state;<br/>\n    +<br/>\n    +import backtype.storm.state.DefaultStateSerializer;<br/>\n    +import backtype.storm.state.KeyValueState;<br/>\n    +import backtype.storm.state.Serializer;<br/>\n    +import org.apache.storm.redis.common.config.JedisPoolConfig;<br/>\n    +import org.apache.storm.redis.common.container.JedisCommandsContainerBuilder;<br/>\n    +import org.apache.storm.redis.common.container.JedisCommandsInstanceContainer;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +import redis.clients.jedis.JedisCommands;<br/>\n    +import sun.misc.BASE64Decoder;<br/>\n    +import sun.misc.BASE64Encoder;<br/>\n    +<br/>\n    +import java.io.IOException;<br/>\n    +import java.util.Collections;<br/>\n    +import java.util.HashMap;<br/>\n    +import java.util.Map;<br/>\n    +import java.util.concurrent.ConcurrentHashMap;<br/>\n    +<br/>\n    +/**<br/>\n    + * A redis based implementation that persists the state in Redis.<br/>\n    + */<br/>\n    +public class RedisKeyValueState<K, V> implements KeyValueState<K, V> {<br/>\n    +    private static final Logger LOG = LoggerFactory.getLogger(RedisKeyValueState.class);<br/>\n    +    private static final String COMMIT_TXID_KEY = \"$commit\";<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Since its internal, just followed a convention to differentiate it (similar to checkpoint stream). But here there is no namespace collision so it could be \"commit\" as well.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612626757/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612626761","html_url":"https://github.com/apache/storm/issues/5013#issuecomment-2612626761","issue_url":"https://api.github.com/repos/apache/storm/issues/5013","id":2612626761,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MjY3NjE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-12-23T05:49:45Z","updated_at":"2025-01-24T14:12:13Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user arunmahadevan commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/939#discussion_r48323078\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/939#discussion_r48323078</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/Config.java &#8212;<br/>\n    @@ -1491,6 +1491,29 @@<br/>\n public static final String TOPOLOGY_COMPONENT_CPU_PCORE_PERCENT = \"topology.component.cpu.pcore.percent\";</p>\n\n<p> /**<br/>\n    +     * The class name of the </p>\n{@link backtype.storm.state.StateProvider} implementation. If not specified<br/>\n    +     * defaults to {@link backtype.storm.state.InMemoryKeyValueStateProvider}. This can be overridden<br/>\n    +     * at the component level.<br/>\n    +     */<br/>\n    +    @isString<br/>\n    +    public static final String TOPOLOGY_STATE_PROVIDER = \"topology.state.provider\";<br/>\n    +<br/>\n    +    /**<br/>\n    +     * The configuration specific to the {@link backtype.storm.state.StateProvider}\n<p> implementation.<br/>\n    +     * This can be overridden at the component level.<br/>\n    +     */<br/>\n    +    @isString<br/>\n    +    public static final String TOPOLOGY_STATE_PROVIDER_CONFIG = \"topology.state.provider.config\";<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    For now we expect the actual config string (for redis, its a json string with the host, port etc). it could be a file name as well, if the state provider implementation desires so.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612626761/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612626766","html_url":"https://github.com/apache/storm/issues/5013#issuecomment-2612626766","issue_url":"https://api.github.com/repos/apache/storm/issues/5013","id":2612626766,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MjY3NjY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-12-23T05:49:48Z","updated_at":"2025-01-24T14:12:13Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user arunmahadevan commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/939#discussion_r48323081\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/939#discussion_r48323081</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/spout/CheckPointState.java &#8212;<br/>\n    @@ -0,0 +1,78 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package backtype.storm.spout;<br/>\n    +<br/>\n    +/**<br/>\n    + * Captures the current state of the transaction in<br/>\n    + * </p>\n{@link CheckpointSpout}\n<p>    + */<br/>\n    +public class CheckPointState {<br/>\n    +    public long txid;<br/>\n    +    public State state;<br/>\n    +<br/>\n    +    public enum State {<br/>\n    +/**<br/>\n    + * The checkpoint spout has committed the transaction.<br/>\n    + */<br/>\n    +COMMITTED,<br/>\n    +/**<br/>\n    + * The checkpoint spout has started committing the transaction.<br/>\n    + */<br/>\n    +COMMITTING,<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Named it COMMITTING and PREPARING since its short. We could probably have it as COMMIT_IN_PROGRESS and PREPARE_IN_PROGRESS. Prefer to keep it short and can add more comments.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612626766/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612626771","html_url":"https://github.com/apache/storm/issues/5013#issuecomment-2612626771","issue_url":"https://api.github.com/repos/apache/storm/issues/5013","id":2612626771,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MjY3NzE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-12-23T05:49:51Z","updated_at":"2025-01-24T14:12:13Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user arunmahadevan commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/939#discussion_r48323083\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/939#discussion_r48323083</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/spout/CheckPointState.java &#8212;<br/>\n    @@ -0,0 +1,78 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package backtype.storm.spout;<br/>\n    +<br/>\n    +/**<br/>\n    + * Captures the current state of the transaction in<br/>\n    + * </p>\n{@link CheckpointSpout}\n<p>    + */<br/>\n    +public class CheckPointState {<br/>\n    +    public long txid;<br/>\n    +    public State state;<br/>\n    +<br/>\n    +    public enum State {<br/>\n    +/**<br/>\n    + * The checkpoint spout has committed the transaction.<br/>\n    + */<br/>\n    +COMMITTED,<br/>\n    +/**<br/>\n    + * The checkpoint spout has started committing the transaction.<br/>\n    + */<br/>\n    +COMMITTING,<br/>\n    +/**<br/>\n    + * The checkpoint spout has started preparing the transaction for commit.<br/>\n    + */<br/>\n    +PREPARING<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    It could be PREPARE_IN_PROGRESS or PREPARING, I think PREPARE conveys a slightly different meaning.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612626771/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612626774","html_url":"https://github.com/apache/storm/issues/5013#issuecomment-2612626774","issue_url":"https://api.github.com/repos/apache/storm/issues/5013","id":2612626774,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MjY3NzQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-12-23T05:49:55Z","updated_at":"2025-01-24T14:12:13Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user arunmahadevan commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/939#discussion_r48323087\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/939#discussion_r48323087</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/spout/CheckPointState.java &#8212;<br/>\n    @@ -0,0 +1,78 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package backtype.storm.spout;<br/>\n    +<br/>\n    +/**<br/>\n    + * Captures the current state of the transaction in<br/>\n    + * </p>\n{@link CheckpointSpout}\n<p>    + */<br/>\n    +public class CheckPointState {<br/>\n    +    public long txid;<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    will change it</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612626774/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612626777","html_url":"https://github.com/apache/storm/issues/5013#issuecomment-2612626777","issue_url":"https://api.github.com/repos/apache/storm/issues/5013","id":2612626777,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MjY3Nzc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-12-23T05:50:01Z","updated_at":"2025-01-24T14:12:13Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user arunmahadevan commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/939#discussion_r48323093\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/939#discussion_r48323093</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/spout/CheckpointSpout.java &#8212;<br/>\n    @@ -0,0 +1,280 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package backtype.storm.spout;<br/>\n    +<br/>\n    +import backtype.storm.Config;<br/>\n    +import backtype.storm.state.KeyValueState;<br/>\n    +import backtype.storm.state.StateFactory;<br/>\n    +import backtype.storm.task.TopologyContext;<br/>\n    +import backtype.storm.topology.OutputFieldsDeclarer;<br/>\n    +import backtype.storm.topology.base.BaseRichSpout;<br/>\n    +import backtype.storm.tuple.Fields;<br/>\n    +import backtype.storm.tuple.Tuple;<br/>\n    +import backtype.storm.tuple.Values;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +import java.util.Map;<br/>\n    +import static backtype.storm.spout.CheckPointState.State.COMMITTED;<br/>\n    +import static backtype.storm.spout.CheckPointState.State.COMMITTING;<br/>\n    +import static backtype.storm.spout.CheckPointState.State.PREPARING;<br/>\n    +<br/>\n    +/**<br/>\n    + * Emits checkpoint tuples which is used to save the state of the </p>\n{@link backtype.storm.topology.IStatefulComponent}\n<p>    + * across the topology. If a topology contains Stateful bolts, Checkpoint spouts are automatically added<br/>\n    + * to the topology. There is only one Checkpoint task per topology.<br/>\n    + * <p/><br/>\n    + * Checkpoint spout stores its internal state in a </p>\n{@link KeyValueState}\n<p>. The state transitions are as follows.<br/>\n    + * <p/><br/>\n    + * <pre><br/>\n    + *  ROLLBACK(tx2)<br/>\n    + *       <-------------  PREPARE(tx2)     COMMIT(tx2)<br/>\n    + * COMMITTED(tx1)-------------> PREPARING(tx2) --------------> COMMITTING(tx2) -----------------> COMMITTED (tx2)<br/>\n    + *<br/>\n    + *<br/>\n    + * </pre><br/>\n    + */<br/>\n    +public class CheckpointSpout extends BaseRichSpout {<br/>\n    +    private static final Logger LOG = LoggerFactory.getLogger(CheckpointSpout.class);<br/>\n    +<br/>\n    +    public static final String CHECKPOINT_STREAM_ID = \"$checkpoint\";<br/>\n    +    public static final String CHECKPOINT_COMPONENT_ID = \"$checkpointspout\";<br/>\n    +    public static final String CHECKPOINT_FIELD_TXID = \"txid\";<br/>\n    +    public static final String CHECKPOINT_FIELD_ACTION = \"action\";<br/>\n    +    public static final String CHECKPOINT_ACTION_PREPARE = \"prepare\";<br/>\n    +    public static final String CHECKPOINT_ACTION_COMMIT = \"commit\";<br/>\n    +    public static final String CHECKPOINT_ACTION_ROLLBACK = \"rollback\";<br/>\n    +    public static final String CHECKPOINT_ACTION_INITSTATE = \"initstate\";<br/>\n    +<br/>\n    +    private static final String TX_STATE_KEY = \"__state\";<br/>\n    +    private static final int DEFAULT_CHECKPOINT_INTERVAL = 1000; // every sec<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Its used only if Config.TOPOLOGY_STATE_CHECKPOINT_INTERVAL is not set. Will add comments to make it clear. Will also set the default value for that config in defaults.yaml</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612626777/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612626787","html_url":"https://github.com/apache/storm/issues/5013#issuecomment-2612626787","issue_url":"https://api.github.com/repos/apache/storm/issues/5013","id":2612626787,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MjY3ODc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-12-23T05:50:04Z","updated_at":"2025-01-24T14:12:14Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user arunmahadevan commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/939#discussion_r48323095\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/939#discussion_r48323095</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/spout/CheckpointSpout.java &#8212;<br/>\n    @@ -0,0 +1,280 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package backtype.storm.spout;<br/>\n    +<br/>\n    +import backtype.storm.Config;<br/>\n    +import backtype.storm.state.KeyValueState;<br/>\n    +import backtype.storm.state.StateFactory;<br/>\n    +import backtype.storm.task.TopologyContext;<br/>\n    +import backtype.storm.topology.OutputFieldsDeclarer;<br/>\n    +import backtype.storm.topology.base.BaseRichSpout;<br/>\n    +import backtype.storm.tuple.Fields;<br/>\n    +import backtype.storm.tuple.Tuple;<br/>\n    +import backtype.storm.tuple.Values;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +import java.util.Map;<br/>\n    +import static backtype.storm.spout.CheckPointState.State.COMMITTED;<br/>\n    +import static backtype.storm.spout.CheckPointState.State.COMMITTING;<br/>\n    +import static backtype.storm.spout.CheckPointState.State.PREPARING;<br/>\n    +<br/>\n    +/**<br/>\n    + * Emits checkpoint tuples which is used to save the state of the </p>\n{@link backtype.storm.topology.IStatefulComponent}\n<p>    + * across the topology. If a topology contains Stateful bolts, Checkpoint spouts are automatically added<br/>\n    + * to the topology. There is only one Checkpoint task per topology.<br/>\n    + * <p/><br/>\n    + * Checkpoint spout stores its internal state in a </p>\n{@link KeyValueState}\n<p>. The state transitions are as follows.<br/>\n    + * <p/><br/>\n    + * <pre><br/>\n    + *  ROLLBACK(tx2)<br/>\n    + *       <-------------  PREPARE(tx2)     COMMIT(tx2)<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Rollback can happen from 'preparing' state since all bolts might not have prepared the data to commit. Once we get ack for prepare it indicates all bolts have prepared the data to commit, the state changes from 'preparing' to 'committing' and a 'commit' message is sent. We cant rollback from 'committing' state since some bolts might have already committed the data. In case of failures, the commit message is sent again to make sure all bolts commit. If some bolts already committed the prepared data, it ignores the message.</p>\n\n<p>    Will add more comments to make it clear.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612626787/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612626789","html_url":"https://github.com/apache/storm/issues/5013#issuecomment-2612626789","issue_url":"https://api.github.com/repos/apache/storm/issues/5013","id":2612626789,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MjY3ODk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-12-23T05:50:07Z","updated_at":"2025-01-24T14:12:14Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user arunmahadevan commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/939#discussion_r48323098\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/939#discussion_r48323098</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/spout/CheckpointSpout.java &#8212;<br/>\n    @@ -0,0 +1,280 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package backtype.storm.spout;<br/>\n    +<br/>\n    +import backtype.storm.Config;<br/>\n    +import backtype.storm.state.KeyValueState;<br/>\n    +import backtype.storm.state.StateFactory;<br/>\n    +import backtype.storm.task.TopologyContext;<br/>\n    +import backtype.storm.topology.OutputFieldsDeclarer;<br/>\n    +import backtype.storm.topology.base.BaseRichSpout;<br/>\n    +import backtype.storm.tuple.Fields;<br/>\n    +import backtype.storm.tuple.Tuple;<br/>\n    +import backtype.storm.tuple.Values;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +import java.util.Map;<br/>\n    +import static backtype.storm.spout.CheckPointState.State.COMMITTED;<br/>\n    +import static backtype.storm.spout.CheckPointState.State.COMMITTING;<br/>\n    +import static backtype.storm.spout.CheckPointState.State.PREPARING;<br/>\n    +<br/>\n    +/**<br/>\n    + * Emits checkpoint tuples which is used to save the state of the </p>\n{@link backtype.storm.topology.IStatefulComponent}\n<p>    + * across the topology. If a topology contains Stateful bolts, Checkpoint spouts are automatically added<br/>\n    + * to the topology. There is only one Checkpoint task per topology.<br/>\n    + * <p/><br/>\n    + * Checkpoint spout stores its internal state in a </p>\n{@link KeyValueState}\n<p>. The state transitions are as follows.<br/>\n    + * <p/><br/>\n    + * <pre><br/>\n    + *  ROLLBACK(tx2)<br/>\n    + *       <-------------  PREPARE(tx2)     COMMIT(tx2)<br/>\n    + * COMMITTED(tx1)-------------> PREPARING(tx2) --------------> COMMITTING(tx2) -----------------> COMMITTED (tx2)<br/>\n    + *<br/>\n    + *<br/>\n    + * </pre><br/>\n    + */<br/>\n    +public class CheckpointSpout extends BaseRichSpout {<br/>\n    +    private static final Logger LOG = LoggerFactory.getLogger(CheckpointSpout.class);<br/>\n    +<br/>\n    +    public static final String CHECKPOINT_STREAM_ID = \"$checkpoint\";<br/>\n    +    public static final String CHECKPOINT_COMPONENT_ID = \"$checkpointspout\";<br/>\n    +    public static final String CHECKPOINT_FIELD_TXID = \"txid\";<br/>\n    +    public static final String CHECKPOINT_FIELD_ACTION = \"action\";<br/>\n    +    public static final String CHECKPOINT_ACTION_PREPARE = \"prepare\";<br/>\n    +    public static final String CHECKPOINT_ACTION_COMMIT = \"commit\";<br/>\n    +    public static final String CHECKPOINT_ACTION_ROLLBACK = \"rollback\";<br/>\n    +    public static final String CHECKPOINT_ACTION_INITSTATE = \"initstate\";<br/>\n    +<br/>\n    +    private static final String TX_STATE_KEY = \"__state\";<br/>\n    +    private static final int DEFAULT_CHECKPOINT_INTERVAL = 1000; // every sec<br/>\n    +<br/>\n    +    private TopologyContext context;<br/>\n    +    private SpoutOutputCollector collector;<br/>\n    +    private long lastCheckpointTs;<br/>\n    +    private int checkpointInterval;<br/>\n    +    private boolean recoveryStepInProgress;<br/>\n    +    private boolean checkpointStepInProgress;<br/>\n    +    private boolean recovering;<br/>\n    +    private KeyValueState<String, CheckPointState> checkpointState;<br/>\n    +<br/>\n    +    @Override<br/>\n    +    public void open(Map conf, TopologyContext context, SpoutOutputCollector collector) </p>\n{\n    +open(context, collector, loadCheckpointInterval(conf), loadCheckpointState(conf, context));\n    +    }\n<p>    +<br/>\n    +    // package access for unit test<br/>\n    +    void open(TopologyContext context, SpoutOutputCollector collector,<br/>\n    +      int checkpointInterval, KeyValueState<String, CheckPointState> checkpointState) </p>\n{\n    +this.context = context;\n    +this.collector = collector;\n    +this.checkpointInterval = checkpointInterval;\n    +this.checkpointState = checkpointState;\n    +lastCheckpointTs = 0;\n    +recoveryStepInProgress = false;\n    +checkpointStepInProgress = false;\n    +recovering = true;\n    +    }\n<p>    +<br/>\n    +    @Override<br/>\n    +    public void nextTuple() {<br/>\n    +if (shouldRecover()) {<br/>\n    +    LOG.debug(\"In recovery\");<br/>\n    +    handleRecovery();<br/>\n    +    startProgress();<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Actually it can't be moved out since its in the `elseif`. If nextTuple is invoked while its in the middle of recovering/checkpointing, it does not do anything. I will add a final else and put logs/comment.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612626789/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612626795","html_url":"https://github.com/apache/storm/issues/5013#issuecomment-2612626795","issue_url":"https://api.github.com/repos/apache/storm/issues/5013","id":2612626795,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MjY3OTU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-12-23T05:50:10Z","updated_at":"2025-01-24T14:12:14Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user arunmahadevan commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/939#discussion_r48323100\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/939#discussion_r48323100</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/spout/CheckpointSpout.java &#8212;<br/>\n    @@ -0,0 +1,280 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package backtype.storm.spout;<br/>\n    +<br/>\n    +import backtype.storm.Config;<br/>\n    +import backtype.storm.state.KeyValueState;<br/>\n    +import backtype.storm.state.StateFactory;<br/>\n    +import backtype.storm.task.TopologyContext;<br/>\n    +import backtype.storm.topology.OutputFieldsDeclarer;<br/>\n    +import backtype.storm.topology.base.BaseRichSpout;<br/>\n    +import backtype.storm.tuple.Fields;<br/>\n    +import backtype.storm.tuple.Tuple;<br/>\n    +import backtype.storm.tuple.Values;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +import java.util.Map;<br/>\n    +import static backtype.storm.spout.CheckPointState.State.COMMITTED;<br/>\n    +import static backtype.storm.spout.CheckPointState.State.COMMITTING;<br/>\n    +import static backtype.storm.spout.CheckPointState.State.PREPARING;<br/>\n    +<br/>\n    +/**<br/>\n    + * Emits checkpoint tuples which is used to save the state of the </p>\n{@link backtype.storm.topology.IStatefulComponent}\n<p>    + * across the topology. If a topology contains Stateful bolts, Checkpoint spouts are automatically added<br/>\n    + * to the topology. There is only one Checkpoint task per topology.<br/>\n    + * <p/><br/>\n    + * Checkpoint spout stores its internal state in a </p>\n{@link KeyValueState}\n<p>. The state transitions are as follows.<br/>\n    + * <p/><br/>\n    + * <pre><br/>\n    + *  ROLLBACK(tx2)<br/>\n    + *       <-------------  PREPARE(tx2)     COMMIT(tx2)<br/>\n    + * COMMITTED(tx1)-------------> PREPARING(tx2) --------------> COMMITTING(tx2) -----------------> COMMITTED (tx2)<br/>\n    + *<br/>\n    + *<br/>\n    + * </pre><br/>\n    + */<br/>\n    +public class CheckpointSpout extends BaseRichSpout {<br/>\n    +    private static final Logger LOG = LoggerFactory.getLogger(CheckpointSpout.class);<br/>\n    +<br/>\n    +    public static final String CHECKPOINT_STREAM_ID = \"$checkpoint\";<br/>\n    +    public static final String CHECKPOINT_COMPONENT_ID = \"$checkpointspout\";<br/>\n    +    public static final String CHECKPOINT_FIELD_TXID = \"txid\";<br/>\n    +    public static final String CHECKPOINT_FIELD_ACTION = \"action\";<br/>\n    +    public static final String CHECKPOINT_ACTION_PREPARE = \"prepare\";<br/>\n    +    public static final String CHECKPOINT_ACTION_COMMIT = \"commit\";<br/>\n    +    public static final String CHECKPOINT_ACTION_ROLLBACK = \"rollback\";<br/>\n    +    public static final String CHECKPOINT_ACTION_INITSTATE = \"initstate\";<br/>\n    +<br/>\n    +    private static final String TX_STATE_KEY = \"__state\";<br/>\n    +    private static final int DEFAULT_CHECKPOINT_INTERVAL = 1000; // every sec<br/>\n    +<br/>\n    +    private TopologyContext context;<br/>\n    +    private SpoutOutputCollector collector;<br/>\n    +    private long lastCheckpointTs;<br/>\n    +    private int checkpointInterval;<br/>\n    +    private boolean recoveryStepInProgress;<br/>\n    +    private boolean checkpointStepInProgress;<br/>\n    +    private boolean recovering;<br/>\n    +    private KeyValueState<String, CheckPointState> checkpointState;<br/>\n    +<br/>\n    +    @Override<br/>\n    +    public void open(Map conf, TopologyContext context, SpoutOutputCollector collector) </p>\n{\n    +open(context, collector, loadCheckpointInterval(conf), loadCheckpointState(conf, context));\n    +    }\n<p>    +<br/>\n    +    // package access for unit test<br/>\n    +    void open(TopologyContext context, SpoutOutputCollector collector,<br/>\n    +      int checkpointInterval, KeyValueState<String, CheckPointState> checkpointState) </p>\n{\n    +this.context = context;\n    +this.collector = collector;\n    +this.checkpointInterval = checkpointInterval;\n    +this.checkpointState = checkpointState;\n    +lastCheckpointTs = 0;\n    +recoveryStepInProgress = false;\n    +checkpointStepInProgress = false;\n    +recovering = true;\n    +    }\n<p>    +<br/>\n    +    @Override<br/>\n    +    public void nextTuple() {<br/>\n    +if (shouldRecover()) </p>\n{\n    +    LOG.debug(\"In recovery\");\n    +    handleRecovery();\n    +    startProgress();\n    +}\n<p> else if (shouldCheckpoint()) </p>\n{\n    +    LOG.debug(\"In checkpoint\");\n    +    doCheckpoint();\n    +    startProgress();\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    @Override<br/>\n    +    public void ack(Object msgId) {<br/>\n    +CheckPointState txState = getTxState();<br/>\n    +LOG.debug(\"Got ack with txid {}, current txState {}\", msgId, txState);<br/>\n    +if (txState.txid == ((Number) msgId).longValue()) {<br/>\n    +    if (recovering) </p>\n{\n    +handleRecoveryAck();\n    +    }\n<p> else </p>\n{\n    +handleCheckpointAck();\n    +    }\n<p>    +} else {<br/>\n    +    LOG.warn(\"Ack msgid {}, txState.txid {} mismatch\", msgId, txState.txid);<br/>\n    +}<br/>\n    +resetProgress();<br/>\n    +    }<br/>\n    +<br/>\n    +    @Override<br/>\n    +    public void fail(Object msgId) {<br/>\n    +LOG.debug(\"Got fail with msgid {}\", msgId);<br/>\n    +resetProgress();<br/>\n    +    }<br/>\n    +<br/>\n    +    @Override<br/>\n    +    public void declareOutputFields(OutputFieldsDeclarer declarer) </p>\n{\n    +declarer.declareStream(CHECKPOINT_STREAM_ID, new Fields(CHECKPOINT_FIELD_TXID, CHECKPOINT_FIELD_ACTION));\n    +    }\n<p>    +<br/>\n    +    @Override<br/>\n    +    public Map<String, Object> getComponentConfiguration() {<br/>\n    +Config conf = new Config();<br/>\n    +conf.put(Config.TOPOLOGY_SLEEP_SPOUT_WAIT_STRATEGY_TIME_MS, 100);<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    It was added to sleep for slightly longer time rather than spinning in the nextTuple. Instead of hard coding, will change this to 10% of the checkpoint interval time.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612626795/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612626797","html_url":"https://github.com/apache/storm/issues/5013#issuecomment-2612626797","issue_url":"https://api.github.com/repos/apache/storm/issues/5013","id":2612626797,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MjY3OTc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-12-23T05:50:13Z","updated_at":"2025-01-24T14:12:14Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user arunmahadevan commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/939#discussion_r48323106\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/939#discussion_r48323106</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/spout/CheckpointSpout.java &#8212;<br/>\n    @@ -0,0 +1,280 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package backtype.storm.spout;<br/>\n    +<br/>\n    +import backtype.storm.Config;<br/>\n    +import backtype.storm.state.KeyValueState;<br/>\n    +import backtype.storm.state.StateFactory;<br/>\n    +import backtype.storm.task.TopologyContext;<br/>\n    +import backtype.storm.topology.OutputFieldsDeclarer;<br/>\n    +import backtype.storm.topology.base.BaseRichSpout;<br/>\n    +import backtype.storm.tuple.Fields;<br/>\n    +import backtype.storm.tuple.Tuple;<br/>\n    +import backtype.storm.tuple.Values;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +import java.util.Map;<br/>\n    +import static backtype.storm.spout.CheckPointState.State.COMMITTED;<br/>\n    +import static backtype.storm.spout.CheckPointState.State.COMMITTING;<br/>\n    +import static backtype.storm.spout.CheckPointState.State.PREPARING;<br/>\n    +<br/>\n    +/**<br/>\n    + * Emits checkpoint tuples which is used to save the state of the </p>\n{@link backtype.storm.topology.IStatefulComponent}\n<p>    + * across the topology. If a topology contains Stateful bolts, Checkpoint spouts are automatically added<br/>\n    + * to the topology. There is only one Checkpoint task per topology.<br/>\n    + * <p/><br/>\n    + * Checkpoint spout stores its internal state in a </p>\n{@link KeyValueState}\n<p>. The state transitions are as follows.<br/>\n    + * <p/><br/>\n    + * <pre><br/>\n    + *  ROLLBACK(tx2)<br/>\n    + *       <-------------  PREPARE(tx2)     COMMIT(tx2)<br/>\n    + * COMMITTED(tx1)-------------> PREPARING(tx2) --------------> COMMITTING(tx2) -----------------> COMMITTED (tx2)<br/>\n    + *<br/>\n    + *<br/>\n    + * </pre><br/>\n    + */<br/>\n    +public class CheckpointSpout extends BaseRichSpout {<br/>\n    +    private static final Logger LOG = LoggerFactory.getLogger(CheckpointSpout.class);<br/>\n    +<br/>\n    +    public static final String CHECKPOINT_STREAM_ID = \"$checkpoint\";<br/>\n    +    public static final String CHECKPOINT_COMPONENT_ID = \"$checkpointspout\";<br/>\n    +    public static final String CHECKPOINT_FIELD_TXID = \"txid\";<br/>\n    +    public static final String CHECKPOINT_FIELD_ACTION = \"action\";<br/>\n    +    public static final String CHECKPOINT_ACTION_PREPARE = \"prepare\";<br/>\n    +    public static final String CHECKPOINT_ACTION_COMMIT = \"commit\";<br/>\n    +    public static final String CHECKPOINT_ACTION_ROLLBACK = \"rollback\";<br/>\n    +    public static final String CHECKPOINT_ACTION_INITSTATE = \"initstate\";<br/>\n    +<br/>\n    +    private static final String TX_STATE_KEY = \"__state\";<br/>\n    +    private static final int DEFAULT_CHECKPOINT_INTERVAL = 1000; // every sec<br/>\n    +<br/>\n    +    private TopologyContext context;<br/>\n    +    private SpoutOutputCollector collector;<br/>\n    +    private long lastCheckpointTs;<br/>\n    +    private int checkpointInterval;<br/>\n    +    private boolean recoveryStepInProgress;<br/>\n    +    private boolean checkpointStepInProgress;<br/>\n    +    private boolean recovering;<br/>\n    +    private KeyValueState<String, CheckPointState> checkpointState;<br/>\n    +<br/>\n    +    @Override<br/>\n    +    public void open(Map conf, TopologyContext context, SpoutOutputCollector collector) </p>\n{\n    +open(context, collector, loadCheckpointInterval(conf), loadCheckpointState(conf, context));\n    +    }\n<p>    +<br/>\n    +    // package access for unit test<br/>\n    +    void open(TopologyContext context, SpoutOutputCollector collector,<br/>\n    +      int checkpointInterval, KeyValueState<String, CheckPointState> checkpointState) </p>\n{\n    +this.context = context;\n    +this.collector = collector;\n    +this.checkpointInterval = checkpointInterval;\n    +this.checkpointState = checkpointState;\n    +lastCheckpointTs = 0;\n    +recoveryStepInProgress = false;\n    +checkpointStepInProgress = false;\n    +recovering = true;\n    +    }\n<p>    +<br/>\n    +    @Override<br/>\n    +    public void nextTuple() {<br/>\n    +if (shouldRecover()) </p>\n{\n    +    LOG.debug(\"In recovery\");\n    +    handleRecovery();\n    +    startProgress();\n    +}\n<p> else if (shouldCheckpoint()) </p>\n{\n    +    LOG.debug(\"In checkpoint\");\n    +    doCheckpoint();\n    +    startProgress();\n    +}\n<p>    +    }<br/>\n    +<br/>\n    +    @Override<br/>\n    +    public void ack(Object msgId) {<br/>\n    +CheckPointState txState = getTxState();<br/>\n    +LOG.debug(\"Got ack with txid {}, current txState {}\", msgId, txState);<br/>\n    +if (txState.txid == ((Number) msgId).longValue()) {<br/>\n    +    if (recovering) </p>\n{\n    +handleRecoveryAck();\n    +    }\n<p> else </p>\n{\n    +handleCheckpointAck();\n    +    }\n<p>    +} else {<br/>\n    +    LOG.warn(\"Ack msgid {}, txState.txid {} mismatch\", msgId, txState.txid);<br/>\n    +}<br/>\n    +resetProgress();<br/>\n    +    }<br/>\n    +<br/>\n    +    @Override<br/>\n    +    public void fail(Object msgId) {<br/>\n    +LOG.debug(\"Got fail with msgid {}\", msgId);<br/>\n    +resetProgress();<br/>\n    +    }<br/>\n    +<br/>\n    +    @Override<br/>\n    +    public void declareOutputFields(OutputFieldsDeclarer declarer) </p>\n{\n    +declarer.declareStream(CHECKPOINT_STREAM_ID, new Fields(CHECKPOINT_FIELD_TXID, CHECKPOINT_FIELD_ACTION));\n    +    }\n<p>    +<br/>\n    +    @Override<br/>\n    +    public Map<String, Object> getComponentConfiguration() </p>\n{\n    +Config conf = new Config();\n    +conf.put(Config.TOPOLOGY_SLEEP_SPOUT_WAIT_STRATEGY_TIME_MS, 100);\n    +return conf;\n    +    }\n<p>    +<br/>\n    +    public static boolean isCheckpoint(Tuple input) </p>\n{\n    +return CHECKPOINT_STREAM_ID.equals(input.getSourceStreamId());\n    +    }\n<p>    +<br/>\n    +    /**<br/>\n    +     * Loads the last saved checkpoint state the from persistent storage.<br/>\n    +     */<br/>\n    +    private KeyValueState<String, CheckPointState> loadCheckpointState(Map conf, TopologyContext ctx) {<br/>\n    +String namespace = ctx.getThisComponentId() + \"-\" + ctx.getThisTaskId();<br/>\n    +KeyValueState<String, CheckPointState> state =<br/>\n    +(KeyValueState<String, CheckPointState>) StateFactory.getState(namespace, conf, ctx);<br/>\n    +if (state.get(TX_STATE_KEY) == null) {<br/>\n    +    CheckPointState txState = new CheckPointState(-1, COMMITTED);<br/>\n    +    state.put(TX_STATE_KEY, txState);<br/>\n    +    state.commit();<br/>\n    +    LOG.debug(\"Initialized checkpoint spout state with txState {}\", txState);<br/>\n    +} else {<br/>\n    +    LOG.debug(\"Got checkpoint spout state {}\", state.get(TX_STATE_KEY));<br/>\n    +}<br/>\n    +return state;<br/>\n    +    }<br/>\n    +<br/>\n    +    private int loadCheckpointInterval(Map stormConf) {<br/>\n    +int interval;<br/>\n    +if (stormConf.containsKey(Config.TOPOLOGY_STATE_CHECKPOINT_INTERVAL)) </p>\n{\n    +    interval = ((Number) stormConf.get(Config.TOPOLOGY_STATE_CHECKPOINT_INTERVAL)).intValue();\n    +}\n<p> else </p>\n{\n    +    interval = DEFAULT_CHECKPOINT_INTERVAL;\n    +}\n<p>    +return interval;<br/>\n    +    }<br/>\n    +<br/>\n    +    private boolean shouldRecover() </p>\n{\n    +return recovering && !recoveryStepInProgress;\n    +    }\n<p>    +<br/>\n    +    private boolean shouldCheckpoint() </p>\n{\n    +return !recovering && !checkpointStepInProgress\n    +&& (System.currentTimeMillis() - lastCheckpointTs) > checkpointInterval;\n    +    }\n<p>    +<br/>\n    +    private boolean shouldRollback(CheckPointState txState) </p>\n{\n    +return txState.state == PREPARING;\n    +    }\n<p>    +<br/>\n    +    private boolean shouldCommit(CheckPointState txState) </p>\n{\n    +return txState.state == COMMITTING;\n    +    }\n<p>    +<br/>\n    +    private boolean shouldInitState(CheckPointState txState) </p>\n{\n    +return txState.state == COMMITTED;\n    +    }\n<p>    +<br/>\n    +    private void handleRecovery() {<br/>\n    +CheckPointState txState = getTxState();<br/>\n    +LOG.debug(\"Current txState is {}\", txState);<br/>\n    +if (shouldRollback(txState)) {<br/>\n    +    LOG.debug(\"Emitting rollback with txid {}\", txState.txid);<br/>\n    +    collector.emit(CHECKPOINT_STREAM_ID, new Values(txState.txid, CHECKPOINT_ACTION_ROLLBACK), txState.txid);<br/>\n    +} else if (shouldCommit(txState)) {<br/>\n    +    LOG.debug(\"Emitting commit with txid {}\", txState.txid);<br/>\n    +    collector.emit(CHECKPOINT_STREAM_ID, new Values(txState.txid, CHECKPOINT_ACTION_COMMIT), txState.txid);<br/>\n    +} else if (shouldInitState(txState)) {<br/>\n    +    LOG.debug(\"Emitting init state with txid {}\", txState.txid);<br/>\n    +    collector.emit(CHECKPOINT_STREAM_ID, new Values(txState.txid, CHECKPOINT_ACTION_INITSTATE), txState.txid);<br/>\n    +}<br/>\n    +startProgress();<br/>\n    +    }<br/>\n    +<br/>\n    +    private void handleRecoveryAck() {<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    Yes it will make it cleaner. I will try to refactor it and move it to nextAction and nextState in checkpoint state.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612626797/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612691629","html_url":"https://github.com/apache/storm/issues/5246#issuecomment-2612691629","issue_url":"https://api.github.com/repos/apache/storm/issues/5246","id":2612691629,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTE2Mjk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-12-23T08:44:16Z","updated_at":"2025-01-24T14:40:41Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>GitHub user vesense opened a pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/969\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/969</a></p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1411\" title=\"some fixes for storm-windowing\" class=\"issue-link\" data-issue-key=\"STORM-1411\"><del>STORM-1411</del></a> make windowing EvictionPolicy type safety</p>\n\n\n\n<p>You can merge this pull request into a Git repository by running:</p>\n\n<p>    $ git pull <a href=\"https://github.com/vesense/storm\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/vesense/storm</a> patch-16</p>\n\n<p>Alternatively you can review and apply these changes as the patch at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/969.patch\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/969.patch</a></p>\n\n<p>To close this pull request, make a commit to your master/trunk branch<br/>\nwith (at least) the following in the commit message:</p>\n\n<p>    This closes #969</p>\n\n<hr />\n<p>commit 939cdb1b96b16c01575e5caa3ed9d0dd52913a17<br/>\nAuthor: Xin Wang <best.wangxin@163.com><br/>\nDate:   2015-12-23T08:41:03Z</p>\n\n<p>    make EvictionPolicy type safety</p>\n\n<p>commit 0e5e653f3c88364e3b28be9299a4e4fcfdd0f949<br/>\nAuthor: Xin Wang <best.wangxin@163.com><br/>\nDate:   2015-12-23T08:43:04Z</p>\n\n<p>    make EvictionPolicy type safety</p>\n\n<hr />","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612691629/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612691760","html_url":"https://github.com/apache/storm/issues/5247#issuecomment-2612691760","issue_url":"https://api.github.com/repos/apache/storm/issues/5247","id":2612691760,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTE3NjA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-12-23T09:04:02Z","updated_at":"2025-01-24T14:40:44Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>GitHub user vesense opened a pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/970\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/970</a></p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1412\" title=\"Null check should be done in the first place\" class=\"issue-link\" data-issue-key=\"STORM-1412\"><del>STORM-1412</del></a> null check should be done in the first place</p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1412\" class=\"external-link\" rel=\"nofollow\">https://issues.apache.org/jira/browse/STORM-1412</a></p>\n\n<p>You can merge this pull request into a Git repository by running:</p>\n\n<p>    $ git pull <a href=\"https://github.com/vesense/storm\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/vesense/storm</a> patch-17</p>\n\n<p>Alternatively you can review and apply these changes as the patch at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/970.patch\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/970.patch</a></p>\n\n<p>To close this pull request, make a commit to your master/trunk branch<br/>\nwith (at least) the following in the commit message:</p>\n\n<p>    This closes #970</p>\n\n<hr />\n<p>commit 7ee350cdb479320885435386e8b77ec93240f57e<br/>\nAuthor: Xin Wang <best.wangxin@163.com><br/>\nDate:   2015-12-23T08:56:56Z</p>\n\n<p>    null check should be done in the first place</p>\n\n<hr />","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612691760/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/166838975","html_url":"https://github.com/apache/storm/pull/969#issuecomment-166838975","issue_url":"https://api.github.com/repos/apache/storm/issues/969","id":166838975,"node_id":"MDEyOklzc3VlQ29tbWVudDE2NjgzODk3NQ==","user":{"login":"vesense","id":6711230,"node_id":"MDQ6VXNlcjY3MTEyMzA=","avatar_url":"https://avatars.githubusercontent.com/u/6711230?v=4","gravatar_id":"","url":"https://api.github.com/users/vesense","html_url":"https://github.com/vesense","followers_url":"https://api.github.com/users/vesense/followers","following_url":"https://api.github.com/users/vesense/following{/other_user}","gists_url":"https://api.github.com/users/vesense/gists{/gist_id}","starred_url":"https://api.github.com/users/vesense/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vesense/subscriptions","organizations_url":"https://api.github.com/users/vesense/orgs","repos_url":"https://api.github.com/users/vesense/repos","events_url":"https://api.github.com/users/vesense/events{/privacy}","received_events_url":"https://api.github.com/users/vesense/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-12-23T09:09:26Z","updated_at":"2015-12-23T09:09:26Z","author_association":"MEMBER","body":"The Travis CI failed build seems unrelated.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/166838975/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612691636","html_url":"https://github.com/apache/storm/issues/5246#issuecomment-2612691636","issue_url":"https://api.github.com/repos/apache/storm/issues/5246","id":2612691636,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTE2MzY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-12-23T09:09:28Z","updated_at":"2025-01-24T14:40:41Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user vesense commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/969#issuecomment-166838975\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/969#issuecomment-166838975</a></p>\n\n<p>    The Travis CI failed build seems unrelated.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612691636/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612620952","html_url":"https://github.com/apache/storm/issues/4977#issuecomment-2612620952","issue_url":"https://api.github.com/repos/apache/storm/issues/4977","id":2612620952,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MjA5NTI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-12-23T09:16:25Z","updated_at":"2025-01-24T14:09:39Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=gv\">gv</a>:</i>\n<p>hai.. <br/>\nUsing storm bolts I want to insert the data into the PostgreSQL tables which have parent and child relationships. Up to my knowledge storm bolts execute parallelly so in the child table data is not inserting because of constraints. Is there is any way to execute bolts one after another i.e., after execution of one bolt only next bolt have to execute. can anyone please help me..</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612620952/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612691890","html_url":"https://github.com/apache/storm/issues/5248#issuecomment-2612691890","issue_url":"https://api.github.com/repos/apache/storm/issues/5248","id":2612691890,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTE4OTA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-12-23T09:31:12Z","updated_at":"2025-01-24T14:40:48Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>GitHub user vesense opened a pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/971\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/971</a></p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1413\" title=\"remove unused variables for some tests\" class=\"issue-link\" data-issue-key=\"STORM-1413\"><del>STORM-1413</del></a> remove unused variables for localizer test</p>\n\n\n\n<p>You can merge this pull request into a Git repository by running:</p>\n\n<p>    $ git pull <a href=\"https://github.com/vesense/storm\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/vesense/storm</a> patch-18</p>\n\n<p>Alternatively you can review and apply these changes as the patch at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/971.patch\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/971.patch</a></p>\n\n<p>To close this pull request, make a commit to your master/trunk branch<br/>\nwith (at least) the following in the commit message:</p>\n\n<p>    This closes #971</p>\n\n<hr />\n<p>commit b2f6064bc0fe6960c1ddb248e4fbe9913b27c74a<br/>\nAuthor: Xin Wang <best.wangxin@163.com><br/>\nDate:   2015-12-23T09:28:14Z</p>\n\n<p>    remove unused variables</p>\n\n<hr />","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612691890/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612692032","html_url":"https://github.com/apache/storm/issues/5249#issuecomment-2612692032","issue_url":"https://api.github.com/repos/apache/storm/issues/5249","id":2612692032,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTIwMzI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-12-23T10:46:26Z","updated_at":"2025-01-24T14:40:52Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>GitHub user vesense opened a pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/972\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/972</a></p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1414\" title=\"Some improvements for multilang JsonSerializer\" class=\"issue-link\" data-issue-key=\"STORM-1414\"><del>STORM-1414</del></a> refactor multilang JsonSerializer</p>\n\n\n\n<p>You can merge this pull request into a Git repository by running:</p>\n\n<p>    $ git pull <a href=\"https://github.com/vesense/storm\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/vesense/storm</a> patch-19</p>\n\n<p>Alternatively you can review and apply these changes as the patch at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/972.patch\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/972.patch</a></p>\n\n<p>To close this pull request, make a commit to your master/trunk branch<br/>\nwith (at least) the following in the commit message:</p>\n\n<p>    This closes #972</p>\n\n<hr />\n<p>commit 0cd69a13183d6d935925d0b49b23ae752e9aeac6<br/>\nAuthor: Xin Wang <best.wangxin@163.com><br/>\nDate:   2015-12-23T10:37:18Z</p>\n\n<p>    refactor multilang JsonSerializer</p>\n\n<hr />","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612692032/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612692187","html_url":"https://github.com/apache/storm/issues/5250#issuecomment-2612692187","issue_url":"https://api.github.com/repos/apache/storm/issues/5250","id":2612692187,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTIxODc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-12-23T11:18:08Z","updated_at":"2025-01-24T14:40:55Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>GitHub user vesense opened a pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/973\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/973</a></p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1415\" title=\"Some improvements for trident map StateUpdater\" class=\"issue-link\" data-issue-key=\"STORM-1415\"><del>STORM-1415</del></a> refactor trident map StateUpdater</p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1415\" class=\"external-link\" rel=\"nofollow\">https://issues.apache.org/jira/browse/STORM-1415</a></p>\n\n<p>You can merge this pull request into a Git repository by running:</p>\n\n<p>    $ git pull <a href=\"https://github.com/vesense/storm\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/vesense/storm</a> patch-20</p>\n\n<p>Alternatively you can review and apply these changes as the patch at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/973.patch\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/973.patch</a></p>\n\n<p>To close this pull request, make a commit to your master/trunk branch<br/>\nwith (at least) the following in the commit message:</p>\n\n<p>    This closes #973</p>\n\n<hr />\n<p>commit 716a18df015e568de47f3ef1e64fbe6aaccf3c52<br/>\nAuthor: Xin Wang <best.wangxin@163.com><br/>\nDate:   2015-12-23T11:05:08Z</p>\n\n<p>    refactor MapReducerAggStateUpdater</p>\n\n<p>commit 48c52db6ed0c67549ce4d0ad7e50ad2d35fe5f5a<br/>\nAuthor: Xin Wang <best.wangxin@163.com><br/>\nDate:   2015-12-23T11:07:50Z</p>\n\n<p>    refactor MapCombinerAggStateUpdater</p>\n\n<hr />","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612692187/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612692326","html_url":"https://github.com/apache/storm/issues/5251#issuecomment-2612692326","issue_url":"https://api.github.com/repos/apache/storm/issues/5251","id":2612692326,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTIzMjY=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-12-23T13:13:13Z","updated_at":"2025-01-24T14:40:59Z","author_association":"COLLABORATOR","body":"Subtask of parent task STORM-1167","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612692326/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/166891539","html_url":"https://github.com/apache/storm/pull/939#issuecomment-166891539","issue_url":"https://api.github.com/repos/apache/storm/issues/939","id":166891539,"node_id":"MDEyOklzc3VlQ29tbWVudDE2Njg5MTUzOQ==","user":{"login":"arunmahadevan","id":6792890,"node_id":"MDQ6VXNlcjY3OTI4OTA=","avatar_url":"https://avatars.githubusercontent.com/u/6792890?v=4","gravatar_id":"","url":"https://api.github.com/users/arunmahadevan","html_url":"https://github.com/arunmahadevan","followers_url":"https://api.github.com/users/arunmahadevan/followers","following_url":"https://api.github.com/users/arunmahadevan/following{/other_user}","gists_url":"https://api.github.com/users/arunmahadevan/gists{/gist_id}","starred_url":"https://api.github.com/users/arunmahadevan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/arunmahadevan/subscriptions","organizations_url":"https://api.github.com/users/arunmahadevan/orgs","repos_url":"https://api.github.com/users/arunmahadevan/repos","events_url":"https://api.github.com/users/arunmahadevan/events{/privacy}","received_events_url":"https://api.github.com/users/arunmahadevan/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-12-23T13:16:00Z","updated_at":"2015-12-23T13:16:00Z","author_association":"CONTRIBUTOR","body":"@Parth-Brahmbhatt @harshach refactored the state handling code to make it cleaner and addressed other review comments. Also added a followup task for documentation - https://issues.apache.org/jira/browse/STORM-1416\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/166891539/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612626799","html_url":"https://github.com/apache/storm/issues/5013#issuecomment-2612626799","issue_url":"https://api.github.com/repos/apache/storm/issues/5013","id":2612626799,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MjY3OTk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-12-23T13:16:03Z","updated_at":"2025-01-24T14:12:14Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user arunmahadevan commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/939#issuecomment-166891539\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/939#issuecomment-166891539</a></p>\n\n<p>    @Parth-Brahmbhatt @harshach refactored the state handling code to make it cleaner and addressed other review comments. Also added a followup task for documentation - <a href=\"https://issues.apache.org/jira/browse/STORM-1416\" class=\"external-link\" rel=\"nofollow\">https://issues.apache.org/jira/browse/STORM-1416</a></p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612626799/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/166898038","html_url":"https://github.com/apache/storm/pull/965#issuecomment-166898038","issue_url":"https://api.github.com/repos/apache/storm/issues/965","id":166898038,"node_id":"MDEyOklzc3VlQ29tbWVudDE2Njg5ODAzOA==","user":{"login":"vesense","id":6711230,"node_id":"MDQ6VXNlcjY3MTEyMzA=","avatar_url":"https://avatars.githubusercontent.com/u/6711230?v=4","gravatar_id":"","url":"https://api.github.com/users/vesense","html_url":"https://github.com/vesense","followers_url":"https://api.github.com/users/vesense/followers","following_url":"https://api.github.com/users/vesense/following{/other_user}","gists_url":"https://api.github.com/users/vesense/gists{/gist_id}","starred_url":"https://api.github.com/users/vesense/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vesense/subscriptions","organizations_url":"https://api.github.com/users/vesense/orgs","repos_url":"https://api.github.com/users/vesense/repos","events_url":"https://api.github.com/users/vesense/events{/privacy}","received_events_url":"https://api.github.com/users/vesense/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-12-23T13:38:05Z","updated_at":"2015-12-23T13:38:05Z","author_association":"MEMBER","body":"LGTM +1\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/166898038/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612691392","html_url":"https://github.com/apache/storm/issues/5244#issuecomment-2612691392","issue_url":"https://api.github.com/repos/apache/storm/issues/5244","id":2612691392,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTEzOTI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-12-23T13:38:09Z","updated_at":"2025-01-24T14:40:34Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user vesense commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/965#issuecomment-166898038\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/965#issuecomment-166898038</a></p>\n\n<p>    LGTM +1</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612691392/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/166898153","html_url":"https://github.com/apache/storm/pull/964#issuecomment-166898153","issue_url":"https://api.github.com/repos/apache/storm/issues/964","id":166898153,"node_id":"MDEyOklzc3VlQ29tbWVudDE2Njg5ODE1Mw==","user":{"login":"vesense","id":6711230,"node_id":"MDQ6VXNlcjY3MTEyMzA=","avatar_url":"https://avatars.githubusercontent.com/u/6711230?v=4","gravatar_id":"","url":"https://api.github.com/users/vesense","html_url":"https://github.com/vesense","followers_url":"https://api.github.com/users/vesense/followers","following_url":"https://api.github.com/users/vesense/following{/other_user}","gists_url":"https://api.github.com/users/vesense/gists{/gist_id}","starred_url":"https://api.github.com/users/vesense/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vesense/subscriptions","organizations_url":"https://api.github.com/users/vesense/orgs","repos_url":"https://api.github.com/users/vesense/repos","events_url":"https://api.github.com/users/vesense/events{/privacy}","received_events_url":"https://api.github.com/users/vesense/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-12-23T13:38:45Z","updated_at":"2015-12-23T13:38:45Z","author_association":"MEMBER","body":"LGTM +1\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/166898153/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612691251","html_url":"https://github.com/apache/storm/issues/5243#issuecomment-2612691251","issue_url":"https://api.github.com/repos/apache/storm/issues/5243","id":2612691251,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTEyNTE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-12-23T13:38:46Z","updated_at":"2025-01-24T14:40:31Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user vesense commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/964#issuecomment-166898153\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/964#issuecomment-166898153</a></p>\n\n<p>    LGTM +1</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612691251/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612692460","html_url":"https://github.com/apache/storm/issues/5252#issuecomment-2612692460","issue_url":"https://api.github.com/repos/apache/storm/issues/5252","id":2612692460,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTI0NjA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-12-23T14:13:16Z","updated_at":"2025-01-24T14:41:02Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>GitHub user satishd opened a pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/975\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/975</a></p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1417\" title=\"CoordType breaks equlas/hashCode contract\" class=\"issue-link\" data-issue-key=\"STORM-1417\"><del>STORM-1417</del></a>: fixed equals/hashCode contract in CoordType</p>\n\n\n\n<p>You can merge this pull request into a Git repository by running:</p>\n\n<p>    $ git pull <a href=\"https://github.com/satishd/storm\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/satishd/storm</a> <a href=\"https://issues.apache.org/jira/browse/STORM-1417\" title=\"CoordType breaks equlas/hashCode contract\" class=\"issue-link\" data-issue-key=\"STORM-1417\"><del>STORM-1417</del></a></p>\n\n<p>Alternatively you can review and apply these changes as the patch at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/975.patch\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/975.patch</a></p>\n\n<p>To close this pull request, make a commit to your master/trunk branch<br/>\nwith (at least) the following in the commit message:</p>\n\n<p>    This closes #975</p>\n\n<hr />\n<p>commit 62b7166470611007d30a2bf285f823fe8377b023<br/>\nAuthor: Satish Duggana <sduggana@hortonworks.com><br/>\nDate:   2015-12-23T14:12:08Z</p>\n\n<p>    <a href=\"https://issues.apache.org/jira/browse/STORM-1417\" title=\"CoordType breaks equlas/hashCode contract\" class=\"issue-link\" data-issue-key=\"STORM-1417\"><del>STORM-1417</del></a>: fixed equals/hashCode contract in CoordType</p>\n\n<hr />","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612692460/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/166936730","html_url":"https://github.com/apache/storm/pull/974#issuecomment-166936730","issue_url":"https://api.github.com/repos/apache/storm/issues/974","id":166936730,"node_id":"MDEyOklzc3VlQ29tbWVudDE2NjkzNjczMA==","user":{"login":"harshach","id":38649,"node_id":"MDQ6VXNlcjM4NjQ5","avatar_url":"https://avatars.githubusercontent.com/u/38649?v=4","gravatar_id":"","url":"https://api.github.com/users/harshach","html_url":"https://github.com/harshach","followers_url":"https://api.github.com/users/harshach/followers","following_url":"https://api.github.com/users/harshach/following{/other_user}","gists_url":"https://api.github.com/users/harshach/gists{/gist_id}","starred_url":"https://api.github.com/users/harshach/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/harshach/subscriptions","organizations_url":"https://api.github.com/users/harshach/orgs","repos_url":"https://api.github.com/users/harshach/repos","events_url":"https://api.github.com/users/harshach/events{/privacy}","received_events_url":"https://api.github.com/users/harshach/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-12-23T16:27:59Z","updated_at":"2015-12-23T16:27:59Z","author_association":"CONTRIBUTOR","body":"+1\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/166936730/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/166936941","html_url":"https://github.com/apache/storm/pull/971#issuecomment-166936941","issue_url":"https://api.github.com/repos/apache/storm/issues/971","id":166936941,"node_id":"MDEyOklzc3VlQ29tbWVudDE2NjkzNjk0MQ==","user":{"login":"harshach","id":38649,"node_id":"MDQ6VXNlcjM4NjQ5","avatar_url":"https://avatars.githubusercontent.com/u/38649?v=4","gravatar_id":"","url":"https://api.github.com/users/harshach","html_url":"https://github.com/harshach","followers_url":"https://api.github.com/users/harshach/followers","following_url":"https://api.github.com/users/harshach/following{/other_user}","gists_url":"https://api.github.com/users/harshach/gists{/gist_id}","starred_url":"https://api.github.com/users/harshach/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/harshach/subscriptions","organizations_url":"https://api.github.com/users/harshach/orgs","repos_url":"https://api.github.com/users/harshach/repos","events_url":"https://api.github.com/users/harshach/events{/privacy}","received_events_url":"https://api.github.com/users/harshach/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-12-23T16:29:10Z","updated_at":"2015-12-23T16:29:10Z","author_association":"CONTRIBUTOR","body":"@vesense thanks for these fixes but please send these PRs under 1 jira.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/166936941/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612691893","html_url":"https://github.com/apache/storm/issues/5248#issuecomment-2612691893","issue_url":"https://api.github.com/repos/apache/storm/issues/5248","id":2612691893,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTE4OTM=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-12-23T16:29:13Z","updated_at":"2025-01-24T14:40:48Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user harshach commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/971#issuecomment-166936941\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/971#issuecomment-166936941</a></p>\n\n<p>    @vesense thanks for these fixes but please send these PRs under 1 jira.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612691893/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/166940418","html_url":"https://github.com/apache/storm/pull/975#issuecomment-166940418","issue_url":"https://api.github.com/repos/apache/storm/issues/975","id":166940418,"node_id":"MDEyOklzc3VlQ29tbWVudDE2Njk0MDQxOA==","user":{"login":"harshach","id":38649,"node_id":"MDQ6VXNlcjM4NjQ5","avatar_url":"https://avatars.githubusercontent.com/u/38649?v=4","gravatar_id":"","url":"https://api.github.com/users/harshach","html_url":"https://github.com/harshach","followers_url":"https://api.github.com/users/harshach/followers","following_url":"https://api.github.com/users/harshach/following{/other_user}","gists_url":"https://api.github.com/users/harshach/gists{/gist_id}","starred_url":"https://api.github.com/users/harshach/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/harshach/subscriptions","organizations_url":"https://api.github.com/users/harshach/orgs","repos_url":"https://api.github.com/users/harshach/repos","events_url":"https://api.github.com/users/harshach/events{/privacy}","received_events_url":"https://api.github.com/users/harshach/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-12-23T16:42:02Z","updated_at":"2015-12-23T16:42:02Z","author_association":"CONTRIBUTOR","body":"nice catch @satishd. +1\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/166940418/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612692465","html_url":"https://github.com/apache/storm/issues/5252#issuecomment-2612692465","issue_url":"https://api.github.com/repos/apache/storm/issues/5252","id":2612692465,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTI0NjU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-12-23T16:42:03Z","updated_at":"2025-01-24T14:41:03Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user harshach commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/975#issuecomment-166940418\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/975#issuecomment-166940418</a></p>\n\n<p>    nice catch @satishd. +1</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612692465/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/166941003","html_url":"https://github.com/apache/storm/pull/960#issuecomment-166941003","issue_url":"https://api.github.com/repos/apache/storm/issues/960","id":166941003,"node_id":"MDEyOklzc3VlQ29tbWVudDE2Njk0MTAwMw==","user":{"login":"harshach","id":38649,"node_id":"MDQ6VXNlcjM4NjQ5","avatar_url":"https://avatars.githubusercontent.com/u/38649?v=4","gravatar_id":"","url":"https://api.github.com/users/harshach","html_url":"https://github.com/harshach","followers_url":"https://api.github.com/users/harshach/followers","following_url":"https://api.github.com/users/harshach/following{/other_user}","gists_url":"https://api.github.com/users/harshach/gists{/gist_id}","starred_url":"https://api.github.com/users/harshach/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/harshach/subscriptions","organizations_url":"https://api.github.com/users/harshach/orgs","repos_url":"https://api.github.com/users/harshach/repos","events_url":"https://api.github.com/users/harshach/events{/privacy}","received_events_url":"https://api.github.com/users/harshach/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-12-23T16:43:35Z","updated_at":"2015-12-23T16:43:35Z","author_association":"CONTRIBUTOR","body":"+1\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/166941003/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612690681","html_url":"https://github.com/apache/storm/issues/5240#issuecomment-2612690681","issue_url":"https://api.github.com/repos/apache/storm/issues/5240","id":2612690681,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTA2ODE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-12-23T16:43:36Z","updated_at":"2025-01-24T14:40:16Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user harshach commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/960#issuecomment-166941003\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/960#issuecomment-166941003</a></p>\n\n<p>    +1</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612690681/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/166941112","html_url":"https://github.com/apache/storm/pull/961#issuecomment-166941112","issue_url":"https://api.github.com/repos/apache/storm/issues/961","id":166941112,"node_id":"MDEyOklzc3VlQ29tbWVudDE2Njk0MTExMg==","user":{"login":"harshach","id":38649,"node_id":"MDQ6VXNlcjM4NjQ5","avatar_url":"https://avatars.githubusercontent.com/u/38649?v=4","gravatar_id":"","url":"https://api.github.com/users/harshach","html_url":"https://github.com/harshach","followers_url":"https://api.github.com/users/harshach/followers","following_url":"https://api.github.com/users/harshach/following{/other_user}","gists_url":"https://api.github.com/users/harshach/gists{/gist_id}","starred_url":"https://api.github.com/users/harshach/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/harshach/subscriptions","organizations_url":"https://api.github.com/users/harshach/orgs","repos_url":"https://api.github.com/users/harshach/repos","events_url":"https://api.github.com/users/harshach/events{/privacy}","received_events_url":"https://api.github.com/users/harshach/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-12-23T16:44:13Z","updated_at":"2015-12-23T16:44:13Z","author_association":"CONTRIBUTOR","body":"+1\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/166941112/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612691119","html_url":"https://github.com/apache/storm/issues/5242#issuecomment-2612691119","issue_url":"https://api.github.com/repos/apache/storm/issues/5242","id":2612691119,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTExMTk=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-12-23T16:44:14Z","updated_at":"2025-01-24T14:40:27Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user harshach commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/961#issuecomment-166941112\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/961#issuecomment-166941112</a></p>\n\n<p>    +1</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612691119/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/166941813","html_url":"https://github.com/apache/storm/pull/969#issuecomment-166941813","issue_url":"https://api.github.com/repos/apache/storm/issues/969","id":166941813,"node_id":"MDEyOklzc3VlQ29tbWVudDE2Njk0MTgxMw==","user":{"login":"arunmahadevan","id":6792890,"node_id":"MDQ6VXNlcjY3OTI4OTA=","avatar_url":"https://avatars.githubusercontent.com/u/6792890?v=4","gravatar_id":"","url":"https://api.github.com/users/arunmahadevan","html_url":"https://github.com/arunmahadevan","followers_url":"https://api.github.com/users/arunmahadevan/followers","following_url":"https://api.github.com/users/arunmahadevan/following{/other_user}","gists_url":"https://api.github.com/users/arunmahadevan/gists{/gist_id}","starred_url":"https://api.github.com/users/arunmahadevan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/arunmahadevan/subscriptions","organizations_url":"https://api.github.com/users/arunmahadevan/orgs","repos_url":"https://api.github.com/users/arunmahadevan/repos","events_url":"https://api.github.com/users/arunmahadevan/events{/privacy}","received_events_url":"https://api.github.com/users/arunmahadevan/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-12-23T16:47:17Z","updated_at":"2015-12-23T16:47:17Z","author_association":"CONTRIBUTOR","body":"@vesense can you submit it in a single commit?\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/166941813/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612691637","html_url":"https://github.com/apache/storm/issues/5246#issuecomment-2612691637","issue_url":"https://api.github.com/repos/apache/storm/issues/5246","id":2612691637,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTE2Mzc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-12-23T16:47:18Z","updated_at":"2025-01-24T14:40:41Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user arunmahadevan commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/969#issuecomment-166941813\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/969#issuecomment-166941813</a></p>\n\n<p>    @vesense can you submit it in a single commit?</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612691637/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/166943815","html_url":"https://github.com/apache/storm/pull/968#issuecomment-166943815","issue_url":"https://api.github.com/repos/apache/storm/issues/968","id":166943815,"node_id":"MDEyOklzc3VlQ29tbWVudDE2Njk0MzgxNQ==","user":{"login":"arunmahadevan","id":6792890,"node_id":"MDQ6VXNlcjY3OTI4OTA=","avatar_url":"https://avatars.githubusercontent.com/u/6792890?v=4","gravatar_id":"","url":"https://api.github.com/users/arunmahadevan","html_url":"https://github.com/arunmahadevan","followers_url":"https://api.github.com/users/arunmahadevan/followers","following_url":"https://api.github.com/users/arunmahadevan/following{/other_user}","gists_url":"https://api.github.com/users/arunmahadevan/gists{/gist_id}","starred_url":"https://api.github.com/users/arunmahadevan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/arunmahadevan/subscriptions","organizations_url":"https://api.github.com/users/arunmahadevan/orgs","repos_url":"https://api.github.com/users/arunmahadevan/repos","events_url":"https://api.github.com/users/arunmahadevan/events{/privacy}","received_events_url":"https://api.github.com/users/arunmahadevan/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-12-23T16:55:55Z","updated_at":"2015-12-23T16:55:55Z","author_association":"CONTRIBUTOR","body":"@vesense can you submit it as a part of JIRA? You could club this under STORM-1411 that you already raised and change the Jira title accordingly.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/166943815/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612691640","html_url":"https://github.com/apache/storm/issues/5246#issuecomment-2612691640","issue_url":"https://api.github.com/repos/apache/storm/issues/5246","id":2612691640,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTE2NDA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-12-23T16:55:56Z","updated_at":"2025-01-24T14:40:41Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user arunmahadevan commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/968#issuecomment-166943815\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/968#issuecomment-166943815</a></p>\n\n<p>    @vesense can you submit it as a part of JIRA? You could club this under <a href=\"https://issues.apache.org/jira/browse/STORM-1411\" title=\"some fixes for storm-windowing\" class=\"issue-link\" data-issue-key=\"STORM-1411\"><del>STORM-1411</del></a> that you already raised and change the Jira title accordingly.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612691640/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612626804","html_url":"https://github.com/apache/storm/issues/5013#issuecomment-2612626804","issue_url":"https://api.github.com/repos/apache/storm/issues/5013","id":2612626804,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MjY4MDQ=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-12-23T18:36:40Z","updated_at":"2025-01-24T14:12:14Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user harshach commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/939#discussion_r48368972\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/939#discussion_r48368972</a></p>\n\n<p>    &#8212; Diff: storm-core/src/jvm/backtype/storm/spout/CheckpointSpout.java &#8212;<br/>\n    @@ -0,0 +1,280 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + *<br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + *<br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +package backtype.storm.spout;<br/>\n    +<br/>\n    +import backtype.storm.Config;<br/>\n    +import backtype.storm.state.KeyValueState;<br/>\n    +import backtype.storm.state.StateFactory;<br/>\n    +import backtype.storm.task.TopologyContext;<br/>\n    +import backtype.storm.topology.OutputFieldsDeclarer;<br/>\n    +import backtype.storm.topology.base.BaseRichSpout;<br/>\n    +import backtype.storm.tuple.Fields;<br/>\n    +import backtype.storm.tuple.Tuple;<br/>\n    +import backtype.storm.tuple.Values;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +import java.util.Map;<br/>\n    +import static backtype.storm.spout.CheckPointState.State.COMMITTED;<br/>\n    +import static backtype.storm.spout.CheckPointState.State.COMMITTING;<br/>\n    +import static backtype.storm.spout.CheckPointState.State.PREPARING;<br/>\n    +<br/>\n    +/**<br/>\n    + * Emits checkpoint tuples which is used to save the state of the </p>\n{@link backtype.storm.topology.IStatefulComponent}\n<p>    + * across the topology. If a topology contains Stateful bolts, Checkpoint spouts are automatically added<br/>\n    + * to the topology. There is only one Checkpoint task per topology.<br/>\n    + * <p/><br/>\n    + * Checkpoint spout stores its internal state in a </p>\n{@link KeyValueState}\n<p>. The state transitions are as follows.<br/>\n    + * <p/><br/>\n    + * <pre><br/>\n    + *  ROLLBACK(tx2)<br/>\n    + *       <-------------  PREPARE(tx2)     COMMIT(tx2)<br/>\n    + * COMMITTED(tx1)-------------> PREPARING(tx2) --------------> COMMITTING(tx2) -----------------> COMMITTED (tx2)<br/>\n    + *<br/>\n    + *<br/>\n    + * </pre><br/>\n    + */<br/>\n    +public class CheckpointSpout extends BaseRichSpout {<br/>\n    +    private static final Logger LOG = LoggerFactory.getLogger(CheckpointSpout.class);<br/>\n    +<br/>\n    +    public static final String CHECKPOINT_STREAM_ID = \"$checkpoint\";<br/>\n    +    public static final String CHECKPOINT_COMPONENT_ID = \"$checkpointspout\";<br/>\n    +    public static final String CHECKPOINT_FIELD_TXID = \"txid\";<br/>\n    +    public static final String CHECKPOINT_FIELD_ACTION = \"action\";<br/>\n    +    public static final String CHECKPOINT_ACTION_PREPARE = \"prepare\";<br/>\n    +    public static final String CHECKPOINT_ACTION_COMMIT = \"commit\";<br/>\n    +    public static final String CHECKPOINT_ACTION_ROLLBACK = \"rollback\";<br/>\n    +    public static final String CHECKPOINT_ACTION_INITSTATE = \"initstate\";<br/>\n    +<br/>\n    +    private static final String TX_STATE_KEY = \"__state\";<br/>\n    +    private static final int DEFAULT_CHECKPOINT_INTERVAL = 1000; // every sec<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    @arunmahadevan well if you add that to defaults.yaml it will be set and thats how the defaults has been used so far in storm. Incase if we need to change default in the future its .yaml file change than the code change.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612626804/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/166966801","html_url":"https://github.com/apache/storm/pull/939#issuecomment-166966801","issue_url":"https://api.github.com/repos/apache/storm/issues/939","id":166966801,"node_id":"MDEyOklzc3VlQ29tbWVudDE2Njk2NjgwMQ==","user":{"login":"harshach","id":38649,"node_id":"MDQ6VXNlcjM4NjQ5","avatar_url":"https://avatars.githubusercontent.com/u/38649?v=4","gravatar_id":"","url":"https://api.github.com/users/harshach","html_url":"https://github.com/harshach","followers_url":"https://api.github.com/users/harshach/followers","following_url":"https://api.github.com/users/harshach/following{/other_user}","gists_url":"https://api.github.com/users/harshach/gists{/gist_id}","starred_url":"https://api.github.com/users/harshach/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/harshach/subscriptions","organizations_url":"https://api.github.com/users/harshach/orgs","repos_url":"https://api.github.com/users/harshach/repos","events_url":"https://api.github.com/users/harshach/events{/privacy}","received_events_url":"https://api.github.com/users/harshach/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-12-23T18:37:10Z","updated_at":"2015-12-23T18:37:10Z","author_association":"CONTRIBUTOR","body":"+1 as well. minor nit pick on the default value.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/166966801/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612626808","html_url":"https://github.com/apache/storm/issues/5013#issuecomment-2612626808","issue_url":"https://api.github.com/repos/apache/storm/issues/5013","id":2612626808,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MjY4MDg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-12-23T18:37:11Z","updated_at":"2025-01-24T14:12:14Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user harshach commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/939#issuecomment-166966801\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/939#issuecomment-166966801</a></p>\n\n<p>    +1 as well. minor nit pick on the default value.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612626808/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/166977965","html_url":"https://github.com/apache/storm/pull/939#issuecomment-166977965","issue_url":"https://api.github.com/repos/apache/storm/issues/939","id":166977965,"node_id":"MDEyOklzc3VlQ29tbWVudDE2Njk3Nzk2NQ==","user":{"login":"arunmahadevan","id":6792890,"node_id":"MDQ6VXNlcjY3OTI4OTA=","avatar_url":"https://avatars.githubusercontent.com/u/6792890?v=4","gravatar_id":"","url":"https://api.github.com/users/arunmahadevan","html_url":"https://github.com/arunmahadevan","followers_url":"https://api.github.com/users/arunmahadevan/followers","following_url":"https://api.github.com/users/arunmahadevan/following{/other_user}","gists_url":"https://api.github.com/users/arunmahadevan/gists{/gist_id}","starred_url":"https://api.github.com/users/arunmahadevan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/arunmahadevan/subscriptions","organizations_url":"https://api.github.com/users/arunmahadevan/orgs","repos_url":"https://api.github.com/users/arunmahadevan/repos","events_url":"https://api.github.com/users/arunmahadevan/events{/privacy}","received_events_url":"https://api.github.com/users/arunmahadevan/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-12-23T19:43:11Z","updated_at":"2015-12-23T19:43:11Z","author_association":"CONTRIBUTOR","body":"@harshach while addressing review comments I had added the config in defaults.yaml. I further refactored it to remove the constant and made sure that the value is not too less.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/166977965/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612626812","html_url":"https://github.com/apache/storm/issues/5013#issuecomment-2612626812","issue_url":"https://api.github.com/repos/apache/storm/issues/5013","id":2612626812,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MjY4MTI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-12-23T19:43:12Z","updated_at":"2025-01-24T14:12:14Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user arunmahadevan commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/939#issuecomment-166977965\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/939#issuecomment-166977965</a></p>\n\n<p>    @harshach while addressing review comments I had added the config in defaults.yaml. I further refactored it to remove the constant and made sure that the value is not too less.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612626812/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/166984451","html_url":"https://github.com/apache/storm/pull/974#issuecomment-166984451","issue_url":"https://api.github.com/repos/apache/storm/issues/974","id":166984451,"node_id":"MDEyOklzc3VlQ29tbWVudDE2Njk4NDQ1MQ==","user":{"login":"zhuoliu","id":11683054,"node_id":"MDQ6VXNlcjExNjgzMDU0","avatar_url":"https://avatars.githubusercontent.com/u/11683054?v=4","gravatar_id":"","url":"https://api.github.com/users/zhuoliu","html_url":"https://github.com/zhuoliu","followers_url":"https://api.github.com/users/zhuoliu/followers","following_url":"https://api.github.com/users/zhuoliu/following{/other_user}","gists_url":"https://api.github.com/users/zhuoliu/gists{/gist_id}","starred_url":"https://api.github.com/users/zhuoliu/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/zhuoliu/subscriptions","organizations_url":"https://api.github.com/users/zhuoliu/orgs","repos_url":"https://api.github.com/users/zhuoliu/repos","events_url":"https://api.github.com/users/zhuoliu/events{/privacy}","received_events_url":"https://api.github.com/users/zhuoliu/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-12-23T20:25:04Z","updated_at":"2015-12-23T20:25:04Z","author_association":"NONE","body":"+1\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/166984451/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612631100","html_url":"https://github.com/apache/storm/issues/5037#issuecomment-2612631100","issue_url":"https://api.github.com/repos/apache/storm/issues/5037","id":2612631100,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2MzExMDA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-12-23T21:06:48Z","updated_at":"2025-01-24T14:14:07Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user harshach commented on a diff in the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/936#discussion_r48379489\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/936#discussion_r48379489</a></p>\n\n<p>    &#8212; Diff: external/storm-hdfs/src/main/java/org/apache/storm/hdfs/spout/DirLock.java &#8212;<br/>\n    @@ -0,0 +1,126 @@<br/>\n    +/**<br/>\n    + * Licensed to the Apache Software Foundation (ASF) under one<br/>\n    + * or more contributor license agreements.  See the NOTICE file<br/>\n    + * distributed with this work for additional information<br/>\n    + * regarding copyright ownership.  The ASF licenses this file<br/>\n    + * to you under the Apache License, Version 2.0 (the<br/>\n    + * \"License\"); you may not use this file except in compliance<br/>\n    + * with the License.  You may obtain a copy of the License at<br/>\n    + * <p/><br/>\n    + * <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">http://www.apache.org/licenses/LICENSE-2.0</a><br/>\n    + * <p/><br/>\n    + * Unless required by applicable law or agreed to in writing, software<br/>\n    + * distributed under the License is distributed on an \"AS IS\" BASIS,<br/>\n    + * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.<br/>\n    + * See the License for the specific language governing permissions and<br/>\n    + * limitations under the License.<br/>\n    + */<br/>\n    +<br/>\n    +package org.apache.storm.hdfs.spout;<br/>\n    +<br/>\n    +import org.apache.hadoop.fs.FSDataOutputStream;<br/>\n    +import org.apache.hadoop.fs.FileSystem;<br/>\n    +import org.apache.hadoop.fs.Path;<br/>\n    +import org.apache.hadoop.hdfs.DistributedFileSystem;<br/>\n    +import org.apache.storm.hdfs.common.HdfsUtils;<br/>\n    +import org.slf4j.Logger;<br/>\n    +import org.slf4j.LoggerFactory;<br/>\n    +<br/>\n    +import java.io.IOException;<br/>\n    +<br/>\n    +/**<br/>\n    + * Facility to synchronize access to HDFS directory. The lock itself is represented<br/>\n    + * as a file in the same directory. Relies on atomic file creation.<br/>\n    + */<br/>\n    +public class DirLock {<br/>\n    +  private FileSystem fs;<br/>\n    +  private final Path lockFile;<br/>\n    +  public static final String DIR_LOCK_FILE = \"DIRLOCK\";<br/>\n    +  private static final Logger log = LoggerFactory.getLogger(DirLock.class);<br/>\n    &#8212; End diff &#8211;</p>\n\n<p>    can you make log as LOG. I understand log is the right naming <img class=\"emoticon\" src=\"https://issues.apache.org/jira/images/icons/emoticons/smile.png\" height=\"16\" width=\"16\" align=\"absmiddle\" alt=\"\" border=\"0\"/> but we've LOG everywhere in storm and connectors and makes it consistent.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612631100/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/167018639","html_url":"https://github.com/apache/storm/pull/971#issuecomment-167018639","issue_url":"https://api.github.com/repos/apache/storm/issues/971","id":167018639,"node_id":"MDEyOklzc3VlQ29tbWVudDE2NzAxODYzOQ==","user":{"login":"vesense","id":6711230,"node_id":"MDQ6VXNlcjY3MTEyMzA=","avatar_url":"https://avatars.githubusercontent.com/u/6711230?v=4","gravatar_id":"","url":"https://api.github.com/users/vesense","html_url":"https://github.com/vesense","followers_url":"https://api.github.com/users/vesense/followers","following_url":"https://api.github.com/users/vesense/following{/other_user}","gists_url":"https://api.github.com/users/vesense/gists{/gist_id}","starred_url":"https://api.github.com/users/vesense/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vesense/subscriptions","organizations_url":"https://api.github.com/users/vesense/orgs","repos_url":"https://api.github.com/users/vesense/repos","events_url":"https://api.github.com/users/vesense/events{/privacy}","received_events_url":"https://api.github.com/users/vesense/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-12-24T01:25:00Z","updated_at":"2015-12-24T01:25:00Z","author_association":"MEMBER","body":"@harshach  Thanks. I will fix it.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/167018639/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612691897","html_url":"https://github.com/apache/storm/issues/5248#issuecomment-2612691897","issue_url":"https://api.github.com/repos/apache/storm/issues/5248","id":2612691897,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTE4OTc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-12-24T01:25:01Z","updated_at":"2025-01-24T14:40:48Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user vesense commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/971#issuecomment-167018639\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/971#issuecomment-167018639</a></p>\n\n<p>    @harshach  Thanks. I will fix it.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612691897/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/167022720","html_url":"https://github.com/apache/storm/pull/968#issuecomment-167022720","issue_url":"https://api.github.com/repos/apache/storm/issues/968","id":167022720,"node_id":"MDEyOklzc3VlQ29tbWVudDE2NzAyMjcyMA==","user":{"login":"vesense","id":6711230,"node_id":"MDQ6VXNlcjY3MTEyMzA=","avatar_url":"https://avatars.githubusercontent.com/u/6711230?v=4","gravatar_id":"","url":"https://api.github.com/users/vesense","html_url":"https://github.com/vesense","followers_url":"https://api.github.com/users/vesense/followers","following_url":"https://api.github.com/users/vesense/following{/other_user}","gists_url":"https://api.github.com/users/vesense/gists{/gist_id}","starred_url":"https://api.github.com/users/vesense/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vesense/subscriptions","organizations_url":"https://api.github.com/users/vesense/orgs","repos_url":"https://api.github.com/users/vesense/repos","events_url":"https://api.github.com/users/vesense/events{/privacy}","received_events_url":"https://api.github.com/users/vesense/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-12-24T01:57:02Z","updated_at":"2015-12-24T01:57:02Z","author_association":"MEMBER","body":"@arunmahadevan Thanks. I will fix that.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/167022720/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/167039898","html_url":"https://github.com/apache/storm/pull/972#issuecomment-167039898","issue_url":"https://api.github.com/repos/apache/storm/issues/972","id":167039898,"node_id":"MDEyOklzc3VlQ29tbWVudDE2NzAzOTg5OA==","user":{"login":"2new","id":11454270,"node_id":"MDQ6VXNlcjExNDU0Mjcw","avatar_url":"https://avatars.githubusercontent.com/u/11454270?v=4","gravatar_id":"","url":"https://api.github.com/users/2new","html_url":"https://github.com/2new","followers_url":"https://api.github.com/users/2new/followers","following_url":"https://api.github.com/users/2new/following{/other_user}","gists_url":"https://api.github.com/users/2new/gists{/gist_id}","starred_url":"https://api.github.com/users/2new/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/2new/subscriptions","organizations_url":"https://api.github.com/users/2new/orgs","repos_url":"https://api.github.com/users/2new/repos","events_url":"https://api.github.com/users/2new/events{/privacy}","received_events_url":"https://api.github.com/users/2new/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-12-24T04:30:06Z","updated_at":"2015-12-24T04:30:06Z","author_association":"NONE","body":"+1 LGTM\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/167039898/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612692035","html_url":"https://github.com/apache/storm/issues/5249#issuecomment-2612692035","issue_url":"https://api.github.com/repos/apache/storm/issues/5249","id":2612692035,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTIwMzU=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-12-24T04:30:07Z","updated_at":"2025-01-24T14:40:52Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user 2new commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/972#issuecomment-167039898\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/972#issuecomment-167039898</a></p>\n\n<p>    +1 LGTM</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612692035/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/167060100","html_url":"https://github.com/apache/storm/pull/969#issuecomment-167060100","issue_url":"https://api.github.com/repos/apache/storm/issues/969","id":167060100,"node_id":"MDEyOklzc3VlQ29tbWVudDE2NzA2MDEwMA==","user":{"login":"vesense","id":6711230,"node_id":"MDQ6VXNlcjY3MTEyMzA=","avatar_url":"https://avatars.githubusercontent.com/u/6711230?v=4","gravatar_id":"","url":"https://api.github.com/users/vesense","html_url":"https://github.com/vesense","followers_url":"https://api.github.com/users/vesense/followers","following_url":"https://api.github.com/users/vesense/following{/other_user}","gists_url":"https://api.github.com/users/vesense/gists{/gist_id}","starred_url":"https://api.github.com/users/vesense/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vesense/subscriptions","organizations_url":"https://api.github.com/users/vesense/orgs","repos_url":"https://api.github.com/users/vesense/repos","events_url":"https://api.github.com/users/vesense/events{/privacy}","received_events_url":"https://api.github.com/users/vesense/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-12-24T07:22:47Z","updated_at":"2015-12-24T07:22:47Z","author_association":"MEMBER","body":"@arunmahadevan Thanks. I have rebased the PR.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/167060100/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612691648","html_url":"https://github.com/apache/storm/issues/5246#issuecomment-2612691648","issue_url":"https://api.github.com/repos/apache/storm/issues/5246","id":2612691648,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTE2NDg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-12-24T07:22:48Z","updated_at":"2025-01-24T14:40:41Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user vesense commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/969#issuecomment-167060100\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/969#issuecomment-167060100</a></p>\n\n<p>    @arunmahadevan Thanks. I have rebased the PR.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612691648/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/167067503","html_url":"https://github.com/apache/storm/pull/969#issuecomment-167067503","issue_url":"https://api.github.com/repos/apache/storm/issues/969","id":167067503,"node_id":"MDEyOklzc3VlQ29tbWVudDE2NzA2NzUwMw==","user":{"login":"arunmahadevan","id":6792890,"node_id":"MDQ6VXNlcjY3OTI4OTA=","avatar_url":"https://avatars.githubusercontent.com/u/6792890?v=4","gravatar_id":"","url":"https://api.github.com/users/arunmahadevan","html_url":"https://github.com/arunmahadevan","followers_url":"https://api.github.com/users/arunmahadevan/followers","following_url":"https://api.github.com/users/arunmahadevan/following{/other_user}","gists_url":"https://api.github.com/users/arunmahadevan/gists{/gist_id}","starred_url":"https://api.github.com/users/arunmahadevan/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/arunmahadevan/subscriptions","organizations_url":"https://api.github.com/users/arunmahadevan/orgs","repos_url":"https://api.github.com/users/arunmahadevan/repos","events_url":"https://api.github.com/users/arunmahadevan/events{/privacy}","received_events_url":"https://api.github.com/users/arunmahadevan/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-12-24T08:27:14Z","updated_at":"2015-12-24T08:27:14Z","author_association":"CONTRIBUTOR","body":"I see two PRs with same title. Can you include the changes in https://github.com/apache/storm/pull/968 in this PR in the same commit ?\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/167067503/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612691652","html_url":"https://github.com/apache/storm/issues/5246#issuecomment-2612691652","issue_url":"https://api.github.com/repos/apache/storm/issues/5246","id":2612691652,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTE2NTI=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-12-24T08:27:16Z","updated_at":"2025-01-24T14:40:41Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user arunmahadevan commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/969#issuecomment-167067503\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/969#issuecomment-167067503</a></p>\n\n<p>    I see two PRs with same title. Can you include the changes in <a href=\"https://github.com/apache/storm/pull/968\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/968</a> in this PR in the same commit ?</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612691652/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/167114263","html_url":"https://github.com/apache/storm/pull/969#issuecomment-167114263","issue_url":"https://api.github.com/repos/apache/storm/issues/969","id":167114263,"node_id":"MDEyOklzc3VlQ29tbWVudDE2NzExNDI2Mw==","user":{"login":"vesense","id":6711230,"node_id":"MDQ6VXNlcjY3MTEyMzA=","avatar_url":"https://avatars.githubusercontent.com/u/6711230?v=4","gravatar_id":"","url":"https://api.github.com/users/vesense","html_url":"https://github.com/vesense","followers_url":"https://api.github.com/users/vesense/followers","following_url":"https://api.github.com/users/vesense/following{/other_user}","gists_url":"https://api.github.com/users/vesense/gists{/gist_id}","starred_url":"https://api.github.com/users/vesense/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vesense/subscriptions","organizations_url":"https://api.github.com/users/vesense/orgs","repos_url":"https://api.github.com/users/vesense/repos","events_url":"https://api.github.com/users/vesense/events{/privacy}","received_events_url":"https://api.github.com/users/vesense/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-12-24T13:44:34Z","updated_at":"2015-12-24T13:44:34Z","author_association":"MEMBER","body":"@arunmahadevan OK. Done.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/167114263/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612691660","html_url":"https://github.com/apache/storm/issues/5246#issuecomment-2612691660","issue_url":"https://api.github.com/repos/apache/storm/issues/5246","id":2612691660,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTE2NjA=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-12-24T13:44:35Z","updated_at":"2025-01-24T14:40:41Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user vesense commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/969#issuecomment-167114263\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/969#issuecomment-167114263</a></p>\n\n<p>    @arunmahadevan OK. Done.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612691660/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/167114767","html_url":"https://github.com/apache/storm/pull/968#issuecomment-167114767","issue_url":"https://api.github.com/repos/apache/storm/issues/968","id":167114767,"node_id":"MDEyOklzc3VlQ29tbWVudDE2NzExNDc2Nw==","user":{"login":"vesense","id":6711230,"node_id":"MDQ6VXNlcjY3MTEyMzA=","avatar_url":"https://avatars.githubusercontent.com/u/6711230?v=4","gravatar_id":"","url":"https://api.github.com/users/vesense","html_url":"https://github.com/vesense","followers_url":"https://api.github.com/users/vesense/followers","following_url":"https://api.github.com/users/vesense/following{/other_user}","gists_url":"https://api.github.com/users/vesense/gists{/gist_id}","starred_url":"https://api.github.com/users/vesense/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vesense/subscriptions","organizations_url":"https://api.github.com/users/vesense/orgs","repos_url":"https://api.github.com/users/vesense/repos","events_url":"https://api.github.com/users/vesense/events{/privacy}","received_events_url":"https://api.github.com/users/vesense/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-12-24T13:49:23Z","updated_at":"2015-12-24T13:49:23Z","author_association":"MEMBER","body":"Since the change is included  in https://github.com/apache/storm/pull/969, I will close this PR.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/167114767/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612691668","html_url":"https://github.com/apache/storm/issues/5246#issuecomment-2612691668","issue_url":"https://api.github.com/repos/apache/storm/issues/5246","id":2612691668,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTE2Njg=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-12-24T13:49:24Z","updated_at":"2025-01-24T14:40:41Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user vesense commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/968#issuecomment-167114767\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/968#issuecomment-167114767</a></p>\n\n<p>    Since the change is included  in <a href=\"https://github.com/apache/storm/pull/969\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/969</a>, I will close this PR.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612691668/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612691671","html_url":"https://github.com/apache/storm/issues/5246#issuecomment-2612691671","issue_url":"https://api.github.com/repos/apache/storm/issues/5246","id":2612691671,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTE2NzE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-12-24T13:49:41Z","updated_at":"2025-01-24T14:40:42Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user vesense closed the pull request at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/968\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/968</a></p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612691671/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/167115960","html_url":"https://github.com/apache/storm/pull/971#issuecomment-167115960","issue_url":"https://api.github.com/repos/apache/storm/issues/971","id":167115960,"node_id":"MDEyOklzc3VlQ29tbWVudDE2NzExNTk2MA==","user":{"login":"vesense","id":6711230,"node_id":"MDQ6VXNlcjY3MTEyMzA=","avatar_url":"https://avatars.githubusercontent.com/u/6711230?v=4","gravatar_id":"","url":"https://api.github.com/users/vesense","html_url":"https://github.com/vesense","followers_url":"https://api.github.com/users/vesense/followers","following_url":"https://api.github.com/users/vesense/following{/other_user}","gists_url":"https://api.github.com/users/vesense/gists{/gist_id}","starred_url":"https://api.github.com/users/vesense/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vesense/subscriptions","organizations_url":"https://api.github.com/users/vesense/orgs","repos_url":"https://api.github.com/users/vesense/repos","events_url":"https://api.github.com/users/vesense/events{/privacy}","received_events_url":"https://api.github.com/users/vesense/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-12-24T14:01:55Z","updated_at":"2015-12-24T14:01:55Z","author_association":"MEMBER","body":"@harshach Done.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/167115960/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612691903","html_url":"https://github.com/apache/storm/issues/5248#issuecomment-2612691903","issue_url":"https://api.github.com/repos/apache/storm/issues/5248","id":2612691903,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTE5MDM=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-12-24T14:01:56Z","updated_at":"2025-01-24T14:40:48Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user vesense commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/971#issuecomment-167115960\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/971#issuecomment-167115960</a></p>\n\n<p>    @harshach Done.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612691903/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/167116302","html_url":"https://github.com/apache/storm/pull/971#issuecomment-167116302","issue_url":"https://api.github.com/repos/apache/storm/issues/971","id":167116302,"node_id":"MDEyOklzc3VlQ29tbWVudDE2NzExNjMwMg==","user":{"login":"vesense","id":6711230,"node_id":"MDQ6VXNlcjY3MTEyMzA=","avatar_url":"https://avatars.githubusercontent.com/u/6711230?v=4","gravatar_id":"","url":"https://api.github.com/users/vesense","html_url":"https://github.com/vesense","followers_url":"https://api.github.com/users/vesense/followers","following_url":"https://api.github.com/users/vesense/following{/other_user}","gists_url":"https://api.github.com/users/vesense/gists{/gist_id}","starred_url":"https://api.github.com/users/vesense/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vesense/subscriptions","organizations_url":"https://api.github.com/users/vesense/orgs","repos_url":"https://api.github.com/users/vesense/repos","events_url":"https://api.github.com/users/vesense/events{/privacy}","received_events_url":"https://api.github.com/users/vesense/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-12-24T14:04:13Z","updated_at":"2015-12-24T14:04:13Z","author_association":"MEMBER","body":"Since the change is included in #974, I will close this PR.\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/167116302/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612691907","html_url":"https://github.com/apache/storm/issues/5248#issuecomment-2612691907","issue_url":"https://api.github.com/repos/apache/storm/issues/5248","id":2612691907,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTE5MDc=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-12-24T14:04:14Z","updated_at":"2025-01-24T14:40:48Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user vesense commented on the pull request:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/971#issuecomment-167116302\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/971#issuecomment-167116302</a></p>\n\n<p>    Since the change is included in #974, I will close this PR.</p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612691907/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612691911","html_url":"https://github.com/apache/storm/issues/5248#issuecomment-2612691911","issue_url":"https://api.github.com/repos/apache/storm/issues/5248","id":2612691911,"node_id":"MDEyOklzc3VlQ29tbWVudDI2MTI2OTE5MTE=","user":{"login":"jira-importer","id":99357308,"node_id":"U_kgDOBewSfA","avatar_url":"https://avatars.githubusercontent.com/u/99357308?v=4","gravatar_id":"","url":"https://api.github.com/users/jira-importer","html_url":"https://github.com/jira-importer","followers_url":"https://api.github.com/users/jira-importer/followers","following_url":"https://api.github.com/users/jira-importer/following{/other_user}","gists_url":"https://api.github.com/users/jira-importer/gists{/gist_id}","starred_url":"https://api.github.com/users/jira-importer/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/jira-importer/subscriptions","organizations_url":"https://api.github.com/users/jira-importer/orgs","repos_url":"https://api.github.com/users/jira-importer/repos","events_url":"https://api.github.com/users/jira-importer/events{/privacy}","received_events_url":"https://api.github.com/users/jira-importer/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-12-24T14:04:15Z","updated_at":"2025-01-24T14:40:49Z","author_association":"COLLABORATOR","body":"<i><a href=\"https://issues.apache.org/jira/secure/ViewProfile.jspa?name=githubbot\">githubbot</a>:</i>\n<p>Github user vesense closed the pull request at:</p>\n\n<p>    <a href=\"https://github.com/apache/storm/pull/971\" class=\"external-link\" target=\"_blank\" rel=\"nofollow noopener\">https://github.com/apache/storm/pull/971</a></p>","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/2612691911/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null},{"url":"https://api.github.com/repos/apache/storm/issues/comments/167118042","html_url":"https://github.com/apache/storm/pull/974#issuecomment-167118042","issue_url":"https://api.github.com/repos/apache/storm/issues/974","id":167118042,"node_id":"MDEyOklzc3VlQ29tbWVudDE2NzExODA0Mg==","user":{"login":"vesense","id":6711230,"node_id":"MDQ6VXNlcjY3MTEyMzA=","avatar_url":"https://avatars.githubusercontent.com/u/6711230?v=4","gravatar_id":"","url":"https://api.github.com/users/vesense","html_url":"https://github.com/vesense","followers_url":"https://api.github.com/users/vesense/followers","following_url":"https://api.github.com/users/vesense/following{/other_user}","gists_url":"https://api.github.com/users/vesense/gists{/gist_id}","starred_url":"https://api.github.com/users/vesense/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/vesense/subscriptions","organizations_url":"https://api.github.com/users/vesense/orgs","repos_url":"https://api.github.com/users/vesense/repos","events_url":"https://api.github.com/users/vesense/events{/privacy}","received_events_url":"https://api.github.com/users/vesense/received_events","type":"User","user_view_type":"public","site_admin":false},"created_at":"2015-12-24T14:24:36Z","updated_at":"2015-12-24T14:24:36Z","author_association":"MEMBER","body":"@harshach @zhuoliu I have rebased the PR. Could you take a look?\n","reactions":{"url":"https://api.github.com/repos/apache/storm/issues/comments/167118042/reactions","total_count":0,"+1":0,"-1":0,"laugh":0,"hooray":0,"confused":0,"heart":0,"rocket":0,"eyes":0},"performed_via_github_app":null}]